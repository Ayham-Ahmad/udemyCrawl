{
  "courses": [
    {
      "title": "The Ultimate Python Unit Testing Course",
      "url": "https://www.udemy.com/course/python-unit-testing/",
      "bio": "This course is all you need to become a master python tester.",
      "objectives": [
        "You will learn how to write professional Unit Tests in python",
        "You will learn how to write compete programs given only Unit Tests",
        "You will learn how to write effective tests that ensures that your code works",
        "You will learn best practices on how to organize your Unit Tests"
      ],
      "course_content": {
        "Introduction To Testing": [
          "Starting a New Project",
          "What is Software Testing?",
          "Why is Testing Significant?",
          "Automated Testing Vs Manual Testing",
          "What Are The Two Methods of Automated Testing?",
          "What Are The Three L"
        ],
        "Let's Get Our Hands Dirty": [
          "Installing unittest",
          "Best Practices On Organizing Your Tests?"
        ],
        "Testing Functions": [
          "What Is This Section All About?",
          "Implementing The First Program",
          "Easy Tests",
          "Medium Tests",
          "Hard Tests",
          "Download The Complete Project"
        ],
        "Coding Challenge #1 - Testing Functions": [
          "Explaining The Challenge",
          "Step 1 - Download the Skeleton Project",
          "Step 2 - Import Your Project",
          "Step 3 - Implementing Easy Tests",
          "Step 4 - Implementing Medium Tests",
          "Step 5 - Implementing Hard Tests",
          "Optional - Solution For Coding Challenge #1"
        ],
        "Testing Classes": [
          "What Is This Section All About?",
          "Implementing The Second Program",
          "Easy Tests",
          "Medium Tests",
          "Hard Tests",
          "Download The Complete Project"
        ],
        "Coding Challenge #2 - Testing Classes": [
          "Explaining The Challenge",
          "Step 1 - Download the Skeleton Project",
          "Step 2 - Import Your Project",
          "Step 3 - Implementing Easy Tests",
          "Step 4 - Implementing Medium Tests",
          "Step 5 - Implementing Hard Tests",
          "Optional - Solution For Coding Challenge #2"
        ],
        "Testing Console Printed OutPut": [
          "What Is This Section All About?",
          "Implementing The Third Program",
          "Implementing All The Tests For Our Program",
          "Download The Complete Project"
        ],
        "Coding Challenge #3 - Testing Console Printed OutPut": [
          "Explaining The Challenge",
          "Step 1 - Download the Skeleton Project",
          "Step 2 - Import Your Project",
          "Step 3 - Test Printed OutPut",
          "Optional - Solution For Coding Challenge #3"
        ],
        "Testing Efficiency": [
          "What Is This Section All About?",
          "Why & When You Should Test For Efficiency?",
          "Implementing The Fourth Program",
          "Implementing The Efficiency Tests",
          "Download The Complete Project"
        ],
        "Coding Challenge #4 - Testing Efficiency": [
          "Explaining The Challenge",
          "Step 1 - Download the Skeleton Project",
          "Step 2 - Import Your Project",
          "Step 3 - Implementing Two Tests",
          "Optional - Solution For Coding Challenge #4",
          "An Embarrassing Mistake In The Previous Optional Video"
        ]
      },
      "requirements": [
        "Minimum 3 months programming in Python"
      ],
      "description": "No software products should ever be shipped to the user without being tested. Making sure that your code works by writing effective, powerful, and sophisticated tests is a must in today's competitive world. This course is designed to turn you from a complete beginner to an expert in using the python Unit Test library. You will learn:\n1- how, why, and when should you test your project?\n2- how to test functions, classes, efficiency, and console print output?\n3- how to organize your test files and test cases?\n4- what, when, why, and how to use the test driven development method?\nAnd more!\nThis course will be the best investment that you've ever made since we will build 11 projects that will ensure that you're extremely comfortable with testing.",
      "target_audience": [
        "Anyone new to Unit Testing and who wants to master Unit Testing",
        "Anyone who wants to build better quality software with fewer bugs",
        "Any developers who want to transition to a senior level"
      ]
    },
    {
      "title": "10 ISTQB Foundation Level V4.0 Sample Exams",
      "url": "https://www.udemy.com/course/istqb-foundation-level-syllabus-sample-exams/",
      "bio": "10 sample exams to help you in preparing for the V4.0 exam, each exam in the course includes two exams",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ISTQB Foundation Level V4.0 was released in 2023, and many resources that are available online are not updated to the new V4.0 content. Studying outdated content may mislead you while you are studying V4.0.\nI guarantee you that this course is updated to the latest syllabus V4.0.\nIn Udemy, you are only allowed to add 6 practice tests in each course, this is why I added 80 questions in each sample exam, the course includes a total of 5 sample exams, each contains 80 questions (2 sample exams), this is why the course includes 10 sample exams embedded in 5 sample exams.\n\n\nDuring my career, I helped thousands of students pass different ISTQB Certificates. I also hold 9 different ISTQB Certificates ranging from ISTQB Foundation Level until Advanced Level Test Management, this is why I'm an expert in this topic.\n\n\nAbout me:\n-ISTQB Adavnced Level Test Management Certified Tester\n-ISTQB Certified Test Analyst\nISTQB Advanced Level Certified Agile Technical Tester\nISTQB Foundation level Certified Tester\nISTQB Agile Extension Certified Tester\nISTQB Certified Mobile Application Tester\nASTQB Certified Mobile Tester\nBest QA at Testathon Egypt 2017\nBest QA at Testaton Egypt 2020\nMore than 7 years of experience in the Software Testing field",
      "target_audience": [
        "QA Engineers",
        "Software Testers",
        "QA Managers"
      ]
    },
    {
      "title": "Scrum Testing: Learn Testing in Agile and Scrum from A to Z",
      "url": "https://www.udemy.com/course/testing-mastery-in-agile-and-scrum/",
      "bio": "A Complete Expert Advice for Scrum Beginners: Agile and Scrum Testing. Learn Software Testing and QA in Agile and Scrum",
      "objectives": [
        "Traditional vs. Agile Testing",
        "What are an agile tester and Management expectations?",
        "The agile testing mindset",
        "What is Agile Testing and Agile Test Plan?",
        "Agile Testing Strategies",
        "Agile Metrics",
        "The Agile Testing Quadrants",
        "Important guidelines before you start testing",
        "Testing Documents and Documentation",
        "QA challenges with agile software development",
        "Scrum Testing",
        "Role of Tester in Scrum",
        "Testing Activities in Scrum",
        "Test Reporting",
        "Agile Automation Testing",
        "How to automate in Agile Methodology",
        "Agile Automation Tools",
        "Automation Testing Concepts when Applied to Agile",
        "Risks of Automation in Agile",
        "Barriers to successful agile adoption by test teams",
        "Testing Toolkit",
        "Tips and Tricks for testers",
        "Agile Testing Interview Questions & Answers"
      ],
      "course_content": {
        "STARTING POINT": [
          "Course Intro",
          "Course Introduction and Overview",
          "The Truth about Software Testing",
          "Job Titles for Software Testers",
          "What makes the testing process valuable and testers valuable?",
          "The Smartphone Challenge",
          "5 things that make testing special?",
          "What type of tester do you want to become?",
          "Continuous Learning in Software Testing"
        ],
        "TESTING MINDSET": [
          "Introduction to the Testing Mindset",
          "6 Decisions That Separate $80k Testers from $40k Testers",
          "3 Areas in Which Software Testers Must Grow",
          "Developing Reputation as A Software Tester",
          "Software Testing Is the Art Of Discovering Ground Truth",
          "The useless question of How many test cases have you completed?",
          "Intellectual Software Testing",
          "How to think and act as a tester?",
          "Why Communication Matters In Testing?"
        ],
        "FOUNDATIONS OF SOFTWARE TESTING": [
          "Courage to Question Safe Assumptions",
          "Introduction to Testing Spectrum And Principles",
          "Testing Techniques You Should Know",
          "Why Software Testing Is Essential For Business Success",
          "How to Ensure Quality And Efficiency In Software Development Through Testing",
          "An Introduction to Agile Testing",
          "What Is Agile Methodology And It's Implications to Software Development",
          "Traditional vs. Agile testing (Software Testing)"
        ],
        "DIFFERENT TEST (TESTING) TYPES AND APPROACHES": [
          "The Importance of Comprehensive Software Testing",
          "Introduction to Unit Testing And Integration Testing",
          "Introduction to System Testing And Acceptance Testing",
          "Testing Requirements",
          "Performance Testing",
          "Security Testing",
          "How to develop security test cases?"
        ],
        "TESTING METHODOLOGIES": [
          "Manual Testing - What You Need To Know + Assignment",
          "How to Write More Effective Test Cases",
          "Test Automation Is Not What You Think",
          "Automation Testing – The Core Principles You Can't Ignore",
          "The Test Automation Pyramid"
        ],
        "AGILE TESTING CONCEPTS": [
          "What it really means to be an agile tester?",
          "What Is Agile Testing, Plan, and Strategies",
          "Agile Test Plan",
          "How to Create Your First Software Testing Strategy",
          "Introduction to Agile Metrics",
          "The Agile Testing Quadrants",
          "Important Guidelines Before You Start Testing",
          "Testing Documentation",
          "Understanding Test Reports",
          "Overcoming Challenges in Agile Quality Assurance"
        ],
        "SCRUM AND TESTING": [
          "Scrum And Testing Connection",
          "The Role of A Tester In Scrum And Test Data Preparation",
          "Practical Testing Activities In Scrum",
          "Introduction to Test Metrics",
          "How to fit testing into the current sprint?",
          "The Optimal Collaboration on User Stories Between Programmers And Testers"
        ],
        "TESTING TOOLS": [
          "Introduction to Testing Tools",
          "Selecting the Right Testing Tools",
          "Expand Your Testing Toolkit to Save Time And Work Smarter"
        ],
        "PRACTICAL CONSIDERATIONS FOR FUTURE SOFTWARE TESTERS": [
          "Overcoming Barriers to Agile Adoption In Testing Teams",
          "Tips and Tricks For Testers",
          "Agile Testing Interview Questions & Answers"
        ],
        "COURSE CONCLUSION": [
          "Testing As Insurance",
          "Q&A Session on Software Testing",
          "Course Conclusion"
        ]
      },
      "requirements": [
        "There are no pre-requisites for this course. I explain everything from the ground up",
        "It would be nice if you have some Agile and Scrum knowledge... but not necessary"
      ],
      "description": "Are you an Agile Tester, Scrum Master, Product Owner, QA Engineer, or Developer looking to improve your software quality and streamline your testing process?\nAre you frustrated by the slow pace and inefficiencies of traditional software testing?\nDo you struggle to keep up with rapid Agile development cycles or feel uncertain about when your testing work is “done”?\nThis course is your complete guide to mastering Agile and Scrum Testing—from foundational principles to advanced strategies.\nLed by Dejan, a seasoned Agile Coach, Scrum Master, and Product Owner with 60+ international IT certifications, this course empowers you with the knowledge, tools, and confidence to test smarter and deliver value faster.\nWhether you're starting your career in software testing or managing Agile teams, this course will meet you where you are—and take you further.\n\n\nWhat You’ll Learn:\nThe real value of software testing and how to align it with Agile principles.\nHow testing fits into Scrum events and sprints (with real-life examples).\nTesting mindsets, metrics, roles, and documentation tailored for Agile.\nCore testing techniques, tools, and types—manual, automated, security, performance, and more.\nAgile test strategies, test plans, and testing quadrants explained.\nThe Tester’s role in Scrum and how to collaborate effectively with developers.\nTemplates, checklists, and interview Q&A to help you apply knowledge immediately.\n\n\nWhy This Course Stands Out\n10 structured modules covering the full spectrum of Scrum Testing\nTaught by a certified expert with real-world experience in Agile delivery\nIncludes templates, assignments, and real-world best practices\nNo prerequisites—perfect for beginners or pros transitioning into Agile\n\n\nWho Should Enroll?\nJunior QA Engineers aiming to level up fast\nScrum Masters and Product Owners seeking better collaboration with testers\nDevelopers who want to understand the testing side of Agile\nBusiness leaders looking to integrate quality into Agile delivery\nAnyone interested in Scrum Testing, Agile QA, or Agile transformation\n\n\nWhat You’ll Walk Away With\nA complete Agile Testing framework, mindset, and toolkit\nConfidence to test within Scrum teams from day one\nPractical experience through dynamic lectures, challenges, and walkthroughs\nClarity on which tests matter most, when to execute them, and how to document effectively\nDon't waste more time with outdated testing approaches.\nJoin Scrum Testing: Learn Agile and Scrum Testing from A to Z and start transforming the way you build and test software—faster, smarter, and with more confidence.\nENROLL NOW!",
      "target_audience": [
        "People who got their first Agile Tester job and don't know where to start",
        "People who want to learn quickly about Scrum tester, Agile tester and Software development",
        "Senior executives who wish to actively promote agile concepts across business teams and to link those concepts directly to business-related outcomes",
        "People who want to learn why Agile is important",
        "Scrum Masters and Agile Coaches",
        "Scrum testers",
        "Agile Testers",
        "Product Owners",
        "Scrum Masters",
        "Developers"
      ]
    },
    {
      "title": "Web & API Automation by KATALON STUDIO(Best for Newbies)",
      "url": "https://www.udemy.com/course/katalonstudio/",
      "bio": "Katalon Studio | Katalon Recorder| Katalon Analytics | Scripting | Code Management | Reporting |BDD TestCases|Framework",
      "objectives": [
        "Real-time experience of Web & API Automation using Katalon Studio",
        "Best practices that we need to follow in Web & API automation",
        "Advance understanding of WebServices & API Testing",
        "Advance understanding of Groovy Scripting programming language",
        "End to End REST API automation using Katalon Studio & Groovy Programming",
        "Step by Step Setup and Framework implementation",
        "Best Practices & Interview Questions"
      ],
      "course_content": {
        "Introduction to Katalon Studio & Step by Step Setup": [
          "Katalon Studio Introduction | Advantages of Katalon studio",
          "Step by Step Setup with pre-requisites",
          "Environment Walkthrough"
        ],
        "Start Writing Test Case..": [
          "Recording in Katalon Studio : Web Based Application",
          "Katalon Recording with Verify Options",
          "Write Test Case Manually",
          "Kalaton Studio : Write Test Case By Scripting"
        ],
        "Working With Object | Object Spy": [
          "Work with Object Spy(Web Spy)"
        ],
        "Get Expertise in CSS and XPath": [
          "What is Element Locators | Setup Plugins",
          "Basics of HTML",
          "CSS Element Locator - Syntax 1",
          "CSS Element Locator - Syntax 2",
          "CSS Element Locator - Syntax 3",
          "CSS Element Locator - Syntax 4",
          "CSS Element Locator - Syntax 5",
          "Xpath Element Locator - Syntax 1",
          "Xpath Element Locator - Syntax 2",
          "Xpath Element Locator - Syntax 3",
          "Xpath Element Locator - Syntax 4",
          "Xpath Element Locator - Syntax 5",
          "Xpath Element Locator - Syntax 6",
          "Xpath Element Locator - Syntax 7",
          "Xpath Element Locator - Syntax 8",
          "Xpath Element Locator - Syntax 9",
          "Xpath Element Locator - Syntax 10",
          "Xpath Element Locator - Syntax 11"
        ],
        "Use CSS and Xpath in Katalon Studio": [
          "Locate Element by CSS",
          "Locate Element By Xpath - Part 1",
          "Locate Element By Xpath - Part 2",
          "Locate Element By Xpath - Part 3",
          "Manually add Locator to Object Repository"
        ],
        "Different Operations on Browser Level": [
          "Open | Maximize | Close Browser",
          "Navigate URL | Back , Forward & Refresh Button",
          "Get Page URL & Get Page Title",
          "Browser Operation By Coding"
        ],
        "Work on Different Elements": [
          "Work on TextBox",
          "Work on Checkbox & Radio Button",
          "Work on Link & Button",
          "Work on Dropdown & List",
          "Create & Use Variables"
        ],
        "Advance Interactive on Application": [
          "Mouse Operation - Right Click and Double Click",
          "Mouse Operation - Mouse Over",
          "Mouse Operation - Scrolling on the page",
          "Execute JavaScript at Runtime",
          "Take Screenshot",
          "Perform Keyboard Operations"
        ],
        "Condition handling and Looping": [
          "IF Condition",
          "IF - Else Condition",
          "IF - Else If - Else Condition"
        ],
        "Test Suites": [
          "Create Test Suite",
          "Create Test Suite Collection",
          "Generate Reports"
        ]
      },
      "requirements": [
        "Basic understanding of Manual Testing",
        "Basic understanding of Windows Operating System",
        "Basic understanding of Automation Concepts, Need of Automation"
      ],
      "description": "It is a comprehensive toolset for Web and Api application automation testing. This tool includes a full package of powerful features that help overcome common challenges in web UI test automation, for example, pop-up, iFrame, and wait-time.\nThis user-friendly and versatile solution help testers test better, work faster, and launch high quality software thank to the intelligence it provides to the entire test automation process.\nIt is a comprehensive toolset for Web and Api application automation testing. This tool includes a full package of powerful features that help overcome common challenges in web UI test automation, for example, pop-up, iFrame, and wait-time.\nThis user-friendly and versatile solution help testers test\nHere we are going to cover\n-  Web Application Automation using Record and Play\n-  Web Application Automation using Keywords\n-  Web Application Automation using Coding\n- Object Repository Concept\n-  API Testing using Katalon Studio\n-  BDD Automation\n-  Use Java in Katalon studio\n-  End to End Locators\n-  Best Practices\n- Scripting (Groovy Language)\n- Realtime project implementation\nIt is a comprehensive toolset for Web and Api application automation testing. This tool includes a full package of powerful features that help overcome common challenges in web UI test automation, for example, pop-up, iFrame, and wait-time.\nThis user-friendly and versatile solution help testers test better, work faster, and launch high quality software thank to the intelligence it provides to the entire test automation process.",
      "target_audience": [
        "Manual Tester looking opportunity in Automation",
        "Automation Testers looking to Automate Web, API using Katalon studio",
        "Fresher looking opportunity in Software Testing",
        "Any professional want to start Automation using Katalon Studio"
      ]
    },
    {
      "title": "Test Reporting - Know-How & Templates for Test Managers",
      "url": "https://www.udemy.com/course/testreporting-know-how-for-testmanagers/",
      "bio": "Increase transparency with status reports, identify critical issues and execute counter measures during software testing",
      "objectives": [
        "Explain the objectives of test reporting",
        "Create a test report for test preparation, test execution and defect management",
        "Analyse test reports and identify typical issues"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Three simple tips",
          "General Course Structure",
          "Exercise",
          "How to best use this course"
        ],
        "Test preparation": [
          "Test Preparation",
          "Test Preparation - Plan",
          "Test Preparation - Status & Forecast",
          "Test Preparation - Examples",
          "Test Preparation - Summary",
          "Test Preparation - Exercise",
          "Test preparation - Exercise"
        ],
        "Test execution": [
          "Test Execution",
          "Test Execution - Plan",
          "Test Execution - Status",
          "Test Execution - Examples",
          "Test Execution - Summary",
          "Test Execution - Exercise",
          "Test execution - Exercise"
        ],
        "Defects": [
          "Defects",
          "Defects - Plan & Status",
          "Defects - Summary",
          "Defects - Exercise",
          "Defects - Exercise 2"
        ],
        "Summary": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of test management: test preparation, test execution and defect management"
      ],
      "description": "Test is one of the key phases during the development of a new software. Project managers and stakeholders have a great interest in a current test status .\nTake this course in order to learn how to create a fact-based test reporting - for test preparation, test execution and defect reporting. You will learn how to quickly identify typical issues in software testing using test reports and how to mitigate them.\nUse the acquired knowledge and templates in order to achieve an on-time go-live of your software and to increase software quality!",
      "target_audience": [
        "Test Manager",
        "Software testers interested in test reporting",
        "Stakeholders interested in test reporting"
      ]
    },
    {
      "title": "MasterClass Software Testing with Jira & Agile -Be a QA Lead",
      "url": "https://www.udemy.com/course/learn-software-testing-in-practical-become-a-qa-expert/",
      "bio": "Straight to the point. 2025 BEST job oriented Software Manual Testing course on real time Projects + Interview questions",
      "objectives": [
        "Crystal clear understanding on how Software Projects are handled in real time with Live examples",
        "In Depth understanding of current Software Testing methodologies with Manual testing tools followed in the Industry",
        "Understand JIRA (Project management tool) and Tester activities in the Jira from Scratch",
        "Thorough knowledge on latest Practices like Agile scrum, SDLC, Testdriven, Behaviour driven approaches",
        "In Depth knowledge on writing test cases in Jira using Xray app on Live Project",
        "Strong exposure on designing test cases and defect life cycle process",
        "Complete knowledge on QA process starting from requirement gathering to Project delivery",
        "Testing types and their real time usages in Projects at different stages",
        "Top 50 Frequently asked Software testing Interview questions with Solutions",
        "Basic knowledge of SQL"
      ],
      "course_content": {
        "Introduction": [
          "Course FAQ's (Must watch)",
          "Course WalkThrough"
        ],
        "part 1- QA Role in Agile Scrum using Jira - Real time Project": [
          "Getting started with the project to work on",
          "Important Player Tips for Best learning Experience:",
          "Setup Jira Account & Create Agile Scrum Project in Jira",
          "What are Epics & User stories in Agile? And how different they are",
          "Create epics and User stories in Jira",
          "What are components,Release versions and and how they are created in Jira",
          "Defining Userstory Description to reflect Business value",
          "Knowledge Check on Section-2"
        ],
        "Part 2- QA Role in Agile Scrum using Jira - Real time Project": [
          "What is Backlog refinement meeting/Grooming in Agile Scrum?",
          "Creating Subtasks and Defining Acceptance criteria in Jira for Userstories",
          "What is Sprint and its importance in Agile Scrum",
          "Exploring Scrum board and workflow in Jira",
          "Creating Bugs and Checking Sprint reports in Jira",
          "Importance of Retrospective in Agile Scrum Practise",
          "What is Kan ban Board in Agile",
          "Check Your Knowledge !!"
        ],
        "QA's Mind set/ Strategy in designing Test Cases for the Product": [
          "How Project Architectural knowledge helps QA to come up with tests",
          "how Tester should define tests when Project backend is designed by API's",
          "Understanding different type of Testings involved in testing a Single Scenario",
          "Given a requirement- How Should QA should start thinking out of box - example",
          "Knowledge Check on Section-4"
        ],
        "Understand Testcase design format and Document them in Jira through Xray plugin": [
          "Learn Test Scenario vs Test case vs Test steps vs precondition with example",
          "Introduction to Xray App in Jira and its terminologies",
          "Creating Test Cases , Preconditions & Test Sets in Jira Xray",
          "Importance of Test Plan in Xray and how to create to add tests into it",
          "What is test Execution and how it is interlinked with Test plan in Jira",
          "Important Note on Test plan terminologies"
        ],
        "Understand Testing Life Cycle, Test Plan and Closure Activities": [
          "Important Note about this Section",
          "Introduction to Software Testing Life cycle",
          "What is Test Plan? And How to prepare test plan",
          "Test Case development phase and what you need to know here",
          "What are Test Environments? Real time examples",
          "Importance of Requirement Traceability Matrix",
          "Test Closure Activities after Project is delivered",
          "download Notes",
          "Download and Install Jira"
        ],
        "Understand Defect Life cycle in depth with Severity and Priority terms": [
          "Troubleshoot options when you find bug in application",
          "Verifying App server logs to understand the issues in application",
          "How to create defect with the complete details of bug",
          "Differences between Severity and Priority of Defect",
          "Live example to understand priority and severity of Defect",
          "Smart ways of Retesting the defect- Interview question",
          "Material download",
          "Check Your Knowledge !!"
        ],
        "Types of testing-Understand real time usage": [
          "What is Regression testing and when do we need it?",
          "What is Smoke/Sanity Testing? How important it is in build process",
          "Difference between Integration and Component Testing",
          "Verification and validation",
          "Load Testing and Stress Testing",
          "Lecture Notes",
          "Check Your Knowledge !!"
        ],
        "Functional&Non Functional Requirements Testing scope": [
          "Understand difference between Functional and Non Functional reqs",
          "Differences between Blackbox and whitebox Testing",
          "Knowledge Check on Section-9"
        ],
        "End to end testing an App with Bugzilla Tool Demo": [
          "Sample Application to derive Test Cases",
          "TestCases continued for the ecommerce App",
          "Test Execution for all test cases and update the result status",
          "Introduction to Bugzilla tool and how to create a bug",
          "Adding More details to bug with understanding of all the fields"
        ]
      },
      "requirements": [
        "None, All prerequisites are taken care as part of course",
        "No testing experience is required. Everything is explained from the Scratch in this tutorial"
      ],
      "description": "Course last Updated - Jan 2nd - QA Behavioral Interview Questions & Test Plan Prep videos\nGain  7+ Years  Real time  experience as a ( Team/QA Lead) level by just following through this course\n\" One Single Course to Master everything in Software World. \" Learn on Agile Scrum Practices, Software Development Life cycle, QA Process, Software Testing methodologies , and Project management tools like Jira, Bugzilla etc.\nAre you struggling to know what happens in Software World to deliver the Project ?\nDo you want to gain the Project Lead level skills with out any prior real time experience ?\nIf YES this course is right choice for you\nI will also be your Life time mentor in giving you right directions for your Project needs\nHow this Course is Organized?\nBelow are the topics we will focus on section wise.  And there is very  much depth discussion on each topic below\nUnderstand how Software Projects is handling in Agile Environments\nWe shall be using Jira (Project tracking tool) to demonstrate the process\nHow Software Testing is handled in traditional software development life cycle.\nGet familiar with different types of Testing available and their usage in real time projects\nThorough Understanding of Jira and Bugzilla tool for Project Management\nHow to write Edge Test cases with out of box thinking and understand the process of Defect life cycle\nSQL Basics\n\n\nAnd below are the keywords which you will come across and learn in this course\nSoftware Testing\nAgile Scrum\nAgile Kanban\nSDLC\nWater fall model\nOut of box thinking in designing Testcases\nTest plan\nTesting types and their usage\nReal time project demonstration End to end on Jira tool\nBugzilla\nDefect Life cycle\nTest Plan Design\nScrum Master skills\nSQL\nTest Driven and Behavioral Driven development\n\n\nWish you All the Best !",
      "target_audience": [
        "Any one who are looking to start carrier in Software Testing",
        "People who do not have any experience in Software Industry but want to get in by showing Real experience",
        "People who need to master in Project/Test management tools like JIRA and Bugzilla",
        "Fresher Graduates who are looking for Job in IT field",
        "For Manual Testers, Scrum Masters and Project Lead who need to implement Best Practises of Current Software Industry"
      ]
    },
    {
      "title": "Advanced Automation Testing with Quick Test Pro (QTP) or UFT",
      "url": "https://www.udemy.com/course/automation-testing-using-quick-test-pro-qtp-training/",
      "bio": "Become an expert automation tester through this award winning HP Quick Test Professional (QTP)/ UFT course",
      "objectives": [
        "Students will achieve clear understanding of QTP/UFT installation overview, QTP checkpoints, parameterization, variables, output values, advanced descriptive programming, environment variables, VB script functions, read/write excel, error handling, datadriven, keyworddriven, and hybrid framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to QTP",
          "Installing UFT (newer version of QTP)",
          "UFT Features and Menu Options (newer features in UFT)",
          "Getting started with QTP Installation",
          "Finalizing QTP Installation",
          "Final touches for QTP installation process.",
          "Getting started with QTP",
          "Getting in depth with QTP"
        ],
        "Basic": [
          "How to use QTP Checkpoints",
          "Mastering QTP checkpoints",
          "How to use QTP parameterization",
          "Finalizing QTP parameterization",
          "QTP Variables",
          "Object Repositories",
          "Using QTP Output Values",
          "Getting in depth with QTP output values",
          "More details on QTP output values",
          "Mastering output values",
          "Descriptive programming in QTP",
          "Getting hands-on with descriptive programming",
          "More details on descriptive programming",
          "More in depth about descriptive programming"
        ],
        "Mid-Level": [
          "Getting into advanced level of descriptive programming",
          "Different methods of DP",
          "Finalizing descriptive programming",
          "Final touches on descriptive programming",
          "Environment Variables",
          "More about environment variables",
          "How to create QTP functions",
          "Continuing QTP function concepts"
        ],
        "Advanced": [
          "Finalizing QTP functions",
          "Overview of datadriven framework",
          "Getting started with QTP datadriven framework",
          "More about datadriven framework",
          "Advanced datadriven framework concepts",
          "Getting in depth with datadriven framework",
          "Finalizing datadriven concept",
          "Final touches on datadriven framework",
          "How to read excel from QTP",
          "Finalizing QTP read excel",
          "Error handling in QTP",
          "Additional information on DDF",
          "How to write to excel files",
          "Completing excel write functions",
          "Hybrid Framework",
          "More about hybrid framework",
          "Overview of the framework",
          "Other ways of writing test results",
          "Scripts and files"
        ]
      },
      "requirements": [
        "Basic understanding of QA fundamentals"
      ],
      "description": "Udemy's Best Seller in QTP/UFT since 2014!\n**Course & materials are last updated on November 27th, 2018- Over 33,000 students enrolled worldwide**\nA community of over 33,000 students worldwide and still counting! This is another award winning and popular course from us and we are showcasing it on Udemy for the first time. Just like our other courses, we have kept all the intro and basic course videos for free and available for preview for your convenience so please feel free to explore and test drive it. If you want to become a master in QTP/UFT, look no further and don't lose the opportunity.\nUnified Functional Testing, UFT (previously known as HP Quick Test Professional or QTP)  does cost a fortune but it's still a market leader in the automation testing industry. Nowadays, many open source and low-cost automation tools came into play but QTP/UFT is still popular for its advanced features and controls. QTP/UFT provides a better control over our automation process. It is suitable for people with non-programming and programming backgrounds. QTP supports VB script for customization and better control which is easy to learn. However, it has been difficult to find a end-to-end QTP training solution for basic and advanced QTP concepts. It is essential to have advanced QTP skills to be able to gain competitive advantages in today's market. QAEversity is committed to provide a unique learning experience for delivering QTP training online. In this course, we cover all the important aspects of QTP starting from the very basics to the most advanced level concepts. This course treats every student as a freshman and explains each and every single step thoroughly. It can be a great source to brush up a specific topic or master the entire course. This course covers basic and advanced topics including, QTP installation overview, QTP checkpoints, parameterization, variables, output values, advanced descriptive programming, environment variables, VB script functions, read/write excel, error handling, data driven, keyword driven, and hybrid framework.",
      "target_audience": [
        "QA Professionals",
        "Automation Testers"
      ]
    },
    {
      "title": "Selenium WebDriver 4 - New Features in Detail!",
      "url": "https://www.udemy.com/course/selenium-webdriver-4-new-features-in-detail/",
      "bio": "Learn all there is to know about Selenium WebDriver 4 in easy to follow steps. 100+ downloadable code examples!",
      "objectives": [
        "All the new key features that are being delivered in Selenium Webdriver 4",
        "Understand each feature with clear and easy to follow examples",
        "Become confident with Selenium Webdriver 4 and learn how to adopt the design changes",
        "Build on your automation testing skillset and to stay up to date with the very latest advancements"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important: Selenium 'New' Documentation (API)",
          "Selenium 'New' Documentation (API)",
          "Selenium Changelog",
          "Future Course Updates",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)"
        ],
        "W3C WebDriver Protocol": [
          "WebDriver W3C Protocol – Part 1/2",
          "WebDriver W3C Protocol – Part 2/2",
          "W3C Practical Example – Part 1/3",
          "W3C Practical Example – Part 2/3",
          "W3C Practical Example – Part 3/3"
        ],
        "Project Setup & Selenium Libraries": [
          "Java JDK - Setup",
          "Maven - Setup",
          "IntelliJ - Setup",
          "Project Creation",
          "Important - Please Read!",
          "Selenium Dependencies"
        ],
        "Browser Requirements & Options": [
          "Driver requirements – Part 1/2",
          "Driver requirements – Part 2/2",
          "Browser Options (Capabilities) – Part 1/2",
          "Browser Options (Capabilities) – Part 2/2",
          "Driver Factory / Hooks – Setup – Part 1/2",
          "Driver Factory / Hooks – Setup – Part 2/2"
        ],
        "Waits - New Strategy!": [
          "Page Loading Strategy – Part 1/2",
          "Page Loading Strategy – Part 2/2",
          "WebDriverWait - (Explicit Wait)",
          "WebDriverWait - (Fluent Wait )"
        ],
        "Handling Windows": [
          "Old Approach - Part 1/3",
          "Old Approach - Part 2/3",
          "Old Approach - Part 3/3",
          "New Tab - Part 1/3",
          "New Tab - Part 2/3",
          "New Tab - Part 3/3",
          "New Window",
          "Minimize Window"
        ],
        "Relative Locators": [
          "Introduction",
          "above - Part 1/2",
          "above - Part 2/2",
          "below - Part 1/2",
          "below - Part 2/2",
          "toRightOf & toLeftOf",
          "near"
        ],
        "Performing Actions": [
          "Click & Hold",
          "Drag & Drop",
          "Double Click",
          "Actions & Different Browser Types"
        ],
        "Screenshot(s)": [
          "Screenshot & Element Screenshot",
          "Full Page Screenshot"
        ],
        "Chrome Dev Tools": [
          "Introduction",
          "Emulate Geo Locations - Part 1/2",
          "Emulate Geo Locations - Part 2/2",
          "Emulate Network Conditions - Part 1/3",
          "Emulate Network Conditions - Part 2/3",
          "Emulate Network Conditions - Part 3/3",
          "Capture Network Requests",
          "Network Intercept",
          "SSL Certificate"
        ]
      },
      "requirements": [
        "Basic understanding of testing"
      ],
      "description": "What does this course cover?\nThis courses teaches you everything you need to know about the long anticipated Selenium WebDriver 4 release - which has been years in the making. Learn about all the new features in detail & more.\nWhat topics are included?\nEasy to follow project setup and installation\nLearn & understand design principles (DriverFactory, Hooks, Properties File...)\nUnderstanding the key features of Selenium Webdriver 4 (including docs)\nBrowser options\nWaits\nHandling windows\nRelative locators\nActions\nScreenshots - (Including Full Page Screenshots)\nChrome developer tools - (Chrome Devtools; Emulate GEO Locations, Capture Network Requests etc)\nSelenium grid 4\nDocker & Video Recording Capabilities\nSelenium IDE & Parallel Test Execution\nAnd more\nWhy this course?\nI have been developing course on Udemy for years and have amassed a following of thousands of students. I know what works in terms of effective teaching and I have used the very best approaches so that you walk away from this course feeling confident on the subject. Careful course design and preparation is key in providing the very best learning experience. The course has also been recorded with professional-quality recording material - to give you the very best learning experience.\nWhy learn from me?\nI am an experienced lead automation test engineer. Automation testing is my day job (feel free to check my LinkedIn), and I have been responsible for implementing and overseeing automation testing for various companies. Having taught various teams and people, I know what works in terms of students getting the most from my mentoring.",
      "target_audience": [
        "Automation testers"
      ]
    },
    {
      "title": "Software Testing with Generative AI- Beginners Guide 2025",
      "url": "https://www.udemy.com/course/manual-testing-quality-assurance-course-for-beginners/",
      "bio": "Become an expert Quality Assurance Tester by mastering software testing, ETL Testing Best Practices.Learn Generative AI",
      "objectives": [
        "The Complete Quality Assurance Course- Learn QA (Manual Software testing, ETL Testing) from Scratch",
        "Learn Manual Software Testing, ETL Testing . Become Quality Assurance Manual Tester by mastering software testing.",
        "Quality Assurance guidance for starting your first IT job as a Manual Software Tester",
        "Master the basic concepts of software testing",
        "Learn software testing for web applications and improve the quality of your team's software",
        "Agile Methodology",
        "ETL Testing Industry Best Practices",
        "Learn Prompt engineering skills to generate Test Artifacts, Automation codes and demo of AI powered Testing tools"
      ],
      "course_content": {
        "Basics of Software Development Models": [
          "Introduction",
          "ETL Testing Introduction",
          "Direct Message Me If you face any difficulty in Understanding",
          "Introduction to SDLC Life Cycle",
          "When to Use Waterfall Model",
          "What is Agile Model",
          "What is Scrum Model"
        ],
        "Roles in Software Development Team": [
          "Key Stakeholders Introduction in Software Development",
          "Requirement Engineer/ Business Analyst",
          "Front End Developer Role",
          "Back end Developer Role",
          "UI UX Developer Role",
          "Mobile Developer Role",
          "Role of Software Tester",
          "Role of Project Manager"
        ],
        "Software Testing Terminology": [
          "Software Testing Types",
          "Introduction to software testing terminology",
          "Software Testing Terminology - II",
          "Software Testing Terminology - III",
          "Software Testing Terminology - IV",
          "Software Testing Terminology - V"
        ],
        "Functional Testing Types": [
          "What is Smoke Vs Sanity Testing",
          "What is Integration Testing",
          "Non Functional Testing Types",
          "Introduction to Software Bugs"
        ],
        "Software testing Tools": [
          "Software testing tools types"
        ],
        "Testing Documentation": [
          "Testing Documentation"
        ],
        "Website Testing Best Practices": [
          "Website Testing Best Practices",
          "Website Testing Checklists"
        ],
        "Introduction to JIRA - Project Management Tool": [
          "Introduction to JIRA",
          "Basics of Agile for Managing JIRA Projects",
          "JIRA Versions",
          "Understand Different JIRA Issue Types",
          "Issues & Projects in JIRA"
        ],
        "JIRA Practical Implemnetation": [
          "Sign Up JIRA",
          "General Tasks Creation in JIRA Backlog items",
          "How to Create User Story and Epic in JIRA",
          "How to Create Multiple Epcis and Connect with them with Multiple User Stories",
          "How to Start Sprint in JIRA",
          "How to Execute Sprints with JRA",
          "How to Apply Filters in JIRA Project Management Tool",
          "How to create Dashboard in JIRA Project Management Tool",
          "Live Projects Dashboard in JIRA Project Management Tool"
        ],
        "Team Managed Projects in JIRA Tool": [
          "Live Project Creation with Team Manage Projects",
          "How to Create Custom Roles in JIRA"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "No programing skills for manual testing",
        "No prior software testing skills needed",
        "No prior manual testing knowledge required"
      ],
      "description": "Manual Software Testing and ETL Testing Guide to Web Application Testing for Beginners from scratch. Quality Assurance is a must need in today’s era of technology. Meeting the expected quality of an application has become an essential factor for organizations. This is where software development and software testing concepts come into play. Organizations need to follow certain quality assurance standards in order to survive in the market competition. It is must required to understand software development life cycle before executing software testing concepts. We often ignore software testing fundamentals and manual testing concepts which is hugely harmful. IT professionals can never reach the expected level of success without a strong foundation in software development and software testing concepts. Also, it has not been easy to find project oriented and real-time training in software testing fundamentals. However, we all need to learn the basics of quality assurance and testing before jumping into any sort of automation. In this course, we took a hands-on and step by step approach to make it easier for IT professionals to master software testing core concepts. This course includes basic and advanced QA training videos with practical examples of different aspects of testing including software development life cycle (SDLC), overview of specific roles and real-time work environment for a software tester, different types of testing, creating comprehensive test plans, and test cases.\n\n\nOur main objectives are to make sure that attendees will be able to\nLearn Generative AI in Software Testing\n· Understand the Basic concepts and terminology of Manual Software testing\n· Software Test Lifecycle\n· Waterfall and Agile Testing Process\n· Perform Web and Mobile Functional Testing\n· Plan, Document and Execute test activities\n· Understand Common Test Cases\nLearn Prompt engineering skills to generate Test Artifacts, Automation codes and demo of AI powered Testing tools\n\n\nIntended audience\n· Internees\n· Fresh graduates\n· Graduates with one year experience\n· Software Testers, Developers, Designer, QA Engineers\n\n\nCourse Outcomes\nBy the end of this course attendee/ trainee will have the working knowledge of the following:\n· Comfortable understanding of Testing and web terminology\n· Be able to comfortably work in Agile Testing Methodology\n· Grasp over Functional Testing and Techniques (Web & Mobile)\n· Grasp over Test Plan, Test Cases, Bug Reports, Defect Reports\n· Hands on understanding of common Test Cases\n· Attendee will be able to work on live projects\n· Ability to use multiple tools used for delivering a project\n\n\n\n\n\n\nCourse outline\n1. Introduction\na) Software Development Lifecycle\nb) Waterfall Model\nc) Agile Model\n\n\n2. Introduction to testing\na) Why test?\nb) Who does Testing?\nc) When to Start/ Stop Testing?\nd) Principals of testing\ne) Verification & Validation\nf) Standards & Models Related to Testing\ng) V-Model – Intro only\n\n\n3. Testing Terminology\na) Static analysis and dynamic analysis\nb) Failure, Error, Fault, And Defect\nc) Testing, Debugging\nd) Software Testing Life cycle\n\n\n4. Testing methodologies & levels\na) Methods of Testing\n§ Manual Testing\n§ Automation Testing\nb) Levels of testing\n§ Unit\n§ Integration\n§ System\nc) Testing techniques\n§ Black Box Testing\n§ White Box Testing\n§ Grey Box Testing\nd) Types of Testing\n§ Functional Testing\n§ Non- Functional Testing (automation, performance, security, data, platform)\n\n\n5. Functional Testing\n· Kualitatem Process for testing\na. Techniques\ni. Equivalence Partitioning\nii. Boundary Value Analysis\niii. Error Guessing\niv. State Transition Testing\nv. Use Case Testing\nTypes\ni. Integration Testing\nii. System Testing\n§ Regression Testing\niii. Acceptance Testing\n\n\n6. Non Functional Testing\na. Performance Testing\nb. Load Testing\nc. Stress Testing\nd. Volume Testing\ne. Reliability Testing\nf. Usability Testing\ng. Compatibility Testing\nh. Security Testing\ni. Portability Testing\n\n\n7. Bug lifecycle\na. Waterfall\nb. Agile\n\n\n8. Testing Documentation\n· Test Plan\no Introduction\no Test Items\no Software Risk Issues\no Features to be Tested\no Features not to be Tested\no Approach\no Item Pass/Fail Criteria\no Suspension Criteria and Resumption Requirements\no Test Deliverables\no Staffing and Training Needs\no Responsibilities\no Schedule\no Planning Risks\no Glossary\n· Test Estimation\n· Test Scenario\n· Test Case\n· Traceability Matrix\n· Bug Report\n\n\n9. Bug Tracking Tools & Project Tracking\na. JIRA\nb. Trello\nc. Bugzilla\nd. Base Camp\ne. Kualitee\n\n\n10. Team Work\n\n\n11. Agile testing\na. Water fall\nb. Agile\nc. Scrum\nd. Agile Testing Quadrants\ne. Agile Testing Process\nf. Agile Testing Principal & Techniques\n\n\n12. Web Testing\na. Web Terminology\nb. Functionality Testing\nc. Usability testing\nd. Interface testing\ne. Component-level testing\nf. Accessibility Testing\ng. Configuration Testing\nh. Database testing\ni. Compatibility testing\nj. Performance testing\nk. Security testing\n\n\n13. Mobile Gestures\na. Mobile Terminologies\nb. Mobile Gestures\n\n\n14. Mobile Application Testing\na. What is Mobile Application Testing?\nb. Differences between Native, Hybrid and Mobile Web Application?\nc. Complexity of mobile testing domain.\nd. Recommended strategy for mobile application testing\n\n\n15. Responsive web Testing\na. Responsive web Design\nb. Responsive web Testing\n\n\n16. Cross Browser and Cross Platform Testing\na. Cross Browser Testing\nb. Why Cross Browser Testing\nc. How to Perform Cross Browser Testing\nd. Cross platform Testing\n\n\n17. Blog Writing\n18. Bugs Classification\n19. Testing type Qualification\n20. Evaluation",
      "target_audience": [
        "Any one who wants to learn software testing",
        "Anyone who wants to start a career as a software tester"
      ]
    },
    {
      "title": "Spring Boot Unit Testing with JUnit, Mockito and MockMvc",
      "url": "https://www.udemy.com/course/spring-boot-unit-testing/",
      "bio": "Develop Real-Time Spring Boot 3 Unit Tests: JUnit 5, Mockito, MockMvc, TDD, JsonPath, Hamcrest, H2 Embedded DB, MySQL",
      "objectives": [
        "Explore the architecture of the Spring Boot 3 testing framework and write integration tests",
        "Develop unit tests with JUnit 5 and supporting JUnit Assertions",
        "Mock Spring container dependencies using Mockito",
        "Apply Test Driven Development (TDD) using JUnit 5, Mockito and Spring Boot 3",
        "Test Spring Boot MVC web applications with MockMvc and ModelView assertions",
        "Test Spring Boot REST APIs with MockMvc, JsonPath and Hamcrest",
        "Develop integration tests for Spring Data JPA including database init and cleanup",
        "We are RESPONSIVE INSTRUCTORS ... post your questions and we will RESPOND in 24 hours.",
        "Spring Boot developers with JUnit and Mockito testing are in HIGH-DEMAND. Level up your career!",
        "You can DOWNLOAD all source code and PDFs. Perfect for offline LEARNING and REVIEW."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How To Take This Course and How To Get Help",
          "Download the Source Code and PDF Files"
        ],
        "JUnit Review": [
          "Unit Testing Overview",
          "Developing JUnit Tests - Overview - Part 1",
          "Developing JUnit Tests - Overview - Part 2",
          "Developing JUnit Tests - Project Setup",
          "JUnit Assertions - Equals/NotEquals and Null/NotNull - Overview",
          "Test Case Lifecycle Methods - Overview",
          "Test Case Lifecycle Methods - Coding",
          "Defining Custom Display Names - Overview",
          "Defining Custom Display Names - Coding",
          "JUnit Assertions - Same/NotSame and True/False - Overview",
          "JUnit Assertions - Same/NotSame and True/False - Coding",
          "JUnit Assertions - Arrays, Iterable and Lines - Overview",
          "JUnit Assertions - Arrays, Iterable and Lines - Coding",
          "JUnit Assertions - Throws and Timeouts - Overview",
          "JUnit Assertions - Throws and Timeouts - Coding Part 1",
          "JUnit Assertions - Throws and Timeouts - Coding Part 2",
          "Ordering JUnit Tests - Overview",
          "Ordering JUnit Tests - Coding",
          "Unit Testing Code Coverage with IntelliJ- Overview",
          "Unit Testing Code Coverage with IntelliJ - Coding",
          "Unit Testing Code Coverage with Maven - Overview - Part 1",
          "Unit Testing Code Coverage with Maven - Overview - Part 2",
          "Unit Testing Code Coverage with Maven - Coding - Part 1",
          "Unit Testing Code Coverage with Maven - Coding - Part 2",
          "Unit Testing Code Coverage with Maven - Coding - Part 3",
          "Conditional Tests - Overview",
          "Conditional Tests - Coding - @Disabled and @EnabledOnOs",
          "Conditional Tests - Coding - @EnabledOnJre and @EnabledForJreRange",
          "Conditional Tests - Coding - @EnabledIfEnvironmentVariable"
        ],
        "Test Driven Development (TDD)": [
          "Test Driven Development (TDD) Overview",
          "FizzBuzz Project - Coding - Getting Started",
          "FizzBuzz Project - Coding - Tests Part 1",
          "FizzBuzz Project - Coding - Tests Part 2",
          "FizzBuzz Project - Coding - Refactoring",
          "Parameterized Tests - Overview",
          "Parameterized Tests - Coding - Part 1",
          "Paramerized Tests - Coding - Part 2",
          "FizzBuzz Main App - Coding"
        ],
        "Spring Boot Unit Testing Support": [
          "Spring Boot Unit Testing Support - Overview",
          "Spring Boot Unit Testing - Project Set Up",
          "Spring Boot Unit Testing - Adding Maven Dependency",
          "Spring Boot Unit Testing - Read application.properties and Inject Spring Beans",
          "Spring Boot Unit Testing - assertEquals and assertNotEquals",
          "Spring Boot Unit Testing - assertTrue, assertFalse and assertNotNull",
          "Spring Boot Unit Testing - Prototype Beans"
        ],
        "Unit Testing - Mocking with Mockito": [
          "Mocking with Mockito - Oveview - Part 1",
          "Mocking with Mockito - Oveview - Part 2",
          "Mocking with Mockito - Coding - Part 1",
          "Mocking with Mockito - Coding - Part 2",
          "Mocking with Mockito - Coding - Part 3",
          "MockitoBean - Overview",
          "MockitoBean - Coding - Part 1",
          "MockitoBean - Coding - Part 2",
          "Throwing Exceptions with Mocks - Overview",
          "Throwing Exceptions with Mocks - Coding"
        ],
        "Unit Testing - Reflection Test Utils": [
          "Reflection Test Utils - Overview",
          "Reflection Test Utils - Coding - Part 1",
          "Reflection Test Utils - Coding - Part 2",
          "Reflection Test Utils - Coding - Part 3"
        ],
        "Testing Spring Boot MVC Web Apps - Database Integration Testing": [
          "Course Project - Testing Overview",
          "Course Project - Review Source Code",
          "StudentAndGradeServiceTest: Create Failing Test",
          "StudentAndGradeServiceTest: Create Service and Repository",
          "StudentAndGradeServiceTest: Make the test pass",
          "Database Integration Testing - Setup and Cleanup - Overview",
          "Database Integration Testing - Setup and Cleanup - Coding",
          "StudentAndGradeServiceTest: Delete Student",
          "Review Database Configs in application.properties",
          "StudentAndGradeServiceTest: GradeBook Test",
          "StudentAndGradeServiceTest: GradeBook Test with @Sql"
        ],
        "Testing Spring Boot MVC Web Apps - MVC Controller Testing": [
          "Testing Spring MVC Web Controllers - Overview",
          "Testing Spring MVC Web Controllers - Test Setup",
          "Testing Spring MVC Web Controllers - Test getStudentsHttpRequest",
          "Testing Spring MVC Web Controllers - Assert View Name",
          "Testing Spring MVC Web Controllers - Create Student - failing test",
          "Testing Spring MVC Web Controllers - Create Student - passing test",
          "Testing Spring MVC Web Controllers - Updates for UI Add/Get Students - Part 1",
          "Testing Spring MVC Web Controllers - Updates for UI Add/Get Students - Part 2",
          "Testing Spring MVC Web Controllers - Delete Student",
          "Testing Spring MVC Web Controllers - Error Page for Delete Student"
        ],
        "Testing Spring Boot MVC Web Apps - GradeBook App - Student Grades": [
          "Testing Spring Boot MVC Web Apps - TDD for StudentAndGradeService",
          "Testing Spring Boot MVC Web Apps - Grade Service for Math Grades",
          "Testing Spring Boot MVC Web Apps - Grade Service for Science Grades",
          "Testing Spring Boot MVC Web Apps - Grade Service for History Grades",
          "Testing Spring Boot MVC Web Apps - Grade Service Failing Test",
          "Testing Spring Boot MVC Web Apps - Grade Service @Before and @After",
          "Testing Spring Boot MVC Web Apps - Refactor Grade Service for Collections",
          "Testing Spring Boot MVC Web Apps - Delete Math Grades",
          "Testing Spring Boot MVC Web Apps - Delete History and Science Grades",
          "Testing Spring Boot MVC Web Apps - Delete with Non-Existent Student ID",
          "Testing Spring Boot MVC Web Apps - Delete Grades Enhancements",
          "Testing Spring Boot MVC Web Apps - Get Student Information - Failing Test",
          "Testing Spring Boot MVC Web Apps - Get Student Information - Make the Test Pass",
          "Testing Spring Boot MVC Web Apps - Get Student Information - Student Not Found"
        ],
        "Testing Spring Boot MVC Web Apps - Set Up SQL Scripts in properties file": [
          "Testing Spring Boot MVC Web Apps - Set Up SQL Scripts in props file - Overview",
          "Testing Spring Boot MVC Web Apps - SQL Scripts in props file - Edit props file",
          "Testing Spring Boot MVC Web Apps - SQL Scripts in props file Student Service",
          "Testing Spring Boot MVC Web Apps - SQL Scripts in props file GradebookController"
        ]
      },
      "requirements": [
        "Java: Java 17 or higher",
        "Spring Boot: version 3.x or higher",
        "Maven: version 3.9 or higher"
      ],
      "description": "UPDATED TO COVER SPRING BOOT 3\n\n\nSpring Boot 3 is the most popular framework for building enterprise Java applications. Spring Boot 3 includes testing support to develop unit tests and integration tests using JUnit, Mockito and MockMvc. By developing tests, you can create applications with better code design, fewer bugs, and higher reliability. This course shows you how to take full advantage of Spring Boot's testing support.\nYou will also use modern development tools such as IntelliJ (free version) and Maven. All of the projects are based on Maven, so you are free to use any IDE tool that you want.\n---\nIn this course, you will get:\n- All source code is available for download\n- Responsive Instructors: All questions answered within 24 hours\n- PDFs of all lectures are available for download\n- Professional video and audio recordings (check the free previews)\n- High quality closed-captions / subtitles available for English and 14 other languages (new!)\n---\nOver 3,000+ Reviews!\n- (the most reviews for any Spring Boot Unit Testing course on Udemy, nearly DOUBLE the nearest competitor)\n\n\nStudents love this course! 5-star reviews\nChad Darby and Eric Roby are great at delivering the materials and giving good real-world examples of concepts. they make the course a very enjoyable class, This course is very thorough and detailed. Thank you - Ninos\n\n\nGreat course, the material is explained in such a clear way. I enjoy it a lot. Highly recommendable. - Ardak Sydyknazar\n\n\nChad Darby's courses are the best on Udemy. Thanks him I've got my first work and got promotion on the second one. Good job, my friend! (c) :) - Andrii Hryhoriev\n\n\nthis is my 4th Course with Mr. Darby, and his courses are so special. Organized, clear concepts, amazing material. and the most important his Knowledge of the Topic and he really deliver the information's for us. just amazing. - Ra'ed Abu Sa'da\n---\nIn this course, you will learn how to:\nJUnit\nDevelop JUnit Tests\nSet up projects to use JUnit\nApply JUnit assertions: Equals/Not Equals and Null/NotNull\nApply JUnit assertions: Same/Not Same and True/False\nLeverage JUnit lifecycle annotations\nDefine custom display names for JUnit tests\nCheck for exceptions and timeouts\nDefine execution order in JUnit tests\nPerform code coverage analysis for JUnit tests\nApply conditionals with JUnit tests\n\n\nTest Driven Development (TDD)\nApply Test Driven Development for build tests and application code\nCreate a failing test first\nUpdate your code to make the tests pass\nTake your tests from RED to GREEN\nApply TDD to a coding project\nLeverage parameterized tests with TDD\n\n\nSpring Boot Unit Testing Support\nExplore annotations for Spring Boot Unit Testing support\nApply the @SpringBootTest annotation\nRead Spring Boot application properties and inject values using the @TestPropertySource annotation\nPerform assertEquals and assertNotEquals\nLeverage Spring Boot singleton beans and prototype beans\n\n\nMocking with Mockito\nIdentify the need for mocking during test development\nLeverage Mockito in JUnit tests\nApplying the @MockitoBean annotation for injection (new in Spring Boot 3.4)\nThrowing exceptions with Mocks\n\n\nSpring Reflection Utils\nIdentify use cases for applying reflection in your JUnit tests\nApply ReflectionTestUtils to access non-public fields and methods\nIntegrate Spring Reflection Utils in your JUnit tests\n\n\nDatabase Integration Testing\nIdentify the need for database integration testing during test development\nAdd database setup and clean code using @BeforeEach and @AfterEach\nLeverage an embedded database to ease with testing setup and maintenance.\nExternal SQL statements using @Sql annotation\n\n\nTesting Spring Boot MVC Web Apps with MockMvc\nApply Spring Boot using testing for a Spring MVC CRUD web app\nIdentify use cases for testing Spring MVC @Controller\nConfigure the JUnit test case using @AutoConfigureMockMvc\nInject the MockMvc dependency for testing Spring MVC Controllers\nSend HTTP Requests to Spring MVC Controllers and assert the results\nAssert the view name returned by the Spring MVC Controller\nAssert model attributes for the desired values\n\n\nTesting Spring Boot REST APIs with MockMvc\nApply Spring Boot using testing for a Spring REST CRUD API\nInject the MockMvc dependency for testing Spring MVC @RestController\nSend HTTP Requests to Spring MVC @RestController and assert the results\nLeverage Jackson Object Mapper to send JSON data to REST API endpoint\nExpect successful response and desired content type\nApply JsonPath to verify contents of JSON response\n\n\n\n\nCompared to other Spring Boot Unit Testing courses\nThis course is up to date and covers recent versions of Spring Boot 3. We make use of modern development tools such as IntelliJ (free version) and Maven.\nWe are very responsive instructors and we are available to answer your questions and help you work through any problems.\nFinally, all source code is provided with the course along with setup instructions.\n\n\nStudent Reviews Prove This Course's Worth\nThose who have reviewed the course have pointed out that the instruction is clear and easy to follow, as well as thorough and highly informative.\nMany students had also taken other Spring Boot Unit Testing courses in the past, only to find that this Spring Boot Unit Testing course was their favorite. They enjoyed the structure of the content and the high quality audio/video.\n\n\nSample of Student Reviews - 5 stars!\nChad Darby and Eric Roby are great at delivering the materials and giving good real-world examples of concepts. they make the course a very enjoyable class, This course is very thorough and detailed. Thank you - Ninos\n\n\nGreat course, the material is explained in such a clear way. I enjoy it a lot. Highly recommendable. - Ardak Sydyknazar\n\n\nChad Darby's courses are the best on Udemy. Thanks him I've got my first work and got promotion on the second one. Good job, my friend! (c) :) - Andrii Hryhoriev\n\n\nthis is my 4th Course with Mr. Darby, and his courses are so special. Organized, clear concepts, amazing material. and the most important his Knowledge of the Topic and he really deliver the information's for us. just amazing. - Ra'ed Abu Sa'da\n\n\n\n\nQuality Material\nYou will receive a quality course, with solid technical material and excellent audio and video production. I am a best-selling instructor on Udemy. Here's a list of my top courses.\nFull Stack: React and Spring Boot\nFull Stack: Angular and Spring Boot E-Commerce Website\nSpring and Hibernate for Beginners\nHibernate: Advanced Development Techniques\nDeploy Spring Boot 3 Apps Online to Amazon Cloud (AWS)\nJSP and Servlets for Beginners\nJavaServer Faces (JSF) for Beginners\nThese courses have received rave 5 star reviews and over 800,000 students have taken the courses. Also, these courses are the most popular courses in their respective categories.\nI also have an active YouTube channel where I post regular videos. In the past year, I’ve created over 1200 video tutorials (public and private). My YouTube channel has over 7 million views and 43k subscribers. So I understand what works and what doesn’t work for creating video tutorials.\n\n\nNo Risk – Udemy Refund\nFinally, there is no risk. You can preview 25% of the course for free. Once you purchase the course, if for some reason  you are not happy with the course, Udemy offers a 30-day refund (based on Udemy's Refund Policy).\nSo you have nothing to lose, sign up for this course and learn how to apply Spring Boot Unit Testing\n\n\nTarget Audience\nJava Developers with Spring Boot experience",
      "target_audience": [
        "The course is appropriate for all Spring Boot developers."
      ]
    },
    {
      "title": "API Testing with Postman",
      "url": "https://www.udemy.com/course/api-testing-with-postman/",
      "bio": "Automate and test APIs with Postman, making it easier to understand. Verify quality in service-based architectures",
      "objectives": [
        "Effectively test an API so that you contribute to high-quality software",
        "Rapidly resolve issues in an API using Postman",
        "Create regression tests with Postman for your API that will help your team move ahead with confidence",
        "Save time by not running as many GUI tests using Postman",
        "Explore, visualize, and debug your API during development so that you don’t need to revisit the design later",
        "Future-proof your career by grasping the fundamentals of API testing"
      ],
      "course_content": {
        "Getting Started with API Testing": [
          "The Course Overview",
          "Understanding Web Services and APIs",
          "Mapping Your APIs",
          "Simple Authentication with Postman",
          "Risks of Using Services and APIs"
        ],
        "Hands-On API Testing with Postman": [
          "Install and Set Up API Testing Challenges",
          "Testing GET Requests",
          "Using Parameters in API Calls",
          "Find the Secret: Testing Challenge",
          "Find the Secret: Testing Challenge – Solution"
        ],
        "Testing Your API Calls": [
          "Testing POST Calls",
          "Testing PUT Calls",
          "Testing DELETE Calls",
          "Find the 500 Testing Challenge",
          "Find the 500 Solution"
        ],
        "Automating API Tests in Postman": [
          "Getting Started with Collections in Postman",
          "Validating APIs with Postman Requests",
          "Sharing Code Between Tests in Postman",
          "Mocking with Postman",
          "Running Tests Using Newman"
        ],
        "Building Quality APIs Using Postman": [
          "Debugging Your API",
          "Improving API Documentation",
          "API Monitoring",
          "Using the Postman API"
        ],
        "Advanced Techniques in Postman": [
          "Using Postman for Data Driven Testing",
          "Capture API Requests with the Postman Proxy",
          "Importing Existing API Definitions",
          "Using tv4 to Validate API Schema",
          "Conclusion"
        ]
      },
      "requirements": [
        "We’ll discover the various aspects of APIs and how to think effectively about them from a quality viewpoint, then we’ll give you specific examples and challenges that will help you apply, learn, and fully understand the content. You’ll learn about APIs to actively immerse yourself in a learning experience that helps you take what you’ve learned and start to immediately benefit from it in your day-to-day work."
      ],
      "description": "Postman is a powerful tool used to test web services and APIs. It allows you to create a request with the required HTTP method and parameters, submit the request, and inspect the results.\nThis course will use the Postman testing tool to teach you API testing. You will use Postman to find bugs and aid in efficient API development. Create requests and building simple workflows with Postman. Additionally, it will show you how to set up test suites in Postman that can be re-used for regression testing as a project grows.\nBy the end of this course, you will be able to write automated API tests and have a good grasp of how to test an API. You will know how to use Postman as you work with APIs in various capacities and you will have confidence in your ability to take part in creating high-quality APIs.\nAbout the Author\nDave Westerveld is test developer with many years of testing experience. He has been involved in the testing of many different projects ranging from well-established products to helping with the early stages of major new initiatives. He excels at solving automation problems in a team environment and has been involved in traditional automation initiatives at various stages. Dave has also helped to improve product quality through the creative use of automation tools and by helping build out automation frameworks. He has a desire to see teams efficiently producing high-value software and is enthusiastic about understanding the way that automation tools can be used to help with this goal.\nCurrently, Dave works as a test developer at D2L, owner of the world’s first integrated learning platform. In this role, he has had the opportunity to learn a lot about services-based architecture and how to test them in the real world. As an employee at an educational company, Dave has a passion for sharing what he has learned with others. He is also passionate about the importance of producing good quality software and so is excited to be able to author courses that allow him to share some of his testing knowledge.",
      "target_audience": [
        "esting professionals and developers with some technical skills that need to learn more about APIs and how to test them."
      ]
    },
    {
      "title": "Cucumber Test Automation with Boozang",
      "url": "https://www.udemy.com/course/code-less-test-automation-with-boozang/",
      "bio": "Learn test automation in an afternoon without any need for programming",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to The Lab",
          "Introduction to the tool"
        ],
        "Why do Test automation": [
          "Why do test automation"
        ],
        "Working with timeouts and delays": [
          "Importing the Cucumber feature",
          "Test step implementation and timeouts",
          "Importing a feature with several scenarios",
          "Test steps for negative test",
          "Test steps for positive test"
        ],
        "Conditionals and other control-flow logic": [
          "Using many when/then statements",
          "URL reloading policies",
          "Conditional logic with if/else group",
          "Linking the test steps and fixing element selectors"
        ],
        "Forms": [
          "Data-driven scenario outlines"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "Basic understanding of web technology",
        "Knowledge in Java script is helpful but not required"
      ],
      "description": "####\nNote: This course is unfinished and need to be updated to match our new user interface. It should be no problem following the course, just note that the navigation and test tree has changed to use a structure similar to Visual Studio Code.\nI will try and do this as soon as possible.\n####\nLearn the basics of test automation using the code-less automation tool Boozang.\n\n\nFully interactive! You will be doing real automation on our site The Lab\nYou will learn recording scenarios for most common test automation scenarios\nLearn to use BDD syntax Cucumber/Gherkin to express test outcomes\nLearn to apply control flow logic, such as if/else cases and loops\nLearn simple data-driven testing by binding data into forms\nExtract data from the user interface and use it in your tests\nTransform your business to Agile/DevOps/Continuous Integration\nNormally, doing test automation in tools like Selenium requires programming and has a long learning curve.\nThe student should be able to complete the course in a couple of hours and be able to create automated tests for fairly complicated web sites or applications without any prior knowledge of programming or test automation tools.\n\n\nLet me know if you have any feedback or suggestions by contacting me at: courses@boozang.com. I love to hear from you!\nHave fun!",
      "target_audience": [
        "Beginners who want to learn test automation",
        "Manual testers who want to save time by eliminating repetetive work",
        "Developers who want to learn how to quickly automate UI testing"
      ]
    },
    {
      "title": "ISTQB ® Agile Tester Exam",
      "url": "https://www.udemy.com/course/istqb-agile-tester-exam/",
      "bio": "ISTQB® Agile Tester Exam-Style Understanding Questions And Fill-in-the-blank and Memory Recall Questions",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Welcome to our comprehensive course designed specifically for those preparing for the ISTQB® Certified Tester Foundation Level Agile Tester Exam. This course is meticulously crafted to help you understand the exam format and excel in memory retention through engaging fill-in-the-blank exercises.\nAgile methodologies have become the backbone of modern software development, and understanding their principles is crucial for any aspiring tester. Our course begins with an in-depth exploration of the Agile Manifesto, its values, and principles, ensuring you grasp the core tenets of Agile development. We then delve into the whole-team approach, highlighting the collaborative nature of Agile teams and the integral role testers play in ensuring product quality.\nTo reinforce your learning, we have included a variety of interactive memory aids and fill-in-the-blank questions. These exercises are designed to enhance your recall abilities and ensure that key concepts are firmly embedded in your mind. You will practice identifying Agile values, principles, and methodologies, and understand how they are applied in real-world scenarios.\nMoreover, we provide detailed explanations and solutions to all questions, helping you understand the rationale behind each answer. This approach not only prepares you for the exam but also equips you with the practical knowledge required to thrive in an Agile environment.\nWhether you are new to Agile testing or looking to solidify your understanding, this course offers the tools and insights needed to achieve certification and excel in your career. Join us on this learning journey and take the first step towards becoming an ISTQB® Certified Agile Tester.\n\n\nTraining Details:\nContent: 320 practice questions covering all aspects of the exam\nFormat: Multiple-choice, fill-in-the-blank, and memory recall questions\nObjective: To familiarize you with the exam style and enhance your understanding of Agile testing practices\nWho Should Attend:\nAspiring ISTQB® Agile Testers\nTesters seeking to enhance their Agile testing skills\nProfessionals aiming for ISTQB® Foundation Level certification",
      "target_audience": [
        "ISTQB® Certified Tester Foundation Level"
      ]
    },
    {
      "title": "UFT/QTP for SAP Training",
      "url": "https://www.udemy.com/course/uftqtp-for-sap-training/",
      "bio": "Using UFT/QTP to Automate SAPGUI and SAP Portal Application Testing",
      "objectives": [
        "How to test SAP Portal and SAPGUI applications using UFT",
        "Learn how to use an SAPGUI framework for SAP testing",
        "Learn SAPGUI Object Identification"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Needs (The video)",
          "Course Needs"
        ],
        "Understanding SAPGUI and SAP Portal in UFT": [
          "Section Introduction about UFT",
          "UFT Installation Components Demo",
          "Select and develop SAP Portal script",
          "Select and develop SAP Portal script Demo",
          "Understand SAP Web settings in UFT",
          "Understand SAP Web settings in UFT Demo",
          "How to modify an SAP Portal script",
          "How to modify an SAP Portal script Demo",
          "Select and develop SAPGUI script",
          "Select and develop SAPGUI script Demo",
          "Understand SAPGUI settings in UFT",
          "Understand SAPGUI settings in UFT Demo",
          "How to modify an SAPGUI script",
          "How to modify an SAPGUI script Demo",
          "Learn SAPGUI Login Options",
          "Practive Activity",
          "Practice Activity Review & Section Summary"
        ],
        "SAP Building Blocks": [
          "Section Introduction",
          "SAPGUI - AutoLogon and Logoff Routines",
          "SAPGUI - Functions & Subroutines",
          "SAPGUI - Button & Tran Checks",
          "SAPGUI - Status Reporting",
          "SAPGUI - Using Table Variables",
          "SAP Portal script using VB Coding",
          "SAPGUI - Script with validation",
          "Practice Activity",
          "Practice Activity Review & Section Summary"
        ],
        "A UFT/QTP Test Framework - Part 1": [
          "Section Introduction",
          "Main Code Repository",
          "Downloading to local",
          "Uploading to Main",
          "Framework Components Statistics",
          "Framework Script Design",
          "SAP Script Overview",
          "Framework Structure",
          "Framework Activities",
          "Framework Template",
          "SAP Script Converted to Framework",
          "Practice Activity",
          "Practice Activity Review",
          "Section 4 Summary"
        ],
        "A UFT/QTP Test Framework - Part 2": [
          "Section Introduction",
          "Review a simple framework script",
          "Review a moderate framework script",
          "Review a complex framework script",
          "Practice Activity",
          "Section 5 Summary"
        ],
        "A UFT/QTP Test Framework - Part 3": [
          "Section Introduction",
          "What is a UFT Repository?",
          "Local Repository Maintenance",
          "Shared Repository Maintenance",
          "Object Spy",
          "SAPGUI Objects",
          "Section 6 Summary"
        ],
        "Using Parameters and Variables": [
          "Section Introduction",
          "Introduce Parameters",
          "Introduce Environment Variables",
          "Introduce DataTable Variables",
          "Introduce Action/Internal Variables",
          "Section 7 Summary"
        ],
        "Output Reporting and Viewing": [
          "Section Introduction",
          "Compare the Report Viewing options",
          "Reporting status, errors, checkpoints, data",
          "An HTML alternative for test reporting",
          "Section 8 Summary"
        ]
      },
      "requirements": [
        "Should know UFT basics",
        "Be able to launch, Record, and playback scripts in UFT"
      ],
      "description": "This course is designed to bring UFT or QTP together with SAP Portal and SAPGUI application testing activities. If you are only knowledgeable of UFT, but have never used it to test SAP applications, here is an opportunity for you to become proficient using UFT for SAP test automation. SAP Portal which is a WEB application use objects different from other WEB applications. SAPGUI also has a different set of objects that add complexity to test automation. This course is beneficial to knowing how to test these SAP application types with UFT and a data driven framework. If you are new to UFT and new to SAP but familiar with the products, you can benefit from this course as well.",
      "target_audience": [
        "SAP automation testers who know the basics of UFT/QTP"
      ]
    },
    {
      "title": "SQL Injection Test: 77+ Handpicked Questions + Explanations",
      "url": "https://www.udemy.com/course/sql-injection-test-33-handpicked-questions-skillstack/",
      "bio": "Master SQL Injection with 77+ Real-World Challenges — from Login Bypasses to Blind & Time-Based Attacks",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the ultimate SQL Injection (SQLi) Practice Test designed by Skill Stack — your go-to destination for mastering real-world tech skills.\nSQL injection remains one of the most critical and commonly exploited vulnerabilities in web applications. Whether you're a beginner in cybersecurity or preparing for advanced certifications like CEH, OSCP, or Bug Bounty programs, this practice test is your chance to sharpen your skills with hands-on, scenario-based questions that simulate real-world web application vulnerabilities.\nIn this test, you’ll face 77+ curated questions divided into three :\nFoundation-level concepts to identify and understand simple SQLi logic.\nModerate-level challenges requiring deeper thinking and error-based testing.\nAdvanced exploitation involving blind SQLi, WAF bypasses, and time-based inference.\nEXTRA --Stealth and Evasion Mastery Qs\n\n\nEach question is carefully crafted not just to test your memory, but to make you think like an ethical hacker. You'll explore various types of SQLi such as:\nClassic injection attacks (e.g., ' OR 1=1 --)\nUnion-based injections\nBlind and Boolean-based SQLi\nTime-delay-based SQLi using functions like SLEEP()\nAdvanced WAF evasion techniques\nMetadata exploitation via information_schema\nHeader & cookie-based injections\nEven if you’ve already read tutorials or watched videos, this test will fill the gap between theory and real-world logic. Every question reflects a practical situation you might encounter during penetration testing or CTF competitions.\n\n\nYou’ll also receive easy-to-understand explanations after each question, helping you not just identify the correct answer but also learn the “why” behind it. This ensures deep conceptual understanding — a must-have skill for anyone aiming to enter the offensive security world.\nThis test is ideal for:\nCybersecurity students and enthusiasts\nCEH/OSCP/CTF aspirants\nBug bounty hunters\nEthical hackers\nWeb developers wanting to understand how attackers think\nBy the end of this practice test, you’ll be better equipped to identify, exploit, and mitigate SQL injection vulnerabilities in a variety of web environments.\n\n\nWhether you're testing your knowledge, preparing for an interview, or just learning for fun, this SQLi Practice Test is the perfect launchpad to level up your skills.\nAre you ready to think like a hacker and defend like a pro?\nJoin now and inject your way to mastery — only with Skill Stack.",
      "target_audience": [
        "Aspiring ethical hackers and penetration testers preparing for real-world scenarios",
        "Cybersecurity students and professionals wanting to deepen their SQLi knowledge",
        "Candidates preparing for certifications like CEH, OSCP, or CPT",
        "Web developers and tech enthusiasts eager to understand how attackers exploit SQL vulnerabilities"
      ]
    },
    {
      "title": "El curso más completo de testing - Bootcamp de 0 a 100",
      "url": "https://www.udemy.com/course/bootcamptesting/",
      "bio": "Ingresa al mundo de calidad de software, y amplía tus probabilidades de trabajar como tester!",
      "objectives": [
        "Ciclo de vida de desarrollo de software",
        "¿Qué es testing?",
        "Procesos y niveles de testing",
        "Cómo crear casos de pruebas",
        "Qué son defectos, y cómo reportarlos",
        "Diferenciar Severidad y prioridad de defectos",
        "Flujo de vida de defectos",
        "Testing real - requerimientos",
        "Testing real - administración de proyectos",
        "Pruebas de caja negra",
        "Pruebas de caja blanca",
        "Herramienta de gestión de casos de pruebas - TestLink (Curso completo)",
        "Metodologías de trabajo Ágil",
        "API Testing",
        "Backend testing",
        "Cómo implementar automatización de testing (Curso completo)"
      ],
      "course_content": {},
      "requirements": [
        "No hay ningún requisito, se cubre todo desde cero."
      ],
      "description": "Bienvenidos al curso más completo y actualizado en español sobre software testing en toda la plataforma de Udemy.\nEl 2020 nos trajo muchas sorpresas, y no queremos que este año nos encuentre sin prepararnos, es por esto que desde Atenea Conocimientos les traemos este curso totalmente completo sobre software testing!\n\n\n¿Quienes somos?\nJuan Torres\nQA Automation Lead & Co-Fundador\nMe desempeño como QA Automation Lead y soy Co-Fundador de Atenea Conocimientos. Llevo más de 5 años automatizando con diferentes tecnologías y diferentes tipos de negocios.\n\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------\nAgustín Chevallier\nSemi Senior QA Tester Manual & Junior QA Automation\nMe desempeño como Semi Senior QA Tester Manual & Junior QA Automation e instructor en Atenea Conocimientos.\n\n\n\n\n¿Qué te brindamos en este curso?\nTodos los conceptos básicos que necesita saber en el campo de las pruebas de software:\n\n\n-Conceptos teóricos básicos.\n\n\n-Redacción de casos de prueba e informes de errores.\n\n\n-Herramientas de gestión de pruebas (Testlink).\n\n\n-Básicos de pruebas ágiles.\n\n\n-Herramientas ágiles (JIRA).\n\n\n-Técnicas de caja negra (Partición de equivalencia-Análisis de valor límite-Prueba de tabla de decisión-Prueba de transición de estado-Prueba de caso de uso).\n\n\n-Técnicas de caja blanca.\n\n\n-Pruebas de rendimiento\n\n\n-Pruebas móviles\n\n\n-Preguntas de entrevista\n\n\n-C.V Consejos\n\n\n-Información ISTQB/SSTQB\n\n\n\n\n¿Por qué elegirnos?\nEstamos seguros que estarán tan satisfechos con estos contenidos, así cómo estamos nosotros de haberlo creado. En verdad este es el curso más completo que encontrarán al mejor precio disponible. No solamente estaremos cubriendo temas teóricos, si no que tambíen compartiremos nuestras experiencias en el mundo del testing de software, nuestra trayectoria y la cantidad de estudiantes satisfechos con nuestros cursos hablan por si mismo.\n\n\n¿Qué esperas?\nNo tienes nada que perder, la posibilidad de entrar al mundo de sistemas de software está a solamente un click, recuerda que tienes 30 dias de prueba del curso, si no sientes que este curso cumple con tus expectativas, simplemente lo puedes devolver y Udemy te reintegrará el dinero.\n\n\n¡Vamos a aprender!",
      "target_audience": [
        "Personas interesadas en ingresar al mundo del testing por primera vez",
        "Personas interesadas en cambiar su área de trabajo hacia testing",
        "Profesionales comenzando en su carrera de testing",
        "Estudiantes graduados, interesados en testing, con casos reales"
      ]
    },
    {
      "title": "Manual software testing for beginners",
      "url": "https://www.udemy.com/course/manual-software-testing-for-beginners/",
      "bio": "Start your career as a manual software tester today — no programming knowledge required.",
      "objectives": [],
      "course_content": {
        "The job profile of a software tester": [
          "Introduction",
          "How can I become a software tester as a career changer?",
          "The key terms for getting started in theory",
          "Your specific tasks as a software tester",
          "What are virtual machines and what are they used for?",
          "Some more cool tools",
          "How to write effective bug reports",
          "Let's talk about bug management tools",
          "How to structure your testing activities in an easy way",
          "Let's talk about user stories",
          "Master the art of writing regression tests",
          "How to manage test cases",
          "Test automation in a very simple way (Method 1)",
          "Let's earn our first money as software tester (Method 1)",
          "Further helpful tools",
          "Conclusion"
        ]
      },
      "requirements": [
        "PC",
        "Internetverbindung",
        "No coding or prior IT knowledge necessary"
      ],
      "description": "In this online course, you'll gain foundational knowledge for manual testing. Additionally, you'll receive valuable tips and tools to enhance your testing skills. You'll learn both theoretical and practical skills essential for becoming a QA expert, enabling you to kickstart your new career as a software tester today.\nSoftware testing and quality assurance are crucial for the success of your websites, programs, or apps. Without thorough testing, you risk overlooking bugs that your customers might find. Such errors can damage your reputation and impact your finances.\nWith the growing demand for software applications, there's also an increasing need for skilled software testers. This online course offers a comprehensive insight into the profession for career changers, aspiring, and experienced software testers alike.\nWhat you will learn:\nTasks in software testing\nDesired qualifications\nEfficient methods and tools for everyday use\nTransitioning into an IT career as a software tester\nOpportunities to start earning as a software tester today\nRequirements? Just a PC and internet access. Even without a traditional IT education (which I also didn't have), you can successfully enter the world of software testing.\nStart your career in software testing—a field that is not only enjoyable but also lucrative.\nReady for the change? Sign up now and begin your journey as a software tester!",
      "target_audience": [
        "Software testers and aspiring software testers",
        "People with and without programming knowledge",
        "People with an interest in quality assurance and software testing"
      ]
    },
    {
      "title": "JUNIT5 introduction",
      "url": "https://www.udemy.com/course/cool-programmer-junit5-introduction/",
      "bio": "Learn to test your code from various perspectives",
      "objectives": [],
      "course_content": {
        "Introduction to JUNIT 5": [
          "JUNIT presentation",
          "JUNIT presentation part 2",
          "JUNIT presentation part 3",
          "JUNIT presentation part 4",
          "JUNIT presentation part 5"
        ]
      },
      "requirements": [
        "Java basics"
      ],
      "description": "This is a short course that will help you understand better what is JUNIT and ho to test your application in a way that you can find bugs.\nIf you like this presentation, you can find more written tutorials on my website, or you can buy the other course about testing a java app. If you really want one of my courses and you don't have the material possibility to buy it, you can send me a message and I will give you a free pass.\nYou will learn about :\nJUNIT concepts - we first write the code for our app, then we identify what is missing to be proud of our code and at the end of this chapter we implement some tests that will cover all our functionality.\nhow to use POSTMAN to write automated tests and also build your own mock server. POSTMAN is used, most of the times, just for making requests to our app, but in reality it has a lot of functionality that can make your life easier\nMockito - we will talk about stubs/spies/mocks. We first write some tests that will use stub/mock/spy for the simple java app and after that we learn what changes in our approach. You will need this information to know exactly when to use what.\nWiremock - you will learn how to an app that uses a rest api client\n\n\nThe entire project can be downloaded at the end of the course.",
      "target_audience": [
        "middle java developers",
        "beginner java developers"
      ]
    },
    {
      "title": "Selenium With Java - Best framework for test automation",
      "url": "https://www.udemy.com/course/git-with-selenium-3/",
      "bio": "Learn Selenium WebDriver with Java | GIT |Bitbucket | GITHub",
      "objectives": [
        "Learn basics of GIT and Selenium 3",
        "Get understanding on branches, stash, merging of branch and also be able to work upon any remote repository",
        "Learn how to automate with Selenium 3 and would learn GIT with real time environment"
      ],
      "course_content": {
        "GIT Tutorial: GIT introduction": [
          "Introduction of GIT"
        ],
        "GIT Tutorial : Setting up environment for GIT": [
          "Installation of GIT on Windows Machine",
          "Git Configuration for first time user"
        ],
        "Selenium Tutorial : Setting up environment for Selenium 3": [
          "Configuring Selenium 3 in Eclipse",
          "Launching Firefox Browser in Selenium 3",
          "Opening any URL in Firefox Browser in Selenium 3",
          "Launching Chrome Browser in Selenium 3",
          "Launching Safari browser using selenium on mac machine"
        ],
        "GIT Tutorial : Converting Selenium Project in to GIT Repository": [
          "Converting Selenium Project in to GIT Repository",
          "First Commit of Selenium Script in GIT",
          "Reverting Changes in Working Directory",
          "Ignoring File by use of dot gitignore file"
        ],
        "Selenium Tutorial : Locators in Selenium": [
          "Element Locator in Selenium",
          "Xpath in Selenium",
          "Absolute Xpath In Selenium",
          "Relative Xpath",
          "CSS Selector in Selenium"
        ],
        "Selenium Tutorial : Handling Web- element using selenium": [
          "Maximizing and resizing browser window in Selenium 3",
          "MAXIMIZE WINDOW USING SELENIUM WEBDRIVER AND BY USING ABSTRACT WINDOW TOOLKIT",
          "Locating elements on Webpage using FindElement Function",
          "Handling Radio Button in Selenium WebDriver",
          "Clicking on hyper link using selenium 3",
          "Handling drop-down in Selenium",
          "Handling Checkbox in Selenium",
          "Working with text field in Selenium WebDriver"
        ],
        "Git Tutorial : Branching in GIT": [
          "Creating new branch in GIT",
          "Creating and switching in to newly created branch",
          "Switching in to any branch in GIT",
          "Merging two branches in GIT",
          "Renaming and Deleting branch in GIT"
        ],
        "GIT Tutorial: Learning concept of Stashing in GIT": [
          "Stash introduction in GIT",
          "Applying stash and popping up stash",
          "Deleting Stash in GIT"
        ],
        "Selenium Tutorial: Advance Keyboard and Mouse handling": [
          "What is Action Class, Example on Drag and Drop Mouse Action Using Selenium 3",
          "Dragging and Dropping any element at provided location.",
          "Performing CTRL+A key action using actions class.",
          "Practical example of Drag and Drop (Slider handling in Selenium)"
        ],
        "Selenium Tutorial: Handling multiple windows| Alert Handling | Frame Handling": [
          "Example 1: Handling countable windows using getWindowsHandles and Iterator.",
          "Example 2:Switching to windows on the basis of title of window"
        ]
      },
      "requirements": [
        "Any one can take this course.",
        "Specially designed for Automation Test Engineer",
        "Quality Engineers"
      ],
      "description": "What you are going to get from this course\n\nBasics of Selenium WebDriver for web-application automation.\nA brief knowledge of GIT from scratch\nComplete understanding of directory used in GIT, Branches, Stash, Github and bitbucket as remote repository\nReal time example based GIT learning which is going to use Selenium WebDriver and Selenium 3\nBasics of Selenium 3 and would be able to create automation scripts using Selenium 3\nBasic setup of Selenium Automation project setup\nAt the end of this tutorial you could call yourself automation engineer with knowledge of Selenium and GIT.\nIn today's world, every single project is going to have multiple team member working all together and to sync up with their work they use GIT.  But along with this learning Selenium WebDriver/Selenium 3 would be added benefit and it would be like learning two things in single effort.\nWish you great learning and collaboration.",
      "target_audience": [
        "Any one can take this course if want to learn GIT but it will suit more to Selenium based automation engineer",
        "Any one who have basic understanding of computer and are working as automation engineer",
        "Person with basics knowledge of Java, since Selenium 3 examples are going to use java concept"
      ]
    },
    {
      "title": "Appium Mobile Automation - Java - Android & IOS Apps & Cloud",
      "url": "https://www.udemy.com/course/appium-java-android-ios/",
      "bio": "Quickly get Started with Appium with java for android and ios apps. Learn cloud integration with appium",
      "objectives": [
        "Quick start with mobile automation in both ios and android with your existing selenium knowledge",
        "Leverage your Web automation skills to get started with Appium",
        "Learn Appium installation for IOS and Android devices in both Windows and MAC",
        "Develop test automation scripts for Android and Ios Apps",
        "Learn to integrate mobile automation with mobile cloud providers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Appium overview",
          "Installation and setup requirements"
        ],
        "Android Automation Basics": [
          "Required Links and Resources - MUST WATCH",
          "Android - Installation and setup in Windows",
          "Android - Emulator intro",
          "Android - Eclipse create Project",
          "Android Basic Building Blocks Part 1",
          "Please look into other courses",
          "Please Give your Feedback",
          "Android Basic Building Blocks Part 2",
          "Android - Scroll | Swipe Part 1",
          "Android - Scroll | Swipe Part 2",
          "Android - Scroll | Swipe Part 3"
        ],
        "Android Automation advanced": [
          "Android - TouchAction class in Appium",
          "Android - WebView Automation",
          "Android - Mobile Websites Automation",
          "Android - Code to start | stop Emulator",
          "Android - Appium Desktop - Inspector tool",
          "Android - Info on Real device automation"
        ],
        "IOS Automation": [
          "Refer Code here - Code used for Ios Automation",
          "Ios - Installation and setup in MAC",
          "Ios - Element Locator stretagies",
          "Ios - Scroll | Swipe",
          "Ios - Handle Picker Wheel Element",
          "Few More Topic - refer this"
        ],
        "Cloud providers Usage and benefits": [
          "cloud - Intro to Cloud provider",
          "cloud - Run test",
          "cloud - inspector tool"
        ],
        "Test Your Knowledge": [
          "Answer the questions on topics we have learnt so far"
        ],
        "Conclusion": [
          "Conclusion - Few Tips and suggestions",
          "Conclusion - Thanks!!"
        ]
      },
      "requirements": [
        "Basic working knowledge in Selenium webdriver"
      ],
      "description": "This is a short course which covers all necessary items to develop automation test suite for Android and Ios mobile Apps using Appium & Java. Learn Mobile Automation with Appium with Java for both Ios and Android apps. Leverage your Web Automation/ Selenium WebDriver knowledge to get started with Appium mobile automation.\nProvided a Quiz at the End of the course to help you test your knowledge on learned concepts\nLearn How to develop automation scripts for Android apps\nLearn How to develop automation scripts for Ios apps\nLearn features of appium\nLearn to develop automation scripts for WebViews and Mobile Websites.\nLearn to use appium desktop client and inspector tool\nLearn to use Android Uiautomator viewer\nLearn to work with Virtual Mobile devices like Android Emulator and Ios Simulator.\nLearn to make use of cloud providers like BrowserStack for mobile Automation.\nLearn to launch mobile devices, inspect elements and Run tests in cloud.\nLearn to handle Scroll or Swipe gestures for both android and Ios Apps.\nLearn to handle mobile gestures like Tap, Long Press using TouchAction class in Appium\nlearn to handle complex elements like Wheel pickers, Seek bars etc\nLearn to start and stop Appium server and Emulator from script\nLearn to setup the environment for Android and Ios Automation in local machine (Windows and MAC)",
      "target_audience": [
        "Automation Testers and QA with Selenium WebDriver Knowledge",
        "Any one who wants to learn mobile automation"
      ]
    },
    {
      "title": "Performance Testing with Micro Focus Loadrunner",
      "url": "https://www.udemy.com/course/micro-focus-loadrunner-2021/",
      "bio": "Learn the concepts of Performance Testing with help of MF Loadrunner.",
      "objectives": [
        "What is Loadrunner and it's component",
        "Working with Loadrunner, VuGen, Controller, Analysis",
        "Working with Load Generator",
        "Executing Performance Test Scenarios",
        "Data Driving a Performance Test",
        "Working with SLAs"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge about Performance Testing Basics"
      ],
      "description": "LoadRunner is a software testing tool from Micro Focus. It is used to test applications, measuring system behavior, and performance under load. LoadRunner can simulate thousands of users concurrently using application software, recording and later analyzing the performance of key components of the application.\nLoadRunner simulates user activity by generating messages between application components or by simulating interactions with the user interface such as keypresses or mouse movements. The messages and interactions to be generated are stored in scripts. LoadRunner can generate the scripts by recording them, such as logging HTTP requests between a client web browser and an application's web server.\nHewlett Packard Enterprise acquired LoadRunner as part of its acquisition of Mercury Interactive in November 2006. In Sept 2016, Hewlett Packard Enterprise announced it is selling its software business, including Mercury products, to Micro Focus. As of 01-Sept-2017, the acquisition was complete.\n\nOn Dec 12, 2019, Micro Focus announced newer names for the LoadRunner package and started following CalVer.\n\nLoadRunner is now LoadRunner Professional 2020\nPerformance Center is now LoadRunner Enterprise 2020\nStormRunner Load is now LoadRunner Cloud 2020\nArchitecture\nThe key components of LoadRunner are:\nLoad Generator generates the load against the application by following scripts\nVuGen (Virtual User Generator) for generating and editing scripts\nController controls, launches, and sequences instances of Load Generator - specifying which script to use, for how long, etc. During runs, the Controller receives real-time monitoring data and displays status.\nAgent process manages the connection between Controller and Load Generator instances.\nAnalysis assembles logs from various load generators and formats reports for visualization of run result data and monitoring data.\nModules are available to enable LoadRunner to capture, replay, and script different application and networking technologies. These include support for:\napplications using Microsoft .NET and Java\ndatabase servers such as Microsoft SQL Server and Oracle\ninternetworking protocols such as DNS, FTP, and LDAP\ne-mail protocols including IMAP, MAPI, POP3 & SMTP\nremote client technologies such as Citrix ICA and RDP.\nLoadRunner can be run standalone or multiple instances can be pooled for use by several people under the control of LoadRunner Enterprise, formerly known as HP PerformanceCenter.\n\n\nLoadRunner Cloud 2020\nFrom 2010 Hewlett Packard started to offer on-demand versions of LoadRunner available by cloud computing services such as Amazon Elastic Compute Cloud and later Microsoft Azure. Version 12.50 added the use of Google Compute Engine. Selected HP partners are also able to provide LoadRunner in the Cloud as an on-demand service from their SaaS platforms.\nStormRunner Cloud has been renamed LoadRunner Cloud 2020.\nScripting Languages\nLoadRunner client emulation scripts are usually created using the ANSI C programming language. However, Java and .Net programs can also be run by LoadRunner. Version 12.50 added the use of JavaScript for Web-HTTP/HTML scripts.\nScripts from other testing tools such as Apache JMeter, Gatling, NUnit, and Selenium can be run by LoadRunner by declaring an interface library. This enables scripts to send key-value pairs to the Controller as the script runs, enabling response times to be associated with specific conditions such as the number of items displayed in the User Interface.\nLoadRunner scripts can also be called from within Jenkins.\nSupport for JMeter Tests\nLoadRunner 12.55 enables testers to run Apache JMeter scripts from Controller, alongside Vuser scripts can view the results to LoadRunner measurements. This feature is provided as a beta version.",
      "target_audience": [
        "New Comers to Performance Testing",
        "Performance testers",
        "Developer to analyze performance issues"
      ]
    },
    {
      "title": "Getting started with Test Automation using Protractor [2020]",
      "url": "https://www.udemy.com/course/getting-started-with-test-automation-using-protractor/",
      "bio": "Step by step tutorial on End-to-End test automation using Protractor with JavaScript & Allure reporting tool",
      "objectives": [
        "Basics of software test automation using Protractor framework",
        "How to automate tests of Angular-based applications",
        "How to organize tests with Page Objects",
        "How to implement a reporting tool into Protractor tests",
        "How to follow some best practises during writing automated tests"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "What is Protractor?"
        ],
        "Installation": [
          "Part 1: Node.js",
          "Part 2: Protractor",
          "Part 3: Java JDK",
          "Part 4: Git",
          "Text editor"
        ],
        "First Protractor Project": [
          "Start a project with package.json",
          "Create and fill configuration file",
          "Create a test file",
          "Always plan your test!",
          "Tell your test to open the website",
          "Understand conf.js",
          "Understand locators",
          "Use locators in the real test",
          "Using Expects",
          "Section 3 quiz"
        ],
        "Enhance your Protractor tests": [
          "Meet xpath",
          "BeforeEach and AfterEach",
          "Setting the size of the browser",
          "Working with multiple elements",
          "Section 4 quiz"
        ],
        "Page Objects": [
          "Repetition: New project [Part 1]",
          "Repetition: New project [Part 2]",
          "Page Objects in action",
          "Section 5 quiz"
        ],
        "Reporting": [
          "Allure report",
          "Allure installation and implementation",
          "Generating a report"
        ],
        "Best practices & tips": [
          "Locator Strategy",
          "Page Objects - best practices",
          "How to skip tests"
        ],
        "Interview questions": [
          "Interview questions"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "Basic HTML knowledge",
        "Basic knowledge about software testing"
      ],
      "description": "Welcome to \"Getting started with Test Automation using Protractor\" course page. The course is designed to help you learn the basics of working with Protractor to automate software testing.  We have prepared over 3 hours of video, downloadable resources, several articles and potential recruitment questions that you may hear during the job interview. English subtitles added!\n\n\n*Whether you want to:*\n- build the skills you need to get your first test automation job\n- move from Manual Tester to Test Engineer position\n- learn another tool for test automation\n- or test your Angular apps\n...this course is what you need to learn to achieve it.\n\n\nAt the end of this course, you will have a solid foundation to get a highly paid IT specialist job. If you are already familiar with automatic software testing, you will find the next tool that will help you to do this.\n\n\n*What makes this course special?*\nWe assumed that students who enrolled in this course have no experience in test automation. We translate everything from scratch and guide the student through the installation of the required tools.\n\n\nTopic includes:\n- Introduction to Protractor\n- Installation\n- First Protractor Project\n- Enhancing tests\n- Page Object Model\n- Reporting\n- Tips & Tricks\n\n\n*How am I teaching you in this course?*\nI teach by example. You won't find here lectures you won't remember much of, nor exercises you won't understand. Together we create a project, and I choose the examples so as to maximise the condensation of knowledge and transfer it in an easy way\nThe topics are divided into short videos to make it easier for you to remember the material and go through the course step by step\nAt the end of each chapter, the code we wrote during the chapter was added and it can be downloaded\n\n\nif you have any questions about the course, don't hesitate to write to me. I would be happy to answer!",
      "target_audience": [
        "Manual testers who want to learn test automation",
        "Test engineers who are familiar with different language/framework",
        "Test managers who need to strengthen their technical skills",
        "IT students",
        "Software developers who would like to know about end-to-end testing",
        "Angular developers who need to test their applications"
      ]
    },
    {
      "title": "Python ve Yapay Zekaya Giriş: 101",
      "url": "https://www.udemy.com/course/python-ve-yapay-zekaya-giris-101/",
      "bio": "Python ile Yapay Zekaya Giriş: Makine Öğrenimi, Veri Bilimi ve Sinir Ağları Temelleri - Uygulamalı Projelerle Öğrenin",
      "objectives": [
        "Python dilinde değişkenler, döngüler, fonksiyonlar ve veri yapıları gibi temel konuları öğrenin.",
        "Yapay sinir ağları, karar ağaçları ve regresyon gibi temel yapay zeka algoritmalarını uygulamayı öğrenin.",
        "Python ile veri ön işleme, veri görselleştirme ve veri seti düzenleme becerilerini kazanın.",
        "Kurs boyunca öğrendiklerinizi kullanarak projeler geliştirin ve gerçek hayattaki problemlere çözümler üretin."
      ],
      "course_content": {
        "Temel Python Eğitimi": [
          "Kurs Girişi",
          "Python Tanıtımı",
          "Genel Python Bilgisi",
          "Python Kurulumu",
          "Vsc Kurulumu",
          "Matematiksel İşlemler",
          "String Veri Tipleri",
          "String ve İnt İşlemler Metinsel ve Sayısal işlemler",
          "Karakter Dizileri Print() Fonksiyonu Format() ve F Parametresi",
          "İnput() Kullanıcıdan Veri Alma",
          "Alıştırma - Ortalama Hesaplama",
          "Listeler []",
          "Demetler",
          "Atama Öperatörleri",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "İf ve Else Koşulu",
          "Elif Koşulu",
          "Alıştırma - Ortalama Hesaplama",
          "Alıştırma Korona Virüs Uygulaması",
          "While Döngüsü",
          "Alıştırma - Kullanıcı Giriş Uygulaması",
          "For Döngüleri",
          "Alıştırma - Giriş Uygulaması For Döngüsü ile",
          "Alıştırma - Kelimelerin ilk Harfini Bulan Algoritma",
          "Fonksiyonlara Giriş",
          "Fonksiyonlarda Parametre Kullanımı",
          "Alıştırma - Günlük Su Tüketimi",
          "Return Komutu",
          "Varsayılan Değerler",
          "Global ve Yerel Değişkenler",
          "Sözlük Oluşturma",
          "Sözlük Devam Get()",
          "Sözlük Manipülasyonu",
          "Alıştırma - Telefon Uygulaması",
          "Alıştırma - Telefon LJyguIaması 2",
          "Modül Kavramı",
          "Random Modülü",
          "DateTime()",
          "Alıştırma - Çekiliş Uygulaması",
          "Alıştırma - Çekiliş Uygulaması 2",
          "Alıştırma - Şifre Korumalı Uygulama Yazma",
          "Try ve Except Kavramları",
          "Finaliy Kavramı ve Örnek",
          "OOP",
          "_init_ Fonksiyon Yapıcı Fonksiyonlar",
          "Alıştırma - Öğretmen Branş Değiştirme",
          "Miras Kalıtım Overridjng",
          "Alıştırma - Parçaları Birleştirelim",
          "Final"
        ],
        "Veri Analizi - Numpy": [
          "Numpy Nedir",
          "Kurulum ve Basit Kodlar",
          "Çok Boyutlu Diziler",
          "Matematiksel İşlemler",
          "Dizi Dilimleme",
          "Çok Boyutlu Dizilerde Dilimleme",
          "Matematiksel İşlemler 2",
          "Basit İstatiksel İşlemler",
          "BooleanMask",
          "Dizi Birlestirme ve Bölme",
          "Rastgele Seri Oluşturma",
          "ReShape",
          "Dosya İşlemleri",
          "Numpy Final Dersi Kitap Analiz"
        ],
        "Pandas": [
          "Pandas Giriş",
          "Excelden veri okuma ve Yazma",
          "Veri Manipülasyonu",
          "Veri Manipülasyonu 2",
          "Gruplama",
          "Zaman Damgaları",
          "Zaman Damgası ile Veri Analizi Bölüm 1",
          "Zaman Damgası ile Veri Analizi Bölüm 2"
        ],
        "Görselleştirme": [
          "Temel Grafiksel Bilgiler",
          "Trend Grafikleri Analiz Etmek",
          "Kodları Bot Haline Getirme"
        ],
        "Makine Öğrenmesi": [
          "Makine Öğrenmesine giriş",
          "Girilen Ev Bilgileri ile Fiyat Analizi",
          "Multi Reg Analizi",
          "Karar Ağaçları ile Hastalık Tahmin Etme",
          "Excel Dosyasındaki Veriler ile Hastalık Tahmin etme ve Makine Öğrenmesi",
          "Hastalık Görselleştirme",
          "Makine Öğrenmesinin Doğruluğunu ölçme",
          "Çapraz Doğrulama ile Makine Öğrenmesi Oranını Arttırma",
          "Ağaç Yapısını Geliştirip , Doğruluğu Arttırmaya Çalışma",
          "Yeni Eğitilmiş Veri ile Hastalık Keşfetme"
        ],
        "Veri Ön İşleme Mühendisliği": [
          "Basit Veri Standartlaştırması",
          "Veri Kategorize Etme",
          "Düzenlenmiş Verileri Görselleştirme",
          "Yaş Ve Meslek İle Gelir Tahmin Etme Bölüm 1",
          "Gelişmiş Modelleme ile Doğruluk Oranını Arttırma",
          "Model Seçimini Nasıl Yapmalıyız",
          "Çapraz Model ile Makine Öğrenmesi Modelini Test Edelim",
          "Kümele Algoritması",
          "Teknoloji Ürün Satışları Kümeleme",
          "Fiyat Tarih ve Satış Adetlerini Kümeye Dahil Etme"
        ],
        "Yapay Sinir Ağları": [
          "Temel Yapay Sinir Ağlarına Giriş",
          "Kredi Puanı Verme Uygulaması",
          "Kullanıcıdan Alınan Veriyi Eğitmek",
          "Veri Genişletme",
          "Eğitilmiş Veri ve Hata Çözümleri",
          "Hata Düzeltme",
          "Yapay Öğrenme Oranını Arttırma",
          "Smote Kavramı",
          "Smote ve Yapay Sinir Ağları ile Modelin Doğruluk Oranını Arttırma"
        ],
        "Yapay Zeka ile Gerçek Veri Üzerinden Kalp Krizi Riski Hesaplama": [
          "Temel Veri Yapısı ve Düzenlemeler",
          "Verileri Görselleştirme",
          "4 Farklı Model ile Doğruluk Oranını Test Etme",
          "Veri Seti ile Kişinin Kalp Krizi Oranını Hesaplama (YapayZeka ile)"
        ],
        "Gerçek Verilerle Deprem İstatistiği ve Analizi - Haritalandırma": [
          "Proje Dahili Ve Temel İşlemler",
          "Temel Veri Setini İnceleme Ve Düzeltme",
          "Görselleştirmeler",
          "Haritalandırma"
        ],
        "Hareket Algılama Uygulaması ile Whatsapp'dan Mesaj Yollama": [
          "Giriş ve Temel Algoritma",
          "Main",
          "Döngü",
          "Final"
        ]
      },
      "requirements": [
        "Programlama deneyimi gerekmez. Python ve yapay zeka konularında tüm temel bilgileri bu kursta öğreneceksiniz.",
        "Bilgisayar ve internet erişimi yeterlidir. Kurs boyunca gerekli araçları ve yazılımları kullanabilmek için bir bilgisayar ve internet bağlantısına ihtiyacınız olacak.",
        "Motivasyon ve öğrenmeye açık olmanız yeterlidir. Temel veya ileri seviye fark etmeksizin, öğrenmeye istekli olmanız kursu tamamlamak için yeterli.",
        "Kurs materyalleri için ek bir yazılım gerekmez. Python ve ilgili araçlar ücretsizdir, kurs içinde yükleme adımları gösterilecektir."
      ],
      "description": "Bu kurs, Python programlama dili ile yapay zeka, makine öğrenimi, veri bilimi ve sinir ağları gibi konulara giriş yapmak isteyen herkes için tasarlanmıştır. Hiçbir programlama deneyimi gerektirmeden, sıfırdan başlayarak yapay zeka dünyasına adım atmanızı sağlayacak bu kurs, özellikle uygulamalı projelerle desteklenmiştir.\nKurs boyunca, Python programlama dilinin temel kavramlarından başlayarak, yapay zeka uygulamalarında kullanılan veri işleme, model oluşturma ve tahminleme gibi süreçleri adım adım öğreneceksiniz. Bu kurs sadece teorik bilgiyi değil, aynı zamanda gerçek dünya verileri üzerinde çalışarak, öğrendiklerinizi uygulamaya geçirebileceğiniz projeler sunar.\nÖğreneceğiniz başlıca konular arasında makine öğrenimi algoritmaları, yapay sinir ağları, SMOTE gibi veri dengeleme teknikleri, model doğruluğu ve optimizasyon stratejileri yer alıyor. Bu konuları öğrenirken Python’un güçlü kütüphanelerini (Pandas, NumPy, TensorFlow gibi) kullanarak veri setleri üzerinde çalışacak ve sonuçları analiz edeceksiniz.\nBu kurs, veri bilimi ve yapay zeka dünyasına ilgi duyan, kariyerine bu alanda devam etmek isteyen veya projelerini daha akıllı hale getirmeyi hedefleyen herkes için uygundur. Kursu tamamladığınızda, kendi yapay zeka projelerinizi oluşturabilecek bilgi ve becerilere sahip olacaksınız.\nBaşlangıç düzeyinden ileri seviyeye geçmek için ilk adımı atın ve yapay zeka dünyasında yerinizi alın! Ayrıca, kurs sırasında sunulan pratik projeler ve uygulamalı örnekler sayesinde teorik bilgilerinizi güçlendirerek, öğrendiklerinizi pekiştireceksiniz. Kurs boyunca ileri düzey Python kullanımı hakkında da önemli bilgiler öğreneceksiniz.",
      "target_audience": [
        "Python ve yapay zeka alanlarına ilgi duyan, başlangıç seviyesindeki öğrenciler",
        "Veri bilimi, makine öğrenimi ve yapay zeka konularında kariyer yapmak isteyen kişiler",
        "Programlama bilgisi olmayan ancak yapay zeka projeleri geliştirmeyi öğrenmek isteyen meraklı bireyler",
        "Bilimsel düşünce ve problem çözme becerilerini teknolojiye uygulamak isteyen öğrenciler"
      ]
    },
    {
      "title": "Automation Testing and Framework Designing with TestCafe",
      "url": "https://www.udemy.com/course/automation-testing-and-framework-designing-with-testcafe/",
      "bio": "End to End Framework designing using TestCafe",
      "objectives": [
        "Why TestCafe is better as compared to Selenium and Cypress",
        "Basics of TestCafe",
        "Automated Software Testing using TestCafe",
        "Step by Step Framework Designing - This is the first course of its kind",
        "Database connectivity and Report Generation",
        "Visual UI Testing using TestCafe",
        "API Automation using TestCafe"
      ],
      "course_content": {},
      "requirements": [
        "Basic Fundamentals of any Coding Language",
        "Basic Test Automation Knowledge (Nice to have)"
      ],
      "description": "This is the first course of its kind where you will learn to create Automation Framework from scratch.\nYou will also learn -\n1. Why is TestCafe better than Selenium?\n2. TestCafe setup\n3. TestCafe fundamentals\n4. Report Generation\n5. Connecting to database\n6. Parallel execution\n7. Automation Framework Designing from scratch\n8. TestCafe advanced features\n9. Generating css for Web Elements\n10. TestCafe CI/CD Integration",
      "target_audience": [
        "Software Testers",
        "Automation Testers",
        "SDET",
        "Developers"
      ]
    },
    {
      "title": "JMeter for Beginners: A Complete Performance Testing Course",
      "url": "https://www.udemy.com/course/jmeter-for-beginners-a-complete-performance-testing-course/",
      "bio": "From Basics to Advanced Performance Testing Techniques",
      "objectives": [
        "You will understand what performance testing is, its goals, and the benefits it brings to applications and systems.",
        "You will learn the differences between load testing, stress testing, and scalability testing.",
        "You will get familiar with the JMeter user interface and its key components.",
        "You will learn how to create a complete test plan, including various elements such as Thread Group, Samplers, and Config Elements. 4o mini",
        "You will understand the role of elements such as Logic Controllers, Assertions, and Listeners, and how to use them in practice.",
        "You will learn how to use Config Elements for central management of test parameters.",
        "You will learn how to interpret data from listeners, generate reports, and identify system bottlenecks.",
        "You will gain knowledge on how to design effective test scenarios, avoid errors, and make the most of JMeter's capabilities."
      ],
      "course_content": {},
      "requirements": [
        "You don't need to have experience"
      ],
      "description": "From Basics to Advanced Performance Testing Techniques\nCourse Description:\nPerformance testing is essential to ensure that applications and systems run smoothly and reliably, regardless of user load. In today’s world of increasing user expectations and rapidly evolving technology, application performance often determines its success in the market. This course will introduce you to performance testing using Apache JMeter – one of the most popular and versatile open-source tools.\nThe course is designed to be easily understood by both beginner testers and developers, as well as experienced QA professionals. With a balanced mix of theory and hands-on practice, you’ll learn how to create comprehensive load, stress, and scalability tests that help identify potential issues before an application goes live.\nDuring the training, you will master the key features of JMeter, including creating test plans, configuring requests, using logic controllers and assertions, and analyzing test results.\nCourse Objective:\nBy the end of the course, you’ll have the skills to carry out full performance tests – from planning and setup to detailed result analysis. You’ll learn how to design realistic test scenarios that simulate actual user behavior, such as regular usage or sudden traffic spikes.\nAfter completing the course, you’ll confidently work in a testing environment, apply best practices, and deliver valuable insights that contribute to improving the quality and performance of software in your organization.",
      "target_audience": [
        "For everyone"
      ]
    },
    {
      "title": "Selenium Automation Testing for Beginners",
      "url": "https://www.udemy.com/course/selenium-automation-testing-for-beginners/",
      "bio": "Begin your automation journey with us",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Meet Your Trainer!",
          "What all you can expect from the course?"
        ],
        "Selenium Automation Tool - Basics": [
          "Selenium components and its architecture",
          "Environment Setup - Selenium",
          "Running first call flow on chrome browser",
          "Practice Basic Selenium Commands",
          "Understanding Selenium Basics"
        ],
        "Locators and Identifiers | Working with Web Elements | Selenium WebDriver": [
          "Locators and Identifiers in Selenium WebDriver",
          "Working with basic form elements - textbox, radio button, text area",
          "Mastering XPath locators - Part 1",
          "Mastering XPath locators - Part 2",
          "Facebook Signup",
          "Revisiting Locators in Selenium"
        ],
        "Waits in Selenium WebDriver and Mouse Operations": [
          "Waits in Selenium - Page Load Timeout",
          "Implicit Wait and Mouse Hover Example",
          "Explicit Wait",
          "Other usefull resources"
        ]
      },
      "requirements": [
        "Basic understanding of Manual Testing"
      ],
      "description": "*******************Last updated on -- 21 March 2021*******************************\n\nOver the last decade, the Selenium automation tool has gained a lot of popularity in the automation testing world due to its unique features like - Multiple operating support, multiple language support, multiple browsers support, open-source, and community support.\nMNCs to Startups all big and large organizations are investing a lot in automation testing which has raised the demand for automation experts.\nAlmost all job openings of software testing in any part of the world do ask for Selenium expertise.\nThis is an introductory course for automation testing using selenium and java\nBegin your Selenium automation learning journey by -\nUnderstanding the different Selenium components and their architecture\nAutomate a web application on chrome browser\nUnderstand different locating techniques to interact with web elements on an application\nMastering XPath\nSynchronizing application under test with selenium code using waits commands\nPerforming mouse operations\nNo prior knowledge of Selenium or Java is required for this course but a good understanding of manual testing will certainly help\nMultiple quizzes added in the course to help you learn and understand the concepts better.\nMultiple assignments that will help you implement your learnings with real-time examples.\nFor questions or queries, you can ask them through the Udemy question portal. We usually revert in 24-48 hours",
      "target_audience": [
        "Manual Testing Working Professionals",
        "Fresh Graduates who are looking to start their IT career",
        "Professionals starting their career in automation testing"
      ]
    },
    {
      "title": "Cypress, from Zero to the Cloud",
      "url": "https://www.udemy.com/course/cypress-from-zero-to-the-cloud/",
      "bio": "Learn how to create fast and reliable tests in a simple and objective way, and run them in a CI workflow in the cloud",
      "objectives": [
        "Learn how to create reliable and fast tests in a simple and objective way.",
        "Learn how to run automated tests written with Cypress in a continuous integration workflow on GitHub Actions",
        "Learn how to interact with the most common elements found in web applications",
        "Learn how to create the most diverse types of expected results checks with Cypress"
      ],
      "course_content": {
        "Intro | Course structure | Prerequisites | App walk through | Test project setup": [
          "Introduction",
          "Course structure",
          "Prerequisites",
          "App walk through",
          "Test project setup"
        ],
        "Your first test written with Cypress": [
          "Your first automated test written with Cypress",
          "Your first automated test written with Cypress - exercise"
        ],
        "Finding, typing, and clicking elements": [
          "Typing in fields and clicking on elements",
          "Typing in fields and clicking on elements - exercise",
          "Typing in fields and clicking on elements - extra exercise 1",
          "Typing in fields and clicking on elements - extra exercise 2",
          "Typing in fields and clicking on elements - extra exercise 3",
          "Typing in fields and clicking on elements - extra exercise 4",
          "Typing in fields and clicking on elements - extra exercise 5",
          "Typing in fields and clicking on elements - extra exercise 6",
          "Typing in fields and clicking on elements - extra exercise 7",
          "Typing in fields and clicking on elements - extra exercise 8"
        ],
        "Selecting options in drop-down selection fields": [
          "Selecting options from dropdown fields",
          "Selecting dropdown field options - exercise",
          "Selecting options from dropdown fields - extra exercise 1",
          "Selecting options from drop-down selection fields - extra exercise 2"
        ],
        "Checking radio type inputs": [
          "Checking radio type inputs",
          "Checking radio type inputs - exercise",
          "Checking radio type inputs - extra exercise"
        ],
        "Checking and unchecking checkbox type inputs": [
          "Checking and unchecking checkbox type inputs",
          "Checking and unchecking checkbox type inputs - exercise",
          "Checking and unchecking checkbox type inputs - extra exercise"
        ],
        "Uploading files with Cypress": [
          "Uploading files with Cypress",
          "Uploading files with Cypress - exercise",
          "Uploading files with Cypress - extra exercise 1",
          "Uploading files with Cypress - extra exercise 2"
        ],
        "Dealing with links that open in another browser tab": [
          "Dealing with links that open in another tab",
          "Dealing with links that open in another tab - exercise",
          "Dealing with links that open in another tab - extra exercise 1",
          "Dealing with links that open in another tab - extra exercise 2"
        ],
        "Simulating the dimensions of a mobile device": [
          "Simulating the viewport of a mobile device",
          "Simulating the viewport of a mobile device - exercise",
          "Simulating the viewport of a mobile device - extra exercise"
        ],
        "Automated test project documentation": [
          "Project documentation",
          "Project documentation - exercise"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS selectors",
        "Basic knowledge of JavaScript - ES6 is a plus",
        "git, NodeJS (v16.13.2), npm (8.3.2), and an IDE installed on your computer (I suggest VSCode)"
      ],
      "description": "Take the next step towards becoming an automated testing expert with Cypress and expand your test automation skills.\nCypress is an open-source framework that makes it possible to write automated tests easily, quickly, and reliably, all in JavaScript, and that's exactly what you'll learn in this course.\nDuring the course, we will install Cypress, do the initial setup to write tests, and then we will cover different ways of interacting with web applications, such as visiting URLs, different types of actions (typing into fields, selecting options, clicking on buttons, etc.), as well as how to add the most diverse checks of expected results (assertions.)\nAt the end of the course, I demonstrate how to run the tests on a continuous integration workflow on GitHub Actions, besides the integration with the Cypress Cloud.\nOnce you complete the course, you will be able to put everything you learned into practice in real web projects.\nHere are some of the main benefits of enrolling in this course:\nCourse 100% updated with market needs\nEasy project startup\nFast evolution from lesson to lesson\nFast and reliable automated GUI testing\nAutomated tests independent of each other\nAutomated tests are ready to be part of your continuous integration process\nTest management, analytics, test replay, etc.\nCome learn how to use this modern framework that is simplifying the lives of software development professionals and differentiate yourself in the market.",
      "target_audience": [
        "Software Testers",
        "QAs",
        "Test Analysts",
        "Software Developers",
        "System Analysts",
        "Software Development Students",
        "Anyone interested in entering the world of JavaScript web test automation"
      ]
    },
    {
      "title": "Learn ISTQB Advanced Level Test Analyst (CTAL-TA) Essentials",
      "url": "https://www.udemy.com/course/learn-istqb-advanced-level-test-analyst-ctal-ta-essentials/",
      "bio": "ISTQB Advanced Test Analyst: Enhancing Testing Strategies and Execution, CTAL-TA Skills, Tools, and Methods for Success.",
      "objectives": [
        "Learn about ISTQB certifications, their structure, and how the Test Analyst role fits within the software testing profession.",
        "Understand the key responsibilities, skills, and contributions of a Test Analyst in the software development lifecycle (SDLC).",
        "Gain a deep understanding of the structured testing process, including test planning, execution, monitoring, and reporting.",
        "Learn how to identify and assess risks, prioritize testing efforts, and align test strategies with business goals.",
        "Explore specification-based (e.g., boundary value analysis, decision tables), structure-based, and experience-based testing.",
        "Learn how to test both functional (e.g., security, interoperability) and non-functional (e.g., performance, usability, maintainability) aspects of software.",
        "Understand how to work with developers, business analysts, and other team members to ensure quality.",
        "Gain expertise in different review techniques, such as walkthroughs, technical reviews, and inspections.",
        "Learn about the defect lifecycle, defect classification, root cause analysis, and best practices for defect reporting.",
        "Understand the benefits and limitations of test tools and how they support test management, test design, and execution.",
        "and much more"
      ],
      "course_content": {
        "Introduction to ISTQB Advanced Level Test Analyst": [
          "Welcome and Course Objectives",
          "ISTQB Certification Overview",
          "Role of a Test Analyst"
        ],
        "Testing Process": [
          "The Test Process Overview",
          "Test Analyst Tasks in the Test Process",
          "Collaborating with Other Stakeholders"
        ],
        "Test Management": [
          "Test Management Tasks for Test Analysts",
          "Risk-Based Testing",
          "Test Documentation and Reporting"
        ],
        "Testing Techniques": [
          "Specification-Based Techniques",
          "Structure-Based Techniques",
          "Experience-Based Techniques"
        ],
        "Testing Software Quality Characteristics": [
          "Introduction to Software Quality Characteristics",
          "Testing Functional Characteristics",
          "Testing Non-Functional Characteristics",
          "Testing for Maintainability and Portability"
        ],
        "Reviews": [
          "Overview of Reviews and Their Types",
          "Role of the Test Analyst in Reviews"
        ],
        "Defect Management": [
          "Defect Life Cycle",
          "Defect Classification and Root Cause Analysis",
          "Effective Defect Reporting"
        ],
        "Tools and Automation": [
          "Overview of Test Tools",
          "Tool Support for Testing"
        ]
      },
      "requirements": [
        "Willingness or Interest to learn about ISTQB Advanced Level Test Analyst (CTAL-TA) and Certification Prep for Success."
      ],
      "description": "|| UNOFFICIAL COURSE ||\nIMPORTANT Before Enrolling:\nThis course is not intended to replace studying any official vendor material for certification exams, is not endorsed by the certification vendor, and you will not be getting the official certification study material or a voucher as a part of this course.\nISTQB Advanced Level Test Analyst (CTAL-TA): Mastering Test Analysis and Techniques\nThis course is designed to provide in-depth knowledge and expertise to testing professionals aiming for the ISTQB Advanced Level Test Analyst (CTAL-TA) certification. It covers advanced testing concepts, methodologies, and techniques, equipping learners with the skills necessary to analyze, design, and execute effective test strategies.\nThe course begins with an introduction to the ISTQB framework, outlining the role of a Test Analyst within the broader software development lifecycle (SDLC). Participants will gain insights into the key responsibilities of a Test Analyst, including test planning, execution, and reporting, while collaborating with stakeholders such as developers, business analysts, and quality managers.\nA detailed exploration of the testing process follows, covering structured testing approaches, different stages of testing, and the specific tasks performed by Test Analysts. Special emphasis is placed on risk-based testing, which helps professionals align testing efforts with business priorities by identifying and mitigating risks efficiently.\nParticipants will learn essential test management principles, including prioritization, test documentation, and reporting. The course provides practical knowledge on writing effective test plans, designing comprehensive test cases, and preparing detailed reports to communicate findings clearly to project teams and stakeholders.\nA significant portion of the course is dedicated to testing techniques, encompassing specification-based, structure-based, and experience-based methods. Learners will explore key techniques such as equivalence partitioning, boundary value analysis, decision tables, and exploratory testing, gaining hands-on understanding of how these techniques contribute to high-quality software testing.\nThe course also covers software quality characteristics based on the ISO 25010 model, delving into functional and non-functional testing aspects. Key topics include testing for accuracy, security, interoperability, performance, usability, reliability, maintainability, and portability, ensuring participants are well-versed in assessing different quality attributes.\nAn in-depth discussion on reviews highlights the various types of software reviews, including walkthroughs, technical reviews, and inspections. Test Analysts play a critical role in these review processes, and this course provides guidelines on effective participation, from preparation to follow-up.\nDefect management is another crucial area of focus, where learners will explore the defect lifecycle, defect classification, and root cause analysis. The course emphasizes best practices for defect reporting, ensuring that Test Analysts can communicate defects clearly and contribute to efficient defect resolution processes.\nFinally, the course introduces test tools and automation, providing an overview of the tools that support test management, design, and execution. Participants will understand the benefits and limitations of different tools, learning how to leverage them effectively to enhance testing efficiency.\nBy the end of this course, learners will have a strong command of advanced testing principles and be well-prepared to pass the ISTQB CTAL-TA certification exam.\nThis course is ideal for experienced testers looking to advance their careers, improve their testing expertise, and contribute more effectively to software quality assurance initiatives.\nThank you",
      "target_audience": [
        "Experienced Software Testers – Professionals who have foundational knowledge in software testing and want to deepen their skills in test analysis, design techniques, and defect management.",
        "ISTQB Foundation Level Certified Testers – Individuals who have already earned the ISTQB Foundation Level certification and want to progress to the Advanced Level.",
        "Test Analysts & QA Engineers – Those responsible for designing, executing, and improving test cases, ensuring software quality, and collaborating with development teams.",
        "Test Leads & Test Managers – Professionals looking to strengthen their understanding of test design, risk-based testing, and stakeholder collaboration.",
        "Software Developers Involved in Testing – Developers who want to enhance their knowledge of structured testing approaches and improve software quality.",
        "Business Analysts & Product Owners – Professionals involved in software development who want to understand the role of test analysis in improving product quality.",
        "Anyone Preparing for the ISTQB CTAL-TA Certification – Individuals seeking to obtain the ISTQB Advanced Level Test Analyst certification to boost their credentials and career opportunities.",
        "This course is perfect for those who aim to enhance their test analysis skills, contribute more effectively to quality assurance processes, and achieve professional growth in the field of software testing."
      ]
    },
    {
      "title": "Parallel execution in Test Automation Selenium WebDriverIOv5",
      "url": "https://www.udemy.com/course/parallel-execution-test-automation-webdriveriov5/",
      "bio": "Parallel execution in Test Automation WebDriverIO",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course overview",
          "What we need to know"
        ],
        "Tools": [
          "WebDriverIO v5 overview",
          "Node.js and NPM"
        ],
        "Environment pre-requisites": [
          "Visual Studio Code IDE",
          "Java JDK",
          "GitHub project"
        ],
        "Developing test script": [
          "Application under test",
          "Developing test script"
        ],
        "Configuring framework for parallel execution": [
          "Configuration wdio.config.js file for parallel execution",
          "Creating new test cases",
          "Running test cases in parallel in Google Chrome browser",
          "Grouping test suites in wdio.config.js",
          "Push project to GitHub",
          "Running same script multiple times",
          "Link to Complete course WebDriverIO and JavaScript automation for beginners"
        ]
      },
      "requirements": [
        "Fundamentals in sortware testing"
      ],
      "description": "This course will help you to set configuration in the test automation framework with WebDriverIO and JavaScript for execution in parallel. You will understand the basics of the environment that we need to run test automation. This course will be helpful for QA Testers without knowledge in test automation and experienced QA Engineers that need to study WedDriverIO and JavaScript.",
      "target_audience": [
        "QA Testers who want to use test Automation in current or next role",
        "QA Automation Engineers who need to learn WebDriverIO and JavaScript"
      ]
    },
    {
      "title": "1 hour Postman API Testing Crash Course For Beginners (2023)",
      "url": "https://www.udemy.com/course/1-hour-to-learn-postman/",
      "bio": "The easiest and simplest course to help you master API testing in under 1 hour",
      "objectives": [
        "Introduction to Postman Client",
        "HTTP Methods Overview",
        "JSON",
        "Learn how to work with HTTP request methods: GET, POST, PUT, DELETE",
        "Use Global Variables",
        "API Authentication"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Requirements",
          "Going Deeper - What is Postman?"
        ],
        "Postman Setup": [
          "Section Overview",
          "Create Account | Download Postman Client | Client Login",
          "Postman Setup"
        ],
        "API & JSON": [
          "Section Overview",
          "What is API?",
          "What is JSON?",
          "API & JSON"
        ],
        "HTTP Methods": [
          "Section Overview",
          "HTTP Methods (GET, PUT, POST, DELETE)",
          "HTTP Methods Section"
        ],
        "Workspaces, Collections, and testing our Public API": [
          "Section Overview",
          "Workspaces, Collections, and GET request",
          "POST request",
          "GET request (Retrieve Mary and Leo)",
          "PUT & Patch requests",
          "DELETE request (Bye Mary)",
          "Testing our Public API Section"
        ],
        "Working with a Private API": [
          "Create a Weather Stack account",
          "Reading the documentation and using an API Key (GET request)",
          "Private API Section"
        ],
        "Global Variables": [
          "Setup and Use Environment Variables",
          "Global Variables"
        ],
        "Bonus": [
          "Bonus Video"
        ]
      },
      "requirements": [
        "Ready to learn Postman and start testing APIs",
        "Ability to download Postman client on a computer",
        "No programming experience required, but can help you grasp concepts faster"
      ],
      "description": "Do you need to learn about testing REST APIs for your job or project?\nPostman is the answer. Postman is the perfect tool to help you get started with API testing and more. In this course, you'll learn all the basics to get your APIs (Private or Public) tested and how to configure and organize it to help you be efficient and save time in the long term.\n\n\nIs this course for me?\nIf you feel as a beginner and would like something simple and direct that will help you get started fast then this course is for you. If you are trying to refresh your knowledge then you found the right course as well.\n\n\nWith this course you will be able to:\nConfigure Postman\nUnderstand JSON and why we use it\nUnderstand the difference between GET, POST, PUT & DELETE.\nWork with query parameters\nWork with Public APIs\nWork with Private APIs\nCreate collections\nCreate workspaces\n\n\nBy taking this course you will learn all the basics to get any API tested and then you can decide on what to dig deeper or any feature that interested you the most.\n\nSo let's get started today and join the course to start learning it!\n\nI will see you there!",
      "target_audience": [
        "Anyone trying to test a custom APIs or from third-party companies"
      ]
    },
    {
      "title": "Getting Started With TestProject",
      "url": "https://www.udemy.com/course/getting-started-with-testproject/",
      "bio": "Learn to use a powerful free test automation tool",
      "objectives": [],
      "course_content": {
        "Using the Smart Test Recorder": [
          "Install and Register an Agent",
          "Create and run your first test",
          "Running and debugging tests",
          "Running a workflow test"
        ],
        "Additional TestProject Features": [
          "Schedule and run tests",
          "Using Addons",
          "Reports"
        ],
        "Pulling it all together": [
          "Case study setup",
          "Creating a combined test",
          "Data driven testing"
        ],
        "Conclusion": [
          "Next Steps"
        ]
      },
      "requirements": [
        "Basic understand of web technology"
      ],
      "description": "In this course you will learn how to use the powerful free test automation tool TestProject to get started with UI test automation.  You will learn how to setup and run tests within the tool and also gain an understanding of how to think about UI test automation.  This course will help you get your first UI automation up and running",
      "target_audience": [
        "Testers and test developers interested in getting started with UI automation or improving their UI automation"
      ]
    },
    {
      "title": "Creating and working with automation test report using EARS",
      "url": "https://www.udemy.com/course/creating-automation-reports-with-ears/",
      "bio": "Learn and create an extendable automation test reporting yourself for you and your company",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to EARS and EATS"
        ],
        "Building ExecuteAutomation Reporting System (Data Layer)": [
          "Understanding and creating database structure for EARS_DB",
          "Creating database and Tables for EARS DB",
          "Creating useful stored procedures for EARS DB",
          "Creating stored procedure for EARS DB (Contd)"
        ],
        "Building ExecuteAutomation Reporting System (UI)": [
          "Setting stage ready for building EARS UI",
          "Building an ASP.Net application using Visual Studio 2015",
          "Adding Styles and banner for EARS using CSS",
          "Using Master pages of ASP.Net to centralize styling of pages in EARS",
          "Adding filter controls for EARS UI",
          "Adding custom code for ASP.Net code behind (Part 1)",
          "Adding custom code for ASP.Net code behind (Part 2)",
          "Adding custom code search functionality in EARS UI",
          "Adding custom code for search functionality in EARS UI (Part 2)",
          "Creating details Report for test cases (Part 1)",
          "Creating details Report for test cases (Part 2)",
          "Summary"
        ],
        "Building ExecuteAutomation Web Service (EAWS)": [
          "Introduction to ExecuteAutomation Web Service",
          "Creating ExecuteAutomation Web Service (EAWS)",
          "Creating service implementation for EAWS using EARS libraries",
          "Consuming ExecuteAutomation Web Service via Console Application",
          "Consuming ExecuteAutomation Web Service via Console App (Part 2)",
          "Consuming ExecuteAutomation Web Service via EAAutoFramework",
          "Running Test from EAAutoFramework which consumed EAWS",
          "Summary"
        ],
        "Building ExecuteAutomation Test Harness System (EATS)": [
          "Introduction to Test Harness System",
          "Setting stage ready for Test Harness system",
          "Crash course on Powershell within 10 mins",
          "Building Test Harness System for EATS (Part 1)",
          "Building Test Harness System for EATS (Part 2)",
          "Building Test Harness System for EATS with parameters",
          "Summary"
        ]
      },
      "requirements": [
        "C#",
        "ASP.Net (basic understanding and working knowledge)",
        "SQL basic",
        "Powershell"
      ],
      "description": "Creating and working with automation test report using EARS course is designed in such a way that he/she with good knowledge or understanding on\nC#\nASP.Net\nWeb Services\nSQL\nPowershell /Shell scripting\nCan design and develop an robust and extendable automation test reporting by themselves for their Company/Job.\nExecuteAutomation Reporting System (EARS) is going to be a unified reporting system for any type of automation testing which is built using ASP.Net.\nMeaning, EARS will support any kind of automation tools/technology you use like\nSelenium\nCoded UI\nRobotium/ Appium\nExecuteAutomation Web Service (EAWS) is going to be the web service that any of the above tool can consume in their custom built framework or via EAAutoFramework to insert data into EARS DB\nExecuteAutomation Test Harness System (EATS) is built using Powershell to provide anyone to perform series of operation for their CI tools",
      "target_audience": [
        "This course is for QA",
        "Above all, this course is for those who want to build reporting from groundup"
      ]
    },
    {
      "title": "SonarQube - The Complete Guide",
      "url": "https://www.udemy.com/course/sonarqube-the-complete-guide-2021-edition/",
      "bio": "SonarQube, the leading tool for continuously inspecting the Code Quality and Security of your codebases",
      "objectives": [
        "SonarQube, the automatic code review tool to detect bugs, vulnerabilities, and code smells in your code.",
        "In this course, you will learn a lot about the basics and advanced features that SonarQube offers.",
        "We're not going to stay at the basic level; instead, we are going to dive into advanced features.",
        "In this course, we're going to cover the advanced features."
      ],
      "course_content": {
        "Introduction": [
          "Presentation",
          "Installing SonarQube",
          "Prerequisites and Requirements"
        ],
        "Sonar Scanner for Maven": [
          "Sonar Scanner for Maven",
          "Summary",
          "Sonar Scanner for Maven"
        ],
        "Issue Severity": [
          "Issue Severity",
          "Summary",
          "Issue Severity"
        ],
        "Rules": [
          "Rules",
          "Built-in Rule Tags",
          "Summary"
        ],
        "Quality Gates": [
          "Quality Gates",
          "Metric Definitions",
          "Summary",
          "Metric Definitions"
        ],
        "Technical Debt": [
          "Technical Debt",
          "Summary",
          "Technical Debt"
        ],
        "Quality Profiles": [
          "Quality Profiles",
          "Summary"
        ],
        "Project Permissions": [
          "Project Permissions",
          "Security-related Rules",
          "Summary",
          "Project Permissions"
        ],
        "Gitlab and Jenkins Integration": [
          "Sonar Scanner for Jenkins",
          "Gitlab Integration"
        ],
        "Analysis Scope": [
          "Analysis Scope",
          "Summary",
          "Analysis Scope"
        ]
      },
      "requirements": [
        "No"
      ],
      "description": "Welcome to this tutorial about SonarQube.\nSonarQube is an automatic code review tool designed to detect bugs, vulnerabilities, and code smells in your code. It can seamlessly integrate with your existing workflow, enabling continuous code inspection across your project branches and pull requests. SonarQube is capable of analyzing up to 27 different languages, depending on your edition.\nAs the leading tool for continuously inspecting Code Quality and Security, SonarQube empowers development teams. It supports analysis for over 27 popular programming languages, including JAVA, C#, VB, JavaScript, TypeScript, and C++. SonarQube easily integrates with your Azure DevOps environment, identifying bugs, security vulnerabilities, and code smells.\nHaving facilitated over 170,000 deployments for small development teams and global organizations, SonarQube provides the means for all teams and companies worldwide to own and impact their Code Quality and Security.\nIn this course, you will learn both the basics and advanced features that SonarQube offers. We won't stay at the basic level; instead, we'll dive into advanced features. By the end of the course, you'll have much more than just a solid understanding of SonarQube; you'll be equipped to tackle more challenging projects.\nI would be very happy to welcome you to this course and can't wait to get started together with you.",
      "target_audience": [
        "FrontEnd developer",
        "FullStack developer",
        "Web developer",
        "Developer",
        "Programmer",
        "BackEnd developer",
        "DevOps",
        "Software engineer"
      ]
    },
    {
      "title": "Cypress od podstaw - Automatyzacja testów",
      "url": "https://www.udemy.com/course/cypress-od-podstaw/",
      "bio": "Naucz się automatyzacji testów w Cypress (wersja 9). Kurs wraz z solidnymi podstawami języka JavaScript.",
      "objectives": [
        "Automatyzacja testów w Cypress",
        "Podstawy języka JavaScript",
        "Projektowanie testów w oparciu o Page Object Model",
        "Uruchamiane testów na wielu przeglądarkach, regresja wizualna",
        "Automatyzacja testów API",
        "Konfiguracja reporterów, uruchamianie testów za pomocą Docker'a",
        "Instalacja pluginów, konfiguracja proxy, Shadow DOM",
        "Cypress Dashboard"
      ],
      "course_content": {
        "Wprowadzenie do kursu": [
          "Społeczność testerów - Facebook"
        ],
        "Instalacja narzędzi i programów": [
          "Instalacja NodeJs",
          "Instalacja systemu kontroli wersji GIT",
          "Instalacja Visual Studio Code",
          "Rozszerzenia do Visual Studio Code"
        ],
        "Podstawy języka JavaScript": [
          "Wprowadzenie do modułu",
          "Zmienne i typy danych w JavaScript",
          "Instrukcje warunkowe w JavaScript",
          "Funkcje w JavaScript",
          "Użycie pętli w JavaScript",
          "Pobieranie elementów strony w JavaScript",
          "Tablice i metody na tablicach w JavaScript",
          "Klasy, dziedziczenie w JavaScript",
          "Pliki z lekcji"
        ],
        "Instalacja Cypress i konfiguracja projektu": [
          "Instalacja Cypress",
          "Omówienie struktury plików",
          "Ustawienia konfiguracji Cypress",
          "Uruchomienie pierwszego testu"
        ],
        "Interakcje na elementach": [
          "Rodzaje lokalizatorów",
          "Pobieranie elementów ze strony",
          "Kliknięcie w element",
          "Input - type, clear",
          "Invoke",
          "Checkbox",
          "Dropdown",
          "Alerty",
          "Wgrywanie pliku",
          "Skrolowanie, najechanie",
          "Asercje w Cypress",
          "Pliki z lekcji"
        ],
        "Page Object Model": [
          "Wprowadzenie do modułu",
          "Praktyczne wykorzystanie Page Object Model",
          "Custom Commands",
          "Pliki z lekcji"
        ],
        "Automatyzacja API": [
          "Co to jest API?",
          "Prezentacja aplikacji",
          "Intercept",
          "Mockowanie odpowiedzi",
          "Wykonywanie zapytania",
          "Pliki z lekcji"
        ],
        "Zaawanasowane zagadnienia": [
          "Wykonywanie testów na różnych przeglądarkach",
          "Instalacja pluginów",
          "Zmienne środowiskowe",
          "Reporter junit i mochawesome",
          "Shadow Dom",
          "Cypress Dashboard",
          "Wizualna regresja",
          "Konfiguracja proxy",
          "Docker",
          "Ponawianie testu",
          "Wzorzec Singleton"
        ],
        "Lekcje dodatkowe": [
          "Tworzenie testów w Cypress za pomocą AI"
        ],
        "Quizy": [
          "Sprawdź wiedzę z Cypress"
        ]
      },
      "requirements": [
        "Nie musisz mieć żadnego doświadczenia w automatyzacji. Kurs jest od podstaw."
      ],
      "description": "Cypress od podstaw – automatyzacja testów w JavaScript\nChcesz nauczyć się automatyzować testy aplikacji internetowych z użyciem Cypressa, ale nie wiesz, od czego zacząć?\nW tym kursie przeprowadzę Cię krok po kroku przez cały proces — od nauki JavaScriptu, przez budowanie frameworka, aż po zaawansowane techniki testowania.\nZaczynamy od zera — nie potrzebujesz żadnego wcześniejszego doświadczenia.\n\n\nCzego się nauczysz?\n\nPodstawy JavaScript dla testera:\n– Składnia, zmienne, funkcje, pętle, obiekty – tylko to, co naprawdę potrzebne do testów\n\nTworzenie projektu w Cypress:\n– Inicjalizacja projektu\n– Konfiguracja Cypressa i omówienie struktury folderów\n– Tworzenie i uruchamianie pierwszych testów\n\nTestowanie interfejsu użytkownika:\n– Interakcje z elementami strony (kliknięcia, formularze, listy)\n– Praca ze złożonymi elementami (np. Shadow DOM)\n– Użycie własnych komend – Custom Commands\n– Wzorzec Page Object Model\n\nTestowanie API w Cypress:\n– Wysyłanie zapytań, intercept, mockowanie odpowiedzi\n– Tworzenie testów automatycznych backendu\n\nTesty wizualne i różne środowiska:\n– Wizualna regresja z wykorzystaniem Percy\n– Uruchamianie testów na różnych przeglądarkach\n– Testy w środowisku Docker\n– Proxy w testach automatycznych\n\nRaportowanie i integracje:\n– Konfiguracja reporterów (JUnit, Mochawesome)\n– Praca z Cypress Dashboard\n– Instalacja i konfiguracja pluginów\n\nFramework automatyzacji:\n– Budowa kompletnego frameworka do testów\n– Praca z Visual Studio Code\n– Struktura projektu, porządek i reużywalność kodu\n\n\n\nCzym jest Cypress i dlaczego warto się go nauczyć?\nCypress to nowoczesne narzędzie do automatyzacji testów aplikacji webowych, oparte na JavaScript.\nJest szybkie, intuicyjne i nie wymaga skomplikowanej konfiguracji. Z powodzeniem wykorzystywane jest w firmach technologicznych na całym świecie.\nDzięki temu, że Cypress działa bezpośrednio w przeglądarce, pozwala dokładnie analizować działanie aplikacji z perspektywy użytkownika końcowego.\n\n\nDla kogo jest ten kurs?\n\nDla osób, które chcą zacząć automatyzować testy od podstaw\nDla testerów manualnych, którzy chcą wejść w automatyzację\nDla każdego, kto chce praktycznie poznać Cypressa i JavaScript\n\n\nW kursie skupiam się na praktyce – od razu tworzysz własne testy i rozwiązujesz realne problemy.\nZbudujesz solidne fundamenty, które przydadzą Ci się w pracy jako tester automatyzujący.\nA jeśli będziesz mieć pytania – zawsze możesz napisać do mnie przez platformę Udemy. Odpowiadam.",
      "target_audience": [
        "Testerzy / programiści",
        "Osoby chcące nauczyć się automatyzować testy",
        "Osoby szukające pracy jako tester oprogramowania",
        "Osoby automatyzujące, które przechodzą z Selenium na Cypress"
      ]
    },
    {
      "title": "Appium Tutorials - Mobile Test Automation (Android Only)",
      "url": "https://www.udemy.com/course/appium-tutorials-mobile-test-automation-android-only/",
      "bio": "Beginner to Intermediate course on Mobile Test Automation for Android using Appium(JAVA)",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "You should have basic understanding of Microsoft Windows",
        "Basic understanding of WebDriver is required",
        "Basic knowledge of mobile application and JAVA is needed",
        "Working with any JAVA IDE/Eclipse is an advantage"
      ],
      "description": "Learn Mobile Automation and be part of the growing market of mobile testing industry.\nIn the recent past mobile industry has grown tremendously and the need for application testing on mobile has also grown. Appium provides an environment to test the application on Mobile and is one of the most popular tool to test mobile application.\nAppium supports with both Android and IOS, however in this course we will only work with Android Application. The advantage of Appium is that the code written is cross platform with minimal changes. Android is the most widely used platform in mobile industry and learning android automation gives an edge if you want to switch to mobile automation.\nThe topics covered in this course are\nIntroduction\nDifferent types of Mobile Application and difference between them\nAppium Architecture\nInstallation and Setting up Appium Environment\nSimple Program and getting application information using APKInfo\nMobile Element location strategy(i,e how to identify and interact with mobile elements)\nComplete test case with assertion using Emulator\nComplete test case with assertion using Real Device (including how to connect to real device using Vysor)\nReal time scenario of including application apk file within the project\nIdentify and Interacting programmatically with the Basic Controls on mobile device\nWorking with Gestures/Touch Actions\nUseful driver methods\nSimple Web App Example\nDue to time constraint for free videos on Udemy, some videos are unpublished, pls go to you tube channel \"Raj Tech-Trainer\" and subscribe, like and share the content on the channel for upcoming videos.",
      "target_audience": [
        "Manual tester, Non-programmers interested in learning Automation",
        "Software engineer who are interested in Mobile Technologies",
        "Web Automation Testers who are already aware of Selenium Web Driver",
        "Those who are curious about learning Mobile App Testing",
        "Freshers looking for opportunity in Mobile Application Testing"
      ]
    },
    {
      "title": "Advanced App Security: Spring Security 6, JWT, and JUnit 5",
      "url": "https://www.udemy.com/course/advanced-app-security-spring-security-5-jwt/",
      "bio": "Enhancing Application Security: Advanced Techniques for Spring Security 6, JWT, and Comprehensive Testing",
      "objectives": [
        "Spring Security 5 & JWT",
        "Authentication",
        "Authorization",
        "Unit and Integration Tests",
        "Password Encryption",
        "RESTful",
        "Validation",
        "User Management",
        "Exceptions Management",
        "Email Notifications",
        "Password Reset",
        "Refresh Tokens"
      ],
      "course_content": {},
      "requirements": [
        "Experience in Spring Boot required"
      ],
      "description": "Are your applications truly secure? In today’s digital world, robust security is no longer optional—it's essential. This course, *Advanced App Security: Spring Security 6, JWT, and Testing*, will equip you with the knowledge and hands-on experience to protect your applications against modern threats.\n\n\nBy the end of this course, you’ll master:\n- **Spring Security 6 & JWT**: Implement cutting-edge tools for authentication and authorization.\n- **Authentication & Authorization**: Control access and secure sensitive operations effectively.\n- **Unit and Integration Testing**: Discover the only course that not only teaches you to implement best security practices but also shows you how to validate each application component through unit and integration tests, ensuring flawless protection.\n- **Password Encryption**: Protect user credentials using advanced encryption techniques.\n- **RESTful APIs**: Secure APIs for seamless communication between clients and servers.\n- **Validation & User Management**: Handle data integrity and user interactions securely.\n- **Exception Management**: Safeguard your app with resilient error-handling strategies.\n- **Email Notifications & Password Reset**: Enhance user experience with essential features.\n- **Refresh Tokens**: Ensure continuous and secure sessions for your users.\n\n\nJoin this course and gain the confidence to build secure applications, safeguard critical data, and create a trustworthy user experience. Invest in your skills today to stay ahead in the ever-evolving field of cybersecurity.",
      "target_audience": [
        "The course is intended for software developers and IT professionals who want to strengthen their knowledge in application security. Whether you're an experienced developer or a beginner passionate about application security, this course gives you the opportunity to understand and apply essential principles and practices."
      ]
    },
    {
      "title": "ISTQB Foundation Level CTFL V4 Training / Practical / Exams",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl-v4-training-practical-exams/",
      "bio": "Master ISTQB Foundation Level V4 - Become a CTFL Certified Software Tester [Exams, Quizzes, Practical Sessions included]",
      "objectives": [
        "Learn software testing foundations & concepts with +15 hours of educational materials",
        "Prepare for and pass for the ISTQB Foundation Level V4 | CTFL",
        "Practical exercises on all software testing required skills. Such as writing test cases, defect reports ... etc",
        "Practice ISTQB Foundation Level V4.0 exams with model answers and detailed explanation",
        "Quizzes following each lecture to further enhance your understanding of various software testing concepts",
        "Get qualified as a certified software tester to land your first career job"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites, ISTQB Foundation Level is for everyone!"
      ],
      "description": "Welcome to our ISTQB Foundation Level V4 Training / CTFL V4.0. Where you'll learn the foundations of software testing and get's certified as an ISQTB software tester.\n\n\nHere, you will be part of our software testing bootcamp training, in which you can expect the following:\n\n\nBecome a Certified Software Tester [ CT-FL ]\nLearn software testing foundations and concepts\nGet practical exercises on writing test cases, defect reports, etc\nPractice ISTQB Foundation Level V4 tests with detailed explanation\nSolve official ISTQB exam sample question following each lecture\nChallenging quizzes following each lecture\n\n\nCourse structure:\n\n\nRegular Lectures: World-Class syllabus video explanation, based on the new V4.0 ISTQB Foundation Level CTFL\nExtension Lectures: Where we will discuss some software testing topics beyond the ISTQB syllabus\nPractical Lectures: Hands-On experience with required software tester skill, such as writing test cases, defect reports, reviewing user stories, test plans, acceptance criteria, etc\nExam Sample Lectures: Following each lecture. Solving an official ISTQB Foundation Level V4 test question regarding each topic\nQuizzes: Following: Following each lecture. Solving quizzes to further cement newly acquired information\nExams: Practice our famous exams that we personally construct. Which mimics the actual ISTQB test in every aspect. Accompanied with answers and well-detailed explanations\n\n\nNote: The exams provided in this course are not the same as the ones you'll find in our exam course. So, be confident that you will not find any redundant or repeated questions.\n\n\nHow this course was created?\nThis course was structured, created, and reviewed by a group of certified software testers at One Run Academy.  We provided more than 15 hours of well-structured software testing content, alongside quizzes, exam preparation.\n\n\nWho can enroll in this course?\nAnyone, as the ISTQB Foundation Level V4 is a no-prerequisite domain\nStudent who want to become Certified Software Testers [ CTFL ]\nSoftware testers who want to sharpen their skills and knowledge\nAny development team member who wants to acquire software testing knowledge",
      "target_audience": [
        "Anyone interested in becomming an ISTQB Certified Software Tester",
        "Beginner software tester future superstars"
      ]
    },
    {
      "title": "Real-World Software Testing: Scenario-Based Practice Test",
      "url": "https://www.udemy.com/course/real-world-software-testing-scenario-based-practice-test/",
      "bio": "From Test Design to Execution: Real-Life Testing Scenarios Explained",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Software Testing Practice Test with Clear Explanations for Each Question, provides an effective way to master software testing through realistic practice tests. Designed for both certification exam preparation and skill enhancement, it features a series of practice questions that simulate real-world testing scenarios. Each question comes with a detailed explanation, breaking down the reasoning behind the correct answer, ensuring you not only check your knowledge but also gain a deeper understanding of testing concepts. Covering various topics such as functional, non-functional, performance, and security testing, the course introduces you to the different methodologies used in the industry. Time-management tips are also provided to help you perform efficiently under timed conditions. Ideal for those pursuing certifications like ISTQB or CSTE, this course boosts your confidence and sharpens your problem-solving skills. By the end, you’ll be equipped to handle real-world testing challenges with improved knowledge and practical skills, ensuring you're fully prepared for any software testing exam or project that comes your way. You'll also gain the confidence to tackle complex issues in testing environments and apply industry best practices. This course is perfect for anyone looking to build a solid foundation in software testing and advance their career in quality assurance.",
      "target_audience": [
        "Beginners who wants to practice real time challenges as Software Testers or QA"
      ]
    },
    {
      "title": "ISTQB Performance Test Specialist Sample Exams – Chapterwise",
      "url": "https://www.udemy.com/course/istqb-performance-test-exams-chapterwise/",
      "bio": "Prepare confidently for the ISTQB Performance Testing Certification with chapter-wise sample exams, detailed explanation",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for the ISTQB Certified Tester – Performance Testing Specialist exam?\nThis course is designed to give you a complete set of chapterwise sample exams aligned with the official ISTQB syllabus, helping you to test your knowledge, identify weak areas, and boost your confidence before the real exam.\nEach section of the course focuses on a specific chapter of the ISTQB Performance Testing syllabus. You'll find carefully crafted multiple-choice questions based on real-world scenarios and theoretical concepts covered in the official guide. Every question comes with detailed explanations to help you fully understand the reasoning behind the correct answer.\nWhether you're just starting your preparation or doing a final review, this course is your practice companion for exam success. It is structured to simulate the real exam experience, helping you get familiar with the question style, time management, and difficulty level.\nYou can take the quizzes as many times as needed to reinforce your understanding and improve retention. With consistent practice, you’ll build the skills and confidence required to tackle the certification exam with ease.\nBy the end of this course, you will be well-prepared to pass the ISTQB Performance Testing exam and take a strong step forward in your testing career.",
      "target_audience": [
        "Testers preparing for the ISTQB Performance Testing Specialist certification",
        "QA Engineers looking to specialize in performance testing",
        "Anyone who wants to practice and assess their knowledge of performance testing concepts"
      ]
    },
    {
      "title": "API Testing with Postman: Beginner to Pro",
      "url": "https://www.udemy.com/course/api-testing-with-postman-beginner-to-pro/",
      "bio": "Postman Essentials: Learn API Testing Without Coding, API Requests, Tests, Scripts and Mock Servers.",
      "objectives": [
        "Understand the basics of APIs and how they work",
        "Use Postman to send HTTP requests (GET, POST, PUT, DELETE, etc.)",
        "Analyze and interpret API responses using Postman",
        "Create and organize Postman collections for efficient API testing",
        "Use environment variables and global variables to manage test data",
        "Write test scripts using JavaScript for validation and automation",
        "Implement pre-request scripts to dynamically modify requests",
        "Automate test execution using the Collection Runner",
        "Integrate Postman with Newman for command-line test execution",
        "Apply real-world API testing scenarios in development and QA workflows"
      ],
      "course_content": {
        "GETTING START": [
          "CREATING COLLECTION",
          "GET AND POST REQUEST",
          "PUT AND DELETE REQUEST",
          "CREATING NEGATIVE REQUEST",
          "CREATING ENVIRONMENT VARIABLES",
          "SAVING RESPONSE"
        ],
        "SIMPLE ASSERTION": [
          "STATUS TYPE ASSERTION",
          "BODY ASSERTION",
          "HEADER AND RESPONSE TIME ASSERTION",
          "POSTMAN CONSOLE",
          "JASON ASSERTION",
          "NESTED JSON"
        ],
        "RUNNING COLLECTION": [
          "COLLECTION RUNNER",
          "EXPORTING",
          "RUN COLLECTION USING NEWSMEN"
        ]
      },
      "requirements": [
        "Willingness or Interest to Learn about Postman for Success."
      ],
      "description": "CRITICAL NOTICE Prior to Enrollment:\n\n\nThis course does not serve as a substitute for official vendor materials necessary for certification exams. It lacks endorsement from the certification vendor, and participants will not receive official certification study materials or a voucher as part of this course.\nUnlock the power of API testing with Postman, the industry-leading tool used by developers, testers, and DevOps professionals around the world.\nWhether you’re a complete beginner or looking to sharpen your API testing skills, this course is designed to take you from the fundamentals to advanced techniques, all in one practical, hands-on learning journey.\nYou’ll start by understanding what APIs are and why they are critical in today’s software development landscape.\nThen, you’ll dive into Postman and learn how to send API requests, analyze responses, and create organized collections for testing.\nAs you progress, you’ll explore how to use environment variables, scripting, pre-request scripts, and test assertions to automate and validate your API workflows.\nThis course will also show you how to work with Postman features like Collection Runner, Newman CLI, monitors, mock servers, and public documentation.\nYou’ll learn how to debug APIs, chain requests, and build dynamic test suites that help you simulate real-world usage scenarios.\nWhether you’re working in a small startup or a large enterprise, these skills will equip you to test and automate APIs with confidence.\nBy the end of the course, you’ll have built a solid foundation in Postman and will be able to write efficient, automated API tests that save time and increase the reliability of your applications.\nThis course is packed with practical examples, hands-on exercises, and real-world use cases to ensure you gain the confidence and skills needed to apply Postman in your day-to-day development or testing workflow.\nNo prior experience with APIs or Postman is required — just bring your curiosity, and by the end, you’ll be comfortable using Postman like a pro.\nThank you",
      "target_audience": [
        "Beginners who want to learn API testing from scratch with no prior experience",
        "Software testers and QA professionals looking to enhance their API testing skills",
        "Developers who want to understand how to test and debug APIs efficiently",
        "Automation engineers interested in adding Postman to their testing toolkit",
        "Students and aspiring tech professionals preparing for real-world software projects",
        "Anyone working with APIs who wants to improve their testing, automation, and collaboration workflow"
      ]
    },
    {
      "title": "Astronomical Apex Testing",
      "url": "https://www.udemy.com/course/astronomical-apex-testing/",
      "bio": "Learn to test Salesforce apex code effectively.",
      "objectives": [
        "Salesforce Apex",
        "Salesforce Apex Testing",
        "Salesforce development",
        "Salesforce",
        "How to effectively test Salesforce Apex code",
        "Test Apex",
        "Salesforce Programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Basics of Testing on Salesforce": [
          "Unit and Integration Testing",
          "The Structure of a Test",
          "Coverage vs Testing",
          "Writing a Basic Unit Test"
        ],
        "Creating and Managing Test Data": [
          "Creating Test Data",
          "Creating Test Data Using @TestSetup",
          "Using a Test Data Factory",
          "Loading Data With Test.LoadData",
          "The seeAllData Annotation"
        ],
        "Trigger Testing": [
          "Trigger Testing Basics",
          "Test.startTest and Test.stopTest",
          "Trigger Handlers and Patterns",
          "Testing Errors"
        ],
        "Testing Visualforce Controllers": [
          "Visualforce Page Flow",
          "Visualforce Controllers and Extensions I",
          "Visualforce Controllers and Extensions II",
          "Visualforce Controllers and Extensions III"
        ],
        "Testing Web Services": [
          "Testing Web Services I",
          "Testing Web Services II",
          "Testing Web Services III"
        ],
        "General Testing Tips and Best Practices": [
          "Using SOSL in Unit Tests",
          "Testing Asynchronous Apex",
          "Dependency Injection and the Stub API",
          "Creating a Stub With the Stub API",
          "Avoiding DML By Generating Ids",
          "General Testing Tips"
        ],
        "Course Wrap Up": [
          "Bonus Lecture - Wrap Up"
        ]
      },
      "requirements": [
        "Basic Salesforce development knowledge"
      ],
      "description": "Are you a Salesforce developer looking to get a deeper understanding of how you should be testing you Apex? If so this course is for you. This course is a set of short bitesize videos to guide you through everything you need to know about testing your Apex code in the most effective way. In the course we will cover a variety of topics including:\nCreating test data\nWorking with web services\nTesting Visualforce controllers\nTesting Asynchronous Apex\nTesting SOSL\nAnd much more\nIf you're a new Salesforce developer, or just a Salesforce developer looking to improve their testing practices, this is the course for you.",
      "target_audience": [
        "Salesforce Developers curious about testing in Apex",
        "Salesforce developers"
      ]
    },
    {
      "title": "Mastering Selenium, Java & TestNG Automation + ChatGPT Boost",
      "url": "https://www.udemy.com/course/mastering-selenium-java-and-testng-automation-testing/",
      "bio": "Modern tools & techniques Selenium, Java & TestNG Framework. ChatGPT, Maven, IntelliJ, Selenium Grid. Year 2023 Ready!",
      "objectives": [
        "Set up development environments for automation testing on Windows, Linux, and macOS.",
        "Utilize intermediate and advanced Java concepts to enhance automation testing techniques.",
        "Work with data in various formats (text, CSV, Excel, PDF) using Java.",
        "Access and manipulate an SQLite Database using JDBC for data-driven testing.",
        "Learn to leverage ChatGPT to boost productivity in automation tasks, from code generation to test result analysis and run optimization.",
        "Understand Selenium internals, architectures, and testing in diverse environments.",
        "Implement Cross-Browser Testing Framework to run tests in Chrome, Firefox, Safari, Edge browsers.",
        "Implement Parallel Testing Framework to improve the speed of test execution.",
        "Build a Localization Testing Framework with support for running automation tests in 12 different countries.",
        "Build a Selenium and TestNG automation framework from scratch for LIVE Web application testing.",
        "Develop real-world automated test scenarios with page objects, controls, and data tables.",
        "Utilize an HTML Playground for practice and experimentation with Selenium WebDriver.",
        "Configure logging using log4j2 and SLF4j.",
        "Generate reports using the Allure Reporting Framework.",
        "Explore Selenium Grid's components, advantages, caveats, and API endpoints.",
        "Build a Configuration Framework for continuous integration (CI) and run tests in Jenkins CI Server."
      ],
      "course_content": {
        "Setup Development Environment": [
          "Skills You'll Gain (**** MUST WATCH ****)",
          "Welcome To The Course",
          "Get To Know Your Instructor",
          "Introduction",
          "Windows Development Setup",
          "Linux Development Setup",
          "macOS Development Setup",
          "Installation Quick Note",
          "IntelliJ Maven Project",
          "Hands-On Starter/Finished Kits for Coding"
        ],
        "Java Programming Basics": [
          "Introduction",
          "Object-Oriented Programming",
          "Abstraction",
          "Encapsulation",
          "Inheritance",
          "Polymorphism",
          "Static Polymorphism",
          "Dynamic Polymorphism",
          "Java Basics: Arithmetic Operators",
          "Java Basics: Unary Operators",
          "Java Basics: Equality, Relational Operators",
          "Java Basics: Conditional Operators",
          "Java Basics: Type Comparison Operators",
          "Java Basics: Bitwise, Bit Shift Operators",
          "Java Basics: Conditional Flow Statements",
          "Java Basics: Loop Statements",
          "Java Basic: I/O Operations",
          "Java Exception Handling",
          "Java DateTime Operations"
        ],
        "Java Programming Intermediate, Advanced": [
          "Introduction",
          "Commonly Used Java Collections",
          "Collections: Map",
          "Collections: Set",
          "Collections: List",
          "Collections: Queue",
          "Map Interface",
          "Generics in Java",
          "Functional Programming",
          "Streams"
        ],
        "Java Working With Data": [
          "Introduction",
          "Working with Data in Java",
          "Importance of Maven in Java Project",
          "Working with Text Files",
          "Working with CSV Files",
          "Working with Excel Files",
          "Working with PDF Files",
          "Working with SQL Database SQLite",
          "Java JDBC",
          "Regular Expressions in Java"
        ],
        "TestNG Detailed WalkThrough": [
          "Introduction",
          "TestNG Test Annotation",
          "TestNG Before/After Suite Annotations",
          "TestNG Before/After Test Annotations",
          "TestNG Before/After Class Annotations",
          "TestNG Before/After Method Annotations",
          "XML-Based Configuration",
          "Test Suite Definition",
          "Parameterized Tests",
          "TestNG Parameters Annotation",
          "Environment Specific XML Development",
          "Environment Specific XML Staging",
          "Data-Driven Tests with DataProvider",
          "TestNG DataProvider Annotation",
          "Data-Driven Tests with Excel",
          "Grouping: Include groups",
          "Grouping: Include/exclude groups",
          "Grouping: Regex matches",
          "TestNG Before/After Group Annotations",
          "TestNG Factory Annotation",
          "TestNG Parallel Testing",
          "TestNG Parallel Testing Strategies",
          "Class-Level Parallelism",
          "Method-Level Parallelism",
          "Test Tag-Level Parallelism",
          "DataProvider Method Parallelism",
          "TestNG Listener Interfaces",
          "TestNG Dependency Testing",
          "TestNG Reporting",
          "TestNG Dependency Injection",
          "TestNG Dependency Injection Native Support",
          "Pure Guice Dependency Injection",
          "TestNG Guice Dependency Injection Support"
        ],
        "TestNG Logging": [
          "Introduction",
          "Importance of Logging",
          "Logging with TestNG Listeners",
          "Integrate Maven Surefire Plugin",
          "Built-In TestNG Loggers",
          "Logging with TestNG Reporters",
          "Logging with TestNG Custom Loggers",
          "Logging Libraries",
          "log4j2",
          "SLF4J"
        ],
        "TestNG Reporting": [
          "Introduction",
          "Importance of Reporting",
          "TestNG XML To HTML Using XSLT",
          "External Reporting Libraries",
          "Allure Framework"
        ],
        "Selenium WalkThrough": [
          "Introduction",
          "Some Prerequisites",
          "Live HTML Playground for Selenium Testing",
          "HTML Basics",
          "HTML New Feature Shadow DOM",
          "CSS Basics",
          "Javascript: Variables and Functions",
          "Javascript: Loops, Conditions",
          "Javascript: Element Selectors",
          "Javascript: DOM Manipulation",
          "Javascript: Event Listeners",
          "Javascript: Regular Expressions",
          "Javascript: Asynchronous Programming",
          "Javascript: AJAX Calls",
          "Javascript XPath Helpers",
          "Javascript CSS Helpers",
          "Types of Testing Functional Testing",
          "Types of Testing Non-Functional Testing",
          "Other Types of Testing",
          "Automation Testing Best Practices",
          "Things to Avoid in Selenium Tests",
          "What and What Not to Automate",
          "Testing Pyramid",
          "Selenium WebDriver Introduction",
          "WebDriverManager",
          "Browser Capabilities",
          "Wait Methods",
          "Implicit, Explicit, Fluent Wait",
          "Selenium Locators ID, CSS, XPath",
          "Browser Interactions: Navigation",
          "Browser Interactions: Cookies",
          "Browser Interactions: Keyboard",
          "Browser Interactions: Mouse",
          "Executing Javascript Code",
          "Selenium Exceptions",
          "Selenium Tools, WebDriver Tests, FormHomePage class",
          "DataTableControl Design Pattern",
          "HTML Playground DataTableControl",
          "HTML Playground CardControl",
          "HTML Playground ModalControl",
          "HTML Playground Page Objects",
          "HTML Playground NavigationControl",
          "HTML Playground PagesDemoTest",
          "HTML Playground JavascriptExecutorTest"
        ],
        "Selenium Advanced": [
          "Introduction",
          "Selenium Internals",
          "Selenium Components",
          "WebDriver Architecture",
          "RemoteWebDriver Architecture",
          "Selenium Advanced Topics",
          "Quick Note For Linux Ubuntu Users",
          "Quick Note For macOS Users",
          "Selenium Cross Browser Testing",
          "WebDriverFactory Architecture",
          "Cross-Browser Testing Workflow",
          "Cross-Browser Testing Implementation",
          "Selenium Parallel Testing",
          "Parallel Testing Code Updates",
          "Localization Testing",
          "Localization Testing Workflow",
          "Localization Framework Motivations",
          "Localization Framework Classes",
          "Tree Data Structure",
          "Tree Traversal Breadth First Search BFS",
          "Breadth First Search in Java",
          "Generating Localization Testing RX.java file",
          "Generating Localization Testing RXMap.java file",
          "Additional Localization Java Classes",
          "Advanced Testing Topics",
          "Multiple Environment Testing",
          "Benefits of Using a Configuration File",
          "Configuration File Formats",
          "Properties Configuration File",
          "XML Configuration File",
          "INI Configuration File",
          "Which Format to Use Within Our Framework",
          "Configuration Framework Goals",
          "Apache Commons Configuration",
          "Quick Note About LIVE App DEMO User",
          "Configuration Framework Implementation",
          "Selenium Testing in CI Environments",
          "Steps For Running Tests in CI",
          "Running tests using TestNG.xml on disk",
          "Running tests using TestNG.xml embedded in JAR",
          "Debugging: ScreenshotOnFailure Implementation"
        ],
        "Selenium Grid": [
          "Introduction",
          "Selenium Grid",
          "Selenium Grid 3 Components",
          "Selenium Grid 4 Components",
          "Selenium Grid Advantages, Caveats",
          "Selenium Grid API Endpoints",
          "Selenium Grid Status Checker",
          "Integrate Selenium Grid Status Checker",
          "Selenium Grid Related Framework Updates",
          "Selenium Grid Download Manager Class",
          "Selenium Grid Launcher Class",
          "Selenium Grid Config Reader Class",
          "Selenium Grid Config Class",
          "Selenium Grid Setup Options"
        ]
      },
      "requirements": [
        "Very basic experience with programming (in Java or equivalent language).",
        "Basic familiarity with an Integrated Development Environment (IDE) like IntelliJ or Eclipse.",
        "Basic understanding of software testing principles and concepts.",
        "Willingness to learn and adapt to new automation techniques and best practices.",
        "Passion and general interest in programming and software testing."
      ],
      "description": "This comprehensive Selenium WebDriver course covers a wide range of topics, including setting up development environments, Java programming fundamentals, intermediate and advanced Java concepts, working with data in Java, TestNG testing framework deep-dive, web automation with Selenium, logging using Log4j/SLF4j, reporting using Allure, building automation framework with best in industry software coding and architectural practices, running automation tests on Jenkins server, and more. Additionally, you will explore the power of ChatGPT for automated test code generation, efficient data generation, result analysis, and failure debugging assistance, taking your automation skills to the next level.\n\n\nKey Features Of This Course:\nCourse Built with Latest Technologies. AI Automation Testing with ChatGPT. Year 2023 Ready!\nYou'll work with the latest technologies from 2023: Java (JDK 17), Maven, TestNG, and recent Selenium WebDriver libraries and use IntelliJ IDEA IDE for development in this course.\nYou'll learn to harness the power of ChatGPT to automate test code generation, data generation, data strategies, test failure debugging, test run analysis, test migration, and test run optimization.\nHands-On Practice with Starter Kits\nFor every coding section of this course, you'll be provided with a starter and finished Java source code kit, which can be used for interactive coding during the video lessons.\nA total of 37 source code kits, comprising both starter and finished versions, will be made available to enhance your coding lectures throughout the course. These thoughtfully designed starter kits offer a valuable advantage by providing a solid foundation, enabling you to concentrate on the subject matter covered in each section. Conversely, the finished kits serve as invaluable resources, offering feedback and solutions to assist you in overcoming any obstacles encountered during your coding.\nBuild Automation Framework From Scratch\nWe'll construct a robust and adaptable LIVE ReactJS web application automation framework. This framework will be meticulously designed, considering extensibility, scalability, and architectural integrity. It will serve as a valuable foundation that can be effortlessly customized to suit your requirements for future web projects throughout your professional journey.\nYou will be provided with an HTML playground specifically designed for Selenium testing. The playground offers ample opportunities to practice and experiment with various Selenium testing techniques, allowing you to sharpen your skills effectively during the course.\nMulti-Platform Source Code Compatibility\nAll source codes demonstrated in this course will be made available to you.\nThe source code implementations showcased in this course will be fully compatible with contemporary Windows 8/10/11, Linux (specifically Ubuntu), and macOS operating systems, including support for M1/M2 arm processors.\n\n\nSummary of Topic Covered In This Course:\nSetting Up Development Environments\nLearn how to set up Windows, Linux, and macOS development environments.\nCreate a Maven project in IntelliJ IDEA IDE.\nJava Programming Fundamentals\nGain knowledge of Java programming fundamentals, including object-oriented programming, arithmetic, unary, equality/relational, conditional operators, flow/loop statements, and I/O operations.\nIntermediate and Advanced Java Concepts\nDive into intermediate and advanced concepts in Java programming, such as collections, generics, functional programming.\nWorking with Data in Java\nLearn to work with data in Java, using different formats like Text, CSV, Excel, and PDF files.\nUtilize JDBC to access an SQLite database.\nExplore Prompt Engineering and 30+ ChatGPT Prompts\nLearn the foundations of Prompt Engineering for automation testing.\nLeverage ChatGPT's potential in test code generation, data generation, data strategies, failure debugging, migration, result analysis, and test run optimization.\n\n\nTestNG Testing Framework\nMaster TestNG annotations, XML-based configuration, parameterized tests, data-driven tests, grouping, listeners, parallel testing, dependency testing, and dependency injection.\nConfigure logging for TestNG tests with listeners, reporters, custom loggers, and popular logging libraries like Log4j2 and SLF4J.\nUse TestNG XML to generate HTML reports, explore external reporting libraries, and understand the Allure Framework for test automation reporting.\nWeb Automation with Selenium APIs\nGain a solid foundation in HTML, CSS, JavaScript, automation best practices, identifying and utilizing Selenium locators, wait methods, and browser interactions.\nUnderstand Selenium internals, components, architectures, and testing in multiple environments.\nLearn about Selenium Grid's components, advantages, caveats, and API endpoints.\nAcquire strategies for planning and developing real-world test scenarios, page objects, controls, data table control implementation, authentication framework, and application bootstrapping.\nLIVE Project and HTML Playground for Selenium\nDevelop automated tests with PageObject class implementations, data providers, and test authoring techniques.\nBuild Selenium & TestNG automation framework from scratch for a LIVE Web application with cross-browser, parallel, multiple-environment, and localization testing support.\nUtilize the HTML playground setup for practicing Selenium WebDriver APIs.\nImplement four end-to-end Selenium UI automation tests with the framework implemented from scratch.\nSetting Up Jenkins Server\nSet up and utilize a Jenkins server for automated testing.\nInstall plugins, configure agents, create and run jobs using UI, and by writing Jenkinsfile.\nStrategies for DatePicker Controls in Selenium\nLearn strategies and best practices for working with DatePicker controls in Selenium, including implementation approaches.\n\n\nHow This Course Can Accelerate Your Testing Success:\nStruggling to set up your development environment for Selenium Java and TestNG automation? Learn the step-by-step process to configure your development environment, including setting up dependencies, IDE configurations, and project structure, so you can hit the ground running.\nWant to take your TestNG skills to the next level? Dive deep into the advanced features and functionalities of the TestNG testing framework and harness its full potential for robust and scalable test automation.\nAre you tired of the manual hassle of managing test data? Feeling overwhelmed by the need for efficient test data management? Explore the power of data-driven testing with Selenium Java and TestNG! Discover how ChatGPT can revolutionize test data generation and strategies for efficient and scalable automation.\nHave you wasted endless hours struggling to implement an automation framework? Are you frustrated with the wasted time and effort hindering your automation progress and productivity? Fast-track your success with this comprehensive course! Discover battle-tested practices and leverage ChatGPT to revolutionize your automation journey.\nAre you tired of spending precious time tracking and debugging errors, impacting your testing efficiency and delaying feedback? Dive into logging integration (log4j2, SLF4j) with Selenium, Java, and TestNG to identify issues. Gain visibility into test execution and resolve errors quickly with ChatGPT's assistance.\nStruggling to generate insightful test reports that integrate seamlessly with your automation tests? Frustrated with the lack of valuable insights for effective test analysis? Discover the secrets to integrating robust reporting frameworks (Allure Reports) with Selenium Java and TestNG, unlock valuable insights, and optimize test runs with ChatGPT's result analysis and test run optimization techniques.\nAre your test suites taking too long to execute? Unlock the power of parallel testing with TestNG and dramatically speed up your testing cycles without compromising quality.\nAre cross-browser compatibility issues causing headaches in your automation testing? Discover the secrets to seamless cross-browser testing and ensure your web applications work flawlessly on Chrome, Firefox, Edge, and Safari.\nIs localization testing a challenge in your automation testing efforts? Learn the best practices for automated testing of your applications in different languages, cultures, and regions, and deliver a truly global user experience.",
      "target_audience": [
        "Software Testers",
        "Quality Assurance Engineers",
        "Automation Test Engineers",
        "Software Developers",
        "Professionals related to software testing and quality assurance",
        "Aspiring professionals looking to get into the automation testing field"
      ]
    },
    {
      "title": "170+ Essential QA Automation Interview Questions & Tips 2025",
      "url": "https://www.udemy.com/course/qa-automation-interview-questions-tips-course/",
      "bio": "Job-Oriented Interview Prep to Become a Software Testing Pro with Selenium, TestNG, BDD, API, SQL, and Java. [2025]",
      "objectives": [
        "By the end of this course, you will be fully prepared to confidently attend any QA Automation interview.",
        "Discover the Ins and Outs of API Testing Interview Questions (Manual + Automation)",
        "Explore Software Testing Concepts and Real-Time Project Scenarios through Detailed Discussions",
        "Brush Up on Core Java Miscellaneous Interview Questions for SDET Automation Roles",
        "Dive Deep into Selenium WebDriver Automation Interview Questions with Detailed Discussions",
        "In-Depth Exploration of Test Automation Framework Interview Questions for TestNG, Cucumber, and BDD Tools",
        "Unique Method for Enhancing Coding Skills through Java Logical Program Explanations",
        "Stay tuned for valuable resume tips, including do's and don'ts, tailored specifically for building QA Automation resumes. (coming soon)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and How Interview Questions Are Designed",
          "Your Honest Feedback is Our Fuel for Success!"
        ],
        "Selenium Core and Java Interview Questions": [
          "What interview questions will be covered in this session?",
          "Explain Differences Between XPath and CSS Selector.",
          "How can alerts be managed in Selenium WebDriver?",
          "How do we utilize the CSS selector through the nth element?",
          "How to Execute Tests in Chrome's Headless Mode?",
          "How to manage alerts and popups originating from Windows in Selenium?",
          "How to Overcome StaleElementReferenceException in Selenium?",
          "What are Listeners in Selenium?",
          "What are the Challenges with Selenium Automation?",
          "What are the Different Types of Frameworks?",
          "What benefits does Selenium bring to the field of automation testing?",
          "What is a Framework?",
          "What is soft and hard assertion in selenium?",
          "What is the difference between WebDriver.findElement vs WebElement.findElement?",
          "What is the differences between Page Object Model and Page Factory?",
          "What types of exceptions have you encountered while using Selenium WebDriver?",
          "When to Use Hard and Soft Assertions?",
          "When to Use Selenium Grid?",
          "Which locators does Selenium support?"
        ],
        "Advanced Selenium WebDriver API Interview Questions": [
          "How do you validate if an element is visible or hidden on a web page",
          "What are the methods to handle Java Alerts in Selenium",
          "What is the difference between relative and absolute XPath",
          "Can you provide a sample XPath syntax to handle a parent from a child object",
          "How can we verify if we have successfully navigated to a child window",
          "How can you determine if a checkbox is selected in Selenium using Java",
          "How can you enter text in caps lock",
          "How can you get the count of links on a web page using Selenium",
          "How can you get the count of similar objects listed on a web page",
          "How do you perform a mouseover on a web element",
          "Write the syntax for XPath and CSS if ID and tag are given.",
          "How do you use Contains regular expression in XPath",
          "How do you use regular expressions in CSS",
          "How to handle child windows",
          "How to handle HTTPS certification in Chromes",
          "In how many ways can we handle frames in the application using WebDriver methods",
          "What are the different types of locators present in WebDriver",
          "What are the key factors to consider when selecting a locator for elements",
          "What is implicit wait",
          "What is the class available in Selenium to handle dropdowns",
          "What is the difference between implicit and explicit wait",
          "What is the difference between the get and navigate methods in Selenium",
          "What is the difference between the quit and close methods in WebDriver?",
          "What is the significance of the desired capabilities mechanism in Selenium",
          "Which driver is required to run tests in Chrome",
          "Which driver is required to run tests in Firefox",
          "Which two functions are commonly used to implement explicit waits in Selenium We",
          "Write the syntax for XPath and CSS if ID and tag are given.",
          "How do you take screenshots with Selenium WebDriver. Just explain with the code."
        ],
        "Automation Framework and TestNG Interview Questions": [
          "How can multiple data parameterizations be managed within an Automation Framewor",
          "How do you handle single data characterization in TestNG?",
          "What is TestNG.mov",
          "What are the main file components of an Automation framework built for Selenium?",
          "How to selectively execute test cases within a test suite?",
          "What are the advantages of using TestNG over JUnit",
          "How to include and exclude test methods from your test suite execution?",
          "How to set priority for execution in Automation Framework in TestNG?",
          "How does TestNG generate reports",
          "What are the annotations in TestNG. Name some of the annotation.?",
          "What is Invocation Count in TestNG?",
          "How do you integrate TestNG with Selenium WebDriver",
          "What are the different strategies for organizing locators in an automation?",
          "How to achieve parallel execution in TestNG?",
          "What is timeOut in TestNG?",
          "How can you execute specific tests from a set of test cases in Automation?",
          "Can you explain how you would execute preconditions for a specific scenario with"
        ],
        "Cucumber/BDD Interview Questions": [
          "What purpose does the \"glue\" serve in the Cucumber Options tag?",
          "What is Scenario Outline in Cucumber?",
          "Illustrate the benefits of Cucumber.",
          "What is BDD in software testing?",
          "Can you explain how you would execute preconditions?",
          "How can I integrate TestNG with Cucumber to capture screenshots of failed tests?",
          "How to set priority for execution in Cucumber Automation Framework?",
          "How to include and exclude test methods from your test suite execution using Cuc",
          "How to execute test cases within a test suite in Cucumber?",
          "How does a Cucumber-based Automation Framework handle multiple data parameteriza",
          "How do you handle single data parameterization in Cucumber",
          "What are the main file components of an Automation framework built for Selenium?"
        ],
        "API Testing /Web Service Interview Questions": [
          "Is it permissible to employ a POST request in lieu of put for resource creation?",
          "Is it possible to utilize a get request rather than put for resource creation",
          "What is the Protocol Used by RESTful Web Services?",
          "What are are the differences between API testing and UI testing?",
          "What are the differences between API testing and UI testing?",
          "What are the essential elements of an HTTP message sent by a client??",
          "What is Query Parameters?",
          "What is Path Parameters?",
          "What exactly needs to verify in API testing?",
          "What is a Rest API?",
          "What makes API testing the most suitable form for automation testing?",
          "Could you list of several authentication techniques utilized in APIs?",
          "Which HTTP Methods are typically used?",
          "How do PUT and POST methods differ from each other?",
          "What is a post method?",
          "What is a PUT method?",
          "what are some of the biggest challenges associated with testing API?",
          "Could you provide a list of several common JSON parsing techniques",
          "How can we distinguish between path and query parameters in an API request?",
          "How do you transmit attachments to an API using Rest Assured for testing",
          "How to define API details in Rest Assured Automation",
          "What is Rest Assured?",
          "What is JSON Serialization & Deserialization in Rest Assured",
          "What is your comprehension of the payload in a RESTful web service"
        ],
        "Database/SQL Testing Interview Questions": [
          "Which types of strings are used in database columns in MySQL",
          "When should the LIKE operator be used in SQL",
          "What is the purpose of the default table in databases",
          "What is the distinction between NOW() and CURRENT_DATE() functions",
          "What is the difference between the WHERE and HAVING clauses in SQL",
          "What is the difference between the CHAR and VARCHAR data types",
          "What is the difference between a primary key and a foreign key",
          "what is the BLOB data type",
          "What is String Function. List some common String Functions.",
          "What is Date Functions. List some common Date Functions",
          "What is a view",
          "What do DDL, DML, and DCL stand for",
          "What are the commonly used SQL functions",
          "What are SQL constraints and how are they used",
          "What are joins and how does GROUP BY work",
          "List some common aggregate functions.",
          "How can you retrieve data from tables in a sorted order",
          "How can you retrieve a specific number of records from a table",
          "How can you rename an existing table using an SQL statement",
          "How can you filter duplicate data when retrieving records from a table",
          "How can you drop a view",
          "How can you create a view in MySQL",
          "Explain the types of SQL Constraints.",
          "Can you explain the Usage of SQL Constraints"
        ],
        "Core Java Interview Questions": [
          "After running the code below, how many objects will be created in memory?",
          "How do StringBuffer and StringBuilder differ from each other?",
          "Can a class extend multiple interfaces in Java",
          "What is a constructor in Java",
          "In Java, what are the functions and significance of the \"this\" and \"super\" keywo",
          "What is the default constructor in Java.mov",
          "What is the difference between static and non-static methods in Java",
          "What is the difference between stack and heap memory in Java",
          "What is the difference between static and non-static variables in Java",
          "What are the Differences between Abstract Class and Interface?",
          "What is the difference between method overloading and method overriding in Java",
          "What are the Differences Between Array and ArrayList?",
          "What is serialization in Java",
          "What are the Differences between final, finally, and finalize?",
          "What are the Differences between HashMap and Hashtable?",
          "What is the difference between checked and unchecked exceptions in Java",
          "What is the difference between equals() and == in Java",
          "What is the purpose of static methods and variables in Java?",
          "What is the difference between StringBuffer and StringBuilder in Java",
          "What is the difference between throw and throws in Java",
          "What is the difference between static and non-static methods in Java"
        ],
        "Manual Testing and QA Behavioral Interview Questions": [
          "What's the most interesting bug you've found recently",
          "What's the first thing you do when an application throws a weird error",
          "What's the difference between retesting and regression testing",
          "What is the difference between smoke testing and sanity testing",
          "What drawbacks have you encountered with Agile methodology",
          "What does a test plan mean to you",
          "What are your daily tasks as an automation tester?",
          "What are some key challenges you face during software testing",
          "In an Agile environment, how do you handle doubts or questions about your projec",
          "If a small section of code is updated, how would you go about testing it",
          "How would you react if a project you're working on suddenly has a change in its",
          "How would you explain the difference between functional and non-functional testi",
          "How do you select which test cases to include in a regression test suite",
          "How do you resolve technical disagreements with a fellow QA team member",
          "How do you know when you've created enough test cases to thoroughly test a produ",
          "How do you differentiate between ad-hoc testing and exploratory testing",
          "How do you determine if a test case is not suitable for automation",
          "How do you approach delivering a high-priority release in a short timeframe",
          "Have you ever written test cases without any documentation. How did you manage",
          "Could you describe the different levels of testing",
          "Can you share one of your biggest challenges while doing regression testing",
          "Can you give an example of a bug that is high priority but low severity?",
          "As a tester, how do you identify a dummy login page that looks like your actual"
        ],
        "Interview Question Submission Form": [
          "Interview Question Submission Form",
          "Interview Question Submission Form Link"
        ]
      },
      "requirements": [
        "Basic understanding of software testing",
        "Familiarity with QA automation tools"
      ],
      "description": "Are you looking for QA job interview questions? Don't worry, we've got you covered! We have carefully prepared a collection of questions from over 200 SDETs working in different companies worldwide. Whether you're a beginner or an expert, these questions will help you prepare for your QA job interview with confidence. Let's dive in and get you ready for success!\n\n\nWhat makes our program truly exceptional for interviews? And why should Choose This course?\nWe provide detailed solutions for each QA question discussed, accompanied by practical examples. This approach ensures that you can answer questions with full confidence.\nVarious versions of answers are explored wherever applicable, showcasing the depth of knowledge you possess on the subject to the interviewer.\nEvery quarter, we review the questions to ensure they align with the current demands of Automation/SDET jobs. The videos are updated accordingly, and you'll always have lifetime access to all updates.\nAdditionally, students can submit their own experiences to suggest new questions they've faced difficulty answering. We promptly update the course with these new questions to ensure relevance and effectiveness. At the end of the course, you will find a form/email to submit your experiences and suggest new questions for consideration.\n\n\nWe cover a comprehensive range of topics commonly asked in QA interviews. Here’s a high-level overview:\n\n\nManual Testing and QA Behavioral Questions\nReal-time Project Testing Processes\nSelenium Web Automation and Advanced WebDriver API\nAutomation Framework Design and TestNG\nCucumber/BDD Testing Standards\nAPI Testing (Manual and Automation)\nDatabase/SQL Testing\nCore Java, Selenium WebDriver, and Programming Logic\nJava OOPS and Miscellaneous Concepts\nNon-Functional Testing\nResume Suggestions and More (coming soon)\n\n\nOur extensive coverage ensures you're well-prepared for any QA interview.",
      "target_audience": [
        "Software Testers",
        "Software Engineers",
        "Quality Assurance Tester (QA Tester)",
        "Quality Assurance Engineer (QA Engineer)",
        "Software Development Engineer in Test (SDET)",
        "Quality Analyst (QA Analyst)",
        "Automation Tester",
        "Manual Tester",
        "Software Quality Assurance Analyst",
        "Testing Analyst",
        "Technical Quality Manager"
      ]
    },
    {
      "title": "Master Automation & Web Services Testing using UFT/QTP",
      "url": "https://www.udemy.com/course/master-automation-web-services-testing-using-uftqtp/",
      "bio": "Become an expert in Web Services Testing and Automation using HP UFT",
      "objectives": [
        "Master Web Services Testing",
        "Master Automation Testing using UFT"
      ],
      "course_content": {
        "Introduction to Web Services": [
          "What is Web Services",
          "Different types of Web Services",
          "Language used by Soap/Web Services"
        ],
        "Continuing with Web Services with live examples": [
          "What's the difference between API and Web Services (most lectures confuse this)",
          "Live examples of Web Services and hands-on manual testing on them"
        ],
        "Introducing UFT and Automation of Web Services": [
          "New must-know features of UFT 11.5 and 12.02",
          "Automating Web Services using HP Unified Functional Testing (UFT)",
          "Performing GUI Automation using UFT",
          "Writing Descriptive Programming/VB Script in UFT"
        ]
      },
      "requirements": [
        "No prior web services testing knowledge required",
        "No prior UFT experience required"
      ],
      "description": "Course Materials were last updated on September 27th, 2015: Updated UFT videos will be added to this same course on monthly basis to keep you updated with latest skills with this one-time purchase.\nThis is another award winning and popular course from us and we are showcasing it on Udemy for the first time. Just like our other courses, we have kept all the intro and basic course videos available for preview for your convenience so please feel free to explore and test drive it. If you want to become a master in Web Services Testing and Automation using HP's Unified Functional Testing (UFT), look no further and dive into this course.\nHP Unified Functional Testing (UFT) does cost a fortune but it's still a market leader in the automation testing industry. Nowadays, many open source and low-cost automation tools came into play but QTP and UFT are still popular for their advanced features and controls. UFT provides a better control over our automation process and it came up with many advanced and useful features QTP did not have. It is suitable for both people with non-programming and programming backgrounds. UFT supports VB script for customization and better control which is easy to learn. However, it has been difficult to find a end-to-end UFT training solution for basic and advanced UFT features including Web Services Testing. It is essential to have UFT skills to be able to gain competitive advantages in today's market. QAEversity is committed to provide a unique learning experience for delivering UFT training online. In this course, we cover all the important aspects of UFT starting from the very basics to the most advanced level concepts. This course treats every student as a freshman and explains each and every single step thoroughly. It can be a great source to brush up a specific topic or master the entire course. This course covers basic and advanced topics including, new features in UFT 11.5, new features in UFT 12.02, concepts of Web Services with live examples, manual testing of live Web Services, Web Services testing using UFT, Automating Web Services using UFT, Automation with UFT and writing descriptive programming/vb script in UFT.",
      "target_audience": [
        "Beginners in the Web Services Testing field",
        "Beginners in the HP UFT field"
      ]
    },
    {
      "title": "JENKINS Beginner Tutorial - Step by Step",
      "url": "https://www.udemy.com/course/jenkins-beginner-tutorial-step-by-step/",
      "bio": "Learn Jenkins from scratch",
      "objectives": [],
      "course_content": {
        "INTRODUCTION": [
          "Introduction and Getting Started",
          "How to change Home Directory",
          "How to use CLI (command line interface)"
        ],
        "ROLES AND CONFIGURATIONS BASICS": [
          "How to create Users + Manage + Assign Roles",
          "Basic Configurations"
        ],
        "JOBS": [
          "Getting started with JOBS"
        ],
        "Integration with GIT": [
          "Jenkins integration with GIT (SCM)"
        ],
        "PIPELINES | DEPLOYMENTS | INTEGRATIONS | PLUGINS": [
          "What is Automated Deployment (Step by Step)",
          "How to do Automated Deployment (Step by Step)",
          "Notifications - How to send Email from Jenkins",
          "What is Pipeline in Jenkins (DevOps)",
          "How to setup DELIVERY PIPELINE in Jenkins (Step by Step)",
          "How to setup BUILD PIPELINE in Jenkins (Step by Step)"
        ],
        "TIPS & TRICKS": [
          "How to Parameterize job in jenkins",
          "How to run job from command line",
          "How to run parameterized job from command line",
          "How to create Parameters - CHECK BOX, DROP DOWN, RADIO BUTTON",
          "How to Pass Parameters to downstream Job",
          "How to create Build Monitor View in Jenkins"
        ],
        "BONUS - Jenkins on Tomcat": [
          "How to setup Jenkins on Tomcat"
        ]
      },
      "requirements": [
        "Basic knowledge of how to use computer is enough"
      ],
      "description": "Jenkins is a Automation and CI Tool. It is a java application and very easy to learn.\nThis course is designed for complete Beginners to understand and learn Jenkins from scratch.\nWe will go very basic step by step in this course and by the end you will be able to use Jenkins at all levels.\nLet's Get Started",
      "target_audience": [
        "Anyone who wants to learn JENKINS from scratch",
        "Anyone who wants to use Jenkins for personal and enterprise projects"
      ]
    },
    {
      "title": "Build+Deploy+Test with TFS 2015 and Selenium",
      "url": "https://www.udemy.com/course/builddeploytest-with-tfs-2015/",
      "bio": "Perform automated Continues integration with TFS 2015 vNext build system",
      "objectives": [],
      "course_content": {
        "Agenda and Introduction": [
          "Agenda",
          "Part 1 - Introduction",
          "Part 2 - Introduction to Build+Deploy+Test with environment pre-requisites"
        ],
        "Building Application with TFS 2015 and Selenium": [
          "Part 3 - Building application with TFS 2015 and Selenium",
          "Part 4 - Building Test code with TFS 2015 and Selenium"
        ],
        "Deploying Application and test code with TFS 2015 and Selenium": [
          "Part 5 - Deploying application and test code with TFS 2015 in local machine",
          "Part 6 - Deploying application with TFS 2015 in local machine (Contd)",
          "Part 7 - Deploying application with TFS 2015 in Remote machine"
        ],
        "Testing application TFS 2015 and Selenium in remote machine": [
          "Part 8 - Testing application and selenium framework with TFS 205 and SElenium",
          "Part 9 - Testing application and selenium framework with TFS 2015 and Selenium",
          "Part 10 - Testing application and selenium code with TFS 2015 (Contd)",
          "Part 11 - Continuous integration with TFS 2015 and Selenium"
        ]
      },
      "requirements": [
        "Good understand of how CI system works"
      ],
      "description": "In this course we will discuss and learn about Automated Build+Deploy+Test with TFS 2015 and Selenium automation framework.\nWe will use TFS 2015 vNext build system and its powerful build deployment workflow along with automated testing framework Selenium to deploy and test application in both local and remote machines running on Server 2012 R2 and Hyper-V machines (Windows 8.1).\nIn this course we will understand each and every step of creating a vNext build definitions from complete groundup, hence one without any knowledge in TFS 2015 vNext build definition can start learning and understand the concepts as much easily as possible.",
      "target_audience": [
        "This course is for Manual test engineers, Automated test engineers and developers",
        "This course is also for Devops who perform deployment of applications"
      ]
    },
    {
      "title": "PCET - Certified Tester with Python – Practice Tests - 2025",
      "url": "https://www.udemy.com/course/pcet-certified-tester-with-python-practice-tests/",
      "bio": "Master Software Testing Fundamentals, Prepare with Realistic Mock Tests, and Pass the PCET Exam with Confidence",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for the PCET - Certified Entry-Level Tester certification? Do you want to ensure you’re fully equipped to tackle the exam with confidence? This course is designed to give you a competitive edge by providing six full-length practice exams that mirror the official PCET test.\n\n\nMastering software testing fundamentals and Python testing applications is essential for a successful career in quality assurance. Our expertly crafted mock exams will not only test your knowledge but also help you understand key concepts through detailed explanations of each question. Whether you're new to software testing or looking to validate your expertise, these practice exams will provide the insights, strategies, and confidence needed to pass the certification.\n\n\n\n\nWhy You Should Enroll in This Course\nReal Exam Experience – Our mock tests are structured to simulate the actual PCET certification exam, ensuring you are prepared for the real challenge.\nComprehensive Coverage – The questions cover all essential areas, including test case design, defect management, automation scripts, and Python testing basics.\nDetailed Explanations – Every question includes in-depth answer explanations, helping you understand why a particular choice is correct or incorrect.\nUnlimited Retakes – You can retake the practice exams as many times as needed, with shuffled questions and answers for a fresh experience every time.\nTimed Assessments – Get accustomed to the exam’s time constraints by practicing with a time limit per question, improving your speed and accuracy.\nConfidence Building – Repeated exposure to exam-style questions will help you overcome test anxiety and perform at your best on exam day.\nRegularly Updated Content – Our questions are frequently reviewed and updated to match the latest PCET exam format and syllabus.\nCareer Advancement – The PCET certification is a valuable credential that enhances your resume, helping you secure roles in software testing and quality assurance.\nSelf-Paced Learning – Study at your own pace, anytime and anywhere, with lifetime access to the course materials.\nExpertly Designed for All Levels – Whether you're a beginner or an aspiring test automation engineer, this course is structured to benefit learners at different stages of their careers.\n\n\n\n\nWhat This Course Includes\n6 Full-Length Mock Exams – 240 total questions designed to cover all critical aspects of the PCET exam.\nUnlimited Retakes – Practice as many times as needed to achieve mastery.\nDetailed Answer Explanations – Understand the reasoning behind each answer choice.\nTimed Exam Simulations – Develop speed and accuracy with real-world exam conditions.\nLifetime Access – Study anytime, anywhere, with access to all future updates.\n\n\n\n\nThis course is your ultimate PCET certification preparation resource, giving you everything you need to pass with confidence. Enroll now and take the first step toward validating your software testing skills with Python.",
      "target_audience": [
        "Aspiring software testers looking to start a career in quality assurance.",
        "Junior QA professionals who want to strengthen their understanding of Python-based testing.",
        "Python developers interested in learning software testing methodologies.",
        "Students and recent graduates from computer science, IT, or software engineering backgrounds.",
        "Software engineers looking to transition into a testing or QA role.",
        "Freelancers and independent testers seeking to validate their expertise with a recognized certification.",
        "Test automation beginners who want to build a foundation in Python for testing.",
        "Professionals preparing for the PCET certification exam who need structured mock tests.",
        "Developers who want to enhance their software testing skills to improve code quality.",
        "Anyone interested in learning industry-standard testing practices to advance their career."
      ]
    },
    {
      "title": "Complete Bugzilla Course for Beginners",
      "url": "https://www.udemy.com/course/complete-bugzilla-course-for-beginners/",
      "bio": "Master Bug Filing, Reporting, Searching, Editing, Searching, Cloning and more using this course",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "You will need a PC with reliable working Internet connection"
      ],
      "description": "Bugzilla is a web-based general-purpose bug tracking system and testing tool originally developed and used by the Mozilla project, and licensed under the Mozilla Public License.\nFrom this course, you will learn about the Bug Reporting, Searching a Bug, how to clone a Bug, editing a Bug, and more using Bugzilla tracking and testing tool.\n\n\nFeel free to ask me any question.",
      "target_audience": [
        "Beginners who wants to learn how to report or file and track Bug reports using Bugzilla tool",
        "Beginners who wants to learn about Bugzilla (Bug tracking tool)"
      ]
    },
    {
      "title": "The Complete Selenium WebDriver Course with TestNG (Java)",
      "url": "https://www.udemy.com/course/the-complete-selenium-webdriver-course-with-testng-java/",
      "bio": "Automate web apps using Selenium WebDriver, Java & TestNG — learn element interaction, waits, and testing flow",
      "objectives": [
        "Use Selenium WebDriver to locate and interact with web elements like buttons, input fields, dropdowns, checkboxes, and radio buttons.",
        "Automate browser behavior such as navigation, window management, and waits to build reliable end-to-end UI tests.",
        "Implement TestNG framework features including annotations, assertions, and test grouping to organize and validate test cases effectively.",
        "Extract data from web pages using methods like getText(), getAttribute(), and evaluate element states such as visibility and selection."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with basic Java syntax is recommended, but no prior Selenium experience is required — everything will be taught step by step."
      ],
      "description": "Are you ready to start your journey into test automation? This course is your complete guide to mastering Selenium WebDriver with Java and TestNG, even if you have no prior experience with Selenium.\nIn today’s fast-paced development environments, automation testing is an essential skill for QA engineers, developers, and anyone working in software delivery. This course is designed to take you from the basics to a solid, job-ready foundation in UI automation — with step-by-step explanations, real-world examples, and hands-on practice.\nYou'll start by setting up your environment and writing your first Selenium script. From there, we’ll dive into navigating pages, interacting with elements (like buttons, input fields, dropdowns, checkboxes, and radio buttons), and using WebDriver to extract data and validate page content.\nYou’ll also learn how to manage waits and synchronization, handle multiple windows and alerts, and apply TestNG annotations to structure your tests professionally. We’ll cover assertions, test grouping, and reporting, helping you build clean, maintainable test frameworks.\nWhether you're a manual tester ready to transition, a Java developer expanding into testing, or a beginner learning automation from scratch, this course will give you the confidence and skills to start automating web apps like a pro. With practice and persistence, you’ll be well on your way to becoming a confident automation engineer.",
      "target_audience": [
        "Beginner testers or QA professionals looking to start automation with Selenium using Java",
        "Java developers who want to expand into automated UI testing",
        "Manual testers ready to transition into automation and improve their career prospects",
        "Students or recent grads pursuing software testing or automation engineering roles"
      ]
    },
    {
      "title": "Testing Daily: Free App For Testers To Get The Testing Feed",
      "url": "https://www.udemy.com/course/testing-daily-free-app-for-testers-to-get-the-testing-feed/",
      "bio": "A Free mobile app specially designed for Testers to keep them updated with latest testing trends, news and feed.",
      "objectives": [],
      "course_content": {
        "What, Why and how to use Testing Daily?": [
          "What is Testing Daily and Why it is required?",
          "How to install and use Testing Daily on mobile, browser and web?",
          "Testing Daily opens every time in new tab, this is not a bug.",
          "Is it safe and secure?",
          "FAQs and support"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "A Course to learn all about Testing Daily. This course has covered everything about Testing Daily innovation which is very helpful for every tester's career.\nTesting Daily is an absolutely free community product.\nIt is offered by SelectorsHub.\nIt is invented and created by Sanjay Kumar, Founder and Creator of SelectorsHub.\nTesting Daily is available as Mobile App, Browser Plugin and Web application.\nTesting Daily is available both on android and ios.\nIt can be installed from play store and app store.\nIt supports all the chromium based browsers like chrome, edge, opera, chromium and brave etc.\n\n\nTopics covered in this course-\nWhat is Testing Daily?\nWhy is Testing Daily required for every tester?\nHow will Testing Daily add value in Tester's career?\nHow to install Testing Daily?\nFor which all platform it is available?\nHow to use Testing Daily?\nAll the Features of Testing Daily\nGet the latest testing feed.\nTesting Daily is the tester’s home page which list down all the latest testing related blogs, tutorials, news and trends in the new tab. It is an absolutely free browser plugin.\nThe best part of this tool is that you don’t have to do anything extra to use it, just install it.\nVery simple 2 steps to start with Testing Daily plugin-\nAdd the plugin to your Browser from below respective install button.\nOpen the new tab and you will see all the latest testing related blogs, tutorials, news and trends in the new tab.\nYou can also it on your mobile phone from play store/app store. Links given below and use it as a mobile app.\nWow!! You are all set, Enjoy using the Testing Daily and be updated with the latest testing trends.\nNow Testing Daily is also available on web. You can directly open it through url..\n\n\nNow Testing Daily also available for Mobile – Get the testing feed on the go!!",
      "target_audience": [
        "Testers",
        "Software Tester",
        "Manual Tester",
        "Automation Tester",
        "Testing manager",
        "Test architect",
        "Selenium users",
        "SDETs",
        "Beginner in Testing",
        "Fresher",
        "Senior Testers",
        "Fresher Tester",
        "Cypress users",
        "playwright users",
        "selectorshub users"
      ]
    },
    {
      "title": "PCAT™ – Certified Associate Tester with Python - Mock Exams",
      "url": "https://www.udemy.com/course/pcat-certified-associate-tester-with-python-exams/",
      "bio": "Master the PCAT™ Certification with Six Full-Length Mock Exams, Complete with Detailed Answer Explanations and Insights!",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Prepare effectively for the PCAT™ – Certified Associate Tester with Python certification with this comprehensive set of mock exams. This course is designed to help you achieve a high level of readiness by offering six full-length mock exams that mirror the format, difficulty, and subject areas of the actual certification exam.\nEach mock exam is meticulously crafted to cover the essential topics of the PCAT™ certification, including Python programming, software testing fundamentals, automation testing, and more. The questions are designed to challenge your knowledge, sharpen your skills, and identify areas that require further review. Beyond just providing correct and incorrect options, each question is accompanied by a detailed explanation that breaks down the reasoning behind the answer. This enables you to not only practice but also understand the underlying concepts thoroughly.\nThe explanations serve as a learning tool in themselves, offering insights into why certain answers are correct while others are not, ensuring you build a deep understanding of Python and software testing principles. Additionally, you will get to experience various question types that you may encounter on the actual exam, from multiple-choice questions to more complex scenario-based queries.\nWhether you’re a beginner preparing for your first certification or an experienced professional looking to validate your skills, this course provides the structured practice you need to approach the PCAT™ exam with confidence. With these mock exams, you can identify your strengths, work on your weaknesses, and enter the exam room fully prepared to succeed.\n\n\nCan I retake the practice tests?\nYes, you can attempt each practice test as many times as you like. After completing a test, you'll see your final score. Each time you retake the test, the questions and answer choices will be shuffled for a fresh experience.\nIs there a time limit for the practice tests?\nYes, each test includes a time limit of 120 seconds per question.\nWhat score do I need to pass?\nYou need to score at least 70% on each practice test to pass.\nAre explanations provided for the questions?\nYes, every question comes with a detailed explanation.\nCan I review my answers after the test?\nAbsolutely. You’ll be able to review all your submitted answers and see which ones were correct or incorrect.\nAre the questions updated frequently?\nYes, the questions are regularly updated to provide the best and most relevant learning experience.\n\n\nAdditional Note: It’s highly recommended that you take the practice exams multiple times until you're consistently scoring 90% or higher. Don’t hesitate—start your preparation today. Good luck!",
      "target_audience": [
        "Aspiring Software Testers: Individuals looking to start a career in software testing, especially those with a focus on Python programming.",
        "Entry-Level Python Developers: Developers who are new to the field and want to validate their Python skills along with foundational knowledge in software testing.",
        "Quality Assurance Professionals: QA specialists seeking to enhance their skills in Python-based testing environments and earn a recognized certification.",
        "IT Professionals Switching to Software Testing: Experienced IT professionals from other domains looking to transition into software testing, particularly those interested in automation testing using Python.",
        "Students and Recent Graduates: Individuals who have recently completed their education in computer science or related fields and are preparing to enter the job market.",
        "Certification Seekers: Professionals aiming to obtain the PCAT™ certification to improve their job prospects, credibility, and career advancement opportunities.",
        "Test Automation Enthusiasts: Individuals with a keen interest in automated testing who wish to deepen their knowledge and skills in using Python for test automation.",
        "Project Managers and Team Leads: Those who manage or oversee testing teams and want to gain a better understanding of Python-based testing methodologies."
      ]
    },
    {
      "title": "QMetry Test Management for JIRA (For Cloud Version v4.x)",
      "url": "https://www.udemy.com/course/qmetry-test-management-for-jira-for-cloud-version-v4x/",
      "bio": "The Best Test Management Inside Jira to Run Manual & Automated Test Cases. Get Quality Analytics with Test Coverage",
      "objectives": [
        "Confidently manage test cases, test cycles and test plans",
        "Generate real-time testing reports for both testers and QA managers to leverage and make testing decisions",
        "Integrate projects seamlessly with test automation",
        "Reduce overall time and energy on test management",
        "Achieve better testing quality and productivity",
        "Get end to end traceability from Stories, Test cases, Test Cycles, Defects and Test Plans"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate JIRA skill level",
        "Knowledge of testing lifecycle"
      ],
      "description": "QMetry Test Management for Jira (v4.x) is built to provide a seamless one-tool experience of test management inside Jira. It is the best test management tool that provides an ALM experience – from Requirements management to Test Case Management in the comfort of the familiar Jira ecosystem. QTM4J is intuitive, powerful, and lightweight test management to provide an ALM experience for agile team members such as BA, Testers, Jira admin, PM to work in the comfort of the same Jira Interface. This is the only tool within Atlassian Marketplace offering embedded Exploratory Testing that enables easy test case documentation. QTM4J is also the only tool to provide the most advanced and comprehensive analytics with 30+ reporting gadgets inside Jira.\nThe new, intuitive and user-friendly UI of QMetry Test Management for Jira provides an improved user experience with the following features.\nModule wise Granular Permissions to grant permissions to do individual tasks to users/a group of users.\nTest Case Versioning to create and maintain multiple versions of a single test case, which allows you to preserve older versions of test cases.\nTest Data Parameterization to reuse test cases for multiple test data.\nTest Cycle to manage and track test execution cycles.\nTest Plan to lay down test strategy and schedule releases with utmost quality.\nEnhanced Reporting to render reports faster with more customization options.\nEmbedded Exploratory Testing that enables easy test case documentation.",
      "target_audience": [
        "QA professionals who seek to leverage their JIRA projects and issues to achieve better test management and testing quality"
      ]
    },
    {
      "title": "Automação de Testes Com Selenium WebDriver e C# - COMPLETO",
      "url": "https://www.udemy.com/course/automatizando-testes-de-software-com-selenium-webdriver-e-c-sharp/",
      "bio": "Crie testes automatizados de forma profissional: Selenium IDE/RC, WebDriver, GRID, Docker, Appium, Git, Jenkins",
      "objectives": [
        "Identificar os princípios e fundamentos da automação em testes de software.",
        "Elaborar, executar e exportar os scripts de testes automatizados.",
        "Executar os scripts de testes em múltiplos navegadores (Cross Browser Testing).",
        "Executar testes dirigidos à dados (Data Driven).",
        "Criar a própria ferramenta de execução de testes.",
        "Criar o próprio robô (bot) para executar os testes de forma robotizada.",
        "Implementar o padrão Page Object nos scripts de testes para torná-los mais flexíveis às mudanças da aplicação.",
        "Agrupar vários comandos em um único comando utilizando o conceito de Procedure.",
        "Executar comandos nativos do Javascript nos scripts de testes.",
        "Construir um Projeto de Teste (WebDriver).",
        "Aplicar Técnicas de Refatoração no Projeto de Teste.",
        "Executar Testes em Paralelo (Parallel Testing).",
        "Executar Testes Distribuídos (Selenium Grid).",
        "Executar Testes em Containers (Docker).",
        "Executar Testes em Dispositivos Móveis (Appium).",
        "Controlar Versões do Projeto de Teste (Bonobo Git Server).",
        "Automatizar as Principais Etapas da Integração Contínua (Jenkins)."
      ],
      "course_content": {
        "Introdução": [
          "AVISO IMPORTANTE",
          "Introdução",
          "Boas Vindas",
          "Objetivos, Público-Alvo e Pré-Requisitos",
          "Apostila sobre C# e POO"
        ],
        "Inovando a sua Forma de Testar Software": [
          "A Inovação no Mercado de Trabalho",
          "Automação em Teste de Software",
          "Por que Automatizar os Testes?",
          "Testes Automatizados x Testes Manuais",
          "Considerações Acerca da Automação",
          "Planilha 5W2H",
          "Princípios da Automação de Testes",
          "Anotações do Módulo",
          "Questionário do Módulo"
        ],
        "Selenium": [
          "O Que é Selenium e Como Surgiu?",
          "Por que Usar Selenium?",
          "Anotações do Módulo",
          "Questionário do Módulo"
        ],
        "Selenium IDE: Criando Scripts de Testes Sem Programação": [
          "ALTERAÇÃO DA URL BASE",
          "POR QUE E COMO UTILIZAR A VERSÃO 2.9.1 DOO SELENIUM IDE",
          "A IDE",
          "Elaborando o Script de Teste (Record)",
          "Executando o Script de Teste (Play)",
          "Estrutura de Condição (If-Else)",
          "Laço de Repetição (While)",
          "Evidências de Falhas",
          "Relatório de Execução",
          "Salvando o Script de Teste",
          "Exportando o Script de Teste",
          "Alguns plugins do Selenium IDE",
          "Principais Comandos do Selenium IDE",
          "O Selenium IDE morreu?"
        ],
        "Selenium Remote Control: Testes em Múltiplos Navegadores": [
          "Standalone Server",
          "Executando Scripts Pelo WebDriver Playback",
          "Executando Scripts Pelo Html Runner",
          "Parâmetros do Standalone Server",
          "Parâmetros do Html Runner"
        ],
        "Selenium WebDriver: Construindo um Projeto de Teste": [
          "Sobre a API",
          "Exportando os Scripts de Testes (Recapitulação)",
          "Estrutura dos Scripts Exportados",
          "Criando o Projeto de Teste",
          "Importando os Scripts Exportados",
          "Configurando o Projeto de Teste",
          "Executando os Testes no Visual Studio",
          "Executando os Testes no NUnit",
          "Executando Testes em Paralelo",
          "Refatoração 1: Page Object",
          "Refatoração 2: Comandos Complementares",
          "Refatoração 3: Parametrização de Valores",
          "Refatoração 4: Espera Dinâmica",
          "Refatoração 5: Pré e Pós Requisitos"
        ],
        "Selenium Grid: Testes Distribuídos": [
          "A Rede",
          "Criando o Hub",
          "Criando os Nodes",
          "Executando os Testes Distribuídos"
        ],
        "Docker: Testes em Containers": [
          "Containers em Teste de Software",
          "Docker Toolbox",
          "Boot2Docker",
          "Docker Compose",
          "Inicializando os Containers",
          "Acessando o Console do Hub",
          "Executando os Testes nos Containers",
          "Execução dos Testes em Container (Solução)"
        ],
        "Appium: Testes em Dispositivos Móveis": [
          "Sobre o Framework",
          "Configurando o Ambiente",
          "Definindo os Parâmetros do Dispositivo",
          "Execução dos Testes Mobiles"
        ],
        "Bonobo Git Server: Controle de Versão": [
          "Controle de Versão em Teste de Software",
          "Instalando e Configurando o Bonobo",
          "Criando e Clonando um Repositório",
          "Comandos Básicos do Git",
          "Comando Revert Do Git (Solução)"
        ]
      },
      "requirements": [
        "Conhecimento Básico de Teste de Software",
        "Noção Básica de HTML.",
        "Familiaridade com a Sintaxe da Linguagem C#"
      ],
      "description": "O curso mais completo sobre Selenium com C# em português (20 HORAS DE DURAÇÃO).\n\n\n► VEJA O QUE OS NOSSOS ALUNOS ESTÃO DIZENDO SOBRE O CURSO:\n\n\n\"Muito bom o curso! Recomendo para todos. Consegui meu emprego graças à ele.\" - Gustavo Leme\n\n\n\"O curso foi ótimo e a execução dos testes foi bem próximo da realidade, esbarrando em problemas e buscando solução.\" - Ricardo Amorim\n\n\n\"Agregou com sucesso novos atalhos para automação. Parabéns pela iniciativa em compartilhar o conhecimento e desde já desejo sucesso nesta nova era.\" - Caio Castro\n\n\n\"Gostei do curso por explicar todo o entorno do projeto de teste. Desde a configuração de ambiente e todas as outras ferramentas que auxiliam o projeto. Aguardando as aulas bônus.\" - Julcilea Lourenço\n\n\nAprenda as principais técnicas e tecnologias que abrangem uma das melhores soluções em automação de testes, o Selenium.\n\n\nIdentifique os princípios e fundamentos da Automação de Testes;\nElabore, execute e exporte scripts de testes automatizados;\nExecute os scripts de testes em múltiplos navegadores (Cross Browser Testing);\nExecute testes dirigidos à dados (Data Driven);\nCrie sua própria ferramenta de execução de testes;\nConstrua seu próprio robô (bot) para executar os testes de forma robotizada;\nImplemente o padrão Page Object nos scripts de testes para torná-los mais flexíveis às mudanças do sistema;\nAgrupe vários comandos em um único comando utilizando o conceito de Procedure;\nExecute comandos nativos do Javascript nos scripts de testes;\nConstrua um projeto de teste do zero;\nMelhore o código-fonte do projeto de teste através de técnicas avançadas de refatoração;\nExecute testes em paralelo (Parallel Testing);\nExecute remotamente testes nos mais variados dispositivos de uma rede (Teste Distribuído);\nExecute testes em Containers;\nExecute testes em dispositivos móveis;\nControle versões do projeto de teste;\nAutomatize as principais etapas de uma Integração Contínua.\n\n\nSolução completa e gratuita para automatizar testes funcionais\nDesenvolvido por profissionais de grandes empresas (Google, Facebook, Mozilla, Opera), o Selenium é uma das melhores alternativas para quem pretender automatizar os testes funcionais de projetos web. Não é à toa que foi adotado como principal tecnologia de testes em nuvem (Testing Cloud) de famosas empresas do ramo tais como: BrowserStack, SauceLabs e CrossBrowserTesting.\nPor ser um projeto Opensource, o usuário não só conta com vários recursos gratuitos, mas também fica livre para aprimorá-los e assim criar soluções de testes.\nConteúdos e Visão Geral\nNeste curso, vou te ajudar a criar seu primeiro ambiente de testes automatizados. Começando primeiramente com uma boa base teórica acerca de inovação e automação em testes de software. Em seguida, começaremos a parte prática, explorando todos os recursos das ferramentas Selenium IDE e Selenium Remote Control.\nAlém disso, vou te ajudar a dominar as mais avançadas técnicas e tecnologias de automação de teste com o auxílio do Selenium WebDriver para a linguagem de programação C#. Com base nos conhecimentos adquiridos no curso anterior, daremos continuidade com a construção de um projeto de teste por meio da importação dos scripts. Em seguida, iremos melhorar o código-fonte do projeto com boas práticas de refatoração.\nO uso de ferramentas e frameworks complementares, tais como: Selenium Grid, Docker e Appium, permitirão que nosso projeto execute remotamente os testes em ambientes de diferentes configurações, como por exemplo: máquinas virtuais, containers e até mesmo em dispositivos móveis.\nE seguindo o embalo de metodologias como Agile e DevOps, mostrarei na prática, como você (profissional de Teste de Software) pode trabalhar em conjunto com a equipe de desenvolvimento por meio do controle de versões com o versionador Bonobo Git Server e integração contínua usando o Jenkins.",
      "target_audience": [
        "Profissionais da área de qualidade de software que almejam migrar para área de automação de testes, dominando as mais requisitadas técnicas e tecnologias do mercado de Teste de Software e assim, obterem tanto o merecido destaque em suas carreiras quanto o preparo para novas e maiores oportunidades de trabalho."
      ]
    },
    {
      "title": "Performance Testing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/performance-testing-interview-questions/",
      "bio": "Performance Testing Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Performance Testing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nUnlock Your Potential with Our Comprehensive Performance Testing Interview Questions Practice Test\nAre you ready to excel in your next performance testing interview? Whether you're a beginner or an experienced professional, our Performance Testing Interview Questions Practice Test is designed to help you master the key concepts, tools, and techniques required to succeed in the competitive field of performance testing. With a focus on real-world scenarios and in-depth knowledge, our practice tests cover six essential sections, each with meticulously crafted subtopics to ensure you are fully prepared for any question that comes your way.\nPerformance testing is a critical component of software development, ensuring applications run smoothly and efficiently under various conditions. Our course is specifically designed to provide you with a robust understanding of performance testing through a series of targeted interview questions and practice tests.\nEnroll Today\nDon't miss out on the opportunity to elevate your performance testing skills and ace your next interview. Enroll now in our Performance Testing Interview Questions Practice Test on Udemy and take the first step towards a successful career in performance testing.\nWith our Performance Testing Interview Questions Practice Test, you'll be well-equipped to tackle any interview question with confidence. Enroll today and start your journey to becoming a performance testing expert!",
      "target_audience": [
        "Aspiring Performance Testers: If you're looking to break into the field of performance testing, this course provides a comprehensive foundation of knowledge and practical skills. You'll learn the core concepts and tools needed to excel in performance testing interviews and land your first job in this exciting domain.",
        "Experienced Performance Testers: For those already working in performance testing, this course offers a deep dive into advanced topics and emerging trends. It helps you stay updated with the latest industry practices and enhances your ability to tackle complex performance testing challenges in interviews and real-world scenarios.",
        "QA Engineers and Software Testers: Quality assurance professionals and software testers who want to expand their skill set to include performance testing will find this course particularly beneficial. It covers essential performance testing techniques and tools, enabling you to add value to your current role and advance your career.",
        "Developers and Software Engineers: Software developers and engineers who wish to understand performance testing from a practical perspective will gain significant insights from this course. It provides a comprehensive overview of performance testing processes, tools, and metrics, helping you create more robust and efficient applications.",
        "IT Professionals Transitioning to Performance Testing: If you're an IT professional considering a transition into performance testing, this course serves as an excellent starting point. It covers all the necessary fundamentals and advanced topics, making your transition smoother and more informed.",
        "Students and Recent Graduates: Computer science students and recent graduates interested in pursuing a career in software testing or performance engineering will benefit greatly from this course. It prepares you for interviews and provides a solid foundation to kickstart your career in performance testing."
      ]
    },
    {
      "title": "ISTQB Test Analyst Sample Exams",
      "url": "https://www.udemy.com/course/istqb-test-analyst-sample-exams/",
      "bio": "ISTQB Test Analyst Sample Exams",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "The ISTQB Advanced Level Test Analyst (CTAL-TA) certification provides the skills needed to perform structured and thorough software testing across the software development life cycle. It goes into detail about the test analyst’s role and responsibilities in every step of a standard test process and expands on important test techniques.\n\n\nThe Advanced Level Test Analyst certification is aimed at people who wish to further develop their expertise in test analysis and test design techniques\nTo gain this certification, candidates must hold the Certified Tester Foundation Level certificate and have sufficient practical experience. Please contact an ISTQB Member Board or Exam Provider to determine the specific practical experience criteria.\n\n\nA candidate who has achieved the Advanced Level Test Analyst certification should be able to:\n· Perform the appropriate testing activities based on the software development life cycle being used\n· Determine the proper prioritization of the testing activities based on the information provided by the risk analysis\n· Select and apply appropriate test techniques to ensure that tests provide an adequate level of confidence, based on defined coverage criteria\n· Provide the appropriate level of documentation relevant to their testing activities\n· Determine the appropriate types of functional testing to be performed\n· Work effectively in a usability testing team\n· Effectively participate in requirements / user story reviews with stakeholders, applying knowledge of typical mistakes made in work products\n· Improve the efficiency of the test process with the use of tools",
      "target_audience": [
        "Testers",
        "Test Engineers",
        "Test Analysts"
      ]
    },
    {
      "title": "Postman ile API (Arayüz) Testi ve Test Otomasyonu",
      "url": "https://www.udemy.com/course/postman-ile-api-arayuz-testi-ve-test-otomasyonu/",
      "bio": "Sıfırdan Postman uygulamasını öğren. Newman ve Jenkins ile Api/Arayüz Test Otomasyona başla!",
      "objectives": [
        "Sadece 4 saatte Postman uygulamasını öğren",
        "Postman ile detaylı test yazımını öğren",
        "Postman Monitors ve Newman ile Test Otomasyonuna giriş yap",
        "Jenkins ile sürekli entegrasyonu öğren",
        "Kısaca sektörde yeni ya da tecrübeli de olsanız, test bilginizi geliştirerek, Test Uzmanlığında bir sonrakiye seviyeye geçebileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Kursun Amacı ve Yol Haritası"
        ],
        "Api (Arayüz) Testinin Temelleri": [
          "Giriş",
          "API (Uygulama Programlama Arayüzü) Testine Giriş",
          "Postman Kurulumu ve İlk API Çağrısı",
          "API Dökümantasyonu Okuma",
          "Youtube ve Diğer Sosyal İçerikler"
        ],
        "Postman ile Arayüz Testine Başlangıç": [
          "Giriş",
          "Trello API Key ve Token Oluşturma Sırasında Karşılaşılan Sorunlar ve Çözümü",
          "Get/Post/Update/Delete Metot çağrıları",
          "Path ve Query Parametreleri",
          "Postman Test Yazımı ile İlgili Değişiklik",
          "Postman ile Test Yazımı",
          "Global ve Environment/Ortam Değişkenleri (Variables)",
          "Collection Runner ile Test Koşumu",
          "Pratik - Trello Arayüzleri ile Postman Projesi",
          "Pratik - Trello Arayüzleri ile Postman Projesi Çözümü"
        ],
        "İleri Seviye Postman Kullanımı": [
          "Giriş",
          "İleri Seviye Test Yazımı ve Json Çözümleme (Parsing)",
          "Dinamik Değişkenler (Variables) ile Test Koşumu",
          "Pre-script ile Veri Hazırlama"
        ],
        "Proje: Otel Rezervasyon Uygulaması": [
          "Proje Açıklaması",
          "Çözüm: Postman ile Otel Rezervasyon Uygulaması Testleri"
        ],
        "Postman ile Test Otomasyonu": [
          "Giriş",
          "Postman Monitors ile Test Koşumu",
          "Node.js ve NPM kurulumu",
          "Newman Açıklaması ve Kurulumu",
          "Newman Kurulumu Sırasında Karşılaşılabilecek Hataların Çözümü",
          "Newman ile Terminal/Komut Üzerinden testlerin koşumu"
        ],
        "Jenkins ve Newman ile Api/Arayüz Test Otomasyonu": [
          "Giriş",
          "Jenkins Kurulumu",
          "Windows Üzerinde Çıkabilecek Hata Tespit ve Çözümü",
          "Windows Üzerinde Çıkabilecek Hata Tespit ve Çözümü",
          "Jenkins ve Newman ile Test Otomasyonu",
          "Postman Uygulaması Üzerine Genel Bakış",
          "Proje Açıklaması: Jenkins ile Trello Testlerinin Koşumu",
          "Proje Çözümü: Jenkins ile Trello Test Koşumu"
        ]
      },
      "requirements": [
        "Bilgisayar, Windows,Mac yada Linux işletim sistemi",
        "Ve tabiki de öğrenme isteğiniz ve çabanız!"
      ],
      "description": "Postman ile API (Arayüz) Testi ve Test Otomasyonu eğitimine hoş geldiniz!\n\n\nBu eğitim ile, Yazılım Test Mühendisliği mesleği için, olmazsa olmaz olan Api testinin nasıl gerçekleştirildiğini öğreneceğiz. Api testlerini Postman ile gerçekleştirerek, Newman ve Jenkins ile otomatize hale getireceğiz.\n\n\nBu eğitim POSTMAN için hazırlanmış Türkçe tek kaynaktır. Şu ana kadar oluşturduğum kurslarda, 10.000+ öğrencim mevcut ve eğitimler yazılım testi alanında en başarılı ve en çok satan eğitimlerden.\n\n\nBu eğitimdeki tüm videolar 1080P (HD) kalitesinde ve sizlerin daha rahat anlayabilmesi için yüksek ses kalitesine sahip. Tüm ders videolarının üzerinde çalışılarak gereksiz kısımlar çıkartıldı. Bu sayede eğitimden gerekli bilgiyi en kısa sürede elde edebileceksiniz.\n\n\nBu kursu neden almalıyım ?\nBu kurs Udemy'de bulunan en iyi ve en güncel ve Türkçe tek Postman eğitimidir. İngilizce kurslarıma olan büyük talep sonrasında, Türkiye yazılım sektörüne katkısı olması için bu eğitimi hazırladım. Postman ile Api testini çevik bakış açısıyla, teorik bilgileri pratiğe çevirebilecek şekilde anlattım. İngilizce ve Türkçe bulabileceğiniz eğitimlerin çoğu anlaşılar bil dilde değil ve gerçek iş tecrübesini yansıtmıyor. Bu eğitimde 10 yıla yakın olan Yazılım Test tecrübemi sizlerle paylaştım. Kariyerimde Türkiye'de : QNB Finansbank ve Doğuş Teknoloji , Belçika'da: Energy Pages ve Hollanda'da Qardio ve Payconiq firmalarında çalışma fırsatı buldum. Halen aktif olarak Payconiq (Amsterdam) firmasında Uzman Test Mühendisi ve Scrum Master olarak görev almaktayım.\n\n\nEğitime kaydolun ve:\n4 saat üzeri HD ders videolara erişim imkanı\nYazılım Test Uzmanları için olmazsa olmaz olan API/Arayüz testini öğren\nApi Test Otomasyonuna başlangıç yapın.\nAyrıca Postman ve kariyer yolu ile ilgili tüm sorularına 24 saat içerisinde cevap alabileceksiniz.\n\n\nHiçbir risk yok\nBu kurs Udemy'nin 30 gün para iadesi garantisi içerisindedir. Eğer eğitimden memnun kalmazsanız, 30 gün içerisinde %100 para iadesi alabilirsiniz.\n\n\nBaşlamaya hazır mısınız ?\nEğitime bugün kaydolun ve başarılı bir test uzmanı olman için ilk adımı atın.\nKursta görüşmek üzere!",
      "target_audience": [
        "Hiçbir yazılım test tecrübesi olmayan ve arayüz testini öğrenmek isteyenler",
        "Test Uzmanlığı pozisyonuna yeni başlamış Jr. Test Uzmanları",
        "Kendini geliştirmek isteyen Orta seviyede (2-3) yıl tecrübe Test Uzmanları",
        "Postman i detaylı öğrenmek isteyen Uzman Test Mühendisleri",
        "Kısaca bu kurs, tecrübeli ya da tecrübesiz herkes için uygundur."
      ]
    },
    {
      "title": "Exam Preparation: ISTQB Agile Tester",
      "url": "https://www.udemy.com/course/exam-preparation-istqb-agile-tester/",
      "bio": "Comprehensive Preparation for the ISTQB Agile Tester Exam",
      "objectives": [
        "Fundamentals of Agile Testing",
        "Agile Testing vs. Traditional Testing",
        "Roles and Responsibilities of an Agile Tester",
        "Agile Testing Methods and Strategies",
        "Quality Risk Analysis and Test Estimation",
        "Exploratory and Experience-Based Testing",
        "Test Automation in Agile",
        "Regression Testing and Continuous Integration",
        "Agile Test Management and Reporting",
        "Preparation for the Agile Tester Exam"
      ],
      "course_content": {
        "Introduction": [
          "About instructor"
        ],
        "The Fundamentals of Agile Software Development": [
          "Agile Software Development and the Agile Manifesto",
          "Whole-Team Approach",
          "Early and Frequent Feedback"
        ],
        "Aspects of Agile Approaches": [
          "Agile Software Development Approaches",
          "Collaborative User Story Creation",
          "Retrospectives",
          "Continuous Integration",
          "Release and Iteration Planning"
        ],
        "The Differences between Testing in Traditional and Agile Approaches": [
          "Testing and Development Activities",
          "Project Work Products",
          "Test Levels",
          "Testing and Configuration Management",
          "Organizational Options for Independent Testing"
        ],
        "Status of Testing in Agile Projects": [
          "Communicating Test Status, Progress, and Product Quality",
          "Managing Regression Risk with Evolving Manual and Automated Test Cases"
        ],
        "Role and Skills of a Tester in an Agile Team": [
          "Agile Tester Skills",
          "The Role of a Tester in an Agile Team"
        ],
        "Agile Testing Methods": [
          "TDD, ATDD, and BDD",
          "The Test Pyramid",
          "Testing Quadrants, Test Levels, and Testing Types",
          "The Role of a Tester"
        ],
        "Assessing Quality Risks and Estimating Test Effort": [
          "Assessing Quality Risks in Agile Projects",
          "Estimating Testing Effort Based on Content and Risk"
        ],
        "Techniques in Agile Projects": [
          "Acceptance Criteria, Adequate Coverage, and Other Information for Testing",
          "Applying Acceptance Test-Driven Development",
          "Functional and Non-Functional Black Box Test Design",
          "Exploratory Testing and Agile Testing"
        ],
        "Tools in Agile Projects": [
          "Task Management and Tracking Tools",
          "Communication and Information Sharing Tools",
          "Software Build and Distribution Tools",
          "Configuration Management Tools",
          "Test Design, Implementation, and Execution Tools",
          "Cloud Computing and Virtualization Tools"
        ]
      },
      "requirements": [
        "Basic Understanding of Software Testing",
        "Motivation to Learn and Prepare for the Exam"
      ],
      "description": "Welcome to the \"Exam Preparation: ISTQB Agile Tester\" Course\nThis course is your comprehensive guide to mastering Agile testing principles and practices, specifically designed to prepare you for the ISTQB Agile Tester certification exam.\nWhether you're an experienced tester looking to validate your Agile skills, or someone new to Agile testing and eager to learn the fundamentals, this course provides everything you need to build confidence and pass the exam with success.\n\n\nWhat You’ll Learn:\n\n\nFundamentals of Agile Testing – Understand the core principles, values, and methodologies that define Agile development and testing.\nAgile Testing Strategies – Learn how Agile testing differs from traditional testing approaches and how to integrate testing into Agile workflows effectively.\nTest Roles and Responsibilities – Discover the key responsibilities of an Agile tester, including collaboration, communication, and test automation in Agile teams.\nRisk-Based Testing and Estimation – Gain insights into quality risk analysis and test effort estimation in Agile projects to maximize test efficiency.\nTesting Techniques in Agile – Master exploratory testing, automated testing, and black-box techniques, ensuring comprehensive test coverage in Agile environments.\nTools and Best Practices – Explore modern test management and automation tools that support Agile testing, continuous integration, and delivery.\n\n\nWho This Course Is For:\n\n\nAspiring Agile Testers – Individuals preparing for the ISTQB Agile Tester certification who need a structured, syllabus-based learning approach.\nSoftware Testers and QA Professionals – Those looking to enhance their Agile testing skills and earn a recognized certification in Agile testing.\nDevelopers and IT Professionals – Individuals wanting to understand how Agile testing fits into the software development process and how testing supports Agile delivery.\n\n\nBy the end of this course, you will have a thorough understanding of Agile testing concepts and practices, and you will be well-prepared to pass the ISTQB Agile Tester certification exam.",
      "target_audience": [
        "Aspiring Agile Testers",
        "Software Testers and QA Professionals",
        "Developers and IT Professionals",
        "Project Managers and Scrum Masters"
      ]
    },
    {
      "title": "Automação de Testes com Robot Framework - Básico",
      "url": "https://www.udemy.com/course/automacao-de-testes-com-robot-framework-basico/",
      "bio": "Aprenda automatizar testes de aplicativos WEB e APIs com o Robot Framework",
      "objectives": [
        "Você será capaz de automatizar testes de sistemas WEB e API",
        "Tudo sobre o que é o Robot Framework, como ele funciona e por quê ele é tão bom no que propõe",
        "Instalar tudo que for necessário para utilizar o Robot Framework",
        "Definir e escrever seus primeiros casos de teste automatizados",
        "Conceito de Setup e Teardown",
        "Estratégias de HTML locators para testes web",
        "Implementar, executar e reportar os testes no Robot Framework",
        "Implementação dos testes automatizados com BDD",
        "Trabalhar com variáveis, listas e dicionários",
        "Trabalhar com estruturas IF, FOR e argumentos",
        "API testing: Get, Post, conferências de JSON",
        "Colocar a mão na massa com vários desafios práticos"
      ],
      "course_content": {
        "Introdução ao Robot Framework": [
          "NEW: Módulo Atualizado!",
          "Overview",
          "O que é Robot Framework?",
          "[Complementar] Palestras de Introdução Robot Framework",
          "A abordagem keyword-driven",
          "Pesquisando, escolhendo e entendendo as Libraries",
          "Introdução ao Robot Framework"
        ],
        "Instalações": [
          "NEW: Módulo Atualizado!",
          "Instalando o Python 3 (Windows)",
          "Instalando o Robot Framework",
          "Instalando as Libraries",
          "Instalando um Editor de Código (Visual Studio Code)",
          "Web Drivers",
          "[ATUALIZADO] Web Drivers: Nova forma de download do chromedriver"
        ],
        "Web Testing - Fases da construção de um Teste Automatizado": [
          "NEW: Módulo Atualizado!",
          "Preparação",
          "EXTRA: Plugin Alternativo ao TruePath",
          "Escrevendo os Casos de Teste",
          "Tags e Documentation dos Testes",
          "Setup e Teardown",
          "Implementação: Criando o Resource",
          "Implementação: Configurando o Resource",
          "Implementação: Configurando a Library",
          "Implementação: Setup e Teardown",
          "ATENÇÃO: Chromedriver fechando mesmo com o Close Browser comentado!!!",
          "EXTRA: Usando o CMD externo para executar",
          "Implementação: Primeira Execução",
          "ATENÇÃO: Mecanismo de Segurança Amazon.com (captcha)",
          "Implementação: Utilizando Variáveis",
          "Implementação: Locators e Waits de Elementos Web",
          "EXTRA: Estratégias básicas de HTML Locators",
          "Implementação: Interagindo e Conferindo Elementos Web",
          "Implementação: Variáveis Embutidas no Teste",
          "Implementação: Finalizando o Teste",
          "Log e Report",
          "Analisando Falhas",
          "Opções de Execução",
          "Gherkin BDD",
          "Tarefa 1: DESAFIO: Automatize mais testes da Amazon.com.br",
          "Tarefa 2: DESAFIO: Transforme os testes em Gherkin BDD"
        ],
        "Trabalhando com Variáveis": [
          "NEW: Módulo Atualizado!",
          "Escopos das variáveis",
          "Tipos de Variáveis: Listas e Dicionários",
          "Vamos praticar com @{LISTAS}!",
          "Vamos praticar com &{DICIONÁRIOS}!",
          "Usando variáveis como argumentos de keywords",
          "DESAFIO: Vamos praticar keywords com argumentos e retornos!"
        ],
        "Estruturas do Robot Framework": [
          "NEW: Módulo Atualizado!",
          "Logs",
          "IF e ELSE",
          "Loops - Repeat Keyword",
          "Loops - FOR IN RANGE",
          "Loops - FOR IN (listas)",
          "Loops - FOR IN ENUMERATE (listas)",
          "Loops - Saindo de um FOR",
          "Loops - WHILE",
          "DESAFIO: Vamos praticar IF e Loops"
        ],
        "API Testing com Robot Framework": [
          "NEW: Módulo Atualizado!",
          "EXTRA: O que são APIs?",
          "API ServeRest",
          "Library Requests",
          "Criando um usuário aleatório para os testes",
          "POST /usuarios: realizando o cadastro de novo usuário",
          "POST /usuarios: conferindo o cadastro de um novo usuário com sucesso",
          "POST /usuarios: testando o cadastro de usuário já existente",
          "GET /usuario/{id}: buscando um usuário específico",
          "Propriedades do objeto de resposta (response)",
          "Guia de conferências em JSON",
          "DESAFIO: Automatize o Login"
        ],
        "Conclusão": [
          "Conclusão",
          "Links Úteis"
        ]
      },
      "requirements": [
        "Necessário ter noções básicas de teste de software e noções básicas de teste de sistemas web e API.",
        "Necessário ter noção básica de lógica de programação, entender os conceitos de variáveis, funções, métodos, argumentos e laços."
      ],
      "description": "*** Conteúdo do curso é compatível com a mais recente versão do Robot Framework! ***\nOláááá futuros robotizadores!!! Desde 2018 nosso curso está no AR aqui na Udemy, fomos os pioneiros a trazer esse conteúdo para o Brasil. Ele é simples, direto e reto!!! Um curso com classificação ótima, você aprenderá a sair do zero e se tornar mestre na automação de testes de uma vez por todas!! #AGORAVAI\nEsse curso tem como principal objetivo mostrar como a automação de testes pode ser legal e fácil!! O Robot Framework propõe automação genérica de testes, ou seja, você pode automatizar sites, webapps, APIs, desktop, mobile, etc, tudo em um único framework.\nEle não exige conhecimento específico em linguagem de programação, pois o objetivo dele é tornar os testes mais reaproveitáveis e fáceis com a abordagem keyword-driven, onde qualquer tester/QA pode automatizar mesmo sem ser muito técnico.\nNeste curso te ensinarei os fundamentos básicos do framework, os passos necessários para construir um teste automatizado, explicarei as estruturas básicas que o framework disponibiliza para tornar seu teste mais completo e ao final iremos implementar duas suítes de testes: uma com Selenium testando um web app e outra com Requests testando uma API REST.\nO curso está recheado de DESAFIOS para você colocar em prática o conteúdo ensinado e sempre respondo as dúvidas de todos os alunos! Vem com a gente aprender esse framework incrível!",
      "target_audience": [
        "QA e Analistas de Teste que querem aprender a automatizar testes de software.",
        "Profissionais curiosos que querem aprender a automatizar testes de software.",
        "QA e Analistas de Teste que já automatizam, mas querem conhecer mais ferramentas de automação de testes de software."
      ]
    },
    {
      "title": "Introducción al Testing de Software",
      "url": "https://www.udemy.com/course/introduccion-al-testing-de-software-d/",
      "bio": "Curso introductorio explicando en detalle el rol del tester, las técnicas usadas y ejemplos prácticos!",
      "objectives": [
        "De qué se compone el Ciclo de Vida del Desarrollo del Software (SDLC)",
        "De qué se compone el Ciclo de Vida del Testing del Software (STLC)",
        "Qué hace a la calidad del software: Sus atributos",
        "La diferencia entre QA, QC, Testing",
        "Error, Falla y Defecto: Diferencias",
        "La diferencia entre Testing Funcional y No Funcional",
        "Los Procesos Fundamentales del Testing y las tareas que se hacen en cada uno.",
        "Las técnicas de Caja Negra que se aplican en el testing de software",
        "Las técnicas de Caja Blanca que se aplican en el testing de software",
        "Cómo crear casos de prueba aplicando técnicas de Caja Negra y Caja Blanca",
        "Cómo se reporta un defecto",
        "Metodologías de desarrollo y el rol del tester en cada uno",
        "Las herramientas que se usan en el Testing de Software",
        "Los 7 Principios del Testing y su aplicación real",
        "La diferencia entre Validación y Verificación. Por qué es importante?",
        "Historias de Usuario, Criterios de Aceptación y Oráculos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Consejos para tomar este curso",
          "Necesito un título para ser tester? Hay certificaciones que sirvan?",
          "Qué es Testing? Qué hace a la calidad de un sistema?",
          "QA, QC y Testing: Son diferentes?",
          "La psicología del Tester.",
          "Error, Falla, Defecto: Son lo mismo?",
          "Verificación vs Validación",
          "Los 7 principios de Testing",
          "El SDLC y el STLC: Qué son y qué requiere cada etapa?",
          "Primer cuestionario"
        ],
        "Metodologías de desarrollo de software y testing": [
          "Metodologías en desarrollo de software",
          "Ceremonias en Agile: Qué se hace en cada una y cuál es nuestro rol como testers.",
          "¿Qué podemos hacer los testers con una User Story?",
          "Cuestionario sobre Metodologías"
        ],
        "Técnicas y conceptos en Testing": [
          "Caja Blanca y Caja Negra: Qué son?",
          "Análisis estático y dinámico",
          "Técnicas de Caja Negra: Partición por Equivalencias y Valor Límite",
          "Técnicas de Caja Negra: Tablas de decisión",
          "Técnicas de Caja Negra: Transición de Estado",
          "Técnicas de Caja Negra: Casos de Prueba",
          "Técnicas de Caja Blanca: Cobertura de Statement",
          "Técnicas de Caja Blanca: Decision Coverage",
          "Técnicas Secretas: Tipos de Testing por experiencia",
          "Técnicas Secretas: Usando Mindmaps",
          "Cuestionario sobre técnicas"
        ],
        "Conociendo nuestro trabajo como Testers": [
          "User Stories: La fuente de información necesaria para el Tester",
          "Creando Tests Cases en base a User Stories",
          "Práctica: Mostrando el flujo de trabajo con user stories y otros oráculos",
          "Procesos Fundamentales de Testing: Planeamiento y Control",
          "Procesos Fundamentales de Testing: Análisis y Diseño",
          "Procesos Fundamentales de Testing: Implementación y Ejecución",
          "Procesos Fundamentales de Testing: Actividades de cierre",
          "Ciclo de Vida de un defecto",
          "Anatomía de un defecto",
          "Cuestionario 3"
        ],
        "Despedida": [
          "Conclusión del curso",
          "Bonus"
        ]
      },
      "requirements": [
        "Algo en lo que anotar",
        "Una computadora, laptop, celular o tablet en donde consumir el curso"
      ],
      "description": "Escuchaste o leíste sobre Testing de Software y te interesó? Te atrae la idea de trabajar en el mundo IT con un ojo crítico y analizando sistemas? El primer paso es aprender sobre el rol del tester, las técnicas que este usa y cómo aplicarlas. En este curso introductorio te voy a dar todas las herramientas para comenzar con el pie derecho tu camino hacia una carrera como Tester de Software.\nEntre los temas que vamos a cubrir vas a encontrar:\nEl ciclo de vida del software y de testing: Sus diferencias y etapas.\nLos procesos fundamentales de testing.\nQué hace a la calidad del software?\nTécnicas de Caja Negra.\nTécnicas de Caja Blanca.\nEl ciclo de vida de un defecto.\nCómo reportar defectos.\nCómo escribir casos de prueba aplicando las técnicas aprendidas.\nMetodologías en el desarrollo de software y cómo encaja el tester.\nCeremonias en Agile y el rol del tester en cada una.\nCada sección va a ir acompañada de un examen para que puedas afianzar los conocimientos adquiridos y, al completar el curso de forma exitosa, vas a recibir el certificado que vas a poder compartir en tus redes y CV!\nY más! Es momento de comenzar tu viaje a una nueva carrera, empezamos?",
      "target_audience": [
        "Principiantes en el mundo de Testing",
        "Personas sin ningún tipo de experiencia en testing"
      ]
    },
    {
      "title": "JMeter - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/jmeter-step-by-step-for-beginners/",
      "bio": "learn Jmeter from scratch",
      "objectives": [],
      "course_content": {
        "INTRODUCTION | GETTING STARTED": [
          "How to install Jmeter",
          "How to create first Jmeter Test",
          "How to use Assertions",
          "How to use Listeners"
        ],
        "NEXT STEPS WITH": [
          "How to record a UI (web) Test",
          "How to create a Database Test Plan",
          "How to run jmeter from Command Line (non GUI mode)",
          "How to test FTP upload and download",
          "Testing Web Services API",
          "How to create assertions for JDBC (Database) Test Plan"
        ],
        "REPORTS | PLUGINS |CSV DATA DRIVEN TESTS | FUNCTIONS AND VARIABLES": [
          "How to create HTML Dashboard Reports from command line",
          "How to use Plugins Manager",
          "How to read data from CSV file (Parameterisation)",
          "Functions and Variables"
        ],
        "FREQUENTLY USED ELEMENTS IN JMETER": [
          "How to setup realistic performance test-PACING",
          "TIMERS (How to add Think Time)",
          "How to Parameterise FTP test",
          "How to run Scheduled + Sequential execution",
          "Correlation (with Regular Expression Extractor)",
          "How to use TEMPLATES"
        ],
        "DEBUG AND MORE...": [
          "How to use Test Script Recorder",
          "How to test File Upload",
          "How to test File Download",
          "How to DEBUG",
          "Jmeter How to record login test"
        ],
        "JMeter and Selenium": [
          "JMeter Selenium Webdriver sampler"
        ],
        "TIPS & TRICKS": [
          "How to find LOGS in JMeter",
          "How to do Step by Step Debugging",
          "How to change Timestamp format in csv",
          "How to use JSON Extractor",
          "How to Set threads (users) from command line",
          "How to Append Timestamp in Result File Name",
          "Concurrency Thread Group-How to setup Realistic Test",
          "How to Create Aggregate Result csv from command line",
          "How to Assert count of nodes from a JSON Response",
          "How to loop CSV file - WHILE CONTROLLER",
          "How to use TIME FUNCTION",
          "How to run specific thread from command line",
          "How to use RECORDING in JMeter"
        ],
        "SERVER HEALTH CHECK": [
          "How to Monitor Server Health | CPU, Memory etc during load test"
        ],
        "REMOTE TESTING | Master-Slaves": [
          "JMeter | Remote Testing | Master Slave | Distributed Testing"
        ],
        "JMeter on Linux": [
          "How to install JMeter on Amazon aws Linux ec2"
        ]
      },
      "requirements": [
        "No special knowledge is required",
        "Basic knowledge on how to use computer is sufficient"
      ],
      "description": "In this course we will learn Jmeter from scratch step by step.\nWe will learn the basics in a very easy way and you will be able to use JMeter for all types of performance and functional testing.\nAfter this course you can work with JMeter for personal and enterprise projects.\nLET'S GET STARTED...",
      "target_audience": [
        "Anyone who wants to learn Jmeter step by step from scratch",
        "Anyone who wants to learn basics of performance testing with JMeter"
      ]
    },
    {
      "title": "Curso Completo de Automação de Testes Para Iniciantes",
      "url": "https://www.udemy.com/course/automatizando-testes-de-software-com-selenium-basico/",
      "bio": "Aprenda a forma simplificada (sem programação) de automatizar os testes de projetos web através da IDE do Selenium",
      "objectives": [
        "Identificar os princípios e fundamentos da automação em testes de software.",
        "Elaborar, executar e exportar os scripts de testes automatizados.",
        "Executar os scripts de testes em múltiplos navegadores (Cross Browser Testing).",
        "Executar testes dirigidos à dados (Data Driven).",
        "Criar a própria ferramenta de execução de testes."
      ],
      "course_content": {
        "Introdução": [
          "NÃO FAÇA O CURSO SEM ANTES LER ISTO!",
          "Boas-Vindas",
          "Objetivos e Pré-Requisitos"
        ],
        "Inovando a sua forma de testar software": [
          "A Inovação no Mercado de Trabalho",
          "Automação em Teste de Software",
          "Por que Automatizar os Testes?",
          "Testes Automatizados x Testes Manuais",
          "Considerações Acerca da Automação",
          "Princípios da Automação de Testes"
        ],
        "Selenium": [
          "O Que é Selenium e Como Surgiu?",
          "Por que Usar Selenium?"
        ],
        "Selenium IDE": [
          "ALTERAÇÃO DA URL BASE",
          "POR QUE E COMO UTILIZAR A VERSÃO 2.9.1 DO SELENIUM IDE",
          "A IDE",
          "Elaborando o Script de Teste (Record)",
          "Executando o Script de Teste (Play)",
          "Salvando o Script de Teste",
          "Exportando o Script de Teste",
          "Principais Comandos do Selenium IDE"
        ],
        "Selenium Remote Control": [
          "Standalone Server",
          "Executando Scripts Pelo WebDriver Playback",
          "Executando Scripts Pelo Html Runner"
        ],
        "Aulas Extras": [
          "Dados Dinâmicos no Selenium IDE",
          "Criando Sua Própria Ferramenta de Execução de Testes"
        ],
        "Considerações Finais": [
          "Encerramento"
        ]
      },
      "requirements": [
        "Conceitos básicos em Teste de Software.",
        "Elementos básicos do HTML."
      ],
      "description": "Esse curso é uma \"prévia\" do nosso curso completo de Automação de Testes com Selenium e C#.\n\n\nConsiderado o curso favorito dos iniciantes em automação de testes segundo a Udemy.\n\n\n► VEJA O QUE OS NOSSOS ALUNOS ESTÃO DIZENDO SOBRE O CURSO:\n\n\n\"Ótimo curso e ÓTIMA CONSULTORIA!\" - Jaqueline Alves\n\n\n\"A didática do curso é muito boa. Para quem não tem muito conhecimento o ideal é ver tudo assim mesmo, passo a passo, eu já tive contato com a ferramenta mas gostei da forma da apresentação. Aguardando os próximos\" - Adriano Borges\n\n\n\"Ótimo conteúdo, recomendo para quem quer adquirir conhecimento em uma ferramenta de automação.\" - Lucas de Oliveira\n\n\n\"O curso realmente nos passa um overview do básico que precisamos para iniciar a automatizar com Selenium. Organização e didática excelentes. Parabéns @hugo Peres\" - Daiana Santos\n\n\n\"O curso foi muito bom, não sabia nada de automação de testes, o professor tem domínio do assunto, responde os questionamentos com rapidez. O único detalhe que gostaria de sugerir atualizar o curso com a nova versão do Selenium, pois a versão 3 em diante mudou muito sendo necessário utilizar a versão 2.9 para poder fazer o curso.. Mas da para acompanhar tranquilamente... Parabéns Hugo...\" - Consistem Sistemas\n\n\nAprenda a forma simplificada (sem programação) de automatizar testes de projetos web usando uma das melhores soluções em automação de testes, o Selenium.\n\n\nCrie seu primeiro ambiente de testes automatizados através deste curso totalmente voltado para iniciantes.\nIdentifique os princípios e fundamentos da Automação de Testes;\nElabore, execute e exporte scripts de testes automatizados;\nExecute os scripts de testes em múltiplos navegadores (Cross Browser Testing);\nExecute testes dirigidos à dados (Data Driven);\nCrie sua própria ferramenta de execução de testes;\n\n\nSolução completa e gratuita para automatizar testes funcionais\nDesenvolvido por profissionais de grandes empresas (Google, Facebook, Mozilla, Opera), o Selenium é uma das melhores alternativas para quem pretender automatizar os testes funcionais de projetos web. Não é à toa que foi adotado como principal tecnologia de testes em nuvem (Testing Cloud) de famosas empresas do ramo tais como: BrowserStack, SauceLabs e CrossBrowserTesting.\nPor ser um projeto Opensource, o usuário não só conta com vários recursos gratuitos, mas também fica livre para aprimorá-los e assim criar soluções de testes.\nConteúdos e Visão Geral\nNeste curso, vou te ajudar a criar seu primeiro ambiente de testes automatizados. Começando primeiramente com uma boa base teórica acerca de inovação e automação em testes de software. Em seguida, começaremos a parte prática, explorando todos os recursos das ferramentas Selenium IDE e Selenium Remote Control. E por fim, vou lhe ensinar algumas estratégias de testes avançadas no Selenium IDE, não vistas em qualquer outro curso da mesma modalidade.\nAo término do curso, além de entender de fato o que é e pra que serve a Automação de Testes, você estará apto para implementar seu próprio ambiente de testes automatizados sem necessidade de ter experiências com programação.",
      "target_audience": [
        "Profissionais da área de qualidade de software que almejam migrar para área de automação de testes mesmo tendo pouco ou nenhuma experiência com programação.",
        "Desenvolvedores autônomos que queiram criar testes de regressão automatizados para seus projetos web, visando a entrega de versões com mais qualidade."
      ]
    },
    {
      "title": "A4Q Practical Tester - ISTQB Add-On",
      "url": "https://www.udemy.com/course/a4q-practical-tester/",
      "bio": "Your guide to preparing for A4Q Practical Tester Certificate",
      "objectives": [
        "Apply practical software testing techniques used in real-world projects",
        "Design effective test cases, test plans, and bug reports",
        "Improve efficiency and coverage in test design using structured methods",
        "Use black box techniques to validate different types of software systems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Welcome to the Course",
          "A brief history about Software Testing Certifications",
          "Course Content & Exam Structure"
        ],
        "Equivalence Partitioning [Optional]": [
          "Introduction to Equivalence Partitioning",
          "[ISTQB FL] Equivalence Partitioning",
          "[ISTQB FL] Equivalence Partitioning Coverage",
          "[Practical Course] Equivalence Partitioning Definition",
          "[Practical Course] Equivalence Partitioning Examples",
          "[Practical Course] Equivalence Partitioning Practical Examples"
        ],
        "Equivalence Partitioning (PO-1)": [
          "ِEquivalence Partitioning Definition",
          "Continuous/Discrete Data",
          "Ordered/Unordered Partitions",
          "Finite/Infinite Partitions",
          "Equivalence Partitioning Example",
          "Coverage Metrics for Equivalence Partitioning"
        ],
        "Boundary-Value Analysis [Optional]": [
          "Introduction to Boundary-Value Analysis",
          "[ISTQB FL] Boundary Value Analysis Definition",
          "[ISTQB FL] 2-Point & 3-Point Boundary Value Analysis",
          "[Practical Course] Boundary Value Analysis Definition",
          "[Practical Course] Boundary Value Analysis Example #1",
          "[Practical Course] Boundary Value Analysis Examples",
          "[Practical Course]Notes About Equivalence Partitioning & Boundary Value Analysis"
        ],
        "Boundary Value Analysis (PO-2)": [
          "Boundary Value Analysis Explanation",
          "3-Value Boundary Value Analysis Benefits"
        ],
        "Decision Table Testing [Optional]": [
          "Introduction to Decision Table Testing",
          "[ISTQB FL] Decision Table Testing Definition",
          "[ISTQB FL] Decision Table Testing Coverage",
          "[Practical Course] Decision Table Testing",
          "[Practical Course] Decision Table Example"
        ],
        "Decision Table Testing (PO-3)": [
          "Decision Table Testing Definition"
        ],
        "State Transition Testing [Optional]": [
          "Introduction to State Transition Testing",
          "[ISTQB FL] State Transition Testing Definition",
          "[ISTQB FL] State Transition Testing Coverage",
          "[Practical Course] State Transition Testing"
        ],
        "State Transition (PO-4)": [
          "State Transition Testing Definition"
        ],
        "Pariwise Testing [Optional]": [
          "Introduction to Pairwise Testing",
          "[Practical Course] Pairwise Testing"
        ]
      },
      "requirements": [
        "Previous Experience in Software Testing is Preferred",
        "ISTQB Foundation Level Certificate is preferred"
      ],
      "description": "Are you looking to become a certified software tester with real-world practical skills? This course is designed to help you prepare for the A4Q Practical Tester Certificate, with a strong focus on black box testing techniques and applied knowledge.\n\n\nThroughout this course, you’ll gain hands-on experience with designing test cases, analyzing requirements, detecting and reporting bugs, and selecting the most effective test techniques for different situations. You’ll also explore key concepts like equivalence partitioning, boundary value analysis, decision tables, and state transition testing — all aligned with industry practices.\n\n\nThe A4Q Practical Tester Certificate emphasizes real project scenarios, and this course mirrors that by offering exercises, examples, and assignments that reflect what testers face on the job. Whether you’re a junior tester seeking certification or a professional looking to sharpen your practical skills, this course is structured to give you both the knowledge and the confidence needed to pass the exam and succeed in real testing environments.\n\n\nBy the end of the course, you will not only be ready for the exam but also able to apply what you’ve learned immediately in the workplace. Join now and take a bold step toward becoming a skilled, confident, and certified practical good tester.",
      "target_audience": [
        "Software Testers",
        "QA Engineers",
        "Certified ISTQB Foundation Level Testers",
        "People preparing for A4Q Practical Tester Certificate"
      ]
    },
    {
      "title": "La guía completa del QA Automation (Selenium-APIs-Appium)",
      "url": "https://www.udemy.com/course/selenium-testing-framework-con-java-maven-y-cucumber/",
      "bio": "Aprende a armar un framework de automatización con JAVA, Maven y Cucumber, pasando por Selenium, Appium y Rest Assured.",
      "objectives": [
        "Escribir casos de pruebas con código de fácil mantenimiento y reutilizable.",
        "Configurar de 0 un Framework de automatización de pruebas de aplicaciones web con Selenium Webdriver, Java y otras herramientas útiles.",
        "Con este curso aprenderás a hacer automatización de pruebas para aplicaciones utilizando principalmente Java, Selenium entre otras librerías y herramientas. Abarcaremos extensamente cada uno de los tópicos mostrados a continuación."
      ],
      "course_content": {
        "Presentación": [
          "Presentación del curso 2024"
        ],
        "Instalación y configuración": [
          "Recursos del Modulo de Configuración de entornos",
          "Introducción a la Configuración de Entornos para Automatización",
          "Maven",
          "Java SDK",
          "Chrome y Notepad ++",
          "Instalación de Git",
          "IntelliJ idea",
          "Chocolatey"
        ],
        "Programación para Testers": [
          "Inicialización de Proyecto de Automation",
          "Taller de Automation",
          "Framework Skeleton",
          "Hooks",
          "¿Qué debería Saber antes de continuar?",
          "Básicos de Java",
          "Unit Test",
          "Práctica de Programación 1",
          "Práctica de Programación 2"
        ],
        "Selenium WebDriver y Cucumber": [
          "Selenium-TestNG Test",
          "Selenium WebDriver Config - Capabilities - Preferencias",
          "Locators",
          "Buenas practicas en Locators",
          "Selects and Multiselects (Dropdowns)",
          "Locators y buenas practicas pt2",
          "Introducción a Page Objects Model",
          "Driver en Page Object Model",
          "Alertas / pop-ups",
          "Manejo de Multiples Ventanas",
          "iFrames",
          "Action Chains",
          "JavaScript y Selenium",
          "Construyendo el test Framework desde 0",
          "Mantenimiento del WebDriver",
          "Breve Análisis de Estructura del Framework",
          "Test en Cucumber",
          "Data Management pt1",
          "Data Management (pt2)",
          "Data Management pt3",
          "Logs con Lombok",
          "Selenium Grid",
          "Mock de datos con Faker",
          "Creando Test Con Cucumber - Prueba técnica"
        ],
        "Reportes": [
          "Introducción a Reportes",
          "Dependencias",
          "Reportes Básicos",
          "Reportes Parametrizables",
          "Screenshots",
          "Reportes en Jenkins"
        ],
        "Mejoras y Reflexión Final": [
          "Mejoras y Reflexión final en el curso de Selenium/Cucumber"
        ],
        "Presentación Curso APIs": [
          "Presentación",
          "Contextualización en APIs",
          "Contextualización en APIs pt2"
        ],
        "Postman": [
          "Postman Overview",
          "Postman - Desafío pt1",
          "Postman - Desafío pt2",
          "Postman Desafío - Newman Reports"
        ],
        "Entendiendo Java Rest Assured": [
          "Correr API local",
          "Entendiendo Rest Assured pt1",
          "Deserialización con JsonPath - JsonObject - JsonArray",
          "Serialización",
          "Expresiones Regulares",
          "Json Schemas",
          "Status Code y Test Negativos",
          "Tarea / Reto",
          "Autenticación en APIs"
        ],
        "Cucumber API Project": [
          "Cucumber Skeleton Base PT1",
          "Cucumber Skeleton Base PT2",
          "Classes Principales del Cucumber Framework",
          "Método GET con Cucumber",
          "Antes de continuar",
          "Método Post y Serialización",
          "Deserialización",
          "Método Put y tablas de Cucumber",
          "Delete - Assertions",
          "Assertions y validaciones",
          "Assert Schemas",
          "Gestión de Autenticación",
          "Configuración de Multiples Clientes o APIs"
        ]
      },
      "requirements": [
        "Preferiblemente tener una base de Java / Logica de programación, aunque no es limitante.",
        "Ganas de aprender"
      ],
      "description": "ACTUALIZACIÓN 2024\nEstoy renovando este curso con material actualizado. este curso incluirá la estructura de un framework para automatizar tanto UI con Selenium WebDriver, así como APIs con Rest Assured y Aplicaciones Android con Appium. Es por eso que desde ahora tendrá un nombre más general y pasará a llamarse Full Testing Automation Framework con Java, ya que abordaremos además los aspectos más importantes de la automatización.\n\n\nEsta actualización aún se encuentra en desarrollo y estoy subiendo nuevo contenido cada semana y se prolongara por un par de meses hasta abordar todos los temas mencionados, por lo cual es probable que este curso termine con alrededor de 30 horas de contenido, pero estará dividido en secciones para que puedas tomar las que sean de tu interés.\n\n\nEl objetivo del curso es que puedas:\n\n\nConfigurar de 0 un Framework de automatización de pruebas de aplicaciones web con Selenium Webdriver, Java y otras herramientas útiles.\nEscribir casos de pruebas con código de fácil mantenimiento y reutilizable.\nSeguimiento de casos de pruebas automatizados\nMantenimiento del Framework de Automatización\nAl iniciar este curso estarás más cerca de convertirte en un QA Engineer.\nCon este curso aprenderás a hacer automatización de pruebas para aplicaciones utilizando principalmente Java, Selenium entre otras librerías y herramientas. Abarcaremos extensamente cada uno de los tópicos mostrados a continuación.\n\n\n¿Qué es lo hace a este curso uno de los mejores de Udemy:\nNosotros asumimos que no tienes ninguna o poca experiencia en automatización de pruebas / Desarrollo / configuración de entornos entonces abordamos estos tópicos desde un nivel que cualquiera pueda entender.\nTesteamos aplicaciones reales en tiempo real para entender cómo cada componente puede ser automatizado.\nTe explicamos todo en más de 30 horas de video, prácticas y abordamos temas que te ayudarán a ampliar tu base de conocimientos.\nAunque es necesario que tengas una base de conocimiento en Java, no es mandatorio para realizar este curso.\n\n\nAutomatización de Pruebas.\n¿Cuándo Automatizar?\nAlcance – Ventajas\nCiclo de Vida de las pruebas automatizadas.\nCiclo de Vida de cualquier framework de automatización de pruebas\nDemostración.\n\n\nEntendiendo Selenium.\n¿Cómo funciona Selenium?\nFunciones de Selenium.\nSelenium WebDriver.\nEntendiendo el DOM de una Aplicación web.\nTipos de identificadores.\nXpaths\n\n\nNavegadores.\nPlugins.\nConfiguración de navegadores. Chrome, Mozilla Firefox.\n\n\nMaven.\nTodo el proyecto será administrado bajo la estructura de Maven\n\n\nEjecución de Primera Prueba Selenium\n\n\nConfiguración del WebDriver y Actualización de WebDriver.\nEstructura de una prueba Selenium – Java en su versión nativa.\n\n\nPage Objects Models (POM)\nEsqueleto de Framework con Maven.\nBehavior data driven test (BDD)\nModelando funciones Selenium.\nReutilización de Código.\nScripting de Test Automatizados.\nLocalizadores\nCapturas de Pantalla.\nConsumiendo datos Json.\nWaits: Implícitos y Explícitos\nActionChains\nSelenium By.\nSelenium Keys.\nEjecutar Acciones con JavaScript.\n\n\nEntendiendo Java rest Assured.\nComo funcionan las APis.\nMétodos POST, GET, DELETE, PUT, PATCH\nSerialización y Deserialización.\nTodo sobre la librería de Rest Assured de Java.\nPruebas con TestNG\nGestion de Datos.\nSchemas de Json\nSeguridad en APIs\nCódigos de Estatus.\n\n\n\n\nCucumber Reporting. (Reportes y Auto documentación.)\nDocumentación de casos de prueba.\nConfiguración de Librerías.\nCapturas de pantalla para reportes.\nConfiguración en entornos Windows.\nTest Runners.\n\n\nAnálisis de reportes.\nAnalizar resultados de casos de prueba.\nEstimación de Casos de prueba.\n\n\nCucumber.\nTest Basado en Comportamiento. (BDD)\nEsqueleto de Framework BDD\nCucumber – Gherkin sintaxis.\n\n\n\n\nJenkins.\nInstalación en entornos Windows.\nPlugins Jenkins.\nPipelines Jenkins.\nProgramar ejecución periódica.\nVisualización de reportes.\nCambio de cultura hacia las pruebas continuas.\nEstimar casos de pruebas automatizados.\nEstrategias de Equipo para la Automatización de Pruebas.\nAnálisis e Implementación. ¿Cómo empezar?\n\n\n¿Para quién es este curso?\nPara testers en general\nDevelopers\nInvolucrados en el proceso de desarrollo de software en general.\nInteresados en aprender tareas de automatización de pruebas.",
      "target_audience": [
        "Testers que deseen potenciar sus habilidades.",
        "Developers que deseen aprender sobre automatización de pruebas."
      ]
    },
    {
      "title": "Software Testing: Kickstart Your Career as a QA Professional",
      "url": "https://www.udemy.com/course/software-testing-kickstart-your-career-as-a-qa-professional/",
      "bio": "Mastering Software Testing: A Comprehensive Guide to Quality Assurance and Defect Management",
      "objectives": [
        "Understand the fundamentals of software testing, including types of testing and testing techniques",
        "Learn how to create effective test cases and execute them using popular testing tools",
        "Gain practical experience in software testing by working on real-world projects and case studies",
        "Develop the ability to identify and report defects, and understand the importance of communication and collaboration in testing teams"
      ],
      "course_content": {
        "Introduction": [
          "About Author",
          "Module Introduction",
          "How to become a Software Tester",
          "Specializations within Software Quality Assurance",
          "Project Collaboration",
          "Module Summary",
          "Introduction to QA"
        ],
        "Basics In Quality Assurance": [
          "Module Introduction",
          "What is Software Quality Assurance",
          "Five-fold Testing System",
          "Seven Testing Principles",
          "Module Summary",
          "Basics of QA Theory"
        ],
        "Software Development Life Cycle": [
          "Module Introduction",
          "What is SDLC",
          "Software Development Models",
          "Shift-Left vs. Shift-Right Testing",
          "Module Summary",
          "Advanced QA Theory"
        ],
        "Testing Techniques, Methods, Types, and Approaches": [
          "Module Introduction",
          "Black-box, White-box, and Gray-box Testing",
          "Manual Testing and Automated Testing",
          "Behavior-Driven Developmnet (BDD) and Test-Driven Development (TDD)",
          "Positive and Negative Testing",
          "Unit, Integration, System, and Acceptance Testing",
          "Regression Testing",
          "Smoke Testing",
          "Static Testing vs Dynamic Testing",
          "Functional Testing and Non-Functional Testing",
          "API Testing",
          "UI Testing",
          "Performance Testing",
          "Security Testing",
          "Mobile Testing",
          "Web Testing",
          "Automotive Software Testing",
          "IoT Testing",
          "Game Testing",
          "Module Summary",
          "Different Testing Types"
        ],
        "Defect Management": [
          "Module Introduction",
          "Defect Management",
          "Types of Software Defects",
          "Bug, Error, Mistake, Defect, Issue",
          "Defect Reporting",
          "Tools for Defect Reporting",
          "Module Summary",
          "What are important things from the aspect of management"
        ],
        "Project Management": [
          "Module Introduction",
          "Project and Product Risk Analysis",
          "Who is Project Manager",
          "Who is Test Manager",
          "Who is QA Tester",
          "Who is Business Analyst",
          "Who is Software Architect",
          "Who is DevOps Engineer",
          "Who is Developer",
          "Module Summary",
          "Some questions from higher level"
        ],
        "QA Test Framework": [
          "Module Introduction",
          "What is Test Management",
          "What is QA Test Framework",
          "Testing Documents",
          "What is Test Strategy Document",
          "What is Test Plan",
          "What is Use Case",
          "What is Test Scenario",
          "What is Test Case",
          "What is Software Requirement Specification",
          "What is Requirement Traceability Matrix",
          "What is Test Coverage",
          "What is Test Report",
          "Module Summary",
          "Good to know when creating QA Test Framework"
        ],
        "Testing Tools": [
          "Module Introduction",
          "Code Repository and GitLab",
          "Jira and Jira Zephyr",
          "Confluence",
          "Databases",
          "Postman and SoapUI, REST and SOAP",
          "Swagger",
          "Cypress",
          "Selenium",
          "TestNG",
          "JMeter",
          "Load Runner",
          "Unified Functional Testing",
          "Module Summary"
        ],
        "Best Practices": [
          "Module Introduction",
          "How to become a better QA",
          "What are Environments",
          "What you need before Testing",
          "Why do you need to understand basic terms of DevOps",
          "Why taking notes saves time",
          "How to optimize test execution",
          "Why you should never over-engineer solutions",
          "Testing in Agile Environments",
          "Testing in Healthcare",
          "Testing in Finance",
          "Testing in Other Industries",
          "Testing Standards",
          "Module Summary"
        ],
        "Course Summary": [
          "Final Word"
        ]
      },
      "requirements": [
        "Basic knowledge about programming is advisable",
        "Working in or having a desire to work in QA",
        "Basic idea what is QA is enough to start this course"
      ],
      "description": "Course Title: Software Testing: Kickstart Your Career as a QA Professional\nCourse Description: This online course is designed to provide an in-depth understanding of software testing concepts and techniques. Software testing is an essential part of the software development life cycle and plays a crucial role in ensuring the quality of the software product. This course covers various aspects of software testing, including testing fundamentals, types of testing, testing methodologies, test planning, test design techniques, test execution, and test reporting.\nThe course is structured to provide both theoretical knowledge and practical skills to the learners. It starts with the basics of software testing and gradually moves towards advanced topics such as automation testing, performance testing, and security testing. The learners will be exposed to various tools and technologies used in software testing, including popular testing frameworks.\nThe course is designed for software testers, quality assurance engineers, developers, and anyone interested in learning about software testing. By the end of the course, the learners will be able to develop test cases, execute tests, and report defects effectively. They will also have a solid understanding of the software testing process and its importance in the software development life cycle.\nCourse Topics:\nIntroduction to software testing\nTesting fundamentals\nTypes of testing\nTesting methodologies\nTest planning and documentation\nTest design techniques\nTest execution\nDefect reporting and management\nAutomation testing\nPerformance testing\nSecurity testing\nCourse Requirements:\nBasic knowledge of software development concepts\nAccess to a computer with an internet connection\nFamiliarity with programming languages is a plus but not required\nCourse Outcome:\nDevelop test cases, execute tests, and report defects effectively\nGain a solid understanding of the software testing process and its importance in the software development life cycle\nUnderstand various types of testing methodologies and tools used in software testing\nApply test design techniques to develop effective test cases\nPerform automation testing, performance testing, and security testing\nEvaluate and select appropriate testing frameworks for different types of software applications.",
      "target_audience": [
        "This course is suitable for software developers, quality assurance professionals, project managers, and anyone else involved in software development who wants to learn the essential concepts and skills of software testing. It is also suitable for beginners who are new to software testing and want to learn the basics from scratch.",
        "Great for Trainee and Junior position QAs."
      ]
    },
    {
      "title": "Using UFT Developer for Web Apps (Visual Studio and Csharp)",
      "url": "https://www.udemy.com/course/using-uft-developer-for-web-apps-visual-studio-and-csharp/",
      "bio": "Shift-left functional testing using standard programming languages, IDEs, and testing frameworks of choice",
      "objectives": [],
      "course_content": {
        "UFT Developer for Web App Testing (Visual Studio and C#)": [
          "Introduction to UFT Developer Automation for Web Applications (Basic Course)",
          "Build Application Models for Web App",
          "Build Basic Test for Web App",
          "Calculation, output and custom checkpoints",
          "Parametrization and Data Driven Testing",
          "Working with Native Object Properties",
          "Working with the Reporter Object",
          "Using the Test Recorder",
          "RunJavaScript on BrowserPage",
          "Utilizing ScreenCapture",
          "Additional Settings & Summary"
        ]
      },
      "requirements": [
        "Visual Studio 2019 Installation",
        "C# Basic Knowledge",
        ".NET Basic Knowledge",
        "MsTest Installation"
      ],
      "description": "UFT Developer helps you develop automated tests for a wide range of technologies, using standard IDEs with modern programming languages. UFT Developer requires familiarity with the basics of programming in the language you use to develop your tests.\nRequirements prior course:\nInstall the UFT Developer runtime engine on any machine where you want to run UFT Developer tests.\nInstall one or more supported IDEs and the relevant UFT Developer plugins on any machine where you want to write and edit UFT Developer tests.\nIn this course, you will learn how to use UFT Developer for Csharp (C#) using Visual Studio and MsTest as testing framework.\nIn the IDE of your choice, create a UFT Developer testing project, use UFT Developer to create test object descriptions and write tests that can perform operations on your applications.\nCreate a testing project\nCreate a UFT Developer testing project in the IDE of your choice, using the project templates provided with the UFT Developer plugins or use your own custom framework.\nCustomize your test settings\nCustomize the UFT Developer runtime server settings and report options.\nDefine test objects\nCreate test object descriptions that enable UFT Developer to identify the objects in your application and can withstand changes in the application you’re testing.\nWrite programmatic descriptions or use the visually oriented tools that UFT Developer offers to provide an interface to the tested application and its objects.\nWrite tests\nAfter you create test object descriptions, write automated tests whose steps call the methods and properties of these UFT Developer test objects.\nAdd code to verify application behavior\nVerify that the objects in your application look and behave as you expect.\nWhen these special steps return false results, the step and test fail, but no exception is thrown and your test continues to run.\nThis course will cover the following:\nBuild Application Models\nCreate Test Scripts\nRunning Test Scripts\nCalculation and custom checkpoints\nOutput Values and Parametrization\nData Driven Testing\nScreen Recorder\nUsing Reporter Object\nWorking with Test Recorder\nSummary\nUpon successful completion of this course, you will be eligible to:\nbe more productive\nbetter collaborate\nuse agile methodologies in a smarter way\nsupport the software delivery lifecycle\ntake on lead roles in your projects and advance in your career",
      "target_audience": [
        "Developer",
        "Tester",
        "Automation Engineer"
      ]
    },
    {
      "title": "S71200 PLC Modbus TCP Communication & Webserver Application",
      "url": "https://www.udemy.com/course/s71200-plc-modbus-tcp-communication-webserver-application/",
      "bio": "You will learn alot of things about Modbus TCP & Webserver from basic CODE: DISCOUNT11",
      "objectives": [
        "You will learn how to connect Modbus TCP devices CODE: DISCOUNT11",
        "You will learn how you can control your plc from WEB",
        "You will learn how to write IO to Modbus TCP devices",
        "You will learn how to read IO from Modbus TCP devices",
        "You will read or write to plc from WEB online",
        "You will control your plc from your cell phone or tablet and internet connection devices"
      ],
      "course_content": {
        "Giriş": [
          "İntro",
          "1. How to find and test modbus read-write adresses",
          "2. How can we read Dijital Inputs from modbus TCP devices",
          "3. How can we write modbus TCP devices Dijital Outputs",
          "4. How can we read Analog inputs from modbus TCP devices",
          "1.Webserver Connection Settings and user authorization",
          "2.Webserver Connection from Phone & PC",
          "3.Data read&write Modbus TCP Device",
          "4. We will learn use watch table",
          "5. How to connect our web page to webserver, Settings.",
          "6. Create Web page Applicaiton",
          "Modbus TCP Settings Demo1",
          "How can we read Dijital Inputs from modbus TCP devices Demo2",
          "How can we write modbus TCP devices Dijital Outputs Demo3",
          "How can we read Analog inputs from modbus TCP devices Demo4",
          "Modbus TCP Settings Demo2"
        ]
      },
      "requirements": [
        "Basic PLC Knowlage",
        "İf you dont have a software you can ask for link to us"
      ],
      "description": "CODE: DISCOUNT11\n\n\nHi dear Friend!\nLooking to improve your career in Industrial Automation and S71200 PLC Modbus TCP Communication & Webserver  Application  programming ,\nWhat Do you think ?\nIf your answer is YES, then you're definitely in the right place.\nLet's start learning,\nDo not forget to look at my other trainings after this training,\nI provide  S71500, S71200, S7300 PLC, HMI & WinCC SCADA Trainings, AC and Servo drives.\nI am waiting for all your questions and opinions\nYou can also take other trainings prepared by us, our company has the required human resources and infrastructure for the needs of all industries, we provide experiment sets, practical trainings, project and consultancy services besides video trainings.\nYou can also take other trainings prepared by us, our company has the required human resources and infrastructure for the needs of all industries, we provide experiment sets, practical trainings, project and consultancy services besides video trainings.\nYou can also take other trainings prepared by us, our company has the required human resources and infrastructure for the needs of all industries, we provide experiment sets, practical trainings, project and consultancy services besides video trainings.\nYou can also take other trainings prepared by us, our company has the required human resources and infrastructure for the needs of all industries, we provide experiment sets, practical trainings, project and consultancy services besides video trainings.",
      "target_audience": [
        "This course is written for anybody who wants to work with Modbus TCP devices and Webserver App.",
        "Students",
        "industriyel Enginneer",
        "Technician"
      ]
    },
    {
      "title": "ISTQB Certified Tester Foundation Level | CTFL v4.0 [NEW]",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl-v40-6-mock-tests-new/",
      "bio": "The best way to prepare for the ISTQB CTFL v4.0 with 6 Exams, including detailed answers and explanations [2025]",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the newly designed practice tests for the official ISTQB Certified Tester Foundation Level (CTFL) v4.0 certification. Prepare yourself optimally for the certification exam with 240 questions in 6 challenging exam simulations and gain a decisive advantage!\n\n\nThe practice tests are tailored exactly to the actual exam requirements and offer detailed explanations for each question. This enables targeted preparation on all relevant topics to ensure that participants are well-prepared for the certification.\n\n\nThe exam questions cover all contents of the ISTQB Certified Tester Foundation Level (CTFL) v4.0 certification. These are divided into the following learning units:\n\n\nFundamentals of Testing: Understanding the principles and objectives of testing.\nTesting in the Software Development Lifecycle: The role of testing in different development models.\nStatic Testing: Methods for reviews and static analyses.\nTest Design Techniques: Strategies for designing effective test cases.\nTest Management: Planning, controlling, and monitoring test activities.\nTool Support for Testing: The use of tools to support the testing process.\n\n\nExam Format:\nQuestion Types: Multiple-choice (one correct answer)\nDetailed Explanations: Each question includes a detailed explanation with additional information and a reference to the relevant chapter in the syllabus v4.0\nDynamische Reihenfolge von Fragen und Antworten: Jeder Test ist einzigartig! Die Anordnung der Fragen und Antworten ändert sich bei jedem Versuch, um eine realistische Prüfungssituation zu simulieren und reines Auswendiglernen zu verhindern.\nEvaluation: 65% of the questions must be answered correctly to pass the test—just like in the real exam\nExam Duration: 75 minutes",
      "target_audience": [
        "Individuals who are new to the field of software testing and wish to learn the fundamental testing principles.",
        "Software developers, software testers, and IT consultants who want to expand their knowledge and obtain the ISTQB Foundation Level certification.",
        "Young people who want to start their careers as software developers or consultants.",
        "Individuals with an interest in software development and related fields."
      ]
    },
    {
      "title": "Test Management Tool: JIRA, Rally Tools with Agile Concepts",
      "url": "https://www.udemy.com/course/learn-jira-rally-tools-with-agile-testing/",
      "bio": "Learn JIRA, Rally Test Management Tools with Complete Agile Concepts in Detail (Defect Management Tools)",
      "objectives": [
        "At the end of this course, students would understand JIRA, Rally with Agile as Testing Technology which are used in Big Data and non big data projects and they can start working in testing profile.",
        "At the end of this tutorial, students would be able to start their career in All Kinds of Testing with these tools and technology at different levels."
      ],
      "course_content": {},
      "requirements": [
        "As such there is no prerequisite required for this course and it is useful for any level of tester. Any Tester profile candidate can start this tutorial.",
        "Any QA can start this course who has basic knowledge of any defect tracking tool and there is no specific prerequisite."
      ],
      "description": "This course is for Testing profile candidate who wanted to build there career into Big Data or Non Big Data Testing. So I have designed this course so they can start working with JIRA and Rally with Agile methodology in testing. All the users who are working in QA profile and wanted to move into testing profile domain should take this course and go through the complete tutorials.\nI have included the material which is needed for big data or Non Big Data testing profile and it has all the necessary contents which is required for learning JIRA, Rally with Agile methodology.\nIt will give the detailed information for different features and how to use at different level which is needed by the tester to move into bigger umbrella i.e. Big Data or Non Big Data Testing.\nThis course is well structured with all elements of different uses of JIRA, Rally and how it is used in real time projects in practical manner separated by different topics. Students should take this course who wanted to learn JIRA and Rally with Agile from scratch.",
      "target_audience": [
        "Any Level of Testing Profile Candidate is the target audience for this course.",
        "Any big data QA beginner or non big data QA can learn these tools which use useful for all kind of testing."
      ]
    },
    {
      "title": "Usability testing: UX review techniques without users",
      "url": "https://www.udemy.com/course/ux-testing-without-users/",
      "bio": "UX testing techniques without involving users that are easy, fast and affordable to run.",
      "objectives": [
        "Perform usability review without involving users",
        "Distinguish difference between UX Research techniques",
        "Apply Jack Nielsen’s “Heuristic Evaluation” techniques to your product, which allows you to judge a user interface based on 10 well-proven general principles.",
        "Implement Cognitive Walkthroughs techniques that identify how easy or difficult is it to use a product",
        "Present and sell the test results to the stakeholders",
        "Implement Usability Expert review technique",
        "Arrange a detailed usability test report",
        "Apply Usability Informal review technique"
      ],
      "course_content": {
        "Introduction": [
          "The importance of the Usability testing"
        ],
        "Usability Evalution techniques": [
          "Usability informal review",
          "Usability expert review",
          "Cognitive Walkthrough technique",
          "Jack Nielsen’s \"Heuristic Evaluation\" technique"
        ],
        "Demonstration the Test Results": [
          "Arranged a detailed Usability Test Report",
          "Present and sell the test results to the stakeholders"
        ]
      },
      "requirements": [
        "There is no requirements to get the course than the desire lo learn how to evaluate User Interface without involving users."
      ],
      "description": "My name is Olha Bugaiova.\nI have been working as a Test Manager for 10 years. I have considerable experience in testing and releasing products on Mobile, Web, AR, VR platforms.\nIn this course, I am going to share my favorite UX evaluation techniques without involving users that are easy, fast, and affordable to run. You will get to know and practice UX Research techniques for mobile and Web products without users.\nIn addition, I arranged the real recommendations that help you to present and sell the test results to the stakeholders\nWe start with the presentation of the two biggest UX flops in the tech world. Then we discussed the techniques that can be applied alone or in a team as Usability informal review, Usability expert review, Cognitive walkthroughs, and Heuristic evaluation. We also discussed their advantages and disadvantages. Then we move on to how to demonstrate your test results in the test report. Finally, we wrap up the discussion about how to sell the test results to the stakeholders.\n\n\nSKILLS YOU WILL GAIN:\n\n\nHeuristic Evaluation\nUsability Informal review\nUsability Expert review\nСognitive Walkthroughs\nArrange Usability Test Report\nPresent and sell the test results to your stakeholders\n\n\nThis course is great for anyone who wants to find real User Experience testing techniques that can be applied without involving users.",
      "target_audience": [
        "Project Managers",
        "Software Testers",
        "Software Developers",
        "UX Designers",
        "Everyone who interested in User Experience"
      ]
    },
    {
      "title": "Unit Testing in .NET 9 and C# with NUnit 4.x and MOQ",
      "url": "https://www.udemy.com/course/unit-testing-net-applications-with-nunit/",
      "bio": "NUnit in .NET and C#. Test-Driven Development. Testing Legacy Code + Interview Questions & Answers",
      "objectives": [
        "Unit Testing Concepts and Fundamentals",
        "Writing and Executing Tests with NUnit",
        "Mocking and Mocking Frameworks (MOQ)",
        "Test Driven Development (TDD)",
        "Techniques of Testing Legacy (old) Code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Unit Testing ?",
          "What is NUnit?"
        ],
        "Writing Tests": [
          "Writing The First Test with NUnit: Arrange, Act, Assert.",
          "The TestFixture Attribute",
          "Test Method's Naming Conventions"
        ],
        "Asserts": [
          "Simple Asserts",
          "Handling Exceptions",
          "Working with Types (IsInstanceOf and IsAssingableFrom methods)",
          "The StringAssert Class",
          "The CollectionAssert Class",
          "Asserting with Constraints"
        ],
        "Advanced Topics": [
          "TestFixture - Advanced",
          "Setup and TearDown",
          "The TestCase Attribute - Passing values to parametrised test methods.",
          "Grouping Asserts Together"
        ],
        "Mocking Technique and MOQ Framework": [
          "Intriduction to Mocking and MOQ",
          "The Personal Photos Project",
          "Testing an ASP.NET MVC Action with MOQ Framework and NUnit",
          "Testing an async ASP.NET MVC Action with Mock",
          "Using Setup and Return with MOQ"
        ],
        "Test-Driven Development or TDD": [
          "Introduction to Test-Driven Development (TDD)",
          "TDD Demo - Writing C# Code with TDD Technique"
        ],
        "Testing the Legcy Code": [
          "The Common Technique of Testing a Legacy (Old) Code",
          "Testing a Legacy Code in Action"
        ],
        "Interview Questions": [
          "Check Your Learning"
        ],
        "Bonus Lectures": [
          "Bonus: Using AI for Generating Unit Tests Automatically"
        ]
      },
      "requirements": [
        "C#"
      ],
      "description": "If you're a .NET developer looking to improve the quality and reliability of your code, then this online course on Unit Testing in .NET  and C# with NUnit and MOQ is perfect for you!\nIn this comprehensive course, you'll learn everything you need about NUnit and its usage in the latest version of .NET.\nWith C#, including how to write practical unit tests using the NUnit and MOQ frameworks. You'll also learn about Test Driven Development (TDD) and how to apply it to your projects.\nBut that's not all—we'll also cover unit testing legacy code, a crucial skill for any developer who wants to maintain and improve existing codebases. To ensure you're fully prepared for any job interviews, we've included interview questions and answers related to unit testing and NUnit.\nOur expert instructor will guide you through the course, providing clear explanations and hands-on examples to help you master the material. By the end of the period, you'll deeply understand NUnit and unit testing and the skills and knowledge needed to apply these techniques to your projects confidently.\nThis course is perfect for anyone who wants to take their .NET development skills to the next level. Whether you're a beginner looking to learn the basics of unit testing or an experienced developer looking to improve your skills, this course has everything you need to succeed.\n\n\nSo don't wait - enroll now and start mastering unit testing with NUnit today!",
      "target_audience": [
        ".NET Developers",
        "Test Engineers"
      ]
    },
    {
      "title": "Software Testing desde cero : MasterClass todo en 1 (2025)",
      "url": "https://www.udemy.com/course/software-testing-desde-cero-a-expertomasterclass-todo-en-1/",
      "bio": "Inicia tu carrera como QA desde 0 , aprende sobre pruebas ágiles, APIs, automatización con Katalon, Cypress, y más...",
      "objectives": [
        "La importancia del Software Testing, el rol del QA en la actualidad y sus responsabilidades en proyectos agiles.",
        "Fundamentos de Scrum, roles y eventos",
        "Fundamentos del Testing ágil, plan de pruebas , casos , pruebas exploratorias con ejemplos practicos.",
        "Como reportar bugs en JIRA, entender su ciclo de vida mediante ejemplos prácticos.",
        "Herramientas básicas para el Testing en el 2024: Scrum(Azure DevOps+JIRA), Gestor pruebas (TestRail),Browserstack, VsCode + GIT",
        "Automatización con programación usando Node Js + Cypress con ejemplos en vivo.",
        "Como elaborar una CV como Tester, el perfil de Linkedin, tips, freelancing, crowtesting, salarios como QA y más",
        "API testing y automatizaciòn con Postman",
        "Esta comprobado que con este curso se ganan las bases para conseguir el primer trabajo como Tester Jnr, muchos lo han logrado!, leer los comentarios aquí abajo."
      ],
      "course_content": {
        "Introducción al curso y recomendaciones iniciales": [
          "Introducción general del tutor y el curso.",
          "Recomendaciones para una mejor experiencia del curso",
          "IMPORTANTE: Recursos para las clases y ultimas observaciones"
        ],
        "El rol del tester en un proyecto de desarrollo de software.": [
          "Que es el Software Testing y su importancia en el desarrollo del software",
          "¿Que habilidades necesitarás como Tester?",
          "Responsabilidades del Tester o QA en un equipo de dllo de software",
          "¿Puedo ser Tester sin tener una carrera en TI o relacionada con informática?",
          "Quiz - El testing y el rol del QA"
        ],
        "Fundamentos del proceso de desarrollo de software ágil": [
          "Ciclo del desarrollo del software. (SDLC). Ejemplo Amazon",
          "Marco ágil de desarrollo con Scrum",
          "El tester en un equipo Scrum y explicación de los otros roles",
          "Identifica los eventos básicos de Scrum",
          "Quiz - Desarrollo de software ágil"
        ],
        "Fundamentos del testing ágil, paso a paso con proyecto real": [
          "Los 7 principios fundamentales del testing explicado con ejemplos.",
          "¿Que es Agile Testing?",
          "Como crear un plan de pruebas con un ejemplo",
          "Casos de prueba basados en historias de usuario , ejemplos en sitio BuggyCars",
          "Tu turno de diseñar casos de prueba",
          "Que es un bug y que estructura debe tener el reporte.",
          "¿ Como reportar un bug usando JIRA?",
          "Entendamos el ciclo de vida de un bug",
          "Encontrar todos los bugs de BuggyCars",
          "Sitio de practica- Encuentra los bugs de formulario empleados",
          "Otros sitios web para que practiques probando",
          "Pruebas exploratorias en entornos ágiles y sus beneficios.",
          "Como hacer pruebas exploratorias efectivamente.",
          "Instalacion de plugin y ejemplo de pruebas de exploración E2E - GeekStore site",
          "Ejercicio: Tu turno de hacer exploratory testing, encuentra todos los bugs!",
          "Pruebas funcionales vs No funcionales, que tipos hay?",
          "Quiz - Fundamentos del testing",
          "Simularión: Reunión de Planeación de pruebas- Desarrollo de un cotizador en linea"
        ],
        "Herramientas más usadas en el Testing, paso a paso instalación y uso": [
          "Introducción a las herramientas básicas y avanzadas para software testing",
          "Instalación y manejo capturadores de pantalla y video",
          "Gestor de proyectos Scrum: veamos JIRA, Azure DevOps o Trello",
          "Gestor de casos de prueba: veamos TestRail",
          "Chrome DevTools: Para que sirve ?",
          "Chrome DevTools: Pruebas Performance web con Lighthouse",
          "Chrome DevTools: Recorder",
          "Cross browser/mobile testing usando Browserstack",
          "Diseña casos agilmente con - Test Case studio",
          "Editor de código y versionamiento: VSCode, GIT + Github"
        ],
        "Automatizacion de pruebas sin código, paso a paso con ejemplos": [
          "Que son las pruebas automatizadas, ventajas y desventajas",
          "Instalación e introducción de Katalon recorder (herramienta record & play)",
          "Katalon recorder- Grabacion primer test automatizado (Proyecto GeekToys)",
          "Katalon recorder- Gestión test suites, test cases, manejo de comando \"verify\"",
          "Katalon recorder- otros comandos, captura de fotos y \"dynamic test suites\"",
          "Katalon recorder - control de pruebas con test data",
          "Katalon recorder - exportación de tests a otros frameworks y carga de ejemplos",
          "Notas finales sobre Katalon - lista de comandos y limitaciones herramienta",
          "Tu turno de automatizar una suite de pruebas sencilla usando Katalon recorder"
        ],
        "Automatización de pruebas programadas con Cypress, paso a paso con ejemplos": [
          "Automatización con código usando Cypress.IO, que es y ¿porque es tan famoso?",
          "Instalación del VsCode, Node JS y Cypress",
          "Cypress: Inicio Cypress, vista al TestRunner y carga de tests de ejemplo",
          "Cypress: Preguntas frecuentes en instalación, solucion a problemas",
          "Cypress: Mi primera prueba en Cypress - Zero bank",
          "Cypress: Prueba E2E - comandos click, type, select",
          "Cypress: Organización de pruebas con Hooks y debugging de pruebas",
          "Cypress: Generacion de evidencias en Cypress",
          "Descarga el código del ejemplo ZeroBank",
          "ChatGPT : Instalación de Cypress y automatización básica con IA",
          "Tu turno de automatizar una suite sencilla usando Cypress"
        ],
        "Pruebas de APIs paso a paso con ejemplos": [
          "Actualización interfaz Postman version 11.6.2 en adelante",
          "¿ Que es una API ?",
          "Ejemplo de una API en un sitio real",
          "¿ Que es API testing? - importancia",
          "Tipos de pruebas de APIs",
          "Pruebas de APIs con Postman paso a paso ( manuales y automaticas)",
          "Tu turno de crear pruebas automatizadas de APIs",
          "Descarga la solución al ejercicio anterior de API testing",
          "URL de APIs que estan disponibles para practicar",
          "Examen final - Master Class Software Testing"
        ],
        "Probando con ayuda de AI - ChatGpt para Testers": [
          "Diseño de casos de prueba con GPT, vuelvete más productivo.",
          "Definiendo una estrategia de pruebas",
          "APi testing con ChatGPT",
          "Reporte de bugs en automatico.",
          "Consulta SQL con ChatGPT",
          "Kit de prompts de QA para ChatGPt, Gemini o cualquier GenAi"
        ],
        "El paso a paso para encontrar tu trabajo como Tester": [
          "Elaborando una hoja de vida como QA",
          "Tu perfil de Linkedin como QA.",
          "La clave esta en unirse a comunidades y atender eventos de Testing",
          "Como ganar experiencia cuando eres principiante como QA Freelancer",
          "Sitios de prueba para practicar más",
          "Es hora de preparar tu entrevista",
          "Simulación: Entrevista técnica para puesto de QA Analyst",
          "Salarios de los Testers a nivel mundial, comparación por paises",
          "Felicitaciones, has culminado con exito el curso de Software Testing!",
          "Y ahora que sigue? - ¿ que camino debo tomar?",
          "Bonus class"
        ]
      },
      "requirements": [
        "No se necesita experiencia en programación (aunque sería ideal), aprenderás todo lo que necesitas en el curso paso a paso.",
        "No se necesita experiencia previa o altos conocimientos técnicos. El curso está especialmente diseñado para ser entendido por todas las audiencias."
      ],
      "description": "Si estás buscando iniciar una carrera en el área de las pruebas de software y QA o ya trabajas allí y deseas aprender más y avanzar en tú en crecimiento profesional , encontrar mejores trabajos  en tu país , online o incluso a nivel internacional... entonces este MasterClass paso a paso  es para ti!!\nTe enseñaremos todo lo que necesitas absolutamente desde cero explicado con ejemplos prácticos, es un curso TODO EN 1 sobre:\nEl rol del Tester/QA y sus responsabilidades.\nTesting y aseguramiento de calidad.\nPruebas ágiles en marcos de trabajo como SCRUM.\nHerramientas de testing mas usadas al 2025 (JIRA,Azure DevOps, TestRail,grabadores de pantalla, Trello, ChatGPT para QAs, Browserstack, Postman y más...)\nAutomatización de pruebas con o sin conocimientos en programación ( Katalon y Cypress)\nUna carrera en alta demanda\n¿Sabías que el rol del tester de software está dentro de los 20 mejores trabajos del futuro en términos de crecimiento y mejor remuneración en mundo de IT?\nEl avance vertiginoso de la tecnología y el software, ha convertido al testing en una carrera muy llamativa  debido a su alta demanda actual como también los  buenos salarios en Latinoamérica y el mundo.\nContenido y descripción general\nLos 10 módulos con 79 clases  (11 horas de grabacion) han sido creadas especialmente sobre metodologías y herramientas con alta demanda por el mercado actual de las pruebas a nivel mundial al 2025. Es un curso 100% practico y demonstrativo  donde nunca te aburriras estudiando, te lo aseguro!. (Estaremos actualizando el curso con últimas tendencias en el Testing!)\nAdemás de las clases demostrativas también hemos creado, recursos descargables, exámenes cortos y ejercicios para que tú en tu tiempo libre practiques lo aprendido.Muchas personas creen que se requieren altos conocimientos técnicos para convertirse en QA, con este curso queremos eliminar esa barrera y entrenar a cualquier persona sin conocimientos previos, pero con un gusto y pasión por la tecnología, el software y ganas de aprender.\nAl finalizar el curso estarás en la capacidad de planear, diseñar , ejecutar, documentar y automatizar pruebas de software como tambien un método recomendado para encontrar trabajos como QA. Este  es el mejor curso de Testing en español en UDEMY, garantizado.\nTe invito a que veas el contenido detallado del programa aquí abajo y te inscribas pronto, nos vemos en las clases!.",
      "target_audience": [
        "Analistas de pruebas, Testers / QAs Juniors o Intermediate que deseen profundizar en agile testing, Scrum, herramientas modernas, y automatización.",
        "Personas que ya trabajan en desarrollo de software como analistas, programadores, que deseen aprender a probar profesionalmente.",
        "Cualquier entusiasta de las tecnologias de información que deseen empezar una carrera en el mundo de las pruebas"
      ]
    },
    {
      "title": "Sıfırdan Selenium WebDriver & Java Öğrenin",
      "url": "https://www.udemy.com/course/sifirdanseleniumwebdriverjavaogrenin/",
      "bio": "Selenium WebDriver İle Sıfırdan İleri Seviyeye Web Otomasyonu | Temelden Başlayıp Kendinizi Projelerle Geliştirin",
      "objectives": [
        "Java programlama dilini kullanarak Selenium WebDriver ile Web Otomasyonu yazabileceksiniz.",
        "Sadece nasıl yapıldığını değil, neden yaptığımızı öğreneceksin.",
        "Mülakat soruları ile kendini iş görüşmelerine hazırlayabileceksin.",
        "BDD , Cucumber ve TestNG kavramlarının ne anlama geldiğini öğreneceksin.",
        "Projeler ve bölüm sonu testleriyle kendini geliştirebileceksin."
      ],
      "course_content": {
        "Giriş": [
          "Selenium Nedir?",
          "Java ve Intellij IDEA Kurulumu"
        ],
        "Java ile Programlamaya Giriş": [
          "Java Nedir?",
          "Hello World",
          "Değişkenler",
          "Dizgiler (String)",
          "Diziler (Arrays)",
          "İşlemler (Operators)",
          "Döngüler (Loops)",
          "Koşullar (if -else if - else )",
          "Java Değerlendirme Soruları"
        ],
        "Selenium WebDriver": [
          "Selenium WebDriver Ekleme",
          "Driver Başlatma",
          "Selenium WebDriver Komutları",
          "Eleman Alma İşlemleri",
          "SelectorsHub İle Eleman Alma",
          "Proje 1 : İlk Otomasyonumuzu Yazalım",
          "Selenium WebDriver Değerlendirme Soruları"
        ],
        "Selenium İçin TestNG Framework": [
          "TestNG Nedir?",
          "TestNG'nin Yapısı ve Eklenmesi",
          "TestNG Annotations",
          "Xml Oluşturma",
          "Include & Exclude Metotları",
          "Gruplandırma ve Gruplarına Göre Koşma",
          "Testleri Öncelik Sırasına Göre Koşma (Priority)",
          "Enabled Kullanarak Test Koşma",
          "TestNG Raporlama",
          "TestNG Değerlendirme Soruları"
        ],
        "BDD & Cucumber Framework": [
          "Cucumber Nedir ?",
          "Cucumber Ekleme",
          "Senaryo Nasıl Yazılır?",
          "Proje Yapısı Nasıl Olmalıdır?",
          "ConfigReader Eklenmesi",
          "DriverFactory Eklenmesi",
          "Hooks Eklenmesi",
          "ElementHelper Eklenmesi",
          "Runner Class Oluşturma",
          "Xml Oluşturma",
          "GitHub Kodlar",
          "Cucumber Değerlendirme Soruları"
        ],
        "Bitirme Projesi": [
          "Bitirme Projesi Adımları",
          "Bitirme Projesi Part-1",
          "Bitirme Projesi Part-2"
        ],
        "Bitirme Projesi 2": [
          "Bitirme Projesi2 - Part1",
          "Bitirme Projesi2 - Part2"
        ],
        "Bitirme Projesi 3": [
          "Bitirme Projesi 3 Adımları",
          "Bitirme Projesi 3 - Part1",
          "Bitirme Projesi 3 - Part2"
        ],
        "Mülakat Soruları": [
          "Mülakat Soruları"
        ],
        "Kurs Sonu": [
          "Kurs Sonu"
        ]
      },
      "requirements": [
        "Bir bilgisayara sahip olmak.",
        "Java bilgisi gerektirmez, gerekli olan her şeyi baştan öğreneceksiniz."
      ],
      "description": "Kurs Hakkında\nJava kullanarak Selenium WebDriver ile Web Otomasyonları yazmayı öğreneceksiniz. Bdd&Cucumber Framework, TestNG kavramlarının ne anlama geldiği ve nasıl kullanılacağını öğreneceksiniz .\n\n\nKurs İşlenişi\n1.Kurs sırasında öncelikle gerekli program ve ortamların kurulumunu öğreneceksin.\n2.Neden kullandığımızı ve nasıl kullandığımızı öğreneceksin.\n3.Bölüm sonu değerlendirmeleriyle kendini test edebileceksin.\n4.Projelerle kendini geliştirebileceksin.\n\n\nKurs Süresince\nBu kurs içerisinde bulunan derslerle ilgili anlamadığınız veya yapamadığınız her şeyi bana Udemy veya LinkedIn üzerinden istediğiniz zaman sorabilirsiniz.\n\n\nKurs Sonunda\nKursun sonunda bu öğrendiğimiz konuların hepsini içerisinde kullanabileceğimiz bir  adet proje yapacağız.\n\n\nEN\n\n\nAbout the Course\n\n\nYou will learn to write Web Automations with Selenium WebDriver using Java. You will learn about Bdd&Cucumber Framework, what TestNG concepts mean and how to use them.\n\n\nCourse Processing\n\n\n1. During the course, you will first learn how to install the necessary programs and environments.\n\n\n2. You will learn why we use it and how we use it.\n\n\nYou will be able to test yourself with the end-of-chapter evaluations.\n\n\n4. You will be able to develop yourself with projects.\n\n\nDuring the Course\n\n\nYou can always ask me on Udemy or LinkedIn about anything you don't understand or can't do about the courses in this course.\n\n\nAt the end of the Course\n\n\nAt the end of the course, we will make a project in which we can use all of the subjects we learned.",
      "target_audience": [
        "Yazılım Testi alanında kariyer hedefi olan kişiler.",
        "Web Otomasyonu öğrenmek isteyen kişiler.",
        "Daha önce Selenium ile uğraşmayıp, yeni başlayan kişiler."
      ]
    },
    {
      "title": "Robot Framework with Selenium - Web Automation",
      "url": "https://www.udemy.com/course/test-automation-with-robot-framework-selenium-library/",
      "bio": "UI Automation using Selenium, Pycharm & Python Robot framework | Jenkins Integration | Containerization Examples",
      "objectives": [
        "What is Robot Framework? How to setup Pycharm and development environment?",
        "Learn automate Web Application using Selenium library with Robot Framework",
        "How to write and maintain test cases and different concepts within Robot Framework",
        "How to build the Test Automation Framework using Robot, Python and Selenium libraries"
      ],
      "course_content": {},
      "requirements": [
        "You need to have a decent spec laptop/desktop and internet connection",
        "Prior knowledge of UI Automation is useful but not required",
        "Basic understanding of test automation",
        "Have access to PC (Windows) and decent internet connection."
      ],
      "description": "Thanks for stopping by and checking out what you get from the course.\nRobot Framework is a Python-based, extensible keyword-driven automation framework for acceptance testing, acceptance test driven development (ATDD), behavior driven development (BDD) and robotic process automation (RPA). It can be used in distributed, heterogeneous environments, where automation requires using different technologies and interfaces.\nIn this course, we'll start by learning what is Robot Framework, later we will see how to build a framework using Robot Framework which will take your test automation skills to next level. The topics you will be learning are\nSetting up Pycharm as IDE to build the test cases using Robot Framework, Selenium Webdriver  and Python\nVariables & Arguments\nSimple UI Example\nList and Dictionary\nIf-Else, For Loop\nData Driven Test case\nSuite Setup and Suite Tear down\nUsage of resource file in the framework\nSynchronization concepts for Web Automation\nHow to automate some common web Elements\nUsage of Tags\nIntegration or CI using Jenkins\nValidations\nContainerizing Robot Framework ( For this you need to take Docker tutorials) which is another course published in here.\nBy the end of this course you will be confident enough to start building the framework from scratch or help to improve how we write the test cases using robot framework.\nHope you will enjoy learning Robot Framework and checkout the other courses from me.",
      "target_audience": [
        "Beginners to test automation, Manual test engineers, College students, Freshers, Interns",
        "Those who want to venture into test automation",
        "Those who are already working with other automation tools and switch to Robot Framework",
        "Any IT/Non IT professional who wants to build a career in Test Automation"
      ]
    },
    {
      "title": "From Scratch to Profi: Test, selectors, HTML, ID, CSS, XPath",
      "url": "https://www.udemy.com/course/learn-how-to-write-robust-web-locators/",
      "bio": "write robust web locators to write test automation scripts that are likely not to break. Learn Ids, Classname, XPath",
      "objectives": [
        "why to write unbreakable web locators for web automation",
        "selecting the best identification method to use",
        "identifying elements on web page using Id, classname, other identifiers",
        "identifying elements on web page using XPath"
      ],
      "course_content": {},
      "requirements": [
        "basic knowledge about web and HTML",
        "willing to learn"
      ],
      "description": "Web locators are very important in web automation, whether for test or any other purpose. Because everything in web development go for Automation now, including integration in CI/CD pipelines and nightly regression tests, so web locators are nowadays more important than ever.\nTo write a web locator, there's a selections of methods available. Engineers have developed many ways to write web locators. Because in different situations, one or the other web locator may be fit for a specific case. Web locators can depend on Id, a classname, a type, a name or some other property. In other cases, we may be obliged to use XPath. Don't worry, the definition of each of these as well as examples and use cases are covered within this course.\nWe learn in this course what a robust web locator means. How we can write robust web locators. We also learn how to choose the best locator between the different types available for use.\nTo learn more about me and my work background, please visit my personal page. There's other courses on this subject, but I give you the reasons why mine is best for you. First, I come from technical background and have applied the principles in this course many times. Second, I give you complete examples while we learn so that you can see how to actually use the material and excel it. Third, I am always available to answer your questions or inquiries. Please write me and I will always reply to you.\nI made the course classified into small sections so you can in the future revisit only parts you need to review your knowledge about.\nIt's a fun course, so let's get started right away.",
      "target_audience": [
        "web scrapers",
        "test automation engineers",
        "RPA Engineers"
      ]
    },
    {
      "title": "Gatling - Performance, Stress, and Load testing in nutshell!",
      "url": "https://www.udemy.com/course/gatling-performance-testing/",
      "bio": "Gatling - Performance, Stress, and Load testing in nutshell - Basic level",
      "objectives": [
        "You will organize your knowledge of the Gatling tool and learn to analyze the results",
        "Learn how to use Gatling Recorder and Gatling framework with knowledge about the common issue during setting the environment",
        "Installation and configuration of Gatling from scratch, with no prior knowledge required",
        "It will be very useful if you need to run performance, stress, load tests",
        "Gatling basics from simple examples to advanced topics",
        "Covers a practical approach to performance, stress, and load testing",
        "The course covers the minimum of test knowledge necessary to start the adventure with performance, load, and stress testing"
      ],
      "course_content": {},
      "requirements": [
        "Basic software testing skills and proficient computer skills",
        "Basic knowledge of any programming language"
      ],
      "description": "The course covers the basics of getting started with the Gatling Framework tool, in addition to the basics of Gatling as tools, you will learn the basics and metrics and the most important issues related to performance testing. Gatling is a very versatile and gaining popularity modern performance test tool. It includes both Open Source and Enterprise versions. However, in the course, we will focus fully on the free version. You will learn how Gatlin works and how it is used on the popular \"Computer Database\" application provided by Gatling for the purpose of training performance tests. Step by year I will show you how to apply Gatling to your project using both Recorder and scripts.\n\n\nBelow you will find answers to the most frequently asked questions about the course:\n\n\nWho is this course for?\n\n\n✔ Aimed at the IT industry for testers, programmers, regardless of seniority - you will learn or \"refresh\" knowledge of Gatling Framework and basic of performance testing\n\n\n✔ For people interested in expanding their skills in the broadly understood software engineering industry\n\n\n✔ For people who want to learn from scratch the Gatling tool in order to perform performance, stress/load tests\n\n\n✔ Mostly dedicated to Software developers in Tests, QA, Testers, etc.\n\n\nWhat will you learn in this course?\n\n\n✔ Gatling basics from simple examples to advanced topics\n\n\n✔ You will organize your knowledge of the Gatling tool and learn to analyze the results\n\n\n✔ It will be very useful if you need to run performance, stress, load tests\n\n\n✔ Covers a practical approach to performance, stress, and load testing\n\n\n✔ The course covers the minimum of test knowledge necessary to start the adventure with performance, load, and stress testing\n\n\nWhy Learn Gatling?\n\n\n✔ Founded in 2012 (Officially on market from 2015)\n\n\n✔ Open Source\n\n\n✔ Created based on programming languages like Scala, Akka, and Netty\n\n\n✔ Run most of the protocols\n\n\n✔ Gatling is constantly updated and has the most efficient engine\nfrom the open-source tools -> GitHub - gatling / gatling\n\n\n✔ Dedicated Documentation for language: Java, Kotlin, and Scala\n\n\nWhen to use Gatling?\n\n\n✔ When you need a great tool for Performance, Stress, Load Test\n\n\n✔ Simulate XXX's of users on a single instance\n\n\n✔ Need tool in CI / CD environment or pipeline\n\n\n✔ Write more detailed, controlled, and clean tests (Scala lang)\n\n\n✔ When you need a fast solution (web recorder) and clear and nice looks reports - Gatling includes a web recorder and colorful reports\n\n✔ Improving your skills in testing",
      "target_audience": [
        "Aimed at the IT industry for testers, programmers, regardless of seniority - you will learn or \"refresh\" knowledge of Gatling Framework and basic of performance testing",
        "For people interested in expanding their skills in the broadly understood software engineering industry",
        "For people who want to learn from scratch the Gatling tool in order to perform performance, stress/load tests",
        "Mostly dedicated to Software developers in Tests, QA, Testers, etc."
      ]
    },
    {
      "title": "ISTQB Foundation Level CTFL",
      "url": "https://www.udemy.com/course/istqb-ctfl-exam-prep-updated-for-2022/",
      "bio": "Once this course is completed you will be fully prepared to pass the ISTQB Certified Tester Foundation Level Exam",
      "objectives": [
        "We will do a thorough review of the ISTQB Foundation Level syllabus to prepare for the exam",
        "Learn important tips for passing the exam by reviewing ISTQB resources",
        "Real world examples to help you understand and retain knowledge",
        "Explain how to register for the exam through ASTQB so your name appears on the Official list of Certified Testers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course and Exam Information"
        ],
        "Chapter 1 Fundamentals of Testing": [
          "Intro",
          "1.1 What is Testing?",
          "1.2 Why is Testing Necessary?",
          "1.3 Seven Principles of Testing",
          "1.4 Test Process",
          "1.5 The Psychology of Testing",
          "Chapter 1 Quiz"
        ],
        "Chapter 2 Testing Throughout the Software Development Lifecycle": [
          "Intro",
          "2.1 Software Development Lifecycle Models",
          "2.2 Test Levels",
          "2.3 Test Types",
          "2.4 Maintenance Testing",
          "Chapter 2 Quiz"
        ],
        "Chapter 3 Static Testing": [
          "Intro",
          "3.1 Static Testing Basics",
          "3.2 Review Process",
          "Chapter 3 Quiz"
        ],
        "Chapter 4 Test Techniques": [
          "Intro",
          "4.1 Categories of Test Techniques",
          "4.2 Black-box Test Techniques",
          "4.3 White-box Test Techniques",
          "4.4 Experience-based Test Techniques",
          "Chapter 4 Quiz"
        ],
        "Chapter 5 Test Management": [
          "Intro",
          "5.1 Test Organization",
          "5.2 Test Planning and Organization",
          "5.3 Test Monitoring and Control",
          "5.4 Configuration Management",
          "5.5 Risks and Testing",
          "5.6 Defect Management",
          "Chapter 5 Quiz"
        ],
        "Chapter 6 Tool Support for Testing": [
          "Intro",
          "6.1 Test Tool Consideration",
          "6.2 Effective Use of Tools",
          "Chapter 6 Quiz"
        ]
      },
      "requirements": [
        "You do not need any testing experience for this class, you will learn everything you need to pass the exam."
      ],
      "description": "Whether you are brand new to testing or have experience, this course will give you all the knowledge you need to pass your ISTQB Certified Tester Foundation Level exam and become registered on the ASTQB list of Certified and Credentialed Software Testers. We will review the ISTQB syllabus, along with the Exam Structure so you know where to focus time studying. At the end of each section, we will test your knowledge with practice questions.\n\nISTQB offers certified courses that can cost over a thousand dollars. I was fortunate to have my company pay for the course when I studied for the Foundation Level exam. However, once I was ready to take the Advanced Level exam, I was at a different job that didn't pay for the course and I didn't have a thousand to invest. I chose an Udemy course, and I am glad I did! It not only saved me a lot of money but it gave me the knowledge and confidence I needed to pass the exam.\n\nI have spent a lot of time building a quality course that is clear and efficient. You will get lectures that are straight to the point with relevant examples. I created this course because I want to share my knowledge with you so that you can pass the exam. Being certified hopefully gets you your first QA job, a better QA job, or a promotion!",
      "target_audience": [
        "This course is for anyone who wants to pass the ISTQB Certified Tester Foundation Level exam. Having QA experience is helpful, but if you are wanting to pass the exam to help you get your first QA job, this is for you too!"
      ]
    },
    {
      "title": "Roman Savin's Complete Course on Software QA and Testing.",
      "url": "https://www.udemy.com/course/how-to-become-a-qa-tester-in-30-days/",
      "bio": "Your Road to а QA Career Starts Here!",
      "objectives": [
        "How to test computer software (software testing). We'll cover black and grey box approaches",
        "How to improve the software development process (Quality Assurance). We'll extensively cover SDLC",
        "How to work with databases, version control, builds, log files, interpreters, automation helpers, etc. etc.",
        "How to professionally approach QA automation for functional and regression testing",
        "How to write a killer resume by converting your non-QA experience",
        "How to gain actual QA experience that you can put into your resume",
        "How to effectively hunt for a QA position anywhere in the world",
        "How to successfully pass QA interview and get your first QA job"
      ],
      "course_content": {
        "Unit 1. Bugs Are Everywhere!": [
          "Lesson 1. What is a Bug",
          "Quiz for Lesson 1",
          "Lesson 2. The Purpose of Testing",
          "Quiz for Lesson 2"
        ],
        "Unit 2. Test Cases and Test Suites": [
          "Lesson 3. Test Cases. Part 1/4",
          "Quiz for Lesson 3",
          "Lesson 4. Test Cases. Part 2/4",
          "Quiz for Lesson 4",
          "Lesson 5. Test Cases. Part 3/4",
          "Quiz for Lesson 5",
          "Lesson 6. Test Suites",
          "Quiz for Lesson 6",
          "Lesson 7. Test cases. Part 4/4",
          "Quiz for Lesson 7"
        ],
        "UNIT 3. Software Development Life Cycle": [
          "Lesson 8. Idea",
          "Quiz for Lesson 8",
          "Lesson 9. Product Design. Part 1/2",
          "Quiz for Lesson 9",
          "Lesson 10. Product Design. Part 2/2",
          "Quiz for Lesson 10",
          "Lesson 11. Coding. Part 1/4",
          "Quiz for Lesson 11",
          "Lesson 12. Coding. Part 2/4",
          "Quiz for Lesson 12",
          "Lesson 13. Coding. Part 3/4",
          "Quiz for Lesson 13",
          "Lesson 14. Coding. Part 4/4",
          "Quiz for Lesson 14",
          "Lesson 15. Testing and Bug Fixes",
          "Quiz for Lesson 15",
          "Lesson 16. Release. Part 1/4",
          "Quiz for Lesson 16",
          "Lesson 17. Release. Part 2/4",
          "Quiz for Lesson 17",
          "Lesson 18. Release. Part 3/4",
          "Quiz for Lesson 18",
          "Lesson 19. Release. Part 4/4",
          "Quiz for Lesson 19",
          "Lesson 20. The Big Picture of SDLC",
          "Quiz for Lesson 20",
          "Lesson 21. The Software Testing Life Cycle",
          "Quiz for Lesson 21"
        ],
        "UNIT 4. Types of Software Testing": [
          "Lesson 22. By Knowledge of the Internals",
          "Quiz for Lesson 22",
          "Lesson 23. By the Object of Testing",
          "Quiz for Lesson 23",
          "Lesson 24. By Degree of Isolation",
          "Quiz for Lesson 24",
          "Lesson 25. More Types of Testing",
          "Quiz for Lesson 25"
        ],
        "UNIT 5. Bug Tracking": [
          "Lesson 26. Bug Tracking System. Part 1/5",
          "Quiz for Lesson 26",
          "Lesson 27. Bug Tracking System. Part 2/5",
          "Quiz for Lesson 27",
          "Lesson 28. Bug Tracking System. Part 3/5",
          "Quiz for Lesson 28",
          "Lesson 29. Bug Tracking System. Part 4/5",
          "Quiz for Lesson 29",
          "Lesson 30. Bug Tracking System. Part 5/5",
          "Quiz for Lesson 30"
        ],
        "UNIT 6. Test Preps and Test Execution": [
          "Lesson 31. Test Preps",
          "Quiz for Lesson 31",
          "Lesson 32. Black Box Testing Techniques. Part 1/3",
          "Quiz for Lesson 32",
          "Lesson 33. Black Box Testing Techniques. Part 2/3",
          "Quiz for Lesson 33",
          "Lesson 34. Black Box Testing Techniques. Part 3/3",
          "Quiz for Lesson 34",
          "Lesson 35. New Feature Testing",
          "Quiz for Lesson 35",
          "Lesson 36. Regression Testing",
          "Quiz for Lesson 36",
          "Lesson 37. Test Automation. Part 1/3",
          "Quiz for Lesson 37",
          "Lesson 38. Test Automation. Part 2/3",
          "Quiz for Lesson 38",
          "Lesson 39. Test Automation. Part 3/3",
          "Quiz for Lesson 39"
        ],
        "UNIT 7. Job Hunting System": [
          "Lesson 40. Looking for first QA Job. Part 1/2",
          "Quiz for Lesson 40",
          "Lesson 41. How to Write Killer Resume",
          "Quiz for Lesson 41",
          "Lesson 42. Looking for first QA Job. Part 2/2",
          "Quiz for Lesson 42",
          "Lesson 43. QA Interview Preps",
          "Quiz for Lesson 43",
          "Lesson 44. How to Pass QA Interview. Part 1/2",
          "Quiz for Lesson 44",
          "Lesson 45. How to Pass QA Interview. Part 2/2",
          "Quiz for Lesson 45"
        ],
        "Professional Exam for Software QA/Test Engineer": [
          "Professional Exam for Software QA/Test Engineer"
        ],
        "QA Glossary + Templates and Examples of QA/Testing documents": [
          "QA Glossary + Templates and Examples of QA/Testing documents"
        ]
      },
      "requirements": [
        "Drive to learn, persistence and a DREAM of joining the software industry"
      ],
      "description": "\"I’ve hired many QA engineers, and can vouch for the effectiveness of much of the material here… If you’re serious about becoming a software tester, I can’t think of a better way to start.\" — Phil Libin, Evernote CEO\n—\nCourse FAQ\n\n\n1. What is the primary purpose of this course?\n\n\nTo help you find a QA job ASAP.\n\n\n2. Do I need to have a computer science degree or QA experience to get a job?\n\n\nMany, if not most, QA engineers came from the fields unrelated to computer science. There are former lawyers, civil engineers, accountants, customer support specialists, teachers, salespeople, etc. who got their QA jobs after taking a class on software testing.\n\n\nBTW, the great option to start QA career is to do internal transfer within your company — so many companies have websites, and somebody needs to develop and test them!\n\n\nQA is not rocket science! — in fact, our profession is the easiest way to join the software industry.\n\n\nHaving said that we want to stress that QA studies and QA work DO require things that not everybody has: attention to details, perseverance, patience, curiosity, and ability to learn new concepts/approaches.\n\n\n3. What this course consists of?\n\n\na. 45 video lectures PACKED with materials and practical exercises. Lectures 40-45 (inclusively) cover our Job Hunting System designed to help you stay ahead of your competition in the job market.\nb. 45 homework assignments (PDF file with homework is attached as a Resource to each lecture).\nc. 45 quizzes.\nd. Web-based training software SHARELANE.\ne. Professional Exam for Software QA/Test Engineer (178 questions on QA, Manual Testing, QA automation and software development)\ne. Templates and examples of QA documents (including first QA resume template) that you can use for your career.\n\n\nWe urge you to\n- execute all practical exercises as you study video lectures.\n- take all quizzes\n- complete all homework assignments.\n\n\nOnce again, if you want to be ahead of your competition on a junior tester job market, you have to study hard and do all practical exercises, homework, and quizzes. This course is big, comprehensive and it’s designed to help you get a job ASAP, but you’ll have to invest your effort and attitude… and all good things will come your way.\n—\nThis course is based on a bestselling book by Roman Savin and Ruslan Desyatnikov How to Become a QA Tester in 30 days and on previous Roman Savin’s books (How to Become a Software Tester and Тестирование дот ком).\n\n\n4. Would I benefit from this course if I’m already employed as a software tester?\n\n\nMany employers have bought this course and its predecessor to refresh knowledge of their test engineers or to convert non-QA employees into QA pros.\n\n\nSo, yes, you will.\n\n\n5. Why do you use QA Tester in the name of the course? Aren't QA and Testing different things?\n\n\nThe purpose of Quality Assurance is to prevent bugs. The purpose of testing is to find and address bugs that were not prevented. So, while QA and Testing are different things, they both deal with and improve software quality. In the software industry, titles QA, Tester, and QA Tester are used interchangeably.\n\n\n6. Do you guarantee that I’ll find a QA job after your course?\n\n\nWe cannot guarantee that because it's irresponsible to do so! There are too many variables: job market, student’s attitude, student’s intellect, student’s persistence in learning, student’s ability to take rejection, etc. etc.\n\n\nBut what we CAN guarantee is that you’ll get TOP QA Education and this course will provide you with all the knowledge needed to start and successfully proceed with your QA/Testing career.\n\n\n7. Some people say that manual QA is no longer needed.\n\n\nNope! QA automation is a great thing, but it merely does what you program it to do. QA automation has no intelligence of its own. Hence in many cases, e.g., when software has a lot of moving parts, usage of QA automation makes no sense, and the only way to test software is to involve manual testers.\n\n\nWe recommend learning manual QA first, then getting a job, then moving to QA automation.\n\n\nManual QA engineers will always be needed before AI is self-aware, but in that case, we are in big trouble in anyway :)\n\n\n8. Do you cover QA automation?\n\n\nQA automation means a broad spectrum of tools, techniques, and approaches. Here is what we'll do in this course: we'll have three lectures about QA automation where you'll learn how to write QA automation correctly and how to find good cases for its usage -- in other words, you'll learn how to work smart with whatever automation tools you'll choose in the future.\n\n\n9. Are there Junior QA jobs? How much can I make from the start?\n\n\nYou'll find plenty of junior positions if you know how and where to search -- we will teach you that. As of April 9, 2019, Glassdoor reports that for average Entry Level QA Analyst salary is $56,773/yr in the USA. Not so bad for a start!\n\n\n10. When I look at QA positions, they require at least some experience.\n\n\nWe’ll teach you how to translate your non-QA experience into QA experience, and how to get actual QA experience that you can put into your resume.\n\n\n11. How is this course different from hundreds of other QA courses, including free ones?\n\n\n- This course was created by PayPal, Evernote, and Chegg alumni Roman Savin. His works on QA/Testing enabled thousands of people around the world to get started with QA career.\n\n\n- This course is about action – there is NO DRY THEORY here. We are going to give you the methodologies, approaches, solutions, suggestions, recommendations, ideas, brain positioning and document examples and templates that have immediate IMMEDIATE practical application in any company you’ll join.\n\n\n- You'll learn QA/Testing and practice your QA skills with innovative web-based training software SHARELANE. In other words, you'll practice while learning, and learn while practicing!\n\n\n- The course videos were produced by professionals in a professional studio on professional equipment. The voice over belongs to professional American narrator.\n\n\n- In addition to basic QA/Testing training, e.g., test case writing or bug filing, you’ll get familiar with many TECHNICAL things: databases, log files, builds, version control, automation tools, programming practices, website architecture, etc. etc.\n\n\n- In this course, we’ve also covered work of other participants of the software development life cycle (product managers, coders, DB admins, release engineers, etc.), so you can understand how things work in the software companies, why bugs appear and what can we do to prevent them.\n\n\n—\n\n\nWelcome to the course and thanks for choosing us,\n\n\nRoman Savin and QA Mentor team.",
      "target_audience": [
        "Everyone who wants to enter the software industry ASAP"
      ]
    },
    {
      "title": "Performance Testing with LoadRunner",
      "url": "https://www.udemy.com/course/manual-testing-certification/",
      "bio": "Take deep-dive into Performance Testing principles. Learn how LoadRunner works. Become a top Software Testing Engineer.",
      "objectives": [
        "Learn basic concepts of Software Testing Principles",
        "Understand what is Performance Testing",
        "Understand Testing Deliverables, Test Plan, Test Case",
        "Learn Load Testing and how to perform it",
        "Learn Testing Techniques, Regression Testing, Positive & Negative Testing"
      ],
      "course_content": {
        "Performance Testing with LoadRunner": [
          "10 - Performance Testing with LoadRunner"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Performance Testing with LoadRunner course by Uplatz.\n\n\nPerformance Testing is a type of software testing that is mainly used for testing the speed, response time, stability, reliability, scalability, and resource usage of a software application under a particular workload. The primary goal of performance testing is to identify and eliminate the performance bottlenecks in the software application. Performance Testing can be considered as an extension of performance engineering. In summary, Performance testing is a testing measure that evaluates the speed, responsiveness and stability of a computer, network, software program or device under a workload. Organizations will run performance tests to identify performance-related issues.\nIn essence, without some form of performance testing in place, system performance will likely be affected with slow response times and experiences that are inconsistent between users and the operating system, creating an overall poor user experience. Performance testing also helps determine if the developed system meets speed, responsiveness and stability requirements while under workloads to help ensure a more positive user experience.\n\n\nPerformance Testing aims to test the following attributes of a software application:\n\n\nSpeed – How fast the application responds\nScalability – What is the maximum user load threshold that the application can handle\nStability – Is the software application stable under varying loads\n\n\nPerformance testing generally involves varying degree of quantitative tests done in a dedicated environment or it can be performed in the production environment. Performance requirements should be identified and tested. Typical parameters include processing speed, data transfer rates, network bandwidth and throughput, workload efficiency and reliability. As an example, an organization can measure the response time of a program when a user requests an action; the same can be done at scale. If the response times are slow, then this means developers should test to find where the bottleneck is. Features and Functionality supported by a software system are not the only concern. A software application’s performance, like its response time, reliability, resource usage, and scalability, do matter. The goal of Performance Testing is not to find bugs but to eliminate performance bottlenecks.\nPerformance Testing is done to provide stakeholders with information about their application regarding speed, stability, and scalability. More importantly, Performance Testing uncovers what needs to be improved before the product goes to market. Without Performance Testing, the software is likely to suffer from issues such as: running slow while several users use it simultaneously, inconsistencies across different operating systems, and poor usability.\nPerformance testing determines whether a software meets speed, scalability, and stability requirements under expected workloads. Applications sent to market with poor performance metrics due to nonexistent or poor performance testing are likely to gain a bad reputation and fail to meet expected product quality or sales goals.\n\n\nLoadRunner is a software tool used for performance testing of applications. It allows developers and testers to measure how well an application performs under different load conditions, such as heavy traffic or high usage. By simulating user behavior, LoadRunner can help identify potential performance issues and bottlenecks, allowing developers to optimize the application and improve its overall performance.\nLoadRunner supports a wide range of technologies and protocols, including web, mobile, cloud, and enterprise applications. It can perform various types of performance tests, including load testing, stress testing, and endurance testing, to ensure that the application can handle different levels of usage and maintain its performance over time.\nLoadRunner comprises several components, including VUGen for creating virtual user scripts, the Controller for managing and executing tests, and the Analysis tool for analyzing and reporting test results. These components work together to provide a comprehensive performance testing solution that can help ensure the application meets the performance and scalability requirements of its users.\nIn summary, LoadRunner is a sophisticated tool that can help developers and testers ensure that an application performs well under different load conditions and can handle the demands of its users.\n\n\nThis Performance Testing with LoadRunner course by Uplatz provides the basics of performance testing, how it can be performed, and its expected goals and results. Also, LoadRunner testing tool operations are shown in great detail. This course will help you become a matures software test engineer and/or performance engineer/testing specialist.",
      "target_audience": [
        "Software Testing Engineers & Specialists",
        "Quality Assurance (QA) Engineers",
        "Beginners and newbies aspiring for a career in Software Testing",
        "Manual Test Engineers",
        "Software Development Engineer Test - Manual & Automation",
        "Software Developers & Application Developers",
        "Performance Engineers",
        "Performance Testing Specialists",
        "Anyone who wants to get started on Software Testing",
        "Application Reviewers & Project Managers",
        "QA Analysts",
        "Senior Software Testers - Manual & Automation",
        "Integration Testers & Module Leads",
        "Automation Test Engineers",
        "Software Test Engineers",
        "Project Managers & Engineering Managers",
        "DevOps Engineers",
        "Developers & Software Engineers",
        "Program Leads & Managers",
        "Test Engineers - Selenium/Java",
        "Automation Testing, Java, Selenium, Cucumber & Rest API Engineers",
        "Troubleshooting Engineers"
      ]
    },
    {
      "title": "Testes automatizados na prática com Spring Boot",
      "url": "https://www.udemy.com/course/testes-automatizados-na-pratica-com-spring-boot/",
      "bio": "Tudo o que você precisa saber para começar a testar as suas aplicações Spring Boot!",
      "objectives": [
        "Criar testes de unidade, integração e subcutâneos.",
        "Spring Boot Test, Junit 5, Mockito, AssertJ, Hamcrest, JsonPath, Jacoco, Pitest.",
        "Construir bons designs de software prezando pela sua testabilidade.",
        "Criar testes eficientes com execução otimizada, análise de cobertura, testes mutantes e testcontainers"
      ],
      "course_content": {
        "Introdução": [
          "Por que aprender sobre testes?",
          "Apresentação do curso",
          "Introdução aos testes automatizados",
          "Configuração de Ambiente - Linux",
          "Configuração de Ambiente - Windows",
          "Configuração de Ambiente - Mac",
          "Escrevendo o primeiro teste automatizado",
          "Tipos de teste"
        ],
        "Testes de Unidade": [
          "Introdução",
          "Criação da API de planetas",
          "Cenários de Teste",
          "Testes de unidade: cadastro de usuário com sucesso",
          "Dublês de teste",
          "Utilizando Mockito para os testes de unidade",
          "Testando os cenários de erro",
          "Exercício 1: testando a consulta de planeta por id",
          "Exercício 2: testando a consulta de planeta por nome",
          "Exercício 3: testando a listagem de planetas",
          "Exercício 4: testando a remoção de planeta",
          "Considerações finais"
        ],
        "Testes de Integração": [
          "Introdução",
          "Testando o cenário de sucesso no repository",
          "Testando o cenário de dados inválidos no repository",
          "Testando o cenário de planeta existente no repositório",
          "Testando o cenário de sucesso no controller",
          "Testando o cenário de dados inválidos no controller",
          "Testando o cenário de planeta existente no controller",
          "Exercício 1: testando a consulta de planeta por id",
          "Exercício 2 - Testando a consulta de planeta por nome",
          "Exercício 3 - Testando a listagem de planetas",
          "Exercício 4 - Testando a remoção de planeta",
          "Considerações Finais"
        ],
        "Testes Subcutâneos": [
          "Introdução",
          "Configuração do servidor de aplicação",
          "Configuração do banco MySQL: profiles de teste",
          "Testando o cadastro de usuário com sucesso",
          "Configurando rollback para os testes",
          "Testando a consulta de planeta com sucesso",
          "Exercício - Testando a consulta por nome, listagem e remoção de planeta",
          "Utilizando o WebTestClient",
          "Considerações Finais"
        ],
        "Toques finais": [
          "Introdução",
          "Separando as fases de teste",
          "Testes de cobertura com o Jacoco",
          "Testes Mutantes com Pitest",
          "Testes de integração com Testcontainers",
          "Testes Parametrizados",
          "Considerações Finais"
        ],
        "Conclusão": [
          "Parabéns!",
          "Bônus"
        ]
      },
      "requirements": [
        "Experiência com desenvolvimento Spring Boot.",
        "Conhecimentos básicos sobre Serviços Web, Maven e Banco de dados relacional."
      ],
      "description": "Aprenda testes automatizados com Spring Boot na prática!\nNesse curso, você vai aprender na prática a criar testes automatizados para seus projetos Spring Boot através da criação de uma API de planetas da franquia Star Wars!\n\n\nEstá incluído no curso:\n1 - Introdução à testes automatizados\n2 - Tipos de teste e a pirâmide\n3 - Testes de Unidade, criando dublês de teste com o Mockito\n4 - Testes de integração com o Spring Boot\n5 - Testes subcutâneos com o Spring Boot\n6 - Separação dos testes em fases\n7 - Testes/análise de cobertura com o Jacoco\n8 - Testes mutantes com o Pitest\n9 - Exercícios passo-a-passo para se aprofundar\n10 - E mais!\n\n\nAlgumas tecnologias que serão vistas são: Spring Boot Test, Junit 5, Mockito, AssertJ, Hamcrest, JsonPath, Jacoco, e Pitest.\nCom testes automatizados nós obtemos as seguintes vantagens:\nCódigo mais estável, podemos mudar sem medo de quebrá-lo\nÉ fácil de verificar se software funciona, basta rodar os testes na sua máquina\nTemos confiança em mudar o software, pois podemos rodar os testes para checar se um bug acidental foi introduzido\nE por causa de tudo isso, testes automatizados são aplamente usados pelas grandes empresas\nE então, o que você está esperando? Se inscreva já no curso que fará você ser amado pelos seus colegas de trabalho por produzir um código com menos bug, mais legível, e portanto mais fácil de mudar ;)",
      "target_audience": [
        "Desenvolvedores que desejam aprender a testar efetivamente o seu software.",
        "Desenvolvedores que desejam melhorar seu design de código através de testes.",
        "Desenvolvedores que gostam de cursos práticos com abordagem passo-a-passo."
      ]
    },
    {
      "title": "AToZ: Software Testing and Automation In Yoruba Language",
      "url": "https://www.udemy.com/course/ko-sta-ni-ede-yoruba/",
      "bio": "Ẹ kọ Software Testing Ati Automation, Test Analyst, QA Tester, Software Test Engineer ati bẹ bẹ lọ ni ede Yoruba",
      "objectives": [
        "Ninu ẹkọ yi, a o kọ lati Setup Working Environment fun Software Testing ati Automation",
        "A o kọ In and Out Functional Testing fun Web Application, Mobile Apps Ati Desktop Applications",
        "A o kọ lati lo SQL Server Management Studio (SSMS) lati Query SQL Server Database",
        "A o kọ lati lo Selenium WebDriver fun Automating Web Applications",
        "A o kọ lati lo Java Eclipse Integration Development Environment (IDE) pẹlu Selenium WebDriver",
        "A o kọ lati lo Exploratory Testing",
        "A o kọ lati lo SQL Server Integration Services (SSIS) lati Upload Data sinu SQL Server Database",
        "A o kọ nipa Basic Microsoft Excel (Spreadsheet) ati Microsoft Word (Document) Object fun Creating Simple Dashboard",
        "A o kọ bi a o ṣe Migrate Microsoft Access Database lọ si MSSQL Server Database",
        "A o kọ Data Migration Testing",
        "A o kọ lati le Report Bugs Tabi Defects",
        "A o kọ End To End Testing",
        "A o kọ Regression Testing",
        "A o kọ lati lo MSSQL Server Database fun Extract Transform Load (ETL Testing) ati Database Testing",
        "A o kọ lati le Create Test Script Template pẹlu Microsoft Excel fun Desktop, Mobile ati Web Applications",
        "A o kọ lati Gain Working Experience As a Primary Tester at bẹ bẹ lọ"
      ],
      "course_content": {
        "Section 1: E je ki a bere": [
          "E̩ jẹ ki a bẹrẹ - Introduction",
          "Nipa Software Testing - A Brief Overview of Software Testing",
          "Nipa Olukọ ati Ẹkọ - Course Overview"
        ],
        "Section 2: O ṣe Setup Working Environment fun Software Testing ati Automation": [
          "Bi a o ṣe Download ati Install Eclipse IDE - Installation of Eclipse IDE",
          "Bi a o ṣe Download Selenium WebDriver ati Integrate sinu Eclipse IDE",
          "Bi a o ṣe Install Microsoft SQL Server Database Engine pẹlu Management Studio",
          "Bi a o ṣe Install Microsoft SQL Server Data Tools - SSDT Business Intelligence",
          "Bi a o ṣe Install Browser Addons fun Firefox, Chrome at Internet Explorer",
          "Bi a o ṣe Install WinAutomation",
          "Bi a o ṣe Install Notepad ++",
          "Bi a o ṣe Install MS Access 2013 Access Runtime",
          "Bi a o ṣe Install Microsoft SQL Server Migration Access 7.3",
          "Bi a o ṣe Install NoxPlayer tabi Bluestacks fun Mobile Testing (*.apk)",
          "Skills fun Software Tester tabi QA Tester"
        ],
        "Section 3: A o kọ Basic Microsoft Excel fun Software Tabi QA tester": [
          "Kinni idi fun Excel?",
          "A o kọ nipa COUNT",
          "A o kọ nipa COUNTA",
          "A o kọ nipa COUNTBLANK",
          "A o kọ nipa COUNTIF",
          "A o kọ nipa IF",
          "A o kọ nipa IF OR",
          "A o kọ nipa IF AND",
          "A o kọ nipa NESTED IF",
          "A o kọ nipa MAX",
          "A o kọ nipa VLOOKUP",
          "A o kọ nipa CONDITIONAL FORMATING",
          "A o kọ nipa Simple CHART"
        ],
        "Section 4: A o kọ Basic SQL ati Extract Transform Load fun Software Tester": [
          "Bi a o ṣe Connecting Microsoft SQL Server Database pẹlu Management Studio",
          "Bi a o ṣe Migrate MS Access Database lo si MSSQL Server Database Engine",
          "Nipa SSIS Execution Result Errors (ETL Testing)",
          "A o kọ Database Testing nipa li lo Extract Transform Load (ETL) pt 1",
          "A o kọ Database Testing nipa li lo Extract Transform Load (ETL) pt 2",
          "A o kọ Database Testing nipa li lo Extract Transform Load (ETL) pt 3",
          "A o kọ Database Testing nipa li lo Extract Transform Load (ETL) pt 4",
          "A o kọ Database Testing nipa li lo Extract Transform Load (ETL) pt 5",
          "A o kọ nipa Data Testing Pẹ́lu MSSQL Server database"
        ],
        "Section 5: A o kọ Automation Trick ti Software Tester Le Lo": [
          "A o kọ nipa Locating Web Elements Fun Selenium WebDriver",
          "A o kọ nipa Selenium WebDriver Web Element User Interactions",
          "A o kọ nipa Selenium WebDriver Test Design Techniques",
          "A o kọ nipa Selenium WebDriver Code Templates",
          "Bi a o ṣe lo (How To Use) Selenium WebDriver Code Templates",
          "A o kọ nipa What is iMacros",
          "A o kọ nipa lilo iMacros lati fi Record Web Browser",
          "A o kọ nipa lilo WinAutomation Software"
        ],
        "Section 6: A o kọ nipa Desktop Applications Testing": [
          "Nipa Desktop Application Projects",
          "***HOMEWORK - nipa AccessDB***",
          "***HOMEWORK - nipa Afritelly Encoder v2016***",
          "***HOMEWORK - nipa Afritelly Encoder v2017***",
          "***HOMEWORK - nipa AllDB***",
          "***HOMEWORK - nipa Colouring Book***",
          "***HOMEWORK - nipa AfritellyDesigner***",
          "***HOMEWORK - nipa DirectoryCleaner***",
          "***HOMEWORK - nipa Afritelly Route Planner***",
          "***HOMEWORK - nipa ProcessInfo***"
        ],
        "Section 7: A o kọ nipa Mobile Apps Testing": [
          "Nipa Mobile Application Projects",
          "***HOMEWORK - nipa iBarcode Scanner***",
          "***HOMEWORK - nipa iComment***",
          "***HOMEWORK - nipa iDeviceInfo***",
          "***HOMEWORK - nipa iPictureUp***",
          "***HOMEWORK - nipa iPlan***",
          "***HOMEWORK - nipa iQuiz***",
          "***HOMEWORK - nipa iSimple Barcode Scanner***"
        ],
        "Section 8: A o kọ nipa Web Applications Testing": [
          "Nipa Web Application Projects",
          "***HOMEWORK - nipa Simple Webshop***",
          "***HOMEWORK - nipa Advanced Webshop***"
        ],
        "Section 9: A o kọ lati le Create Test Script Template": [
          "A o kọ lati le Create Test Script Template pẹlu Microsoft Excel",
          "A o kọ lati le Embed MS Word Object inside Master Template"
        ],
        "Section 10: A o kọ lati le Create Test Scenario (Test Condition)": [
          "***IWE NIPA TEST CASES CHECKLISTs***",
          "Nipa Guide fun Creating Test Scenario"
        ]
      },
      "requirements": [
        "Computer - Windows OS",
        "Passion"
      ],
      "description": "Ẹ kabọ si course ton jẹ Kọ Software Testing Ati Automation Pẹlu (Real-Life Projects).\n\nLakọkọ ẹ jẹ ki a ni lo kan wipe course yi ma jẹ hands-on training tutorial (itumo nin pe 90% practical ati 10% theories). Kiko ni mi mo.\nNinu Course yi ẹ ma learn step by step Manual and Automation Software Testing (Functional) ti a ma lo WinAutomation, Selenium WebDriver 3 ati iMacros browser addons fun automating the Functional part of Web Applications pẹlu over 20+ real life projects.\nSoftware Testing Manual ati Automation jẹ most important skills lati le test front-end ati backend Web Application, Desktop Applications ati Mobile Apps. Paapa ju li lo iMacros ati Selenium WebDriver 3 fun GUI automation, Software Testing Automation je popular larin large community.\n\nCourse yi structured si ọ nọ pupọọ:\nAwọn ẹkọ yi pisi video screencast ati guide, Homework wa ni be ti a ma se, Ninu ẹkọ yi, a o kọ lati Setup Working Environment fun Software Testing ati Automation, A o kọ In and Out Functional Testing fun Web Application, Mobile Apps Ati Desktop Applications, A o kọ lati lo SQL Server Management Studio (SSMS) lati Query SQL Server Database, A o kọ lati lo Selenium WebDriver fun Automating Web Applications, A o kọ lati lo Java Eclipse Integration Development Environment (IDE) pẹlu Selenium WebDriver, A o kọ lati lo Extract Transform Load (ETL Testing), MS Excel, Notepad++, Test Script, ati Java Code Templates, A o kọ lati lo SQL Server Integration Services (SSIS) lati Upload Data sinu SQL Server Database, A o kọ nipa Basic Microsoft Excel (Spreadsheet) ati Microsoft Word (Document) Object fun Creating Simple Dashboard, A o kọ bi a o ṣe Migrate Microsoft Access Database lọ si MSSQL Server Database, A o kọ Data Migration Testing, A o kọ lati le Report Bugs tabi Defects ati bẹ bẹ lọ.\n\nThis course is backed by udemy's 30-day money back guarantee. If you are not satisfied for any reason, you will get the money back. In addition to that you will keep all the code files of the course as a thank you for trying out the course !!!",
      "target_audience": [
        "Ẹkọ yi wa fu ẹni ti o ba fẹ di :-",
        "Test Analyst",
        "Software Quality Assurance Tester",
        "Mobile Tester",
        "Web Application Tester",
        "Software Test Automation Engineer",
        "Ati Ẹni ti o ba fẹ revise lo ri Testing Skills"
      ]
    },
    {
      "title": "Qa Testing: Guia Basica para QA y Robot Framework",
      "url": "https://www.udemy.com/course/qa-testing-guia-basica-para-qa-y-robot-framework/",
      "bio": "Aprende desde cero todo lo que necesitas saber sobre pruebas de software y además a como automatizar tus pruebas",
      "objectives": [
        "Documentar Planes de Pruebas",
        "Crear Casos de Pruebas y ejecutarlos manualmente",
        "Llevar a cabo pruebas manuales funcionales y de regresión",
        "Trabajar con Scrum y Jira",
        "Trabajar con Control de Versiones en GIT y repositorios locales y remotos",
        "Trabajar con Sublime text y configurarlo para trabajar con Robot",
        "Ser capaces de crear planes funcionales y pruebas automatizadas con Robot Framework",
        "Ejecutar pruebas manuales y automáticas de API"
      ],
      "course_content": {
        "Introducción": [
          "Introduccion General al curso"
        ],
        "Fundamentos del Aseguramiento de Calidad": [
          "Introducción al Quality Assurance o Aseguramiento de la Calidad",
          "Niveles y Tipos de Prueba",
          "Comenzando a identificar el nivel requerido",
          "Planes de Pruebas",
          "Modelo de Plan de Pruebas",
          "Aseguramiento de Calidad y sus conceptos",
          "Casos de Prueba",
          "Redactando un caso de prueba",
          "Casos de Pruebas y su aplicación",
          "Comienza a pensar en casos de prueba",
          "Pruebas Manuales Vs. Automatizacion",
          "Functional Testing y Regression Testing",
          "Metodologias agiles: SCRUM",
          "CLASE EXTRA: Guía en Español para trabajar en Scrum",
          "Usando Jira",
          "Herramientas para Optimizar tus pruebas Primera Parte",
          "Clase Extra: Cinco herramientas recomendadas para organizar tus pruebas",
          "Herramientas para Optimizar tus pruebas Segunda Parte",
          "Clase Extra: Probando una funcionalidad en Scrum",
          "Clase Extra: Ciclo de Vida de un Bug en Scrum",
          "Clase Extra: Ciclo de Vida de un Bug para cualquier metodologia",
          "Automatizacion, Jira y Herramientas",
          "Reportando un error en el sistema",
          "Plantilla de reporte de errores",
          "Reportar errores en página http://zero.webappsecurity.com/index.html",
          "Fundamentos del Aseguramiento de Calidad"
        ],
        "Robot Framework: Comenzando a Usarlo": [
          "¿Qué es un Framework para automatizar pruebas?",
          "Origen e Historia de Robot Framework",
          "Capacidades y Funcionalidades de Robot Framework",
          "Robot Framework y Selenium",
          "MAC: Instalando Robot Framework en tu ordenador",
          "WINDOWS: Instalando Python 3",
          "WINDOWS: Instalando RobotFramework en tu Computador (Python 2)",
          "MAC: Configurando Chromedriver para el navegador",
          "WINDOWS: Configurando Chromedriver para el navegador",
          "Clase Extra: Links para descargar los diferentes drivers",
          "Selenium2Library y SeleniumLibrary",
          "Instalando Selenium2Library (o SeleniumLibrary)",
          "Instalando Sublime Text (Package Control ACTUALIZADO en la siguiente clase)",
          "ACTUALIZACION: Instalando el Package Control",
          "Inspeccionando elementos en una interfaz",
          "EXTRA CLASE: SelectorsHub",
          "Convirtiendo mi primera Prueba manual en una Prueba Automatica",
          "Clase Extra: Modificando el código de la primera automatización",
          "Creando un Test Suite",
          "Limitaciones de Selenium Library y Patrón MVC"
        ],
        "Mas Pruebas: https://winstoncastillo.com/robot-selenium/ Recursos y más": [
          "Introducción a sección 3",
          "ROBOT: Creando Variables en el caso de Prueba",
          "ROBOT: Configurando tus propios keywords",
          "ROBOT: Corriendo las pruebas con archivos de recursos",
          "SeleniumLibrary (Windows): Creando Condicionales",
          "SeleniumLibrary: Trabajando con Loops y Arrays",
          "SeleniumLibrary: Trabajando con Loops y Arrays - Solucionando algunos problemas",
          "Control de Versiones: Lo esencial de GIT",
          "Corriendo Pruebas y Trucos 01: Caso winstoncastillo.com",
          "Corriendo Pruebas y Trucos 01: Articulo de Recursos",
          "Corriendo Pruebas y Trucos 02: Set Focus, Tags y Suprimiendo ID",
          "Corriendo Pruebas y Trucos 02: Articulo de Recursos",
          "Revisando errores cuando las pruebas fallan",
          "Un poco mas de GIT: Agregando modificaciones a mi repositorio",
          "Clonar y descargar el Repo de Arrays",
          "Sitio Web Móvil y Aplicaciones (Híbridas y Nativas): SeleniumLibrary y Appium",
          "DEBES VER: Postman y la Libreria HttpRequest",
          "API Testing y Postman",
          "Extra Clase: Automatizando Las pruebas de API con la libreria HTTPRequest",
          "Automatizando un caso de prueba",
          "CODIGO EN VIVO: Algunos keywords importantes de recordar - PARTE 1",
          "CODIGO EN VIVO: Algunos keywords importantes de recordar - PARTE 2",
          "Felicitaciones y consejos finales",
          "Clase Extra: ¿Donde puedo comenzar a trabajar?"
        ]
      },
      "requirements": [
        "No necesitas ningún conocimiento inicial, sin embargo si sabes algo de Selenium y una base de programación puedes aprovechar aún más el curso.",
        "Igualmente deben conocer algunas bases de HTML y CSS para poder entender algunos terminos del curso"
      ],
      "description": "En este curso estaremos abarcando todo lo referente a la gestión de calidad. Navegaremos por conceptos asociados al aseguramiento y conversaremos sobre cómo realizar planes de prueba y coberturas de pruebas en sistemas. También aprenderemos de conceptos relacionados con: Planificación, Ejecución y reporte de resultados en el proceso de pruebas de calidad del software.\nRepasaremos conceptos como planes de pruebas, casos de prueba, las pruebas manuales y la automatización y haremos algunos ejercicios prácticos para repasar los conceptos.\nEn las secciones sobre Robot Framework, repasaremos algunos conceptos asociados al entorno de trabajo y su diferencia de usar las librerías de Selenium en Java y los cambios que obtenemos al usarlo a través de Python.\nEl objetivo de este curso es darte un repaso por los conceptos básicos asociados a las pruebas de software y del trabajo de un tester dentro de un equipo, por ello también hablaremos de Scrum, del ciclo de vida de un error y algunas consideraciones importantes que debes tener en cuenta dentro de tu trabajo en el equipo.\nTambién haremos una revisión básica sobre lo que es una API y la librería de Robot Framework que te permite automatizar dichas pruebas.\nCómo el nombre del curso lo indica, esta es una guía básica para que puedas empezar tu carrera como tester en la industria del software.",
      "target_audience": [
        "Testeadores de Calidad, QA tester"
      ]
    },
    {
      "title": "Functional Software Testing Interview Bootcamp: Land the Job",
      "url": "https://www.udemy.com/course/functional-software-testing-interview-bootcamp-land-the-job/",
      "bio": "Master your QA job interviews with confidence. Realistic, structured answers for beginners, juniors, and career changers",
      "objectives": [
        "Effectively answer both technical and behavioral interview questions.",
        "Structure your answers even with little or no professional experience.",
        "Understand and explain key concepts in functional testing.",
        "Master the tools, techniques, and best practices used in real QA projects.",
        "Impress interviewers with real-world examples and expert advice."
      ],
      "course_content": {
        "Mastering Functional Testing Interviews: From Beginner to Hired": [
          "Course Introduction"
        ],
        "Section 1: Introduction to Functional Software Testing": [
          "Question 1: \"What is Functional Software Testing?\"",
          "Question 2 “Why is functional testing important”",
          "Question 3 “What’s the difference between functional and non-functional testing”",
          "Question 4: “What are the types of functional testing?”",
          "Question 5 “What are the key stages of a functional testing cycle”",
          "Question 6: “What is a test case?”",
          "Question 7 “What is a test scenario”",
          "Question 8 “What is the difference between a test case and a test scenario”",
          "Quiz – Section 1: Introduction to Functional Testing"
        ],
        "Section 2: Interview Preparation – Fundamental Questions": [
          "Question 9: “Can you tell me about your experience in functional testing?”",
          "Question 10: “What is your approach to writing an effective test case?”",
          "Question 11: “What is your strategy when testing a new feature?”",
          "Question 12: “How do you manage documentation in an Agile context?”",
          "Question 13: “What are the key elements of a bug report?”",
          "Question 14: “What is your method for performing regression testing?”",
          "Question 15: “How do you prioritize your test cases?”",
          "Question 16: “What do you do if you find a bug in production?”",
          "Question 17: “How do you communicate with developers?”",
          "Question 18: “How do you ensure good test coverage?”",
          "Question 19: “What tools have you used for bug tracking?”",
          "Question 20 “Give me an example of a situation where your tests prevented a crit"
        ],
        "Section 3: Functional Testing Techniques": [
          "Question 21: “What are equivalence partitioning and boundary value techniques?”",
          "Question 22: “Can you explain the decision table technique?”",
          "Question 23: “What is state transition testing?”",
          "Question 24: “When do you use exploratory testing?”",
          "Question 25: “What is the difference requirement-based VS use case-base",
          "Question 26: “How do you validate form fields?”",
          "Question 27: “Give an example of negative testing.”",
          "Question 28: “What is the difference between ad hoc testing and structured testi",
          "Question 29: “What is your method for creating test data?”",
          "Question 30: “How do you handle sensitive data sets (personal data)?”",
          "Basics of Software Testing"
        ],
        "Section 4: Bug Management and Communication": [
          "Question 31: “How do you write a good bug report?”",
          "Question 32 “How do you handle conflict situations with developers”",
          "Question 33 “What do you do if a developer can’t reproduce a bug”",
          "Question 34: “How do you track a bug from discovery to resolution?”",
          "Question 35: “How do you communicate quality risks to project managers?”",
          "Question 36: “What information do you include in a test report?”",
          "Question 37: “Have you ever tested without specifications? How did you handle it",
          "Question 38: “What do you do if a feature changes at the last minute?”",
          "Question 39: “How do you adapt your testing when time is short?”",
          "Question 40 “Give an example where you had to negotiate test coverage with thePO",
          "Bug Reporting & Defect Life Cycle"
        ],
        "Section 5: Documentation and Tracking": [
          "Question 41: “What is a test plan? What does it contain?”",
          "Question 42: “What’s the difference between a test plan, test strategy...",
          "Question 43: “How do you ensure traceability between requirements and test cases",
          "Question 44 “What are the test metrics you track”",
          "Question 45: “How do you assess the quality of your tests?”",
          "Question 46: “What is a test summary report? What does it contain?”",
          "Question 47: “How do you manage documentation in an Agile environment?”",
          "Question 48 “What is the difference between an execution report and a summary re",
          "Question 49: “Have you ever been responsible for writing the test strategy?”",
          "Question 50: “What is your process for reviewing test cases?”"
        ],
        "Section 6: Tools and Techniques": [
          "Question 51: “What manual testing tools do you know?”",
          "Question 52: “How do you use JIRA in your daily work?”",
          "Question 53: “What is the difference between manual testing tools and automation",
          "Question 54: “How do you organize your test cases in a test management tool like",
          "Question 55: “What are exploratory tests and when do you use them?”",
          "Question 56: “How do you decide between using checklists or detailed test cases?",
          "Question 57: “What techniques do you use to ensure test coverage?”",
          "Question 58: “Can you explain how a traceability matrix works?”",
          "Tools"
        ],
        "Section 7: Functional Testing in Agile and Development Cycle": [
          "Question 59: “How does functional testing fit into Agile methodologies?”",
          "Question 60: “What is the role of the functional tester in a Scrum team?”",
          "Question 61: “What do you test during a sprint?”",
          "Question 62: “How do you manage regression testing in Agile?”",
          "Question 63: “What do you do during the User Acceptance Testing (UAT) phase?”",
          "Question 64 “What is UAT and what is your role in it”",
          "Question 65: “What is the difference between UAT and functional testing?”",
          "Question 66: “How do you collaborate with Product Owners?”",
          "Question 67: “How do you handle frequent changes during sprints?”",
          "Question 68: “What are the challenges of testing in Agile projects?”",
          "Agile & Collaboration"
        ],
        "Section 8: Advanced Questions – Interview Simulation": [
          "Question 69: “If you had to automate a test, which one would you choose and why?",
          "Question 70: “Give an example of a difficult-to-detect bug you found.” Narration",
          "Question 71: “Have you ever missed a critical bug? What did you learn?”",
          "Question 72: “How do you handle high delivery pressure with limited testing?”",
          "Question 73: “What would you do if you don’t have enough time to test everything",
          "Question 74: “How do you test an API without a user interface?”",
          "Question 75: “Give an example of a process improvement you have contributed to.”",
          "Question 76: “If a client reports a bug you missed, how do you handle it?”",
          "Question 77: “How do you handle unstable test environments?”",
          "Question 78: “How do you grow as a tester? What do you continuously learn?”"
        ],
        "Section 9: Final Tips and Mistakes to Avoid": [
          "Question 79: “What are common pitfalls in functional testing interviews?”",
          "Question 80: “What should you do if you don’t know an answer in an interview?”",
          "Question 81: “What are typical beginner mistakes in functional testing?”",
          "Question 82: “How can you highlight your profile without professional experience",
          "Question 83: “Do you need to learn automation to get a tester job?”",
          "Question 84: “How do you adapt your answers depending on the company type?”",
          "Question 85: “How do you end an interview in a strong way?”",
          "Question 86: “What should you prepare the day before an interview?”",
          "Question 87: “How do you stay calm in front of a demanding technical interviewer",
          "Question 88: “What is the ideal mindset of a good functional tester?”",
          "Question 89: “What questions should you ask at the end of an interview to stand"
        ]
      },
      "requirements": [
        "No prior technical background required. Basic knowledge of software development is helpful but not mandatory."
      ],
      "description": "Are you preparing for a functional tester interview but unsure where to start?\nWhether you're just beginning or looking to sharpen your skills, this course is your step-by-step roadmap to mastering functional testing interviews — from the fundamentals to the most advanced questions.\nWhat Makes This Course Different\nOver 80 real-world interview questions with expert-level answers\nClear, structured explanations aligned with actual job expectations\nBased on real interview scenarios from leading tech companies\nDesigned as a personal coaching program, not just theory\nWhat You Will Learn\nIntroduction to functional testing: QA roles, definitions, and daily activities\nCore interview topics: writing test cases, documenting bugs, managing test scenarios\nFunctional testing techniques: boundary value, exploratory, negative testing, and more\nBug management and communication: how to report bugs clearly and work with developers\nDocumentation and traceability: test plans, KPIs, test strategy, and traceability matrices\nTools and environments: practical use of JIRA, TestLink, automation basics, and checklists\nAgile integration: how testing fits into Scrum, UAT, sprint planning, and PO collaboration\nMock interview questions: handling production bugs, pressure, mindset, and team dynamics\nFinal tips: how to stand out, avoid common mistakes, and customize your answers\nWho This Course Is For\nAspiring QA or functional testers preparing for job interviews\nCareer switchers entering the software testing field\nJunior testers seeking more structure and confidence\nAnyone who wants realistic, practical interview preparation\nCourse Goal\nBy the end of this course, you will be able to deliver strong, confident, and well-structured answers to every common functional testing interview question — even if you have no prior professional experience.",
      "target_audience": [
        "Beginners or junior QA testers in functional testing.",
        "Professionals switching careers to software testing.",
        "Anyone preparing for a QA job interview.",
        "Students, interns, freelancers aiming to sound more professional.",
        "Testers looking to revise or sharpen their interview answers."
      ]
    },
    {
      "title": "Robot Framework Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/robot-framework-interview-questions/",
      "bio": "Robot Framework Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Robot Framework Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the Robot Framework Interview Questions Practice Test course! This meticulously designed course is your ultimate resource for mastering the Robot Framework and acing your next interview. Whether you're a beginner just starting with automated testing or an experienced professional looking to sharpen your skills, this course provides you with a comprehensive set of interview questions and practice tests to ensure you're fully prepared.\nOur practice test course is divided into six comprehensive sections, each focusing on critical aspects of the Robot Framework. Each section is further broken down into subtopics, ensuring a thorough understanding of the material. The course covers a wide range of topics from basic concepts to advanced features, ensuring you are well-prepared for any question that may come your way.\nSection 1: Introduction to Robot Framework\nOverview of Robot Framework: Understand the core concepts and architecture.\nInstallation and Setup: Learn how to install and set up the Robot Framework in various environments.\nTest Suites, Test Cases, and Test Steps: Get familiar with the structure and components of Robot Framework tests.\nSyntax and Test Case Writing: Master the syntax and conventions used in writing test cases.\nKeywords: Built-in, User-defined, and External: Explore different types of keywords and their usage.\nResource and Variable Files: Learn how to organize and manage your test resources and variables.\nSection 2: Working with Test Data\nData-driven Testing: Understand the principles and benefits of data-driven testing.\nUsing Variables and Scalar Variables: Learn how to use and manage variables effectively.\nList and Dictionary Variables: Get proficient in using complex data structures.\nEnvironment Variables: Understand how to utilize environment variables in your tests.\nCreating and Using Test Libraries: Learn how to create and integrate custom test libraries.\nHandling External Data Files (CSV, Excel, XML): Master the techniques for managing external data sources.\nSection 3: Test Execution and Management\nRunning Tests and Test Suites: Learn how to execute tests and manage test suites.\nTags: Definition, Usage, and Filtering: Understand the role of tags and how to use them for filtering tests.\nParallel Execution and Test Distribution: Explore methods for running tests in parallel and distributing them efficiently.\nTest Setup and Teardown: Learn the importance of setup and teardown methods and how to implement them.\nUsing the Command Line Interface: Master the command line interface for running and managing tests.\nReports and Logs Analysis: Understand how to generate and analyze test reports and logs.\nSection 4: Advanced Features and Integrations\nCreating Custom Libraries in Python and Java: Learn how to extend Robot Framework with custom libraries.\nIntegration with Continuous Integration Tools (Jenkins, Travis CI): Understand how to integrate Robot Framework with CI tools.\nBrowser Automation with SeleniumLibrary: Master browser automation using SeleniumLibrary.\nREST API Testing with RequestsLibrary: Learn how to perform API testing with RequestsLibrary.\nMobile Testing with AppiumLibrary: Explore mobile testing capabilities using AppiumLibrary.\nUsing Robot Framework with Docker: Understand how to run Robot Framework tests in Docker containers.\nSection 5: Best Practices and Optimization\nTest Organization and Structure: Learn best practices for organizing and structuring your tests.\nKeyword and Test Case Optimization: Understand techniques for optimizing keywords and test cases.\nVersion Control Best Practices: Get familiar with best practices for managing your test code in version control systems.\nDebugging and Troubleshooting Tests: Learn how to debug and troubleshoot test failures.\nPerformance Optimization Techniques: Explore methods for optimizing the performance of your tests.\nMaintaining Large Test Suites: Understand how to manage and maintain large test suites effectively.\nSection 6: Advanced Topics and Future Directions\nBehavior-Driven Development (BDD) with Robot Framework: Learn how to implement BDD with Robot Framework.\nAdvanced Reporting and Custom Report Generation: Explore advanced reporting techniques and custom report generation.\nExtending Robot Framework with Plugins: Understand how to extend Robot Framework functionality with plugins.\nArtificial Intelligence and Machine Learning in Testing: Learn about the role of AI and ML in automated testing.\nRobot Framework Community and Contributing: Get involved with the Robot Framework community and contribute to its development.\nFuture Directions and Upcoming Features in Robot Framework: Stay updated with the latest trends and features in Robot Framework.\nEnroll Today\nDon't miss out on the opportunity to master Robot Framework and excel in your career. Enroll in the Robot Framework Interview Questions Practice Test course today and take the first step towards becoming an expert in automated testing. Whether you're preparing for an interview or looking to enhance your skills, this course is the perfect resource to help you achieve your goals.",
      "target_audience": [
        "Aspiring Testers",
        "Experienced Testers",
        "Developers",
        "Project Managers and Team Leads",
        "Career Changers"
      ]
    },
    {
      "title": "TestNG made easy for beginners (Detailed course)",
      "url": "https://www.udemy.com/course/testng-made-easy-for-beginners-detailed-course/",
      "bio": "All concepts of TestNG are covered in a detailed and step by step manner",
      "objectives": [
        "All the different topics of TestNG are covered in this course",
        "All the Topics of TestNG are covered in a practical manner with examples",
        "TestNG knowledge required for building TestNG Hybrid Automation Frameworks",
        "TestNG is covered in a detailed, in-depth, easy and practical manner"
      ],
      "course_content": {
        "Introduction": [
          "1. What is TestNG (TestNG - Part 1)",
          "2. Installing TestNG and using in Projects (TestNG - Part 2)",
          "3. Auto-generating TestNG Classes with a Test Method in Eclipse IDE (TestNG - Pa",
          "4. Using TestNG Testing Framework for Selenium Automation (TestNG - Part 4)",
          "5. Using TestNG Testing Framework with Rest Assured Framework for Automating API",
          "6. Using priority attribute (TestNG - Part 6)",
          "7. Using testng xml file for batch execution (TestNG - Part 7)",
          "8. Assertions in TestNG (Test8. Assertions in TestNG (TestNG - Part NG - Part 8)",
          "9. Hard Assertions versus Soft Assertions (TestNG - Part 9)",
          "10. TestNG Annotations (TestNG - Part 10)",
          "11. Parameters in TestNG (TestNG - Part 11)",
          "12. Optional Parameters in TestNG (TestNG - Part 12)",
          "13. Enable Disable Test Cases using enabled attribute in testng xml file (TestNG",
          "14. Enable Disable Test Methods using enabled attribute and @Ignore annotation (",
          "15. Enable Disable Test Methods at Classs level using @Ignore annotation (TestNG",
          "16. Enable Disable Test Methods at Package level using @Ignore annotation (TestN",
          "17. Grouping Tests in TestNG using multiple testng xml files (TestNG - Part 17)",
          "18. Grouping Tests in TestNG using groups attribute (TestNG - Part 18)",
          "19. Meta Groups in TestNG (TestNG - Part 19)",
          "20. Partial Groups in TestNG (TestNG - Part 20)",
          "21. Sub Category Groups in TestNG and using regular expressions (TestNG - Part 2",
          "22. Test Dependency in TestNG using dependsOnMethods attribute (TestNG - Part 22",
          "23. alwaysRun attribute (TestNG - Part 23)",
          "24. ignoreMissingDependencies attribute (TestNG - Part 24)",
          "25. dependsOnGroups attribute (TestNG - Part 25)",
          "26. Groups Depending on Groups using dependencies tag and depends-on attribute (",
          "27. Executing Tests at Package Level (TestNG - Part 27)",
          "28. TestNG Parameterization - Data Driven Testing, DataProvider annotation and d",
          "29. Naming DataProvider method using name attribute (TestNG - Part 29)",
          "30. Parameterizing Test method with Array parameter (TestNG - Part 30)",
          "31. Separating DataProvider method into a separate Class using dataProviderClass",
          "32. Multiple DataProvider methods (TestNG - Part 32)",
          "33. Multiple DataProvider methods in multiple classes (TestNG - Part 33)",
          "34. Why we have to use Object array to return data (TestNG - Part 34)",
          "35. Different return types of DataProvider (TestNG - Part 35)",
          "36. Jagged Arrays and DataProviders (TestNG - Part 36)",
          "37. Partially passing the data from Data Provider method using indices attribute",
          "38. Reading Data from Excel files using POI API (TestNG - Part 38)",
          "39. Reading Data from Excel files into DataProvider method using POI API (TestNG",
          "40. Executing tests in parallel by specifying parallel attribute in DataProvider",
          "41. Controlling parallel tests thread count invoked by DataProvider using data-p",
          "42. timeOut attribute (TestNG - Part 42)",
          "43. expectedExceptions attribute (TestNG - Part 43)",
          "44. Parallel Execution of Tests in TestNG using parallel and thread-count attrib",
          "45. parallel=tests in TestNG Parallel execution (TestNG - Part 45)",
          "46. parallel=tests can only be mentioned at suite tag level and not at test tag",
          "47. parallel=classes in TestNG Parallel Execution (TestNG - Part 47)",
          "48. parallel=methods in TestNG Parallel Execution (TestNG - Part 48)",
          "49. Multiple test tags, but only few test tags enabled for parallel execution (T",
          "50. parallel=none in TestNG Parallel Execution (TestNG - Part 50)",
          "51. parallel=false in TestNG Parallel Execution (TestNG - Part 51)",
          "52. parallel=tests but thread-count=1 (TestNG - Part 52)",
          "53. Can we provide thread-count as negative value for Parallel Execution (TestNG",
          "54. More threads and less number of tests (TestNG - Part 54)",
          "55. parallel=classes or parallel=methods specified at suite tag level (TestNG -",
          "56. Default thread-count when parallel attribute is only mentioned (TestNG - Par",
          "57. invocationCount attribute (TestNG - Part 57)",
          "58. invocationTimeOut attribute (TestNG - Part 58)",
          "59. threadPoolSize attribute (TestNG - Part 59)",
          "60. What are Listeners (TestNG - Part 60)",
          "61. List of different Listeners available in TestNG Library (TestNG - Part 61)",
          "62. Using ITestListner Listener (TestNG - Part 62)",
          "63. Implementing Listeners at Class Level @Listeners annotation (TestNG - Part 6",
          "64. Implementing Listeners at Suite Level in testng xml file (TestNG - Part 64)",
          "65. onStart() and onFinish() ITestListener methods (TestNG - Part 65)",
          "66. Difference between listeners and annotations (TestNG - Part 66)",
          "67. Using TestListnerAdapter class in place of ITestListener interface (TestNG -",
          "68. Taking screenshots for Failed Tests using Listeners (TestNG - Part 68)",
          "69. Avoiding Screenshot Overriding (TestNG - Part 69)",
          "70. Retrieving Test Tag name along with Test Name (TestNG - Part 70)",
          "71. Taking screenshots for Failed Tests using Dependency Injection (TestNG - Par",
          "72. Default TestNG Reports and their real time usage (TestNG - Part 72)",
          "73. Uninstalling TestNG from Eclipse IDE (TestNG - Part 73)",
          "74. TestNG Retry using IRetryAnalyzer and IAnnotationTransformer (TestNG - Part",
          "75. TestNG verbose attribute - testng xml file (TestNG - Part 75)"
        ]
      },
      "requirements": [
        "Selenium Test Automation"
      ],
      "description": "This course covers TestNG in-depth by covering all its concepts and topics, along with practical demonstration.\nTestNG is explained from scratch and in a step by step manner.\nTestNG is the backbone for building Selenium Test Automation Frameworks, hence it is required to learn in depth and detail.\nThis course ends your search for finding a course, which covers in and out about TestNG.\nThe following are the different TestNG topics which are covered in this course:\n\n\nWhat is TestNG\nInstalling TestNG and using in Projects\nAuto-generating TestNG Classes with a Test Method in Eclipse IDE\nUsing TestNG Testing Framework for Selenium Automation\nUsing TestNG Testing Framework with Rest Assured Framework for Automating API Tests\nUsing priority attribute\nUsing testng xml file for batch execution\nAssertions in TestNG\nHard Assertions versus Soft Assertions\nTestNG Annotations\nParameters in TestNG\nOptional Parameters in TestNG\nEnable Disable Test Cases using enabled attribute in testng xml file\nEnable Disable Test Methods using enabled attribute and @Ignore annotation\nEnable Disable Test Methods at Classs level using @Ignore annotation\nEnable Disable Test Methods at Package level using @Ignore annotation\nGrouping Tests in TestNG using multiple testng xml files\nGrouping Tests in TestNG using groups attribute\nMeta Groups in TestNG\nPartial Groups in TestNG\nSub Category Groups in TestNG and using regular expressions\nTest Dependency in TestNG using dependsOnMethods attribute\nalwaysRun attribute\nignoreMissingDependencies attribute\ndependsOnGroups attribute\nGroups Depending on Groups using dependencies tag and depends-on attribute\nExecuting Tests at Package Level\nTestNG Parameterization - Data Driven Testing, DataProvider annotation and dataProvider attribute\nNaming DataProvider method using name attribute\nParameterizing Test method with Array parameter\nSeparating DataProvider method into a separate Class using dataProviderClass attribute\nMultiple DataProvider methods\nMultiple DataProvider methods in multiple classes\nWhy we have to use Object array to return data\nDifferent return types of DataProvider\nJagged Arrays and DataProviders\nPartially passing the data from Data Provider method using indices attribute\nReading Data from Excel files using POI API\nReading Data from Excel files into DataProvider method using POI API\nExecuting tests in parallel by specifying parallel attribute in DataProvider method\nControlling parallel tests thread count invoked by DataProvider using data-provider-thread-count\ntimeOut attribute\nexpectedExceptions attribute\nParallel Execution of Tests in TestNG using parallel and thread-count attributes\nparallel=tests in TestNG Parallel execution\nparallel=tests can only be mentioned at suite tag level and not at test tag level\nparallel=classes in TestNG Parallel Execution\nparallel=methods in TestNG Parallel Execution\nMultiple test tags, but only few test tags enabled for parallel execution\nparallel=none in TestNG Parallel Execution\nparallel=false in TestNG Parallel Execution\nparallel=tests but thread-count=1\nCan we provide thread-count as negative value for Parallel Execution\nMore threads and less number of tests\nparallel=classes or parallel=methods specified at suite tag level\nDefault thread-count when parallel attribute is only mentioned\ninvocationCount attribute\ninvocationTimeOut attribut\nthreadPoolSize attribute\nWhat are Listeners\nList of different Listeners available in TestNG Library\nUsing ITestListner Listener\nImplementing Listeners at Class Level @Listeners annotation\nImplementing Listeners at Suite Level in testng xml fil\nonStart() and onFinish() ITestListener methods\nDifference between listeners and annotations\nUsing TestListnerAdapter class in place of ITestListener interface\nTaking screenshots for Failed Tests using Listeners\nAvoiding Screenshot Overriding\nRetrieving Test Tag name along with Test Name\nTaking screenshots for Failed Tests using Dependency Injection\nDefault TestNG Reports and their real time usage\nUninstalling TestNG from Eclipse ID\nTestNG verbose attribute - testng xml file TestNG Retry using IRetryAnalyzer and IAnnotationTransformer\nTestNG verbose attribute - testng xml file",
      "target_audience": [
        "This course is for those who want to gain complete knowledge on TestNG for building Automation Frameworks"
      ]
    },
    {
      "title": "Step by Step Automation using Cypress-JavaScript",
      "url": "https://www.udemy.com/course/automation-with-cypress/",
      "bio": "Step by Step Cypress, Cypress Test Runner, BDD Framework",
      "objectives": [
        "Will be ready to Write Web Automation Scripts single handedly with best practices",
        "Expert level understanding of Cypress with real time implementation",
        "Detailed knowledge of Cypress Concepts, Chai and Mocha library",
        "Will be able to Design and Use Design pattern like POM and Reporting Implementation"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Windows Operating System",
        "Good to have understanding of Manual Testing, Processes, Functional & Regression Testing",
        "Should be ready to invest atleast 30mins a day for practice and concept implementation"
      ],
      "description": "Cypress - One of the most popular Java Script Framework for Web Automation, fast, easy and reliable testing for anything that runs in a browser.\n\nThis Course includes -\nWeb Automation with Cypress\nCypress Test Runner features\nCypress Integration Testing\nJavaScript Frameworks from Scratch using Mocha & Cucumber\nThese top class videos are completely designed from scratch using many real time examples with in detail explanation on each and every concept of Cypress along with Framework design best Practices\nBelow is the high level Content we Cover in the course:\nIntroduction to Cypress\nStep by Step Cypress Installation & Project Setup\nCypress Test Runner features and practical use\nCypress Basic Commands for Automation\nUI Automation (Checkboxes, Radio buttons, Edit boxes, Dropdowns with Cypress)\nHandling Child windows and Frames with Cypress\nCypress Assertions in detail\nCypress Framework Best Practices\nCypress Fixtures and Custom commands\nPage object Design pattern with Cypress tests\nTest Parameterization and Data driven Testing with Cypress\nConfiguration properties and environmental variables\nCypress Dashboard features with video recording and Screenshots\nCypress Cucumber BDD Integration\nCucumber Data Driven, Tagging, Hooks, HTML reporting features for Cypress Tests\nXHR Testing with Cypress\nJavaScript Basics\nPractical implementation of JavaScript\nWeb Automation basic with best practices\nEnd to End Framework implementation\nBest Practices with interview questions\nReal time application scenario\nIntroduction to Mocha and Chai library",
      "target_audience": [
        "Manual Testers Looking Opportunity in Web Automation using Cypress",
        "Freshers looking for opportunity in Automation Testing",
        "Any professional want to start carrier in JavaScriptAutomation"
      ]
    },
    {
      "title": "Тестирование, Автоматизация REST API: Postman + GIT, JENKINS",
      "url": "https://www.udemy.com/course/postman-api-automation/",
      "bio": "РЕАЛЬНЫЕ ПРОЕКТЫ API + Test JavaScript, JSON Schema Validation, Collection, Monitor",
      "objectives": [
        "REST, SOAP",
        "API NASA",
        "API SWAPI",
        "Requests, Responses",
        "Test scripts with JavaScript",
        "Test Collection",
        "Monitor collection",
        "Tiny Validator JSON Schema",
        "GIT",
        "Jenkins"
      ],
      "course_content": {
        "Базовые понятия про API": [
          "Что такое API?",
          "Что такое REST & SOAP и их различия?",
          "Тестирование NASA REST API с помощью Postman",
          "Авторизация: методы и протоколы в веб приложениях",
          "Basic Authentication (base64)"
        ],
        "Строительные блоки": [
          "Работа с запросами и ответами",
          "Тестовые скрипты + Chai Assertion Library",
          "Создание тестов",
          "Tiny Validator JSON Schema, часть 1",
          "Tiny Validator JSON Schema, часть 2",
          "Коллекции"
        ],
        "Расширенные возможности и интеграция": [
          "Mock Server",
          "Monitor",
          "GIT",
          "Newman",
          "Jenkinse"
        ],
        "Практика: проекты для тестирования API": [
          "Обзор ресурсов для практики тестирования API"
        ]
      },
      "requirements": [
        "Желание учиться",
        "Понимание базовых понятий HTTP протокола"
      ],
      "description": "Данный курс поможет изучить Postman для ручных и автоматизированных тестов RESTful API. Postman поможет на этапе проектирования, разработки, отладки и тестирования API. Это отличный инструмент как для тестировщиков так и для разработчиков RESTful приложений.\nВ этом курсе вы узнаете о множестве функциональных возможностей инструмента POSTMAN с практическими примерами.\nА так же освоите:\nпонятие API\nотличия между REST vs SOAP подходами к организации API\nсоздание простых и сложных запросов\nсоздание Assertions с помощью Chai Assertion Library\nпродвинутые проверки с Tiny Validator JSON Schema\nсоздание тестовых коллекций - Collections, чтобы делиться со своей командой\nсоздание расписания запусков тестов с помощью Monitor\nзапуск тестов из командной строки с помощью NEWMAN\nразличные виды Авторизаций (Auth, API Keys или OAuth)\nинтеграция с системой контроля версий GIT\nнепрерывная интеграция с Jenkins\nТакже в данном курсе будут рассмотрены практические примеры по работе с реальными проектами, как и с чего начать тестировать API.\n\n\nДанный курс поможет изучить Postman для ручных и автоматизированных тестов RESTful API. Postman поможет на этапе проектирования, разработки, отладки и тестирования API. Это отличный инструмент как для тестировщиков так и для разработчиков RESTful приложений.\nВ этом курсе вы узнаете о множестве функциональных возможностей инструмента POSTMAN с практическими примерами.\nА так же освоите:\nпонятие API\nотличия между REST vs SOAP подходами к организации API\nсоздание простых и сложных запросов\nсоздание Assertions с помощью Chai Assertion Library\nпродвинутые проверки с Tiny Validator JSON Schema\nсоздание тестовых коллекций - Collections, чтобы делиться со своей командой\nсоздание расписания запусков тестов с помощью Monitor\nзапуск тестов из командной строки с помощью NEWMAN\nразличные виды Авторизаций (Auth, API Keys или OAuth)\nинтеграция с системой контроля версий GIT\nнепрерывная интеграция с Jenkins\nТакже в данном курсе будут рассмотрены практические примеры по работе с реальными проектами, как и с чего начать тестировать API.\n\n\n\n\n\n\nThis course will help you learn Postman for manual and automated RESTful API tests. Postman will help you design, develop, debug, and test your API. This is a great tool for both testers and developers of RESTful applications.\nIn this course, you will learn about the many functionalities of the POSTMAN tool with practical examples.\nAlso learn:\n\n\nAPI concept\n\n\ndifferences between REST vs SOAP approaches to organizing APIs\n\n\ncreating simple and complex queries\n\n\ncreating Assertions with the Chai Assertion Library\n\n\nadvanced validations with Tiny Validator JSON Schema\n\n\ncreating test collections - Collections to share with your team\n\n\nscheduling test runs with Monitor\n\n\nrunning tests from the command line with NEWMAN\n\n\ndifferent types of Authorizations (Auth, API Keys or OAuth)\n\n\nintegration with the GIT version control system\n\n\ncontinuous integration with Jenkins\n\n\nAlso in this course, practical examples will be considered for working with real projects, how and where to start testing the API.\n\n\nThis course will help you learn Postman for manual and automated RESTful API tests. Postman will help you design, develop, debug, and test your API. This is a great tool for both testers and developers of RESTful applications.\n\n\nIn this course, you will learn about the many functionalities of the POSTMAN tool with practical examples.\n\n\nAlso learn:\n\n\nAPI concept\n\n\ndifferences between REST vs SOAP approaches to organizing APIs\n\n\ncreating simple and complex queries\n\n\ncreating Assertions with the Chai Assertion Library\n\n\nadvanced validations with Tiny Validator JSON Schema\n\n\ncreating test collections - Collections to share with your team\n\n\nscheduling test runs with Monitor\n\n\nrunning tests from the command line with NEWMAN\n\n\ndifferent types of Authorizations (Auth, API Keys or OAuth)\n\n\nintegration with the GIT version control system\n\n\ncontinuous integration with Jenkins\n\n\nAlso in this course, practical examples will be considered for working with real projects, how and where to start testing the API.",
      "target_audience": [
        "Все желающие автоматизировать свою работу с помощью Postman и его функциональности.",
        "Желающие получить интересные знания о функциональных возможностях данного инструмента."
      ]
    },
    {
      "title": "Selenium, Appium with Java Automation Testing",
      "url": "https://www.udemy.com/course/selenium-with-java-automation-testing/",
      "bio": "Complete Framework Design with TestNG, Cucumber and Ci/CD by Jenkins",
      "objectives": [
        "Professional Job Oriented Course designed for people who want to make career in Automation Testing using Selenium, Appium with Java",
        "Basics to Advanced level step by step with easy explaination and practical senarios on real time websites",
        "Complete framework Design from scratch for E-Commerce Website using TestNG and Cucumber BDD",
        "Notes, Interview Questions and Personal Support"
      ],
      "course_content": {
        "Core Java": [
          "Introduction Lecture",
          "What is class, constructor and method - wrinting first java program",
          "Variable, Datatype, Controls, Operator and Loop",
          "String class",
          "Local Global variable and Static in Java",
          "Array",
          "Inheritance",
          "Interface",
          "Collection & Exception Handle"
        ],
        "Selenium WebDriver": [
          "Configuring Selenium",
          "Xpath in Selenium",
          "Explicit and Implicit Wait",
          "UI Testing , Dropdown and Date Automation",
          "Actions class - Mouse Over, Keybord Events, Drag Drop, Scroll",
          "Multiple Elements",
          "Move in between Tabs",
          "IFrame Automation",
          "Alert , Prompt and Confirm Dialog box",
          "JavascriptExecutor",
          "Video Testing",
          "File Upload",
          "External Xpath and Dependent Test Cases"
        ],
        "Maven Project, Excel Connectivity and Logs, Report Generation": [
          "Maven Project adding POI dependency",
          "Jdbc - Selenium Excel Integration Example (OLD Version)",
          "Logs and Extent Report Generation (OLD Version)",
          "POI - Selenium Excel Integration Example 1 (New Version)",
          "POI - Selenium Excel Integration Example 2 (New Version)",
          "Extent Report Generation (NEW Version)",
          "Selenium Jira Integration",
          "Sending Mail with Attachment using Javax.mail"
        ],
        "TestNG Framework Design": [
          "TestNG Annotations",
          "TestNG DataProvider and Passing Parameters from testng.xml",
          "TestNG Setting Priority and making dependent Test Cases.",
          "Hybrid Framework",
          "TestNG Assertion - Soft assertion and Hard assertion"
        ],
        "Cucumber BDD Framework": [
          "Cucumber Framework",
          "Cucumber BDD Passing Multiple Data to Test Method",
          "Cucumber Tags - or , and , and not"
        ],
        "Appium": [
          "Appium Configuration",
          "Appium Launch App",
          "Appium UIAutomatorViewer to take Xpath in Mobile App",
          "Appium Horizontal and Vertical Scroll"
        ],
        "Jenkins": [
          "Uploading Project on Git hub and Running by Jenkins"
        ]
      },
      "requirements": [
        "Basic knowlidge of Manual Testing"
      ],
      "description": "This is New Course Posting, May be you will not see much Student Enrollments or reviews but I assure you that I have designed this course for absolute beginers and i request you to watch some free class videos to make up your mind to enroll or not.\nAs technology moves towards automation, starting a career in Selenium, Appium can provide you a bright future in the software industry. Test automation is a key component enabling teams to detect errors more quickly and respond faster to changing requirements.\nSelenium, Appium is an Open source Testing tool for Automating Web and Mobile Applications, It support multiple OS, Browsers and Languages. Java is most prefered one because Java is Platform Independent, Portable language designed for internet. In this Course we have covered Basic Core Java with Selenium, Appium to design Testing Framework.\nBasic to Advance Level Step by Step easily explained Video tutorials for Students who want to make carrier in Web, Mobile Automation Testing using Selenium, Appium with Java.\nComplete Design of Automation Framework from scratch using TestNG and Cucumber BDD and step by step guide to upload project on Github Reposatory and run tests by Jenkins server.\nAll Video tutorials are made using real time Web sites with real time scenarios. All tutorials are attached with Notes and Java files which you can download and execute on your system.\nTrainer is a Experienced Professional having 15yr expertise in Java Frameworks and Designing Automation Frameworks. You can contact Parag Saxena Mobile +91-9810926239  for Live Classes and Doubt clearing if any problems faced.",
      "target_audience": [
        "Professional Course for people who want to make a Career in Automation Testing"
      ]
    },
    {
      "title": "はじめてのソフトウェアテスト技法【全てのエンジニアが知るべき最重要テスト技法を、丁寧な解説と演習問題で身につけよう】",
      "url": "https://www.udemy.com/course/software-test-design/",
      "bio": "テストケース、適当に作ってませんか？元塾講師エンジニアが教える、ソフトウェアテスト技法！テスト書くなら必ず役立つソフトウェアテスト技法だけを厳選！正しくテストケースを設計して、「最小限のケース」で「最大限のバグを発見」できるようになろう！",
      "objectives": [
        "基本的なソフトウェアテストの技法について学びます。",
        "基本的な技法を通して、ソフトウェアテストの基本的な考え方を理解できます。",
        "最小のテストケースで網羅性の高いソフトウェアテストを行えるようになります。",
        "同値クラスと境界値テストについて理解できます。",
        "複雑なロジックをテストするドメイン分析テストとデシジョンテーブルについて理解できます。",
        "網羅性を保ちつつテストケースを削減するペア構成テストについて理解できます。",
        "状態と状態の遷移があるシステムのテスト方法である状態遷移テストについて理解できます。"
      ],
      "course_content": {
        "ソフトウェアテスト技法とはなにか？": [
          "資料のダウンロード",
          "質問をする前に必ず読んでください",
          "ソフトウェアテストとは？",
          "ソフトウェアテスト技法とは？①",
          "ソフトウェアテスト技法とは？②",
          "ソフトウェアテスト技法とは？③",
          "ソフトウェアテスト技法とは？のポイント"
        ],
        "技法を学ぶ前の基礎知識": [
          "網羅性とピンポイント",
          "テスト設計アプローチ",
          "技法を学ぶ前の基礎知識のポイント"
        ],
        "同値クラスと境界値テスト": [
          "同値クラステスト",
          "境界値テスト",
          "欠陥の検出は1つずつ",
          "ポイントと演習問題①",
          "演習問題①解説"
        ],
        "ドメイン分析テストとデシジョンテーブル": [
          "ドメイン分析テストとデシジョンテーブル",
          "ドメイン分析テスト（例題の理解）",
          "ドメイン分析テストの4つのポイント",
          "境界値テストとon/offポイント",
          "ドメインテストマトリクス",
          "ドメイン分析テストのPoint",
          "デシジョンテーブルとは？",
          "デシジョンテーブルの圧縮",
          "デシジョンテーブルのポイント",
          "演習問題③・④",
          "演習問題②解説",
          "演習問題③解説"
        ],
        "ペア構成テスト": [
          "もっと条件が増えた場合",
          "ペア構成テストとは？",
          "直交表とは？",
          "直交表の表記方法①",
          "直交表の表記方法②",
          "直交表の使い方",
          "ペア構成テストのポイント",
          "演習問題④",
          "演習問題④解説"
        ],
        "状態遷移テスト": [
          "状態遷移テストとは？",
          "状態遷移図",
          "これでテストは十分？",
          "状態遷移表",
          "Nスイッチカバレッジ",
          "Nスイッチカバレッジに関する訂正",
          "状態遷移テストのポイント",
          "演習問題⑤",
          "演習問題⑤解説"
        ],
        "総合演習": [
          "総合演習をやってみよう",
          "【重要】総合演習の効果を高める方法",
          "問１",
          "問１解説①",
          "問１解説②",
          "問２",
          "問２解説",
          "問３",
          "問３解説①",
          "問３解説②",
          "問３の補足",
          "問４",
          "問４解説",
          "問５",
          "問５解説",
          "問５解説の誤植について"
        ],
        "カバレッジ": [
          "ブラックボックステストとホワイトボックステスト",
          "データフローテスト",
          "制御フローテスト",
          "カバレッジとは？",
          "レベル１：命令網羅（statement coverage）",
          "レベル２：判定網羅（decision coverage）",
          "レベル３：条件網羅（condition coverage）",
          "レベル４：複合条件網羅（multiple condition coverage）",
          "レベル５：MC/DC（modified condition / decision coverage）①",
          "レベル５：MC/DC（modified condition / decision coverage）②",
          "カバレッジのポイント",
          "カバレッジの特徴①",
          "カバレッジの特徴②",
          "カバレッジの特徴③",
          "カバレッジの活用のポイント①",
          "カバレッジの活用のポイント②",
          "演習問題⑥",
          "演習問題⑥解説",
          "演習問題⑥解説の誤植について"
        ],
        "まとめと注意点": [
          "テストの目的を常に意識しよう",
          "品質の向上すら手段である",
          "実際にやらないと身につかない"
        ],
        "ボーナス": [
          "さらなる上達のための学習コンテンツ"
        ]
      },
      "requirements": [
        "講座「Kotlin と JUnit で学ぶ、はじめてのユニットテスト【丁寧な解説＋演習問題で プログラミング 中級者になろう】」を合わせて受講するとより理解が深まります。"
      ],
      "description": "【2021年5月7日：総合演習とカバレッジのレクチャーを追加しました！】\n\n\n講座の特徴\nこの講座は「ソフトウェアテスト初心者が、意味のある最小限のテストを設計できるようになる」ための講座です。\nソフトウェアテストは開発において必須です。\nユニットテストや統合テストなどソフトウェアの品質を高めるためには欠かせません。\nですが、闇雲にテストを行えばよいわけではありません。\nテストの設計には正しい・効果的なやり方があり、正しく行われないテストは品質を保証できず、意味のないテストになってしまいます。\nまた、品質が保証されないばかりでなく、ソフトウェアテストに使った決して少なくないリソースが全く無駄になってしまいます。\n\n\n正しく効果的なソフトウェアテストを行うために必要な知識が「ソフトウェアテスト技法」です。\nソフトウェアテスト技法は「なるべく少ないテストケースで、より網羅的にテストする」ための技法です。\nテストケースを減らしてしまうと網羅性が下がってしまうような気がしてしまいますが、必ずしもそうとは限りません。\nむしろ、意味のないテストケースをいくら増やしても網羅性は上がりませんし、効果的に設計できればテストケースを最小限にしながら網羅性を確保することもできます。\nつまり、「どうテストケースを設計するか？」を知らないとソフトウェアテストを意味のあるものにすることはできないのです。\n\n\n扱う内容・扱わない内容\nこの講座では、プログラマーが必ず知っておくべき基本のソフトウェアテスト技法について学んでいきます。\nですが一方で、技法の種類だけを学んでも意味がありません。その技法の本質を理解してはじめて価値があります。\nこの講座ではソフトウェアテストの技法を学ぶことで、ソフトウェアテストの基本的な考え方を理解していただきます。\n\n\n具体的には以下のような内容について学んでいきます。\n同値クラスと境界値テスト\n網羅性とピンポイント\nドメイン分析テストとデシジョンテーブル\nペア構成テスト\n状態遷移テスト\nテスト技法を活用する上での注意点\n\n\nソフトウェアテストの考え方が理解できれば、より発展的な技法も難なく理解できます。\nまずは基本的な技法を確実に理解して使えるようになりましょう。",
      "target_audience": [
        "ソフトウェアテストの初心者の方。",
        "テスト技法をはじめて学ぶ方。",
        "ソフトウェアテストは行っていたが、テストケースを適当に作っていた方。",
        "システムのバグを効率的に発見したい方。",
        "テストのコストを最小化しつつ、テストのメリットを最大化したい方。",
        "ソフトウェアの品質を確実に高めたい方。"
      ]
    },
    {
      "title": "Selenium JavaScript Tutorial For Beginners",
      "url": "https://www.udemy.com/course/javascript-selenium-testing-tutorial-for-beginners/",
      "bio": "This tutorial covers everything you need to know to work with JavaScript for Selenium automation testing.",
      "objectives": [
        "You will learn about JavaScript and Selenium Webdriver and how to write and run test scripts in Selenium with JavaScript.",
        "Further, we will look at Assertion in Selenium JavaScript, what Parallelization is and how to run tests in parallel with Mocha.",
        "In addition, we deep dive into what Mochawesome is. & How to Install & Set up Mochawesome?",
        "By the end of this course, you can Run Tests on LambdaTest Selenium Grid cloud and learn why and when to use Parameterized Tests in JavaScript."
      ],
      "course_content": {
        "JavaScript Test Automation Tutorial 2021 | What is JavaScript? | Part I": [
          "Introduction to JavaScript Testing Tutorial for beginners",
          "What is JavaScript?",
          "What is Selenium WebDriver?",
          "Getting Started with Javascript Testing: Installing Node.js & NPM",
          "Getting Started with Javascript Testing: Setting up the first project",
          "Getting Started with Javascript Testing: Installing Selenium WebDriver",
          "Getting Started with Javascript Testing: Setting up drivers"
        ],
        "How to write and run test scripts in Selenium?": [
          "Introduction to JavaScript Testing Tutorial for beginners",
          "Selecting an IDE to write your first Selenium test in JavaScript",
          "Writing your first Selenium test in JavaScript",
          "How to use Selenium Web Locators when writing tests in JavaScript",
          "How to run your first test implemented in Selenium JavaScript",
          "How to write and execute your first test in Selenium JavaScript in 2 minutes"
        ],
        "What is Assertion in Selenium ? JavaScript Test Automation Tutorial | Part III": [
          "Introduction to JavaScript Testing Tutorial for beginners",
          "What are Assertions in Selenium JavaScript",
          "How to use Assertions in Selenium JavaScript using Node Assertion Library",
          "How to use Assertions in Selenium JavaScript using Chai"
        ],
        "Getting Started with Mocha | JavaScript Test Automation Tutorial": [
          "Introduction",
          "About Mocha Test Framework",
          "How to add mocha to your test?",
          "Run your first test using Mocha"
        ],
        "Do mocha tests run in parallel? JavaScript Test Automation Tutorial": [
          "Introduction -JavaScript Testing Tutorial",
          "What is parallelization?",
          "How to add test cases?",
          "How to run your tests in parallel?"
        ],
        "Generate Mocha Report With Mochawesome | JavaScript Test Automation Tutorial": [
          "Introduction to Selenium WebDriver with JavaScript",
          "What is Mochawesome and how to use it?",
          "Installing and setting up Mochawesome with existing projects",
          "Running tests in parallel using Mocha",
          "Viewing the output of reports on successful test",
          "Viewing the output of reports on failed test",
          "How to change the directory and the file name?",
          "Review"
        ],
        "Selenium Automation Testing On The Cloud": [
          "Introduction",
          "Table of Content",
          "Introduction to LambdaTest",
          "How to get User & Access Key",
          "How to generate Desired Capabilities",
          "How to run your Selenium Tests",
          "How to connect test to LambdaTest",
          "How to run test on LambdaTest"
        ],
        "Headless Testing In Selenium": [
          "Introduction",
          "Table of Content",
          "What is Headless testing",
          "Updating capabilities to use Headless mode",
          "Running Headless Tests with Selenium On LambdaTest Cloud",
          "Session Recap"
        ],
        "Parameterized Test With Mocha | Selenium WebDriver With JavaScript Tutorial": [
          "Introduction to Selenium WebDriver JavaScript Tutorial",
          "What is Parameterization?",
          "Creating a new Parameterized Test",
          "Setting up browser capabilities for cross-browser testing",
          "Running tests with cloud Selenium Grid on LambdaTest",
          "Session Recap"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "This Selenium JavaScript testing tutorial is a comprehensive course designed to teach individuals with little to no prior programming experience what is JavaScript and how to get started with Selenium JavaScript testing. We will also cover a range of topics, including setting up Selenium with JavaScript, best practices, and using JavaScript automation examples to deliver a flawless experience to the end user. By the end of this Selenium JavaScript Tutorial, have a solid foundation in using Selenium with JavaScript and will be able to create and execute automated tests for web applications.\n\n\nSo let's deep dive into this course with Ryan Howard (@ryantestsstuff) as he explains performing cross browser testing using Mocha with JavaScript at scale on cloud Selenium Grid like LambdaTest.\n\n\nAlso, learn\n- What is JavaScript?\n- How to write and run test scripts in Selenium\n- What is Assertion in Selenium\n- Getting Started with Mocha\n- Do mocha tests run in parallel\n- Generate Mocha Report With Mochawesome\n- Selenium Automation Testing On The Cloud\n- Headless Testing In Selenium\n- Parameterized Test With Mocha\n\nThis course is ideal for anyone who is new to Selenium and JavaScript, including web developers, quality assurance professionals, and software testers who want to learn how to automate web testing using these tools.",
      "target_audience": [
        "Beginner Developer/QA who wants to learn about Selenium.",
        "Graduate students who admires to be a QA Professional"
      ]
    },
    {
      "title": "Galen UI LAYOUT automation testing with Cucumber & Java",
      "url": "https://www.udemy.com/course/galen-ui-layout-automation-testing/",
      "bio": "Learn how to create UI layout automation tests using Galen within Java Selenium Cucumber framework - Jasecu",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Why this course",
          "Layout testing in general",
          "Layout testing with Galen"
        ],
        "Implementation of Galen into Jasecu Framework": [
          "Galen Java Step Definiton (Glue Code)",
          "Galen Gherkin Feature file",
          "Galen Java Test Runner",
          "Galen TestNG test suite",
          "Galen Dependency"
        ],
        "Galen Gspec Files": [
          "Placement of Gspec files within Jasecu framework",
          "Galen Objects",
          "Galen Ranges",
          "Galen Specifications"
        ],
        "IDEA IntelliJ - Running Galen Tests and check Galen Reports": [
          "Running Galen Tests in IDEA IntelliJ",
          "Check Galen reports"
        ],
        "Jenkins Integration": [
          "Creation and running of Galen Jenkins job",
          "Galen Results on Jenkins"
        ],
        "Create Galen Test from scratch for testing Udemy page Login": [
          "Create files in IDEA IntelliJ and run the test for Udemy Login test",
          "Push files to Github and create new Jenkins job for Udemy login Galen test"
        ],
        "Conclusion": [
          "Final word and next steps"
        ]
      },
      "requirements": [
        "you should first complete following free tutorial: Cucumber & Java UI & API automation framewok - JASECU, link on Udemy webpage + then: course/jasecu-ui-api-automation-framewok !!! exact link link on this course can be find in the Note plus in the attached text file of Lecture no. 1 Section no. 1 of 'Galen - UI LAYOUT automation testing' course !!!"
      ],
      "description": "In this course, you will learn how to create UI layout automation tests using Galen within Java Selenium Cucumber framework - Jasecu.\nThe prerequisite of this course is finishing free Udemy course:\nCucumber & Java & Selenium automation framework - JASECU\nlink on Udemy webpage + then:\ncourse/jasecu-ui-api-automation-framewok\n!!! exact link link on this course can be find in the Description, Note and in the attached text file of Lecture no. 1 Section no. 1 of 'Galen - UI LAYOUT automation testing' course !!!,\nthis free course will help you setup your local and CI environment to use Galen within Jasecu Framework and will learn you the basics of Jasecu Framework\nIn Galen - layout automation testing you will get familiar with basics of layout testing, you will understand Galen implementation in Jasecu framework and how to run scenarios which include Galen steps from IDEA IntelliJ and from Jenkins.\nPrimarily, you will learn how to create Galen 'gspec' files and create layout verification in them.\nAfter finishing this course, you will realize how easy it is create UI layout tests using Galen with Jasecu framework.",
      "target_audience": [
        "people who would like to learn UI layout automation tests using Galen"
      ]
    },
    {
      "title": "SDLC and Gating for Testing Professionals",
      "url": "https://www.udemy.com/course/sdlc-and-gating-for-testing-professionals/",
      "bio": "Explore the System Development Lifecycle and Phase Gates to discover the Testing artifacts associated with each phase.",
      "objectives": [],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "SDLC and Gating Overview": [
          "SDLC and Gating Overview"
        ],
        "SDLC Phases - Overview": [
          "SDLC Phase - Business Requirements",
          "SDLC Phase - System Requirements",
          "SDLC Phase - Design",
          "SDLC Phase - Development",
          "SDLC Phase - Test",
          "SDLC Phase - Deploy",
          "SDLC Phase - Warranty and Project Closure",
          "SDLC Phase Activities Quiz"
        ],
        "Test Artifacts by SDLC Phase": [
          "Test Artifacts Introduction",
          "Test Artifacts - Business Requirements Phase",
          "Test Artifacts - System Requirements Phase",
          "Test Artifacts - Design Phase",
          "Test Artifacts - Development Phase",
          "Test Artifacts - Test Phase",
          "Test Artifacts - Deploy Phase",
          "Test Artifacts - Warranty and Project Closure Phase",
          "Test Artifacts by SDLC Phase Quiz"
        ],
        "SDLC Phase Gating and \"Go no Go\"": [
          "SDLC Gating and \"Go no Go\" Overview",
          "Gate 1 - Business Requirements",
          "Gate 2 - System Requirements",
          "Gate 3 - Design",
          "Gate 4 - Development",
          "Gate 5 - Test and Go no Go Decisions",
          "Gate 6 - Warranty and Project Closure",
          "SDLC Phase Gating Quiz"
        ]
      },
      "requirements": [
        "Students do not need previous experience with the Software Development Life Cycle or Gating, but should have a basic understanding of the testing artifacts produced for a typical Software development project."
      ],
      "description": "The SDLC and Gating for Testing Professionals course is geared towards software testing professionals at the beginner and intermediate levels who want advance their understanding of the software development lifecycle. Test Analysts, Test Leads and Test Managers will gain an understanding of the Testing Artifacts required at each phase of the SDLC and the Gating criteria that applies to the testing activities and the testing artifacts for each phase.\nThe course is presented as a slide presentation with embedded video to guide you and provide additional content. The course is approximately one hour in length.\nThe course is divided into three main sections, each one presenting the material for each phase of the SDLC individually. The first section presents an overview of each SDLC phase and the main project activities that occur within that phase. This discussion is not limited to the testing activities, but give a more general overview of each phase. The second section gives a comprehensive look at the specific testing artifacts required at each individual phase of the SDLC. The third section presents the gating criteria for each SDLC phase as it pertains to the testing activities and testing artifacts.\nThis course is designed for software testing professionals as a practical guide and tool to apply to their current and future projects. The slides can be used as job aids for listing testing artifacts by SDLC phase and for gating criteria by SDLC phase.\nPrevious SDLC or Gating knowledge is not required. If you are a Test Lead or Test Manager who is very familiar with the SDLC and Gating, this may not be the right course for you. This course is geared towards Software Testing Professionals so may not be as useful for people outside of testing.",
      "target_audience": [
        "This SDLC and Gating course is geared towards testing professionals. Test Analysts, Test Leads and Test Managers will gain an understanding of the Testing Artifacts required at each phase of the SDLC and the Gating criteria for testing for each phase. Previous SDLC or Gating knowledge is not required. If you are a Test Lead or Test Manager who is very familiar with the SDLC and Gating, this may not be the right course for you. This course is geared towards Testing Professionals so may not be as useful for people outside of testing."
      ]
    },
    {
      "title": "Mastering REST Assured Java: Comprehensive API Testing",
      "url": "https://www.udemy.com/course/rest-assured-api-testing-automation-rest-assured-java/",
      "bio": "Unlock the full potential of API testing with REST Assured Java in this comprehensive mastery course.",
      "objectives": [
        "The fundamentals of API testing and its significance in software development.",
        "How to install, configure, and utilize REST Assured Java for automated API testing.",
        "Writing and executing various types of API test cases, including GET, POST, PUT, DELETE, and PATCH requests.",
        "Advanced topics such as serialization, deserialization, request validation, and authorization handling.",
        "Strategies for end-to-end testing, integration with the Cucumber framework, and converting JSON requests to POJOs.",
        "Practical application of learned concepts through case studies and projects, including testing an employee database and building RESTful APIs from scratch."
      ],
      "course_content": {
        "REST Assured Java - Beginners": [
          "Introduction to Course",
          "What is REST Assured Java",
          "Installation of REST Assured Java",
          "Writing a Simple Test Case using REST Assured Java",
          "Writing a Simple Test Case using REST Assured Java Continue",
          "Reading JSON Data",
          "Reading JSON Data Continue",
          "Validating Response Status",
          "Validating Response Headers",
          "Passing Query in REST Assured Java",
          "Passing Query in REST Assured Java Continue"
        ],
        "REST Assured Java - Intermediate": [
          "Introduction to Course",
          "GET Request Example",
          "POST Request Example",
          "PUT Request Example",
          "DELETE Request Example",
          "PATCH Request Example",
          "Serialization and Deserialization Basics",
          "DE serialize JSON Data",
          "Authorization in REST Assured Java"
        ],
        "REST Assured Java - Advanced": [
          "Introduction to Course",
          "POM File",
          "Project Information",
          "End to End Testing Part 1",
          "End to End Testing Part 2",
          "End to End Testing Part 3",
          "End to End Testing Part 4",
          "End to End Testing Part 5",
          "End to End Testing Part 6",
          "Introduction to Cucumber",
          "API Testing using Cucumber Framework",
          "API Testing using Cucumber Framework Continue",
          "Convert JSON request to POJO Part 1",
          "Convert JSON request to POJO Part 2",
          "Convert JSON request to POJO Part 3"
        ],
        "REST Assured Java Case Study - Testing Employee Database": [
          "Introduction to Project",
          "Creating JSON Data",
          "Adding Dependencies",
          "Employee Details Part 1",
          "Employee Details Part 2",
          "Employee Details Part 3",
          "Add Employee Details",
          "Update Employee Details",
          "Delete Employee Details",
          "Output of the Project"
        ],
        "Project on REST API - Pet Clinic Application": [
          "Introduction to Project",
          "Maven Project",
          "Base Entity",
          "Named Entity Class",
          "Visit Modal Class",
          "Creating Repositories",
          "Creating Repositories Continue",
          "Creating Owner",
          "Pet Type JPA",
          "Creating Visit",
          "Specialty JPA",
          "Rest Exception Classes Part 1",
          "Rest Exception Classes Part 2",
          "Rest Exception Classes Part 3",
          "Rest Exception Classes Part 4",
          "Serializer",
          "Serializer Continue",
          "Deserialize Class",
          "Creating REST Controller Part 1",
          "Creating REST Controller Part 2",
          "Creating REST Controller Part 3",
          "Creating Services",
          "Creating Services Continue",
          "Output of the Project"
        ],
        "RESTful API Project - Employee Management System Tool": [
          "Introduction to Project",
          "Creating a Project and Adding Dependencies",
          "Creating Department Class",
          "Creating Employee Class",
          "Department Repositories",
          "Department Service",
          "Employee Service",
          "Department Controller",
          "Department Controller Continue",
          "Employee Controller",
          "Main File",
          "Properties File"
        ]
      },
      "requirements": [
        "Basic understanding of Java will definitely help",
        "No programming experience required"
      ],
      "description": "Introduction:\nWelcome to the \"Comprehensive REST Assured Java Mastery\" course! In this course, you'll embark on a journey to master API testing using the REST Assured Java library. APIs play a crucial role in modern software development, and the ability to effectively test them is a valuable skill for any software tester or developer. REST Assured Java simplifies API testing by providing a powerful and intuitive framework for writing automated tests.\nCourse Overview:\nThis course is divided into six comprehensive sections, each designed to progressively guide you from the basics to advanced techniques in API testing with REST Assured Java. Whether you're a beginner looking to get started with API testing or an experienced tester aiming to enhance your skills, this course has something for everyone.\nWhat You'll Learn:\nUnderstand the fundamentals of REST Assured Java and its importance in API testing.\nLearn how to install and configure REST Assured Java for your testing environment.\nWrite simple test cases to validate API responses and perform basic operations.\nDive into intermediate topics such as serialization, deserialization, and request validation.\nExplore advanced techniques including end-to-end testing, integration with the Cucumber framework, and handling authorization.\nApply your knowledge to real-world case studies and projects, including testing an employee database and building RESTful APIs from scratch.\nWhy Take This Course:\nBy the end of this course, you'll have the skills and confidence to tackle any API testing challenge using REST Assured Java. Whether you're testing web services, RESTful APIs, or microservices, you'll be equipped with the tools and knowledge needed to ensure the quality and reliability of your software applications.\nSo, are you ready to become a master of API testing with REST Assured Java? Let's get started!\nSection 1: REST Assured Java - Beginners\nIn this introductory section, students are introduced to the fundamentals of REST Assured Java for API testing. The section begins with an overview of the course, followed by an explanation of what REST Assured Java is and its importance in API testing. Students then learn how to install REST Assured Java and write simple test cases using the framework. They explore essential concepts such as reading JSON data, validating response status and headers, and passing queries. By the end of this section, students will have a solid understanding of the basics of REST Assured Java and be ready to progress to more advanced topics.\nSection 2: REST Assured Java - Intermediate\nBuilding upon the foundational knowledge gained in the beginners' section, this intermediate section dives deeper into API testing with REST Assured Java. Students learn about various HTTP request methods, including GET, POST, PUT, DELETE, and PATCH, and how to implement them using REST Assured Java. They also explore serialization and deserialization basics, authorization techniques, and advanced request validation. By the end of this section, students will have a comprehensive understanding of intermediate-level concepts in REST Assured Java and be able to perform a wide range of API testing tasks.\nSection 3: REST Assured Java - Advanced\nIn this advanced section, students advance their skills in API testing with REST Assured Java. They learn about project management with Maven and set up a project structure for end-to-end testing. The section covers comprehensive end-to-end testing strategies, including test execution, reporting, and integration with the Cucumber framework for behavior-driven development (BDD). Students also learn how to convert JSON requests to Plain Old Java Objects (POJOs) and integrate them into their test automation framework. By the end of this section, students will have a deep understanding of advanced concepts in REST Assured Java and be able to design and execute complex API tests effectively.\nSection 4: REST Assured Java Case Study - Testing Employee Database\nIn this section, students apply their knowledge to a real-world case study: testing an employee database. They start with an introduction to the project, understanding its objectives and scope. Through a series of lectures and hands-on exercises, students learn how to create JSON data, add necessary dependencies, and implement functionalities to manage employee details such as adding, updating, and deleting employee records. By working on this case study, students gain practical experience in applying REST Assured Java techniques to a concrete scenario, reinforcing their understanding of API testing principles and methodologies.\nSection 5: Project on REST API - Pet Clinic Application\nIn this project-based section, students embark on building a REST API for a pet clinic application. The section begins with an introduction to the project, outlining its goals and requirements. Students then proceed to set up a Maven project structure and create entity classes for the pet clinic application, such as base entities, named entities, and visit models. They continue by implementing repository classes, defining REST controllers, and handling exceptions. Throughout the project, students gain hands-on experience in building a REST API from scratch using REST Assured Java, solidifying their understanding of RESTful API development principles and best practices.\nSection 6: RESTful API Project - Employee Management System Tool\nIn the final section, students engage in another project focused on developing a RESTful API for an Employee Management System tool. They start with an introduction to the project's objectives and requirements before setting up the project structure and adding necessary dependencies. Students then proceed to create entity classes for departments and employees, implement repository classes, and define REST controllers for handling CRUD operations. Additionally, they learn about configuring properties files and integrating controllers and services. By completing this project, students gain valuable hands-on experience in building a RESTful API for a real-world application, further enhancing their skills in API development and REST Assured Java.",
      "target_audience": [
        "Software Testers: Individuals looking to enhance their skills in API testing and automation using REST Assured Java.",
        "Software Developers: Professionals interested in learning how to test and validate APIs programmatically within their Java projects.",
        "Quality Assurance Engineers: QA specialists aiming to improve their proficiency in API testing techniques and tools.",
        "Junior to Senior Developers: Those seeking to expand their knowledge and expertise in API testing to advance their careers.",
        "Computer Science Students: Students studying software development or related fields who wish to gain practical skills in API testing using Java.",
        "IT Professionals: Individuals working in IT roles who want to broaden their skill set and improve their effectiveness in testing APIs.",
        "Anyone Interested in API Testing: Individuals keen on understanding the principles and practices of API testing for better software quality assurance."
      ]
    },
    {
      "title": "Mastering Xpath, CSS Locator Techniques Selenium Automation",
      "url": "https://www.udemy.com/course/mastering-selenium-xpath-css-locator-techniques-selenium-automation/",
      "bio": "Locator Strategies,Relative Xpath, CSS Locator Best Practice Techniques End to End for Selenium Automation ..",
      "objectives": [
        "Understand what is Locator XPath and CSS Selector.",
        "Types of Basic selenium Locators",
        "Advance Relative Xpath",
        "End to End CSS Locator",
        "Become an Expert in creating locator and Advanced Relative Xpath,CSS Locator"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic Locators": [
          "Basic Locators-Selenium"
        ],
        "Advanced Relative Xpath End to End": [
          "Advanced Relative Xpath End to End"
        ],
        "Css Locator -End to End-All css locator strategies added": [
          "Css Locator -End to End-All css locator strategies added"
        ],
        "Complete Source Code for Locators, Relative Xpath ,CSS Locators": [
          "Complete Source Code for Locators, Relative Xpath ,CSS Locators"
        ]
      },
      "requirements": [
        "No Need Prior Knowledge to learn this course .This course have explained from Basic to End",
        "No Programming knowledge required"
      ],
      "description": "This course is related to Locator ,Advanced Relative ,XPath and CSS Selector course which will cover all the information which is needed to find the elements/dynamic elements while automating any web application using Selenium or Appium. If you know how to find use Relative xpath and css locator that makes you comfortable while script development and it will save your time to avoid struggling in Automation.\nI made this course very detailed to Best Practices of Xpath, Xpath techniques, construct your Locator ,Advanced XPath and CSS Selector End to End\nThis course will cover what is Locator ,XPath, XPath Types, XPath Terminology, text method ,XPath Syntax, XPath Methods, XPath Indexing, XPath Axes, What is CSS Selector, CSS Selector Types, Methods in CSS Selector ,nth child, nth type ,Xpath with text methods ,Xpath -Simple and Best techniques.\nFor every Locator ,XPath and CSS Selector, We have explained practically So, that it will be very clear to you to understand and implement the same in your Automation Also.\nFor every Locator ,XPath and CSS Selector, We have explained practically with separate example and explained how to create locator and css locator ,which are the  techniques need to use shortly and create effective xpath and css locator.\n-------[All Source code and Xpath ,CSS Locator code are added in attachment and you can download for your reference]-----\nSo, get Ready and please enroll and become an Expert in Locator, Xpath , Css Locator in Selenium Automation and solve your locators issues simply.",
      "target_audience": [
        "Beginners with no knowledge on XPath and CSS Selector.",
        "Manual Testers who wants to step into Automation (i.e. Selenium Webdriver).This will make you more comfortable in automation and it will avoid automation issue related to xpath ,css locator",
        "Selenium testers who lacks in XPath and CSS Seletor knowledge.",
        "Selenium testers who wants to enhance knowledge in writing XPath and CSS Selector.",
        "This course will make you more comfortable to find xpath,css locator by end of this course and makes you Expertise in Xpath,CSS Locator techniques"
      ]
    },
    {
      "title": "Playwright Automation Testing Complete Bootcamp UI+API[2025]",
      "url": "https://www.udemy.com/course/playwright-automation-testing-complete-bootcamp-uiapi/",
      "bio": "Master Playwright Testing: Python, Node JS APIs, Basic to Advanced Playwright Skills, and React JS Component Testing",
      "objectives": [
        "Playwright Testing",
        "Testing Network Requests and Responses",
        "Data-Driven Testing",
        "Benefits of Integrating Playwright with CI/CD",
        "Creating a GitHub Actions Workflow",
        "Running Playwright Tests in CI/CD",
        "Jenkins and Github CI",
        "Generating Test Reports",
        "Running Python API Tests in CI/CD Pipelines",
        "Reporting and Analyzing API Test Results",
        "Running Node JS API Tests in CI/CD Pipelines",
        "Understanding Component Testing vs. End-to-End Testing",
        "Testing Different Types of Frontend Elements"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Module 1. Introduction to Playwright": [
          "Introduction to Playwright Part-1",
          "Playwright Browser Basics Part-2",
          "Setup Playwright Writing First Test Part-3",
          "Playwright Browser Basics Part-4",
          "Target Tags Attribute Part-5"
        ],
        "Module 2. Advanced Playwright Testing": [
          "Selectors CSS Part-1",
          "Selectors Xpath Part-2",
          "Selectors Text and Attribute Part-3",
          "Automation Testing With Counter Example Part-4",
          "API Mocking Part-5",
          "API Mocking Test Case Part-6",
          "Network Interception Part-7",
          "Auth Authorization Part-8",
          "Cookies Session Part-9",
          "Visual Regression Part-10",
          "Data Driven Testing Part-11",
          "Error Handling Trace Viewer Part-12"
        ],
        "Module 3. Integrating Playwright with CI-CD Pipelines": [
          "Module 3 Source Code",
          "Intro to CI Part-1",
          "Benefits of Integrating Playwright with CI Part-2",
          "CD Github Action Workflow Part-3",
          "Writing Github Action Workflow Part-4",
          "Running Github Action Workflow Part-5",
          "Caching Deps Github Action Workflow Part-6",
          "Jenkins Workflow Part-7",
          "Jenkins Workflow Test Run Part-8",
          "Jenkins Workflow Test Run 2 Part-9",
          "Jenkins Workflow Setup Final Part-10",
          "Jenkins Workflow Running Test Part-11",
          "Jenkins Workflow Send Test Notifications Part-12",
          "Jenkins Workflow Send Test Notifications 2 Part-13",
          "Jenkins Receiving Email Report Part-14",
          "Git Labs CI-CD Part-15"
        ],
        "Module 4. API Testing with Python": [
          "Module 4 Source Code",
          "Python Setup Creating APIs Part-1",
          "Python First Test Case Part-2",
          "Test Cases For Different Endpoints Part-3",
          "Authentication Test Case Part-4",
          "Handling Different Response Test Case Part-5",
          "Running Test Cases In CI Part-6"
        ],
        "Module 5. API Testing with Node JS": [
          "Module 5 Source Code",
          "Node JS First API Test Part-1",
          "Node JS Test Reporter Config Part-2",
          "Node JS API Test Cases Part-3",
          "Node JS API Auth Test Cases Part-4",
          "Node JS Xml Data Handling Test Part-5",
          "Node JS Running Tests in CI-CD Part-6"
        ],
        "Module 6. Frontend Testing with Playwright and React JS": [
          "Module 6 Source Code",
          "Component VS End To End Testing Part-1",
          "Setup React App For Testing Part-2",
          "First Test Case React Part-3",
          "Form Test Cases Part-4",
          "Modal Test Cases Part-5",
          "Data Fetching Mocking Test Cases Part-6",
          "React Redux Project Setup Part-7",
          "React Redux Reducer Store Part-8",
          "React Components for Todo Part-9",
          "React Redux Test Case Part-10",
          "Visual Regression Using Percy Part-11",
          "React Context Part-12",
          "React Context Test Part-13",
          "React Custom Hook Test Part-14",
          "React Spy Mock Function Part-15"
        ]
      },
      "requirements": [
        "Students don't need to have any prior knowledge to take this course. They will learn everything from the course."
      ],
      "description": "Welcome to the Playwright Automation Testing Complete Bootcamp UI+API! This comprehensive course is designed for developers and testers who want to master Playwright, a powerful end-to-end testing framework. Whether you're a beginner or looking to deepen your expertise, this bootcamp covers everything you need to know about Playwright automation testing.\nIn this bootcamp, you will:\n\n\nMaster Playwright Basics to Advanced Skills: Gain a solid foundation in Playwright and advance to complex testing techniques. Learn how to leverage Playwright’s capabilities to write robust and reliable test scripts.\nExplore API Testing with Python and Node.js: Understand the intricacies of API testing using Playwright with Python and Node.js. Learn to automate API testing to ensure your back-end services are performing as expected.\nComprehensive React JS Testing: Dive into frontend testing by learning how to test React JS components effectively with Playwright. Ensure your UI components work seamlessly and provide a great user experience.\nHands-On Projects and Real-World Scenarios: Apply your knowledge through practical projects and real-world scenarios. Build and run tests on actual applications to solidify your skills.\n\n\nBy the end of this bootcamp, you’ll have the skills and confidence to implement Playwright testing in your projects, ensuring high-quality and reliable software delivery. Join us and take your testing skills to the next level!",
      "target_audience": [
        "If you want to learn Playwright testing to test your project.",
        "Students want to learn Playwright testing.",
        "A web developer wants to learn how to do API testing with Playwright.",
        "If you want to learn how to do industry-standard testing using Playwright.",
        "If you want to learn Python and Node JS API testing using Playwright.",
        "If you want to learn how to do frontend component testing for a React app using Playwright."
      ]
    },
    {
      "title": "Human Factors and Usability Engineering in Medical Devices",
      "url": "https://www.udemy.com/course/human-factors-and-usability-engineering-in-medical-devices/",
      "bio": "Ensuring FDA Compliance and User-Centered Design",
      "objectives": [
        "Understand FDA & Global Regulatory Requirements",
        "Learn how FDA, IEC 62366-1, ISO 14971, regulate Human Factors Engineering and usability testing in medical device development.",
        "Integrate Human Factors into Risk Management",
        "Identifying use-related hazards, critical tasks, and risk control measures",
        "Develop and Execute Usability Testing Plans",
        "Apply human-centered design principles to create medical device interfaces",
        "Prepare FDA-Compliant Usability Documentation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Human Human Factors/Usability Process": [
          "Human Factors Process",
          "Define Intended Users, Device user interface, and Use Environments",
          "Develop Use Scenarios",
          "Conducting Task Analysis",
          "Identify Use-Related Risks",
          "Design User Interface (UI) with HFE Principles",
          "Conduct Formative Usability Testing",
          "Conduct Summative Usability Testing",
          "Document HFE Activities for FDA Submission"
        ]
      },
      "requirements": [
        "Basic Understanding of Medical Devices and Regulations – Familiarity with medical device development, FDA, EU MDR, or ISO 13485 is helpful but not required. The course will introduce key regulatory aspects of Human Factors and Usability Engineering.",
        "Interest in Risk Management and Usability – A general understanding of risk management concepts (ISO 14971) and how medical devices interact with users can enhance learning but is not mandatory.",
        "No Special Software or Tools Required – Learners only need a computer with internet access. Templates and guidance on usability testing tools (e.g., usability studies, and task analysis, formative and summative evaluations) will be provided.",
        "Open to All Professionals – Ideal for engineers, regulatory specialists, quality assurance professionals, UX/UI designers, and healthcare professionals involved in medical device development."
      ],
      "description": "Medical device usability plays a critical role in patient safety, regulatory approval, and market success. Poor usability can lead to user errors, device misuse, and regulatory rejections, increasing risks for both patients and manufacturers. This course provides a comprehensive, step-by-step guide to Human Factors and Usability Engineering (HFE/UE), ensuring compliance with US FDA, EU MDR, IEC 62366-1, and ISO 14971.\nYou will learn how to apply usability engineering principles to medical device design, conduct formative and summative usability testing, and integrate Human Factors into risk management. The course covers regulatory expectations, risk-based usability design, user interface (UI) design best practices, and usability documentation for regulatory submissions.\nWhether you’re a medical device engineer, regulatory professional, UX designer, or clinician, this course will equip you with the skills and tools to optimize device usability, reduce user errors, and ensure FDA, EU MDR compliance.\nWhat You Will Learn:\nApply Human Factors Engineering (HFE) principles in medical device development\nApplying Human Factors Engineering (HFE) Principles in AI and Software as a Medical Device (SaMD)\nEnsure compliance with US FDA, EU MDR, IEC 62366-1, and ISO 14971 usability requirements\nConduct task analysis, usability risk assessments, and usability testing\nDesign intuitive, safe, and user-friendly medical devices\nPrepare Human Factors documentation for regulatory submissions\nEnroll now and take your medical device usability expertise to the next level!",
      "target_audience": [
        "Medical Device Engineers & Designers – Learn how to apply usability engineering principles to optimize device design, minimize user errors, and enhance patient safety.",
        "Regulatory & Quality Professionals – Understand how Human Factors and Usability Engineering fit into ISO 13485, FDA submissions, EU MDR, and risk management to meet compliance requirements.",
        "Human Factors Specialists & UX/UI Designers – Gain insights into task analysis, usability testing, and user interface (UI) design for medical devices.",
        "Healthcare Professionals & Clinicians – Enhance your understanding of how medical devices are designed for safety and efficiency, providing feedback that improves usability."
      ]
    },
    {
      "title": "Automation Testing with Selenium & Python, Robot Framework",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-learn-testing-with-selenium/",
      "bio": "Automate websites using Selenium WebDriver with Python and Java. Includes Robot Framework, TestNG, and projects.",
      "objectives": [
        "How to automate real websites using Selenium WebDriver with Python and Java",
        "Setup and configure complete automation environments (Java, Python, Eclipse, PyCharm, Selenium, Git)",
        "Create test scripts for buttons, forms, dropdowns, alerts, checkboxes, radio buttons, and more",
        "Understand and apply locators like ID, Name, XPath, CSS, LinkText, and ClassName",
        "Manage synchronization using implicit, explicit, and fluent waits",
        "Build test automation frameworks using TestNG with Maven and reporting tools",
        "Handle complex scenarios like pop-ups, multiple windows, iframes, and mouse/keyboard events",
        "Work with GitHub for version control and collaboration",
        "Write data-driven test cases using TestNG DataProvider and Robot Framework",
        "Use the Robot Framework for no-code, keyword-driven test automation",
        "Generate screenshots, logs, and test reports",
        "Complete real-time projects such as automating e-commerce product search and e-learning site registration",
        "Prepare for real-world automation testing interviews"
      ],
      "course_content": {},
      "requirements": [
        "You should have the ability to learn while having fun!",
        "No prior automation or programming experience needed — this course is designed for absolute beginners",
        "A basic understanding of how websites work (HTML elements like buttons, forms, etc.) is helpful but not required",
        "A computer with Windows, macOS, or Linux and a stable internet connection",
        "Willingness to learn, practice, and build real-world automation scripts step-by-step",
        "Basic Knowledge of Java & Python",
        "Admin access on your machine to install tools like Java JDK, Python, Selenium, Eclipse, PyCharm, and browser drivers"
      ],
      "description": "Are you ready to launch your career in automation testing but feel overwhelmed with where to begin?\nThis Master Automation Testing course is designed to take you from zero to job-ready, whether you're a manual tester, fresher, or someone switching careers. You’ll learn automation from the ground up using real-world tools like Selenium WebDriver, Java, Python, TestNG, Robot Framework, and GitHub.\nWe start with Java and Selenium—setting up your environment, working with locators, handling buttons, dropdowns, alerts, and building real test scenarios in Chrome, Firefox, and Edge.\nThen, we move to TestNG, where you’ll organize your test scripts with annotations, priorities, dependencies, groups, listeners, and generate detailed Extent Reports.\nNext, we dive into Selenium with Python—you’ll learn how to automate forms, handle mouse actions, waits, iframes, and multiple browser windows using Python and PyCharm. This section is especially beginner-friendly and uses real-time projects to teach practical skills.\n\n\nFinally, we introduce the Robot Framework—a keyword-driven automation tool perfect for non-programmers. You’ll build full test flows, handle locators, pass parameters, and generate test reports, all without complex scripting.\nThroughout the course, you’ll complete projects like automating product searches on Amazon and creating test flows for an e-learning registration process.\nBy the end of the course, you'll be confident in writing test scripts, running real projects, debugging, generating reports, and using tools that QA professionals rely on daily.\nWhat makes this course different?\nNo fluff. Every module teaches something practical.\nTools covered include Java, Python, Selenium, TestNG, Robot Framework, GitHub\nIncludes real-time test automation projects you can add to your resume\nBeginner-friendly and career-focused\nCovers both coding-based and no-code test automation\nWhether you're preparing for an automation job, learning Selenium with Python, or mastering Robot Framework for your team — this course will give you the skills and confidence to succeed.",
      "target_audience": [
        "Manual testers who want to transition into automation testing",
        "Beginners and non-programmers looking for a step-by-step path into QA automation",
        "Students and fresh graduates aiming to build real-world automation skills",
        "Career changers coming from non-IT backgrounds who want to enter the tech industry",
        "QA professionals who want to upgrade their skills with Selenium, Python, Java, and Robot Framework",
        "Anyone preparing for a QA or Automation Tester job interview",
        "Testers who want to build real automation frameworks and showcase projects in GitHub"
      ]
    },
    {
      "title": "Learn Complete Testing (Manual+SQL+Unix+Rally+JIRA+AGILE)",
      "url": "https://www.udemy.com/course/learn-complete-testing-manualsqlunixrallyjiraagile/",
      "bio": "Everything for Testers (Manual+SQL+Unix+Rally+JIRA+AGILE)",
      "objectives": [
        "At the end of this course, students would understand the Redis, Oozie and HBase with advance queries and commands that are required from testers which are used in Testing Arena and they can start working in testing profile.",
        "At the end of this tutorial, students would be able to start their career in Testing with this technology at different levels."
      ],
      "course_content": {
        "Tutorial Introduction": [
          "Agenda"
        ],
        "Complete Manual Testing Concepts": [
          "Why We do Testing?",
          "Different Testing Types",
          "Static and Dynamic Testing",
          "Priority and Severity with Example",
          "Software Testing Life Cycle (STLC)",
          "Software Development Life Cycle (SDLC)",
          "Defect and Defect Format",
          "Verification and Validation",
          "TestCase Design Techniques",
          "TestCase and TestCase Format",
          "Testing Types and Functional Testing",
          "Non Functional Testing Types"
        ],
        "Rally Introduction": [
          "Rally Team DashBoard",
          "How to Create User Story in Rally?",
          "How to Search Tickets in Rally?",
          "How to Create Defect or Bug in Rally?",
          "How to Create Releases and Iterations in Rally?",
          "How to Login on Rally Dashboard?",
          "How to Execute Rally TestCases from TestPlan Window?",
          "How to Execute Rally TestCases from TestCases Window?",
          "How to Create TestCases in Rally's Team Dashboard?",
          "How to Create TestPlan > TestCases in Rally TeamDashboard?"
        ],
        "MYSQL Introduction": [
          "How to Create Tables and Insert Data?",
          "Different JOINS in SQL",
          "Update and Delete in MYSQL",
          "Delete, DROP and Truncate in SQL",
          "How to Work with Aggregate Functions in SQL?",
          "Group BY and Having Clause Implementation",
          "Compare two MYSQL Tables"
        ],
        "JIRA Introduction": [
          "How to Work with JIRA Login?",
          "Understand JIRA Dashboard",
          "How to Create UserStory in JIRA?",
          "How to Create Defect in JIRA?",
          "How to Search Tickets in JIRA Dashboard?",
          "How to Create Group and User in JIRA?"
        ],
        "Agile (Scrum) Introduction": [
          "What is Agile and Its Principals?",
          "What is Testers Role in Agile?",
          "What is Test Manager Role in Agile?",
          "Agile Vs Traditional Model",
          "Team Events in Agile Model",
          "Agile Test Strategy?",
          "Agile Test Planning?",
          "All Agile Keywords with Its Detailed Description",
          "Agile Diagram"
        ],
        "UNIX Introduction": [
          "How to Create File and Directory in UNIX?",
          "Working with File Comamnds in UNIX",
          "Copy and Move in Unix",
          "Head and Tail in Unix",
          "More and Less in Unix",
          "Airthmetic Operator in Unix",
          "Working with SED Command in Unix",
          "Working with AWK Command in Unix"
        ]
      },
      "requirements": [
        "As such there is no prerequisite required for this course and it is useful for any level of tester. Any Tester profile candidate can start this tutorial.",
        "Any QA can start this course who has basic knowledge of testing with any database and Unix. There is no specific prerequisite other than this."
      ],
      "description": "This course is specially designed for Testing profile students who wanted to build there career into Testing Arena in Real World. So I have designed this course so they can start working with Manual, SQL, Unix, Linux, Shell, Rally, JIRA and Agile in complete testing. All the users who are working or looking their career in QA profile and wanted to move into Testing domain should take this course and go through the complete tutorials which has advance knowledge.\nI have included the material which is needed for big data testing profile and it has all the necessary contents which is required for learning Manual, SQL, Unix, Linux, Shell, Rally, JIRA and Agile in complete testing.\nIt will give the detailed information for different Manual, SQL, Unix, Linux, Shell, Rally, JIRA and Agile in complete testing queries/commands which is needed by the tester to move into bigger umbrella i.e. Manual Testing or Automation Testing\nThis course is well structured with all elements of different Manual, SQL, Unix, Linux, Shell, Rally, JIRA and Agile in complete testing with advance commands in practical manner separated by different topics. Students should take this course who wanted to learn Manual, SQL, Unix, Linux, Shell, Rally, JIRA and Agile in complete testing from scratch.",
      "target_audience": [
        "Any Level of Testing Profile Candidate is the target audience for this course.",
        "Any QA beginner use this technology to enhance their skills."
      ]
    },
    {
      "title": "Master Java unit testing with Spring boot and Mockito",
      "url": "https://www.udemy.com/course/master-junit-testing-with-spring-boot-and-mockito/",
      "bio": "Java unit testing with Spring boot and Mockito",
      "objectives": [
        "Students or Learner will be able to write JUNIT test cases independently.. They can easily implement in real time projects.",
        "Students can explore more into Junit test cases with spring boot and they will become more expertise into Junit testing.",
        "Students will learn to write unit tests using MOCKS and SPYS created with MOCKITO.",
        "Students will learn to Use the important Unit Testing with ANNOTATIONS - SpringBootTest, DataJpaTest and MockBean,WebMvcTest",
        "You will learn to write Junit test cases effectively"
      ],
      "course_content": {
        "Introduction-Master Java Unit Testing with Spring Boot and Mockito-Overview": [
          "Introduction1-Junit-Testing with spring boot and Mockito-Overview",
          "Introduction2-Master Java Unit Testing with Spring Boot and Mockito"
        ],
        "Section:2 : Mocking and Mockito": [
          "Environment setup-with-Springboot-And-Example",
          "Example of calculate sum with enhanced for loop",
          "Calculate example with empty value and single value.",
          "Example to call a calculate service",
          "Calculate service implementation with stub",
          "Calculate service Stub implementation with empty and single values",
          "Create Mock service for calculating sum of three values, sum of empty and single",
          "Refactoring Before Mock InjectMocks ,ExtendWith(MockitoExtension.class)",
          "Unit test with List example",
          "Junit 4 and Junit 5 Annotations.",
          "Junit- Spy"
        ],
        "Unit testing with spring boot and mockito": [
          "Spring boot with hello world example.",
          "Writing Junit test case with spring boot for Hello world controller",
          "Junit test case with 200 Ok response",
          "Spring boot example for Student details",
          "Junit for Student details",
          "Service layer with Junit test case",
          "JPA with H2 Data base connection",
          "Inserting student details in JPA with H2 Database",
          "Retrieve details from DB using JPA repository for REST operation",
          "Unit test for retrieving all the table details.",
          "Unit test for Service Layer",
          "Unit test for Data Layer"
        ]
      },
      "requirements": [
        "The prerequisites are Minimum java knowledge and Spring boot knowledge.."
      ],
      "description": "JUnit is a unit testing framework for Java programming language. JUnit has been important in the development of test-driven development, and is one of a family of unit testing frameworks collectively known as xUnit, that originated with JUnit.\nThis tutorial explains the use of JUnit in your project unit testing, while working with Java. After completing this tutorial you will gain sufficient knowledge in using JUnit testing framework from where you can take yourself to next levels.\nMost of the successful projects are running based on successful junit test cases. Do you want to write Junit test cases for your project then this is the right place to learn about junit testing with spring boot and mockito. In this course you will be familiar about Junit test cases and Mockito, you can also write controller based unit tests and service based unit test and many more live examples.\nStudents will learn to write  JUNIT test cases very effectively.\nStudents will learn to Write INDEPENDENT JUnit Tests for RESTFUL web services talking with MULTIPLE LAYERS - web controller, business and data.\nStudents will learn and explore to use the most important Unit Testing ANNOTATIONS -\nTest, SpringBootTest, WebMvcTest, DataJpaTest and MockBean, InjectMocks, Mock\nStudents will learn to write unit tests using MOCKS and SPYS created with MOCKITO.\nStudents will learn to write unit test with H2 database with JPA  and will explore about integration.\nStudents will be explore to work with Eclipse IDE, Spring boot framework, Mockito framework and maven technologies.",
      "target_audience": [
        "This course mostly useful for whoever writing test scripts for their projects.",
        "This course useful for those who are seeking knowledge in Junit testing",
        "Those who want to ensure functionality with zero defects. whoever working in spring boot or microservices based projects for them very useful."
      ]
    },
    {
      "title": "ISTQB Agile Tester: 200 Practice Questions with Answers",
      "url": "https://www.udemy.com/course/istqb-agile-tester-practice-questions/",
      "bio": "Test Your Knowledge with 200 Realistic Questions and Explanations",
      "objectives": [
        "Practice with 200 ISTQB Agile Tester-style questions",
        "Understand correct answers with clear explanations",
        "Prepare for the CTFL-AT exam format and topics",
        "Test your knowledge with full mock exams",
        "Strengthen Agile testing skills through practical quizzes",
        "Learn how Agile testing fits into real project workflows",
        "Boost your confidence before taking the real exam"
      ],
      "course_content": {
        "Introduction": [
          "About instructor",
          "ISTQB Agile Tester Exam Overview",
          "Download the Official ISTQB Agile Tester Syllabus (PDF)"
        ],
        "Agile Software Development": [
          "Quiz 1",
          "Quiz 2"
        ],
        "Fundamental Agile Testing Principles, Practices & Processes": [
          "Quiz 3",
          "Quiz 4"
        ],
        "Agile Testing Methods": [
          "Quiz 5",
          "Quiz 6"
        ],
        "Assessing Quality Risks & Estimating Effort": [
          "Quiz 7"
        ],
        "Techniques in Agile Projects": [
          "Quiz 8",
          "Quiz 9"
        ],
        "Tools in Agile Projects": [
          "Quiz 10"
        ],
        "Full Mock Exams": [
          "Sample Exam 1",
          "Sample Exam 2"
        ],
        "Additional Resources": [
          "Testing and Development Activities",
          "Project Work Products",
          "Test Levels",
          "Testing and Configuration Management",
          "Organizational Options for Independent Testing",
          "Whole-Team Approach"
        ],
        "Final Words and Next Steps": [
          "Congratulations and Thank You!"
        ]
      },
      "requirements": [
        "Basic understanding of software testing concepts",
        "Motivation to practice and prepare for the Agile Tester exam",
        "No programming or test automation knowledge required"
      ],
      "description": "Welcome to the \"Exam Preparation: ISTQB Agile Tester — 200 Practice Questions with Answers\" Course!\nThis course is your go-to resource for practicing and mastering the skills needed to pass the ISTQB Certified Tester Foundation Level – Agile Tester Extension (CTFL-AT) exam.\nWhether you're already ISTQB Foundation Level certified or planning to take both exams soon, this course will help you build the Agile-specific knowledge required to succeed — using realistic, exam-style questions with clear explanations.\n\n\nWhat You’ll Get:\n\n200 Practice Questions: Aligned with the official ISTQB Agile Tester syllabus, covering all exam-relevant topics.\nDetailed Explanations: Each answer includes a short explanation to help reinforce your learning.\nModule-Based Practice: Questions are grouped by syllabus topic for easy focus and structured revision.\nFull Mock Exams: Two complete practice tests to simulate the real exam environment.\nBonus Lessons: Additional learning content covering related Agile testing concepts.\n\n\nTopics Covered:\n\nAgile Software Development\nFundamental Agile Testing Principles, Practices & Processes\nAgile Testing Methods\nAssessing Quality Risks & Estimating Effort\nTechniques in Agile Projects\nTools in Agile Projects\nFull Mock Exams (2x40 questions)\nAdditional Resources (Whole-Team Approach, Test Levels, Configuration Management, and more)\n\n\nWho This Course Is For:\n\nISTQB Foundation Level certified testers preparing for the Agile Tester extension\nQA professionals working in Agile environments who want to validate their knowledge\nJunior testers or career switchers aiming to enter Agile teams with confidence\nAnyone preparing for CTFL-AT who prefers learning through practice",
      "target_audience": [
        "Anyone preparing for the ISTQB Agile Tester (CTFL-AT) certification",
        "Testers with ISTQB Foundation Level looking to expand into Agile",
        "QA professionals working in Agile teams",
        "Learners who prefer to study through realistic practice questions"
      ]
    },
    {
      "title": "Introducción al testing de software",
      "url": "https://www.udemy.com/course/introduccion-al-testing-de-software/",
      "bio": "Todo lo que un tester necesita saber para empezar tu carrera como tester",
      "objectives": [
        "Conocerán los concepto básicos del testing",
        "Contextualizarán el testing como una parte del ciclo de vida del desarrollo de software",
        "Entenderán los roles, responsabilidades y artefactos que intervienen",
        "Crearán planes de prueba, casos de prueba, defectos y mejoras",
        "Conocerán los diferentes tipos de pruebas",
        "Aplicarán las diferentes técnicas para diseñar casos de prueba"
      ],
      "course_content": {
        "Introducción al testing": [
          "¡Bienvenida al curso!",
          "Validación y verificación",
          "¿Qué es el testing?",
          "Relación entre los riesgos y el testing",
          "Aprendé más sobre los riesgos y las pruebas",
          "Cuestionario de auto-evaluación",
          "Relación entre testing y calidad (QA, QC y testing)",
          "QA, QC y testing - De la teoría a la práctica",
          "Depuración",
          "Los 7 principios de las pruebas",
          "Niveles de independencia",
          "Cuestionario de autoevaluación 2",
          "Material complementario"
        ],
        "Modelos, metodologías y procesos": [
          "Proceso de desarrollo de software",
          "Metodologías de desarrollo de software",
          "Metodologías ágiles",
          "Testing en contextos ágiles",
          "Más sobre testing en contextos ágiles",
          "Modelo V y W",
          "Cuestionario de autoevaluación 3",
          "Proceso de pruebas - Planificación",
          "Proceso de pruebas - Seguimiento y control",
          "Proceso de pruebas - Análisis",
          "Escenarios de prueba",
          "Proceso de pruebas - Diseño",
          "Casos de prueba",
          "Proceso de pruebas - Implementación",
          "Proceso de pruebas - Ejecución",
          "Proceso de pruebas - Reporte",
          "Reporte de defectos",
          "Proceso de pruebas - Roles",
          "Tarea integradora",
          "Material complementario"
        ],
        "Tipos de pruebas": [
          "Tipos de prueba",
          "Tipos de prueba - Según el conocimiento interno del software",
          "Tipos de pruebas - Según la forma de ejecución",
          "Tipos de pruebas - Según la finalidad",
          "Tipos de pruebas - Según el nivel",
          "Tipos de pruebas - Según la funcionalidad",
          "Tipos de pruebas - Estrategia de pruebas",
          "Tipo de pruebas - Ejercitemos juntos",
          "Planificá las pruebas",
          "Plan de pruebas",
          "Material complementario"
        ],
        "Técnicas para derivar pruebas": [
          "Técnicas para diseñar pruebas",
          "Técnicas para diseñar pruebas - Particiones de equivalencia",
          "Particiones de equivalencia",
          "Técnicas para diseñar pruebas - Valores límite y análisis de robustez",
          "Valores límites y robustez",
          "Técnicas para diseñar pruebas - Diagrama de transición de estados",
          "Diagrama de transición de estados",
          "Técnicas para diseñar pruebas - Tablas de decisión",
          "Tabla de decisión",
          "Comentarios finales sobre las técnicas para diseñar pruebas"
        ],
        "Cierre": [
          "10 Errores frecuentes de los alumnos",
          "Consejos finales (Próximos pasos, certificaciones, roadmaps y demás...)",
          "Clase de consulta en vivo 2025-09-26",
          "Cierre",
          "Seguir aprendiendo..."
        ]
      },
      "requirements": [
        "Manejo de procesador de texto, planilla de cálculo, navegadores e internet",
        "Pensamiento lógico",
        "Actitud crítica"
      ],
      "description": "Hay dos preguntas que recibo permanentemente:\n¿Qué tengo que saber para empezar a trabajar como tester?\nYa estoy trabajando en testing pero necesito estructurar mis conocimientos y adquirir nuevas herramientas ¿Qué hago?\nLa respuesta a ambas preguntas es... ¡Háganse este curso de Introducción al testing!\nEn este curso veremos los conceptos más importantes del testing de software que te permitirán desarrollarte de manera satisfactoria en el rol de tester. Vamos a recorrer desde los conceptos más básicos hasta las técnicas más desafiantes y hacemos ejercicios sobre aplicaciones reales que te permiten aplicar lo aprendido en entornos cercanos a la realidad.\nLos conceptos, técnicas, herramientas y metodologías que veremos harán que te puedas desempeñar como tester de una forma eficiente y profesional.\nQuiero contarte un secreto: este mismo curso lo he dado en empresas de primera línea que querían incorporar tester juniors a sus nóminas. Es decir que:\nHay empresas que contratan testers juniors que ya han avalado estos contenidos\nLos contenidos están alineados con las necesidades de la industria\nEl contenido está probado por otros estudiantes y adaptado para que los temas más complejos, sean sencillos de entender.\nIgual lo mejor de todo, es que esos otros alumnos han conseguido empleo y quedaron más que satisfechos con el curso. Podes ver sus publicaciones en las que me han etiquetado en LinkedIn.",
      "target_audience": [
        "Profesionales de diferentes áreas que quieran iniciarse en el mundo del testing.",
        "Testers que recién estén empezando y quieran tener más herramientas para probar.",
        "Testers más experimentados que quieran formalizar y estructurar los conocimientos que ya tienen.",
        "Profesionales que estén interesados en rendir certificaciones de testing."
      ]
    },
    {
      "title": "API Testing with Katalon Studio - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/api-testing-with-katalon-studio-step-by-step-for-beginners/",
      "bio": "learn API Automation Testing from scratch with SOAP & REST Sample Projects",
      "objectives": [],
      "course_content": {
        "INTRODUCTION": [
          "Introduction & Getting Started"
        ],
        "SOAP": [
          "How to test SOAP web services"
        ],
        "REST": [
          "How to test REST web services"
        ],
        "VALIDATIONS": [
          "How to validate API response"
        ],
        "HTTP Methods": [
          "Handling HTTP methods GET, POST, PUT, DELETE"
        ],
        "RESULTS & REPORTING": [
          "Katalon Analytics",
          "Result & Reporting"
        ],
        "CMD": [
          "Command Line Execution"
        ],
        "GIT": [
          "How to use Version Control System GIT"
        ],
        "JENKINS": [
          "How to use Jenkins CI",
          "How to use Katalon Jenkins Plugin"
        ],
        "LINUX GIT & JENKINS": [
          "How to run Katalon Studio tests on Linux using Git & Jenkins"
        ]
      },
      "requirements": [
        "No prior knowledge or skills are required",
        "This is a very basic api testing course for beginners"
      ],
      "description": "Welcome to the world of API Automation Testing.\nThis course is created for complete beginners.  This is going to be very easy and interesting.\nAPI Testing with Katalon Studio - Step by Step for Beginners\nWe will start from scratch and I will guide you step by step on how to create an API testing project with Katalon Studio.\nWill also do sample SOAP & REST API testing projects\nIn this course we will learn:\nHow to setup API Testing Project\nHow to test SOAP\nHow to test REST\nHow to do validations\nHow to deal with HTTP methods - GET, POST, PUT, DELETE\nHow to generate results and reports\nHow to run from command line\nHow to use Jenkins for Continuous Integration\nHow to do API Chaining\nSample SOAP API Testing project\nSample REST API Testing project\nAnd much more...\nDo not worry if you have never used Katalon Studio or done API Testing. I will guide you from scratch.\nLet's Get Started...",
      "target_audience": [
        "Anyone who wants to learn API web services testing",
        "Anyone who wants to learn how to create API testing project with Katalon Studio",
        "Anyone who wants to create API Automation Testing project from scratch"
      ]
    },
    {
      "title": "TestNG Complete Guide: Mastering Test Automation with TestNG",
      "url": "https://www.udemy.com/course/testng-complete-guide-mastering-test-automation-with-testng/",
      "bio": "Comprehensive TestNG Course for Software Testing Professionals for Test Automation Framework",
      "objectives": [
        "Gain a strong foundation in TestNG: Understand the core concepts, annotations, and configurations of TestNG.",
        "TestNG configurations and parallel test execution: Learn how to configure TestNG to run tests in parallel and maximize test execution efficiency.",
        "Data-driven testing with TestNG: Explore the techniques of data-driven testing using TestNG's built-in data providers and custom data sources.",
        "TestNG listeners and reporting: Discover how to utilize TestNG listeners to extend test execution behavior and generate comprehensive test reports.",
        "Advanced TestNG features: Dive deep into advanced features such as test priorities, test groups, dependency management, and test data manipulation.",
        "TestNG integration with other frameworks: Learn how to integrate TestNG with popular frameworks like Selenium WebDriver and JUnit.",
        "Best practices and tips for effective test automation: Understand industry best practices and gain valuable tips for working with TestNg"
      ],
      "course_content": {
        "Introduction": [
          "TestNg Overview, TestNg vs JUnit and TestNg and Automation Testing",
          "Connect with me",
          "Introduction: Starting with TestNg",
          "Writing our First TestNg Test"
        ],
        "Assertions in TestNg": [
          "Hard Assertion",
          "Soft Assertion"
        ],
        "Basic Annotations in testNg": [
          "Before Method and After Method",
          "Before Class and After Class"
        ],
        "Managing tests using TestNg XML files": [
          "Creating TestNg XML File",
          "Include and Exclude Tests"
        ],
        "More TestNg Annotation concepts": [
          "Before Test and After Test",
          "Before Suite and After Suite"
        ],
        "Running TestNg Tests in Parallel": [
          "Parallel"
        ],
        "TestNg Quiz": [
          "TestNg Quiz 1"
        ]
      },
      "requirements": [
        "Basic understanding of Java programming language.",
        "Familiarity with software testing concepts and terminology.",
        "Some experience with test automation frameworks (e.g., Selenium WebDriver)"
      ],
      "description": "Join this comprehensive TestNG course designed for both beginners and experienced testers to enhance their testing skills and improve test automation efficiency. TestNG is a powerful testing framework widely used in the industry for writing and executing automated tests. In this course, you will learn everything you need to know about TestNG, from the fundamentals to advanced techniques.\nMaster the powerful TestNG framework and take your test automation skills to the next level with this comprehensive course. Whether you're a seasoned software tester or a QA professional looking to enhance your automation abilities, this course will equip you with advanced TestNG techniques and best practices that can be applied to any Java-based test automation project.\nIn this course, you will learn how to harness the full potential of TestNG to design, execute, and manage robust test suites efficiently. Through practical examples and hands-on exercises, you'll explore a wide range of TestNG features and concepts, including test configuration, test execution control, parameterization, data-driven testing, grouping and prioritizing tests, reporting, and more.\nBy the end of this course, you will have a solid understanding of TestNG's capabilities and be able to leverage its powerful features to build maintainable, scalable, and reliable test automation frameworks. Whether you work in Agile or traditional software development environments, the skills you gain in this course will help you optimize your testing efforts and deliver high-quality software with confidence.",
      "target_audience": [
        "Software testers and quality assurance professionals looking to enhance their test automation skills.",
        "Automation engineers who want to leverage TestNG for building robust test frameworks.",
        "Developers involved in test automation projects who wish to learn TestNG for more effective testing.",
        "Students and professionals aspiring to start a career in software testing or test automation."
      ]
    },
    {
      "title": "JUnit 5. Develop Your Unit Testing Skills Quickly and Easily",
      "url": "https://www.udemy.com/course/junit-java-unit-testing/",
      "bio": "Learn JUnit 5 Java unit testing to write and maintain quality code. Examples, guided coding practice, videos, and more.",
      "objectives": [
        "How to write and run unit tests with JUnit",
        "How to interpret and customize test output",
        "How professionals use JUnit to write and maintain quality code",
        "Test-driven development",
        "JUnit asserts, parameterized tests, and test suites",
        "How to use JUnit to performance-test your code",
        "Workflow patterns for bugfixes and feature requests",
        "How and why to repeat tests, and how to specify test execution order"
      ],
      "course_content": {
        "Course Introduction and Overview": [
          "Introduction and Overview",
          "Course Requirements"
        ],
        "Junit Fundamentals": [
          "@Test, assertEquals : theory",
          "@Test, assertEquals : application",
          "assertNotEquals : theory",
          "assertTrue, assertFalse : theory and application",
          "Development practice: bugfix",
          "Development practice: feature request",
          "Development practice: test-driven development",
          "Quiz: @Test, assertEquals, assertNotEquals, assertTrue, assertFalse",
          "assertNull, assertNotNull : theory and application",
          "assertArrayEquals : theory",
          "assertArrayEquals : application",
          "fail : theory and application",
          "@disabled : theory",
          "Quiz: assertNull(), assertNotNull(), assertArrayEquals(), fail, @Disabled"
        ],
        "JUnit Test Ordering and Repetition": [
          "@Order : theory",
          "Looping Over Assert Statements : theory",
          "@RepeatedTest : theory and application",
          "@BeforeEach, @AfterEach : theory",
          "@BeforeEach, @AfterEach : application",
          "@BeforeAll, @AfterAll : theory and application",
          "Elaborate Ordering Combinations : practice",
          "Quiz: @Order, @RepeatedTest, @BeforeEach, @AfterEach, @BeforeAll, @AfterAll"
        ],
        "JUnit Test Display Customization": [
          "Custom Error Messages : theory",
          "Custom Error Messages : application",
          "@DisplayName : theory",
          "@Nested : theory and application",
          "Quiz: @DisplayName, @Nested"
        ],
        "Test Suites": [
          "@SelectPackages : theory",
          "@SelectClasses : theory",
          "@IncludeTags, @ExcludeTags : theory",
          "@SuiteDisplayName, @UseTechnicalNames : theory"
        ],
        "JUnit In Greater Depth": [
          "assertTimeout : theory",
          "assertTimeout : application",
          "assertTimeoutPreemptively : theory",
          "Quiz: assertTimeout(), assertTimeoutPreemptively()",
          "assertThrows : theory",
          "assertThrows : application",
          "assumptions : theory",
          "assumptions : application",
          "Quiz: assertThrows, assumeTrue, assumeFalse, assumingThat"
        ],
        "Parameterized Tests": [
          "@ValueSource : theory",
          "@NullSource, @EmptySource : theory",
          "@EnumSource : theory",
          "@CsvSource : theory",
          "@CsvFileSource : theory",
          "@MethodSource : theory",
          "ArgumentsAccessor : theory",
          "Interpolated Display Output : theory"
        ],
        "Conditional Test Execution": [
          "Conditional Test Execution : theory"
        ],
        "Course Conclusion": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "Basics of Java programming (creating classes and methods, for loops, basic data structures such as String, ArrayList, etc.).",
        "Basic skills of working with an integrated development environment (IDE). We will be using Eclipse as our IDE. But if the student has a decent background in another mainstream IDE, they should be fine.",
        "Access to the internet to download and install JUnit (JUnit is free and open-source)."
      ],
      "description": "Learn how to effectively use JUnit 5 to write and maintain quality code.  The course comes complete with lecture videos, downloadable source code, practice quizzes, projects, and demonstrations.  You will be learning JUnit specifically, but you will also be learning the technique and rationale of test-driven development.  The course is taught by a straight-A Ivy League computer science graduate with classroom teaching experience and industry experience in the subject matter. Upon completing this course, you will have gained practical skills that you can apply immediately to your software development efforts.",
      "target_audience": [
        "Professional developers",
        "University computer science students",
        "Beginning JUnit users",
        "Experienced JUnit users looking to expand their knowledge"
      ]
    },
    {
      "title": "QA Testing: From Zero to Robot Framework",
      "url": "https://www.udemy.com/course/qa-testing-from-zero-to-robot-framework/",
      "bio": "Learn from zero all you need to know about QA and automation with Robot Framework",
      "objectives": [
        "Create master test plans and specific test plans",
        "Create test cases, in positive and negative scenarios and edge test cases",
        "Show report of your testing",
        "Type of testing and the most popular ones: Functional and Regression",
        "How to test in Scrum methodology",
        "Install and use Robot Framework",
        "Create your own code for automation of the test cases"
      ],
      "course_content": {
        "Introduction to this course": [
          "Course Overview"
        ],
        "What is a QA Tester and what do you need to start in this job": [
          "Intro and What a QA Tester is",
          "Background and Skills",
          "Last Thoughts"
        ],
        "QA Testing Fundamentals": [
          "Introduction to this section",
          "Levels and types of testing: Intro",
          "Levels and types of testing: Unit, Integration and System Testing",
          "Levels and types of testing:Testing Methods",
          "Levels and types of testing: Testing Types",
          "What are the best type of testing for these scenarios?",
          "Review your progress",
          "Testing Plan",
          "Doing a Test Plan",
          "What is a Test Case",
          "Test Scenario",
          "Creating an example of a Test Case",
          "Types of Test Cases: Happy path, non happy path and Edge Test Cases",
          "Creating a Test Case",
          "Review your progress",
          "Manual Vs. Automation",
          "Functional and Regression Testing",
          "Scrum",
          "Simulating a task for a QA tester",
          "How to use Jira",
          "Testing Management tools part 01",
          "Testing Management tools part 02",
          "Lifecycle of a bug",
          "Reporting Bugs",
          "API Testing: Intro",
          "API Testing: What is and how to perform it",
          "API Testing: Running a Test with Postman"
        ],
        "Automation: Robot Framework - Overview and Installing": [
          "Robot Overview: Introduction",
          "What is a Framework?",
          "Robot Framework History",
          "Robot Framework Features",
          "Robot Framework and Selenium",
          "ONLY FOR WINDOWS: Installing Python and PIP",
          "Modifying the $PATH Variable for WINDOWS and Installing the chromedriver",
          "MAC: Installing Robot Framework on your computer",
          "WINDOWS: Installing Robot Framework on your computer",
          "Selenium2Library and SeleniumLibrary",
          "Installing Sublime Text 3",
          "Installing Chromedriver",
          "Modifying the $PATH variable for MAC",
          "ONLY FOR WINDOWS: Verifyng the installation is correct",
          "Inspecting elements in a website",
          "Creating my first code for automation",
          "Code: First Automation with Robot",
          "Running a suite",
          "SeleniumLibrary and Selenium2Library",
          "SeleniumLibrary limitations",
          "Drivers for Firefox, Edge, Safari and IE"
        ],
        "Automation: More Automated Testing": [
          "Introduction to this section",
          "Creating Keywords and passing arguments",
          "Creating a file for resources",
          "Loops & Arrays",
          "Conditionals: Run Keyword if",
          "Checking the reports",
          "Congratulations & Last advices"
        ]
      },
      "requirements": [
        "You have to be familiarized with the software systems",
        "No any programming knowledge"
      ],
      "description": "In this course, we will go through all the concepts related to the quality assurance in the software industry. We will navigate all the foundations for a test plan, testing coverage and how to create test cases and bug reports. We will also learn how to jump into automation in the easiest and less complicated way, working with Robot Framework and Selenium Library",
      "target_audience": [
        "People who are starting in the QA world.",
        "Students who looking for a good way to start and learn how to automated their manual testing",
        "People who wants to start working as QA testers for software industry"
      ]
    },
    {
      "title": "Specflow BDD: C# Testing Mastery",
      "url": "https://www.udemy.com/course/specflow-bdd-c-testing-mastery/",
      "bio": "Unlock the Power of Behavior-Driven Development in C# with Specflow: Master Automation Testing & Boost Software Quality",
      "objectives": [
        "Automation Testing",
        "SpecFlow in C# from basics to advanced",
        "Learn best practices from true programmers",
        "Learn how to write scalable, readable and maintainable clean code",
        "You will learn source code of the tutor. All homework is completed with the Trainer",
        "Visual Studio",
        "NUnit3",
        "SpecFlow Basics",
        "Specflow in C#",
        "NuGet Packages Basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication Plan",
          "How to Use Resources",
          "Tips to improve your course taking experience"
        ],
        "Course Materials": [
          "What is the project we will work on?",
          "What will we achieve in the end?"
        ],
        "BDD Overview": [
          "What is BDD?",
          "Real life samples from BDD",
          "Home task review BDD",
          "What is SpecFlow BDD in C#"
        ],
        "Development Environment Setup": [
          "Visual Studio Community Edition Installation",
          ".NET 6 - Installation"
        ],
        "Test migration from NUnit to SpecFlow": [
          "Setup right structure of project, folders, add dependency",
          "Create simple scenario to add two numbers",
          "Move simple Get Board scenario to BDD format in one single class",
          "Move simple Get Board scenario to BDD format in one single class - Hometask"
        ],
        "C# SpecFlow Basics": [
          "Remove test data from steps, step arguments",
          "Remove test data from steps, step arguments - Hometask",
          "Data tables for couple parameters in steps",
          "Data tables for couple parameters in steps - Hometask",
          "Outlines",
          "Outlines - Hometask",
          "Backgrounds"
        ],
        "C# SpecFlow Advanced": [
          "Ways to share data between steps",
          "Ways to share data between steps - Hometask",
          "Step arguments transformers",
          "Step arguments transformers - Hometask",
          "Hooks and tags",
          "Hooks and tags - Hometask"
        ],
        "Extra: Cmd Tests Run and Reports": [
          "Run tests via CMD",
          "Extent Reports"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Basic knowledge of C#"
      ],
      "description": "Welcome to the ultimate guide to mastering Behavior-Driven Development (BDD) with Specflow in C#!\nIn this comprehensive course, you will embark on a journey to become a testing maestro, seamlessly integrating Specflow into your C# projects. Whether you're a seasoned developer or just starting, this course is your key to unlocking the full potential of BDD for automated testing.\nWhat You'll Learn:\nFoundations of BDD: Grasp the core concepts and principles behind Behavior-Driven Development.\nHands-On C# Implementation: Dive deep into C# as you learn to implement Specflow in real-world projects.\nPractical Test Automation: Master the art of creating robust and maintainable automated tests using Specflow.\nIntegration and Best Practices: Seamlessly integrate BDD into your development workflow and apply industry best practices.\nWhy Enroll:\nExpert Guidance: Learn from industry experts with years of experience in Specflow and BDD.\nCareer Advancement: Boost your resume with valuable automation testing skills.\nProject-Based Learning: Gain practical experience through hands-on projects and exercises.\nLifetime Access: Access to course materials and updates for a lifetime.\nWho Is This For:\nSoftware Developers and Engineers\nQA Engineers and Testers\nAnyone looking to enhance their testing skills with Specflow BDD in C#\nBy the end of this course, you'll be equipped with the knowledge and skills to confidently implement Specflow in your C# projects, ensuring robust, efficient, and high-quality software development.\nJoin us now, and let's embark on this journey to elevate your testing expertise!\nEnroll today and take the first step towards becoming a Specflow BDD master!",
      "target_audience": [
        "People who want to learn SpecFlow BDD from scratch to advanced level",
        "Students who want to become more valuable SDETs on careers market"
      ]
    },
    {
      "title": "Diseño de pruebas de software (software testing)",
      "url": "https://www.udemy.com/course/diseno-de-pruebas-de-software/",
      "bio": "Diseño y técnicas de pruebas de software aplicables con ejemplos y código (software testing, quality assurance)",
      "objectives": [
        "Adquirir habilidades para realizar mejores pruebas de software",
        "Conocer técnicas que estan en el estado del arte del testing",
        "Aprender técnicas de diseño de pruebas que preguntan en los examenes de certificación ISTQB",
        "A poner en práctica los conocimientos adquiridos con multiples ejemplos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Técnicas tradicionales de diseño de pruebas": [
          "Clases equivalentes",
          "Análisis de valores en la frontera",
          "Tablas de decisión",
          "Ejercicio Tablas de decisión",
          "Pruebas basadas en riesgos",
          "Método de todos los pares - Pairwise testing",
          "Ejercicios Pairwise",
          "Diagramas de transición de estado",
          "Ejercicio - Diagramas de transicion de estado",
          "Pruebas basadas en cadenas de markov"
        ],
        "Automatización de pruebas": [
          "Introducción a la automatización en las pruebas de software",
          "Pruebas basadas en propiedades (property based testing)",
          "Ejercicio de codificacion - Pruebas basadas en propiedades, parte 1",
          "Ejercicio de codificacion - Pruebas basadas en propiedades, parte 2",
          "Introducción a fuzzores",
          "Fuzzy testing",
          "Ejercicio de codificación - Fuzzy testing",
          "Pruebas de volumen"
        ],
        "Pruebas en producción": [
          "Canary testing"
        ],
        "Introducción al testing sobre machine learning": [
          "Cómo probamos software basado en modelos de aprendizaje de maquina?",
          "Matriz de confusion",
          "Metricas I",
          "Fairness"
        ]
      },
      "requirements": [
        "Nociones básicas de programación en cualquier lenguaje",
        "Nociones básicas de pruebas de software",
        "Conocimientos básicos de unix/linux/osx",
        "Conocimientos básicos de python",
        "Conocimientos basicos de bash/sh"
      ],
      "description": "El testing de software es una actividad que va mas alla de una simple verificación o validación; es ir mas alla de lo evidente, es pensar lo inimaginable y ayudar a que los productos esten preparados para eso.\nEn este curso aprenderas técnicas de diseño de pruebas de software, que van desde las técnicas mas sencillas e intuitivas hasta las que se encuentran en el estado del arte del testing de software.\nEl objetivo principal del curso es ayudarte a adquirir las habilidades necesarias para que agregues valor a tus proyectos o productos de software.\nRealizaremos ejercicios para reforzar los aprendido y de igual manera practicaremos con ejercicios con codigo en vivo.\nAdicionalmente debe ser un refuerzo para preparar tu examen de certificación ISTQB.",
      "target_audience": [
        "Este curso es ideal para testers que estan empezando",
        "Testers con mediana experiencia que quieran reafirmar conocimientos",
        "Interesados en pruebas de software o software testing",
        "Testers que estén preparandose para el examen ISTQB"
      ]
    },
    {
      "title": "Performance Testing using Gatling - Beginner Level",
      "url": "https://www.udemy.com/course/performance-testing-using-gatling/",
      "bio": "Learn Gatling from scratch | Learn to do Performance Testing",
      "objectives": [],
      "course_content": {
        "Setting the stage": [
          "Performance Testing Goals",
          "Gatling Introduction and Features",
          "Course Overview and Approach",
          "Questions and Feedback",
          "Useful Resources"
        ],
        "Get Started": [
          "Install Gatling",
          "Bundle Structure",
          "Bundle Structure Quiz"
        ],
        "Gatling Recorder": [
          "What you will learn in this Section",
          "Recorder UI",
          "Recorder Mode - HTTP Proxy",
          "Recorder Mode - HAR Converter",
          "Recorded Simulation Structure",
          "Run Recorded Simulation",
          "Recorder UI"
        ],
        "Gatling Script Development Environment": [
          "Development Environment - What you Need",
          "Create Gatling Project using Maven",
          "Understand Project Structure",
          "Create First Script - Let's Start",
          "Create First Script - Add package and imports",
          "Create First Script - Class declaration and HTTP Config",
          "Create First Script - Add Scenario definition",
          "Create First Script - Add HTTP Header",
          "Create First Script - Add Simulation definition",
          "Create First Script - Run completed script",
          "Gatling Simulation Structure"
        ],
        "Gatling Script Enhancement": [
          "What you will learn in this Section",
          "Record a Script",
          "Pause Time",
          "Silent Requests and Resources",
          "Checks - Part 1",
          "Checks - Part 2",
          "Assertions",
          "Clearing Cache and Cookies",
          "Feeders",
          "Loops"
        ],
        "Simulation Setup": [
          "User load simulation- Think before you script",
          "Load Simulation Using Gatling",
          "Simulation Setup"
        ],
        "Gatling Performance Test Reports": [
          "What you will learn in this Section",
          "Report Generation and Structure",
          "Gatling Performance Metrics in Detail"
        ],
        "Are you Gatling ready? Check yourself!": [
          "Final Assignment- do it all",
          "Thank You",
          "References Used",
          "What Next - Gatling Advanced Level Course",
          "What you will learn in Gatling advanced level course"
        ]
      },
      "requirements": [
        "Knowledge required to do performance testing from Gatling tool is covered from scratch - hence you are good to go even if you are a beginner in testing or development",
        "Basic knowledge of any programming language is good to have"
      ],
      "description": "Ensuring user experience when an application gets live is always critical and so is Performance testing. Performance testing already rules the testing domain, and as the trends say, it will remain crucial for businesses. Following Darwin's theory, it is evolving and adapting to the needs of these days organizations. One cannot afford to stay behind and hence should embrace tools and technologies which meet testing demands of today's app and environment.\nGatling comes in flying colours as it is powerful and perfect for DevOps environment. Once you know about Gatling, you will love to reap its benefits over traditional performance testing tools.\nThis course has been designed by two industry experts who excel in the field of performance testing backed by years of experience on complex applications. We have curated this course in such a manner to make our students learn in the simplest way possible. We understand that to learn any new concept hands-on is a must. Keeping this in mind our tutorials first make you comfortable with the concept and then we do a hands-on activity. We have picked real-life examples to demonstrate concepts.\nWe believe a good learner will always do by their hand and will surely come up with challenges. We are there to answer your queries and look into your issues whenever needed. You will love your decision to learn Gatling and picking our course.\nBest of luck and happy learning!!",
      "target_audience": [
        "Testers, Developers, Test Managers",
        "Anyone who wants to implement performance testing in personal or enterprise project",
        "Anyone who is already doing traditional performance testing but wants to switch to a tool which matches the ongoing trends in software industry",
        "Anyone who wants to reap benefits of powerful performance testing tool - Gatling"
      ]
    },
    {
      "title": "Intro to Manual and Automation Software Testing with ChatGPT",
      "url": "https://www.udemy.com/course/intro-to-manual-and-automation-software-testing-with-chatgpt-h/",
      "bio": "Discover how QA Engineers and Software Testers can leverage GenAI for both manual and automated software testing",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone. This course is about how GenAI can be useful for a Manual Software Tester or a Tester who would like to automate with the help of AI.\n\nThe course will be useful for testers:\nAbsolute beginners in Software Testing who want to learn the usage of one of the most popular AI ChatGPT for Manual and Automation Testing\nExperienced Manual Software Testers who want to learn how to automate test cases with the help of ChatGPT in a short time\nAnyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT\n\nWe want to warn you right away that this is not a complete course. This is a free course with answers to the 3 most popular\naspects of usage of chatGPT for Manual Software Testing as well as demonstrates 1 how to write a Selenium/Java test case\nwith the help of ChatGPT as a part of the  Automation Software Testing. After passing it, you will be able to understand\nwhether the training format offered by us is suitable for you. The full course is available on the udemy inside the list of our courses:\nManual and Automation Software Testing with help of ChatGPT\n\nTo help you understand how and whether we need ChatGPT for testing, we have prepared two parts of our  full course:\nFirst, we learn how to use ChatGPT for Manual Software Testing\nIn particular, we will familiarize ourselves with such aspects of using ChatGPT for Manual Software Testing as:\n1. Review Software Business Requirements\n2. Assistance with building the Test Plan\n3. Assistance with test monitoring and control\n4. Assistance with Test Design of manual test cases\n5. Assistance with writing a bug report\n6. Assistance in API testing\n7. Assistance in creating test tables, lists\n8. Assistance in writing SQL queries\n9. Assistance with Data Generation\nEach of these aspects of using ChatGPT for software testing is shown in real-life examples to better understand the purpose of using this tool.\nAlso, in the course, we will discuss the top 3 AI alternatives to ChatGPT for Software Testing. In particular, we will take a look at alternatives such as Bard AI (By Google), Bing AI (By Microsoft), and Chatsonic AI by Writesonic\n\nIn this course, a manual QA Engineer can learn how to successfully write and then run the test script for the desired test case within one or a few days.\nFor that reason, we have prepared the Second part of the course, How to use ChatGPT for Automation Software Testing\nIn particular, you will overview the lectures:\n1. How to write and run a Selenium/Java test case with ChatGPT.\n2. HOW TO INSTALL JAVA JDK\n3. HOW TO INSTALL IntelliJ IDEA Community Edition\n4. HOW TO SETUP Selenium WebDriver Chrome\n5. Selenium WebDriver browserOptions()\n6. Selenium Locators XPath\n7. Selenium Locators XPath With Help Of CHATGTP\n8. Selenium/Java Interactions with web elements\n9. TestNG assertions With the Help Of CHATGTP\n10. Test report for Selenium Java test script With Help Of CHATGTP\n11. Selenium/Java test case for a search with the help of Chat GPT\n12. Selenium/Java test case for Sorting on a web page with the help of Chat GPT\n13. Selenium/Java test case for navigating to PLP>PDP>Minicard with the help of Chat GPT\n\nEach lecture from the part of the course on using chatGTP for automation software testing is shown on our website where we\ncreated separate components to show everything in practice. For each of our lessons, we created a separate class in the\nIntelliJ IDEA Integrated Development Environment. So it will be easier for you to find the code you need in the future.\nThe final code will be available in the lecture materials and on our website. Using this code, we can open our webpage, run it,\nand check the results.\n\nWe hope you will enjoy the course and feel free to write reviews and send topics that you would like to see,\nPrepare a cup of coffee or another favorite drink and enjoy the course!",
      "target_audience": [
        "Absolute beginners in Software Testing",
        "Experienced Software Testers who want to learn how to use ChatGPT for testing purposes",
        "Every Manual Software Tester who receives requests from the client for automation of the testing",
        "Anyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT"
      ]
    },
    {
      "title": "JMeter Performance Testing - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/jmeter-performance-testing-step-by-step-for-beginners/",
      "bio": "learn JMETER Step by Step from scratch with real world examples",
      "objectives": [
        "By the end of this course you will have complete hands-on knowledge on working with JMETER",
        "In-depth understanding of all features and settings of JMETER",
        "You will be able to create end-to-end Testing projects with JMeter",
        "Complete hands-on knowledge on How to run your tests from GUI and command-line",
        "How do you Plan a Performance Test. What things to Take Care in Real World Projects",
        "Things to take care when doing a Real World Performance Testing Project",
        "how to keep your work and application safe while maintaining integrity during performance testing",
        "******* You will get complete support with all your doubts, questions and issues *******"
      ],
      "course_content": {
        "GETTING STARTED": [
          "What is JMeter",
          "JMETER QUIZ 1",
          "How to install Java",
          "How to install JMeter",
          "Understand JMeter GUI",
          "JMETER QUIZ 2"
        ],
        "GET STARTED WITH PERFORMANCE TESTING ON JMETER": [
          "1st JMeter Test",
          "JMETER QUIZ 3"
        ],
        "PERFORMANCE TEST SETUP AND BEST PRACTICES": [
          "How to Prepare for Performance Test",
          "JMETER QUIZ 4"
        ],
        "JMETER ELEMENTS": [
          "Basic Test Elements",
          "Listeners",
          "JMETER QUIZ 5"
        ],
        "RECORDING": [
          "How to record and test end-to-end scenarios in JMeter"
        ],
        "PLUGINS MANAGER": [
          "How to use Plugins Manager"
        ],
        "CMD": [
          "Command LIne",
          "Real World Scenarios",
          "Real Time Results On CMD",
          "JMETER QUIZ 6"
        ],
        "ASSERTIONS": [
          "How to use Assertions",
          "JMETER QUIZ 7"
        ],
        "DATA DRIVEN TESTING": [
          "Data Driven Testing using CSV Files",
          "How to loop CSV file using While Controller",
          "JMETER QUIZ 8"
        ],
        "LOGS & DEBUGGING": [
          "How to find LOGS",
          "Step by Step Debugging"
        ]
      },
      "requirements": [
        "***** No prior specialized knowledge is required *****",
        "Every lecture will start from scratch and you do not need any prior knowledge on JMeter and Performance Testing",
        "There will be real world examples and demo",
        "Do not worry if you have never done any testing. I will start from scratch and go up step-by-step with hands-on",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "This course is created for complete beginners\nGet started with JMETER step by step\nIf you are a complete beginner, this course is for you. Very basic step by step videos to guide you from scratch.\nIn this session we will learn\nWhat is JMeter\nHow to download and install\nUnderstand JMeter GUI\nHow to create basic performance tests\nHow to create real world performance tests\nData Driven Testing\nRun from command-line\n\n\nJMeter is easy and with this course, I have tried to make it even easier to learn.\n\nYou will also find guidance on Things to take care when doing a Real World Performance Testing Project and how to keep your work and application safe while maintaining integrity during performance testing\n\n\nBy the end of this course you will have complete hands-on knowledge on working with JMETER\nIn-depth understanding of all features and settings of JMETER\nYou will be able to create end-to-end Testing projects with JMeter\nComplete hands-on knowledge on How to run your tests from GUI and command-line\nHow do you Plan a Performance Test. What things to Take Care in Real World Projects\n\n\nI am sure you will enjoy this course and get a lot of knowledge and information.\nLet's Get Started with JMETER",
      "target_audience": [
        "Anyone who wants to learn JMETER from scratch",
        "If you want to create Performance Testing projects with JMeter",
        "Beginners in JMeter and Performance Testing",
        "Learn how to plan a real world performance test project"
      ]
    },
    {
      "title": "Selenium for Beginners using Java step by step",
      "url": "https://www.udemy.com/course/selenium-using-java-for-automation-test-development/",
      "bio": "A hands on quick start into Web Testing using Selenium WebDriver",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup and Verify Java & Selenium",
          "Setting up Chrome Driver"
        ],
        "Link to source code": [
          "Source code"
        ],
        "WebDriver": [
          "Introduction to WebDriver",
          "WebDriver In-Action",
          "Different Browser Types and WebDriver",
          "Setting IE WebDriver from ground-up"
        ],
        "TestNG": [
          "Introduction to TestNG",
          "Setup and using TestNG"
        ],
        "WebElement": [
          "Introduction to WebElement",
          "Coding with WebElement",
          "HTML Coding : Understsanding HTML Basics",
          "Understanding Radio Buttons"
        ],
        "Resource Locators": [
          "Introduction to Resource Locators",
          "Using Chrome Developer Console for Resource Locators - Most Reliable Way",
          "Resource Locators by ID",
          "Resource Locators by Name",
          "Resource Locators by XPATH"
        ],
        "Waits": [
          "Why we need Waits in Selenium and Types of Waits",
          "Implicit Wait and How to Implement",
          "Explicit Wait and How to Implement"
        ],
        "Assertions": [
          "Introduction to Assertions",
          "Hard Assertion and How-To"
        ]
      },
      "requirements": [
        "Yes, you should have background in Java. To keep focus on topic of interest this course will teach selenium for students with Java background."
      ],
      "description": "Starting with very fundamentals of selenium, covers the core topics of Selenium WebDriver.\nCourse emphasis on \"Why\" aspect followed by How for each lesson or topic. Which will assure thorough understanding of subject, which can applied in real world situations.\nWhile expects student to be from Java background but still provides a primer on Java to start with.Tips and tricks from Instructor who is actively working in Test Automation.\nNow updated with course code. Link at the beginning.",
      "target_audience": [
        "Beginners in Test Automation who has background in Java fundamentals.",
        "Who has knowledge i bits and pieces but want to consolidate in a structured manner",
        "Who wants to build a career in test automation with Selenium and Java",
        "Converting from manual testing to automation engineer"
      ]
    },
    {
      "title": "Web Performance Test Automation using Sitespeed",
      "url": "https://www.udemy.com/course/automated-browser-performance-testing-using-sitespeed/",
      "bio": "Automated test to measure performance of website, generate metrics to see how web page is built, how to make it faster",
      "objectives": [
        "Learn automated web performance testing using Sitespeedio that helps you measure the performance of your website",
        "Develop Scripts using Simple Java Script and Selenium Web Driver",
        "Test web sites using real browsers, simulating real users connectivity and collect important user centric metrics like Speed Index",
        "Analyse how your page is built and give feedback how you can make it faster for the end user",
        "Set-up InfluxDB to store performance data",
        "Set-up Grafana to generate interactive charts",
        "Collect and keep data on how your pages are built so you can easily track changes.",
        "Continuous Integration with GIT"
      ],
      "course_content": {
        "Installation": [
          "What we will Learn ? Just for Fun",
          "Configure GIT",
          "Create Browser Performance Gitlab Project",
          "Install Sitespeedio and Dependencies"
        ],
        "Automate Test Cases and Analyse Metrics": [
          "Write Sample Test Case",
          "Quiz Sample Test Case",
          "Test Case to Analyze Multiple Pages",
          "Quiz to Analyze Multiple Pages",
          "Analyze Asset Performance",
          "Quiz Asset",
          "Analyze Largest Files and Slowest Response",
          "Analyze Domain Performance",
          "Analyze Web Page Issues",
          "Quiz Web Page Performance",
          "Analyze Details and Summary"
        ],
        "Design Test Scripts": [
          "Context",
          "Script with Selenium Web Driver",
          "Script without Selenium Web Driver",
          "Script for Login to website",
          "Environment Variables",
          "Quiz Scripts"
        ],
        "InfluxDB , Grafana, and GIT Pipeline": [
          "Influxdb Database",
          "Create Database",
          "Grafana Dashboard",
          "Git Pipeline",
          "Quiz Influxdb/Grafana/Git",
          "Conclusion"
        ],
        "Random Clicks": [
          "Sporadic Failures in Identifying UI Elements",
          "Execute Script inside Docker"
        ],
        "Setup and Execution on AWS EC2": [
          "Install Docker",
          "Install Graphite",
          "Install Grafana",
          "Link Graphite and Grafana",
          "Install Sitespeed and Execute Test",
          "Execute Test"
        ],
        "Resources [code]": [
          "Pipeline",
          "Budget File"
        ]
      },
      "requirements": [
        "Anybody can write code - from manual tetsers to automation testers",
        "Very Basic awareness of Git, Java Script, Pipeline, Continuous Integration will be added advantage",
        "No prior experience in Testing or Performance Testing or in Programming Language is required"
      ],
      "description": "We will learn automated performance testing using Sitespeedio to measure the performance of web pages\nAnalyze how your page is built and give feedback on how you can make it faster for the end-user.\nDesign simple JavaScript test cases to test web sites using real browsers, simulating real user connectivity and collect important metrics like the speed of web pages\nCollect and keep data on how your pages are built so you can easily track changes.\nRunning in your continuous integration to find web performance regressions early\nMonitoring your performance in production, alerting on regressions.\nCourse Content\nCreate a project in Git and clone the same\nInstall Sitespeedio dependencies\nWrite Simple JavaScript file to test web pages\nWrite Simple Java Script file with Selenium web driver to measure web page performance\nLearn various commands to execute test cases on various browsers like Chrome, Firefox\nDesign Git Pipeline and generate test artifact (continuous integration)\nSetup environment variables and execute test scripts\nSetup InfluxDB to store performance test results\nSetup Interactive performance dashboard with the help of Grafana\nMeasure performance, accessibility, and best practices score from the Coach\nImportant Note\nThis is part 1 of the training. It's very basic. We will learn simple techniques to do browser-based performance testing. You can easily learn and apply the techniques in your projects. We expect that you explore more and learn while designing scripts.\nRandom Clicks\nYou will find this section inside the course curriculum. It contains random thoughts, more examples, troubleshooting, some audio clips. While uploading this training, I have observed that I need to cover a few things in more depth. So, I thought to record a new Video and upload inside the Random Clicks section.\n\n\nConnect with me through Udemy dashboard/ My website / Facebook page",
      "target_audience": [
        "This is course is directed to Testers, Developers, System/ Software Architects, Requirements Engineers, Managers, Students , Stakeholders like Product Managers, Product Owners",
        "Testers - This training is useful for Manual Tester, Functional Automation Tester, as well as for Performance Testers. Testers will learn simple techniques to detect performance defects on any project running on Microsoft Windows Operating System. Are you working on JMETER, Automation Tools like Coded UI, Unified Test Professional or Model Based Testing Tools? Go ahead and Enroll for this Training.",
        "Developers - Learn Performance Testing concepts and avoid defect slippage at later stages. Verify whether changes have introduced any regression defects",
        "Requirement Engineering - Understand Performance Testing while designing Customer Requirements",
        "Students / Freshers - Highlight your Resume with Performance Testing",
        "If you are student or a college pass-out, this is exactly what you are looking for to open the doors for software industry"
      ]
    },
    {
      "title": "CodeceptJS - Acceptance Test Automation Success",
      "url": "https://www.udemy.com/course/practical-e2e-testing-with-codeceptjs/",
      "bio": "Practical E2E Testing With CodeceptJS",
      "objectives": [
        "Acceptance Test Automation",
        "CodeceptJS",
        "BrowserStack",
        "Continuous Integration",
        "Cross Browser Acceptance Test Automation",
        "How to debug and fix failing tests",
        "How to debug and fix flaky tests",
        "GitLab CI"
      ],
      "course_content": {
        "Preparation for End 2 End Testing with CodeceptJS": [
          "Preparation for End 2 End Testing with CodeceptJS"
        ],
        "Setup CodeceptJS with WebdriverIO": [
          "Setup CodeceptJS with WebdriverIO"
        ],
        "Create Your First CodeceptJS Test": [
          "Create Your First CodeceptJS Test"
        ],
        "Run Your First CodeceptJS Test Locally": [
          "Run Your First CodeceptJS Test Locally"
        ],
        "Run Test on BrowserStack Against with the Safari Browser": [
          "Run Test on BrowserStack Against with the Safari Browser"
        ],
        "How to Debug & Fix a Failing E2E Test": [
          "How to Debug & Fix a Failing E2E Test"
        ],
        "Run a CodeceptJS Test in GitLab´s Continuous Integration (CI) Environment": [
          "Run a CodeceptJS Test in GitLab´s Continuous Integration (CI) Environment"
        ],
        "Delicious Test Reports With Allure": [
          "Delicious Test Reports With Allure"
        ]
      },
      "requirements": [
        "Basic technical experience, command line, git"
      ],
      "description": "Get fast automation results!\nEasily automate manual tests in a very practical way.\nBe guided how to write and run automated end 2 end tests in CI and in the cloud successfully.\nThis course is made for developers with technical background, basics are not explained, the book focuses on the main topic: Modern end to end testing for the web with CodeceptJS.",
      "target_audience": [
        "Developers with need to write reliable e2e test automation fast",
        "QA engineers who want to build with modern tools (Node js)",
        "Anybody interested in test automation, cross browser test automation and continuous integration of test automation"
      ]
    },
    {
      "title": "Preparation for ISTQB Foundation Level (CTFL V4.0) + 2025",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl/",
      "bio": "Prepare for the ISTQB® Foundation Level Certification Exam and Learn Key Software Testing Techniques and Strategies",
      "objectives": [
        "Achieve ISTQB CTFL Certification and Learn Key Software Testing Techniques and Strategies.",
        "Learn how software testing contributes to the success of software projects and helps mitigate risks.",
        "Understand the test process, test levels, and test types.",
        "Learn how to prioritize test cases, execute tests efficiently, and report defects using industry best practices.",
        "Discover how to create well-structured, requirement-based test cases that ensure comprehensive test coverage."
      ],
      "course_content": {
        "Fundamentals of Testing": [
          "What is Testing?",
          "Why is Testing Necessary?",
          "What are Test Objectives ?",
          "Annotated Questions: Exemplify Why Testing is Necessary",
          "Testing and Debugging",
          "Errors, Defects, Failures, and Root Causes",
          "Annotated Questions : Root Cause, Error, Defect, and Failure",
          "Static & Dynamic Testing",
          "Verification & Validation in Software Testing",
          "Testing’s Contributions to Success",
          "Testing and Quality Assurance",
          "Annotated Questions: Recall the relation between Testing and Quality Assurance",
          "Testing Principles",
          "Annotated Questions: Explain the 7 Testing Principles",
          "Test Conditions, Test Cases, Test Procedures, and Test Suites",
          "Test Activities, Testware and Test Roles",
          "Test Planning",
          "Test Monitoring and Control",
          "Test Analysis",
          "Test Design",
          "Test Implementation",
          "Test Execution",
          "Test Completion",
          "Annotated Questions: Summarize the different Test Activities and Tasks",
          "Test Process in Context",
          "Testware",
          "Traceability between the Test Basis and Testware",
          "Roles in Testing",
          "Essential Skills and Good Practices in Testing",
          "Generic Skills Required for Testing",
          "Whole Team Approach",
          "Independence of Testing",
          "Quiz 1 : Fundamentals of Testing"
        ],
        "Testing Throughout the Software Development Lifecycle": [
          "Testing in the Context of a Software Development Lifecycle",
          "The Waterfall : Sequential Software Development",
          "Iterative and Incremental Software Development",
          "Impact of the Software Development Lifecycle on Testing",
          "Good Testing Practices",
          "Testing as a Driver for Software Development",
          "Test-Driven Development Approaches",
          "DevOps and Testing",
          "Shift-Left Approach",
          "Retrospectives and Process Improvement",
          "Test Levels",
          "Component Testing",
          "Component Integration Testing",
          "System Testing",
          "System Integration Testing",
          "Acceptance Testing",
          "Test Types",
          "Functional Testing",
          "Non-functional testing",
          "Confirmation Testing & Regression Testing",
          "Maintenance Testing",
          "Impact Analysis in Maintenance Testing",
          "Key Concepts from Chapter 2",
          "Quiz 2: Testing Through the SDLC"
        ],
        "Static Testing": [
          "Static Testing Basics",
          "Work Products Examinable by Static Testing",
          "Value of Static Testing",
          "Benefits of Early Stakeholder Feedback in Review Process",
          "Work Product Review Process",
          "What is Review & Review Types",
          "Roles and Responsibilities in Reviews",
          "Success Factors for Reviews",
          "Quiz 3: Static Testing"
        ],
        "Test Analysis and Design": [
          "Testing Analysis and Design",
          "Test Technique Categories",
          "Black-box Test Techniques",
          "Equivalence Partitioning",
          "Boundary Value Analysis",
          "Decision Table Testing",
          "State Transition Testing",
          "White-Box Testing",
          "Statement Testing and Statement Coverage",
          "Branch Testing and Branch Coverage",
          "The Value of White-box Testing",
          "Experience-based Test Techniques",
          "Error Guessing",
          "Exploratory Testing",
          "Checklist-Based Testing",
          "Collaboration-based Test Approaches",
          "Collaborative User Story Writing",
          "Acceptance Criteria",
          "Acceptance Test-driven Development (ATDD)",
          "Quiz - Test Analysis and Design"
        ],
        "Managing the Test Activities": [
          "Test Planning",
          "Purpose and Content of a Test Plan",
          "Agile Planning vs. Traditional Planning",
          "Tester's Contribution to Iteration and Release Planning",
          "Entry Criteria and Exit Criteria",
          "Estimation Techniques",
          "Test Case Prioritization",
          "Test Pyramid",
          "Testing Quadrants",
          "Risk Management",
          "Risk Definition and Risk Attributes",
          "Project Risks and Product Risks",
          "Product Risk Analysis",
          "Product Risk Control",
          "Test Monitoring, Test Control and Test Completion",
          "Metrics used in Testing",
          "Purpose, Content and Audience for Test Reports",
          "Communicating the Status of Testing",
          "Configuration Management",
          "Defect Management",
          "Quiz - Managing the Test Activities"
        ],
        "Test Tools": [
          "Tool Support for Testing",
          "Benefits and Risks of Test Automation",
          "Quiz - test Tools"
        ],
        "Sample Exams": [
          "CTFL Exam Simulator 1"
        ]
      },
      "requirements": [
        "No previous knowledge is required",
        "A basic understanding of software development is handy but nor required"
      ],
      "description": "ISTQB® Foundation Level Certification Course – Your Path to Success\nAre you looking to build a solid foundation in software testing and earn an internationally recognized certification? Preparing for the ISTQB® Foundation Level Certification Exam (CTFL) is the first step toward becoming a professional software tester and strengthening your career prospects in the software testing and quality assurance industry.\nWhat You Will Learn:\nMaster the Core Concepts of Software Testing – Gain a deep understanding of fundamental testing principles, methodologies, and techniques. Learn how software testing contributes to the success of software projects and helps mitigate risks.\nUnderstand the Key Issues in Software Testing – Explore real-world challenges testers face, including defect prevention, risk-based testing, test management, and software quality assurance. Develop the problem-solving skills needed to tackle software testing complexities effectively.\nLearn to Design Effective Test Cases – Discover how to create well-structured, requirement-based test cases that ensure comprehensive test coverage. Learn how to use test design techniques like equivalence partitioning, boundary value analysis, and decision tables to validate business requirements and user interactions.\nEnhance Your Test Planning and Execution Skills – Understand the test process, test levels, and test types. Learn how to prioritize test cases, execute tests efficiently, and report defects using industry best practices.\nAdvance Your Career with ISTQB® Certification – Earning the ISTQB® CTFL certification demonstrates your expertise in software testing principles and enhances your credibility as a testing professional. Whether you are new to testing or an experienced QA engineer, this certification helps you stand out in the competitive job market.\nLearn from an Industry-Recognized Expert in Software Testing and Quality – Get guidance from experienced instructors with extensive knowledge of ISTQB® certification standards and real-world testing experience. Benefit from practical examples, hands-on exercises, and expert insights to prepare effectively for the exam.\nWhy Choose ISTQB® CTFL?\nGlobally recognized certification in software testing.\nCovers industry-standard best practices and methodologies.\nHelps you qualify for high-paying QA roles in IT and software development.\nOpens doors to advanced ISTQB® certifications like Test Analyst, Agile Tester, and Test Manager.\nWhat Makes This Course Unique?\nComprehensive Software Testing Knowledge – You will learn the fundamentals of software testing, its impact on software quality, and its role in the software development lifecycle.\nExam-Focused Preparation – My primary goal is to ensure you pass the ISTQB exam on your first attempt. That’s why this course includes:\nHundreds of real-world practice questions.\nExam tips and strategies for every topic.\nDetailed explanations of difficult concepts to make sure you fully understand them.\nContinuous Support and Guidance – You are not alone in your learning journey. I am actively available to answer your questions and support you throughout your preparation.\n\n\nJoin this course and take the first step toward becoming a certified software tester! With structured learning, hands-on practice, and expert guidance, you’ll be well-prepared to ace the ISTQB exam and advance your career in software testing.\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "Anyone interested in becomming an ISTQB Certified Software Tester",
        "Junior testers and senior testers who want to start using common terminology",
        "Beginner software tester future superstars"
      ]
    },
    {
      "title": "Rest API Testing using SoapUI | Real time Application",
      "url": "https://www.udemy.com/course/rest-api-testing/",
      "bio": "With groovy Scripting language | Data Validations & Processing",
      "objectives": [
        "Start automating REST API using SoapUI free as well as pro version",
        "Ready to face Rest Automation testing interviews"
      ],
      "course_content": {
        "Introduction to Webservice / API": [
          "What is WebServices",
          "WebService Example",
          "Advantage of WebService over WebBased Application",
          "Difference between API and WebService",
          "Different type of Services : Soap and Rest"
        ],
        "Setup Environment": [
          "Setup SoapUI Free version",
          "Setup SoapUI Pro version",
          "Difference between Soap and Rest Services",
          "UDDI"
        ],
        "Start Writing Test Cases in SoapUI": [
          "What is SoapUI",
          "Hierarchy in SoapUI"
        ],
        "Work with REST API [Same Functionality in SOAPUI FREE and PRO]": [
          "Different methods used in REST API",
          "First REST Test Case / Rest Request test step",
          "First REST Test Case : POST Request",
          "First REST Test Case : PUT Request",
          "First REST Test Case : DELETE Request",
          "End to End Scenario with multiple REST API"
        ],
        "Correlation : Fetch Data from Response and Use it in Request": [
          "Json : Fetch dynamic data"
        ],
        "Understand JSON & Its Assertions": [
          "Json Understanding",
          "Json Path basics | Find Json Path",
          "Json Path Advance",
          "JSON ASSERTION : Json Path Count & Existence",
          "JSON ASSERTION : Json Path Match"
        ],
        "Groovy : Basic to Advance": [
          "Setup Groovy Environment",
          "Class and Object",
          "Groovy Basics",
          "Groovy Programming kickoff",
          "Condition Handling",
          "Programming Exercise : Number Swapping",
          "Programming Exercise : Check Even/ Odd",
          "Programming Exercise : Grading System",
          "Working with Arrays",
          "For Loop",
          "While Loop",
          "For Each Loop",
          "String Handling",
          "Programming Exercise - Prime Number",
          "Programming Exercise - Fabonnaci Number",
          "Programming Exercise - Reverse String",
          "Programming Exercise - Palendrome",
          "Groovy - Read data from file using FileReader",
          "Groovy - Read data from file using BufferedReader"
        ],
        "Correlation : Fetch Data from Response and Use it in Request - FREE Version": [
          "Fetch json respone by groovy"
        ]
      },
      "requirements": [
        "Windows machine with SoapUI free version"
      ],
      "description": "REST (Representational State Transfer) is an architectural style, and an approach to communications that is often used in the development of Web service The use of REST is often preferred over the more heavyweight SOAP(Simple Object Access Protocol) style because REST does not leverage as much bandwidth, which makes it a better fit for use over the Internet. The SOAP approach requires writing or using a provided server program (to serve data) and a client program (to request data).\nREST sits on this stack in a way that makes it easy for humans to understand what's being exchanged while allowing computers to talk to one another efficiently. You may have also heard of some of the other technologies that can reside here, such as SOAP (which requires a fair amount of data and computing power and is not really appropriate  for the constrained resources of mobile applications), JMS (which is specific to Java applications) and XML-RPC (which has many of the same problems as SOAP without any of the benefits of standardisation).\n\nThis course cover following items\n1 Create REST Request\n2 Different type of REST methods\n3.Groovy programming",
      "target_audience": [
        "Person looking opportunity in API testing",
        "Manual testers want to jump into API automation"
      ]
    },
    {
      "title": "ALM Octane - The Basics for Developers",
      "url": "https://www.udemy.com/course/alm-octane-the-basics-for-developers/",
      "bio": "Maximize your development work as part of an unified and integrated platform",
      "objectives": [],
      "course_content": {
        "ALM Octane Developer": [
          "Explore the landing page",
          "Overview",
          "Introduction to My Work module",
          "Integrate Jenkins as CI Server",
          "Add a pipeline job from Jenkins",
          "Install and configure IDE Plugin (IntelliJ)",
          "Observing code commits and changes as part of a pipeline run",
          "Working with Pull Requests",
          "Configure code commits and pull requests",
          "Configure SCM Template Links source, diff and branch",
          "Importance of Pull Request in relation to Backlog Items User Stories & Defects",
          "Integrate your Testing Framework as Pipeline Job",
          "Integrate Maven Cucumber Framework as Pipeline Job",
          "Define Parameter Set for Pipelines",
          "Review Testruns results of a pipeline execution",
          "Assignment for Failure Analysis",
          "Create Defect after failure analysis",
          "Create Defect in the Issues Module",
          "Work with Defects relevant for you",
          "Import Backlog Items"
        ]
      },
      "requirements": [
        "No requirements or prerequisites."
      ],
      "description": "In this course, you will learn how to work with the ALM Octane Developer Access with the following focus areas:\nOverview of ALM Octane Developer Access\nHow to setup and integrate your pipelines from Jenkins\nIntegrate IDEs such as Visual Studio, Eclipse or IntelliJ\nIntegrate Testing Frameworks as part of the pipeline runs\nUnderstand the tools provided by ALM Octane\nUpon successful completion of this course, you will be eligible to:\nbe more productive\nbetter collaborate\nuse agile methodologies in a smarter way\nsupport the software delivery lifecycle\ntake on lead roles in your projects and advance in your career",
      "target_audience": [
        "Developers",
        "Testers",
        "Product Owners",
        "Product Managers"
      ]
    },
    {
      "title": "Introduction to Black Box Software Testing Techniques",
      "url": "https://www.udemy.com/course/introduction-to-black-box-software-testing-techniques/",
      "bio": "Better software testing with black box software testing techniques",
      "objectives": [
        "Learn several black box software testing techniques",
        "Be a better software tester, test analyst or software engineer",
        "Use basic black box testing techniques in your projects",
        "Develop better test cases with improved coverage"
      ],
      "course_content": {
        "INTRODUCTION": [
          "Introduction",
          "Your Instructor"
        ],
        "BLACK BOX TESTING TECHNIQUES": [
          "Why is Testing Necessary",
          "What is Black Box Testing",
          "Software Development Models",
          "Equivalence Partitioning",
          "Boundary Value Analysis",
          "Decision Table Testing",
          "State Transition Testing"
        ],
        "BONUS": [
          "BONUS LECTURE: Learn more about software testing techniques"
        ]
      },
      "requirements": [
        "Basic knowledge of software development lifecycle"
      ],
      "description": "Some Review Comments by Course Students:\n\"The examples used for the four types of testing were useful.\"\n\"Really good starting point for ISTQB Certified Tester Foundation Level CTFL course.\"\n\"a clear and precise presentation delivery which is easy to understand and digest.\"\n\n\nCourse Description:\nIn this software testing course, you will get to understand software testing basics, with an introduction to concepts and examples of black-box testing.\nThis is suitable for anyone entering the software engineering or software testing profession, as job applicants may be able to use black box software testing techniques to answer technical interview questions.\nThis course is also good for existing software testing professionals wanting to refresh their fundamental knowledge on software testing, as it helps build better test cases and test coverage. Technical managers and test managers supervising software testers would also benefit from this course, giving them the necessary knowledge to review test cases and test activities.\nIn addition, this course is a good starting point for those studying for the ISTQB Certified Tester Foundation Level CTFL exam, as black-box testing techniques is a significant part of the syllabus.\nDo note that this is a basic course and probably not suitable for those seeking more advanced-level content.",
      "target_audience": [
        "Those intending to pursue a software testing career.",
        "Software developers, testers, business analysts, technical managers.",
        "Anyone with an interest in software testing.",
        "Experienced testers wanting a refresher of black box testing techniques.",
        "Beginner software testers and software engineers"
      ]
    },
    {
      "title": "CYPRESS | Step-by-Step for Beginners | Hands-On Training",
      "url": "https://www.udemy.com/course/cypress-step-by-step-for-beginners-hands-on-training/",
      "bio": "learn CYPRESS Step by Step from scratch with real examples and Demo",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "***** No prior specialised knowledge is required *****",
        "Every lecture will start from scratch",
        "There will be real world examples and demo"
      ],
      "description": "This course is created for complete beginners.\nGet started with CYPRESS step by step\nIf you are a complete beginner at Cypress, this course is for you. Very basic step-by-step videos to guide you from scratch.\nIn this session, we will learn\nWhat is Cypress\nFeatures of Cypress\nHow to setup Cypress project from scratch\nElements and Assertions\nCypress with JavaScript and TypeScript\nPage Object Model\n\nCypress is a next-generation front end testing tool built for the modern web\nCypress is most often compared to Selenium; however, Cypress is both fundamentally and architecturally different. Cypress is not constrained by the same restrictions as Selenium.\nThis enables you to write faster, easier, and more reliable tests\nYou will be learning everything from scratch. You do not need any existing knowledge to start on this course. Wherever required, I will give you examples and will show you with a hands-on demo\nBy the end of this course, you will have good hands-on knowledge of working with Cypress\nUnderstanding of all features and settings of Cypress\nYou will be able to create Cypress tests and projects\nThere will be real-world examples and practical demonstrations\nDo not worry if you have never done programming or automation testing, I will start from scratch and go up step-by-step with hands-on\nI will be guiding you with demo and examples\n\n\nLet's Get Started...\nRaghav Pal",
      "target_audience": [
        "Anyone who wants to learn CYPRESS from scratch",
        "If you want to create Automation Testing projects with Cypress",
        "Beginners in Cypress Automation Testing"
      ]
    },
    {
      "title": "RESTful API Testing with Postman",
      "url": "https://www.udemy.com/course/restful-api-testing-with-postman/",
      "bio": "Getting started with Postman and Newman for Software Developers, Testers and DevOps",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Postman Overview"
        ],
        "API Testing with Postman": [
          "Sending API Requests",
          "Understanding API responses",
          "Manage APIs with Collections",
          "Variables and Environments",
          "Environment and Global Variables",
          "Writing Test Scripts",
          "Test Scripts",
          "Collection Runner"
        ],
        "Testing Workflow with Twitter API": [
          "Authorization",
          "Testing Automation"
        ],
        "Run collection with Newman": [
          "Newman: Installation and Overview",
          "Newman: Iterations & Delay Requests",
          "Newman: Running a folder from a collection",
          "Newman: Passing environment and global variables with command",
          "Newman: Export reports and exit after first failed iteration",
          "Newman"
        ]
      },
      "requirements": [
        "You should have basic understanding of RESTful APIs",
        "You should have basic programming knowledge, specially Javascript",
        "You should know about HTML and JSON format",
        "You should know how to access JSON data using Javascript",
        "You should know how to install and run commands in the terminal"
      ],
      "description": "Postman is a great tool for testing APIs, which helps building APIs faster. If you are new to Postman, this course will help you to get started with the software and test your APIs in no time.\nI have divided this course into several sections. I will start by showing the overview of Postman. Then I will discuss about sending API requests & responses. I will show how to manage APIs into collections and share with anyone. Then I will cover variables, environments & how to write test scripts. Also I will show you how to automate your testing with combination of all these tools & collection runner. Final topic will be showing you a complete testing workflow with Twitter API.",
      "target_audience": [
        "Software Developers",
        "Software Testers",
        "DevOps",
        "Anyone new to Postman & Newman"
      ]
    },
    {
      "title": "Integração contínua com testes, utilizando Jenkins",
      "url": "https://www.udemy.com/course/integracao-continua-jenkins/",
      "bio": "Aprenda a adicionar testes Unitários, de API Rest e Funcionais à sua esteira de integração / entrega contínua CI/CD",
      "objectives": [
        "Configurar o Jenkins para fazer a integração contínua da sua aplicação",
        "Trabalhar com jobs do Jenkins do tipo Freestyle e Pipeline",
        "Integrar testes unitários ao processo de integração contínua",
        "Integrar testes de API Rest ao processo de integração contínua",
        "Integrar testes funcionais ao processo de integração contínua",
        "Configurar projetos JAVA para ter análises de código feitas pelo Sonarqube",
        "Utilizar o Quality Gate do Sonarqube para definir critérios de aceites na aplicação",
        "Criar ambientes e dependências utilizando o Docker e docker-compose",
        "Otimizar o tempo de execução de testes funcionais através do Selenium Grid em um ambiente criado pelo Docker"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico de JAVA"
      ],
      "description": "Seja muito bem vindo(a) ao curso de Integração contínua com testes, utilizando Jenkins.\nNesse curso, você irá aprender como criar um processo automatizado de integração e deploy contínuo CI/CD para a sua aplicação. Sempre, claro, passando por vários processos de testes visando garantir que novas versões do seu produto entrem no ar de forma rápida e segura.\nIremos adicionar ao processo de integração contínua testes unitários, de serviço e funcionais, utilizando ferramentas populares como JUnit, Rest Assured e Selenium (inclusive, para este último, configurando uma suíte para execução de testes paralelizados em um Grid criado pelo Docker). Também faremos análise de qualidade e cobertura de código testado, através do Sonarqube. Veremos o histórico dos testes e avisos sempre que tiver problemas na sua construção.\nAlém disso, vamos aprender a estruturar nosso processo em duas formas distintas, através de jobs do Jenkins do tipo Freestyle (que podemos configurar tudo através da interface do Jenkins). E também criaremos um processo completo do tipo Pipeline, onde centralizará todo o processo em um script (Jenkinsfile) dinâmico e poderoso.\nContaremos também com o uso de ferramentas importantes e atuais como o Docker (e docker-compose), Spring Boot, Postgres, Tomcat e Selenium Grid.\nEntão é isso, espero poder te encontrar nas próximas aulas. Até lá! ;)",
      "target_audience": [
        "Analistas interessados em criar um processo integração e deploy contínuo da sua aplicação",
        "Desenvolvedores interessados em adicionar mais qualidade no seu processo de deploy",
        "Testadores que desejam entender seu papel no processo de desenvolvimento como um todo"
      ]
    },
    {
      "title": "Programming with Apache JMeter for Testing",
      "url": "https://www.udemy.com/course/programming-with-apache-jmeter-for-testing/",
      "bio": "Mastering preprocessor and script programming in JMeter",
      "objectives": [
        "Be able to use JMeter variables and preprocessors",
        "Be able to program with JMeter components",
        "Be able to encapsulate code for testing",
        "Enhance testing skills with preprocessor script"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Testing Environment Setup",
          "Request Authentication Details",
          "Testing APIs with Authentication"
        ],
        "JMeter Variables and PreProcessors": [
          "Introduction",
          "JMeter Variables",
          "JMeter PreProcessors",
          "JMeter PreProcessors with POST Request",
          "JMeter PreProcessors with HTTP Header"
        ],
        "Script Programming in PreProcessor": [
          "Introduction",
          "Logging in PreProcessor Script",
          "URL in PreProcessors Script",
          "Query Parameters in PreProcessor Script",
          "Post Body in PreProcessor Script",
          "HTTP Headers in PreProcessor Script",
          "Script for All Endpoints (1)",
          "Script for All Endpoints (2)",
          "PreProcessor Script File"
        ]
      },
      "requirements": [
        "Basic knowledge of JMeter and Java"
      ],
      "description": "Nowadays, more and more HTTP APIs are protected by some authentication mechanisms such as API Key, time-stamping request, request signature and so on. These mechanisms make API testing more challenging. Thus we can not send a test request directly with Apache JMeter. Instead, some extra procedures should be done first.\nIn this course, you will learn how to modify such JMeter HTTP sample requests both manually and programmatically. We will focus on JMeter components such as Variables, PreProcessors, HTTPSampler, HeaderManager and so on. We will set up the testing environment first, then send sample requests with authentication manually. And we will learn how to use JMeter Variables and PreProcessors to modify our sample requests. Finally, we will focus on script programming in Apache JMeter, especially JSR223 PreProcessor. In script programming, we will learn how to manipulate the current sampler, variables, sample URL, post body, http headers and so on. Eventually, we will write a single script for all testing endpoints, which contains all the knowledge we will learn.\nBy the end of the course, you will learn script programming with JMeter components and be able to encapsulate your code for JMeter. Finally, your testing skills will be enhanced and you will become a JMeter expert.",
      "target_audience": [
        "JMeter users",
        "Web API testers",
        "Testers who want to dive deeper in JMeter"
      ]
    },
    {
      "title": "Selenium Automation in Excel",
      "url": "https://www.udemy.com/course/selenium-automation-in-excel/",
      "bio": "Automation in Excel using Selenium framework",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction and installation of Selenium",
          "Chrome Version 115 - Announcement & Update"
        ],
        "Selenium Fundamentals with Real Life Examples": [
          "Google page - Part 1",
          "Amazon page - Part 2",
          "Amazon page - Part 3",
          "Amazon Page - Part 4 Copy Product Name and Price and paste it into a cell",
          "Gmail Emails - Part 1",
          "Gmail Emails Send Emails with attachments - Part 2",
          "Console Selectors"
        ]
      },
      "requirements": [
        "No programming knowledge is needed all will be explained."
      ],
      "description": "Hello my name is Daniel Andrei and I will be your instructor for this Selenium course. I have graduated with a Bachelors degree in Software Engineering from England where I have studied different programming languages. I have a passion for IT and customer service.\nIn this course I will be teaching you how to use Selenium in Excel VB using real life examples and walking you step by step through the code I will also be explaining each VB code that we will be using so if you are a beginner this course is perfect for you.\nWhat is Selenium?\nSelenium is a open source automated testing framework, with it you can automate tasks in the browser, we will be using it in Excel VB.\nSelenium supports different browsers but in this course we will use Chrome.\n\nWhat you’ll learn\nLearn Selenium framework in Excel.\nLearn fundamentals of VBA: accessing cell values, inserting data into cells, forms, for loops, if statements, while loops.\nLearn how to install Selenium\nLearn how to automate sending emails with attachments, inserting data, copying data and saving it in Excel\nCreate interactive forms using VBA that make it easier to automate tasks in the browser.",
      "target_audience": [
        "People that want to learn about automation in Excel using Selenium framework with real life examples."
      ]
    },
    {
      "title": "Learn to Create BDD Framework using Cucumber and Java",
      "url": "https://www.udemy.com/course/learn-to-create-bdd-framework-using-cucumber-and-java/",
      "bio": "A Step-By-Step process to build your own BDD Framework Using Cucumber and Java",
      "objectives": [
        "Learn to Design your Own BDD Framework",
        "Learn to write a script in Gherkin Language",
        "Learn to create a Feature file, StepDefinition file and testRunner file",
        "Link the stepDefinition file to Feature file",
        "Learn to apply Page Object Model Design pattern in BDD Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Understanding Frameworks",
          "TDD Basics",
          "BDD Basics",
          "Gherkin Language",
          "BDD Framework Structure",
          "BDD Framework Implementation Part 1"
        ],
        "BDD Framework Implementation Part 2": [
          "Session 1",
          "Session 2",
          "Session 3",
          "Session 4",
          "Session 5"
        ],
        "Discussing some Interview Questions": [
          "Interview Questions"
        ]
      },
      "requirements": [
        "Java Programming Basics",
        "Selenium WebDriver",
        "TestNG Annotations"
      ],
      "description": "This course is designed to learn developing your own BDD Framework using Cucumber and Java, We will start from the basics and move step by step to the advanced level.\nIn this course, I have tried to add almost all types of scenarios that will be used in the organization for scripting. I have covered everything in this course that is required to prepare for the interview.\nThis course is having the longest duration, as I have tried to explain each and every concept in detail with various examples for better understanding.\nIf you enroll in this course then you will be able to tackle the majority of the interview questions on your own.\nBelow are some of the benefits of the BDD Framework :\nSupports BDD Approach\nCode is Easy to Understand and write the Feature file\nWe can create multiple different scenarios in feature file which is easy to understand by Clients also\nOne Scenario can be executed multiple times using the different data sets, by making use of Scenario Outline and different data can be retrieved from Examples\nAs the Steps in the Scenario will be mapped to the corresponding method in the StepDefinition file which can be reused in all the scenarios wherever needed\nWe can group the scenarios using Tags\nWe can easily associate each scenario with the test case, which will help us to understand which scenarios are automated and which are still pending.",
      "target_audience": [
        "This course is for Automation Testing Professionals, Managers, Testers, Developers for testing Web Application using automation test scripts"
      ]
    },
    {
      "title": "Apache WebServer: do Básico ao Avançado",
      "url": "https://www.udemy.com/course/apache-webserver-do-basico-ao-avancado/",
      "bio": "Aprenda tudo sobre o Apache, mantenha seu ambiente seguro e com as boas práticas de mercado!",
      "objectives": [
        "Utilizar ambientes virtualizados nos laboratórios com o uso do Vagrant",
        "Instalar, configurar e gerenciar servidores Apache",
        "Entendimento da arquitetura do produto, tópicos avançados de processamento",
        "Tuning de S.O",
        "Executar na prática os módulos mais utilizados em ambientes críticos",
        "Configurar um ambiente seguro, com SSL e boas práticas de segurança do Apache",
        "Testes de performance e Tuning do ambiente",
        "Monitorar e efetuar troubleshooting de problemas",
        "Aplicar técnicas de SEO para aumentar o ranking de seu site no buscador da Google"
      ],
      "course_content": {
        "Arquitetura e instalação do ambiente": [
          "Arquitetura do Ambiente",
          "Configuração do ambiente no Windows",
          "Faça o backup do ambiente via Vagrant"
        ],
        "Instalação e configuração do Apache": [
          "Arquitetura do Apache",
          "Ajustes de configuração do sistema operacional",
          "Instalação do Apache",
          "Instalação do Apache via compilação",
          "Comparação de instalação entre código fonte e yum",
          "Estrutura do Apache e principais comandos",
          "Entenda o funcionamento do MPM Prefork e Worker"
        ],
        "Configuração de aplicação Web": [
          "Configurando a primeira aplicação web - parte I",
          "Configurando a primeira aplicação web - parte II",
          "Configurar o modulo php no apache"
        ],
        "Configuração de Logs": [
          "Entendendo o funcionamento dos Logs",
          "Configurar política de criticidade de logs",
          "Configurar formatação de log - LogFormat",
          "Configurar rotação de logs - CustomLog e rotatelogs"
        ],
        "Erros comuns": [
          "Erro 404 - FavIcon",
          "Erro Robots.txt",
          "Erro de permissão de bind na porta 80",
          "Problema de abertura de pagina pelo host - Firewall",
          "Criando páginas de erro amigáveis"
        ],
        "Monitoria": [
          "Instalação mod_status",
          "Instalação do GoAccess",
          "Instalação do htop"
        ],
        "Boas práticas de segurança": [
          "Desligar o modo TRACE",
          "Ocultar informações do Apache",
          "Negar acesso a determinados diretorios",
          "Como proteger a versão do php"
        ],
        "Encripitando dados com Apache - Configuração de SSL": [
          "Adicionando mais um foward de porta no vagrant",
          "Introdução ao SSL",
          "Instalando openssl, mod_ssl e geração de certificados SSL",
          "Configuração do modulo mod_ssl - Criando virtualhost com SSL",
          "Testando o virtualhost com ssl"
        ],
        "Testes de Carga": [
          "Saiba como utilizar o AB - Execute testes de carga via linha de comando",
          "Apache JMeter - Dê um toque mais profissional em seus testes"
        ],
        "Modulos": [
          "Uso do mod_rewrite para redirecionar http para https",
          "Uso do mod_rewrite para redicionar html para php",
          "mod_substitute - rescreva suas páginas",
          "Configurando o mod_deflate - aumente a velocidade de suas páginas web"
        ]
      },
      "requirements": [
        "Conceitos básicos de operação do Windows e Linux, como manipulação de diretórios (move, delete)",
        "Criação e edição de arquivos texto",
        "Execução de programas"
      ],
      "description": "O curso Apache WebServer do Básico ao Avançado foi inteiramente pensado para ser o mais completo do mercado sobre o tema em lingua portuguesa. Com esse material é possivel vivenciar o passo a passo da ferramenta, no mais prático método do \"aprenda fazendo\".\nConfira o roteiro e bom curso!\nSeção 1\nApresentação da arquitetura do ambiente com emprego do Vagrant como plataforma de virtualização juntamente com o VirtualBox.\nComo criar o ambiente virtualizado com o uso do CentOS como sistema operacional.\nSeção 2\nInstalação e configuração do Apache, destrinchando o funcionamento interno do produto e suas funcionalidades.\nExecucao passo a passo de todos os comandos necessários de instalação, bem como o Tuning do sistema operacional para o melhor uso do webserver.\nSeção 3\nConfiguração da primeira aplicação web .\nAtravés de exemplos, criacao de um website estático e também configuracao do mod_php.\nSeção 4\nConfiguração de Logs do Apache, entendendo as formatações e os níveis de criticidade, além da rotação de logs de forma nativa.\nSeção 5\nApresentação dos erros mais comuns na configuração de uma aplicação web\nExibição de técnicas de SEO, como configuração do Robots.txt, evitar erros 404 etc.\nSeção 6\nConfiguração de ferramentas de monitoria, fundamentais para momentos de crise e troubleshooting.\nSeção 7\nAplicação de boas práticas de segurança no Apache, com o intuito de reduzir a possibilidade de ataques no servidor web.\nSeção 8\nAprenda a configurar um certificado SSL no Apache, desde a execução dos comandos openssl até a configuração do serviço https\nSeção 9\nApresentação das ferramentas mais utilizadas no mercado para testes de carga em ambientes web.\nSeção 10\nApresentação dos módulos mais utilizados do mercado para executar redirecionamentos de páginas, substituição de strings e compactação de conteúdo.",
      "target_audience": [
        "Estudantes de Computação",
        "Administradores de infraestrutura que pretendem se familiarizar com o Apache",
        "Administradores que já possuem conhecimento em outros servidores web (IIS por ex)",
        "Desenvolvedores Web (PHP, Python, Perl) que desejam aumentar o conhecimento do funcionamento de servidores web",
        "Usuários windows e linux que gostariam saber melhor o funcionamento, configuração e instalação do Apache Web Server",
        "Analistas de Middleware e Infraestrutura"
      ]
    },
    {
      "title": "Testes Automatizados - Curso completo com Selenium e Java",
      "url": "https://www.udemy.com/course/testes-automatizados-curso-completo-com-selenium-e-java/",
      "bio": "Com certeza este é um dos cursos mais completos sobre automação de testes de software. Tudo em um único lugar!",
      "objectives": [
        "Dominar os fundamentos dos testes automatizados de software.",
        "Aprender as ferramentas e frameworks mais utilizados no mercado para automação de testes de software.",
        "Aprender como criar um projeto de testes automatizado do zero, e transformar ele em um produto profissional.",
        "Receber várias dicas e boas práticas da linguagem e convenções aplicadas pelo mercado.",
        "Conhecer os principais padrões de projetos utilizados em testes de software PageObject e PageFactory.",
        "Criar um projeto de teste completo baseado em um case real de mercado."
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Entendendo o que é QA": [
          "Entendendo o QA e suas competências.",
          "Material de apoio"
        ],
        "O que é testes de Software": [
          "Mercado e faixas salarais",
          "Os principais tipos de testes"
        ],
        "Descobrindo o produto, planejando e criando os casos de teste": [
          "Sistema para Controle de Produtos",
          "O que testar - Login",
          "O que testar - Produtos",
          "Planejar mais 15 casos de testes na tela de Controle de Produtos"
        ],
        "O que são testes automatizados": [
          "Teste automatizado x Manual",
          "Configurando o ambiente",
          "Conhecendo o VsCode"
        ],
        "Mãos a obra": [
          "Criando o projeto base",
          "Criando o primeiro projeto de testes",
          "Refatorando o código - Boas práticas de POO",
          "Refatorando o código - PageObject e PageFactory",
          "Baixar o projeto atual"
        ],
        "Evoluindo nos testes": [
          "Criando os testes de Login - Parte 1",
          "Criando os testes de Login - Parte 2",
          "Criando os testes de Login - Parte 3",
          "Finalizando os testes de Login",
          "Criando os testes de Produto - Pate 1",
          "Criando os testes de Produto - Parte 2",
          "Criando os testes de Produto - Parte 3",
          "Criante testes de produto - Parte 4",
          "Documentando nosso projeto de teste"
        ],
        "Mapenando qualquer elemento": [
          "Mapenando elementos."
        ]
      },
      "requirements": [
        "Primeiramente ser determinado, querer buscar conhecimento e aprender cada vez mais para ser um profissional de alto nível.",
        "Conhecimento básico de lógica de programação",
        "Conhecimento básico de Java"
      ],
      "description": "************************************************************************\nTestes Automatizados - Curso completo com Selenium e Java\n************************************************************************\n\nEste curso foi criado com intuito de ajudar milhares de pessoas a preencherem esta grande lacuna que temos no mercado, isso devido à falta de pessoas capacitadas a testar software.\nAtualmente as vagas para Analista de Qualidade, QA e Programador de Testes, tem crescido cada vez mais devido à alta demanda de mercado. Conforme o cenário atual, preparamos um curso rico em conhecimento e detalhes com LITERALMENTE TUDO, que você precisa aprender para cair de cabeça nesta grande oportunidade.\n\n\nEste curso foi desenvolvido cuidadosamente pensando em pessoas que poderiam compor times de grandes empresas, com isso focamos na prática de forma simples e intuitiva.\n\nCremos que ao final deste curso, o aluno terá um conhecimento sólido sobre testes automatizados, além disso, terá exemplos práticos para criação de qualquer outro projeto de testes, seguindo as principais técnicas utilizadas no mercado.\n\n\nSe você deseja ser um profissional diferenciado, reconhecido no mercado e conquistar grandes oportunidades, faça este curso.\nNosso desejo:\nQue você consiga dominar os fundamentos de testes automatizados e todas as técnicas envolvidas para criação dos mesmos.\nQue possar ser bem remunerado no mercado pelo seu excelente trabalho e qualidade.\nQue consiga evoluir e migrar para posições relevantes em projetos da empresa onde trabalha.\nQueremos que seja um profissional cobiçado e prestigiado pelas empresas no mercado.\nSugerimos fazer este curso com calma, vendo e fazendo os exemplos demonstrados em aula.",
      "target_audience": [
        "Pessoas que queiram se destacar profissionalmente na área de Teste de Software.",
        "Pessoas que tem o desejo de aprender a testar um Software de maneira automatizada para conseguir uma oportunidade no mercado.",
        "Analistas de qualidades que desejam evoluir como testadores automatizados.",
        "QAs que procuram evoluir em seu conhecimento com Testes Automatizados.",
        "Testadores cansados de ficar fazendo seu trabalho manual e acreditam, que podem automatizar suas tarefas para utilizar seu tempo em outras coisas mais produtivas."
      ]
    },
    {
      "title": "WebDriverIO-WDIO-TS-BDD-Cucumber-GitLab-CI/CD-Docker-Grid",
      "url": "https://www.udemy.com/course/webdriverio-typescript-cucumber-gitlab-cicd-docker-grid/",
      "bio": "Automation Testing using webdriverio, typescript, cucumber, gitlab and docker. Build latest professional framework e2e",
      "objectives": [
        "WebdriverIO using Typescript and Cucumber",
        "TyeScript Programming",
        "Docker",
        "GitLab Pipelines",
        "Web Automation Testing",
        "Automation Framework Design Pattern",
        "World Class efficient professional framework",
        "End 2 End Test- GitLab Pipeline with Docker runner",
        "YML Files",
        "Grid Execution"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course & Instructor"
        ],
        "Software Installation & Setup - Mac": [
          "Installing NODE, TYPESCRIPT & check versions",
          "Installing Intellij, configuration & plugins"
        ],
        "Software Installation & Setup - Windows": [
          "Installing NODE, TYPESCRIPT & check versions",
          "Installing IntelliJ",
          "IntelliJ Plugins (Recorded from Mac chapter)",
          "IntelliJ Walkthrough"
        ],
        "Full Course on Typescript": [
          "First typescript program",
          "Variables Introduction",
          "More on variables",
          "Conditional Statement",
          "Literal Types",
          "Array Types",
          "Object Types",
          "Tuples Types",
          "Union Types",
          "Simple Function",
          "Typescript Compiler",
          "Class",
          "Constructor",
          "Access Specifiers",
          "Interfaces",
          "Inheritance",
          "Static/Non-static Members",
          "EXPORT keyword"
        ],
        "WEBDRIVER.IO Course": [
          "Introduction to Webdriver.IO",
          "Webdriver.IO Documentations",
          "Project setup & Structure",
          "First BDD test using WDIO",
          "Different ways of Running Tests",
          "More step implementations",
          "Assertions",
          "Debugging WDIO Cucumber Test",
          "Running tests by BDD tags",
          "Headless Execution",
          "Spec Reporter",
          "Parallel Execution",
          "World Class - Passing values across steps",
          "CrossBrowser Testing in Chrome,Firefox & Safari",
          "Cucumber Hooks",
          "Locator Strategy"
        ],
        "Working with HTML Elements": [
          "Working with Links | Hyperlinks",
          "Working with Input Box",
          "Working with Buttons | Radio Buttons | Checkboxes",
          "Working with Dropdown List",
          "Alert Handling",
          "Scroll To Element"
        ],
        "Multiple-Cucumber-HTML-Reporter BDD Report": [
          "Generate BDD Reports"
        ],
        "GitLab Introduction": [
          "Set up GitLab and First Repository",
          "First Check-in",
          "Add node type .gitIgnore file",
          "First Sample CI/CD Pipeline"
        ],
        "Building Professional E2E Automation Framework Using WDIO and Cucumber BDD": [
          "Few Solid advantages of WDIO over other Tools",
          "Website Tour & Framework Scenario",
          "Framework Structure & References",
          "Create Framework Structure in IntelliJ",
          "First Sample Feature with Framework",
          "Update .gitignore and code check-in",
          "Framework Implementation - Navigate To Website",
          "Framework Implementation - Login",
          "Refactoring The Code - IMPORTANT",
          "Adding Debugging Lines",
          "Collect Locators of all Pages",
          "Implement E2E Scenario",
          "Special Function - CheckElementState",
          "Special Function - CheckElementContainsText",
          "Add More Assertion Steps",
          "E2E Execution and Report Analysis",
          "Negative Check Steps",
          "More Negative Check Steps",
          "Check-in codes to Gitlab"
        ],
        "Running CI/CD pipeline in GitLab using Docker Runner": [
          "Finding the WDIO Docker Image for pipeline",
          "Executing Tests using Selenium-Standalone Service",
          "GitLab CI file for pipeline with WDIO Docker Image",
          "Publishing Test Report in Pipeline"
        ]
      },
      "requirements": [
        "Nothing. This course will train you from writing code in typescript to build a world class professional framework"
      ],
      "description": "This course has been designed for testers who are trying to learn the latest automation test tool WebdriverIO with typescript and implementation of BDD. We will also run CI/CD pipelines using Gitlab with Docker runner.\nNo prior experience is required.\nThis course will cover everything from software installation in your computer to writing code in Typescript and finally running the test in CI/CD pipelines.\nWe will try to share enough information for you to understand each and every topic to become MASTER in this course. As Typescript provides us flexibility to use Object Oriented Concept, we have chosen Typescript over JavaScript.\nTowards the end of the course, we will make a world class professional framework, which will support a significant number of tests and scenarios with limited amounts of code. This design pattern has been widely accepted by many organizations and used to build many robust frameworks.\nOnce you finish this course, I can assure you that you will be able to work as a very knowledgeable Professional Automation tester in your team and you will be able to utilize the learnings from this course immediately.\nIf you like this course, please do not forget to provide genuine feedback, which will help others while choosing this amazing course.",
      "target_audience": [
        "Any Automation Tester or anyone trying to change career to Automation Testing using latest tools"
      ]
    },
    {
      "title": "Java Unit Testing com Spring Boot 3, TDD, Junit 5 e Mockito",
      "url": "https://www.udemy.com/course/java-unit-testing-com-java-spring-boot-3-junit-5-e-mockito/",
      "bio": "Domine Testes Unitários e de Integração para APPs Java e Spring Boot 3 com JUnit 5, Mockito, TestContainers, TDD e +++++",
      "objectives": [
        "10% Teoria e 90% Prática",
        "Você entenderá os fundamentos dos testes unitários com JUnit5",
        "Você aprenderá o framework de mocks mais popular - Mockito",
        "Você aprenderá a escrever testes unitários usando Mockito e JUnit 5",
        "Você aprenderá a escrever testes de integração com Mockito, JUnit 5 e TestContainers",
        "Aplicar Test Driven Development (TDD) usando JUnit 5, Mockito e Spring Boot",
        "Aprenda a escrever testes unitários e de integração do zero no estilo BDD (Behaviour Driven Development)",
        "Aprenda a construir testes para a camada de repositórios",
        "Aprenda a construir testes para a camada de serviços",
        "Aprenda a construir testes para os seus controllers (implementar testes para API’s REST)",
        "Aprenda a fazer testes de integração para aplicações Spring Boot",
        "Você aprenderá a usar as anotações de testes unitários mais importantes - @SpringBootTest, @WebMvcTest, @DataJpaTest e @MockBean",
        "Aprenda a usar as anotações do Mockito para criar objetos mockados",
        "Você aprenderá a escrever testes unitários usando Mocks e Stubs criados com Mockito",
        "Explore a arquitetura do framework de testes do Spring Boot e escreva testes de integração",
        "Aprenda a escrever testes de integração usando o Testcontainers",
        "Aprenda a escrever testes de integração usando um banco de dados MySQL inicializado com TestContainers",
        "Desenvolvedores Spring Boot com conhecimentos de JUnit e Mockito estão EM ALTA NO MERCADO. Suba de nível na sua carreira!",
        "Você pode BAIXAR todo o código-fonte e PDF’s otimizando sua APRENDIZAGEM e REVISÃO offline."
      ],
      "course_content": {
        "Apresentação": [
          "0101 Apresentação",
          "0102 Repositórios do Curso no Github"
        ],
        "Conceitos Básicos de Testes Automatizados": [
          "0201 Apresentação da Seção - Conceitos Básicos de Testes Automatizados",
          "0202 O que são Testes Unitários?",
          "0203 Por que implementar Testes Unitários?",
          "0204 O Princípio F.I.R.S.T.",
          "0205 Testando Código em Isolamento",
          "0206 A Pirâmide de Testes",
          "0207 O que é JUnit 5?",
          "0208 JUnit e Ferramentas de Build"
        ],
        "Primeiros Passos com JUnit 5 e Java": [
          "0301 Apresentação da Seção - Primeiros Passos com JUnit 5 e Java",
          "0302 Criando um Novo Projeto Maven",
          "0303 Adicionar as Dependências do JUnit 5",
          "0304 Criando o Primeiro Teste Unitário",
          "0305 Conhecendo o Maven Surefire Plugin",
          "0306 Definindo a Lógica do Teste Unitário e Conhecendo as Primeiras Assertions",
          "0307 Conhecendo as Assertion Messages",
          "0308 Conhecendo Outras Assertions",
          "0309 Conhecendo as Lazy Assert Messages",
          "0310 [DESAFIO] Implemente Testes Automatizados para as Demais Operações Matemáti",
          "0311 [SOLUÇÃO] Implemente Testes Automatizados para as Demais Operações Matemáti",
          "0312 Nomenclatura de Testes Unitários",
          "0313 Conhecendo a Annotation @DisplayName",
          "0314 BDD Style - Given, When and Then ou Arrange, Act e Assert",
          "0315 Criando um Template de Código (Eclipse Spnippet) com BDD Style",
          "0316 Desabilitando Testes Unitários",
          "0317 O Ciclo de Vida dos Testes no JUnit 5",
          "0318 O Ciclo de Vida dos Testes Unitários na Prática",
          "0319 Executando Assertions para Exceções",
          "0320 Comparando Arrays em JUnit Tests",
          "0321 Testando Performance em JUnit Tests",
          "0322 [OPCIONAL] Como um DEV Proativo Soluciona suas Dúvidas no StackOverFlow",
          "0323 [OPCIONAL] Como um DEV Proativo Soluciona suas Dúvidas no Google",
          "0324 Como um DEV Proativo Soluciona suas Dúvidas no ChatGPT"
        ],
        "Conceitos Avançados de JUnit 5": [
          "0401 Apresentação da Seção - Conceitos Avançados de JUnit 5",
          "0402 @ParameterizedTest com @MethodSource",
          "0403 @ParameterizedTest com @CsvSource",
          "0404 @ParameterizedTest com Arquivo CSV",
          "0405 @ParameterizedTest com @ValueSource",
          "0406 Conhecendo a Annotation @RepeatedTest",
          "0407 @TestMethodOrder Ordenação Randômica",
          "0408 @TestMethodOrder Ordenação por Nome",
          "0409 @TestMethodOrder Ordenação por Índice com @Order",
          "0410 Definindo a Ordem de Execução de Classes de Testes com @Order",
          "0411 O Ciclo de Vida do JUnit",
          "0412 Alterando o Ciclo de Vida do JUnit 5 com @TestInstance"
        ],
        "Test Driven Development (TDD)": [
          "0501 Apresentação da Seção - Test Driven Development (TDD)",
          "0502 O que é Test Driven Development (TDD)",
          "0503 Criando o Teste de Criação de Persons",
          "0504 Criando o PersonService",
          "0505 Criando o Método CreatePerson",
          "0506 Verificando se a Pessoa Criada Contém um FirstName",
          "0507 Refatorando os Testes Unitários",
          "0508 [DESAFIO] Implemente Assertions para os Outros Atributos do Objeto Person",
          "0509 [SOLUÇÃO] Implementando Assertions para os Outros Atributos do Objeto Perso",
          "0510 Verificando se o Objeto Person Contém um ID",
          "0511 Validando o Lançamento de IllegalArgumentException",
          "0512 [DESAFIO] Implemente Assertions para Validar a Mensagem Retornada pela Exce",
          "0513 [SOLUÇÃO] Implementando Assertions para Validar a Mensagem Retornada pela E"
        ],
        "Primeiros Passos em Mockito": [
          "0601 Apresentação da Seção - Conceitos Básicos de Mockito",
          "0602 Conhecendo o Mockito",
          "0603 Adicionando o Mockito e o Hamcrest ao Projeto",
          "0604 Entendendo o Conceito de System (Method) Under Test",
          "0605 Vantagens e Desvantagens do Uso de Stubs",
          "0606 Fazendo o Primeiro Mock com Mockito",
          "0607 Setando os Valores a serem Retornados pelo Mock",
          "0608 Mockando Listas",
          "0609 Mockando Exceptions",
          "0610 Aplicando BDD aos Testes com Mockito e Hamcrest",
          "0611 [DESAFIO] Aplicar BDD aos Testes com Listas usando Mockito e Hamcrest",
          "0612 [SOLUÇÃO] Aplicar BDD aos Testes com Listas usando Mockito e Hamcrest",
          "0613 Verificando a Invocação de Métodos com Mockito Verify",
          "0614 Conhecendo os Métodos then, should e never",
          "0615 Capturando Argumentos Passados à um Mock"
        ],
        "Conceitos Avançados de Mockito": [
          "0701 Apresentação da Seção - Conceitos Avançados de Mockito",
          "0702 Conhecendo mais sobre Hamcrest Matchers",
          "0703 Conhecendo as Principais Annotations do Mockito",
          "0704 Conhecendo o Mockito Spy",
          "0705 Mockito Inline x PowerMock",
          "0706 Entendendo o nosso System Under Test",
          "0707 Mockando um Método Estático",
          "0708 Mockando um LocalDateTime",
          "0709 Mockando um Método Estático que Recebe Parâmetros",
          "0710 Mockando um Construtor para testar o CheckoutService",
          "0711 [DESAFIO] Implemente Testes para a Classe PaymentProcessor"
        ],
        "Code Coverage": [
          "0801 Apresentação da Seção - Code Coverage",
          "0802 Gerando Relatórios de Cobertura de Código com EclEmma",
          "0803 Exportando Relatórios de Cobertura de Código Usando Maven",
          "0804 JaCoCo - Plugin Maven para Cobertura de Código",
          "0805 JaCoCo - Exportando Relatórios de Cobertura de Código em HTML"
        ],
        "[SEÇÃO DE NIVELAMENTO] REST na Prática com Spring (Framework) Boot 3 e Java": [
          "0901 Apresentação da Seção - REST na Prática com Spring Boot 3 e Java",
          "0902 O que é Spring Framework e Spring Boot?",
          "0903 Criando o nosso Projeto na Spring Tool Suite 4",
          "0904 Entendendo o Maven e o pom.xml",
          "0905 Criando o Primeiro Endpoint REST",
          "0906 Entendendo as Annotations @RestController, @RequestMapping e @PathVariable",
          "0907 Definindo a Lógica da Nossa Aplicação",
          "0908 Definindo os Métodos de Validação e Executando a Aplicação",
          "0909 Tratando Exceções c. @ControllerAdvice, @ResponseStatus e @ExceptionHandler",
          "0910 [DESAFIO] Implemente as Demais Operações Matemáticas",
          "0911 [SOLUÇÃO] Implemente as Demais Operações Matemáticas",
          "0912 [DESAFIO] Refatore o Código da Aplicação Separando os Conceitos",
          "0913 [SOLUÇÃO] Refatore o Código da Aplicação Separando os Conceitos",
          "0914 Injeção de Dependências com @Service e @Autowired",
          "0915 Retornando Listas de Objetos em JSON",
          "0916 Os Verbos HTTP POST, PUT e DELETE",
          "0917 Criando a Base de Dados e Definindo as Propriedades de Conexão",
          "0918 Implementando a Entidade Person e o Repositório",
          "0919 Substituindo os Mocks do Service pelo Acesso ao Repositório",
          "0920 Executando a Aplicação e Testando os Endpoints",
          "0921 Refactoring do Controller de Pessoas"
        ],
        "Testando uma API REST em Spring Boot 3 - Camada de Repositórios": [
          "1001 Apresentação da Seção - Spring Boot - Testando a Camada de Repositórios",
          "1002 Conhecendo a Annotation @DataJpaTest do Spring Boot",
          "1003 Reestruturando a Aplicação para Suportar um Banco de Dados em Memória - H2",
          "1004 Testando a Operação Responsável por Salvar Pessoas",
          "1005 Testando a Operação Responsável por Listar Pessoas",
          "1006 Testando a Operação Responsável por Buscar Pessoa por ID",
          "1007 Testando a Operação Responsável por Buscar Pessoas por e-Mail (Spring Data)",
          "1008 Testando a Operação Responsável por Atualizar Pessoa",
          "1009 Testando a Operação Responsável por Deletar Pessoa",
          "1010 Testes Spring Data JPA custom query method Usando JPQL com index parameters",
          "1011 Testes Spring Data JPA custom query method Usando JPQL com named parameters",
          "1012 Testando Spring Data JPA custom native query com index parameters",
          "1013 Testando Spring Data JPA custom Native query com Named parameters",
          "1014 Refatorando os Testes Unitários JUnit para usar a Annotation @BeforeEach"
        ]
      },
      "requirements": [
        "É desejável conhecimentos básicos de Java e Spring Boot",
        "Uma conta no Github",
        "É necessário conhecimento básico de Spring Boot e Java com Orientação a Objetos",
        "Conhecimentos em Spring Boot podem acelerar o processo de aprendizado",
        "Noções básicas de Orientação a Objetos podem acelerar o processo de aprendizado",
        "Estar familiarizado e confortável com o Spring Tool Suite, Eclipse ou uma IDE com o mesmo propósito",
        "Conhecimentos básicos de SQL e qualquer banco de dados relacional"
      ],
      "description": "**** Venha se especializar em testes automatizados com JUnit 5, Mockito, TDD, TestContainers, Rest Assured e Java!\n\n\nAtualmente os testes automatizados são mais do que uma necessidade são uma tendência. Saber implementar testes unitários e de integração pode significar maiores possibilidades de contratação ou de promoção. Neste treinamento, você aprenderá como implementar testes unitários eficientes com Java, TDD, Mockito e JUnit 5. Desenvolvedores em todo o mundo estão entregando software com mais rapidez e qualidade graças a essa fantástica tecnologia.\nNeste treinamento, você aprenderá as habilidades necessárias para desenvolver testes unitários e de integração com JUnit 5 e Mockito. O treinamento ensina os fundamentos centrais dos testes automatizados tanto na teoria(10%), quanto na prática(90%). Inicialmente iremos conhecer os conceitos básicos do JUnit 5. Posteriormente conheceremos aspectos mais avançados e o Mockito. Entenderemos ainda como funciona a cobertura de testes.\nEm seguida conheceremos o Spring Boot 3 entendendo as principais annotations e como funciona a sua arquitetura. Veremos como aplicar cada uma das tecnologias aprendidas em uma aplicação Spring Boot. Como testar cada uma das camadas do Spring Boot: repositories, services e controllers. Ao final conheceremos os testes de integração com REST-assured e TestContainers e entenderemos como adicioná-los à nossas aplicações passo a passo. Usaremos ferramentas de desenvolvimento modernas, como Spring Tool Suite e Maven. Como todos os projetos são baseados em Maven, então você está livre para usar qualquer IDE que desejar. Enfim muita coisa legal. Abordaremos, tecnologias como:\n\n\nTestes unitários com Junit 5;\nAssertions JUnit: Equals/Not Equals e Null/NotNull;\nAssertions JUnit: Same/Not Same e True/False;\nValidar exceptions e timeouts;\nDefinir a ordem de execução de testes JUnit 5.\nTDD;\nMockito;\nAprenda a fazer mocks de forma eficiente;\nPotencialize seus testes JUnit com Mockito.\nJava;\nSpring Boot· ;\nAs annotations do Spring Boot para suporte à testes unitários;\nTestContainers;\nREST-assured;\nTestes de integração com JUnit, Mockito, REST-assured e TestContainers;\nTestes de integração com bancos de dados;\nO papel do Docker nos testes de integração;\nSpring Tool Suite e muito mais.\nAlém de tudo não existem riscos. Após se inscrever no treinamento, se por algum motivo você não estiver satisfeito, a Udemy lhe garante a possibilidade de reembolso por até 30 dias (com base na Política de Reembolsos da Udemy). Então você não tem nada a perder.\nSe você está pronto para aprender como testar suas aplicações automaticamente de forma eficiente e estar preparado pra vaga dos sonhos em pouco mais de 15 horas a partir de agora? Clique no botão \"Comprar agora\" e comece imediatamente!\nTe vejo lá!",
      "target_audience": [
        "Desenvolvedores em início de carreira e que precisam aprender testes automatizados com JUnit e Mockito",
        "Esse treinamento é indicado para desenvolvedores e engenheiros de software",
        "Para desenvolvedores back-end com conhecimentos em Java, .NET, Rails, Django, Node etc e que desejam aprender os primeiros passos no mundo dos testes",
        "Desenvolvedores back-end que desejam se tornar fullstack",
        "Desenvolvedores back-end que desejam se tornar fullcycle",
        "Alunos que desejam aprender testes unitários com Junit 5",
        "Alunos que desejam aprender a fazer mocks eficientes com Mockito",
        "Quem já tentou outros treinamentos sobre testes unitários e de integração e descobriu que eles eram muito lentos, desatualizados e chatos!"
      ]
    },
    {
      "title": "Automate anything using Robot Framework + Sikuli",
      "url": "https://www.udemy.com/course/robot-framework-sikuli/",
      "bio": "Window Operations | Browser Handling | Waits & Synchronisation",
      "objectives": [
        "Basic to advance understanding of Robot Framework",
        "Basic to advance coverage of AngularJS application automation using Robot Framework"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Python Scripting",
        "Basic understanding of Windows Operating System"
      ],
      "description": "Robot Framework is a generic test automation framework for acceptance testing and acceptance test-driven development (ATDD). It has easy-to-use tabular test data syntax and it utilizes the keyword-driven testing approach. Its testing capabilities can be extended by test libraries implemented either with Python or Java, and users can create new higher-level keywords from existing ones using the same syntax that is used for creating test cases.\nRobot Framework project is hosted on GitHub where you can find further documentation, source code, and issue tracker. Downloads are hosted at PyPI. The framework has a rich ecosystem around it consisting of various generic test libraries and tools that are developed as separate projects.\nWe are going to cover,\n1.  Basic environment setup\n2.  Waits\n3.  Architecture\n4. Resource Files\n5. User defined keywords",
      "target_audience": [
        "Manual Tester looking opportunity in functional automation testing",
        "Automation Tester looking to automate AngularJS application in easy steps"
      ]
    },
    {
      "title": "TDD com xUnit para C# .NET Core",
      "url": "https://www.udemy.com/course/automatizando-testes-para-sua-aplicacao/",
      "bio": "Construindo uma aplicação com testes de unidade e e2e.",
      "objectives": [
        "Teste de unidade",
        "Mock, Stub",
        "Teste E2E",
        "Criar aplicação em .Net Core",
        "Dicas para um bom teste"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "O escopo da aplicação"
        ],
        "O básico do teste de unidade": [
          "Teste de unidade e domínio",
          "Criando uma solução",
          "O básico do xUnit",
          "Domínio Curso",
          "Objetos esperados",
          "Refatorando publico alvo",
          "Modelo Rico vs Modelo Anêmico",
          "Tratando parâmetros inválidos",
          "Melhorando os asserts para exceptions"
        ],
        "Melhorando os testes": [
          "Setup and Cleanup",
          "Builders",
          "Gerando informações aleatórias",
          "Refatoração final para Curso",
          "TDD"
        ],
        "Testes Complexos": [
          "Arquitetura",
          "Mocks",
          "Melhorando a verificação dos mocks",
          "Validando publico alvo",
          "Diferenciando Mock e Stub"
        ],
        "Continuando com a arquitetura": [
          "Como está ficando a arquitetura",
          "Configurando os serviços",
          "Gerando o migration",
          "Comitando o dado",
          "Listando os cursos",
          "Mostrando mensagens de erro",
          "Mostrando várias mensagens ao mesmo tempo",
          "Testes que estão falhando"
        ],
        "Editando Curso": [
          "Editando o domínio",
          "Organizando string soltas",
          "Editando classe de serviço",
          "Alterando front",
          "Definindo melhor o teste de unidade"
        ],
        "Domínio Aluno": [
          "Aprendendo sobre o desafio",
          "Desafio para criar aluno",
          "Desafio para criar serviço de domínio",
          "Criando conversor de publico alvo",
          "Desafio para criar web"
        ],
        "Domínio Matricula": [
          "Domínio",
          "Criando serviço de domínio",
          "Informando nota",
          "Cancelamento da matricula"
        ],
        "Como começar no TDD (Revisão)": [
          "O problema do poker",
          "Refatorando"
        ],
        "E2E": [
          "TestCafé - o que é?",
          "Instalando TestCafé",
          "Primeiro teste",
          "Teste para salvar o curso",
          "Trabalhando com mais campos de formulário",
          "Validando campos obrigatórios",
          "Page Object"
        ]
      },
      "requirements": [
        "Lógica de programação",
        "Desenvolvimento Web"
      ],
      "description": "O curso tem o objetivo ensinar ao aluno sobre automatização de testes para uma aplicação em .NET Core. Mesmo que essa não seja a sua plataforma de origem eu aconselho este curso, pois você saberá o essencial para aplicar em qualquer plataforma.\nSerá ensinado conceitos de testes de unidade e e2e, os dois tipos de testes do curso.\nAlém disso o aluno aprenderá na prática a criar uma aplicação.A parte mais difícil de criar testes é justamente quando você está iniciando e por isso eu estarei criando uma aplicação para mostrar o que deve ser testado e o que não testar.\nSe você busca esses conhecimento esse é o curso certo, pois aprenderá na prática.\n\n\nNo final o aluno terá conhecimento sobre:\nTDD\nTestes de unidade com xUnit.\nTestes e2e.\nMocks e stubs.\nO que são domínio e classes de serviços.\nSingle Responsability principle.\nDependency inversion principle.\nOnion Architecture.\nRepository pattern.\nUnit of Work.\n\n\nMeu nome é Stephany Henrique Batista, sou formado em Ciências da Computação e tenho Pós em Banco de dados. Já estou na área de tecnologia a quase 20 anos com várias experiências nacionais e internacionais, tendo atuado em uma das 100 empresas mais valiosas do mundo. Se você buscar mais pelo meu perfil aqui verá que já consegui compartilhar meus conhecimentos para mais de 15.000 alunos, tendo uma nota excelente como avaliação. Espero sinceramente te ajudar em mais esse curso. Fique livre para deixar o seu feedback e te espero nas aulas!",
      "target_audience": [
        "Qualquer pessoal que gostaria de automatizar testes para uma aplicação"
      ]
    },
    {
      "title": "API Testing con POSTMAN : Masterclass todo en 1 (2025)",
      "url": "https://www.udemy.com/course/api-testing-con-postman-masterclass-paso-a-paso/",
      "bio": "Aprende a probar y automatizar API tests facilmente e integralos con JENKINS y AZURE DEVOPS como un Profesional.",
      "objectives": [
        "Aprende probar APIs con ejemplos del mundo real",
        "Aprender a instalar Postman y manejar todas las funciones más importantes completamente desde cero.",
        "Aprender a interpretar las especificaciones de una API REST con SWAGGER",
        "Organiza requests por medio de Workspaces, Coleciones y carpetas.",
        "Aprende a crear API requests con métodos GET, POST, PUT y DELETE con ejemplos sencillos.",
        "Aprende a manejar la autenticación APIS básica, API KEYs o tokens",
        "Aprende a automatizar pruebas de APIs sin conocimiento altos en programación.",
        "Automatiza la ejecucion de las pruebas con Collection Runner ,Postman monitors y Newman",
        "Integra tu pruebas por medio de newman en CI Jenkins y AzureDevops."
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de pruebas de software (idealmente pero no obligatorio API testing)",
        "No se require altos conocimientos en programación, todo lo que se require se explica en el curso."
      ],
      "description": "POSTMAN  es la herramienta de API Testing más usada a nivel mundial que todo Tester y programador debe conocer para poder probar y automatizar APIs de una manera rápida y sencilla , su popularidad se ha extendido rápidamente durante los últimos años debido a su simplicidad para manejar todo el ciclo de vida de una API.\nEn este curso vas a aprender a dominar la herramienta  completamente desde cero y conocerás todas las funciones más importantes , trucos y tips que te facilitaran la vida la próxima vez que veas una API RESTFul. El curso se diferencia de los  demás, debido a su ejercicios practicos, recursos descargables y la manera como se explican. ¡Si ya has utilizado Postman y crees que podrías aprovecharla más, este curso también es para ti!\nEl curso ha sido diseñado paso a paso para todos los niveles, partiendo desde la instalación, manejo de workspaces, colecciones, variables, API requests, pruebas de APIS con snippets, assertions avanzadas y automatización de ejecución con el collection runner,monitores , Newman, integracion en Jenkins y Azure Devops!.\nDespués de tomar este curso y realizar todos los ejercicios prácticos vas a manejar Postman como un Profesional.\n¿Deseas aprender esta herramienta y mejorar tu skillset para futuros trabajos y mejorar tu hoja de vida? ¡Empieza hoy mismo!\nTe invito a que veas el contenido detallado del programa aquí abajo y te inscribas pronto, nos vemos en las clases!",
      "target_audience": [
        "Analistas / Testers de todos los niveles que estén trabajando o aprendiendo API Testing.",
        "Programadores que quieran aprender como hacer pruebas de APIS de una manera profesional.",
        "Analistas de requisitos, Product Owners que trabajan en la definición y diseño de nuevas APIS",
        "Testers que deseen profundizar en automatizacion y pruebas de APIS"
      ]
    },
    {
      "title": "Contract Testing and Messaging with Spring Cloud Contract",
      "url": "https://www.udemy.com/course/contract-testing-and-messaging-with-spring-cloud-contract/",
      "bio": "Learn how to use Spring Cloud Contracts to create reliable integration tests for message-based communications.",
      "objectives": [
        "Create integration tests using contract testing for message-based communication",
        "Learn the basics of RabbitMq",
        "Learn to programmatically implement RabbitMq with Java",
        "Learn to program integration tests using TestContainers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Course’s Project",
          "Producer Side Code Presentation",
          "Consumer Side Code Presentation"
        ],
        "Section 2: RabbitMQ Basics": [
          "RabbitMQ Basic Architecture",
          "RabbitMQ Implementation - Producer",
          "RabbitMQ Implementation - Consumer"
        ],
        "Section 3 - Spring Cloud Contract for Messaging": [
          "Producer - Creating the contract",
          "Producer - PART I - Creating base class and other configs",
          "Producer - PART II - Creating base class and other configs",
          "Consumer - Integration Test Creation",
          "New Skill Unlocked"
        ]
      },
      "requirements": [
        "Have completed the previous course Contract Testing with Spring Cloud Contract",
        "Mid level knowledge of java language",
        "Spring boot (Core and Testing)",
        "Unit testing (JUnit/Mockito)"
      ],
      "description": "In our previous course, Contract Testing with Spring Cloud Contract, we delved into how Spring Cloud Contracts can be a powerful tool for creating reliable contract tests specifically for HTTP communications. By implementing these tests, you can provide confidence to your team during production releases and create solid integration tests that reduce dependencies on other teams. However, contract testing with Spring Cloud Contracts isn’t limited to just HTTP. This course focuses on extending the power of contract testing to message-based communication—a critical area for ensuring stability and reliability in distributed systems.\nWe’ll take you through hands-on examples using two small applications that communicate through RabbitMQ, guiding you in setting up contract tests for these message-based integrations. If RabbitMQ is new to you, there’s no need to worry; we’ll start with a primer on RabbitMQ basics before diving into the contract testing specifics. After this course, you will be able to implement contract testing regardless of the message broker your project is using (Kafka, ActiveMQ, SQS, etc).\nTo fully harness the value of this course, you should ideally have a foundation in Java, basic Spring Boot, and be familiar with unit testing concepts, particularly with tools like Mockito and JUnit. This background will help you maximize the course's insights and apply them effectively to your own projects.",
      "target_audience": [
        "Java Devs who want to learn to do proper integration testing messaging-based communications",
        "Students who want to learn basic RabbitMq"
      ]
    },
    {
      "title": "JMeter - Testes de performance",
      "url": "https://www.udemy.com/course/testes-de-performance-com-jmeter-basico-ao-avancado/",
      "bio": "Realize testes de performance na prática utilizando a ferramenta JMeter e obtenha melhores resultados para sua aplicação",
      "objectives": [
        "JMETER- Utilizar o JMeter",
        "JMETER- Compreender a arquitetura do JMeter",
        "JMETER- Aprender sobre os componentes do JMeter",
        "JMETER - Criação de scripts de testes automatizados",
        "PROJETO 1 (eCommerce) - Criar de plano de testes para seu cliente ou empresa",
        "PROJETO 1 (eCommerce) - Criar teste para um usuário que navega na loja",
        "PROJETO 1 (eCommerce) - Criar teste de um usuário buscando produtos",
        "PROJETO 1 (eCommerce) - Teste de um usuário realizado compra",
        "PROJETO 1 (eCommerce) - Validar ordem de compra",
        "PERFORMANCE - Realizar testes de performance na prática",
        "PERFORMANCE - Criar seus testes de performance de acordo com suas necessidades",
        "Webservices - Criando testes para arquitetura REST com GET e POST",
        "Webservices - Criando testes para arquitetura SOAP com HTTP POST",
        "Conceitos - Protocolo HTTP e Status Code",
        "Conceitos - Indicadores, volumetria e cenários de testes",
        "Conceitos - Defeitos de testes de performance"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico do sistema operacional",
        "Um PC capaz de executar a JVM do java"
      ],
      "description": "Entre para o mundo dos testes de performance utilizando a ferramenta JMeter.\nIremos abordar os conceitos básicos da ferramenta e aplicar na prática.\nAlém das configurações dos componentes do JMeter e a criação de testes, iremos ver como a arquitetura do JMeter controla seus componentes e como isso impacta nos nossos testes.",
      "target_audience": [
        "Testadores de software",
        "Desenvolvedores de softwares",
        "Arquitetos de software",
        "Pessoas ligadas a área de engenharia de software"
      ]
    },
    {
      "title": "BDD & TDD in Practice: How to \"Build the Right Thing\"",
      "url": "https://www.udemy.com/course/bdd-tdd-in-practice/",
      "bio": "Behaviour Driven Development with JavaScript, Gherkin and Cucumber",
      "objectives": [
        "Concept of Behaviour Driven Development & Test Driven Developement",
        "How to use and implement BDD with JavaScript",
        "Using the example of a task list, you will learn what scenarios can look like, how tests are written and how to write down the appropriate code.",
        "What Gherkin and Cucumber are and how to work with them in the BDD cycle"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript",
        "Basic knowledge of Jest"
      ],
      "description": "When developers and non-developers such as product owners, customers or project managers work on a project, it can quickly happen that there is a gap between what one imagines and what the other implements. To avoid this, we work with the software development process Behavior Driven Development - but what exactly is BDD?\nIn this course we will give you an introduction to Behaviour Driven Development and how we can use and implement it using JavaScript.\nIn our course \"BDD & TDD in Practice\" you will get an introduction to Behavior Driven Development and how to use and implement it with JavaScript. Using the example of a task list, you will learn what scenarios can look like, how tests are written and how to write down the appropriate code. In addition, of course, we also go into what \"Gherkin\" and \"Cucumber\" are. In addition to the video units, we have put together summaries and useful links that can help you understand.\nAlso we will code a small project together, but not in the normal, boring way you are used to. No, this time you will do it using the BDD approach!\n\n\nSee you in the course,\nAlex",
      "target_audience": [
        "Intermediate JavaScript developer curious to learn how to implement using BDD"
      ]
    },
    {
      "title": "Kurs Selenium Java od podstaw",
      "url": "https://www.udemy.com/course/kurs-selenium-java/",
      "bio": "Kurs testera automatyzującego testy aplikacji internetowych za pomocą języka programowania Java",
      "objectives": [
        "Tworzenie testów automatycznych używając języka Java",
        "Znajomość podstawowych i bardziej zaawansowanych technik tworzenia testów w Selenium",
        "Znajomość TestNG, Mavena oraz Intelij",
        "Podstawy języka programowania Java"
      ],
      "course_content": {},
      "requirements": [
        "Znajomość podstawowych zagadnień dotyczących jakości i testowania oprogramowania",
        "Umiejętność programowania nie jest wymagana"
      ],
      "description": "Kurs w którym dowiesz się jak zostać testerem automatyzującym i tworzyć testy automatyczne aplikacji internetowych na poziomie interfejsu użytkownika za pomocą języka programowania Java. Do automatyzacji testów na poziomie interfejsu użytkownika można używać różnych narzędzi. Jeżeli chodzi o najbardziej popularne narzędzie to jest nim Selenium.\n\nOk, a można prościej?\nMówiąc prościej tworzymy kod, który sam uruchomi przeglądarkę internetową, następnie otworzy wybraną stronę i zacznie wykonywać na niej zadane akcje tj. klikać na elementy, wprowadzać dane w formularze itd. Testy w kursie tworzone są przy pomocy języka programowania Java. Kurs nie wymaga znajomości języka programowania. Wprowadzenie do programowania stanowi część tego kursu.\n\nCzego dowiesz się z tego kursu o pisaniu testów automatyczny ?\n- jak zainstalować wszystkie niezbędne narzędzia (Java, IDE, Selenium)\n- jak lokalizować elementy na stronie i wykonywać na nich akcje\n- jak sprawdzać stan elementów i weryfikować czy jest on zgodny z oczekiwanym\n- jak stworzyć framework testowy - szkielet, który ułatwi i przyśpieszy dodawanie kolejnych testów\n- jak utworzyć raport, który będzie zawierał informacje o wynikach testów i zdjęcia zrobione podczas jego wykonania\n- jak uruchomić testy z poziomu wiersza linii poleceń\n- jak wczytywać dane testowe z pliku\n- jak uruchamiać testy równolegle (w tym samym czasie)\n\nPoza wymienionymi wyżej zagadnieniami w ramach innych modułów poznasz:\n- TestNG (biblioteka do pisania testów) i adnotacje używane podczas tworzenia testów\n- Mavena (narzędzie automatyzujące budowę oprogramowania) i jak uruchomić testy z poziomu wiersza linii poleceń\n- HTML (język znaczników) - służący do budowania struktury strony internetowej\n- Git - rozproszony system kontroli wersji\n- wzorzec projektowy Page Object Pattern - sposób układania kodu zgodnie z dobrą praktyką w branży, umożliwiający unikanie duplikowanie kodu oraz ułatwiający jego utrzymywanie.\n- Java - obszerny moduł zawierający wiedzę niezbędną do rozpoczęcia tworzenia testów automatycznych\n\nNa jakim poziomie będę kończąc ten kurs?\nWiedza zawarta w kursie dotycząca pisania testów automatycznych jest na poziomie \"Junior +\" Test Automation Engineer'a. Pamiętaj jednak o tym, że otrzymanie certyfikatu nie jest równoznaczne z możliwością tytułowania się testerem automatyzującym. To ile wyciągniesz z tego kursu, zależy od Ciebie i Twojego zaangażowania. Ten kurs daje pokaźną dawkę wiedzy, ale potrzeba czasu żeby ją przyswoić i dużej ilości praktyki, żeby te rzeczy zapamiętać.\n\nJak skontaktować się z instruktorem?\nJeżeli przedstawione w kursie zagadnienie jest niejasne lub coś zwyczajnie nie działa możesz się ze mną skontaktować korzystając między innymi:\n\n- z sekcji \"Pytania i odpowiedzi\"\n- wiadomości prywatnej na portalu.\n- fanpage ( patrz profil instruktora)\n\n\nMam nadzieję, że przedstawiona w kursie wiedza pomoże Ci przenieść Twoją karierę na wyższy poziom lub ułatwi Ci znalezienie pierwszej pracy. W przypadku jakichkolwiek pytań pozostaję do Twojej dyspozycji.\nMiłego dnia :)",
      "target_audience": [
        "Testerzy manualni zainteresowani automatyzacją testów w języku Java",
        "Programiści chcący poznać zagadnienia automatyzacji testów",
        "Testerzy automatyzujący w celu ugruntowania i poszerzenia wiedzy"
      ]
    },
    {
      "title": "Software Testing with Java - Advanced Topics",
      "url": "https://www.udemy.com/course/software-testing-with-java/",
      "bio": "Use holistic approach of risk mitigation by doing functional web testing, visual testing, and performance testing",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "At least 1 year of Java programming",
        "Deep understanding of Selenium WebDriver",
        "Deep understanding of OOP",
        "Java 8 installed",
        "Java IDE installed",
        "Git",
        "Maven installed"
      ],
      "description": "Throughout the course, we will focus on a holistic approach of risk mitigation by doing functional web testing, visual testing, performance testing, and many more.\nWhat's in this course?\nCreate a framework for doing comprehensive web testing\nUse industry-standard best practices such as page objects\nCreate functional browser tests using Selenium\nCode visual e2e tests using Screener\nRun in massive parallel (100s of tests in < 5mins)\nAutomatically get robust test reports with logs + videos\nTechnologies you will use:\nSauce Labs\nSelenium\nSauce Visual\nJunit\nJava\nMaven\nWho this course is for:\nAdvanced developers looking to learn how to test web applications.\nThis is NOT a beginners course and you will not learn Java testing fundamentals here. However, you will learn a number of amazing skills, and tools to help you test web applications.\nAt least 1 year of Java programming\nDeep understanding of Selenium WebDriver\nDeep understanding of OOP\nJava 8 installed\nJava IDE installed\nGit\nMaven installed\nReady to start? Check out the full curriculum and jump into the tutorial.\n“I like the fundamental approach used by the author. Will see:) To prepare for such a course - it's a really hard and big job. Respect and thank you.” - Serhii Kovalenko\n“I am familiar with Nikolay from a course I saw on TestAutomation and have the highest regard for him. Glad to see him on Udemy.” - Annamalai Viswanathan\n“Great course! This was one of the most thorough training courses I have ever taken/endured/survived. For me the course had a real \"graduate course\" feel to it, along with some almost impossible challenges that will result in frustration as well as some very deep learning.”- David Kotschessa",
      "target_audience": [
        "Advanced developers looking to learn how to test web applications."
      ]
    },
    {
      "title": "Selenium Webdriver with Cucumber BDD Automation Framework",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-cucumber-bdd-automation-framework/",
      "bio": "Learn Selenium Webdriver with a BDD framework using Cucumber, Maven, TestNG, Jenkins, JAVA",
      "objectives": [
        "You will have the knowledge of designing selenium framework. As per your work domain this course will help you implement selenium framework for your project.",
        "Concepts you will learn & understand will be : 1. Maven 2. TestNG 3. Advance Reporting 4. Feature files 5. Scripting 6. Locate Element Techniques 7. Cross-browser Testing 8. Log Generation 9. Jenkins and many more",
        "Post course completion you will be awarded with certificate."
      ],
      "course_content": {
        "Introduction & Need of Automation Testing": [
          "Need & Introduction to Automation Testing",
          "RoadMap",
          "Selenium & It’s Components",
          "SECTION 1 : QUIZ"
        ],
        "INSTALLATION": [
          "JAVA Environmental Variables",
          "MAVEN",
          "Eclipse Setup",
          "Repo & POM Setup",
          "TestNG Installation",
          "Cucumber Addons",
          "Browser Install",
          "INSTALLATION Assignment"
        ],
        "BASE FRAMEWORK": [
          "Feature File",
          "Step Defination",
          "Main Runner",
          "SECTION 3 : Quiz"
        ],
        "CODE IMPLEMENTATION": [
          "Login Code Implementation (Part 1)",
          "Login Code Implementation (Part 2)",
          "Background Keyword",
          "Tags in Mainrunner class",
          "Selenium basic commands to interact with web-element"
        ],
        "LOCATE ELEMENT TECHNIQUES & EXCEPTION HANDLING": [
          "Locating Table Elements And Handling Exception (Part 1)",
          "CssSelector Technique for Datepicker And Handling Exception (Part 2)",
          "Drag And Drop using Action Class",
          "Automating Hidden Objects And Handling Exception",
          "Automating Mouse Actions using Action Class",
          "Handling multiple windows (Part 1)",
          "Handling multiple windows (Part 2)"
        ],
        "TEST EXECUTION STRATEGY": [
          "Base Framework Topics Covered",
          "Running Test using TestNG",
          "Running Test using CMD",
          "Running Test using Eclipse MVN Commands"
        ],
        "ADVANCE FRAMEWORK (PART 1)": [
          "Implementation of Constant Class",
          "Running Test on ‘Chrome’, ‘Firefox’, ‘IE’ Browsers",
          "Implementation of WebdriverActions Class (Part 1)",
          "Implementation of WebdriverActions Class (Part 2)",
          "Page Object Modeling"
        ],
        "ADVANCE FRAMEWORK (PART 2)": [
          "Running Multiple Test Cases And Debug Mode",
          "Installation And Execution of Log4j",
          "Image attachments in Framework"
        ],
        "CONTINUOUS INTEGRATION": [
          "Jenkins Installation",
          "Jenkins required Add-on’s",
          "Jenkins Integration with JAVA And Maven",
          "Jenkins Implementation"
        ]
      },
      "requirements": [
        "In terms of technical knowledge I will recommend to practise most BASIC JAVA concepts (Although we are going to learn those as well in our tutorials)",
        "As a soft skills I'll recommend to be passionate, never give up attitude, hard work, repetition from learning. These will work!"
      ],
      "description": "Phase-1 we’ll be about Introduction to the course :\nUnderstanding about course & it’s needs\nHaving lessons walktrough\nlearning Selenium & It’s various Concepts\nIn Phase-2 we’ll be learning about different tools installations :\nSetting-Up JAVA environmental variables\nWhat is MAVEN? & Installation of MAVEN\nCreating project in MAVEN\nInstallation of Eclipse & MUST DO configuration of Eclipse\nWhat is POM file? & understanding the content inside POM file\nInstallation of TestNG\nCucumber Add-on’s, which will ease our efforts in framework building process\nSetting up Browser Driver\nIn Phase-3 we’ll start with basic framework :\nGherkin language & Features file creation\nCreation of Step definition class for respective feature file\nRunner class creation\nIn Phase-4 we’ll move further into scripting :\nImplementing code for step class\nImprovising feature file with background keyword\nUsing tags in runner class\nIn Phase-5 we’ll learn automating various types of elements & handling exceptions :\nCreation and execution of multiple feature files\nVarious exceptions\nBasic reporting\nIn Phase-6, we’ll learn about ways of test execution :\nUsing TestNG, Batch files, MVN commands\nInstallation of Maven surefire plugin\nIn Phase-7, we’ll start designing advance framework :\nCreating various packages, classes & using Hooks\nRunning test on different browsers\nCentralizing selenium methods\nOverview on ‘Page Object Pattern’ | ‘Page Factory pattern’\nBetter ways to overcome Page Object Modeling complications\nIn Phase-8, we’ll continue designing advance framework :\nUpdating existing packages, classes & using tags\nInstallation of Log4j & use of log generation within scripts\nImage attachments in framework\nIn Phase-9, we’ll learn about CI – Jenkins :\nInstallation & setup of jenkins\nIntegration of Java, Maven with jenkins\nScheduling test execution from jenkins\nAdvance reporting\nIn Phase-10, we’ll review course leanings & future actions.",
      "target_audience": [
        "Beginner in Automation Testing",
        "Automation Testers looking to enhance Automation & Cucumber Framework knowledge"
      ]
    },
    {
      "title": "Testes automatizados de Api com Httparty + Rspec",
      "url": "https://www.udemy.com/course/testes-automatizados-de-api-com-httparty-rspec/",
      "bio": "Curso para fazer Automação de uma API utilizando Httparty, rspec e ruby.",
      "objectives": [
        "Configurar todo o ambiente para trabalhar com testes de API.",
        "Criar um projeto de testes automatizados em Ruby, Criar testes automatizados utilizando o Httparty.",
        "Organizar os códigos tornando-os mais legíveis, reusáveis e fáceis de manter.",
        "Interagir com os principais verbos Http.",
        "Aprender a gerar relatórios"
      ],
      "course_content": {},
      "requirements": [
        "O aluno deve ter noções de algoritmo.",
        "Ter no conhecimento Básico em Ruby",
        "Ter conhecimento em Orientação a Objetos"
      ],
      "description": "Este curso irá te ensinar a fazer automações em API utilizando a metodologia:\nOnde usaremos o Rspec framework.\nIremos conhecer o framework Httparty que ajuda você a testar APIs, simulando como um os sistemas se comunicam.\nE iremos usar a linguagem Ruby bem como conhecer e trabalhar com Programação Orientada a Objetos",
      "target_audience": [
        "Testadores, desenvolvedores e Analistas iniciantes interessados em aprender a automatizar testes funcionais."
      ]
    },
    {
      "title": "Selenium Webdriver - your first automated test",
      "url": "https://www.udemy.com/course/selenium-webdriver-your-first-automated-test/",
      "bio": "Write your first automated test at the user interface level using the Java programming language and Selenium",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requirements",
          "Final effect",
          "Sample test",
          "Contact"
        ],
        "Environment setup": [
          "Required tools",
          "Install JDK",
          "Install IDE",
          "Add library to project",
          "Download and configure Maven",
          "New maven project"
        ],
        "First automated test": [
          "Test case flow",
          "Game plan",
          "Open browser",
          "@Test annotation",
          "Find and click on shop link",
          "Add product to cart",
          "Type text and select value by visible text",
          "Homework",
          "Homework -solution",
          "Get text from element",
          "Add assertion",
          "Quit Browser",
          "Check product name",
          "Checking other elements on order details page",
          "Make test more flexible",
          "Thank you"
        ]
      },
      "requirements": [
        "Knowledge of basic concepts related to software quality and testing",
        "Programming skills are not required"
      ],
      "description": "A mini-course where you’ll learn how to create an automated test for a web application at the user interface level using the Java programming language. Various tools can be used for UI-level test automation, but the most popular one is Selenium WebDriver.\nTo put it simply: we’ll write code that automatically launches a web browser, opens a specific webpage, and performs actions like clicking elements, entering data into forms, and more. The tests in this course are created using the Java programming language. While programming knowledge is not required (it’s helpful for better understanding), an introduction to programming is not part of this course due to the length limitations of free content on this platform.\nWhat will you learn about writing automated tests?\nHow to install JDK – Java for developers.\nHow to install Maven – a tool for managing dependencies.\nHow to locate elements on a webpage and interact with them.\nHow to check the state of elements and verify if it meets expectations.\nHow to write your first automated test.\nHow to contact the instructor?\nIf any topic covered in the course is unclear or something simply doesn’t work, you can contact me via:\nThe \"Questions and Answers\" section.\nPrivate messages on the platform.\nI hope the knowledge presented in this course helps you elevate your career to the next level or makes it easier to land your first job. If you have any questions, I’m here to help. Have a great day!",
      "target_audience": [
        "Manual testers interested in test automation using Java",
        "People entering the IT world",
        "Individuals looking to change their career path"
      ]
    },
    {
      "title": "Make 2D & 3D Graphs in Python with Matplotlib for Beginners!",
      "url": "https://www.udemy.com/course/pythonmatplotlib/",
      "bio": "A data science masterclass for beginners! Learn data visualization by making graphic bars and diagrams. Code in Python.",
      "objectives": [
        "Code in the Python 3.5 programming language.",
        "Make games with Python.",
        "Create basic line and scatter plots with Matplotlib 1.5.",
        "Read finance data directly from Yahoo.",
        "Customise our graphs with visuals, a title, labels, text and a legend.",
        "Recognize types of visualization: histograms, pie charts, and box and whisker plots.",
        "Make candlestick plots.",
        "Understand figures and subplots.",
        "Perform in-depth customization of plot structure",
        "Understand basic 3D plotting."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Python"
        ],
        "Basic of Programming": [
          "Variables",
          "Functions",
          "If Statements"
        ],
        "Lists": [
          "Introduction to Lists"
        ],
        "Loops": [
          "Introduction to and Examples using For Loops",
          "Getting Familiar with While Loops",
          "Breaking and Continuing In Loops",
          "Making Shapes with Loops",
          "Nest Loops, Printing & Tic-Tac-Toe Field"
        ],
        "Sets and Dictionaries": [
          "Understanding Sets and Dictionaries",
          "An Example for an Inventory List"
        ],
        "Input and Output": [
          "Introduction and Implementation of Input and Output",
          "Introduction to and Integrating File Input and Output",
          "An Example For A Tic-tac-toe Game Part 1",
          "An Example For A Tic-tac-toe Game Part 2",
          "An Example Writing Participant Data To File",
          "An Example Reading Participant Data From File",
          "Doing Simple Statistics With Participant Data From File"
        ],
        "Classes": [
          "A First Look at Classes",
          "Inheritance and Classes",
          "An Example Of Classes Using Pets",
          "An Example Of Classes Using Pets - Dogs",
          "An Example Of Classes Using Pets - Cats",
          "Taking The Pets Example Further And Adding Humans"
        ],
        "Importing": [
          "Introduction To Importing and The Random Library",
          "Another Way Of Importing and Using Lists with Random",
          "Using The Time Library",
          "Introduction to the Math Library",
          "Creating A User Guessing Game with Random",
          "Making the Computer Guess a Random Number"
        ],
        "Project - BlackJack Game": [
          "Creating and Shuffling a Deck",
          "Creating the Player Class",
          "Expanding the Player Class",
          "Implementing a Bet and Win",
          "Implementing the Player Moves",
          "Running the Game"
        ],
        "Error Handling": [
          "Getting Started with Error Handling"
        ]
      },
      "requirements": [
        "Download Anaconda 4.2.0, the free data science platform by Continuum, which contains Python 3.5.2 and Matplotlib.",
        "Otherwise, you can download and install Python 3.5.2 and Matplotlib for free online.",
        "Topics involve intermediate math, so familiarity with university-level math is helpful."
      ],
      "description": "This course was funded by a wildly successful Kickstarter.\nDo you want to learn how to visualize data? Enroll in this course to learn how to do so directly in code.\n\"Great course for a noobie - the first half is a review of basic python. The last half is an in-depth look at matplotlib and all its feature-rich goodness. I enjoyed taking it even if it took a while to go through.\"\nMake 2D & 3D Graphs in Python with Matplotlib for Beginners! is suitable for coding beginners because we begin with a complete introduction to coding. Then we delve deep into using Matplotlib, a Python 2D plotting library.\n\nIn Part 1, you learn how to use Python, a popular coding language used for websites like YouTube and Instagram. You learn the basics of programming, including topics like variables, functions, and if statements. You learn about data structures such as lists, dictionaries, and sets. We cover how to use for and while loops, how to handle user input and output, file input and output.\nWe apply our knowledge to build a fully functional tic-tac-toe game. You learn classes, methods, attributes, instancing, and class inheritance. We make an additional Blackjack game! You learn how to solve errors that can occur when you work as a programmer.\nIn Part 2, you take your Python knowledge and apply it to Matplotlib. We go over many cool features of Matplotlib that we can use for data visualization. We show you how to make line plots, scatter plots, candlestick plots. You learn how to customize the visuals of your graph and to add text and annotate graphs. And much more!\nWhy choose Mammoth Interactive?\nWe prioritize learning by doing. We blend theory with practical projects to ensure you get a hands-on experience by building projects alongside your instructor. Our experienced instructors know how to explain topics clearly at a logical pace. Check out our huge catalog of courses for more content.\n“The Instructor goes very in-depth about everything. This is very helpful to remember all these different things!” – KingSloth_GameStudio on The Ultimate iOS 11 Course\n“I really like the approach the presenter takes – not just the technical details, but also the very human, personal development information and recommendations he provides.” – Michael on The Ultimate iOS 11 Course\n“The instructor is very good at teaching. He teaches at a great pace and covers anything a beginner would need to understand (every little detail). I am already learning a lot and I just started yesterday. – Mike on Build 30 Mini Virtual Reality Games in Unity3D from Scratch\nYou get full lifetime access to this course for a single fee. Enroll today to join the Mammoth community!",
      "target_audience": [
        "Absolute beginners who want to learn to code for the web in the popular Python programming language.",
        "Beginners who want to learn how to use data science to make graphs.",
        "Experienced programmers who want to learn a 2D plotting library for Python."
      ]
    },
    {
      "title": "Free Jira Scrum Kanban for Agile project to IT Professionals",
      "url": "https://www.udemy.com/course/free-jira-scrum-kanban-for-agile-project-to-it-professionals/",
      "bio": "You will acquire absolute confidence applying Jira for Agile projects, along with Scrum and Kanban",
      "objectives": [],
      "course_content": {
        "Course Introduction by Instructor": [
          "Greetings from Instructor"
        ],
        "Agile Scrum Methodology Framework Fundamentals": [
          "Agile Project Scrum Framework Fundamentals"
        ],
        "Practical Jira Scrum Kanban Jorney for Agile projects": [
          "JIRA 1: Product Owner creates Backlog with Epics and Stories",
          "JIRA 2: Scrum Team Developers split Stories into Tasks",
          "JIRA 3: Scrum Team Developers Sprints executions",
          "JIRA 4: utilize Zephyr Squad, create Test Plan and execute Test Cases"
        ]
      },
      "requirements": [
        "No experience is necessary - you will learn Scrum/Kanban in Jira practically during this course",
        "All you need is your positive attitude, willingness to learn and some time for self-improvement",
        "You need an ability to watch this practical \"hands-on\" course as a busine guidancess"
      ],
      "description": "Present time, Jira software holds an estimated 85+% market share for the Agile projects, using Scrum and Kanban approach, Project Planning, Scrum Sprints, Test Planning,  Issue/Defect life-cycle and is used by around 90,000 companies worldwide.\n\n\nThis course is very pragmatic visual demo, designed as \"hands-on\" and \"how-to\" practically apply Jira for typical Agile project with Scrum Methodology needs, imitating hypothetical Insurance company Agile project activities.\nDuring this course jorney, I want students to aquire actual experience, how exactly, Agile project actors are using Jira, contributing to a project,  and how much time the full cycle might consume.\n\n\nAfter brief Scrum Methodology fundamentals introduction or, if you already know, repetition, you will spend some time through visual journey, imitating Jira actions of the performing roles like: Product Owner, Scrum Team Developers, Scrum Master and potential Quality Assurance Analyst or Engineer.\n\n\nPlease note, that normally:\na. in the real large-scale companies productions environment, Jira will might be customized for the internal organization's needs by the specialists.\nb. Medium-range companies, might use classical (course videos) unadopted version.\nc. and small start-up companies, might utilize \"off-shelf\" Jira editions, procured from well-known Cloud Providers like Azure, AWS and GCP.\n\n\nThese visual demo journeys, relates directly to the following IT Industry employees:\nYou are a Product Owner carrying the responsibility to contact customers directly and create Product Backlog, Epics and Business/User Stories for Agile project\nYou are a Scrum Master, responsible for ensuring Scrum Methodology being implemented and followed during Agile project with mandatory Scrum training for  Team\nYou are a Project Manager, who have been informed about Agile project incoming, which requires practical Atlassian Jira and Scrum process knowledge\nYou are a Business Analyst, who is assigned to this Agile project, and is in need for fast-track practical Jira hand-on training\nYou are a Scrum Team Developer with the responsibility to split User Stories from Product Backlog into Tasks, estimate, award story points, prioritize and assign to Sprint\nYou are a QA Analyst, assigned to Team with responsibility to create Test Plan, Scenarios and Cases , execute such in Jira and report to the project management\nYou are an IT Industry beginner, who needs to learn fast \"how-to\" Agile project, which requires practical Atlassian Jira and Scrum process knowledge skills\n\n\nRemember: in real world, your actual Jira efforts outcome results, depend on personal knowledge of your organization's internal business.\nBe aware:  in real world,  your Jira credentials will be auto-assigned by separate dedicated Administrator, and also such assignment will be released to the project group team members.\nRead-Only rights will be granted to project stakeholders\nRead-Write rights will be granted to project Product Owner, Business Analyst, Scrum Master, Team Developers, Quality Assurance Analysts, Acceptance Specialists and influencial active participants.\n\n\nScrum Methodology related important notice:\nIn Scrum, story points estimation, typically, follows a sequence using the Fibonacci sequence (0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, and go on..) to represent not time, but relative efforts, with each number representing a corresponding unit of complexity.\nProfessional certified Scrum Masters are obligated to use above classical story points estimation technique.\nHowever, internally in your organization , you are free to equalize and assign story points to actual time estimated to be spent on a particular task, and thus, create, adopt and standardize your own story points sequence.\nAfter all, the Agile, means fast reaction with maximum flexibility, while Scum is an approach.",
      "target_audience": [
        "Any IT Industry beginner, already empolyeed Product Owner, Scrum Master, Project Manager, Developr, Business Analyst, Quality Assurance Analyst and Acceptance Engineer, etc..",
        "Anyone, who has time limits and needs to learn fast-track Jira application for the real world"
      ]
    },
    {
      "title": "Cucumber and Selenium in Java",
      "url": "https://www.udemy.com/course/cucumber-and-selenium-in-java/",
      "bio": "Learn with Examples",
      "objectives": [
        "Learn to write Selenium tests using Cucumber in Java",
        "Understand BDD concept",
        "Understand the Gherkin Language Syntax"
      ],
      "course_content": {},
      "requirements": [
        "Students should know basics of Java language.",
        "Students should have basic knowledge of Intellij IDEA or Eclipse"
      ],
      "description": "BDD stands for Behaviour Driven Development. In this course, you will learn how to adopt BDD approach using Cucumber framework in your software project. Selenium is top class open source web automation testing tool. There are plenty of Job opportunities for Selenium and Cucumber engineers all around the world. So if you want to make a career in automation testing and BDD, you must go ahead and take this course.\nIt is assumed that students have very basic knowledge of programming in any language like C, C++ or Java.\nYou will learn below topics in this course on Cucumber and Selenium.\nSetting up Cucumber and Selenium Maven project in IntelliJ IDEA\nUnderstand the meaning of BDD\nWriting the scenarios and feature files using Gherkin syntax\nUsing Cucumber backgrounds\nUsing Cucumber Scenario Outlines and examples\nWriting scenario step definitions\nPassing parameters and data tables to scenario step definitions\nExecuting Cucumber and Selenium tests using JUnit testing framework\nUsing Cucumber options likes tags, name, plugins\nAdding Before and after scenario hooks for Cucumber scenarios\nSharing Selenium Webdriver and test data using dependency injection framework (PicoContainer)\nGenerating custom html report for Cucumber tests\nWorking with Maven build management tool\nWorking with GIT\nIntegration with CI servers like TeamCity and Jenkins\nYou you will get below things out of this course\nLearn the basic concepts to get started with BDD using Cucumber and web automation testing using Selenium Webdriver in Java.\nLearn Cucumber and Selenium Webdriver from a professional trainer having 10+ years of experience in IT industry.\nMore than 16 lectures with average length of 10 minutes each.\nSuitable for beginner programmers and manual testers who want to switch to BDD and automation testing.\nThis course covers all aspects of web application automation using Cucumber and Selenium Webdriver in Java.\nThis course will help you master your skills in Cucumber and Selenium.\nAll your queries will be answered as soon as possible",
      "target_audience": [
        "Any one who is new to Cucumber and BDD should take this course",
        "Any one having basic Java programming Language experience"
      ]
    },
    {
      "title": "ISTQB CT - Test Automation Strategy (CT-TAS) | Mock Tests",
      "url": "https://www.udemy.com/course/istqb-ct-test-automation-strategy-ct-tas-mock-tests/",
      "bio": "[NEW] 6 Full Practice Exams | Preparation for the Test Automation Strategy (CT-TAS) certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Preparing for the ISTQB® Certified Tester – Test Automation Strategy (CT-TAS) certification?\nThis course is your ultimate guide to mastering test automation strategy concepts and passing the exam successfully. It is perfectly aligned with the ISTQB syllabus and provides you with everything you need to build both your knowledge and confidence for this coveted certification.\nWith 6 complete practice tests, you will experience an exam environment that mirrors the real test. Each question is accompanied by a detailed explanation, so you can fully understand the underlying concepts.\nExam Format:\nQuestion Types: Multiple-Choice\nDetailed Explanations: Each question includes a thorough explanation with additional information and a reference to the relevant chapter in the syllabus V1.0\nPass Mark: 65% of the questions must be answered correctly to pass the test – just like in the real exam\nDynamic Question and Answer Order: Every test is unique! The order of questions and answers changes with each attempt to simulate a realistic exam environment and prevent rote memorization.\nExam Duration: 60 minutes\nThe ISTQB® Certified Tester – Test Automation Strategy (CT-TAS) certification exam is one of the most valuable options for gaining a deep and comprehensive understanding of test automation strategy.\nThe course covers all key topics in the syllabus, making it a complete resource for confidently passing the CT-TAS exam.",
      "target_audience": [
        "Testers",
        "Test analysts",
        "Test automation engineers",
        "Test consultants",
        "Test architects",
        "Test managers",
        "Software developers"
      ]
    },
    {
      "title": "Selenium Testing Framework con Python ¡De novato a experto!",
      "url": "https://www.udemy.com/course/test-automation-con-python-desde-rookie-hasta-experto/",
      "bio": "Aprende Automatizacion de pruebas lleva tu skill QA a otro nivel y duplica tu salario en el proceso.",
      "objectives": [
        "Desarrollar casos de prueba automatizados que te permitan mejorar la cobertura de tus pruebas sobre aplicaciones"
      ],
      "course_content": {
        "Introducción": [
          "Automatización de Pruebas",
          "¿Cuándo Automatizar?",
          "Alcance – Ventajas",
          "Ciclo de Vida de las pruebas automatizadas.",
          "Calculando el ROI (Retorno de la Inversión)",
          "Demo de Automatización con Selenium Webdriver + Behave + Allure Framework"
        ],
        "Entendiendo Python": [
          "Introducción a Python & Configuración de Entornos Python en Windows. Parte 1",
          "Configuración de Entornos Python en Windows. Parte 2",
          "Instalación de librerías con PIP",
          "Entornos Virtuales Python",
          "Configuración de IDE (Entorno de desarrollo)",
          "Pycharm, Eclipse y otros IDE",
          "Esqueleto de un Framework de Automatización de Pruebas",
          "Introducción a Python Parte 1",
          "Primeros pasos en Python parte 2 (Regex)",
          "Primeros pasos en Python parte 3 (Regex)",
          "Entendiendo UnitTest",
          "Recursos unittest",
          "Entendiendo Pytest",
          "Ejecución de Test cases en Windows"
        ],
        "Entendiendo Selenium": [
          "¿Cómo funciona Selenium?",
          "Escribiendo test Cases con Selenium y Unittest Framework",
          "Un pequeño repaso",
          "Funciones Básicas Selenium: Find Elements & Select",
          "Escribiendo Xpaths Robustos",
          "Funciones Básicas Selenium: Frames y Ventanas",
          "Expected Conditions & Explicits Waits",
          "Manejando un conjunto de elementos con selenium",
          "Selenium Action Chains",
          "Selenium Javascript execute",
          "Funciones Básicas Selenium: Keys & Send keys",
          "Capturas de Pantalla con Selenium",
          "Entendiendo el DOM de una Aplicación web.",
          "Interpretando el DOM en Selenium",
          "¿Que debo considerar al automatizar?"
        ],
        "Navegadores": [
          "Plugins Parte 1",
          "Plugins parte 2 e implementación en Framework",
          "Herramientas Record & Play. (Selenium IDE – Katalon Studio)",
          "Perfiles de Usuario"
        ],
        "Page Objects Models": [
          "Introducción",
          "Esqueleto de Framework Page Objects Model",
          "Inicializar Configuraciones",
          "Configuración de navegadores para Selenium (Parte 1)",
          "Modelando funciones Selenium: identificadores (Locator) | Parte 1",
          "Modelando funciones Selenium: identificadores (Locator) | Parte 2",
          "Modelando funciones Selenium identificadores (Locator) texto, dropdown, waits",
          "Modelando funciones Selenium: Switch entre Iframes y Ventanas.",
          "Modelando funciones Selenium: JavaScript",
          "Modelando funciones Selenium: Alerts & Keys",
          "Modelando funciones Selenium: Assert & Verificaciones",
          "Modelando funciones Selenium: Variables de Escenario",
          "Modelando funciones Selenium: Databases!",
          "Modelando funciones Selenium: Excel",
          "Modelando funciones Selenium: ScreenShots!",
          "Ejecución de Reportes XML y HTML",
          "Cambio de cultura hacia las pruebas continuas.",
          "Skip test: Desestimando pruebas en la Ejecución",
          "Assertions: De text y Elementos"
        ],
        "Allure Framework.": [
          "Allure - Configuración en entornos Windows.",
          "Documentación de casos de prueba con Allure Framework.",
          "Capturas de pantalla para reportes.",
          "Ejecución de Matrices de Casos de Prueba && Análisis de resultados.",
          "Jenkins: Pipeline de ejecución de pruebas."
        ],
        "Test Basado en Comportamiento": [
          "Cucumber (Behave)",
          "Esqueleto de Framework BDD",
          "Cucumber – Gherkin sintaxis.",
          "Ejecución de Casos de Prueba & Reportes"
        ],
        "Actualización 2021": [
          "Webdriver Manager",
          "Implementae Hooks de Behave",
          "Variables de Entorno"
        ]
      },
      "requirements": [
        "Python Basico (deseable)",
        "Testing de Software (deseable)",
        "Lógica de programación",
        "Ganas de Aprender!"
      ],
      "description": "El objetivo del curso es que puedas:\nConfigurar de 0 un Framework de automatización de pruebas de aplicaciones web con Selenium Webdriver y Python.\nEscribir casos de pruebas con código de fácil mantenimiento y reutilizable.\nSeguimiento de casos de pruebas automatizados\nMantenimiento del Framework de Automatización\nAl iniciar este curso estarás más cerca de convertirte en un QA Engineer.\nCon este curso aprenderás a hacer automatización de pruebas para aplicaciones utilizando principalmente Python, Selenium entre otras librerías y herramientas. Abarcaremos extensamente cada uno de los tópicos mostrados a continuación.\nAl finalizar el curso serás un experto y duplicaras tu sueldo actual como tester.\n¿Qué es lo hace a este curso uno de los mejores de Udemy:\nNosotros asumimos que no tienes ninguna o poca experiencia en automatización de pruebas / Desarrollo / configuración de entornos entonces abordamos estos tópicos desde un nivel que cualquiera pueda entender.\nTesteamos aplicaciones reales en tiempo real para entender cómo cada componente puede ser automatizado.\nno necesitas experiencia previa.\nTe explicamos todo en más de 20 horas de video, prácticas y abordamos temas que te ayudarán a ampliar tu base de conocimientos.\n- Automatización de Pruebas.\n¿Cuándo Automatizar?\nAlcance – Ventajas\nCiclo de Vida de las pruebas automatizadas.\nDemostración.\n\n\n- Entendiendo Python.\nIntroducción a Python\nConfiguración de Entornos Python en Windows.\nInstalación de librerías.\nPytest\n\n\n- Entendiendo  Selenium.\n¿Cómo funciona Selenium?\nFunciones de Selenium.\nSelenium WebDriver.\nEntendiendo el DOM de una Aplicación web.\nTipos de identificadores.\nXpaths\nHerramientas Record & Play. (Selenium IDE – Katalon Studio)\n\n\n- Navegadores.\nPlugins.\nConfiguración de navegadores. IE, Chrome, Mozilla.\n\n\n- Ejecución de Primera Prueba Selenium\nConfiguración del WebDriver y Actualización de WebDriver.\nEstructura de una prueba Selenium – Python en su versión nativa.\n\n\n- Page Objects Models (POM)\nEsqueleto de Framework POM.\nTest dirigido por los datos (TDD)\nModelando funciones Selenium.\nReutilización de Código.\nScripting de Test Automatizados.\nLocalizadores\nCapturas de Pantalla.\nConsumiendo datos Excel y Json.\nWaits: Implícitos y Explícitos\nActionChains\nSelenium By.\nSelenium Keys.\nEjecutar Acciones con JavaScript.\n\n\n- Allure Framework. (Reportes y Auto documentación.)\nDocumentación de casos de prueba con Allure Framework.\nConfiguración de Librerías.\nCapturas de pantalla para reportes.\nConfiguración en entornos Windows.\nEjecución de Matrices de Casos de Prueba.\n\n\n- Análisis de reportes.\nAnalizar resultados de casos de prueba.\nEstimación de Casos de prueba.\n\n\n- Cucumber.\nTest Basado en Comportamiento. (BDD)\nEsqueleto de Framework BDD\nCucumber – Gherkin sintaxis.\nEjecución de Matrices de Casos de Prueba.\n\n\n- Jenkins.\nInstalación en entornos Windows.\nPlugins Jenkins.\nPipelines Jenkins.\n· Programar ejecución periódica.\n· Visualización de reportes allure.\n· Discusión. - (a lo largo del curso)\nCambio de cultura hacia las pruebas continuas.\nEstimar casos de pruebas automatizados.\nEstrategias de Equipo para la Automatización de Pruebas.\nAnálisis e Implementación. ¿Cómo empezar?\n\n\n- ¿Para quién es este curso?\nPara testers en general\nDevelopers\nInvolucrados en el proceso de desarrollo de software en general.\nInteresados en aprender tareas de automatización de pruebas para aplicaciones web.",
      "target_audience": [
        "Testers con que requieran aprender todo sobre la automatización de pruebas",
        "Desarrolladores que deseen implementar pruebas automatizadas para sus aplicaciones.",
        "Cualquier persona que desee aprender una nueva tecnología"
      ]
    },
    {
      "title": "Aprenda testes de integração com Spring Boot",
      "url": "https://www.udemy.com/course/testes-de-integracao-com-spring-boot/",
      "bio": "Crie testes de integração com Spring Boot: JUnit 5, assertJ, MockMvc, TestRestTemplate, Spring Security, Hamcrest, H2 DB",
      "objectives": [
        "Você vai melhorar seu conhecimento sobre testes.",
        "Você vai conseguir escrever testes de integração com mais qualidade usando Spring Boot.",
        "Você vai aprender sobre as ferramentas que o Spring Boot fornece para facilitar a criação de testes de integração",
        "Você vai aprender como criar testes de integração usando o Spring MVC e para APIs rest"
      ],
      "course_content": {},
      "requirements": [
        "Você deve ter conhecimento em java.",
        "Você deve ter conhecimentos básicos em Junit",
        "Você deve ter conhecimentos básicos em Spring Boot"
      ],
      "description": "Sobre o curso\nO mercado de trabalho está, a cada dia, demandando mais profissionais que conheçam sobre qualidade de software. Esse curso aborda a melhoria na qualidade de software através do aprendizado ou aperfeiçoamento sobre testes de integração.\nAo final deste curso você apto a entender e desenvolver testes de integração em aplicações que utilizem o Spring Boot.\nPorque eu devo aprender sobre qualidade de software ou sobre testes de integração?\nUm erro no software pode causar um prejuízo gigantesco para uma empresa.\nEm 2002 o NIST , Instituto Nacional de Padrões e Tecnologia em português, relatou que bugs de software custaram 59,5 bilhões de dólares a economia americana.\nErros no software podem afastar negócios e clientes, devido a isso as empresas, cada vez mais, estão buscando melhorar a qualidades dos seus produtos, para ganharem mais confiança dos seus clientes e do mercado, que é muito competitivo, além de procurarem formas de reduzirem os custos.\nO conhecimento nessa área pode ser o diferencial em uma seleção de emprego.\nPorque Spring? Porque Spring Boot?\nO Spring é um framework amplamente utilizados no mercado de trabalho. Diversas empresas, grandes ou pequenas, utilizam o Spring e o Spring Boot veio com a finalidade de facilitar o uso do Spring.\n\n\nBônus\nCom a procura por profissionais de TI em alta, eu estou disponibilizando como bônus um curso que pode ajudar os profissionais a conseguirem vagas no exterior.",
      "target_audience": [
        "Desenvolvedores, analistas e arquitetos de software que queiram aprender mais sobre testes de integração com Spring Boot",
        "Desenvolvedores e analistas de testes que desejam aprender ou aprimorar seus conhecimentos sobre os testes de integração usando Spring Boot"
      ]
    },
    {
      "title": "Robot Framework Mastery - From Zero to Hero",
      "url": "https://www.udemy.com/course/robot-framework-mastery/",
      "bio": "Learn how to quickly and easily build Selenium UI using Robot Framework with this step-by-step tutorial",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to Robot Framework",
          "Quiz Time: Simple questions to refresh your knowledge on Section 1"
        ],
        "Robot Framework Architecture": [
          "Robot Architecture and Keywords",
          "Quiz Time: Simple questions to refresh your knowledge on Section 2"
        ],
        "Step-by-Step Installation and Setup": [
          "Robot Installation and Setup"
        ],
        "Test Case Development": [
          "Create your First Robot Script",
          "Quiz Time: Simple questions to refresh your knowledge on Section 4"
        ],
        "Test Report Generation": [
          "Robot Report Generation and Analysis",
          "Quiz Time: Simple questions to refresh your knowledge on Section 5"
        ],
        "Multi-Browser Testing": [
          "Launch Microsoft Edge Browser"
        ],
        "Real Website Testing using Robot": [
          "Live EdTech Application Testing",
          "Live E-Commerce Application Testing"
        ],
        "Advanced Robot Automation": [
          "Advanced Actions - Drag and Drop",
          "Quiz Time: Simple questions to refresh your knowledge on Section 8"
        ]
      },
      "requirements": [
        "Basic understanding of software testing concepts",
        "General knowledge of web technologies",
        "No programming experience needed, everything teached from scratch"
      ],
      "description": "Your struggle on designing Test Automation Frameworks ends here. Presenting you the only framework in the Market which is faster and easy to design with very less code..- \"Robot Framework\"\n\nThis Framework consists of all the features what (Cucumber + TestNG) provides. This Framework by default comes with many Libraries which helps to build automation tests without writing much boilerplate code. Additionally you also have ability to build your custom Libraries with Python code..\n\nIt's just not about Libraries, this powerful Automation framework automatically provides Rich HTML reports, Logging, Screenshots on failure and many more without writing single piece of code..\n\nThis course mainly focus on how to design Selenium UI Tests (100%) with Robot Framework on high level with Robot Framework. Python is the language chosen to design the Framework as Python is widely used choice for Robot Frameworks\nYou can comfortably follow this course without having python basics as well.\n\n\nBelow is the high level content on what this course covers\nIntroduction to Robot Framework\nUnderstanding Robot Framework Architecture\nStep-by-step Installation\nHow to build custom Robot keywords using Python\nEnd to end In depth examples of UI Automation with Selenium Libraries of Robot\nAutomatic generation of rich HTML reports with logging for test execution results\nSelective test execution using tagging & filters in the framework\nTesting with multiple browsers like Chrome, Edge and Firefox\nAdded Live Hands-on Application Testing\nAdvanced actions like Drag and Drop\n\n\nSkill Up, Level Up. All the best for your successful career.",
      "target_audience": [
        "Beginner software testers curious about test automation",
        "QA Professionals",
        "Aspiring Test Automation Engineers"
      ]
    },
    {
      "title": "Início Rápido em Teste e QA",
      "url": "https://www.udemy.com/course/inicio-rapido-em-teste-de-software-e-qa/",
      "bio": "O mais recomendado por empresas e gestores (+ de 26 mil alunos). Comece em Teste de Software e QA",
      "objectives": [
        "Um curso criado com o olhar de profissionais de várias empresas, para maximizar o aprendizado e a empregabilidade em Teste de Software e QA.",
        "Este treinamento vai lhe proporcionar uma visão clara da profissão, seus fundamentos e ajudar a decidir continuar sua formação nesta área.",
        "Várias empresas e gestores recomendam aos profissionais ingressantes que façam este treinamento na primeira semana de trabalho.",
        "Antecipe-se, surpreenda na entrevista e cause uma ótima impressão já nos primeiros dias no novo trabalho."
      ],
      "course_content": {
        "Apresentação do curso": [
          "Carreira em Teste e QA",
          "Quiz",
          "Por que o próprio Dev não testa?",
          "Quiz",
          "Habilidades Pessoais do Testador/QA",
          "Quiz",
          "Habilidades Interpessoais do Testador/QA",
          "Quiz",
          "Trabalho em Equipe",
          "Quiz",
          "Hard Skills",
          "Quiz",
          "Débito Técnico",
          "Quiz",
          "Os Diferentes Objetivos deste Curso",
          "Quiz",
          "Como Estudar e Progredir",
          "Quiz",
          "Um Mapa para o Futuro",
          "Quiz",
          "IRTS - Apresentação do Curso - Simulado"
        ],
        "Introdução ao Teste de Software": [
          "Uma Breve História do Teste",
          "Importância do Teste X Danos dos Bugs",
          "Os 7 Fundamentos do Teste (ISTQB)",
          "Teste Demonstra a Presença de Defeitos, Mas Nunca a Sua Ausência",
          "Teste Exaustivo Não É Possível",
          "Teste Antecipado",
          "Agrupamento de Defeitos",
          "Paradoxo do Pesticida",
          "Teste Depende de Contexto",
          "A Ilusão da Ausência de Erros",
          "Diferença entre Teste e QA",
          "Erro, Ocorrência, Defeito e Falha",
          "Tipos de Testes Baseados na IEC/ISO 25010",
          "IEC/ISO 25010 - Adequação Funcional",
          "IEC/ISO 25010 - Usabilidade",
          "IEC/ISO 25010 - Compatibilidade",
          "IEC/ISO 25010 - Confiança",
          "IEC/ISO 25010 - Eficiência no Desempenho",
          "IEC/ISO 25010 - Manutenibilidade",
          "IEC/ISO 25010 - Portabilidade",
          "IEC/ISO 25010 - Segurança",
          "Testes Manuais X Testes Automatizados",
          "Testes Tradicionais X Testes Ágeis",
          "IRTS - Introdução ao Teste de Software - Simulado"
        ],
        "Atitudes de um Profissional da Qualidade": [
          "Pressão Organizacional",
          "Comprometido X Envolvido",
          "Autogerenciamento",
          "Comunicação Verbal e Não Verbal",
          "Negociação (Ganha-Ganha)",
          "Produtividade - Parte 1",
          "Produtividade - Parte 2",
          "Fluxo Contínuo - Parte 1",
          "Fluxo Contínuo - Parte 2",
          "Técnica Pomodoro"
        ],
        "Planejamento de Testes": [
          "Negociando um acordo flexível e de valor",
          "Plano de Teste",
          "Mapa Mental como alternativa no planejamento",
          "Requisitos Funcionais e Não Funcionais",
          "Estórias dos Usuários",
          "Pre-Game",
          "Product Backlog",
          "Sprint",
          "Sprint Backlog",
          "Épicos",
          "Features",
          "Análise de Riscos",
          "Matriz de Risco",
          "Planning Poker",
          "Histórico dos Riscos",
          "Análise de Pareto",
          "Priorização por Impulso",
          "Priorização por Atração",
          "Análise da Cauda Longa",
          "Exemplo de Uso de Pairwise na Cauda Longa (PICT Online)",
          "IRTS - Planejamento de Testes"
        ],
        "Análise, Modelagem e Implementação": [
          "O que é analise de teste?",
          "O que é Modelagem?",
          "O que é Implementação?",
          "Cenário: Ambiente",
          "Cenário: Situações",
          "Suítes de Teste",
          "Casos de Teste",
          "Caso de Teste: Data Driven e Keyword Driven",
          "Introdução ao TDD BDD ATDD",
          "Testes Unitários"
        ]
      },
      "requirements": [
        "Não é necessário nenhum conhecimento prévio, apenas paciência em aprender termos e conceitos novos."
      ],
      "description": "Criado originalmente para atrair novos profissionais para a área de Tecnologia de um dos maiores bancos da América Latina, este curso apresenta os fundamentos e um visão sólida da área de Testes e QA, de maneira clara, rápida e objetiva.\nSe você estava pensando em como começar em TI, em Testes ou em QA, este é o curso ideal para você.\nVocê vai aprender sobre:\nA carreira de Testes e QA e sentir se ela é para você\nAs habilidades técnicas, pessoais e interpessoais de um profissional\nOs 7 Fundamentos do Teste de Software\nA diferença entre Testes e QA\nAs características da qualidade segundo a ISO 25010\nComo testes manuais e automatizados se complementam\nComo um profissional de Testes e QA trabalha em um time ágil\nAtitudes e práticas de Testes Ágeis\nTécnicas para aumentar a sua produtividade como profissional\nRealizar Análise de Riscos, Análise de Pareto e complementar com Pairwise\nCenários, Suítes, Casos de Teste e Mapas Mentais\nAntes de chegar aqui no Udemy, o curso de Início Rápido em Teste de Software e QA já ajudou mais 15 mil alunos a conhecer e ingressar na profissão. Sendo também atualmente o curso mais recomendado por gestores e times aos novos contratados, dentro do processo de onboarding das empresas.\nA Iterasys é o principal centro de excelência em Qualidade de Software no Brasil, desde 2006, e o prof. José Correia, que ministra o treinamento é referência na formação de novos profissionais na área, compartilhando sua vasta experiência em projetos e consultorias.",
      "target_audience": [
        "Iniciantes sem qualquer experiência prévia",
        "Pessoas de todos os segmentos que desejam trabalhar na área de Tecnologia da Informação (TI), em especial nas profissões de Teste de Software e QA.",
        "Profissionais da área que buscam atualização"
      ]
    },
    {
      "title": "Advanced Level Test Automation Engineer ISTQB - 2025",
      "url": "https://www.udemy.com/course/advanced-level-test-automation-engineer-istqb-mock-tests-c/",
      "bio": "Preparation for your ISTQB exam certification: Advanced Level Test Automation Engineer-100% Success-Non officiel",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "This exams is designed for students who want to earn the ISTQB® Advanced Test Automation Engineer Certification or enhance their knowledge of test automation strategies. Students will delve into the methodologies, techniques, and tools vital for advanced automation in software testing.\nThis course contains many tests to get ready for the Test Automation Engineer exam. Explanation are added for all questions.\nThe tests cover the whole syllabus as listed on the ISTQB website for the Test Automation Engineer certificate.\nEach test contains questions like the original exam. You'll be timed and graded on your results. It's a good way to see how ready you are for the real thing! The questions are followed by analysis of the question and a short explanation of the concepts being tested on the question.\n\n\nThe exams are formatted just like the real questions would be. I am confident that you will be fairly tested on your knowledge of automated testing after taking this exam.\n\n\nBenefits of Advanced Test Automation Engineer Certification:\nParticipate in creating a strategy to incorporate automated testing into the overall testing process.\nEvaluate automation tools and technologies to determine the best fit for each project and organization.\nDevelop a strategy and method for constructing a test automation architecture (TAA).\nDesign and create new or adapt existing test automation solutions to meet business requirements.\nFacilitate the shift from manual testing to an automated approach.\nEstablish automated processes for test reporting and the collection of metrics.\nOversee and improve testing assets to ensure maintainability and adaptability to changing test systems.\nEnroll now and start your journey to becoming an Certified Advanced Test Automation Engineer!\n\n\n\n\nThe Test Automation Engineer certification is aimed at people who already have experience in software testing and who wish to further develop their expertise in automation testing.\n\n\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.\nje ne suis pas affilié à ISTQB , ce cours n'est pas officiel",
      "target_audience": [
        "Everyone who is interested in taking the Advanced Level Test Automation Engineer",
        "This course is for anyone who wants to enhance their test automation skills or earn the Certified Tester Test Automation Engineer"
      ]
    },
    {
      "title": "Yazılım Test Uzmanlığı Eğitimi: Sıfırdan İleri Seviye",
      "url": "https://www.udemy.com/course/yazilim-test-uzmanligi-egitimi/",
      "bio": "Sıfırdan Yazılım Test Uzmanlığını öğren. Mobil/Web/API Testleri - ISTQB -Jira/Postman/TestRail/SQL ve daha fazlası!",
      "objectives": [
        "Sadece 5 saatte Yazılım Testinin temellerini öğren",
        "Yazılım Test bilgini geliştirerek kariyerini ilerlet",
        "Jira, Confluence, TestRail, TestLodge, Postman gibi test araçlarını öğren ve CV'ne ekle",
        "Kısaca sektörde yeni ya da tecrübeli de olsa, test bilginizi geliştirerek, Test Uzmanlığında bir sonrakiye seviyeye geçebileceksiniz."
      ],
      "course_content": {
        "Introduction": [
          "Kursun Amacı",
          "Yazılım Testine Genel Bakış"
        ],
        "Yazılım Testinin Temelleri": [
          "Bölüm Başlangıcı",
          "Yazılım Geliştirme Yaşam Döngüsü (SDLC)",
          "Yazılım Test Uzmanının Sorumlulukları",
          "Yazılım Hata Raporlaması ve Hata Yaşam Döngüsü",
          "Hata (Bug) Raporlama Alıştırması",
          "Yazılım Gereksinim Analizi",
          "Test Senaryosu (Test Case) ve Test Kontrol Listesi (Checklist)",
          "Test Senaryosu ve Kontrol Listesi Alıştırması",
          "Yazılım Testinin Temelleri - Bölüm Sonu Testi",
          "Test Bülteni, Youtube ve Diğer Sosyal İçerikler"
        ],
        "Yazılım Test Metotları ve ISTQB": [
          "Bölüm Başlangıcı",
          "Yazılım Test Seviyeleri",
          "Kara Kutu (Black Box) ve Beyaz Kutu (White Box) Testleri",
          "Kara Kutu (Black Box) Test Teknikleri",
          "Kara Kutu Test Teknikleri Alıştırması",
          "Kara Kutu Test Teknikleri Quiz",
          "Tecrübeye Bağlı Test Teknikleri",
          "Yazılım Test Topluluğu"
        ],
        "İleri Seviye Yazılım Test Teknikleri": [
          "Bölüm Başlangıcı",
          "Negatif Testler (Negative Testing)",
          "Duman ve Mantıklılık Testleri (Smoke and Sanity Testing)",
          "Regresyon Testleri (Regression Testing)",
          "Risk Bazlı Testler",
          "Risk Bazlı Testler Alıştırması",
          "Statik Testler",
          "Statik Testler - Gözden Geçirme Alıştırması",
          "Test Planlaması ve Tahminlemesi",
          "Yazılım ve Test Ortamları"
        ],
        "Web, Mobil ve API (Arayüz) Testleri": [
          "Bölüm Başlangıcı",
          "API (Uygulama Programlama Arayüzü) Testi",
          "API Dokümantasyonu Okuma",
          "Postman ile API Testi",
          "Web Uygulama Testleri",
          "Web Uygulama Test Alıştırması",
          "Mobil Uygulama Testleri",
          "Mobil Uygulama Test Pratiği"
        ],
        "Yazılım Test Araçları": [
          "Bölüm Başlangıcı",
          "Jira ile Hata Raporlaması ve Çevik Proje Yönetimi",
          "GitHub ile Hata Raporlaması",
          "Confluence ile Dökümantasyon",
          "TestRail ile Test Süreç Yönetimi",
          "TestLodge ile Test Süreç Yönetimi"
        ],
        "SQL ile Veritabanı (Database) Testi": [
          "Veritabanı Temelleri ve Test",
          "PgAdmin, PostGreSql Kurulumu ve İlk Çağrı",
          "SQL Sorguları ve Veritabanı (Database) Testi"
        ],
        "İleri Seviye: Mind-Map ve Test Senaryosu Uygulamalı Eğitim": [
          "Mind-Map",
          "Mind-Map ile Test Analizi ve Test Senaryosu Oluşturma"
        ],
        "İş Görüşmelerine Hazırlık - CV ve Mülakat Örnekleri": [
          "Bölüm Başlangıcı",
          "Yazılım Test Uzmanı CV Hazırlama",
          "İş Görüşmelerinde Yapılması Gerekenler"
        ],
        "Bonus: Ekstra Kaynaklar": [
          "Bir Sonraki Adım",
          "Tüm Eğitim Sunumları",
          "ISTQB Türkçe Çeviri Sözlüğü",
          "ISTQB Türkçe Giriş Seviyesi Dökümanı"
        ]
      },
      "requirements": [
        "Bilgisayar, Windows,Mac yada Linux işletim sistemi",
        "Mobil test dersleri için Android ya da iOS (Apple) cep telefonu",
        "Ve tabiki de öğrenme isteğiniz ve çabanız!"
      ],
      "description": "Yazılım Test Uzmanlığı eğitimine hoşgeldiniz!\nBu eğitim ile Yazılım Test Uzmanlığı mesleğini öğrenebilir ve kendinizi geliştirebilirsiniz. Kursun ilk kısmında bu meslek için gerekli olan temel teorik bilgileri öğreneceğiz. Sonrasında, Mobil Testleri, Arayüz (API) testleri, Web Testleri ve JIRA, TestRail, TestLodge, Confluence, Postman ve gitHub gibi araçları öğreneceğiz. Bu kursun sonunda, Test Mühendisliği iş ilanlarına başvurabilecek seviyeye gelebileceksiniz.\n\n\nBu kursta sizlere adım adım, başarılı bir test uzmanı olmak için gerekli tüm bilgileri öğreteceğim.\n\n\nBu eğitimi, İngilizce olarak hazırladığım Software Testing Masterclass ve Mobile Testing Masterclass eğitimlerine gelen yoğun talep sonrasında hazırladım. İngilizce eğitimlerimde 10.000+ öğrencim mevcut ve yazılım testi alanında en başarılı ve en çok satan eğitimlerden.\n\n\nBu eğitimdeki tüm videolar 1080P (HD) kalitesinde ve sizlerin daha rahat anlayabilmesi için yüksek ses kalitesine sahip. Tüm ders videolarının üzerinde çalışılarak gereksiz kısımlar çıkartıldı. Bu sayede eğitimden gerekli bilgiyi en kısa sürede elde edebileceksiniz.\n\n\nBu kursu neden almalıyım ?\nBu kurs Udemy'de bulunan en iyi ve en güncel yazılım test kursu. İngilizce kurslarıma olan büyük talep sonrasında, Türkiye yazılım sektörüne katkısı olması için bu eğitimi hazırladım. Yazılım testini çevik bakış açısıyla, teorik bilgileri pratiğe çevirebilecek şekilde anlattım. İngilizce ve Türkçe bulabileceğiniz eğitimlerin çoğu anlaşılar bil dilde değil ve gerçek iş tecrübesini yansıtmıyor. Bu eğitimde 10 yıla yakın olan Yazılım Test tecrübemi sizlerle paylaştım. Kariyerimde Türkiye'de : QNB Finansbank ve Doğuş Teknoloji , Belçika'da: Energy Pages ve Hollanda'da Qardio ve Payconiq firmalarında çalışma fırsatı buldum. Halen aktif olarak Payconiq (Amsterdam) firmasında Uzman Test Mühendisi ve Scrum Master olarak görev almaktayım.\n\n\nEğitime kaydolun ve:\n5 saat üzeri HD ders videolara erişim imkanı\nYazılım Test Uzmanı olabilmeniz için gereken tüm bilgiler\nYazılım Testi ile ilgili sektördeki güncel bilgileri öğrenip, kariyerinizi ileri taşıyabilirsiniz.\nAyrıca yazılım testi ve kariyer yolu ile ilgili tüm sorularına 24 saat içerisinde cevap alabileceksiniz.\n\n\nHiçbir risk yok\nBu kurs Udemy'nin 30 gün para iadesi garantisi içerisindedir. Eğer eğitimden memnun kalmazsanız, 30 gün içerisinde %100 para iadesi alabilirsiniz.\n\n\nBaşlamaya hazır mısınız ?\nEğitime bugün kaydolun ve başarılı bir test uzmanı olman için ilk adımı atın.\nKursta görüşmek üzere!",
      "target_audience": [
        "Hiçbir yazılım test tecrübesi olmayan ve IT sektörüne giriş yapmak isteyenler",
        "Test Uzmanlığı pozisyonuna yeni başlamış Jr. Test Uzmanları",
        "Kendini geliştirmek isteyen Orta seviyede (2-3) yıl tecrübe Test Uzmanları",
        "Yeni test araçları öğrenmek isteyen Uzman Test Uzmanları",
        "Kısaca bu kurs, tecrübeli ya da tecrübesiz herkes için uygundur."
      ]
    },
    {
      "title": "Test Otomasyonunun Temelleri",
      "url": "https://www.udemy.com/course/test-otomasyonunun-temelleri/",
      "bio": "Test Otomasyonu 101. Test Otomasyonu kariyerinize ilk adımı bu kurs ile atarak gerekli temel bilgileri öğrenin.",
      "objectives": [
        "Test otomasyonu kariyerinize ilk adımlarınızı atacaksınız.",
        "Test otomasyonu en iyi uygulamalarını ve araçlarını öğrenin.",
        "Canlı projelerle API ve WEB otomasyonu ile pratik yapın.",
        "Gelecekteki işverenlere test otomasyonu anlayışınızı gösterebileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Kurs Yol Haritası"
        ],
        "Test Otomasyonun Esasları": [
          "Bölüm Başlangıcı",
          "Test Mühendisi Kariyer Yolu",
          "Yazılım Test Uzmanının Çevik(Agile) Projelerdeki Önemi",
          "Yazılım Testi vs Test Otomasyonu"
        ],
        "Test Otomasyon Stratejisi Oluşturma": [
          "Bölüm Başlangıcı",
          "Test Piramidi (Testing Pyramid)",
          "Birim (Unit) Testi",
          "Entegrasyon Testi",
          "Uçtan Uca (e2e) Testler",
          "Otomatize Edilecek Testlere Karar Verme",
          "Test Otomasyonu Ne Zaman Başlamalı?"
        ],
        "Test Otomasyon Platformları ve Araçları": [
          "Bölüm Başlangıcı",
          "API/Arayüz Test Otomasyonu ve Araçları",
          "Web/UI Test Otomasyonu ve Araçları",
          "Mobil Test Otomasyonu ve Araçları",
          "Kodsuz (Low Code/No Code) Test Otomasyonu Araçları",
          "CI/CD İçerisinde Test Otomasyonu"
        ],
        "Test Otomasyonu Yönetimi": [
          "Bölüm Başlangıcı",
          "Test Otomasyon Kültürü Oluşturma",
          "Test Otomasyonunuzun Değerini Ölçme"
        ]
      },
      "requirements": [
        "Gereken tüm ücretsiz yazılım ve araçları yüklemek için Windows, Mac veya Linux yüklü bir bilgisayar.",
        "Temel Yazılım Testi deneyimine sahip olmak iyi olucaktır ancak şart değil."
      ],
      "description": "'Test Otomasyonunun Temelleri' eğitimine hoş geldiniz!\n\n\nBu kurs ile test otomasyonunun temellerini öğrenerek, test otomasyonu uzmanlığı kariyerine ilk adımınızı atın. Kursumuza test mühendisliği kariyer yol haritası ile başlayacağız. Sonrasında,  test otomasyonu stratejisi bölümünde, test piramidini ve ideal test otomasyon seviyelerini öğrendikten sonra, farklı test platformlarını ve araçlarını öğreneceğiz. Kursun sonunda, test otomasyon mühendisliğini detaylı öğrenerek, bir sonraki adımınızı bilinçli şekilde atabileceksiniz.\n\n\nBu kursu, universitedeki ilk ders olabilecek Test Otomasyonu 101 olarak düşünebilirsiniz.\nBu kurs, Test Otomasyon serimizin ilk adımıdır. Devam kursları ile istediğiniz platformlarda uzmanlaşarak kariyerinizde hedeflediğiniz noktaya ulaşabilirsiniz.\n\n\nBu eğitimdeki tüm videolar 1080P (HD) kalitesinde ve sizlerin daha rahat anlayabilmesi için yüksek ses kalitesine sahip. Tüm ders videolarının üzerinde çalışılarak gereksiz kısımlar çıkartıldı. Bu sayede eğitimden gerekli bilgiyi en kısa sürede elde edebileceksiniz.\n\n\nBu kursu neden almalıyım ?\n\n\nBu kurs Udemy'de bulunan en iyi ve en güncel test otomasyonuna giriş kursudur. İngilizce kurslarıma olan büyük talep sonrasında, Türkiye yazılım sektörüne katkısı olması için bu eğitimi hazırladım. Yazılım sektöründe test otomasyon uzmanlarına olan talep günden güne artmaktadır. Bu eğitim ile beraber test otomasyon mesleğinin ne olduğunu detaylı bir şekilde öğrenerek, bu alana ilk girişinizi yapabilirsiniz.\n\n\nHiçbir risk yok\nBu kurs Udemy'nin 30 gün para iadesi garantisi içerisindedir. Eğer eğitimden memnun kalmazsanız, 30 gün içerisinde %100 para iadesi alabilirsiniz.\n\n\nBaşlamaya hazır mısınız ?\nEğitime bugün kaydolun ve başarılı bir test uzmanı olman için ilk adımı atın.\nKursta görüşmek üzere!",
      "target_audience": [
        "Bu kurs, test otomasyonu dünyasına girmek isteyen yazılım testçileri için idealdir.",
        "Kendini geliştirmek isteyen orta seviyeli test uzmanları.",
        "Kariyerlerine otomasyon alanında devam etmek isteyen yazılımcılar.",
        "Test otomasyonu ve gelecekteki iş fırsatları hakkında daha fazla bilgi edinmek isteyenler."
      ]
    },
    {
      "title": "Intro to DevOps and Testing",
      "url": "https://www.udemy.com/course/intro-to-devops-and-testing/",
      "bio": "Level up your development skills with testing, devops, pipelines and github actions.",
      "objectives": [
        "Foundational Knowledge of DevOps, Testing, and Development Methodologies",
        "Differentiate between Continuous Delivery (CD) and Continuous Deployment, including their benefits and risks.",
        "Understand the role of automated testing in DevOps pipelines.",
        "Define what a pipeline is and explain its significance in DevOps workflows.",
        "Explore key DevOps tools and their purposes, including:",
        "Embrace a DevOps mindset of shared responsibility, rapid iteration, and continuous feedback."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Intro to DevOps and Testing - Introduction"
        ],
        "What is DevOps?": [
          "What is DevOps?",
          "Understanding DevOps",
          "DevOps vs Waterfall",
          "DevOps vs Agile",
          "How does DevOps fit?",
          "Quiz: What is DevOps?"
        ],
        "DevOps and Testing": [
          "DevOps and Testing - Working Together",
          "What is Unit Testing?",
          "Unit Testing Explained",
          "What is Integration Testing?",
          "Integration Testing Explained",
          "What is Functional Testing?",
          "Functional Testing Explained",
          "What is Smoke Testing?",
          "Smoke Testing Explained",
          "What is Regression Testing?",
          "Regression Testing Explained",
          "What is Performance Testing?",
          "Performance Testing Explained",
          "What is Security Testing?",
          "Security Testing Explained",
          "Quiz: DevOps and Testing"
        ],
        "Delivery, Integration, and Deployment": [
          "What Is Build Automation?",
          "Build Automation Explained",
          "Continuous Delivery vs. Continuous Deployment",
          "Continuous Delivery vs. Continuous Deployment Explained",
          "Continuous Integration (CI)",
          "Continuous Integration (CI) Explained",
          "Pipelines",
          "Pipelines Explained",
          "Quiz: Delivery, Integration, and Deployment"
        ],
        "Working with Tests and Github Actions": [
          "GitHub Actions",
          "Setting Up Your Repo (.NET Example)",
          "Setting Up Your Repo (Python Example)",
          "Adding A Unit Test",
          "Adding an Integration Test",
          "Adding a Smoke Test",
          "Adding a Performance Test",
          "Coding Assignment: Write Tests for an API Project"
        ]
      },
      "requirements": [
        "Some programming experience in a language such as C#, Java, or Python. Introductory coding concepts are not covered in this course.",
        "Basic understanding of software development (functions, classes, version control)",
        "Some familiarity with command-line tools (like Git CLI, running test commands)",
        "Willingness to learn new tools and adopt a continuous improvement mindset"
      ],
      "description": "DevOps Course Learning Objectives\nBy the end of this course, students will be able to:\nFoundational Knowledge\nDefine DevOps and explain its core purpose, history, and evolution.\nDifferentiate DevOps from Waterfall and Agile methodologies.\nExplain the relationship between DevOps and Continuous Delivery.\nDescribe the role of culture, collaboration, and automation in successful DevOps adoption.\nContinuous Integration, Delivery, and Deployment\nDefine Continuous Integration (CI) and describe its role in catching issues early.\nImplement basic CI pipelines using tools like GitHub Actions or Jenkins.\nDifferentiate between Continuous Delivery (CD) and Continuous Deployment, including their benefits and risks.\nExplain the structure of a CI/CD pipeline and the stages involved.\nDevOps and Testing Practices\nUnderstand the role of automated testing in DevOps pipelines.\nDescribe and distinguish between different types of testing:\nUnit Testing\nIntegration Testing\nFunctional (End-to-End) Testing\nSmoke Testing\nRegression Testing\nPerformance Testing\nSecurity Testing\nWrite and organize automated test suites using C# and NUnit.\nPipelines and Automation\nDefine what a pipeline is and explain its significance in DevOps workflows.\nList and describe the key stages of a DevOps pipeline: Build, Test, Release, Deploy.\nImplement simple build and test automation scripts.\nIdentify best practices for building fast, reliable, and secure pipelines.\nTools and Technologies\nExplore key DevOps tools and their purposes, including:\nSource Control:\nCI/CD Platforms:\nTesting Frameworks:\nDevOps Mindset and Culture\nEmbrace a DevOps mindset of shared responsibility, rapid iteration, and continuous feedback.\nRecognize the cultural changes required for successful DevOps implementation.\nApply principles like Shift Left Testing and Fail Fast to modern development practices.\nOverall Outcomes\nBy completing this course, students will:\nBuild and manage automated pipelines that integrate build, test, and deployment processes.\nUnderstand how to write and integrate automated tests across the development lifecycle.\nUse DevOps best practices to deliver faster, more reliable, and higher-quality software.\nBe prepared to contribute to or lead DevOps initiatives within development teams and organizations.",
      "target_audience": [
        "Junior to mid-level developers who already understand coding basics (in languages like C#, JavaScript, Python, etc.)",
        "Individuals targeting roles in DevOps, CI/CD engineering, or cloud infrastructure",
        "Testers or Quality Assurance professionals learning how testing fits into automated DevOps pipelines",
        "Developers, testers, or system administrators working in agile teams moving toward DevOps practices",
        "Final-year students who have covered programming, basic databases, and software development principles"
      ]
    },
    {
      "title": "Mastering Automation Testing with Selenium and Python",
      "url": "https://www.udemy.com/course/introduction-to-automated-testing-with-selenium-using-python/",
      "bio": "Empower your testing skills with Selenium, Python, and automation strategies with efficient software testing course",
      "objectives": [
        "Delves into Automation Testing, outlining its significance in modern software development.",
        "Compares Manual and Automation Testing, offering insights into their respective strengths and applications.",
        "Explores Locators in Selenium, crucial for identifying and interacting with web elements.",
        "Details the handling of various web elements like radio buttons, checkboxes, dropdowns, date pickers, popups, and windows.",
        "Explores Implicit and Explicit Waits, essential techniques for handling synchronization in Selenium.",
        "Explores Behavior-Driven Development (BDD) with Selenium, covering feature files, creating steps, writing automation scripts, and presenting the output."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course"
        ],
        "Getting Started": [
          "Automation Testing",
          "Manual Vs Automation Testing",
          "Python Basics"
        ],
        "Selenium Webdriver Basics and API Testing": [
          "Introduction to Selenium",
          "Locators in Selenium",
          "Locators in Selenium Continued",
          "WebElement in Selenium - Basic Methods",
          "Radio and Checkbox",
          "Dropdown",
          "DatePicker",
          "Handling Popups",
          "Windows"
        ],
        "Synchronization": [
          "Synchronization in Selenium",
          "Implicit Wait",
          "Explicit Wait"
        ],
        "Unit Test With Selenium": [
          "Introduction to Unit Test With Selenium",
          "Unit Testing with Selenium"
        ],
        "Page Object Model": [
          "Introduction to POM",
          "Implementation",
          "Implementation Continued"
        ],
        "BDD with Selenium": [
          "Introduction to BDD with Selenium",
          "Feature Files",
          "Creating Steps",
          "Writing Automation Scripts",
          "Output"
        ],
        "Conclusion": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "Python coding experience is not needed. Even non Programming candidates can follow this course comfortably"
      ],
      "description": "\"Introduction to Automated Testing with Selenium using Python\" is a comprehensive course that equips learners with essential skills in automated software testing using Selenium. The course starts by introducing the fundamental concepts of automation testing and provides insights into the distinctions between manual and automated testing. Learners are then guided through Python basics, offering a solid foundation for scripting automated tests. We will be learning the followings.\nSection 1 & 2: Introduction\nLecture 1 introduces learners to the course, offering a sneak peek into the comprehensive content they will explore. Lecture 2 in Section 2, \"Getting Started,\" provides an overview of Automation Testing, followed by a thoughtful comparison of Manual Vs Automation Testing in Lecture 3. The section concludes with a foundational understanding of Python Basics in Lecture 4.\nSection 3: Selenium WebDriver Basics and API Testing\nThis section begins with an Introduction to Selenium in Lecture 5, followed by an in-depth exploration of Locators in Selenium in Lectures 6 and 7. Lecture 8 focuses on the essential WebElement in Selenium and its basic methods. The subsequent lectures tackle the handling of different elements such as Radio, Checkbox, Dropdown, DatePicker, Popups, and Windows.\nSection 4: Synchronization\nSection 4 delves into the crucial aspect of Synchronization in Selenium, addressing timing issues in automation scripts. Lecture 14 introduces Synchronization, followed by detailed discussions on Implicit and Explicit Waits in Lectures 15 and 16.\nSection 5: Unit Test With Selenium\nUnit Testing with Selenium takes the spotlight in Section 5, with Lecture 17 providing an introduction and Lecture 18 guiding learners through practical implementations.\nSection 6: Page Object Model\nSection 6 introduces the Page Object Model (POM) in Lecture 19, followed by comprehensive Implementation in Lectures 20 and 21. Learners gain practical insights into applying this design pattern effectively.\nSection 7: BDD with Selenium\nBehavior-Driven Development (BDD) with Selenium is the focus of Section 7. Lecture 22 introduces BDD, and subsequent lectures cover Feature Files, Creating Steps, and Writing Automation Scripts, showcasing a practical output in Lecture 26.\nSection 8: Conclusion\nThe course wraps up with Section 8, providing a comprehensive conclusion in Lecture 27. Key takeaways are summarized, and learners are encouraged to apply their skills confidently in real-world scenarios. This structured course ensures a well-rounded understanding of automation testing using Selenium WebDriver and Python, making it valuable for both beginners and experienced testers.",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation. Freshers/Graudates who want to kick start their Carrier in IT World"
      ]
    },
    {
      "title": "Learn Selenium IDE and Webdriver",
      "url": "https://www.udemy.com/course/learn-selenium-ide-and-webdriver/",
      "bio": "This hands on Selenium training course on Selenium prepares you to automate web and mobile applications with Selenium",
      "objectives": [
        "By the end of the course you will be able to test a Web Application using Selenium IDE",
        "By the end of the course you will be able to test a Web Application using Selenium Webdriver"
      ],
      "course_content": {
        "Selenium IDE": [
          "Introduction to Selenium IDE",
          "Starting with Selenium IDE",
          "Selenium IDE Locating Elements"
        ],
        "Selenium Webdriver": [
          "Starting with Selenium Webdriver",
          "Working with web elements using Selenium Webdriver",
          "Web Page automation with Selenium Webdriver",
          "Selenium Web driver Code Part 1"
        ]
      },
      "requirements": [],
      "description": "This “Selenium Training: Selenium IDE Tutorial and Webdriver Tutorial “course is delivered as a highly hands-on session, with extensive live examples. The instructor has more than 15 years of experience working as an employee and consultants for many leading companies, including Apple, Visa, Fidelity Investments and Subaru. Currently, he provides consulting services at Apple Inc., in Cupertino, CA.\nIn this Selenium training course, attendees will learn the following:\nSelenium IDE\n1.  Download and installation\n2.  Working with Selenium IDE UI\n3.  Record and Playback\n4.  Selenium Commands\n5.  Selenium Test suites and test cases\n6.  Working with conventional and Ajax based websites\nSelenium Web driver\n1.  Setting up Eclipse IDE for Selenium Web driver\n2.  Downloading and Installing Web driver\n3.  Working with Page elements\n4.  Driver, WebElements and other key concepts\n5.  Using Selenium Webdriver to test multiple types of websites\nWho should attend in this Selenium Training: Selenium IDE Tutorial and Webdriver Tutorial course?\nFollowing professionals should plan on joining:\nSomeone who wants to start his/her career as a Selenium Automation Tester.\n\nQA Engineers who want to learn Selenium Automation Tester.\n\nAutomation Engineers\n\nQA Managers\n\nProgrammers\n\nTake this Selenium Training: Selenium IDE Tutorial and Webdriver Tutorial course now and learn how to automate your web and mobile applications with Selenium.\n</p>",
      "target_audience": [
        "Someone who wants to start his/her career as a Selenium Automation Tester.",
        "QA Engineers who want to learn Selenium Automation Tester",
        "Automation Engineers",
        "QA Managers",
        "Programmers"
      ]
    },
    {
      "title": "Advanced Selenium 4.0 Framework Development with Junit5",
      "url": "https://www.udemy.com/course/advanced-selenium-framework-development-with-junit5-allure/",
      "bio": "Learn to build a robust, flexible UI automation framework using Selenium4 & the powerful features of Junit 5.",
      "objectives": [
        "Advanced Selenium Framework development with Junit5",
        "Execute tests in parallel, Selenium Docker Grid, Zalenium Grid with video recording",
        "Tagging,Retrying tests, implementing parameterized tests using excel & csv",
        "Continuous Integration with git, GitHub & Jenkins"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Selenium WebDriver",
        "Knowledge of Core Java",
        "Element identification techniques in Selenium(xpath, css, id etc)"
      ],
      "description": "In the last few years, there has been a tremendous increase in the number of businesses that are now making it easier for consumers to do business online. Websites that can perform seamlessly on multiple browsers & platforms are necessary for a company to thrive & excel. So testing & automating the testing of these applications is essential for providing quality to customers who use these applications.\n\"The demand for engineers who have the niche skill of automating the testing of web,api & mobile application has increased.\"\n\"Selenium has been the most preferred library when it comes to automating UI tests.\"\nOther than just automating a user workflow, it is also necessary to have the ability to execute tests multiple times with data, execute tests in parallel, group tests, run tests in Selenium Grid, capture screenshots, video recordings to provide additional information on test runs.\nHowever, Selenium alone may not provide all the features to perform the activities as mentioned above. A combination of many libraries will be necessary to build a robust, effective & easy to use, reusable framework.\nIn this course, you will be learning exactly how to build a robust, simple, effective & reusable UI automation framework using Selenium 4, Junit5 & many other cool Java libraries.\nBelow are the features that we will be building into this framework\nDependency management & build execution using Maven\nProperty Reader using Singleton design pattern\nMultiple browser binary management techniques using WebDriverManager\nRobust Webdriver design with Threadlocal using FactoryPattern, using enums to manage browser configuration\nGeneric setup, teardown using junit5 annotations(@BeforeAll,@AfterAll,@BeforeEach,@AfterEach)\nImplement the Page Object Model pattern to automate e-commerce application(JPetStore)\nCreating generic element identification, element interaction & synchronization methods\nBuilding steps for functionality using Allure Library(@Step)\nImplementing Page & Element screenshots\nCreate TestListeners\nGrouping of tests using tags(@Tag annotations)\nRetrying flakey tests\nExecuting tests in parallel using maven-surefire(parallel & fork techniques)\nDriving parameterized tests using excel & CSV\nImplementing maven SystemPropertyVariables to override properties via command line\nCreating awesome reports using the Allure Library.\nExecuting tests in Grid (Docker Selenium Grid, Zalenium Grid)\nSource control with git & GitHub\nExecuting builds in Jenkins\n\"At the end of this course, you will master the techniques needed to build a robust, effective & easy to use, reusable framework. The knowledge learned will also help you with interviews.\"",
      "target_audience": [
        "Test Automation Engineers",
        "Software developers",
        "QA Engineers",
        "SDETs",
        "Technology enthusiasts"
      ]
    },
    {
      "title": "ISTQB -AI Testing Certificat-CT-GenAI",
      "url": "https://www.udemy.com/course/istqb-ai-testing-certificat-ct-genai-gasq/",
      "bio": "ISTQB CT-GenAI certification- 2025-2026",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ScaLearn: Your Path to Certification and Employability with CT-Gen AI ISTQB Certification Exam\nAre you looking to gain in-demand skills and become more competitive in the job market? Unlock your career potential by mastering testing techniques specifically for AI systems. ScaLearn offers a unique digital experience combining flexibility, recognized certification, and dedicated career support—tailored for those determined to succeed today and prepared for the future.\nStay Ahead: Accelerate Your Career with ScaLearn\nWhat You’ll Get:\nComprehensive online training focused on the CT-Gen AI ISTQB Certification Exam\nCertification preparation aligned with widely recognized industry standards\nSelf-paced learning designed to fit your busy schedule\nFive quizzes with 40 questions each, plus over 200 questions validated by certified consultants and based on real-life use cases\nEngaging project-based assignments for hands-on experience\nThe rapid evolution of technology, especially artificial intelligence (AI) and machine learning (ML), is transforming how software is created and tested. This course is designed for professionals and enthusiasts eager to bridge traditional testing methods with innovative approaches required for AI-driven systems. Gain a competitive edge by mastering essential tools, techniques, and methodologies to deliver high-quality, reliable AI applications.\nBy completing this course, you will:\nMaster Fundamental Concepts of AI and ML:\nUnderstand the core principles powering modern AI, including supervised and unsupervised learning, training data, algorithms, deep learning, and neural networks.\nApply Testing Techniques for AI Systems:\nLearn to evaluate model accuracy, mitigate bias, validate data pipelines, and effectively test in environments where results may be non-deterministic.\nNavigate the AI System Lifecycle:\nGain insight into all phases—data collection and preparation, model development, deployment, monitoring, and the need for ongoing testing as models evolve.\nAddress Ethical Considerations in AI Testing:\nExamine challenges around fairness, transparency, explainability, privacy, and accountability, and learn practical steps to ensure compliance with ethical standards and regulations.\nPrepare for the ISTQB AI Testing Certification:\nAccess in-depth explanations, real-world examples, and hands-on practice aligned with the official ISTQB AI Testing syllabus for confident exam success.\nDesign Robust Test Strategies:\nDevelop skills to create comprehensive test plans tailored for AI projects, handling unique challenges such as dynamic requirements, evolving data, and model drift.\nWith one comprehensive set of multiple-choice questions as your training guide and five real-condition exams of 40 questions each, complete with detailed answers, you’re fully equipped to succeed on this certification.\nWhether you are a software tester, quality assurance professional, developer, or AI specialist, this course empowers you with the knowledge and practical abilities to excel in the emerging field of AI testing. Join ScaLearn to become a certified ISTQB AI Testing professional and lead your organization in delivering trustworthy, ethical, and high-performing AI-driven software solutions.",
      "target_audience": [
        "This course is designed for experienced testers, developers transitioning into testing, and anyone passionate about AI quality assurance. With a focus on practical knowledge and real-world scenarios, you’ll be ready to face the unique challenges of testing AI systems. Achieving ISTQB Artificial Intelligence Testing certification will validate your expertise and open new opportunities in this growing field.",
        "ISTQB Certification Candidates preparing for the ISTQB AI Testing exam and seeking practical as well as theoretical insights.",
        "Software Testers and QA Professionals aiming to upgrade their skills for the age of AI.",
        "Developers, Data Scientists, and IT Professionals wanting to understand and contribute to quality assurance in AI-powered projects.",
        "Enthusiasts and Career Changers looking to break into the world of AI testing and quality assurance."
      ]
    },
    {
      "title": "Selenium Automation Testing Java with Hands-On for Beginners",
      "url": "https://www.udemy.com/course/seleniumjava/",
      "bio": "Selenium WebDriver with java , TestNG , Framework Implementation, POM , Selenium with java, Selenium Automation Testing",
      "objectives": [
        "Upon completion of the course, participants will acquire comprehensive proficiency in Selenium WebDriver and Java, enhancing their skills in test automation.",
        "Participants will gain the ability to proficiently implement automation frameworks, providing a structured and efficient approach to automation architecture",
        "The course ensures a practical, hands-on experience with Selenium WebDriver,",
        "Allowing participants to develop a thorough understanding of its capabilities and functionalities",
        "This course provide you Indepth knowledge on Frameworks . TestNG , Data Driven using Apache POI and Page Object Model Pattern ,,",
        "Upon successful conclusion of the program, participants will be well-prepared for employment opportunities, excel in the field of Selenium test automation.",
        "The practical orientation of the course facilitates an in-depth comprehension of Selenium WebDriver, equipping participants with practical insights & expertise"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge On manual Testing is advantage",
        "Knowledge on any programming language helps , anyways we have covered java from scratch",
        "Nothing much , we have covered from basics",
        "Little Knowledge on Computer is recommended"
      ],
      "description": "Welcome to the comprehensive Selenium with Java beginners' modules – the ideal course for those looking to transition from manual to automation testing or kickstart a career in automation testing. This course covers essential topics and renowned frameworks, providing a well-rounded understanding of Selenium automation.\n\n\nKey Highlights:\nTestNg Test Framework: Gain proficiency in utilizing the powerful TestNg Test Framework, a crucial component in the Selenium automation process.\n\n\nData Driven Using Apache Poi: Learn data-driven testing using Apache Poi, a valuable skill for handling data efficiently and enhancing test case scenarios.\n\n\nPage Object Model and Page Factory: Explore advanced concepts like Page Object Model and Page Factory, which facilitate the creation of scalable and maintainable automation scripts.\n\n\nCovers all Majors Topics :  Maven , Jenkins\n\n\nThings To Note  :\n\nProject Implementation: Apply your knowledge through hands-on project implementation, allowing you to integrate all learned concepts into real-world scenarios.\nWeb Application Automation: By the end of the course, you will have the skills to automate web applications proficiently, ensuring a thorough understanding of Selenium's capabilities.\nConfidence Boosting: This course is designed to instill confidence in automation testing, providing you with the knowledge and practical experience needed to excel in interviews.\nEngagement Activities: Stay actively engaged with the course through quizzes and assignments, reinforcing your understanding and application of the concepts covered.\n\n\nBy completing this course, you'll not only acquire the skills to automate web applications but also gain the confidence to excel in automation testing interviews. Elevate your career with a solid foundation in Selenium automation – sign up now and embark on a journey towards success. Thank you for considering our course!",
      "target_audience": [
        "Who want to start career In Automation testing with Selenium WebDriver",
        "Beginner who want to start with Automation Testing",
        "Who want to switch from career Manual testing to Automation testing using selenium Java",
        "who want to become Automation test engineer"
      ]
    },
    {
      "title": "Introducción al Testing de Software: para Principiantes!",
      "url": "https://www.udemy.com/course/introduccion-al-testing-de-software-para-principiantes/",
      "bio": "Aprende las técnicas de testing de software más usadas y los conceptos más importantes, desde cero",
      "objectives": [
        "Iniciar una carrera en el mundo de Testing de Software profesional",
        "Postularte a trabajos de testing en uTest, Upwork y otros portales",
        "Elevar tu nivel profesional si ya trabajas en un equipo de testing",
        "Comprender los diferentes roles y el ciclo de vida de un proyecto de software",
        "Entender el concepto de testing, la terminología básica y las etapas del proceso de testing",
        "Crear casos de prueba y reportar errores",
        "Diferenciar tipos, niveles y técnicas de prueba"
      ],
      "course_content": {
        "Introducción al curso": [
          "Introducción"
        ],
        "¿Qué es el testing de Software?": [
          "Roles en el desarrollo de Software",
          "Concepto de Testing de Software",
          "Ejercicios"
        ],
        "Fundamentos del Testing": [
          "Conceptos de error, defecto y Fallo",
          "Concepto de Requisito y Calidad",
          "Atributos de la Calidad",
          "¿Por qué son necesarias las pruebas?",
          "Ejercicios"
        ],
        "Proceso Fundamental de Testing": [
          "Planificación y Control",
          "Análisis y Diseño",
          "Implementación y Ejecución",
          "Evaluación de criterio de salida y Reportes",
          "Actividades de cierre",
          "Ejercicios"
        ],
        "Modelos de Desarrollo de Software": [
          "El modelo V",
          "Scrum",
          "Ejercicios"
        ],
        "Diseño de Pruebas": [
          "Concepto de Caso de Prueba",
          "Niveles de Prueba",
          "Tipos de Prueba",
          "Ejercicios"
        ],
        "Técnicas Estáticas": [
          "Tipos de Técnicas",
          "Revisiones",
          "Análisis con Herramientas",
          "Ejercicios"
        ],
        "Técnicas Dinámicas": [
          "Técnicas de Caja Blanca",
          "Técnicas de Caja Blanca - Parte 2",
          "Técnicas de Caja Negra",
          "Técnicas de Caja Negra - Parte 2 y Técnicas Basadas en Experiencia",
          "Ejercicios"
        ],
        "Criterios para seleccionar el diseño apropiado de caso de prueba": [
          "¿Cómo decidimos?"
        ],
        "Creación de Casos de Prueba": [
          "Cómo crear nuestros casos de prueba",
          "Ciclo de vida de un defecto",
          "Cómo reportar un defecto",
          "Severidad y Prioridad",
          "Ejercicios",
          "Trabajo Práctico"
        ]
      },
      "requirements": [
        "Conocimientos básicos de software"
      ],
      "description": "- ¿Te gustaría iniciar una carrera en software en el área de Testing?\n- ¿Quieres generar ingresos extra en portales como uTest, Fiverr o Upwork?\n- ¿Trabajas en Testing de Software pero sientes que te falta marco teórico?\n\nPerfeccionar  tus técnicas de detección de errores te será imprescindible para tu  desempeño como parte de un equipo o como freelancer.\n\n\nEl  Testing es una de las partes más importantes del desarrollo de  software, pero son muy pocas las universidades y empresas que realmente  capacitan de manera teórica y práctica. Como tester profesional, tienes  la responsabilidad sobre la calidad de los productos y servicios antes  que sean presentados al usuario final, por lo que una formación formal  es fundamental.\n\nEste curso te preparará para que empieces a desenvolverte en este apasionante mundo.\n\nAprende  de manera teórica y práctica lo más importante sobre este proceso,  desde cero y en Español, sin necesidad de conocimientos previos.\n\n\n- Conceptos Básicos\n- Proceso fundamental\n- Diseño y técnicas de pruebas\n- Creación de casos de pruebas\n- Seguimiento\n\n\nEsta  capacitación se compone de 29 clases donde aprenderás desde los  conceptos más básicos, como por ejemplo, qué es el testing o para qué es  necesario, hasta la creación de casos de pruebas, defectos y el  seguimiento de los mismos. Pero no sólo cubriremos la parte teórica ya  que al final de cada clase podrás practicar todo lo aprendido con  ejercicios del mundo real.\n\nY además, mediante correo electrónico o Skype, estaré encantada de responderte dudas, consultas o debatir resultados.",
      "target_audience": [
        "Interesados en incursionar en el mundo del testing de software",
        "Estudiantes de carreras relacionadas al software",
        "Profesionales de testing o desarrollo",
        "Testers independientes que trabajan en uTest, Upwork, Fiverr"
      ]
    },
    {
      "title": "QA Metrics & KPIs: Testing, Defect Tracking & Automation",
      "url": "https://www.udemy.com/course/qa-metrics-kpis-learnit/",
      "bio": "Master QA & QC metrics, test planning, bug tracking, test automation KPIs, and QA reporting techniques",
      "objectives": [
        "How to define meaningful QA metrics and KPIs",
        "Test case execution tracking and analysis",
        "Measuring test coverage and test effectiveness",
        "Calculating defect density and leakage rates",
        "Understanding severity vs. priority in defects",
        "How to assess test automation ROI",
        "Tracking and reducing test flakiness",
        "Using metrics in retrospectives and process reviews",
        "Identifying and addressing QA bottlenecks",
        "Metrics for evaluating sprint test readiness",
        "Prioritizing tests with risk-based approaches",
        "Leveraging defect trends to optimize coverage",
        "Calculating mean time to detect and fix defects",
        "Evaluating automation coverage and execution time"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of software testing concepts",
        "Familiarity with QA processes (manual or automated)",
        "Experience with defect tracking tools (e.g., Jira, Bugzilla)",
        "Some exposure to test case management tools (e.g., TestRail, Zephyr)",
        "Interest in data-driven QA and continuous improvement",
        "No advanced programming or statistics knowledge required"
      ],
      "description": "Deliver Better Software Through Measurable Quality – Learn to Track, Analyze, and Optimize QA Performance\nIn today’s fast-paced development world, delivering high-quality software isn’t enough—you need to prove it with metrics. That’s where this course comes in.\nQA Metrics Workshop: Testing, Defect Tracking & Automation is a practical, in-depth course designed to help QA professionals leverage data and key performance indicators (KPIs) to improve testing efficiency, reduce risk, and boost software quality. Whether you work in a manual testing, automation, or agile QA environment, this course will help you transform your testing process into a measurable, strategic asset.\n\n\nWhat This Course Offers\nYou’ll learn not just what metrics to track, but why they matter, how to calculate them, and when to apply them. We’ll cover all key areas of modern QA work:\nTest Metrics: Test case pass/fail rates, execution progress, test coverage, defect detection effectiveness, and more\nDefect Metrics: Defect density, leakage rate, mean time to detect/fix, severity/priority distribution\nTest Automation KPIs: Automation coverage, stability, ROI, execution time, flakiness rate\nReporting & Dashboards: learn metrics tha will help you to build stakeholder-facing reports using tools like Jira, TestRail, Excel, and custom dashboards\nQA Process Improvement: Use metrics to drive retrospectives, quality gates, and team performance evaluations\nAgile QA Metrics: Story-level quality, velocity-to-bug ratio, sprint test readiness, continuous testing indicators\nRisk-Based Testing: Prioritize efforts based on impact, past defect trends, and test effectiveness\nYou’ll also get templates, formulas, KPI scorecards, and visual dashboard examples that you can adapt directly into your projects.\n\n\nWho This Course Is For\nManual Testers who want to better demonstrate their impact through test results\nAutomation Engineers who need to show ROI and stability of their frameworks\nQA Leads & Managers looking to implement measurable quality processes and KPIs\nAgile QA Practitioners who need to align quality metrics with fast delivery cycles\nBusiness Analysts & Product Owners who want to understand what QA metrics actually say about product health\n\n\nWhat You’ll Gain\nBy the end of this course, you will:\nBe able to define, collect, and report on metrics that matter to your project\nKnow how to communicate test status and quality to developers, PMs, and execs\nBe confident in using data to drive continuous QA process improvements\nHave practical tools and ready-to-use templates that make metrics actionable\nThis isn’t a theoretical course. It’s a practical QA toolkit packed with examples, industry best practices, and data you can start applying immediately to improve your QA outcomes and career.\nEnroll now and make your testing efforts visible, valuable, and impactful through the power of metrics.",
      "target_audience": [
        "Manual testers wanting to show the value of their work with data",
        "Automation test engineers needing to demonstrate ROI and reliability",
        "QA leads and managers aiming to implement metric-driven processes",
        "Agile QA professionals aligning testing with fast-paced delivery",
        "Business analysts and product owners seeking insights into product quality through QA metrics",
        "Software developers who want to understand QA impact and feedback loops",
        "Project managers looking to track quality and delivery risk",
        "Delivery managers focused on release readiness and defect trends",
        "Engineering managers aiming to improve team performance through data",
        "Product managers who need to align quality signals with product goals",
        "Software architects interested in the relationship between system design and defect patterns"
      ]
    },
    {
      "title": "Pass Google Professional Machine Learning Engineer in 3 Days",
      "url": "https://www.udemy.com/course/pass-google-professional-machine-learning-engineer-in-3-days/",
      "bio": "Google Professional Machine Learning Engineer | Real Questions | Dump | Covers All Exam Topics",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "80+% Student Passed Exam After Only Studying These Questions. Pass yours, enroll now!\n\n\nFree Sample Question 1 out of 3:\nAs a member of the Product Intelligence Unit at OmniEye Retail, which uses a Google Cloud ML pipeline for its visual search engine to classify images of its products, you've configured retraining functionality to incorporate future new product data. To ensure high accuracy using AI Platform's continuous evaluation service on your test dataset, what should you do?\n\n\nA. Keep the original test dataset unchanged even if newer products are incorporated into retraining.\nB. Extend your test dataset with images of the newer products when they are introduced to retraining.\nC. Replace your test dataset with images of the newer products when they are introduced to retraining.\nD. Update your test dataset with images of the newer products when your evaluation metrics drop below a pre-decided threshold.\n\n\nCorrect Answer: B\nExplanation:\nWhen new products are introduced and the ML model is retrained to classify them, the test dataset must accurately reflect the new scope of the model's capabilities.\n* A. Keep the original test dataset unchanged even if newer products are incorporated into retraining. This is incorrect because if the model is retrained to recognize new products, but the test dataset does not include these new products, you cannot accurately evaluate the model's performance on them. The continuous evaluation service would then provide an incomplete picture of the model's real-world accuracy.\n* B. Extend your test dataset with images of the newer products when they are introduced to retraining. This is the correct approach. By extending the test dataset, you ensure that the model's performance is evaluated on *both* the original products and the newly introduced products. This allows the continuous evaluation service to provide a comprehensive and accurate assessment of the model's overall accuracy as your product catalog evolves. It ensures the model can correctly classify existing items while also demonstrating proficiency with new ones.\n* C. Replace your test dataset with images of the newer products when they are introduced to retraining. This is incorrect because replacing the test dataset entirely would mean you lose the ability to evaluate the model's performance on the original (older) products. Since the company still sells existing products, the model must maintain high accuracy on them, which would not be tested if they are removed from the test set.\n* D. Update your test dataset with images of the newer products when your evaluation metrics drop below a pre-decided threshold. This is incorrect. The update of the test dataset should be a proactive step aligned with the introduction of new products and model retraining, not a reactive measure tied to a performance drop. If new products are introduced and the model is retrained, the test dataset needs to be updated concurrently to properly evaluate the *new* capabilities of the model from the start. Waiting for metrics to drop implies that the test dataset is already outdated, and the continuous evaluation would be using an irrelevant dataset until the drop occurs. The test dataset should always represent the data distribution the model is expected to handle.\n\n\n\n\n\n\nFree Sample Question 2 out of 3:\nAs a lead ML engineer at CityLink Transit, your team needs to develop a model predicting delay times across routes, serving real-time predictions to users via an app, with monthly retraining due to seasonal and population shifts, all while adhering to Google-recommended best practices. How should you design the end-to-end architecture for this predictive model?\n\n\nA. Configure Kubeflow Pipelines to schedule your multi-step workflow from training to deploying your model.\nB. Use a model trained and deployed on BigQuery ML, and trigger retraining with the scheduled query feature in BigQuery.\nC. Write a Cloud Functions script that launches a training and deploying job on AI Platform that is triggered by Cloud Scheduler.\nD. Use Cloud Composer to programmatically schedule a Dataflow job that executes the workflow from training to deploying your model.\n\n\nCorrect Answer: A\nExplanation:\nThe question requires configuring an *end-to-end architecture* for a predictive model, including monthly retraining and real-time serving to a user app, while adhering to *Google-recommended best practices*.\nLet's evaluate each option:\n* A. Configure Kubeflow Pipelines to schedule your multi-step workflow from training to deploying your model.\n* End-to-end architecture: Kubeflow Pipelines (and its evolution, Vertex AI Pipelines) are specifically designed for orchestrating complex, multi-step machine learning workflows. This includes data ingestion, preprocessing, model training, evaluation, model registration, and deployment to a serving endpoint. It provides full end-to-end capabilities.\n* Real-time serving: Kubeflow Pipelines can deploy models to services like AI Platform Prediction (now Vertex AI Prediction), which are optimized for real-time, low-latency inference, suitable for serving predictions directly to users in an app.\n* Monthly retraining: Pipelines natively support scheduled runs, making it straightforward to automate monthly retraining.\n* Google-recommended best practices: Kubeflow Pipelines (and Vertex AI Pipelines) are Google's primary recommended solution for building automated, scalable, and reproducible MLOps pipelines. They provide features like lineage tracking, versioning, component reusability, and robust error handling, aligning perfectly with best practices.\n* Conclusion: This option fully satisfies all requirements and aligns with Google's MLOps recommendations.\n* B. Use a model trained and deployed on BigQuery ML, and trigger retraining with the scheduled query feature in BigQuery.\n* End-to-end architecture: While BigQuery ML is excellent for training models within BigQuery and can perform batch predictions, its capabilities for *real-time serving* to an external application are limited compared to a dedicated prediction service. It's not typically considered the comprehensive end-to-end orchestration platform needed for complex ML pipelines that involve more than just SQL-based training.\n* Real-time serving: BigQuery ML is primarily suited for batch inference. While you can query BigQuery ML models via API, it's not optimized for the low-latency, high-throughput real-time serving typical for mobile applications.\n* Monthly retraining: BigQuery's scheduled queries can trigger retraining, but this addresses only part of the problem.\n* Google-recommended best practices: While BigQuery ML is a valuable tool, it's not the recommended *orchestration* solution for an end-to-end MLOps pipeline that involves diverse steps beyond pure SQL-based modeling and requires robust serving capabilities for real-time applications.\n* Conclusion: Not the most suitable for real-time serving and comprehensive end-to-end MLOps orchestration.\n* C. Write a Cloud Functions script that launches a training and deploying job on AI Platform that is triggered by Cloud Scheduler.\n* End-to-end architecture: This approach attempts to stitch together services. While Cloud Scheduler can trigger a Cloud Function, and the Function can initiate jobs on AI Platform, Cloud Functions are generally intended for short-lived, event-driven tasks. Orchestrating a *multi-step workflow* with interdependencies, robust error handling, monitoring, and artifact management is complex and difficult to maintain with a simple Cloud Functions script. It effectively requires you to build your own custom orchestrator.\n* Real-time serving: AI Platform can deploy models for real-time serving.\n* Monthly retraining: Cloud Scheduler can trigger the Cloud Function monthly.\n* Google-recommended best practices: This is not a recommended best practice for building complex, automated ML pipelines due to the lack of built-in MLOps features (like lineage, versioning, visual DAGs) and the administrative overhead of managing the orchestration logic yourself.\n* Conclusion: Not suitable for a robust and maintainable end-to-end ML pipeline orchestration.\n* D. Use Cloud Composer to programmatically schedule a Dataflow job that executes the workflow from training to deploying your model.\n* End-to-end architecture: Cloud Composer (managed Apache Airflow) is an excellent orchestrator for complex workflows and is often used in MLOps. However, the issue lies with the use of Dataflow. Dataflow is primarily a service for scalable data processing (ETL, stream processing). While it *can* execute some ML-related tasks (e.g., feature engineering), it is generally *not* the primary service recommended for model *training* or, critically, *deploying* real-time serving endpoints.\n* Real-time serving: Dataflow itself does not provide real-time model serving endpoints for applications. You would still need another service (e.g., AI Platform Prediction/Vertex AI Prediction) for this, meaning Dataflow alone doesn't cover \"deploying your model\" for real-time serving.\n* Monthly retraining: Cloud Composer can effectively schedule monthly retraining.\n* Google-recommended best practices: While Composer is a strong orchestration tool, using Dataflow for the core training and deployment steps in this manner (especially for real-time serving) deviates from Google's recommended architecture, which typically leverages specialized ML services like Vertex AI Training and Prediction for these tasks.\n* Conclusion: Composer is a good orchestrator, but Dataflow is not the appropriate service for core model training and real-time deployment in this context.\nIn summary, Option A, leveraging Kubeflow Pipelines (or its successor, Vertex AI Pipelines), provides a fully integrated, managed, and scalable solution for end-to-end ML workflow orchestration, including scheduled retraining and deployment for real-time serving, directly aligning with Google's recommended MLOps best practices.\n\n\n\n\n\n\nFree Sample Question 3 out of 3:\nTechCorp's Logistics Innovation Team aims to optimize their employee shuttle service, which currently stops at all points every 30 minutes, by leveraging an existing GKE application where users confirm their station and presence a day ahead. What approach should you take?\n\n\nA. Build a tree-based regression model that predicts how many passengers will be picked up at each shuttle station. 2. Dispatch an appropriately sized shuttle and provide the map with the required stops based on the prediction.\nB. Build a tree-based classification model that predicts whether the shuttle should pick up passengers at each shuttle station. 2. Dispatch an available shuttle and provide the map with the required stops based on the prediction.\nC. Define the optimal route as the shortest route that passes by all shuttle stations with confirmed attendance at the given time under capacity constraints. 2. Dispatch an appropriately sized shuttle and indicate the required stops on the map.\nD. Build a reinforcement learning model with tree-based classification models that predict the presence of passengers at shuttle stops as agents and a reward function around a distance-based metric. 2. Dispatch an appropriately sized shuttle and provide the map with the required stops based on the simulated outcome.\n\n\nCorrect Answer: C\nExplanation:\nThe core of the problem is to make the shuttle service route \"more efficient\" given that users \"confirm their presence and shuttle station one day in advance.\" This crucial piece of information means that the exact pick-up locations and passenger counts are *known* ahead of time. Therefore, there is no need to predict passenger presence or count.\nLet's evaluate the options:\n* A. Build a tree-based regression model that predicts how many passengers will be picked up at each shuttle station. This is incorrect because the number of passengers at each station is already known via confirmation, not predicted. Using a predictive model would introduce unnecessary uncertainty and potential errors (e.g., predicting fewer passengers than confirmed, leading to an undersized shuttle or missed pickups).\n* B. Build a tree-based classification model that predicts whether the shuttle should pick up passengers at each shuttle station. Similar to A, this is incorrect. Whether a shuttle should pick up passengers at a station is determined by whether passengers have confirmed their presence there. This information is available directly and does not need to be predicted by a classification model. Relying on a prediction could lead to critical failures like not stopping for confirmed passengers.\n* C. Define the optimal route as the shortest route that passes by all shuttle stations with confirmed attendance at the given time under capacity constraints. 2. Dispatch an appropriately sized shuttle and indicate the required stops on the map. This is the correct approach. Since the confirmed attendance and stations are known, the problem transforms into a classic optimization problem, specifically a variant of the Vehicle Routing Problem (VRP). The goal is to find the most efficient (e.g., shortest) route that visits all *confirmed* stops, while also considering the total number of confirmed passengers to dispatch an \"appropriately sized shuttle\" (capacity constraints). This approach directly uses the reliable, pre-confirmed data to guarantee that all confirmed passengers are picked up, and the route is efficient.\n* D. Build a reinforcement learning model with tree-based classification models that predict the presence of passengers at shuttle stops as agents and a reward function around a distance-based metric. This approach is overly complex and misapplies Machine Learning. Reinforcement Learning (RL) is typically used for sequential decision-making in uncertain or dynamic environments where the optimal strategy is learned through trial and error. Here, the key information (confirmed stops) is static and known in advance. Furthermore, using \"tree-based classification models that predict the presence of passengers as agents\" is a convoluted and unnecessary design when presence is confirmed. A direct optimization algorithm is far more suitable and reliable.\nIn summary, given the confirmed attendance, the problem is a deterministic route optimization challenge, not a predictive machine learning problem. Relying on ML predictions when exact information is available would introduce risk and unnecessary complexity.\n\n\n\n\n\n\nWhy Choose Our Certification Exam Prep Courses?\nWhen it comes to passing your certification exam—whether it’s AWS, Microsoft, or Oracle—quality training makes all the difference. Our exam prep courses are designed to give you the knowledge, confidence, and skills you need to succeed on test day and beyond.\n\n\nComprehensive Coverage of All Exam Objectives\nWe teach every topic outlined in the official certification blueprint. No shortcuts, no skipped sections—just complete coverage to ensure you walk into your exam fully prepared.\n\n\nClear, Step-by-Step Learning\nOur expert instructors break down complex concepts into easy-to-follow explanations. You won’t just memorize answers—you’ll understand the reasoning behind them so you can apply your knowledge in any scenario.\n\n\nRealistic Practice for Real Exam Readiness\nExperience exam-like simulations, practice questions, and hands-on scenarios that mirror the style, difficulty, and pacing of the real test. This ensures that by the time you sit for your certification, you’ve already “been there” before.\n\n\nAlways Current, Always Relevant\nTechnology changes fast—and so do exams. That’s why we continuously update our content to match the latest certification requirements and platform capabilities across AWS, Microsoft, and Oracle.\n\n\nDesigned for All Skill Levels\nWhether you’re a seasoned professional aiming to validate your expertise or a newcomer taking your first steps in the cloud and IT world, our courses adapt to your needs with clear explanations, structured practice, and actionable insights.\nOur Promise: We deliver exam prep that’s more than just test questions—it’s a complete learning experience that equips you with real-world skills, helps you master the material, and gives you the confidence to pass your certification the first time.\n\n\nStart your certification journey today with trusted, high-quality training that works—no matter which exam you’re taking.",
      "target_audience": [
        "Machine learning engineers and data scientists seeking Google Professional Machine Learning Engineer certification.",
        "Data professionals aiming to design and deploy ML solutions on Google Cloud Platform.",
        "Developers interested in applying ML algorithms and managing ML workflows on GCP.",
        "Technical teams focused on building scalable and maintainable ML systems using Google Cloud services.",
        "Anyone preparing for the Professional Machine Learning Engineer exam who wants practical training and exam readiness."
      ]
    },
    {
      "title": "Playwright eXpress",
      "url": "https://www.udemy.com/course/playwright-express/",
      "bio": "Um curso rápido, prático e direto ao ponto para você aprender automação de testes do ZERO e do jeito certo",
      "objectives": [
        "Construir um projeto de testes de ponta a ponta para aplicações web",
        "Automatizar testes de regressão com Playwright",
        "Preencher formulários automáticamente",
        "Boas práticas para implementação de testes automatizados",
        "Como validar o comportamento esperado",
        "Automação de ações que o usuário realiza em um navegador da Web",
        "Como testar aplicações simulando um ambiente real",
        "As vantagens ao usar Typescript para testes automatizados"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Introdução": [
          "Boas vindas ao Playwright",
          "Vamos testar um sistema real",
          "Reiniciei o meu PC. E agora?"
        ],
        "Testes de ponta a ponta": [
          "Meu primeiro teste em Playwright",
          "Desativando Headless",
          "Debugando testes",
          "Indentação de código",
          "Técnicas para busca de elementos com CSS Selectors",
          "Submetendo formulários HTML (Bônus XPath)",
          "Dados dinâmicos com Faker",
          "Consumindo API Helper",
          "Importando JSON no Insomnia",
          "Validando o comportamento esperado"
        ],
        "Aprimorando os testes": [
          "Testes independentes",
          "Modelando a massa de testes com interfaces do TypeScript",
          "Custom Commands (Helpers)",
          "Page Objects na prática",
          "Não é magia, é tecnologia!",
          "Trabalhando com Fixtures",
          "XPath é vida, e CSS também!",
          "O reúso de código é real"
        ],
        "Configurações e Boas práticas": [
          "Configurando URL base",
          "Custom URLs com dotenv",
          "Variáveis & Constantes",
          "Entedendo os timeouts",
          "Screenshots mágicos",
          "Multi-Browser, responsividade e testes em paralelo",
          "Parabéns, você se tornou QA com habilidades de Automação!"
        ],
        "Bonus: Continuous Testing": [
          "Boas vindas & fork do projeto",
          "Clonando o repositório base",
          "Inicializando o Playwright",
          "Executando os testes no PC",
          "Executando os testes no Github Actions",
          "Organizando os steps",
          "Evidências em videos",
          "MultiBrowser",
          "Workflow Dispatch",
          "Parabéns! Agora você é QA com habilidades de Devops"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Testes automatizados são uma parte vital do desenvolvimento de sofware moderno. E os testes de regressão aumentam a cada nova versão do software, portanto, é preciso entender que a automação de testes é importante para diminir essa carga de trabalho que em muitas empresas é feita de forma manual.\nUsado para testar o Disney+, o Playwright é uma ferramenta poderosa e flexível para testes automatizados de aplicações web. Ao combiná-lo com a linguagem TypeScript, você terá uma ferramenta ainda mais poderosa em suas mãos.\nNeste curso mão na massa, você vai aprender a usar a ferramenta de maneira eficaz para automatizar seus testes e melhorar a qualidade de suas aplicações web.\nVai criar um projeto node.js do ZERO, instalar e configurar o Playwright para testes de ponta a ponta em TypeScript.\nVai explorar os recursos e conceitos fundamentais do framework aplicando boas práticas de automação para o nosso aplicativo web de demonstração, o gerenciador de tarefas Mark L.\nPor fim, gerar relatórios de testes regressão com evidências em imagens e videos\nBônus: Testes contínuos em Playwright no Github Actions\nOs testes de regressão não precisam rodar necessariamente no seu computador. Construa um pipeline de testes contínuos em Playwright no Github Actions tornando os testes de regressão mais eficientes, produtivos e organizados. Controle o fluxo de execução de testes com relatórios, screenshos e métricas.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "Selenium WebDriver with CI/CD,AWS,Jenkins,Docker,Grid,GitHub",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-aws-cicd/",
      "bio": "This course is designed to cover the concepts of CI CD pipelines and Integration of Automation tests with CI CD pipeline",
      "objectives": [
        "By the End of the course you will learn CI CD and integrate Automation tests with the CI CD pipeline using Jenkins",
        "you will learn to deploy HTML Website in AWS EC2 instance and Run the test Automation Scripts",
        "you will learn to write Shell scripts, Windows Batch files",
        "you will learn SSH, SCP to reach-out to the AWS Ec2 Linux server from Windows machine",
        "You will learn create CI CD pipelines using Jenkins",
        "you will work on the GIT and GITHUB",
        "you will learn docker, containerization, containers",
        "you will work on Selenium Grid",
        "you will learn to utilize docker for selenium Grid and efficient executions",
        "you will learn the overview of REST APIs and How to use them",
        "you will learn Jenkins APIs to run the jenkins Jobs remotely",
        "you will learn to containerize the selenium Grid and integrate it with CI CD"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Looking to learn Selenium scripts and framework development?",
          "Links - Other Courses"
        ],
        "Theoretical overview on CI CD and Devops concepts": [
          "CI CD and Devops Concepts",
          "Download Resources"
        ],
        "GitHub and AWS": [
          "Create AWS and GitHub accounts",
          "GitHub Repositories we need in this course",
          "GitHub - Fork a Repo Operation - Demo",
          "Required Links"
        ],
        "Projects Overview": [
          "Clone the HTML Website from GitHub",
          "Setup and installation",
          "Environment Variables",
          "Run Unit Tests in Eclipse",
          "Run E2E Tests in Eclipse"
        ],
        "AWS EC2 - Create Dev, QA, Prod EC2 Instances": [
          "Create AWS EC2 instances"
        ],
        "SSH protocol & SCP protocol & Apache Http Server - httpd": [
          "Install Apache Http Server - HTTPD in AWS EC2",
          "Links Required",
          "Resolved Issues with SCP file transfer to AWS EC2 instance",
          "Alternative setup and solutions for SSH"
        ],
        "Manual Deployment": [
          "Deploy HTML Website to AWS EC2 - Manually"
        ],
        "Automatic Deployment": [
          "Shell Script Development"
        ],
        "Jenkins - CI CD Tool": [
          "Jenkins Installation to Local Machine",
          "Create a Windows batch File to start Jenkins Server",
          "More info - Read this"
        ],
        "CI CD Pipeline": [
          "Jenkins - Create Build Job",
          "Jenkins - Build Job Executions",
          "Jenkins - Complete rest of the Jobs in pipeline",
          "Jenkins - CI CD Pipeline Final Executions",
          "Rate the Course!!"
        ]
      },
      "requirements": [
        "selenium automation knowledge",
        "Good to have knowledge on Linux commands"
      ],
      "description": "Learn to Develop the CI CD pipelines using AWS, Jenkins, Docker and GitHub. Integrate your Selenium WebDriver Automation test suite with the CI CD pipelines and Make use of Selenium Grid and Dockerized Selenium Grid to achieve efficient Parallel and Cross Browser test executions.\nAs part of this course, I have covered following topics-\nIntroduction to AWS EC2 and creation of Development, QA, Production Environments using AWS EC2.\nGitHub repositories - Fork and Clone on the existing HTML Demo APP Repo, Unit Tests Repo & E2E Tests Repo.\nLearn to connect to remote servers and AWS EC2 instances from your local machines using SSH and transfer files using SCP.\nInstalling Apache Web Server - Httpd in the AWS EC2 instances and learn to stop and start the webserver\nManually Deploy the HTML Demo APP on the AWS EC2 instances (Dev, QA , Prod) using Apache WebServer Httpd and develop deployment shell scripts.\nInstallation of Jenkins and Automate deployment workflow by developing CI CD pipeline using Jenkins jobs and GitHub Repositories - HTML Demo APP, Units tests, E2E tests.\nIntroduction to JenkinsFile and pipeline-as-code and create a Jenkins coded pipeline.\nIntroduction to Docker, Containerization, Docker-compose and DockerFile.\nDocker practical session with basic docker commands and docker images.\nAchieve deployment on the production AWS EC2 instance using Docker.\nIntroduction to parallel and cross browser testing using Selenium WebDriver.\nIntroduction to selenium Grid and manual selenium grid configuration.\nAutomate the Selenium Grid configuration with Docker and containers.\nRun Selenium tests in parallel, Sequential and cross browser on Docker containers using Dockerized Selenium Grid and VNC Viewer.\nStrategies on integration of Selenium WebDriver Automation tests  with CI CD pipelines.\nUtilize the Jenkins Remote APIs to run the Jenkins jobs from remote machines.\nWatch & track the Jenkins pipeline View using Blue Ocean plugin in Jenkins. More sophisticated UI for Jenkins pipelines.",
      "target_audience": [
        "QA Engineers",
        "Any one who wants to learn CI CD",
        "Automation Engineers/ SDETs/ Devops Engineers",
        "Any one who wants to integrate test automation with CI CD"
      ]
    },
    {
      "title": "Advanced Software Testing: How to build test strategy 2025",
      "url": "https://www.udemy.com/course/advanced-software-testing-how-to-build-test-strategy/",
      "bio": "Software testing : How to build test strategy?Creating a Test Strategy",
      "objectives": [
        "software testing",
        "test strategy",
        "Test strategy: risk management",
        "Test strategy: project risk management",
        "Test strategy: product risk management",
        "Test strategy: schedule management",
        "Test strategy: cost management"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The goal of test strategy :",
          "What we find in a testing strategy",
          "Test strategy: Input",
          "Test strategy : The proposed solution",
          "workshop : -Solution testing strategy for the visually impaired",
          "Test Strategy : Scope / Out of scope"
        ],
        "Important point": [
          "Important point"
        ],
        "Test Strategy : The planning": [
          "Test Strategy : The planning"
        ],
        "Workshop: Abchealty Clinic": [
          "Workshop: Abchealty Clinic",
          "Workshop: Abchealty Clinic"
        ],
        "Testing strategy: Testing metrics and KPIs:": [
          "Testing strategy: Testing metrics and KPIs:",
          "Testing strategy: Testing metrics and KPIs:"
        ],
        "Test strategy: Test phases": [
          "Test strategy: Test phases",
          "Test strategy: Test phases"
        ],
        "Test strategy: Phasing of the Validation Process": [
          "Test strategy: Phasing of the Validation Process",
          "Test strategy: Testing Restrictions and Deadlines",
          "Test strategy: Coordination with other Projects"
        ],
        "Test strategy: Cost of project": [
          "Test strategy: Cost of project"
        ],
        "Test strategy: Deployment strategy:": [
          "Test strategy: Deployment strategy:"
        ],
        "Test strategy: Risks": [
          "Test strategy: Risks",
          "Test strategy: project risks & Product Risks",
          "Test strategy: project risks & Product Risks",
          "Solution testing strategy for the visually impaired- risks",
          "Solution testing strategy for the visually impaired- risks"
        ]
      },
      "requirements": [
        "none"
      ],
      "description": "Advanced Software Testing: How to build test strategy\nThis training is to provide good practices to create the testing strategy\nThis training helps test managers and expert testers to have a clear idea of the testing strategy and how to carry it out correctly.\nAlso for junior testers so that they can argue on the day of the interview\nNoting that you are capable of carrying out a testing strategy will make you in high demand with recruiters.\nIt is very difficult to prepare a testing strategy on your own due to lack of resources, but this course is here to help you overcome this problem. I've included everything you might need to know to fully understand how a testing strategy works and is implemented.\nI've included explanations of each topic in separate short videos along with examples so you can practice.\nI'am  Asma, I am a validation business manager, I lead test managers and also testers I have over 12 years of experience I have a solid track record helping thousands of students pass the exam the ISTQB Foundation and testing tools, I'm here to help you get to the next level. I will teach you everything you need to know and answer all your questions 24/7.",
      "target_audience": [
        "Anyone wishing to know how to design the test strategy",
        "Test Managers, Test Leaders and Test Program Managers, .",
        "Also for junior testers so that they can argue on the day of the interview",
        "Anyone involved in testing software projects (including testers, engineers, analysts, consultants, software developers, customers, everyone)."
      ]
    },
    {
      "title": "Software Testing Interview Question MCQ Practice Test | Quiz",
      "url": "https://www.udemy.com/course/software-testing-mcq/",
      "bio": "400+ Software Testing Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Software Testing Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.\n\"Mastering Software Testing: The Ultimate MCQ Course for Success\" is your definitive guide to excelling in the realm of software testing. This course offers an expansive collection of multiple-choice questions, meticulously designed to cover every facet of software testing. Whether you're an aspiring tester, a seasoned QA professional, or someone interested in the world of software quality, this course is crafted to enhance your knowledge and skills through an engaging, interactive learning approach.\nWhat You'll Learn:\nFundamentals of Testing: Explore the core principles, understand the nuances of the software development life cycle (SDLC) and software testing life cycle (STLC), delve into test planning, and get acquainted with different testing types like manual and automated testing. Learn about the bug life cycle and essential test metrics and measurements.\nTesting Types and Levels: Gain insights into unit testing, including detailed test case design and white-box testing techniques. Explore integration testing with a focus on incremental and non-incremental approaches. Understand the complexities of system testing, including end-to-end and user interface testing, and delve into the nuances of acceptance testing, including alpha, beta, and contract acceptance testing.\nTest Design Techniques: Discover the intricacies of static techniques like manual and automated static analysis, and the review process. Uncover dynamic techniques, including black-box and white-box testing. Learn about experience-based techniques such as exploratory testing and error guessing.\nTest Management: Understand how to organize and manage testing processes, the roles and responsibilities of a test team, and the essentials of test planning and estimation. Dive into risk management in testing, including risk identification and mitigation, and learn about the importance of configuration management.\nAutomated Testing: Get introduced to automated testing, its benefits, challenges, and how to select test cases for automation. Familiarize yourself with popular tools like Selenium and JUnit. Learn about developing and managing test scripts and the role of continuous integration and testing in modern software development.\nSpecialized Testing: Explore the world of performance testing, including load and stress testing. Understand the critical aspects of security testing, such as vulnerability scanning and security auditing. Learn about usability testing, focusing on user interface and user experience testing, and delve into mobile application testing, including functional testing and mobile usability testing. Additionally, understand the importance of accessibility testing in software development.\nCourse Format (Quiz):\nEngage in an interactive quiz format that tests your knowledge and application skills in software testing. This format includes a variety of question styles to keep the learning experience dynamic and engaging.\nWe Update Questions Regularly:\nStay abreast of the latest trends and best practices in software testing with our regularly updated question bank, ensuring your learning remains current and relevant.\nFrequently Asked Questions (FAQs) on Software Testing:\nWhat is the difference between manual and automated testing?\nUnderstand the fundamental differences, benefits, and scenarios where each type of testing is most effective.\nHow important is testing in the Software Development Life Cycle (SDLC)?\nExplore the role of testing in various stages of the SDLC and its impact on the overall quality of software.\nWhat are the most common types of bugs encountered in software testing?\nLearn about various bug types, their implications, and strategies to identify and resolve them effectively.\nCan software testing ensure a bug-free product?\nDiscuss the realistic expectations of software testing and the concept of risk management in relation to bug-free software.\nWhat is regression testing, and why is it important?\nDelve into the concept of regression testing and its critical role in maintaining software quality during ongoing development.\nHow does one choose the right testing tool?\nExplore the factors to consider when selecting testing tools, including the type of testing, project requirements, and tool functionality.\nWhat is the difference between black-box and white-box testing?\nUnderstand these two fundamental testing approaches, their methodologies, and applicable scenarios.\nWhat skills are essential for a software tester?\nIdentify the key skills and attributes that make a successful software tester, including both technical and soft skills.\nHow is testing for mobile applications different from traditional software testing?\nDiscuss the unique challenges and considerations when testing mobile applications compared to desktop or web-based software.\nWhat trends are currently shaping the future of software testing?\nStay informed about the latest trends and advancements in the field of software testing, including AI, machine learning, and continuous integration.\nWho This Course Is For:\nDesigned for aspiring software testers, experienced QA professionals, developers, project managers, students, and educators seeking a comprehensive understanding of software testing.\nTakeaways:\nBy the end of this course, you'll have a robust understanding of software testing principles and practices, equipped with the skills to tackle various testing challenges in your professional career.\nEnroll Now:\nJoin us in \"Mastering Software Testing: The Ultimate MCQ Course for Success\" and step into a world where your expertise in software testing grows with each question answered!",
      "target_audience": [
        "Aspiring Software Testers: If you're starting your journey in the field of software testing, this course will equip you with foundational knowledge and practical skills, setting a strong base for a successful career.",
        "Quality Assurance Professionals: Experienced QA professionals looking to update their skills, learn new testing methodologies, or gain a deeper understanding of advanced testing concepts will find this course immensely beneficial.",
        "Software Developers: Developers seeking to broaden their skillset and gain an insightful understanding of the testing aspect of software development will find the course content valuable for enhancing the quality of their work.",
        "Project Managers and Business Analysts: Professionals involved in managing or overseeing software projects, who wish to acquire a comprehensive understanding of software testing to better manage quality and risk in their projects.",
        "Students in Computer Science or Related Fields: Students pursuing degrees in computer science, information technology, or related areas can greatly benefit from this course as it provides practical insights and supplements academic learning with real-world applications.",
        "Educators and Trainers in IT: Educators looking to update their knowledge or gather resources for teaching software testing will find this course a rich source of up-to-date information and practical examples.",
        "Career Changers: Individuals looking to transition into the tech industry, particularly in roles related to software quality assurance and testing, will find this course a valuable stepping stone to enter and excel in this field.",
        "Enthusiasts of Software Quality: Anyone with a keen interest in understanding how software quality is maintained and enhanced, and wanting to gain insights into the world of software testing."
      ]
    },
    {
      "title": "Selenium WebDriver Coding Exercises for Interviews",
      "url": "https://www.udemy.com/course/selenium-webdriver-coding-exercises-for-interviews/",
      "bio": "This course contains a list of 16 Selenium Webdriver coding exercises that will help you ace your java interview.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Locating Web Elements": [
          "Inspection Quiz",
          "Locators in Code Exercise",
          "Locators in Code Exercise Answer",
          "Locating Web Elements Exam",
          "Locating Web Elements Exam Answer"
        ],
        "WebDriver Methods": [
          "Actions Quiz",
          "Actions Quiz Answer",
          "Coding Exercises for Methods"
        ],
        "Object Oriented Programming": [
          "OOP Quiz",
          "OOP Exam"
        ],
        "Page Objects": [
          "Page Objects Quiz",
          "Page Objects Exercise",
          "Page Objects Exercise Answer"
        ],
        "Automation Best Practices": [
          "Automation Pyramid Exercises"
        ],
        "45 Minute Production Level Framework": [
          "ATDA Quiz",
          "ATDA Quiz Answer Part 1",
          "ATDA Quiz Answer Part 2",
          "ATDA Quiz Answer Part 3",
          "Add Inventory Component Quiz",
          "Cleaning Up Code Quiz",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "You should have some flavor of Visual Studio installed, the Community edition is fine.",
        "You should have a basic understanding of C# and Visual Studio",
        "You should have ChromeDriver and Chrome browser installed"
      ],
      "description": "This course will guide you through the important Selenium WebDriver interview exercises. The goal is to help you brush up on your skills before heading out to a Java interview.\nYou’ll Learn:\nLocating Web Elements.\n1-7 Steps of Selenium Script Quiz\nLocators in Code Exercise\nInspection Quiz\nLocators in Code Exercise Answer\nLocating Web Elements Exam\nLocating Web Elements Exam Answer\n\n\nWebDriver Methods.\nAction Quiz\nAction Quiz Answer\nCoding Exercises for Methods\n\n\nObject Oriented Programming\nOOP Quiz\nOOP Exam\n\n\nPage Objects.\nPage Objects Quiz\nPage Objects Exercise\nPage Objects Exercise Answer\n\n\nAutomation Best Practices.\nAutomation Pyramid Exercises\n\n\n45 Minute Production Level Framework.\nATDA Quiz\nATDA Quiz Answer Pt 1\nATDA Quiz Answer P2\nATDA Quiz Answer P3\nAdd Inventory Component Quiz\nCleaning Up Code Quiz\n\n\nParallelization.\nParallelization exercise\nRefactoring exercise\nReady to start?\nWhat our students are saying?\n“Wonderful content and things explained in a nutshell. Overwhelmed by Author's dedication to put things in such a way that any novice or manual tester can follow and understand and definitely be on-boarded as a Selenium Automation Engineer next day at work. Thanks a million times for creating these courses! One Stop for Automation.\"- Rupashree Geethaaviji Ananthakrishna\n“I am familiar with Nikolay from a course I saw on TestAutomation and have the highest regard for him. Glad to see him on Udemy.” - Annamalai Viswanathan\n“One Of the Best courses on Selenium With C#. Cheers Nikolay!!” - Saransh Vaid",
      "target_audience": [
        "Automation Engineers looking to improve their Selenium knowledge",
        "QA individuals looking to get started with Selenium"
      ]
    },
    {
      "title": "Как зарабатывать деньги тестируя Программное Обеспечение",
      "url": "https://www.udemy.com/course/crowdtesting/",
      "bio": "Как новичок может начать зарабатывать деньги тестируя программное обеспечение в интернете:РАБОТА из ДОМА Тестирование ПО",
      "objectives": [
        "К концу этого курса у Вас будет чёткое понимание того, что такое тестирование программного обеспечения и как это работает на практике",
        "Буквально с нуля, Вы научитесь тестировать программы, вебсайты и приложения, находить дефекты и писать о них отчеты",
        "Вы будете знать как правильно открыть учётную запись на платформах по тестированию, и как успешно пройти вступительные задания",
        "Вы будете готовы к участию в платных проектах по тестированию программного обеспечения и начнёте зарабатывать на этом деньги",
        "Вы получите советы и стратегии как можно сократить время на работу и зарабатывать больше денег",
        "Вы быстро вернёте Ваши деньги потраченные на этот курс при прохождении Вами первого платного проекта"
      ],
      "course_content": {},
      "requirements": [
        "Быть любознательным, открытым для новых идей и готовым к учёбе.",
        "Знания программирования НЕ ТРЕБУЮТСЯ!"
      ],
      "description": "В чём отличие данного курса от всех остальных курсов Udemy на русском языке по теме \"Тестирование Программного Обеспечения\"?\n1. Этот курс представляет собой набор 2 в одном. т.е. два курса в одном! Вы получаете в два раза больше полезной информации!\n2. Данный курс даёт возможность применения полученных знаний на практике - а именно, на краудтестинг платформах.\nДанный курс будет полезен тем:\n1. Кто хочет начать зарабатывать в интернете от 400 - 2000 долларов в месяц тестируя Программное Обеспечение, расходуя на это всего несколько часов в день (можно зарабатывать еще больше если есть желание и время);\n2. Кто хочет получить базовые знания и опыт в тестировании Программного Обеспечения;\n3. Кто хочет получить новую профессию (Тестировщик Программного Обеспечения) и работать в этой сфере либо как фрилансер, либо на полную ставку;\n4. Кто недавно иммигрировал в США, Канаду или Европу и не найдя подходящую для себя работу, пока еще не определился какую выбрать сферу, чтобы быстро встать на ноги и начать нормально зарабатывать. Тестирование ПО - хорошая для этой цели профессия!\nНикаких технических знаний, для того, чтобы пройти этот курс, Не Требуется!\nЭтот онлайн курс нацелен на новичков в сфере тестирования программного обеспечения в интернете. Для этого курса и для успешной работы на краудтестинг платформах знания программирования Не Требуются.\nВ данном курсе, в структурированном виде в течении 3.5 часов предоставляется общая базовая информация о том, что такое тестирование программного обеспечения (ПО). Помимо основных видео уроков этого курса, предоставляются дополнительные ресурсы (статьи, книги, ссылки на дополнительные бесплатные видео курсы по тестированию программного обеспечения) для самостоятельного изучения и для углубления знаний в данной сфере. Таким образом слушатель курса получает целую палитру инструментов и материалов, достаточных для того, чтобы полноценно начать работать тестировщиком программного обеспечения и зарабатывать на краудтестинг платформах.\nПомимо этого, целью этого курса является показать на примере одной из платформ как собственно работает краудтестинг. Во второй части курса, наглядно демонстрируются и объясняются все необходимые действия шаг за шагом. Специально для слушателей данного курса, я объясняю детали и условия примера вступительного теста и показываю как я его выполняю.\nВ заключительной третьей части курса помимо советов и стратегий для успешного опыта в краудтестинге (исходя из моего личного опыта работы тестировщиком программного обеспечения в краудтестинге), предоставляется список ДРУГИХ платформ краудтестинга. Более того, представляются примеры слушателей данного курса из стран СНГ с успешными заработками на краудтестинг платформах, о которых я рассказываю в курсе.\nЕсли у слушателей данного курса есть вопросы, я всегда на связи и отвечаю на сообщения очень оперативно.\nДобро пожаловать на мой курс «Как зарабатывать деньги тестируя программное обеспечение»!",
      "target_audience": [
        "Идеальный студент для этого курса – это человек, который хочет найти дополнительный заработок к своей основной работе как фрилансер, либо тот, кто хотел бы получить опыт работы в сфере тестирования программного обеспечения, чтобы заниматься этим как своей основной деятельностью."
      ]
    },
    {
      "title": "TestProject Java SDK Tutorial",
      "url": "https://www.udemy.com/course/testproject-java-sdk-tutorial/",
      "bio": "Automate cross-browser web tests, with rich dashboards, using TestProject Java SDK",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to TestProject Java SDK",
          "TestProject Setup",
          "TestProject dashboards",
          "Recording a test",
          "Setting TestProject API Key on Mac",
          "What is a TestProject Agent?",
          "First TestProject Test",
          "TestProject Trends and Reports",
          "Quiz 1",
          "Add 2nd Test",
          "Safari Tests",
          "Custom Jobs and Projects",
          "Using JUnit 5 with TestProject",
          "Page Objects with TestProject",
          "Quiz 2",
          "BONUS LECTURE!!!"
        ]
      },
      "requirements": [
        "Computer",
        "Java programming experience"
      ],
      "description": "In this tutorial, you will learn about the Test Project Java SDK. It is an excellent resource for creating robust test automation using the Java programming language.\n\nI'll walk you through how to:\nCreate your free test project account;\nDownload the test project agent;\nSet up the Java SDK\nLearn how to write automated tests using Safari and Chrome, which is extremely easy\nLearn how to navigate all of the excellent test project dashboards which automatically get updated to create the amazing HTML report.\nAnd finally, we will put everything together as you learn how to create page objects using the Test Project Java SDK.\nThis is a tutorial for experienced programmers who already have an understanding of:\nJava\nan IDE supporting Java SDK\nSelenium WebDriver API\nSo what are you waiting for? Let's jump into the tutorial.\nWhat current students are saying:\n\"I appreciate the time the instructor put on this course as well as the opportunity to get familiar with TestProject free of charge. Well explained however, if your are using window and you are new in Automation Testing, you might find it a bit challenging with adding the SDK Token in your system environment since the instruction used MAC which is completely a different way with windows. Other than that... I appreciate a lot this free course .... thanks\"",
      "target_audience": [
        "Automation engineers looking to program with TestProject Java"
      ]
    },
    {
      "title": "Processo de Automação de Teste Com Selenium WebDriver e Java",
      "url": "https://www.udemy.com/course/processo-de-automacao-de-testes-funcionais-com-selenium/",
      "bio": "Aprenda a forma correta de criar e executar testes automatizados em Java usando o Selenium IDE e o Selenium WebDriver",
      "objectives": [
        "Aprender as etapas que compõe um bom processo de automação dos testes.",
        "Criar scripts de testes de forma simples e rápida.",
        "Criar um projeto de testes automatizados em Java com base nos scripts de testes.",
        "Executar os testes sequenciais em múltiplos navegadores.",
        "Gerar relatório de resultado dos testes."
      ],
      "course_content": {},
      "requirements": [
        "Conceitos básicos de Teste de Software",
        "Noção básica de HTML",
        "Familiaridade com a sintaxe do Java"
      ],
      "description": "Você é iniciante na área de automação de testes?\nAnda com pouco tempo para estudar?\nE está em busca de uma forma simples e rápida de implementar seu primeiro ambiente de testes automatizados?\n\n\nSE VOCÊ RESPONDEU SIM PARA TODAS ESSAS PERGUNTAS, ENTÃO ESSE CURSO É PARA VOCÊ!\n\n\nMais de 7 mil alunos aprendendo a forma correta de automatizar os testes funcionais para aplicações web.\n\n\nVEJA O QUE OS NOSSOS ALUNOS ESTÃO DIZENDO SOBRE O CURSO:\n\n\nGratidão por ter encontrado o seu curso (o melhor) de Selenium. Seu diferencial principal? Seu SUPORTE! Mantenha-se assim - Marcelo Miranda\n\n\nCurso objetivo, claro e com bastante informação. Pra quem precisa aprender sobre o Selenium, esse é o curso certo - Anderson Vidal\n\n\n\"O curso superou as minhas expectativas, gostei bastante - Lucas, o Javoso.\n\n\nUm dos melhores cursos de automação de testes que já assisti - Warley Xavier\n\n\n\"A parte prática do curso é muito boa. :) O instrutor domina o assunto - Wagner de Melo\n\n\nUma automação bem sucedida dos testes funcionais consiste em executar as atividades de forma padronizada e organizada.\n\n\nDe uma forma dinâmica, esse curso proporciona ao aluno, a experiência de passar por todas as etapas que compõe um bom processo em automação de testes, usando duas excelentes soluções do Selenium: A IDE e a API WebDriver.\n\n\nSolução completa e gratuita para automatizar testes funcionais\nDesenvolvido por profissionais de grandes empresas (Google, Facebook, Mozilla, Opera), o Selenium é uma das melhores alternativas para quem pretender automatizar os testes funcionais de projetos web. Não é à toa que foi adotado como principal tecnologia de testes em nuvem (Testing Cloud) de famosas empresas do ramo tais como: BrowserStack, SauceLabs e CrossBrowserTesting.\nPor ser um projeto Opensource, o usuário não só conta com vários recursos gratuitos, mas também fica livre para aprimorá-los e assim criar soluções de testes.",
      "target_audience": [
        "Profissionais da área de qualidade de software que almejam implementar bom processo de automação de testes funcionais usando o Selenium."
      ]
    },
    {
      "title": "Become Software Tester - A Complete Learning path to be a QA",
      "url": "https://www.udemy.com/course/become-software-tester/",
      "bio": "Learn about software testing or QA ,How to get started, where to learn & what to learn, How to Start a new career as QA.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course Introduction !",
          "Introduction",
          "Humble Request !!",
          "Better Learning Experience - Must for new to Udemy | Optional who know",
          "How to reach Instructor ?"
        ],
        "Scope of Software Tester": [
          "Scope of Manual Tester",
          "Tester has more Opportunity",
          "How to start career in Software Testing"
        ],
        "Software Testing Learning & Path": [
          "What is Software Testing ?",
          "Testing Live App without QA Knowledge",
          "Understanding SDLC & STLC - Core Testing Concepts",
          "Software Testing Process",
          "Testing Live App with QA Knowledge",
          "QA Growth & Promotions",
          "Roles & Responsibility of a Software Tester ?",
          "Why QA need SQL with example",
          "Structure Vs Un Structure Learning",
          "Learn Concepts to become QA"
        ],
        "Automation & Other Testing Learning Path": [
          "Automation Overview with Live Demo",
          "Learn concepts to become Specialist QA",
          "Become Automation Tester & SDET"
        ],
        "Quick Learning Guide & Path to land to your dream IT QA Job": [
          "Learning guides- Must Watch !!"
        ],
        "More Learning": [
          "Guide to achieve your Goal",
          "Success Mantra - Very easy to Say difficult to do",
          "Complete Manual Testing & SQL With Live Project - Learning Resources",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prerequisite - anyone can follow"
      ],
      "description": "Course to Understand Software Testing as a Career Option !!\nThis Course will provide you quick introduction to the field of Software Testing or Software QA.\n\n\n- Best For Beginner Course\nWhere You will understand how software Testing is done in real time with live Demo!!\nIf you are a beginner - Just go a head and watch ^\n(This is an introductory Session to have basic idea how software testing jobs are done & How one can start his career)\n\n\nSoftware testing is a great field for one to start a new career. We all know our lives are being dependent on the software in every aspect.We are surrounding with software & technology everywhere. Which mean so much software is being build and which means everything that gets build must be tested. This is a very good indication that software testing has amazing potential as a career. If you want a career in the software world then software testing is one of the easiest ways to get started in the field.\nManual testing and automation testing both are in high demand. This course will teach you how to get started in manual testing and automation testing as well as where to get the knowledge. What topics you need to learn.\nYou will be able to understand How manual and Automation Testing is done with Live Demo.\nThe course will provide clear picture why QA career is such a respected and professional career. I have cover what the roles and responsibilities of a software testers are and try to motivate you to start a career in this exciting field of software testing or software QA.\n\n\nHow This Course is Structured:\nBest for Beginners - Assumed Like You are a Beginners to Software /IT.\nCovered the Software Testing Scope & how one can start his/her career.\nListed all the topics - So that one can learn from anywhere\nGuided how to learn and from where you can start & what other tools you need to know.\nI will be very supportive throughout this course and you can always reach out to me over email & I will do all possible support.\nLast but not least Just for your information - this covered basic high level overview of Software testing.\n\n\nAll the Very Best\nPankaj Gupta.",
      "target_audience": [
        "Fresher",
        "Beginner",
        "Confused professional - to know about software testing",
        "Fresh Graduate who want to start career in Software / IT",
        "Anyone looking to know what software testing or software QA is ?",
        "Anyone who is looking for Job change in Software Testing fields / IT"
      ]
    },
    {
      "title": "Exam Preparation: ISTQB Test Analyst Advanced Level",
      "url": "https://www.udemy.com/course/exam-preparation-istqb-test-analyst-advanced-level/",
      "bio": "Master Advanced Testing Techniques and Prepare for the ISTQB Test Analyst Certification Exam",
      "objectives": [
        "Preparation for the Test Analyst",
        "The Role of a Test Analyst in the Testing Process",
        "Risk-Based Testing",
        "Black-Box Testing Techniques",
        "Experience-Based Testing Techniques",
        "Software Quality Testing",
        "Reviewing Test Documentation and Requirements",
        "Test Automation and Testing Tools",
        "Test Analyst Practice Exam"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Software Testing",
        "Willingness to Learn and Prepare for the Exam"
      ],
      "description": "Welcome to the \"Exam Preparation:  ISTQB Test Analyst Advanced Level\" Course!\nThis course is your ultimate guide to mastering the concepts, techniques, and responsibilities of a Test Analyst at the Advanced Level, specifically designed to help you prepare for the Test Analyst Advanced Level certification exam.\nWhether you're an experienced QA professional looking to take your career to the next level, or a tester who wants to strengthen their analytical skills and gain in-depth knowledge of test techniques, risk-based testing, and software quality characteristics, this course provides everything you need to pass the exam with confidence.\n\n\nWhat You’ll Learn:\n\n\nThe Role of a Test Analyst in the Testing Process – Understand key tasks, responsibilities, and contributions of a Test Analyst across different testing phases.\nRisk-Based Testing – Learn how to identify, assess, and prioritize risks to optimize test effort and focus on critical areas of the system.\nTest Design Techniques – Master black-box techniques such as Equivalence Partitioning, Boundary Value Analysis, Decision Table Testing, and State Transition Testing to create effective test cases.\nExperience-Based Testing – Explore Error Guessing, Exploratory Testing, and Checklist-Based Testing to enhance defect detection beyond structured techniques.\nTesting Software Quality Characteristics – Understand the importance of usability, interoperability, portability, and accessibility in software testing.\nReview Process & Documentation Analysis – Gain expertise in reviewing requirements, user stories, and other test-related documentation to detect defects early.\nTest Tools and Automation – Discover essential tools that support test management, test design, test data generation, and automated execution.\nPractice Exam Questions – Test your knowledge with a sample exam, structured just like the real Advanced Level Test Analyst certification exam.\n\n\nWho This Course Is For:\n\n\nAspiring Test Analysts – Individuals preparing for the Test Analyst Advanced Level certification who need a structured, syllabus-based approach.\nSoftware Testers and QA Professionals – Testers who want to enhance their analytical skills, master advanced test techniques, and expand their career opportunities.\nTest Leads & Agile Team Members – Professionals looking to strengthen their risk-based testing skills, improve test efficiency, and contribute to high-quality software delivery.\n\n\nBy the end of this course, you will have a thorough understanding of test analysis concepts and methodologies, and you will be fully prepared to pass the Test Analyst Advanced Level certification exam.\n\n\nLet’s get started on your journey to becoming a Certified Advanced Level Test Analyst!",
      "target_audience": [
        "Aspiring Test Analysts",
        "Software Testers and QA Professionals",
        "Test Managers and Leads",
        "Anyone Interested in Software Testing"
      ]
    },
    {
      "title": "Advanced Testing for React with Vitest, RTL and Playwright",
      "url": "https://www.udemy.com/course/advanced-testing-for-react-with-vitest-rtl-and-playwright/",
      "bio": "Master Unit, Integration & E2E Testing in React Apps – From Real-World Projects to Production-ready Confidence",
      "objectives": [
        "Advantages of Automated Testing Over Manual Testing",
        "Different Types of Automated Testing: Unit Testing, Integration Testing, E2E Testing",
        "Repositories for a Full React Application that We Write Automated Tests for it",
        "Unit Testing with Vitest. Setting Up Vitest and Configuring it",
        "Code Coverage and Test Coverage Definitions, Differences and Usages",
        "Writing Integration Tests with React Testing Library",
        "Playwright Full Guide: Installation and setup, Writing and Running Your First Test",
        "Writing E2E Tests with Playwright"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of React",
        "Basic Knowledge of TypeScript and JavaScript"
      ],
      "description": "Master React Testing: From Vitest to Playwright – Build Rock-Solid Apps with Confidence!\nAre you building modern React applications and want to ensure they’re robust, bug-free, and production-ready? Look no further! This hands-on course takes you step-by-step through the most advanced testing strategies using today's most powerful tools: Vitest, React Testing Library (RTL), and Playwright.\nWhether you're a frontend developer, QA engineer, or full-stack pro, this course equips you with in-demand skills that top tech companies are actively seeking.\nWhat You’ll Learn:\nWhy testing matters – and how it saves time and money\nUnit, integration, and E2E testing using the modern Testing Pyramid\nHow to set up and use Vitest for lightning-fast unit testing\nMocking network requests and React Query using Vitest\nWriting real-world tests for custom hooks and API logic\nTest-driven development (TDD) with React Testing Library (RTL)\nCode coverage: metrics that matter, and how to improve them\nEnd-to-end testing React apps with Playwright\nEfficient test architecture for real-world React projects\nTools & Technologies Used:\nVitest – A blazing-fast Vite-native test runner\nReact Testing Library (RTL) – For testing UI from the user’s perspective\nPlaywright – For full browser testing (E2E tests)\nMocking – Learn to test network and async logic with confidence\nCode Coverage Tools – Gain insights and boost test quality\nProject-Based Learning\nThis course is 100% practical! You'll work with a real-world blogging app repo, writing tests that mirror what you'll do in a professional setting:\nTest fetching and mutating posts\nCover all edge cases\nMaster mocking strategies\nApply best practices for organizing test suites\nWho This Course is For:\nReact developers who want to go beyond basics and write reliable, testable code\nEngineers preparing for tech interviews or transitioning to senior roles\nQA professionals looking to add automated frontend testing to their skillset\nAnyone building production apps who wants confidence in their code\nBy the End of This Course, You Will:\nWrite unit, integration, and E2E tests like a pro\nUnderstand testing from theory to real-world implementation\nCreate robust, maintainable test suites using modern tools\nBuild the confidence to refactor and scale apps safely\nEnroll Now!\nStart mastering testing in React today and build bulletproof apps that users (and your team) can trust. Your future self—and your next employer—will thank you.\nClick Enroll Now and take your React testing skills to the next level!",
      "target_audience": [
        "Mid level and Senior Developers Who Are Looking to Create High Quality Softwares and Advance Their Knowledge about Automated Testing"
      ]
    },
    {
      "title": "Getting Started With Test Automation Using Selenium",
      "url": "https://www.udemy.com/course/getting-started-with-test-automation-using-selenium/",
      "bio": "Learn about software testing flow, role of test automation, Selenium IDE, Selenium WebDriver and Selenium Grid",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Quiz",
          "Test Effort Estimation?",
          "Quiz",
          "What is the Problem? Solution?",
          "Quiz",
          "What, Why and How of Test Automation?"
        ],
        "Selenium": [
          "Introduction to Selenium IDE and test automation using it",
          "Introduction to Selenium WebDriver and Selenium Grid",
          "Getting Hands On : Part-I",
          "Getting Hands On : Part-II",
          "Getting Hands On : Assignments"
        ],
        "Summing Up": [
          "Introduction to Whiztrial & Summing Up",
          "Quiz & Assignment",
          "Opportunity for YOU",
          "Thank You",
          "Bonus"
        ]
      },
      "requirements": [
        "Familiarity with using software"
      ],
      "description": "This course is about getting started with learning on test automation using Selenium. We will do a quick recap on what is a typical software test flow, like starting from requirements, testcase design, test execution, manual testing, writing automated test script, running automated test scripts. We will try to delve into what, why and how of test automation. In the light of all this we will look into how Selenium comes as a solution in solving some of the problems faced in testing. We will have introductory experience of Selenium IDE, WebDriver and Grid. Finally we will look into path to be taken going forward.",
      "target_audience": [
        "This course in meant as an introduction to software test flow and role of test automation.",
        "This will help the software test engineers get a introductory perspective about using Selenium as an effective test automation tool"
      ]
    },
    {
      "title": "2時間で学ぶ！ソフトウェアテスト設計講座（機能テスト編）～効率的に”もれ”の無いテスト設計手法を習得～",
      "url": "https://www.udemy.com/course/shift-designfunctionaltest/",
      "bio": "ユーザーから要求された機能を満たしていることを検証する、ブラックボックステストの代表格「機能テスト」。本講座では、網羅的かつ効率的なテストケースを設計するための手法を身に付けます。",
      "objectives": [
        "基本的なテスト設計プロセスを理解し、活用することができるようになる",
        "テスト対象項目を、漏れなく抽出できる手法を習得する",
        "テスト観点を、漏れなく効果的に展開する手法を習得する",
        "テスト項目の取りうる値を、同値分割、境界値分析により選択する手法を習得する",
        "テストの組み合わせパターンを作成できるようになる",
        "テストの組み合わせパターンを効果的に削減するための、水準網羅、二因子間網羅の技法を理解する",
        "テスト設計をレビューするためのポイントを理解する",
        "講座内で理解度確認テストを実施するので、ご自身の理解度を確認したうえで更なる学習・技能習得に繋げることができる"
      ],
      "course_content": {},
      "requirements": [
        "システム開発のご経験が無くても受講はできますが、標準的なシステム開発のフローを把握していると理解が進みます。",
        "講座内でエクセルマクロを利用したパターン表作成を実演します。",
        "2~3年目の若手エンジニアはもちろん、ご経験豊富なベテランエンジニアの方もご自身のスキルと照らし合わせてより高度なスキルを取得していただけます。"
      ],
      "description": "ソフトウェアテスト専門会社のプロがノウハウを伝授する実践的講座第１弾！\n\n\nユーザーから要求された機能を満たしていることを検証する、ブラックボックステストの代表格「機能テスト」。\n多くのエンジニアが経験されていると思いますが、実は、この「機能テスト」…奥が深いんです！手法によって生産性、品質を格段に上げることが出来ます。\nテストケースを減らすと網羅性が落ちる、一方で、網羅性を気にしてテストケースを増やすと、時間や工数が足りなくなる。テスト設計の進め方が人によって違うので、テスト密度がコントロールできない。そんなお悩みをお持ちの方には必見です。\n\n\n■ 2024/3/22 更新\nこの度、一部レクチャーの音声改善のため、動画の更新を実施することになりました。\n更新期間は 2024/3/27（水）～2024/3/29（金）の予定です。\n受講中の場合、更新されたレクチャーは未修扱いとなりますのでご注意ください。\nみなさまにはご不便をおかけし大変申し訳ありませんが、何卒よろしくお願い申しあげます。\n\n\n■2024/3/28 更新\n動画更新作業が完了いたしました。みなさまにはご不便をおかけし申し訳ありませんでした。\n今後ともよろしくお願いいたします。",
      "target_audience": [
        "テスト設計の技法と具体的な実践方法を習得したい方",
        "担当者によって異なるテスト設計を改善し標準化したい方",
        "網羅的なテスト設計にしようとすると組合せが膨大になりお困りの方"
      ]
    },
    {
      "title": "Testing java spring apps with JUNIT, Mockito, Wiremock",
      "url": "https://www.udemy.com/course/testing-java-apps-with-junit-mockito-wiremock-and-postman/",
      "bio": "Advance your career by learning how to make your code bulletproof by using available testing means",
      "objectives": [
        "Learn to write high quality code",
        "Learn JUNIT",
        "Learn Wiremock",
        "Learn Postman testing",
        "Spring"
      ],
      "course_content": {
        "JUNIT5/Mockito/Mocks/Stub/Spy/Exception Testing": [
          "JUNIT5 introduction and practical example",
          "Mockito, Stub, Spy presentation",
          "Presentation and implementation of the flow",
          "Mockito, Spy, Stub on the previously implemented app",
          "Mocking exceptions",
          "Exception testing by using spies",
          "Wiremock introduction",
          "Presentation and implementation of the flow part 2",
          "Reset mocks",
          "Mockito, Spy, Stub in Spring - preparing the workspace",
          "Mockito, Spy, Stub in Spring - tests implementing"
        ],
        "Wiremock and Mock server with POSTMAN": [
          "Build a mock server with POSTMAN",
          "Make our app call the external mock client created with POSTMAN",
          "Replace our hardcoded data with data taken from the mocked REST api",
          "Build tests with wiremock"
        ],
        "Testing your rest api with postman": [
          "Building a dummy rest api with spring boot",
          "Introduction to postman and writing the first tests",
          "Variables in postman",
          "Postman in depth"
        ]
      },
      "requirements": [
        "You can understand 70% of the course by knowing Java basic",
        "To understand the spring lessons, you need some knowledge of it too"
      ],
      "description": "\"Testing Java Apps with JUnit, Mockito, Wiremock, and Postman\" is a course designed for Java developers who want to improve their skills in creating robust, high-quality software. It covers the use of JUnit, a popular Java framework for unit testing, along with the Mockito and Wiremock libraries for creating mock objects and simulating HTTP interactions. Additionally, the course covers the use of Postman for testing and debugging RESTful API's. Throughout the course, you will learn how to write test cases that are easy to maintain, understand and execute. The course will also cover the best practices and common pitfalls to avoid when testing Java applications. By the end of the course, you will have the knowledge and skills needed to confidently create, execute, and maintain automated tests for your Java applications.\n\n\nYou will learn about :\nJUNIT concepts - we first write the code for our app, then we identify what is missing to be proud of our code and at the end of this chapter we implement some tests that will cover all our functionality.\nhow to use POSTMAN to write automated tests and also build your own mock server. POSTMAN is used, most of the times, just for making requests to our app, but in reality it has a lot of functionality that can make your life easier\nMockito - we will talk about stubs/spies/mocks. We first write some tests that will use stub/mock/spy for the simple java app and after that we learn what changes in our approach. You will need this information to know exactly when to use what.\nWiremock - you will learn how to an app that uses a rest api client\nThese are must know knowledge if you want to advance your career and write better code.",
      "target_audience": [
        "People that want to improve their coding skills"
      ]
    },
    {
      "title": "Master QA Interview: Selenium, Java, Behavioral Questions",
      "url": "https://www.udemy.com/course/cracking-the-qa-interview/",
      "bio": "Passing the technical interview for becoming a software engineer in test.",
      "objectives": [
        "Learn the most common questions and challenges about algorithms that are usually used in technical interviews.",
        "Learn how to prepare for a Quality Engineer interview at a top company.",
        "Find out what to expect regarding frontend automation questions and challenges.",
        "Get ready to master backend automation challenges usually used in Quality Engineer interviews.",
        "Prepare for a QA interview with the latest and greatest tips and techniques."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Algorithms": [
          "Introduction to the Big O Notation",
          "Explaining the Big O Notation",
          "Big O Notation Interview Questions",
          "Introduction to Sorting Algorithms and Bubble Sort",
          "Bubble Sort Exercise",
          "Insertion Sort",
          "Merge Sort",
          "Quick Sort",
          "Shell Sort",
          "Selection Sort",
          "Binary Search Tree",
          "Binary Inseration Tree",
          "Generic Algorithms Interview Questions",
          "Extra: The Tower of Hanoi Coding Challenge"
        ],
        "Interview Questions and Challenges Related to Java": [
          "Most common interview questions about Java",
          "Most common interview questions about Java - 2",
          "Most common interview questions about Java - 3"
        ],
        "Frontend Automation Interview Questions": [
          "Frontend Automation Interview Questions - Part 1",
          "Frontend Automation Interview Questions - Part 2",
          "Frontend Automation Interview Questions - Part 3"
        ],
        "Backend Automation Interview Questions": [
          "Frequent Questions on Backend Automation Testing",
          "Extra: Introduction to API Testing",
          "Extra: Introduction to HTTP",
          "Extra: Working with Postman",
          "Extra: Types of API's",
          "Extra: Introduction to Swagger and API Documentation",
          "Extra: Automating REST Calls Using RestAssured"
        ],
        "ISTQB-related Interview Questions": [
          "Introduction to the ISTQB concepts",
          "Shifting Left Approach",
          "Interview Questions about the Testing Pyramid",
          "Test Pyramid Quiz"
        ]
      },
      "requirements": [
        "A bit of programming experience, preferably in Java.",
        "Some experience working with frontend automation tools is preferred, but not required."
      ],
      "description": "Are you having problems in understanding the requirements of a technical interview? Are you overwhelmed with the amount of information available on the web on tips of how to land a Quality Engineer job? Then this course is for you!\nThis course is crafted for mid-level Quality Engineers who wish to pursue a career in the field.\nIn this course you will get to know the most common interview questions and challenges used by top tier companies for getting the most qualified quality engineers.\nFrom problems involving algorithms and data structures, through questions related to backend or frontend testing, to ISTQB-related qustions, this course covers everything you need to know to land a job as Software Developer Engineer in Test (SDET).\nThe course also contains several  sections on coding challenges, as well as backend automated testing. In these sections, we will deep-dive into these topics, in order to give you the edge when applying to an SDET role.\nWhat you need to bring to this course is:\nA basic knowledge of Java or any programming language\nA basic understanding of the software development lifecycle.\nIf you haven't worked with Java, or any programming language before, I recommend you my course called: Automation Testing Masterclass, which will give you the prerequisite knowledge that will help you go through any interview challenge easily.",
      "target_audience": [
        "Mid-level tech savvy people that want to pursue a career as a Quality Engineer.",
        "People who wish to change their jobs from manual testing to automation testing.",
        "People who wish to become Software Developers Engineers in Test (SDET)."
      ]
    },
    {
      "title": "Master ISTQB Software Testing:Complete Guide & Certification",
      "url": "https://www.udemy.com/course/master-istqb-software-testingcomplete-guide-certification/",
      "bio": "ISTQB Software Testing: Ultimate Guide to Certification & Skills",
      "objectives": [
        "Fundamentals of Software Testing: Understanding the purpose and importance of testing in the software development lifecycle.",
        "ISTQB Certification: Preparing for the ISTQB Foundation Level certification, including exam structure and question types.",
        "Test Design Techniques: Mastering methods such as equivalence partitioning, boundary value analysis, decision tables, state transition testing, and error guessi",
        "Test Levels and Types: Learning about different testing levels (unit, integration, system, acceptance) and static vs dynamic testing.",
        "Test Management: Gaining skills in test planning, estimation, monitoring, control, and reporting.",
        "Agile and DevOps Testing: Understanding testing in Agile and DevOps environments, including TDD, BDD, and continuous testing.",
        "Defect Management: Learning how to track and manage defects through their lifecycle.",
        "Risk-Based Testing: Prioritizing testing based on risk to optimize resources and efforts.",
        "Advanced Topics: Exploring test automation, non-functional testing (performance, security, usability), and best practices for test closure."
      ],
      "course_content": {
        "Introduction to ISTQB and Software Testing": [
          "What is Software Testing?",
          "Introduction to ISTQB Certification"
        ],
        "Software Testing Fundamentals": [
          "Key Testing Concepts",
          "Testing Process and Life Cycle",
          "Test Levels and Types",
          "Testing Techniques"
        ],
        "Test Design Techniques": [
          "Equivalence Partitioning and Boundary Value Analysis",
          "Decision Tables and State Transition Testing",
          "Error Guessing"
        ],
        "Test Management": [
          "Test Planning and Estimation",
          "Test Monitoring and Control",
          "Test Reporting",
          "Configuration Management in Testing"
        ],
        "Testing in Agile and DevOps Environments": [
          "Introduction to Agile Testing",
          "Agile Testing Techniques",
          "DevOps and Continuous Testing"
        ],
        "Defects and Risk-Based Testing": [
          "Defect Life Cycle",
          "Risk-Based Testing"
        ],
        "Advanced Topics and Best Practices": [
          "Test Automation Overview",
          "Non-Functional Testing",
          "Test Closure Activities"
        ],
        "Mastering the ISTQB Foundation Exam": [
          "Understanding the ISTQB Foundation Level Exam Structure"
        ]
      },
      "requirements": [
        "The only prerequisite for this course is a willingness to learn and a keen interest in software testing. Whether you're new to the field or have some experience, this course is designed to accommodate all learners. While basic knowledge of software development can be helpful, it's not required. As long as you're ready to dive in and expand your skills, you're all set to start!"
      ],
      "description": "This course is designed to provide a comprehensive understanding of software testing, focusing on both foundational and advanced concepts aligned with the ISTQB framework. It offers practical insights into the principles, techniques, and tools required to become proficient in software testing, ensuring you are well-equipped to succeed in real-world testing scenarios.\nThe course begins with an introduction to software testing, where you'll learn about its definition, purpose, and critical role in the software development lifecycle. You’ll also gain a solid understanding of ISTQB and the benefits of certification, alongside the various certification levels available to professionals in the field.\nAs you progress, you will explore key testing concepts such as the distinction between testing and debugging, and an in-depth look at the different levels of testing—unit, integration, system, and acceptance. You'll gain insights into the entire testing process, from test planning and design to execution and reporting. The section also covers the key types of testing, including static and dynamic, and discusses how to approach each level of testing effectively.\nTest design techniques form a crucial part of the course, where you’ll learn how to design efficient test cases using methods like equivalence partitioning and boundary value analysis. We also dive into decision tables, state transition testing, and error guessing, providing you with essential skills to identify and address potential defects effectively.\nThe course also delves into test management, teaching you how to plan and estimate testing efforts, monitor and control test progress, and write comprehensive test reports. Configuration management practices are covered in detail, ensuring that you are equipped to handle test environments, tools, and test data efficiently.\nIn addition to traditional testing methodologies, this course addresses testing in Agile and DevOps environments. You'll learn about the testing approaches used in Agile projects, including Test-Driven Development (TDD) and Behavior-Driven Development (BDD), as well as the integration of continuous testing and continuous integration within DevOps practices.\nDefect management and risk-based testing are key elements in identifying and addressing critical issues. You’ll gain the ability to track defects, understand their lifecycle, and prioritize testing based on risk, ensuring your testing efforts are optimized.\nFinally, the course covers advanced topics such as test automation, non-functional testing (performance, security, and usability), and the importance of proper test closure activities. You’ll also learn the best practices for automating your testing process using the right tools.\nBy the end of this course, you will have a well-rounded understanding of software testing, along with practical knowledge to apply testing techniques across various environments and methodologies. You will be fully prepared for certification and ready to excel in your software testing career.",
      "target_audience": [
        "Beginners in Software Testing: If you’re new to software testing and want to build a strong foundation, this course will guide you through key concepts and best practices.",
        "Aspiring ISTQB Certified Testers: If you're aiming to become ISTQB certified, this course prepares you thoroughly for the ISTQB Foundation Level exam.",
        "Software Developers: Developers looking to expand their knowledge of testing methodologies to enhance their ability to write testable code and improve software quality.",
        "Quality Assurance (QA) Professionals: Those working in QA who want to formalize their knowledge and improve their testing techniques with a structured, internationally recognized approach.",
        "Agile and DevOps Teams: Professionals in Agile or DevOps environments looking to deepen their understanding of testing practices and tools commonly used in these methodologies.",
        "Anyone Looking to Improve Testing Skills: If you are already in the field and want to sharpen your skills in test design, test management, or advanced testing techniques, this course will provide you with valuable insights."
      ]
    },
    {
      "title": "Dev tools para testers",
      "url": "https://www.udemy.com/course/dev-tools-para-testers/",
      "bio": "Aprovechá las herramientas de desarrollo para mejorar tus pruebas",
      "objectives": [
        "Introducirse en las herramientas de desarrollo que traen los navegadores",
        "Sacar provecho de esas herramientas para realizar pruebas funcionales manuales",
        "Realizar simulaciones básicas de dispositivos móviles",
        "Conocer las posibilidades de acción sobre las solapas Elementos, Consola, Código fuente, Redesm Rendering, Auditoria y Grabaciones",
        "Obtener y entender reportes básicos de performance y accesibilidad"
      ],
      "course_content": {},
      "requirements": [
        "Si bien no es excluyente, sería ideal que tengas conocimientos de testing funcional manual, redes, comunicaciones, performance y accesibilidad.",
        "Sin embargo, los conceptos que podrían ser nuevos se explican para que nadie se quede afuera y todos puedan seguir el curso."
      ],
      "description": "Las dev tools son herramientas que vienen integradas a los navegadores y que fueron pensadas para hacerle la vida más fácil al desarrollador. Sin embargo, estas herramientas también las podemos aprovechar desde testing.\n\n\nEn este curso veremos una introducción a los aspectos más importantes de las dev tools. Si bien hay un montón de funcionalidades, solo aprenderemos aquellas que serán de utilidad para hacer un testing funcional manual. También se mencionarán temas de performance y accesibilidad pero no se hará foco en eso durante el curso.\n\n\nLas funcionalidades que cubriremos son las que nos permiten hacer simulaciones de dispositivos móviles, inspeccionar elementos, obtener detalles de advertencias o errores, navegar el código fuente, localizar request y response, simular redes de menor desempeño y carga de CPU, entender qué cosas se han implementado bien y cuáles son las oportunidades de mejora, y problemas en relación a la accesibilidad y performance. y grabar escenarios de prueba para reproducirlos más tarde.\n\n\nPor último destacar que:\n- Es un curso introductorio donde se presentan las herramientas pero no se entra en profundidad\n- Si bien se mencionan conceptos de performance y accesibilidad, el enfoque está puesto en el testing funcional manual.\n- No es necesario tener conocimientos técnicos previos sin embargo será de mucha utilidad que los tengas (código, redes, performance, etc.)\n\n\n¡Te espero!",
      "target_audience": [
        "Testers funcionales manuales que quieran incorporar una herramienta adicional para mejorar sus pruebas sobre aplicaciones web.",
        "Otros profesionales que quieran tener una visión básica sobre las dev tools."
      ]
    },
    {
      "title": "Master Selenium Webdriver with Python using SeleniumBase",
      "url": "https://www.udemy.com/course/master-selenium-python-using-seleniumbase/",
      "bio": "Learn Web Automation from the Basics and Build a Complete E2E Test Framework! Includes Reports, CI and Cloud Integration",
      "objectives": [
        "Master the basics of SeleniumBase and its improvements over Selenium with Python.",
        "Understand how SeleniumBase reduces coding efforts for automated testing.",
        "Become skilled in managing web elements for effective automation.",
        "Learn to implement checks and validations confidently within your tests.",
        "Control asynchronous operations using implicit and explicit waits.",
        "Organize test scripts for maintainability using the Page Object Model.",
        "Use BrowserStack to run tests across various browsers and devices.",
        "Automate your testing workflow using continuous integration tools.",
        "Enhance your career with Python, a leading language in web automation.",
        "Sharpen your debugging skills with SeleniumBase and advanced IDE techniques."
      ],
      "course_content": {
        "Introduction": [
          "Course Outline",
          "Must Watch - Before You Get Started !",
          "Why not to use Selenium?",
          "Why SeleniumBase?",
          "pyTest Overview"
        ],
        "Setup & Installation": [
          "Python Setup - macOS",
          "PyCharm Setup - macOS",
          "Python Setup - Windows",
          "PyCharm Setup - Windows",
          "Virtual Envirornment Overview",
          "SeleniumBase Installation"
        ],
        "Python Crash Course": [
          "Crash Course For Beginners",
          "Python Quiz",
          "Building a Simple Browser Class"
        ],
        "Write Tests": [
          "Writing Your First Test",
          "Reviewing Test Failure",
          "Pushing Changes to GitHub",
          "Interacting With Elements - CSS Selector",
          "Interacting With Elements - Xpath Selector",
          "Working with Multiple Elements",
          "Exercise: Elements Interaction",
          "Solution: Elements Interaction"
        ],
        "Assertions": [
          "Assert Equal and True",
          "Assert Element Visible and Present",
          "Assert In and Attribute",
          "Assert Not Equal and False",
          "Assert Element Not Visible and Present",
          "Exercise - Assertions",
          "Solution - Assertions - Part 1",
          "Solution - Assertions - Part 2"
        ],
        "Handling Waits": [
          "Implicit vs Explicit Waits",
          "Handling Implicit Waits",
          "Handling Explicit Waits",
          "Assertion & Waits"
        ],
        "Demo Site": [
          "Demo Page Overview",
          "Working with Input Slider",
          "Handling Dropdown",
          "Check the Checkbox",
          "Dealing with iFrames",
          "Exercise - Checkbox in iFrame",
          "Solution - Checkbox in iFrame",
          "Hover Over Element"
        ],
        "Tab & Uploads": [
          "Interact with New Tab",
          "Single File Upload - Overview",
          "Single File Upload - Implementation",
          "Multiple File Upload - Overview",
          "Multiple File Upload - Implementation"
        ],
        "Page Object Model": [
          "Page Object Model (POM) Overview",
          "Home Page - Initial Setup",
          "Home Page - Locators",
          "Home Page - Methods",
          "Home Page - Update Tests",
          "Exercise - Upload Page",
          "Solution - Upload Page Implementation",
          "Solution - Update Upload Test",
          "Solution - Upload Page Optimization"
        ],
        "Setup Framework": [
          "Config File Setup",
          "Overriding Settings File",
          "Code Linter - Overview",
          "Code Linter - Implementation",
          "Code Formatter - Overview",
          "Code Formatter - Implementation",
          "Doc String - Overview",
          "Doc String - Implementation",
          "POM & Framework"
        ]
      },
      "requirements": [
        "Some familiarity with programming concepts is beneficial. However, we'll guide you from the basics of Python to advanced SeleniumBase automation.",
        "If you're acquainted with how websites operate, it's a plus. But don't worry, we'll demystify web automation step by step.",
        "More than any tool or skill, your willingness to learn is crucial. Come ready to dive in, and we'll empower you with all the knowledge for web automation success."
      ],
      "description": "Step into the World of Web Automation: Welcome to your exciting journey into web automation with our comprehensive beginner's course on SeleniumBase. Whether you're new to automation or seeking to enhance your skills, this course is designed to put you on the path to success.\n\n\nWhy Choose SeleniumBase?\nSeleniumBase elevates your web automation experience beyond the capabilities of standard Selenium Python. Here’s why it’s the preferred choice:\nSimplified Testing: Reduces complex coding, making test writing more accessible.\nEnhanced Tools: Brings additional functionalities, enriching the standard Selenium toolkit.\nUser-Friendly: Designed for ease of use, catering to all skill levels.\nReliable and Stable: Enhances test stability, reducing inconsistencies.\nEfficient Automation: Focuses on automating routine tasks, and optimizing your workflow.\n\n\nYour Learning Path:\nFrom Zero to Hero: Begin with no prior experience? No worries. You'll start with the essentials, from installing Python to writing your first automated test.\nHands-On Experience: Dive into interactive sessions, mastering how to handle web elements, perform assertive checks, and manage timing efficiently. Develop critical debugging skills to overcome any challenges in your tests.\nElevate Your Testing Skills: Progress to advanced concepts like the Page Object Model to keep your tests organized and maintainable. Explore hooks, data-driven tests, and strategies to scale up your testing framework.\nCloud Testing Mastery with BrowserStack: Learn to navigate and utilize BrowserStack for comprehensive testing across various browsers and devices.\nReal-World CI/CD Skills: Get hands-on experience integrating your tests with tools like GitHub Actions, automating your testing pipeline for practical applications.\nPython in Automation: Boost your career by leveraging Python, one of the most sought-after skills in the tech industry.\n\n\nBe Part of a Community: Joining this course means more than just learning; it's about being part of an active and supportive community and enjoying the benefit of personalized support from your instructor.\nEngage and Excel: Tackle our practical exercises and quizzes designed to challenge and deepen your understanding.\nTransform Your Career Path: By the end of this course, you'll have the confidence and skills to automate any web application using SeleniumBase.\n---\nStudent Testimonials from Previous Courses\nHear from students who have already experienced the journey and seen their skills transform:\nWilmar G. \"As a QA Engineer, learning new tools and technologies is a daily adventure. Dilpreet's courses stand out in a sea of options. He's one of the best instructors I've encountered, offering rich content and exceptional guidance!\"\nJay K. \"This course is a gem for building a solid foundation in automation. Dilpreet's teaching style is personal and responsive. His courses are well-paced, ensuring a thorough understanding without feeling rushed. Highly recommended for a hands-on learning experience.\"\nSven S. \"Dilpreet excels at breaking down complex concepts into understandable lessons. His real-world insights and tips are invaluable. It's not just a course; it's a real-world application of test automation that resonates and sticks with you.\"\n---\nAre you ready to embark on this journey? Dive into the detailed course outline below and enroll now to begin your enriching path toward mastering web automation. Your adventure in the world of tech starts here with just a click!",
      "target_audience": [
        "Ideal for those looking to start or advance their careers in web automation with SeleniumBase, even without prior experience.",
        "A perfect match for QA/SDET specialists seeking to transition into automated testing or enhance their current testing skills with SeleniumBase.",
        "Suited for developers interested in incorporating automated testing into their workflow, or tech enthusiasts eager to learn about SeleniumBase's capabilities."
      ]
    },
    {
      "title": "Introduction to Unit Testing in Java",
      "url": "https://www.udemy.com/course/introduction-to-unit-testing-in-java/",
      "bio": "Create, debug, and improve your unit tests and code",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting Up"
        ],
        "Unit Testing, Iteration 1": [
          "Iteration 1"
        ],
        "Unit testing, iteration 2": [
          "Unit Testing, Iteration 2"
        ],
        "Wrapping up": [
          "Dos and Don'ts for writing unit tests"
        ]
      },
      "requirements": [
        "Some Java programming experience. Understand the basic of creating and assigning variables, using logic comparisons, and are able to create simple class objects.",
        "Able to use the Eclipse Integrated Development Environment (free to install and use!).",
        "Able to create simple methods in Java - understanding of flow control (if-else, while, for, foreach) and assignment of values to variables."
      ],
      "description": "Through the use of hands-on work, you will learn how to create and work with unit tests in Java using the Eclipse integrated development environment. Get professional tips on creating, debugging, and improving your tests in a practical way.\nThe introduction uses a two iteration cycle to create unit tests that address the product code as it is being developed, giving you the basis for not only creating and improving your unit testing ability, but also pointing the way towards exercising these new concepts in BDD (Business/Behavior Driven Development) or TDD (Test Driven Development).\nWe do more than just talk about how to do this, we provide step-by-step labs detailing how to create your automation and how to improve it as we progress.\nFor this course, starter code projects are supplied, as well as finished projects you can adapt to fit your needs, or use for reference for further projects.\nThis course is designed this to help those who want to expand their capabilities in creating software test automation.\nWhether you are a student, a manual tester, or are already a software test professional, this course can help you become more effective in your role.\nStart your journey towards effective unit testing today!",
      "target_audience": [
        "Java developers new to the idea of unit testing",
        "Test professionals looking to expand their abilities into creating test automation.",
        "Test professionals who want to make their existing test automation more useful."
      ]
    },
    {
      "title": "طريقك للنجاح في ISTQB Foundation Level V4.0",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ar/",
      "bio": "كل ما تحتاجه للنجاح في شهادة ISTQB FL في مصدر واحد",
      "objectives": [
        "ISTQB Foundation Level Certificate",
        "Seven Testing Principles",
        "Test Levels",
        "Test Types",
        "Static Testing",
        "Review Process",
        "Black-box Test Techniques",
        "White-box Test Techniques"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of the Software Industry",
        "English Reading Skills",
        "Computer Using Skills"
      ],
      "description": "هذه الدورة مصممة لتأهيلك للنجاح في امتحان ISTQB Foundation Level وفهم كل المواضيع المعروضة في المنهج.\n\n\nما يميز هذه الدورة هو أن الشرح من المنهج الرسمي بالتفصيل وليس من أي مصدر آخر لذلك تستطيع أن تطمئن إلى أن أي موضوع قد يتم طرحه في الإمتحان قد تمت تغطيته في هذه الدو رة.\n\n\nأيضًا في كثير من المحاضرات لا أكتفي بذكر المعلومة من المنهج فقط بل أيضًا أعطيك مثال عليها من أكثر من مصدر حتى تستطيع فهم المعلومة بشكل أفضل.\n\n\n\n\nهذه بعض المراجعات من الطلبة الذين حضروا معي شرح الشهادة من قبل وساعدتهم في النجاح في الامتحان\n\"Took the exam last Saturday and passed. There are many concepts that were explained here which is not in the syllabus. The examples given helped me understand the concepts better.\"\nJoanne Rufino\n\n\n\"Thank you sir for providing this wonderful course your teaching techniques are good.i got cleared ISTQB exam\"\nsurya walke\n\n\"This my first time in a testing career and I came from a field is no longer relate to the software at all but really I am very interested in this course and knowing many pieces of information not only in an academic way but also in real professional life. The instructor is really amazing and the course is very organized\"\nAhmed Abdel Aziz\n\n\"This is not my first course of this instructor. I purchased this too, because he explains well, with examples and helps me to prepare for the ISTQB exam. Also, he has some ISTQB exams, very well made and very helpful. Thank you. Well...I attempted the ISTQB Foundation level, yesterday, on January 15. I PASSED!!! You explained very good the exercises and questions and I made all of them at the exam. Thank you very much. All the best and good luck.\"\nElena Herghelegiu\n\n\"Thank you very much Eng. Tarek for this course i planned to take the exam for ISTQB FL on 30th of September, 2020\nupdate :-I got my Certification on 4th of October,2020\"\nMohamed Seoudy\n\n\n\"As a Mexican (non native English speaker) I totally understood Tarek's accent. All the concepts were easily understandable with the help of his examples. I would totally take another course with him. Thanks, Tarek!\"\nJessica Malfavon\n\n\"Yes, being an interested fresher in this domain where certification is the key to unlock many doors, this detailed session[s] is helping me build a strong base.\"\nYogesh Pai\n\n\"Excellent Explanation and it is very detailed to deliver the information in a perfect way. Thanks alot Eng tarek roshdy\"\nNour Eldeen Mohamed Moustafa\n\n\"This course is so useful and important for any one want to begin in this field(software testing) and the instructor make effort to explain every information. I really recommended it for the beginners\"\nAsmaa abd El-naser Mostafa\n\n\"The course is based on the Certified Tester Foundation Level Syllabus 2018. It follows exactly what's written in the Syllabus. Going through Tarek's videos instead of reading directly from the Syllabus makes it easier to learn. Everything is explained properly. Particularly for myself as I'm not from an English speaking background. There are also questions to check your understanding of the syllabus. Overall, this course is great.\nEdit January 2021: I passed with success the ISTQB CTFL in December 2020. Thanks for the great work Tarek!\"\nRonan Gueguen",
      "target_audience": [
        "Software Testers",
        "Business Analysts",
        "Software Engineers"
      ]
    },
    {
      "title": "Appium Ultimate Practice: 5 Tests for Mastery [NEW]-600+ Q&A",
      "url": "https://www.udemy.com/course/appium-ultimate-practice-5-tests-for-mastery-new-600-qa/",
      "bio": "Master Appium Concepts : 5 Quality Practice test with Conceptual and Scenario Questions with Answers-NEW",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Unlock the power of mobile test automation with \"Appium Ultimate Practice: 5 Tests for Mastery [NEW] - 600+ Q&A.\" This comprehensive course is designed to help you master Appium concepts through five high-quality practice tests and detailed explanations of over 600 conceptual and scenario-based questions. Whether you're a beginner or an experienced tester, this course equips you with the knowledge and skills to excel in mobile automation testing and Appium-based interviews.\nWhat You'll Learn:\nIntroduction to Appium:\nDiscover the fundamentals of Appium, its architecture, and supported platforms (Android, iOS, Windows).\nLearn how Appium differs from other mobile testing frameworks and explore its ecosystem, including Appium Desktop and Inspector.\nAppium Setup and Installation:\nMaster the step-by-step setup for Android and iOS, including configuring tools like Node.js, Android SDK, and Xcode.\nGet hands-on with emulators, real devices, and Appium Inspector for effective test preparation.\nCapabilities in Appium:\nUnderstand and configure desired capabilities for both Android and iOS.\nExplore advanced capabilities for debugging, performance profiling, and session management.\nLocating Elements in Appium:\nLearn locator strategies such as id, class name, XPath, and platform-specific locators.\nHandle complex locators like scroll views, nested elements, and dynamic elements efficiently.\nMobile Gestures and Actions:\nAutomate touch actions like swipes, taps, and drag-and-drop gestures.\nWork with platform-specific gestures and advanced interactions using \"mobile:\" commands.\nAutomation of Native, Web, and Hybrid Apps:\nGain expertise in automating native, web, and hybrid applications.\nMaster context switching and WebView interactions for hybrid apps.\nAppium Test Scripting Basics:\nWrite and execute basic Appium test scripts using popular client libraries (Java, Python, JavaScript).\nImplement assertions, validations, and automate basic scenarios like login and form submissions.\nAdvanced Test Scripting Techniques:\nLearn synchronization, data-driven testing, and error handling for complex workflows.\nDevelop robust scripts to handle multi-step user interactions and UI changes.\nAppium Integration with CI/CD:\nSeamlessly integrate Appium with CI/CD tools like Jenkins, GitLab CI, and CircleCI.\nRun tests on cloud device farms (BrowserStack, Sauce Labs) and generate comprehensive test reports.\nAppium Best Practices:\nWrite maintainable, modular test scripts using Page Object Model (POM).\nAvoid common anti-patterns and optimize test performance for better efficiency.\nTroubleshooting and Debugging in Appium:\nAddress common Appium errors and debug issues with detailed log analysis.\nResolve platform-specific compatibility challenges on Android and iOS.\nAdvanced Topics and Appium Add-ons:\nExplore Appium plugins, parallel testing, and integrations with frameworks like TestNG, JUnit, and Cucumber.\nStay updated on the latest Appium features and trends in mobile automation testing.\nWhy This Course?\nPractice-Based Learning: Includes 5 practice tests to assess and solidify your understanding of key Appium concepts.\nReal-World Scenarios: Tackle questions modeled after real-world challenges in mobile test automation.\nComprehensive Coverage: Covers everything from basics to advanced Appium topics, making it ideal for all experience levels.\nJoin this course today and take a confident step toward mastering Appium and excelling in mobile automation testing!",
      "target_audience": [
        "QA engineers and software testers looking to enhance their mobile automation skills with Appium.",
        "Developers aiming to master mobile app testing for native, web, and hybrid applications.",
        "Test automation enthusiasts preparing for Appium-related interviews or certifications.",
        "Appium Interview Apsirants"
      ]
    },
    {
      "title": "Gatling Framework basics -Performance testing in nutshell!",
      "url": "https://www.udemy.com/course/gatling-basics-performance-tests/",
      "bio": "Gatling - Performance, Stress, and Load testing in nutshell - Basic level",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic software testing skills and proficient computer skills",
        "Basic knowledge of any programming language"
      ],
      "description": "The course covers the basics of getting started with the Gatling Framework tool, in addition to the basics of Gatling as tools, you will learn the basics and metrics and the most important issues related to performance testing. Gatling is a very versatile and gaining popularity modern performance test tool. It includes both Open Source and Enterprise versions. However, in the course, we will focus fully on the free version. You will learn how Gatlin works and how it is used on the popular \"Computer Database\" application provided by Gatling for the purpose of training performance tests. Step by year I will show you how to apply Gatling to your project using both Recorder and scripts.\n\n\nBelow you will find answers to the most frequently asked questions about the course:\n\n\nWho is this course for?\n\n\n✔ Aimed at the IT industry for testers, programmers, regardless of seniority - you will learn or \"refresh\" knowledge of Gatling Framework and basic of performance testing\n\n\n✔ For people interested in expanding their skills in the broadly understood software engineering industry\n\n\n✔ For people who want to learn from scratch the Gatling tool in order to perform performance, stress/load tests\n\n\n✔ Mostly dedicated to Software developers in Tests, QA, Testers, etc.\n\n\nWhat will you learn in this course?\n\n\n✔ Gatling basics from simple examples to advanced topics\n\n\n✔ You will organize your knowledge of the Gatling tool and learn to analyze the results\n\n\n✔ It will be very useful if you need to run performance, stress, load tests\n\n\n✔ Covers a practical approach to performance, stress, and load testing\n\n\n✔ The course covers the minimum of test knowledge necessary to start the adventure with performance, load, and stress testing\n\n\nWhy Learn Gatling?\n\n\n✔ Founded in 2012 (Officially on market from 2015)\n\n\n✔ Open Source\n\n\n✔ Created based on programming languages like Scala, Akka, and Netty\n\n\n✔ Run most of the protocols\n\n\n✔ Gatling is constantly updated and has the most efficient engine\nfrom the open-source tools -> GitHub - gatling/gatling\n\n\n✔ Dedicated Documentation for language: Java, Kotlin, and Scala\n\n\nWhen to use Gatling?\n\n\n✔ When you need a great tool for Performance, Stress, Load Test\n\n\n✔ Simulate XXX's of users on a single instance\n\n\n✔ Need tool in CI / CD environment or pipeline\n\n\n✔ Write more detailed, controlled, and clean tests (Scala lang)\n\n✔ When you need a fast solution (web recorder) and clear and nice looks reports - Gatling includes a web recorder and colorful reports\n\n\n✔ Improving your skills in testing",
      "target_audience": [
        "Aimed at the IT industry for testers, programmers, regardless of seniority - you will learn or \"refresh\" knowledge of Gatling Framework and basic of performance testing",
        "For people interested in expanding their skills in the broadly understood software engineering industry",
        "For people who want to learn from scratch the Gatling tool in order to perform performance, stress/load tests",
        "Mostly dedicated to Software developers in Tests, QA, Testers, etc."
      ]
    },
    {
      "title": "Testes unitários em JAVA: Domine JUnit 4, Mockito e TDD",
      "url": "https://www.udemy.com/course/testes-unitarios-em-java/",
      "bio": "Conheça boas práticas e aprenda a utilizar as principais ferramentas do mercado, criando os testes desde o início.",
      "objectives": [
        "Criar uma bateria de testes unitários do ZERO.",
        "Criar um projeto e evoluí-lo com a segurança de uma bateria de testes unitários de regressão",
        "Isolar o método de teste de dependências externas, podendo definir seu comportamento e validar as interações realizadas",
        "Aplicar o básico de TDD",
        "Obter métricas de qualidade a partir dos testes (Percentual de aceitação e cobertura de código)",
        "Criar builders de objetos para centralizar a criação de entidades",
        "Adicionar testes unitários em projetos legados, sem a necessidade de refatoração (Caso não seja possível)",
        "Que um código legível é melhor que um código documentado"
      ],
      "course_content": {},
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA"
      ],
      "description": "Seja bem vindo ao curso de testes unitários em JAVA usando JUnit 4.\nNesse curso, irei te guiar passo a passo na criação de testes unitários. Não se preocupe, caso ainda seja um conceito novo para você, criaremos os testes desde o início, inclusive, em alguns momentos, não utilizaremos ferramentas alguma, para que os fundamentos sejam melhor assimilados.\nO curso é 100% prático, onde trarei problemas, situações e os erros mais comuns que ocorrem no dia-a-dia, assim poderemos discutir sobre formas de como atuar em cada caso, tentando levantar os prós e contras de cada estratégia disponível.\n\nO código de teste é tão importante quanto o código da aplicação, dessa forma, além das ferramentas e boas práticas, serão apresentadas técnicas que você pode utilizar para deixar o seu código mais enxuto e legível. Um código legível vale mais que um código documentado.\nUtilizaremos diversas ferramentas como o JUnit, Mockito, PowerMock, EclEmma (JACOCO) e o Eclipse como IDE de desenvolvimento. Também apresentarei DataBuilders com conceitos de Fluent Interface e ObjectMother para facilitar as criações das entidades nos cenários, inclusive, disponibilizarei uma ferramenta própria que irá automatizar grande parte dessa tarefa de criação. O TDD (Test Driven Development) é uma técnica que funciona muito bem no escopo desse curso, porque não aplicá-la também?\nJUnit é uma ferramenta muito poderosa, ela pode ser a base não só para testes unitários. Você poderá utilizá-la em testes de integração e funcionais também.\nMaterial validado ao longo de 6 anos de aulas presenciais em empresas e turmas de especialização.\nAo final desse curso, você terá uma boa base para desenvolver suas aplicações com segurança, sempre com uma bateria de testes de regressão atrelada.",
      "target_audience": [
        "Desenvolvedores JAVA que nunca tiveram contato com Testes Unitários",
        "Desenvolvedores com experiência em testes podem rever alguns conceitos e discutir sobre boas práticas que serão apresentadas",
        "Desenvolvedores que prezam pela qualidade e legibilidade dos códigos",
        "Desenvolvedores que já estão cansados de parar o desenvolvimento de novas funcionalidades para corrigir algo que estava funcionando no passado."
      ]
    },
    {
      "title": "PythonによるWebスクレイピング〜入門編〜【業務効率化への第一歩】",
      "url": "https://www.udemy.com/course/python-scraping-beginner/",
      "bio": "Seleniumを用いて、自動ログイン、テキストの抽出、画像データの収集を行ってみよう。データの収集方法を学ぶことで、定期的なデータ収集を効率良く行うことができます。",
      "objectives": [
        "seleniumを用いてテキスト情報を抽出することができるようになります。",
        "seleniumを用いて自動でログインすることができるようになります。",
        "Webページからテキスト情報を取得することができるようになります。",
        "Pillowを用いてPythonで画像を扱うことができるようになります。",
        "ランキング形式のサイトからまとめて情報を収集することができるようになります。",
        "Pandasを用いてデータを整理し、CSVへの掃き出しをできるようになります。"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "Webスクレイピングとは"
        ],
        "環境構築": [
          "今回使用するサイトについて",
          "Seleniumのインストールと準備"
        ],
        "自動でログインしよう": [
          "自動でログイン",
          "演習：パスワードを入力せよ"
        ],
        "テキストデータを自動抽出": [
          "テキストデータの取得",
          "演習：各項目の抽出",
          "テキストデータを一括取得",
          "演習：値の抽出",
          "CSVファイルに出力"
        ],
        "ランキングサイトからまとめて情報収集": [
          "１つの観光地の情報を取得",
          "演習：総合評価の取得",
          "すべての観光地の情報を取得",
          "演習：総合評価と各項目をまとめて取得",
          "全ページの情報を取得"
        ],
        "画像の収集": [
          "Pillowの使い方",
          "１枚の画像を取得",
          "すべての画像を取得"
        ],
        "おまけ": [
          "Xpathとは",
          "Yahoo!路線情報で検索"
        ],
        "終わりに": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Pythonの基本的な文法が理解できる方",
        "HTML, CSSのことが理解できている方",
        "本コースは、macOSを使用して進めていきますが、Windowsでも同様に進めることができます。",
        "Mac, Windowsの両方の環境構築手順を紹介しています。"
      ],
      "description": "受講生8,000人を超えるキカガク講師によるPythonによるWebスクレイピング入門が登場。\nPythonによるWebスクレイピングの実装方法を学び、定期的なデータの収集を効率化しましょう。\nWebスクレイピングとは、定期的な情報収集、大量の情報収集であれば、数行のコードを書くだけで自動で行ってくれる便利テクニックです。\nこのWebスクレイピング技術を用いることで、業務の効率化への第一歩を踏み出していきましょう。\n\n【コース概要】\n以下、本コースで扱う大枠の内容となっております。\nWebページに自動でログイン\nテキストデータを取得\nランキング形式のサイトから一括で情報を取得\n画像データを取得\nまとめた情報をCSVファイルに出力\n検索サイトのクエリを把握\n本講座では、講師自作のWebページを用いてWebスクレイピングを行います。\n画像処理ライブラリであるPillowやスクレイピング・クローリングライブラリであるSeleniumの導入についても解説します。\n\n【注意】\n本講座はWebスクレイピング初学者向けであり、Webスクレイピングの基礎をしっかりと身につけていただきたいので高度な内容は抑えております。\nしっかりとカリキュラムをご覧になった上でご受講ください。\nHTML, CSSの基礎的な知識がある前提で講座を進めております。\n理解できていない方はprogateで勉強してから受講してください。\nPythonの基本的な文法、Jupyter Notebookの使い方がわかる前提で講座を進めております。\n理解できていない方は以下2つの動画（Udemy）で勉強してから受講してください。\n【キカガク流】人工知能・機械学習 脱ブラックボックス講座 - 初級編 -\n【キカガク流】プログラミング力向上のためのPythonで学ぶアルゴリズム論（前編）",
      "target_audience": [
        "自動でWebから情報を取得するのに興味がある方",
        "機械学習等で使用するデータをWebから取得したい方",
        "業務効率化のためにWebスクレイピングを学びたい方"
      ]
    },
    {
      "title": "Quality Assurance Road Map -Manual Software Testing 2025",
      "url": "https://www.udemy.com/course/quality-assurance-mastery-road-map-manual-software-testing/",
      "bio": "Become Quality Assurance Engineer as a Complete Beginner. QA Masterclass for Junior QA Engineers.",
      "objectives": [
        "Become Quality Assurance Engineer as a Complete Beginner. QA Masterclass for Junior QA Engineers.",
        "Foundations of Quality Assurance",
        "Quality Assurance guidance for starting your first IT job",
        "How to write test cases",
        "Manual Testing Basics",
        "How to find bugs"
      ],
      "course_content": {},
      "requirements": [
        "you don't need any experience to start with this course. Everything will be explained for complete beginners."
      ],
      "description": "Manual Software Testing Guide to Web Application Testing for Beginners from scratch. Quality Assurance is a must need in today s era of technology. Meeting the expected quality of an application has become an essential factor for organizations. This is where software development and software testing concepts come into play. Organizations need to follow certain quality assurance standards in order to survive in the market competition. It is must required to understand software development life cycle before executing software testing concepts. We often ignore software testing fundamentals and manual testing concepts which is hugely harmful. IT professionals can never reach the expected level of success without a strong foundation in software development and software testing concepts. Also, it has not been easy to find project oriented and real-time training in software testing fundamentals. However, we all need to learn the basics of quality assurance and testing before jumping into any sort of automation. In this course, we took a hands-on and step by step approach to make it easier for IT professionals to master software testing core concepts. This course includes basic and advanced QA training videos with practical examples of different aspects of testing including software development life cycle (SDLC), overview of specific roles and real-time work environment for a software tester, different types of testing, creating comprehensive test plans, and test cases.",
      "target_audience": [
        "Anyone who wants to earn big Money without any technical knowledge."
      ]
    },
    {
      "title": "XPATH and CSS locators + bonus: using ChatGPT for locators",
      "url": "https://www.udemy.com/course/xpath-and-css-locators-for-test-automation-tools/",
      "bio": "This course will help you to find XPATH and CSS locators with dev tools, use chatGPT to find, fix and optimize locators",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Locators and their types": [
          "What are the locators and why do we need them ?",
          "What are the locators and why do we need them ?",
          "How to find locators",
          "How can you find locators in Chrome DevTools?",
          "Practice",
          "Terminology. DOM",
          "Dom and terminology",
          "Absolute path",
          "Relative path and task",
          "Absolute and relative xpath",
          "PDF version"
        ],
        "XPATH basics, operators": [
          "XPATH agenda and intro",
          "Search by attribute",
          "Arrays",
          "Attributes, contain and practice",
          "Search by text",
          "Search by text + arrays",
          "Attribute starts-with. Practice",
          "Answer for practice task",
          "Using text() and starts-with",
          "Logical operators: AND",
          "Logical operators: OR",
          "XPATH axes",
          "Axes: following::",
          "Axes: following:: part 2",
          "Axes: preceding::",
          "Axes: ancestor::",
          "Axes: child::",
          "Axes: following-sibling",
          "Axes: parent::",
          "Axes: self::",
          "Axes: descendant::",
          "Practice on XPATH axes",
          "Other helpful functions and practice",
          "PDF version"
        ],
        "CSS locators": [
          "CSS locators, search by name and attribute",
          "Search by attribute value",
          "Search by class and ID",
          "Selecting multiple elements",
          "Search child elements",
          "Search for next and proceeding elements",
          "Search by part of an attribute",
          "Search by starts with / ends with",
          "Search by first child and last child",
          "Search nth-child",
          "Search by first and last of type",
          "Search by nth of type, type vs child",
          "Bonus: DevTools additional features",
          "PDF version"
        ],
        "Bonus: Using ChatGPT for locators": [
          "Using ChatGPT for locators generation and optimization",
          "How ChatGPT can fix the locators and suggest the best one ?",
          "ChatGPT and autocomplete"
        ]
      },
      "requirements": [
        "There are no specific requirements, knowledge about locators can be used with different tools"
      ],
      "description": "About me\nMy name is Ostap I have more than 12 years of experience in test automation. I have prepared a short but well-structured and informative course about XPATH, and CSS locators. It will be helpful for beginner and developing test automation engineers who want to use stable and optimal locators for their tests. If you work with web or mobile applications - you know that finding a good and stable locator can cost you a lot of time and effort and even that does not guarantee that the locator will work after some changes in DOM. This course will help you to understand and get some experience working with locators.\n\n\nYou will find answers to the following questions:\n- what is a locator?\n- why do we need locators?\n- what is the difference between XPATH and CSS?\n- how to find and verify locators?\n- how to use Dev Tools?\n- how to use Dev Tools console to find XPATH and css locators?\n- how to use the features and functions of XPATH?\n- how to build locators using XPATH, CSS and other types of locators?\n- how to find and optimize locators for complex elements\n- how to search elements by text, partial text\n- how to search using logical operators?\n- how to search elements by children, ancestors, what is XPATH axis?\n- why the relative path is better than the absolute?",
      "target_audience": [
        "Beginner, Intermediate QA engineers who would like to test Web applications, understand structure of the XML/HTML documents and improve their skills in mastering XPATH and CSS locators",
        "Everybody who uses XPATH/CSS locators in auto tests and code"
      ]
    },
    {
      "title": "Getting Started with BlazeMeter",
      "url": "https://www.udemy.com/course/getting-started-with-blazemeter/",
      "bio": "Leverage open source tools like JMeter and more to run tests against web & mobile apps and APIs.",
      "objectives": [],
      "course_content": {
        "Introducing BlazeMeter": [
          "BlazeMeter Overview",
          "BlazeMeter Account Sign Up",
          "We Know Why You Are Here",
          "BlazeMeter Solution Architecture",
          "Lab Exercise and Demonstration: Creating Your First Project in BlazeMeter",
          "Relationship Between BlazeMeter and Apache JMeter™"
        ],
        "Working with Tests and Reports in BlazeMeter": [
          "Working with tests in BlazeMeter",
          "Working with reports in BlazeMeter",
          "Create a URL/API Test",
          "Create a Multi test"
        ],
        "Debugging and Calibrating Tests in BlazeMeter": [
          "Debugging Tests in BlazeMeter",
          "Calibrating Tests in BlazeMeter"
        ],
        "Advanced Features in BlazeMeter": [
          "Advanced Features in BlazeMeter"
        ],
        "Plugins and Integrations in CA Blazemeter": [
          "Overview of CI, CD and APM integrations in BlazeMeter",
          "BlazeMeter's Integration with CA APM",
          "Using APIs in BlazeMeter",
          "Create, Update, and Run JMeter Test via APIs",
          "Use BlazeMeter Chrome Browser Extension",
          "BlazeMeter - Jenkins Integration Setup"
        ],
        "Diving Into Apache JMeter": [
          "Overview of Apache JMeter",
          "Downloading and Installing Apache JMeter™",
          "Key Building Blocks of Apache JMeter™",
          "Working with Thread Groups",
          "Working with Logic Controllers",
          "Working with Configuration Elements",
          "Working with Timers",
          "Working with Samplers",
          "Working with Post Processors",
          "Working with Assertions",
          "Apache JMeter: Scoping Rules and Execution Order",
          "Adding Listeners in Apache Jmeter",
          "Lab Exercise and Demonstration: Apache JMeter™- Basic Scenario",
          "Lab Exercise and Demonstration: Utilizing Assertions in Apache JMeter™",
          "Lab Exercise and Demonstration: Lab Exercise and Demonstration:",
          "Overview of JMeter Functions",
          "Lab Exercise and Demonstration: Configuring Functions in Apache JMeter™",
          "Lab Exercise and Demonstration: Configuring Complex Scripts for Apache JMeter™"
        ]
      },
      "requirements": [
        "Just a working computer. Some background knowledge of performance testing objectives is a plus."
      ],
      "description": "This course contains all the information you need to know about getting started with BlazeMeter and Apache JMeter™. You will learn the basics of these products and quickly start developing and running your own tests. You will also see some key videos and have an opportunity to perform some hands-on lab exercises.",
      "target_audience": [
        "Performance Engineers, Developers, QA Automation Engineers, DevOps, and anyone responsible for running performance tests on a website or application."
      ]
    },
    {
      "title": "Selenium Starter program",
      "url": "https://www.udemy.com/course/selenium-starter-program/",
      "bio": "Helps you in your certification and automation journey",
      "objectives": [
        "Start practicing Selenium on their own and get started on the Selenium Certification journey",
        "Learn Java Basics, Selenium IDE, Selenium WebDriver, Junit and Automation Frameworks with detailed example of Keyword Driven Framework"
      ],
      "course_content": {},
      "requirements": [
        "Firefox, Selenium IDE, JDK, Eclipse IDE"
      ],
      "description": "Are you a manual tester and looking to explore the Automation world?\nDo you get butterflies in your stomach when you think of coding in Automation?\nThen this is the ideal course for you!!!\nThe Selenium starter program starts with introduction to Test Automation and provides basic knowledge on Selenium tools suite – Selenium IDE, Selenium RC, Selenium GRID and Selenium WebDriver. The course then progresses with Selenium IDE detailed knowledge and hands on exercise on Selenium IDE. This helps a manual tester to get started with automation using the record and play mode.\nThe next section covers the essential Java Basics commands which are needed for getting started with Selenium WebDriver. The course starts with step by step configuration of Java and Eclipse IDE with adequate screenshots. The course then goes ahead with simple explanation of all the essential Java commands with examples in Eclipse IDE.\nThe last section covers WebDriver commands needed to get started with Selenium WebDriver automation. It also covers two exercises which covers how the WebDriver commands has been used to automate a particular task\nThe Selenium starter program is an affordable program and is meant for all who want to get into Test Automation. This program is easy to pick up and doesn’t need prior Java experience.\nThis program covers Java basics to help non-programming aware testers to pick and practice Automation.\nCheck out the free previews to understand more what this course has to offer\nAfter completing these course testers can start practicing Selenium on their own and start building Automation scripts. This course also helps to get started on the Selenium certification journey.",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation"
      ]
    },
    {
      "title": "2時間で学ぶ！非機能テスト入門講座～性能やユーザビリティなどシステムの非機能を考える～",
      "url": "https://www.udemy.com/course/shift-nonfunctionaltest/",
      "bio": "性能、ユーザビリティ、セキュリティなどのテストする「非機能テスト」。本講座では、非機能とは「何か」から学習し、どのように非機能テストが行われているのか、どのような所に注意しなければならないのかを学習します。",
      "objectives": [
        "非機能と機能の違いを確認する",
        "ISO25010の品質モデルに従った非機能の分類を学ぶ",
        "非機能にどんな品質副特性があるかを学ぶ",
        "非機能を確認するためのテストの方法を学ぶ",
        "性能テストを行う目的を学ぶ",
        "性能テストを行う手順を学ぶ",
        "アクセシビリティの意味とテスト例を学ぶ",
        "ユーザエクスペリエンスの意味とテスト例を学ぶ",
        "ユーザビリティテストの具体的な事例を学ぶ",
        "ユーザビリティを向上させるポイントを学ぶ",
        "非機能要件の課題を確認する",
        "非機能テストの合格基準の作成例を知る"
      ],
      "course_content": {
        "はじめに": [
          "このコースのご紹介",
          "コースの内容",
          "講師あいさつ"
        ],
        "非機能とは": [
          "このセクションの概要",
          "非機能とは",
          "非機能の例",
          "非機能と品質特性",
          "品質特性解説（機能適合性・性能効率性・互換性）",
          "品質特性解説（使用性・信頼性）",
          "品質特性解説（セキュリティ・保守性・移植性）",
          "非機能の問題",
          "システムの非機能の例",
          "このセクションのまとめ"
        ],
        "非機能テストの実施方法": [
          "このセクションの概要",
          "非機能テストとは",
          "非機能テスト解説（性能効率性・互換性・使用性）",
          "非機能テスト解説（使用性・信頼性）",
          "非機能テスト解説（セキュリティ・その他）",
          "このセクションのまとめ"
        ],
        "非機能テストのアプローチ（性能効率性）": [
          "このセクションの概要",
          "性能効率性テストの考え方",
          "性能効率性の招くトラブル",
          "性能効率性のテスト",
          "性能効率性のテストを行う理由",
          "負荷テストとツール",
          "負荷テストの進め方",
          "負荷テストの応用",
          "このセクションのまとめ"
        ],
        "非機能テストのアプローチ（使用性）": [
          "このセクションの概要",
          "ユーザビリティの定義",
          "アクセシビリティとユーザエクスペリエンス",
          "ユーザビリティテストの準備",
          "定性的テスト",
          "定量的テスト",
          "ユーザビリティ改善のポイント",
          "このセクションのまとめ"
        ],
        "非機能テストの合格基準の設定": [
          "このセクションの概要",
          "非機能テストの合格基準",
          "合格基準の例（性能効率性・互換性）",
          "合格基準の例（使用性・信頼性）",
          "合格基準の例（セキュリティ・他）",
          "非機能要件とは",
          "非機能要件の課題",
          "非機能要件設定のガイドライン",
          "合格基準の設定での注意点",
          "確認ポイント①",
          "確認ポイント②",
          "合格基準の設定例",
          "このセクションのまとめ"
        ],
        "理解度確認テスト": [
          "理解度確認テストにあたって",
          "理解度確認テスト",
          "理解度確認テストのまとめ"
        ],
        "おわりに": [
          "全体まとめ",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "システム開発のご経験が無くても受講はできますが、システムの性能や使用性の課題を考えた経験があると理解が進みます。"
      ],
      "description": "ソフトウェアテスト専門会社のプロがノウハウを伝授する実践的講座第３弾！\n\n\nシステムの品質は、「機能」と「非機能」から成り立っていますが、「非機能」は「機能」に比べるとおろそかになりがちで、運用初日にトラブルを起こしてニュースになる例が後を絶ちません。\nシステムの「トータル品質」を向上させるために、非機能を正しく理解し、正しく要件を定め、正しくテストを行うことは、エンジニアには必須のスキルです。\n本講座では、非機能の初心者にも理解しやすいように、非機能と非機能テストを広く整理したうえで、特に注目されやすい性能とユーザビリティについてはテスト方法のポイントを解説しています。非機能についてまだよく知らないという方、今非機能に関わろうとしている方、非機能テストをやっているけれども効果がでていないという方、そんな方々にお勧めです。\n\n【演習付き】\n講義ビデオは1時間半ですが、演習があります。ぜひチャレンジください。\n\n\n■ 2024/3/22 更新\nこの度、一部レクチャーの音声改善のため、動画の更新を実施することになりました。\n更新期間は 2024/3/27（水）～2024/3/29（金）の予定です。\n受講中の場合、更新されたレクチャーは未修扱いとなりますのでご注意ください。\nみなさまにはご不便をおかけし大変申し訳ありませんが、何卒よろしくお願い申しあげます。\n\n\n■2024/3/28 更新\n動画更新作業が完了いたしました。みなさまにはご不便をおかけし申し訳ありませんでした。\n今後ともよろしくお願いいたします。\n\n\n■2024/6/7 更新\nこの度、一部レクチャーの内容改善のため、動画の更新を実施することになりました。\n更新期間は 2024/6/14（金）～2024/6/19（水）の予定です。\n受講中の場合、更新されたレクチャーは未修扱いとなりますのでご注意ください。\nみなさまにはご不便をおかけし大変申し訳ありませんが、何卒よろしくお願い申しあげます。\n\n\n■2024/6/17 更新\n動画更新作業が完了いたしました。みなさまにはご不便をおかけし申し訳ありませんでした。\n今後ともよろしくお願いいたします。",
      "target_audience": [
        "非機能の要件設定や、そのテスト方法、合格基準設定などの概念を理解したい方",
        "非機能を網羅的に学びたい方",
        "性能テストの方法をいろいろ知りたい方",
        "ユーザビリティテストの方法をいろいろ知りたい方"
      ]
    },
    {
      "title": "Playwright Automation Testing from Scratch 0 to Hero 2025",
      "url": "https://www.udemy.com/course/microsoft-playwright-web-automation-testing/",
      "bio": "Learn everything you need from Basics to Advanced to get started with Microsoft Playwright Test using Java Script",
      "objectives": [
        "How to install Playwright from scratch as a new independent project or add to an existing front-end application project.",
        "How to run tests using the command line interface, UI mode, Playwright extension, and debug tests How to organize tests, structure tests, use test hooks",
        "Different types of assertions, how auto-waiting concept works, and how to configure different timeouts.",
        "ow to work with different UI components, such as input fields, radio buttons, checkboxes, lists, tooltips, dialog boxes, date pickers, web tables, iFrames, slid"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Microsoft Playwright Features",
          "Microsoft Playwright Features Part II",
          "Microsoft Playwright Advantages",
          "Microsoft Playwright Disadvantages",
          "Microsoft Playwright Tool Vs Other Functional Automation Tools"
        ],
        "Getting Started": [
          "Getting Started Practically",
          "How to Install Microsoft Playwright",
          "Microsoft Playwright Project Folder Structure",
          "How to Run your first Test case"
        ],
        "Playwright Async Await": [
          "What is Playwright Async Await? Real time example"
        ],
        "Module 3: Core Concepts & Implementation": [
          "Core Concepts Introduction",
          "Microsoft Playwright Core Actions",
          "How to Locate Elements on Web Applications",
          "Tips & Tricks How to Locate Elements",
          "How to Run Script in Specific Browser",
          "How to Locate Drop Down Values",
          "How to Pick Dates",
          "How to find Parent Locator",
          "How to find locators in table"
        ],
        "Record & Play Script": [
          "How to Record the Script",
          "How to Record the Script Part II",
          "How to apply Comments in Microsoft Playwright JS File"
        ],
        "What is Playwright Timeout ?": [
          "How to Implement TimeOut"
        ],
        "Authentication": [
          "What is Hooks ?",
          "Before Each Method Implementation",
          "After Each Method Implementation"
        ],
        "First Assignment": [
          "Login Screen Test Cases"
        ],
        "Tips & Tricks": [
          "Tips & Tricks",
          "Additional Tips",
          "How to reduce numbers of lines of codes",
          "Multiple Matches test",
          "Fill Vs Type Methods which one is best",
          "How to Write Assertions in Microsoft Playwright"
        ],
        "Page Object Model Implementation": [
          "What is POM",
          "How to Identify Login Page Objects",
          "Home Page Objects",
          "Feedback Page Objects",
          "Payment Objects",
          "Currency Objects"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is required. JavaScript Fundamentals section is included in the class.",
        "Ask me a question in Q&A section of the class or send me a message if something is not clear or does not work."
      ],
      "description": "This class covers all fundamental concepts of the framework. We begin from scratch, starting with setup and configuration and then a hands-on framework overview to familiarize yourself with the environment. Then from lesson to lesson, we slowly increase complexity. All lessons have a logical progression and are connected. The next lesson in the section builds up a new concept on top of what was learned in the previous lesson. This is also related to the code demonstrated in the class. We will have two test applications, and slowly over the course will add more and more code uncovering new topics.\n\n\nWatch all lessons in the order they have been published. Write the code from the class along with me. If needed, pause the video to complete the code. Practicing - is the best way to learn. Also, I would recommend watching the lessons in full-screen mode because sometimes the text on the screen can be small and hard to read. If you skip lessons or watch them not in order, be ready that you may have a feeling of a knowledge gap, or that something is not clear.\n\n\nWhat you will learn:\n\n\nHow to install Playwright from scratch as a new independent project or add to an existing front-end application project.\nJavaScript Fundamentals in case you are a beginner to programming.\nHow to run tests using the command line interface, UI mode, Playwright extension, and debug tests\nHow to organize tests, structure tests, use test hooks\nHTML terminology, locator syntax rules, and Playwright best practices to locate web elements.\nDifferent types of assertions, how auto-waiting concept works, and how to configure different timeouts.\nHow to work with different UI components, such as input fields, radio buttons, checkboxes, lists, tooltips, dialog boxes, date pickers, web tables, iFrames, sliders, drag and drop.\nWhat is the Page Object Model. How to organize test framework code with Page Objects. Recommended architecture for Page Object model with Playwright\nHow to work with APIs: API mocking, API requests, intercept API calls, shared storage state, API authentication\nMultiple advanced topics: fixtures, global setup and teardown, parallel execution, test tags, test retries, visual testing, mobile device emulation, reporters, environment variables, and test execution in Docker container.",
      "target_audience": [
        "Quality Engineers who willing to pick up a first test automation framework.",
        "SDETs and Automation Engineers who is transitioning from other frameworks to the Playwright.",
        "Developers who what quickly understand Playwright best practices and framework capabilities Playwright beginners to learn this tool faster"
      ]
    },
    {
      "title": "Automation Framework in one day | Playwright and ChatGPT",
      "url": "https://www.udemy.com/course/automated-testing-with-playwright-and-chatgpt-from-0-to-1/",
      "bio": "Understand how to leverage the power of CHATGPT with Canvas to create a fully functional Playwright testing framework",
      "objectives": [
        "Augment Playwright Test Scripts with AI",
        "Use Playwright MCP to leverage Copilots generation capabilities",
        "Understand what is AI and how it works",
        "Understand the basic types of automated tests",
        "Understand what is Playwright",
        "See a live demo on how to truly accelerate the creation of a framework with the help of ChatGPT",
        "Create a well architected framework for Playwright",
        "Have decoupled tech for automation framework",
        "Integrate the automation framework into CI/CD with Github Actions",
        "Learn to use Playwright agent mode with OPEN AI Codex Agent"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About your instructor",
          "Project and tools used in this Material",
          "5 Minute Test challenge",
          "What is Playwright"
        ],
        "Intro To test Automation": [
          "Benefits of Test Automation",
          "Types of Automates Tests",
          "Demo - Automated Tests : UNIT | API | UI",
          "Robust Automated Testing Framework",
          "What makes up AI",
          "Introduction to Natural Language Processing NLP",
          "Types of Machine Learning",
          "Importance of Training Data",
          "Transformer Architecture Model",
          "How to achieve repeatable and consistent GEN AI Outputs"
        ],
        "Setup Environment": [
          "See the application under Test - Blazedemo.com",
          "Github Repository",
          "Installing Node.JS",
          "Install VS Code",
          "Setting up the Prerequisites with GhatGPT",
          "Install Playwright and Demo Test"
        ],
        "Particularities of Playwright": [
          "Playwright VS other Tools",
          "VS Code Playwright Plugin and extension",
          "Implicit Wait and async wait for element visibility",
          "UI Inspector | Pick Locator",
          "Recorder Tool",
          "Emulation Capabilities",
          "Built-in Test Runner with Powerful Features",
          "Playwright Clock - Time Travel Functionality",
          "Integration with Testbeats Reporting Platform"
        ],
        "Crate A basic Automated Testing Framework with ChatGPT and Playwright": [
          "Deciding what is most important for Testing",
          "Completing the Test and generating first Draft Code with Mini o1 Model",
          "Debug manually code",
          "Code Debug with ChatGPT 01 and Canvas",
          "Adding Screenshots for the tests",
          "Configuration File and more Options",
          "Headless Execution and screenshot only on error",
          "Run Tests on multiple Browsers",
          "Playwright Workers: Executing Tests in Parallel"
        ],
        "Fine Tune the decouple the Framework": [
          "Split Scripts and build a Page object Model",
          "Fix the Page Object Model with Chat GPT",
          "Automatically Extend the PoM with AI",
          "Decoupling the Test Data from the script",
          "Using Alternate Selectors CSS | Xpath | IDs",
          "Implementing Selector Redundancy",
          "Decoupling the URL from the Script",
          "Creating Independent Test Data for each Script"
        ],
        "ZeroStep Package - Plain Human Language Playwright scripting": [
          "What is ZeroStep Package",
          "Installation and Usage of ZeroStep",
          "Example How to Use the ZeroStep for Playwright"
        ],
        "Using Open AI Codex to speed up code generation": [
          "Open AI Codex - Configure Codex for your environment",
          "Open AI Codex - Configure Codex for your environment",
          "Open AI Codex - Configure the Agents.md File",
          "Open AI Codex - Create a powerful Agent.md file - fix the previous one",
          "Open AI Codex - Use Codex to generate invalid test data",
          "Open AI Codex - Generate Test that use invalid test data to simulate failure"
        ],
        "AI Testing Agent with MCP and Playwright": [
          "Activate Github copilot",
          "Install MCP Server in Playwright",
          "Validate Playwright MCP Server Install",
          "Crate a new test case with VSCode and MCP"
        ],
        "Integration into a CI/CD Pipeline with Github Actions": [
          "Short intro to git and github",
          "Creating a github Actions file",
          "DEMO - Creating a simple job to run at any commit",
          "Creating the first job to run the Playwright tests",
          "Fixing the Permission and Headless execution",
          "Adding the Results to the Job",
          "Test Sharding - Run Tests on Multiple Machines"
        ]
      },
      "requirements": [
        "No programming",
        "basic testing know how",
        "basic AI and prompt engineering experience",
        "understanding of testing principels",
        "basic understanding of test automation"
      ],
      "description": "Welcome to \"Automated Testing with Playwright and ChatGPT\" your quick guide to learning the essentials of modern test automation and AI integration. Whether you're a beginner in test automation or an experienced developer looking to expand your skill set, this course will provide you with the tools and knowledge to effectively build and implement Playwright frameworks, along with integrating AI-driven automation and CI/CD processes.\nWhat You Will Learn:\nIntroduction to AI and Test Automation: Get familiar with the foundational concepts of AI and its role in automation.\nPlaywright Framework Basics: Learn how to use Playwright, a powerful automation tool for web testing, and explore its core features.\nPlaywright LIVE LAB Test Automation on Blazedemo: See a live demo on how to create a full E2E test case based on CHATGPT and playwright, step by step guide.\nPlaywright Comprehensive Test Runner: See capabilities such as headed, headless, parallel, distribute execution as well as emulation of devices and multiple bowsers\nFramework Creation with Playwright: Understand how to design and implement a structured Playwright well architected  framework\nAI Integration in Automation: Discover how to incorporate AI models, like ChatGPT, to enhance your test automation strategies.\nCI/CD Pipeline Integration: Learn how to seamlessly integrate your Playwright framework into Continuous Integration and Continuous Deployment pipelines for faster and more reliable testing cycles. Github is the tool of choice.\nHands-on Projects: Build and run test scripts, implement AI-driven test scenarios, and deploy automation in real-world cases.\nLearn how to use Open AI Codex1 to accelerate code creation\nPlaywright MCP and Copilot: USE AI Playwright Agents to generate tests that are ready to run, and if not, use agents to fix your code.\nWho This Course Is For:\nThis course is ideal for software testers, developers, and AI enthusiasts who want to master the Playwright test framework while learning the fundamentals of AI-based automation. If you’re aiming to elevate your automation skills, integrate AI into your workflows, or understand how to efficiently build a CI/CD pipeline, this course is perfect for you.\nCourse Features:\nEngaging video lectures\nHands-on coding exercises and projects\nInteractive quizzes and assessments\nA supportive community forum for peer learning and collaboration\nLifetime access to all course materials\nEnroll now and begin your journey toward mastering Playwright framework automation and AI integration today!",
      "target_audience": [
        "Test Automation Engineers",
        "Quality Engineers",
        "Software Developers",
        "Citizen Developers",
        "Project Managers",
        "Manual testers"
      ]
    },
    {
      "title": "Data-Driven Quality Assurance & Quality Control: Metrics/KPI",
      "url": "https://www.udemy.com/course/qa-qc-metrics-kpis-learnit/",
      "bio": "Explore QA & QC Metrics & KPIs, defect trends, automation & manual testing KPIs, and quality measurement strategies",
      "objectives": [
        "Monitoring and analyzing the progress of test case execution",
        "Creating actionable insights from defect trends",
        "Spotting inefficiencies or slowdowns in QA processes",
        "Measuring defect concentration and how often bugs escape to production",
        "Identifying gaps in test scenarios using metrics",
        "Estimating the return on investment from test automation efforts",
        "Using metric-driven approaches to improve test planning",
        "Combining manual and automated metrics",
        "Measuring productivity of QA teams over time",
        "Set QA & QC KPIs and tailoring them to project needs",
        "Using test metrics to support compliance and audits",
        "Using metrics to evaluate quality level on a project",
        "Quantifying the cost of poor quality (CoPQ)",
        "Building metric-based QA OKRs for teams",
        "Using metrics to support root cause analysis sessions",
        "Differentiating between bug severity and priority for better triaging",
        "Designing reports that clearly communicate QA results to stakeholders",
        "Using data during retrospectives to improve QA strategies",
        "How to identify and define useful QA indicators and performance metrics",
        "Evaluating how much of the system is tested and how effective the tests are"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Defect Management Metrics & KPIs": [
          "Defect Management Metrics & KPIs: Number of Open Defects & Defect Leakage",
          "Defect Management Metrics & KPIs: Defects per Severity/Priority/Env/Root cause",
          "Defect Management Metrics & KPIs: Defect Density, Non-Resolved Blockers & Others",
          "Defect Management Metrics & KPIs: Quality Debt Index, Bug Fixing Projection",
          "Defect Reopen, Defect Rejection, Open Defects Change Rate, Removal Efficiency",
          "Defect Resolution Time, Defect Age, Detection to Resolution Ratio"
        ],
        "Testing Metrics & KPIs": [
          "Test execution coverage, Cost of Quality & Test Design Coverage",
          "Testing Metrics & KPIs: Regression Time, Verified Issues Rate, Pass Rate"
        ],
        "Test Automation Metrics & KPIs": [
          "% of Poduct, Automation, System Issues & Execution Frequency",
          "Execution Time, Test Success Ratio & % of Results Analyzed",
          "Regression Effectiveness, Percentage of Automated Tests & Auto Savings"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Basic familiarity with how software testing works",
        "Knowledge of manual or automated quality assurance methods",
        "Experience using issue tracking tools like Jira or equivalent",
        "Hands-on use of tools that manage test cases, such as TestRail",
        "Motivation to apply metrics for QA improvements",
        "No specialized skills in programming or analytics required"
      ],
      "description": "Build a Metrics-Driven QA Practice with Confidence – Learn to Measure, Improve, and Communicate Software Quality\nIn modern software development, data is power — and that includes Quality Assurance. Whether you're testing manually, leading automation, or managing QA teams, the ability to collect and interpret the right QA metrics is what separates guesswork from strategy.\n\"Data-Driven Quality Assurance & Quality Control: QA Metrics\" is a complete, practical guide to understanding and applying the most critical metrics in QA and QC. You’ll learn how to identify key trends, track testing performance, and present your results in a way that makes sense to both technical and non-technical stakeholders.\nWhat This Course Covers:\nCore QA & QC Metrics and KPIs: Understand the key differences and how both play a role in measuring quality\nAutomation & Manual Testing KPIs: Learn metrics for both types of testing—execution rates, pass/fail ratios, flakiness, automation coverage\nDefect Metrics & Trends: Discover how to use data to identify patterns, root causes, and quality risks\nQuality Measurement Strategies: Apply frameworks for tracking test coverage, product readiness, test case effectiveness, and more\nProcess Improvement Through Metrics: Use historical data to drive retrospectives, reduce technical debt, and optimize test cycles\nQA Dashboards & Reporting Techniques: Learn new things that will help you to build compelling, visual summaries using tools like Jira, Excel, or TestRail\nYou’ll also get actionable tools: KPI templates, metric dashboards, formulas, and checklists you can use in real-world projects.\n\n\nWho Is This Course For?\nThis course is ideal for:\nQA Engineers & Testers aiming to make their work more measurable and visible\nAutomation Testers looking to quantify their frameworks’ effectiveness\nQA Leads & Managers seeking to implement or improve their team’s quality metrics\nScrum Masters & Product Owners who want real-time insights into product and process quality\nAnyone involved in software quality and delivery who wants to speak the language of data\n\nWhy Metrics Matter\nIn Agile and DevOps environments, decisions are made fast—and without data, QA can get left behind. This course teaches you how to bring clarity and credibility to your testing efforts. With real metrics, you can show exactly what’s working, what needs fixing, and how to prioritize your team's time effectively.\nBy the end of this course, you’ll be confident in building and using a QA metrics framework that drives real improvement—and gets noticed by your team, stakeholders, and leadership.\nJoin now and start delivering quality that’s not just good—but measurable.",
      "target_audience": [
        "Manual QA professionals aiming to showcase their impact through data",
        "Automation testers who need to quantify framework efficiency and consistency",
        "QA supervisors and team leads looking to apply measurable quality standards",
        "Agile testing specialists focused on integrating metrics into fast delivery environments",
        "Product owners and business analysts wanting actionable insights from QA metrics",
        "Software engineers interested in understanding how QA data can improve development",
        "Project coordinators managing delivery timelines and quality expectations",
        "Delivery leads responsible for monitoring release stability and defect rates",
        "Engineering managers using metrics to evaluate team and process performance",
        "Product managers aligning quality insights with product objectives and roadmaps",
        "System architects examining how architecture influences software quality and issue trends"
      ]
    },
    {
      "title": "POSTMAN API TESTING - The Complete Guide",
      "url": "https://www.udemy.com/course/postman-api-testing-the-complete-guide/",
      "bio": "Master API Testing with Postman: Requests, Auth, Variables, Automation, CI/CD & more — Beginner to Advanced Guide",
      "objectives": [
        "Understand the fundamentals of API Testing and Postman interface step by step",
        "Learn how to create, send, and test API requests using different HTTP methods (GET, POST, PUT, PATCH, DELETE)",
        "Master advanced Postman features such as Collections, Workspaces, Variables, and Parameterization",
        "Write automated tests with Assertions, Pre-request scripts, and Chaining Requests for real-world APIs",
        "Perform Data-Driven Testing in Postman using CSV/JSON files and Newman for CLI automation",
        "Generate detailed HTML test reports and integrate Postman automation with Jenkins & GitHub CI/CD pipelines",
        "Explore advanced topics including Mock APIs, Monitoring, Debugging, and Performance Testing in Postman",
        "Gain hands-on experience with real-time examples, SOAP API testing, and practical API automation scenarios"
      ],
      "course_content": {
        "Getting Started": [
          "How to Install Postman on Windows"
        ],
        "First Steps in API Testing": [
          "How to Create API Request",
          "HTTP Methods: POST, PUT & DELETE",
          "Quiz-Check your knowledge"
        ],
        "Collections & Organization": [
          "Collections in Postman",
          "Create and Manage Workspaces in Postman"
        ],
        "Authentication Basics": [
          "Authorization in Postman (Basic Auth)",
          "Bearer Token Authentication"
        ],
        "Parameterization & Variables": [
          "Parameterization in Postman",
          "Global Variables in Postman",
          "Quiz-Check your knowledge"
        ],
        "Writing & Running Tests": [
          "How to Create First Test in Postman",
          "Assertions in Postman",
          "Pre-request Scripts in Postman"
        ],
        "Data-Driven Testing": [
          "Data Driven Testing in Postman (Real-Time Example)",
          "Data Driven Testing with JSON File",
          "Data Driven Tests in Newman with CSV",
          "Quiz-Check your knowledge"
        ],
        "Advanced Features": [
          "Chaining Requests in Postman",
          "Mocking API with Example",
          "Skip Requests Based on API Response"
        ],
        "Running & Reporting": [
          "Run Collection from CLI & Generate Report",
          "Generate HTML Custom Report using Newman",
          "Monitoring APIs in Postman"
        ],
        "Debugging & Remote Execution": [
          "Debugging in Postman",
          "Run Postman Collections Remotely via URL"
        ]
      },
      "requirements": [
        "No prior experience with API Testing is required — this course starts from scratch",
        "A computer (Windows, Mac, or Linux) with internet access",
        "Basic knowledge of software testing or web development (helpful but not mandatory)",
        "Postman tool installed (will be covered in the course setup section)",
        "Curiosity and willingness to learn API testing step by step"
      ],
      "description": "Are you ready to become confident in API Testing and take your career to the next level?\nWhether you’re a beginner just starting out or someone looking to advance into automation and CI/CD workflows, this course is designed to give you everything you need — step by step, with real-world examples.\nPostman is the #1 tool for API Testing, trusted by developers and QA engineers worldwide. By the end of this course, you’ll be able to test, automate, and debug APIs like a pro, and even integrate your work into professional DevOps pipelines.\nWhat makes this course different?\nWe start from scratch — no prior API knowledge required.\nEvery topic is taught with hands-on demonstrations, not just theory.\nCovers Beginner → Intermediate → Advanced level in one course.\nIncludes real-time examples, projects, and best practices used in the industry.\nFocus on practical problem-solving so you can use Postman confidently at work.\nWhat You’ll Learn:\nHow to create and send your first API requests in Postman\nUsing HTTP methods (GET, POST, PUT, DELETE, PATCH) effectively\nCollections, environments, variables, and parameterization in Postman\nWriting and running automated tests with assertions\nData-driven testing with CSV and JSON\nMock servers, chaining requests, and debugging APIs\nGenerating professional HTML reports with Newman\nIntegrating Postman with Jenkins CI/CD and GitHub Actions\nHandling authentication methods like Basic Auth, Bearer Token, OAuth\nPerformance testing and real-world API case studies\nBy the end of this course:\nYou will not only understand how APIs work, but you’ll also gain the confidence to:\nTest any REST or SOAP API efficiently\nAutomate your testing workflows with Postman & Newman\nWork on real-world projects and improve team collaboration\nAdd a highly valuable skill to your resume as a QA Engineer, Developer, or Tester",
      "target_audience": [
        "Beginners who want to learn API testing from scratch using Postman",
        "Software testers and QA engineers looking to expand their skills into API automation",
        "Developers who want to test APIs during development",
        "Students preparing for software testing or QA job interviews",
        "Anyone interested in learning how APIs work and how to test them effectively"
      ]
    },
    {
      "title": "Performance Testing from A to Z",
      "url": "https://www.udemy.com/course/performance-testing-from-a-to-z/",
      "bio": "A complete guide to implementing Performance Testing and Performance Engineering",
      "objectives": [
        "Performance Testing",
        "Performance Requirements",
        "Performance KPIs",
        "Performance Scripting Best Practices",
        "Performance Data Analysis",
        "Performance Engineering",
        "Performance Troubleshooting",
        "Performance Best Practices",
        "Performance Testing in Agile",
        "Performance in SCRUM"
      ],
      "course_content": {},
      "requirements": [
        "No previous knowledge is required in order to attend this course"
      ],
      "description": "In this course you will learn everything you need to know for implementing Performance Testing and Performance Engineering in your company and starting a career in performance testing.\nAfter this course you will be an expert in performance testing ready to gather experience on the field.\nYou will have access to a Performance Governance Model that can be used as is in your company.\nYou will learn best practices gathered from experienced experts.\nYou will have access to guidelines that will ease your day to day work and maximize the performance outcomes.",
      "target_audience": [
        "Computer Science students",
        "Project Managers",
        "C level executives",
        "Business Owners",
        "IT Professionals",
        "Performance Specialist",
        "Performance Engineers",
        "Performance Managers",
        "QA Directors"
      ]
    },
    {
      "title": "Micro Focus Application Lifecycle Management (ALM QC)",
      "url": "https://www.udemy.com/course/micro-focus-application-lifecycle-management/",
      "bio": "Learn the concepts of using ALM proficiently",
      "objectives": [
        "End to End Navigation and Test Management using ALM",
        "Release and Requirement Management",
        "Writing and Executing Test Cases",
        "Reporting and Managing Defects",
        "Generating Reports and Managing Dashboard"
      ],
      "course_content": {
        "Introduction to ALM": [
          "Introduction to ALM",
          "Working with Site Admin - Create Project - Create User"
        ],
        "Release Management": [
          "Working with Release Management"
        ],
        "Working with Requirement Management": [
          "Requirement Management (Part-1)",
          "Requirement Management (Part-2)"
        ],
        "Working with Test Management": [
          "Test Plan (Writing Test Cases)",
          "Converting Requirements to Test and Mapping",
          "Test Lab (Executing Tests)",
          "Test Lab (Reporting Defects)"
        ],
        "Working with Defects Management": [
          "Managing Defects in ALM"
        ],
        "Working with Reports and Dashboard": [
          "Generating Reports and Graphs",
          "Creating and Managing Dashboards"
        ]
      },
      "requirements": [
        "There are no standard prerequisite for the course.",
        "Having knowledge of fundamentals of Testing is added advantage"
      ],
      "description": "Micro Focus Application Lifecycle Management (ALM) is a set of software tools developed and marketed by Micro Focus (previously Hewlett-Packard and Hewlett Packard Enterprise) for application development and testing. It includes tools for requirements management, test planning and functional testing, performance testing (when used with Performance Center), developer management (through integration with developer environments such as Collabnet, TeamForge, and Microsoft Visual Studio), and defect management.\nALM is designed to support key stakeholders responsible for delivering applications as they progress through their lifecycle. It is a combination of a common platform, several key applications, and a dashboard targeted at managing the core lifecycle of applications, from design through readiness for delivery to operations. All of these core lifecycle activities are connected together from a workflow perspective with a common management console, layer of project tracking and planning, and built on a common software foundation containing a consistent repository and open integration architecture with a supported SDK.\nALM is intended to provide Information Technology departments with a centralized application management platform for managing and automating within and across application teams and throughout the complete process of developing an application, within a single workflow. Micro Focus offers a number of consulting services to support ALM.",
      "target_audience": [
        "Any one who is looking forward to learn ALM for Test Management",
        "Manual Testers",
        "Project Managers"
      ]
    },
    {
      "title": "Rest Assured Java - API Automation for Beginners",
      "url": "https://www.udemy.com/course/rest-assured-java-api-automation-for-beginners/",
      "bio": "Rest Assured API Automation framework",
      "objectives": [
        "You will get complete knowledge on REST API Automation testing using Rest Assured Java",
        "You will be able to design structured API automation framework with REST Assured using BDD approach (Cucumber)",
        "Very good understanding about API automation testing",
        "Learn how to use POSTMAN for REST API Execution"
      ],
      "course_content": {
        "Introduction": [
          "Rest Assured Introduction",
          "About the Course - areas covered"
        ],
        "Rest Assured Essentials": [
          "Getting Started - Set Up",
          "The First Test Case",
          "Adding Validation",
          "Manual API testing using PostMan",
          "Understanding the Rest Assured syntax",
          "Understanding Rest Assured Java docs better",
          "Rest Assured - Request Logging",
          "Rest Assured - Response Logging"
        ],
        "Groovy's GPath": [
          "What is Groovy's Gpath ?",
          "Groovy's GPath - More examples",
          "Groovy Gpath - find method",
          "Groovy Gpath - findAll method",
          "Groovy GPath - sum and collect method",
          "Groovy GPath - max and min method"
        ],
        "Hamcrest Assertion Library": [
          "What is Hamcrest? About Hamcrest String Types",
          "Hamcrest Assertion examples - Number data types",
          "Hamcrest Assertion examples - ArrayList examples",
          "Hamcrest Assertion examples - HashMap examples",
          "Hamcrest Assertion - allof , anyof Matchers examples",
          "How to use Hamcrest along with Rest Assured Java",
          "First Approach - using Hamcrest along with Rest Assured",
          "Second Approach - using Hamcrest along with Rest Assured"
        ],
        "Post Man - How to use for API testing": [
          "How to use PostMan for API manual testing"
        ],
        "Rest Assured - Headers": [
          "Headers - Basics",
          "getHeader - Rest Assured",
          "getHeaders - Rest Assured",
          "header - Rest Assured",
          "Request Header passing - Option 1",
          "Request Header passing - Option 2 using Header class",
          "Request Header passing - Option 3 using Headers class",
          "Request Header passing - Option 4 using HashMap"
        ],
        "Query Parameters in Rest Assured": [
          "Query Parameters usage in Rest Assured",
          "Multi Query Paramers in Rest Assured",
          "Multi Query using Query Params in Rest Assured",
          "Query Parameters using HashMap - Rest Assured",
          "Query Parameters - Key with Multiple Values - Rest Assured"
        ],
        "Path Parameters - Rest Assured": [
          "Path Parameters using Rest Assured",
          "Multiple Path Parameters using path Param - Rest assured",
          "Multiple Path Parameters using HashMap - Rest assured"
        ],
        "Request and Response Specifications": [
          "Request Specification in Rest Assured - usage",
          "Response Specification in Rest Assured - usage",
          "Request Spec Builder - usage in Rest Assured",
          "Response Spec Builder - usage in Rest Assured",
          "Default Request Specification",
          "Default Response Specification"
        ],
        "Serialisation and De serialisation (Object Mapping)": [
          "Serialisation and De serialisation - What is it?",
          "Serialisation in Rest Assured - demo",
          "De Serialisation in Rest Assured - demo"
        ]
      },
      "requirements": [
        "No programming experience required",
        "You should have high level understanding of Java's OOPs concept (not expert level)"
      ],
      "description": "*API Fundamentals\nWhat is API\nTypes of API\nAPI development life cycle\nwhat is SOAP/REST\nHTTP Basics\nResources\nOAUTH2.O flow with examples\n\n\n*PostMan Fundamentals\nWhat is Postman\nWhy use Postman\nHow to use Postman\nHow to analyse API documentation\n\n\n*Faking Data\nusing Mockoon for fake end points\n\n\n*Hamcrest Assert Library\nVarious Hamcrest Matchers for assertion\n\n\n*Groovy's GPath\nVarious examples showing ways of extracting response using GPath\n\n\n*Data driven testing using Excel\n*Usage of simple JSON library\n*Usage of Allure Reports\n\n\n*TestNG\nVarious features of TestNG\n\n\n*Rest Assured(RA)\nWhat is Rest Assured\nHow to set up Rest Assured\ndifferent HTTP methods\nRequest Specification interface\nResponse Specification interface\nRequest/Response SpecBuilder class\nLoggging - different ways\nFilters - different types\nFaking data using tool Mockoon\nSending the request using RA\nReceiving the response using RA\nDifferent ways of extracting data from response\nAssertion using Hamcrest\nAssertion using TestNG\nGroovy's Gpath in detail\nHamcrest Java library for assertion\nRequest and Response headers\nDifferent ways of sending headers\nDifferent ways of sending the request\nDifferent ways of preparing payloads using HashMap,Java POJO,using JSON file\nOnline utilities for preparing complex POJOs\nQuery Parameters\nPath Parameters\nJson Schema Validator\nReading data from JSON and performing data driven testing using Json simple library\nReading data from excel and performing data driven testing using Apache POI API/using Listeners\nAuthentication/Authorization\nTestNG in depth\nSerialization/De serialization using jackson data bind library (Object Mapping)\nUsage of Allure reports\nUsage of Extent Reports\nUsage of cucumber maven reports\nExtent Reports using Listeners\nUsage of Maven command line/Git/GitHub/Jenkins\n\n\nFinally at the end,you will learn how to develop automation API framework from scratch:\n- E2E flow (mini flow) using Non BDD approach\n- E2E flow Complete  Rest Assured Framework using pure BDD approach using Cucumber\nand many more....",
      "target_audience": [
        "Fresher Graduates/New joiners to the API automation team",
        "Manual QA's who would like to understand and learn API automation using Rest Assured.",
        "This is a beginner friendly course hence anyone who is interested in learning API can join this course."
      ]
    },
    {
      "title": "Manual Software Testing Interview (Q&A for QA) 2025",
      "url": "https://www.udemy.com/course/software-testing-interview-qa-interview/",
      "bio": "The Ultimate Software Testing Interview Course. Get a job as a software tester, QA, Manual QA, Quality Analyst, Engineer",
      "objectives": [
        "Top 10 Software Testing Interview Tips & Tricks: Ace the QA interview",
        "The Ultimate Software Testing Interview Course. Get a job as a software tester, QA, Manual QA, Quality Analyst, Engineer",
        "Learn how to easily crack the software testing QA interviews and get a job as a software tester, QA Analyst, QA Engineer, Manual Tester & Manual QA",
        "Understand what employers look for in software testing interview candidate",
        "Learn how to answer the most common software testing interview questions",
        "Know the different interview stages in a software testing interview such as HR phone interview, interview with the hiring manager and the team",
        "Learn how to create a bug report for the interview",
        "Learn how to create a resume , apply for jobs and tips & tricks to get more interviews.",
        "Become super confident and prepared for your next software testing interview.",
        "Learn the difference between Agile and Waterfall methodologies",
        "Understand software development life cycle in full detail"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Master Class Summary"
        ],
        "Technical Interview Questions": [
          "Most Important Question",
          "How to test login functionality",
          "How to test Payment functionality",
          "How to test file uploading feature",
          "How to write defect",
          "Difference between smoke vs sanity",
          "Database Testing Questions",
          "Most Common Technical Questions",
          "MOBILE APP TESTING: FROM A TO Z",
          "can you tell me about your self",
          "what inspired you to become QA engineer",
          "QA Vs QA Vs Testing",
          "How to meet the deadlines",
          "Key skills for QA Engineer",
          "Boundary Value Analysis vs Equivalence Particitioning"
        ],
        "Introduction to JIRA Project Management": [
          "What is JIRA",
          "Basics of Agile in JIRA Project Management Tool",
          "JIRA Versions",
          "JIRA Issue Types",
          "Issue Types in JIRA Part II",
          "JIRA Interface for Managing Projects",
          "How to create general tasks in JIRA",
          "How to create user story and Epic",
          "Ho to create Multiple Epics with Multiple User Stories",
          "How to start Sprint",
          "How to Execute Sprints",
          "How to Apply Filters in JIRA Project Management Tool"
        ],
        "Automation Tools Evaluation": [
          "Automation Tools Evaluation"
        ],
        "Non Technical Questions": [
          "Company information",
          "What are your main Strengths, Weaknesses"
        ],
        "Phases of Interview": [
          "HR Interview",
          "How to get more jobs interviews",
          "How to Deal with Negative test cases"
        ],
        "Personal Development Advice": [
          "Personal Development Tips & Tricks"
        ],
        "Introduction to n8n Automation tool": [
          "introduction to n8n"
        ]
      },
      "requirements": [
        "Motivation and willingness to learn",
        "Basic knowledge of software testing/QA fundamentals",
        "Be able to follow advice in this course and be consistent"
      ],
      "description": "The complete Manual Software testing course on how to pass the interview and get a job as a Manual Software Tester, QA, Manual Tester, QA Analyst, Website Tester & QA Engineer.\nWant to land a Software Testing job at a great company but you are intimidated by the interview process and the technical questions? Do you find yourself being confused or overwhelmed by the software testing interview? Look no further!! Because this course is your answer to all the problems, hesitations and fears you have about the software interview. Using the strategies, exercises, tips & tricks taught in this course, you will learn how to get job offers from top tech companies.\nThe demand for software testers is increasing at an insane rate right now. There are more and more technology companies that are being started now a days and all of them require software testers. This is the best time to learn the concepts taught in this course and get a great paying job.\nThis course is created based on personal interviews and feedback from managers who hire software testers. Nothing is held back as all the secrets are shared in this course to increase your chances at landing a job.\nHere is what you will learn in this course:\nHow to answer the most important software testing interview questions\nThis course will provide you scripts on how to answer questions and emails from employers\nHow to write a resume and how to apply for jobs\nHow to get more interviews\nTips and tricks to stand out from other candidates\nWe'll teach you all the fundamental concepts and how to apply them to pass the software testing interview.\nI will consider myself successful if I could be a part of your journey to success.\nEnroll today and see what this course can do for your career and life. Best of luck!",
      "target_audience": [
        "who wants to get jobs in Quality Assurance roles"
      ]
    },
    {
      "title": "Introduction to Augmentative and Alternative Communication",
      "url": "https://www.udemy.com/course/introaac/",
      "bio": "Speech Limitation or Absence Solutions",
      "objectives": [
        "The Importance of Access to Communication",
        "Tthe challenges faced by children with speech impediments",
        "Definition of Alternative Communication Systems",
        "Benefited Populations with Disabilities"
      ],
      "course_content": {
        "Introducción": [
          "Introdcution",
          "Intervention principles",
          "Classification",
          "iconicity",
          "Scales of reality",
          "Universal Desing"
        ],
        "Mouse Adaptation": [
          "Mouse Modfication"
        ],
        "adaptive switch button": [
          "presentation",
          "Electronic",
          "Case",
          "Assembled"
        ]
      },
      "requirements": [
        "You will learn everything you need to introduce yourself to the concept of Augmentative and Alternative Communication."
      ],
      "description": "Begin your journey into the fascinating world of alternative communication through our introductory course, specially designed to help you discover various solutions to speech limitations.\n\n\nIn this course, you will explore the fundamentals of different communication systems designed to supplement or replace speech. From pictograms to advanced electronic devices, you'll learn how these tools can be tailored to individual needs to facilitate effective expression of ideas, feelings, and needs.\n\n\nThis course is crafted for students, professionals, and caregivers interested in promoting accessible and effective communication for all. Join us to learn, grow, and contribute to a more inclusive and understanding world for individuals with disabilities.\n\n\nIf you're looking to deepen your knowledge, you can also inquire about our \"Augmentative and Alternative Communication\" course, a broader alternative for your professional development.\n\n\nThis 8-hour course not only focuses on technique but also on personal empowerment and social inclusion. Through practical exercises and case studies, you will develop practical skills that enhance your ability to communicate autonomously and satisfactorily in various contexts. Additionally, you will explore how technology can expand your communication abilities and create new opportunities in your daily and professional life.\nThis 8-hour course not only focuses on technique but also on personal empowerment and social inclusion. Through practical exercises and case studies, you will develop practical skills that enhance your ability to communicate autonomously and satisfactorily in various contexts. Additionally, you will explore how technology can expand your communication abilities and create new opportunities in your daily and professional life.",
      "target_audience": [
        "Professionals related to disability care.",
        "People interested in providing solutions for speech issues in their students or patients with speech limitations or absence"
      ]
    },
    {
      "title": "Test Automation Foundations",
      "url": "https://www.udemy.com/course/test-automation-basics-to-advance/",
      "bio": "Learn everything you need to kick-start your Test Automation Career",
      "objectives": [
        "Automation Testing Masterclass - Microsoft Playwright and how to become a Automation Enginner 2025",
        "Learn everything you need to kick-start your Test Automation Career",
        "Become an automation expert by learning Microsoft Playwright, Java Script",
        "You will take your first steps into your test automation career.",
        "Be able to demonstrate your understanding of test automation to future employers.",
        "Make use CI/CD pipelines with Gitlab in running your tests."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is software testing",
          "why software testing important",
          "Difference between Manual testing vs Automation testing"
        ],
        "How to become a Test Automation Engineer": [
          "Roadmap to become a automation engineer",
          "Test Automation Strategy Development best practices",
          "workflow for test automation strategy"
        ],
        "What to Automation?": [
          "what to automate?",
          "when to start automation testing"
        ],
        "Microsoft Playwright": [
          "Introduction to Microsoft Playwright",
          "what is playwright",
          "Microsoft Playwright features",
          "Advantages of Microsoft Playwright Automation tool",
          "Disadvantages for Microsoft Playwright Automation tool",
          "Tool comparison with Microsoft Playwright"
        ],
        "Getting Started with Microsoft Playwright": [
          "getting started with microsoft playwright",
          "How to Install Microsoft Playwright",
          "Folder structure in Microsoft Playwright",
          "How to run first script in playwright"
        ],
        "Microsoft Playwright Core Concepts": [
          "core concepts for microsoft playwright",
          "Actions in Microsoft Playwright"
        ],
        "How to Locate Elements in Playwright Automation tool": [
          "how to locate elements in playwright",
          "tips and tricks for locating elements",
          "how to run scripts in browser",
          "login Assignment",
          "how to find drop down values",
          "how to pick date"
        ],
        "Tips and Tricks": [
          "tips and tricks",
          "Additional Tips",
          "how to write assertions"
        ],
        "Page object Model Implementation": [
          "what is POM",
          "Login page objects",
          "home page objects",
          "Feedback Page objects",
          "payment page objects",
          "currency exchange page"
        ],
        "GIT/GIT Hub Introduction": [
          "what is git",
          "Git Operations live"
        ]
      },
      "requirements": [
        "Basic Software Testing experience is nice to have but not a must."
      ],
      "description": "Welcome to the Test Automation Foundations.\n\n\nLearn the foundations of automation testing with this course and become a successful Test Automation Engineer. Obtain the core automation testing skills and learn more about high-demand testing frameworks such as selenium, Playwright, and cypress. At the end of this course, you will know what are the career options for test automation engineers and how you can proceed in this direction.\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to start your automation testing career.\n\n\nWhy should you take this course?\nDo you want to become a Test Automation Engineer but don't know where to start? Are you planning to switch from a non-technical testing position to the more technical side? Or are you a software engineer who wants to change to test automation positions? This course is made for you. At the end of the course, you will learn everything you need to proceed with your career in test automation.\n\nenroll course today, and look forward to:\nOver 2 hours of HD video content.\nAll the knowledge you need to start your automation testing career.\nBest practice test automation code examples.\nInteractive whiteboard lessons.\nLearn the latest IT industry topics and stay up to date.",
      "target_audience": [
        "Beginner and advanced automation testers, as well as tech-savvy people that wish to get an automation tester job."
      ]
    },
    {
      "title": "Тестирование ПО для начинающих. Web, Mobile, API. (QA/QC)",
      "url": "https://www.udemy.com/course/software-manual-testing-web-mobile-api/",
      "bio": "Jira, HTTP/HTTPs, Charles, HTML, CSS, SQL, Postman, Java, JMeter, Git, IntelliJ IDEA, Android Studio, ADB.",
      "objectives": [
        "Теория тестирования, техники тест-дизайна, тестовая документация",
        "Тестирование API с помощью Postman",
        "Тестирование Web",
        "Тестирование Mobile",
        "Багтрекинговая система Jira",
        "SQL (запросы уровня DML)",
        "Перехват HTTP траффика с помощью сниффера Charles",
        "Базовые навыки веб технологий: HTML, CSS",
        "JMeter - возможности функционального и не функционального тестирования",
        "Базовые сведения о Java",
        "Создание автотестов в Postman",
        "Базовые навыки с системной контроля версий - Git",
        "Среда разработки Java приложений, Android приложений - IDEA, Android Studio"
      ],
      "course_content": {
        "Базовый уровень": [
          "О курсе и целях курса",
          "Введение в профессию QA",
          "Качество, тестирование и цели тестирования",
          "Принципы тестирования",
          "Фундаментальный процесс разработки: SDLC",
          "Фундаментальный процесс тестирования: STLC и типы ошибок",
          "Требования к программному обеспечению и их анализ",
          "Практика: работа с требованиями",
          "Тестовая документация",
          "Jira - Система управления проектами (Bug tracking system)",
          "Виды тестирования",
          "Уровни тестирования ПО + Как работает интернет",
          "HTTP/HTTPs протокол + Виды тестирования ч.2 + Postman",
          "Техники тест-дизайна",
          "Тестирование Web GUI",
          "Метрики / Создание блок схемы",
          "Тестирование WEB - Testing Challenge",
          "Особенности и тестирование Mobile",
          "Android OS"
        ],
        "Продвинутый уровень": [
          "HTML - Web технологии, часть 1",
          "Лекция 15: SQL Basics: часть 1. Общие понятия, оператор Select.",
          "Лекция 16: SQL Basics: часть 2. Объединение таблиц, оператор Join.",
          "Лекция 17: Сетевая модель OSI",
          "Лекция 18: Web debug proxy tools: Charles + WEB",
          "JMeter. Основы, часть 1",
          "Что такое API?",
          "Что такое REST & SOAP?",
          "Тестирование NASA REST API с Postman",
          "Первые Автотесты c Postman",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Курс рассчитан для людей без опыта в информационных технологиях.",
        "Желателен, но не обязателен навык установки и переустановки программного обеспечения на персональном компьютере.",
        "Желание учиться"
      ],
      "description": "Тестировщик — это одна из востребованных специальностей в ИТ-индустрии. Однако достаточно сложно получить полный набор знаний для освоения данной профессии, так как в наших университетах не учат ей.\nНаш курс позволит полно охватить все теоретические и практические аспекты данной области, а практический опыт преподавателя раскроет все секреты и приемы тестирования нескольких платформ.\nНа данном курсе  вы освоите широкий набор технологий, таких как клиент-серверная архитектура, технологии сетей, составляющие части веб-приложения, как устроено мобильное приложение, что такое web-сервисы и как это все тестировать.\nЛекции - это проверенный набор материалов, которые эффективно показали себя в практическом применении обучения студентов, где 70% учащихся по окончанию курса нашли свою первую работу.\nЖелаю всем продуктивного обучения и легкости освоения прекрасной профессии: специалист по тестированию ПО!\n\n\nВ курсе будут рассмотрены практические темы по всему циклу разработки от появления идеи и заканчивая обзором того, что будет с проектом после релиза. Также рассмотрим тестирование в разрезе тестирования WEB, Mobile и API тестирования. После курса получите минимально необходимые навыки и знания, на основе которых сможете двигаться дальше.\nНеобходимо учитывать, что курс предпологает самостоятельное обучение и весь материал, который подается - это сжатое представление материал, который фигурирует на собеседованиях и в практике тестировщика.\nТерпение и усилия, которые вы приложите при обучении окупятся и дадут результат незамедлительно. По любым вопросам обращайтесь, пожалуйста, в личные сообщения и я буду рад помочь ответить на вопросы.",
      "target_audience": [
        "Все желающие познать новую профессию, овладеть практическими навыками тестирования и понять как устроен процесс разработки в ИТ компаниях."
      ]
    },
    {
      "title": "Test Automation: great alternative to Selenium",
      "url": "https://www.udemy.com/course/automate-web-application-within-3-hours/",
      "bio": "Automated Testing can be simple and very fast",
      "objectives": [
        "Understand test automation process, its target and scope",
        "Select proper tool for web automation needs",
        "Install and configure web automation tool",
        "Automate web pages of any complexity",
        "Optimization using Page Object Model framework and Data Driven Testing",
        "Run multiple scripts within one run with test suites",
        "Automate work with files: download, upload, read and write files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Why, What and How to automate?": [
          "Why and What to automate?",
          "How to select a good automation tool?"
        ],
        "Sahi: installation and configuration": [
          "Sahi: installation and configuration"
        ],
        "First test script": [
          "Typical structure of good automated script",
          "First script: write, execute and report"
        ],
        "Advanced locators": [
          "Instead of confusing XPath - part 1",
          "Instead of confusing XPath - part 2",
          "How to get several UI elements at once?"
        ],
        "Advanced automated script for real world application": [
          "Fisrt advanced script - introduction",
          "First advanced script - implementation",
          "Does our test really detect bugs?",
          "Writing scripts in business-readable style",
          "Drop downs, radio buttons, check boxes ..."
        ],
        "Optimization and refactoring - Data Driven Testing": [
          "Data Driven Testing - introduction",
          "Data Driven Testing - implementation"
        ],
        "Optimization and refactoring - Page Object Model": [
          "Page Object Model - introduction",
          "Page Object Model - implementation: part 1",
          "Page Object Model - implementation: part 2",
          "Page Object Model - extension and improvement"
        ],
        "Test suites": [
          "Test suite: create and run"
        ],
        "Bonus section: Work with files": [
          "Download file",
          "Upload file",
          "Read and write file"
        ]
      },
      "requirements": [
        "You should be interested in test automation :-)",
        "You should have basic understanding of programming.",
        "You should have Java installed on your computer",
        "Basic knowledge of Javascript is preferable, but not mandatory"
      ],
      "description": "Software test automation is very popular topic nowadays.\nProbably you heard something about Senenium, don't you?\nThis course is different than other courses about automaton. Selenium is not the best solution for each case. Maintenance test infrastructure can be time consuming with Selenium. In this course I will show you that you can write maintainable and stable automation scripts very quickly. And Sahi will help us with this.\nUnlike Selenium, where you must download web drivers for each browser, Sahi solve this problem easily. Maintenance of test infrastructure will be handled by properly selected web automation tool - Sahi.\nLet me shortly depict what you will learn in this course.\nPrior automating web application with Selenium, Sahi or other dedicated tool, you need to understand why and what to automate.\nAfter that, you will install and configure web automation tool Sahi which allows to write highly effective multi browser automated scripts.\nThen, you will learn how to identify any UI element. Selenium uses XPaths for complicated HTML code whereas Sahi has its built-in API which makes constructing locators easier.\n\nAlso, we will learn how to perform a wide range of possible actions and assertions.\nFinally, we will learn how to improve our tests and enhance their maintainability using Page Object Model and Data Driven Testing.\nSelenium with TestNG or xUnit provides us with DDT but Sahi has its extremely simple implementation.\nWe will learn how to organize our tests into test suite and execute a lot of test scripts within one run. While Selenium with TestNG requires complicated XML files, Sahi implements suites as a simple list of tests you want to run!\nAt the end of my course, as a bonus, I will present you complicated things in simple way: how to download and upload files, how to read and write files. These tasks may be quite challenging in other technologies like Selenium with Java.\nI am sure this course will very useful for you. And I guess you will think about migration your tests from popular technologies like Selenium, Protractor or others :-)\nWelcome to my course!",
      "target_audience": [
        "Manual testers who want to become automation engineer",
        "Automation engineers who want to extend their skillset",
        "Developers who want to understand test automation process",
        "Business analysts who want to optimize business functional tests",
        "Managers who want to understand how automation works",
        "Everyone who is interested in test automation"
      ]
    },
    {
      "title": "Selenium con Java y Cucumber: El curso definitivo.",
      "url": "https://www.udemy.com/course/selenium-con-java-y-cucumber-el-curso-definitivo/",
      "bio": "Aprende Selenium con Java y Cucumber enfocado especialmente a estar listo para empezar a trabajar con estas tecnologías!",
      "objectives": [
        "Aprender desde 0 a usar Selenium con Java con VS Code como IDE.",
        "Varias maneras distintas de implementar de forma eficaz el Page Object Model para elegir según la necesidad del proyecto. Una sola manera no es suficiente!",
        "Perfeccionar estos conocimientos para conseguir trabajo.",
        "Integrar Cucumber con Selenium para trabajo colaborativo.",
        "Usar las mejores prácticas con BDD y UI Automation para evitar los problemas más comunes a la hora de proyectos con Automation.",
        "Definir Steps en Cucumber: 10 años de experiencia y lo que aprendí.",
        "Expresiones regulares con Cucumber: Haciendo Features de alta calidad!",
        "Tags en Cucumber: Qué son y cómo usarlos? Tablas de Example y más!",
        "Ejecutar tags de Cucumber desde la línea de comando.",
        "Añadir parámetros a nuestros features de Cucumber.",
        "Generación de reportes con Cucumber: Mostrá los resultados de tu automatización con estos hermosos reportes!",
        "Uso de Waits de manera profesional.",
        "Cómo manejar dropdowns con Selenium Webdriver y Java?",
        "Finalizar la instancia abierta del browser al terminar los tests.",
        "Manejo de errores con Selenium Webdriver.",
        "Manipular grillas estáticas con Selenium Webdriver.",
        "iFrames con Selenium: Cómo manejarlos de forma profesional?",
        "Upload de archivos con Selenium: Es posible? Cómo?",
        "Assertions en UI Automation: Librerías, ejemplos prácticos y cómo usarlos.",
        "Explorando el HTML para trabajar con Selenium: Las mejores herramientas para hacerlo.",
        "Locators en Selenium: Qué son? Cómo usarlos? Cuáles son las mejores opciones?"
      ],
      "course_content": {
        "Actualización 2024: Introducción": [
          "¿Qué vamos a ver en este curso?",
          "¿Qué es Selenium WebDriver?",
          "¿Qué es Cucumber?",
          "¿Qué es Gradle?"
        ],
        "Actualización 2024: Instalaciones para el curso": [
          "Instalaciones de JDK, Gradle y extensiones",
          "Instalaciones de JDK, Gradle y extensiones: Recurso",
          "Creando un proyecto con Java y Gradle para Testing",
          "Creando un proyecto con Java y Gradle para Testing: Recurso",
          "Instalando las primeras librerías de nuestro framework",
          "Instalando las primeras librerías de nuestro framework: Recurso",
          "Creando carpetas y una decisión clave sobre la infraestructura",
          "Creando carpetas y una decisión clave sobre la infraestructura: Recurso",
          "Una librería que simplifica todo y nuestro primer test",
          "Otra extensión útil de Cucumber",
          "Otra extensión útil de Cucumber: Recurso"
        ],
        "Actualización 2024: Page Object Model: Teoría e implementación": [
          "Page Object Model: ¿Qué es y por qué usarlo?",
          "Otra decisión importante de diseño: Screenplay vs POM"
        ],
        "Actualización 2024: Introducción a Cucumber - Instalación e implementación": [
          "Creando nuestro primer Feature y ejecutándolo",
          "Creando nuestro primer Feature y ejecutándolo: Recurso",
          "BasePage: Creando la configuración e instanciación del WebDriver",
          "BasePage: Creando la configuración e instanciación del WebDriver: Recurso",
          "Conectando Feature, Step Def y Page Object Class",
          "Conectando Feature, Step Def y Page Object Class: Recurso"
        ],
        "Actualización 2024: Localización de Elementos Web con XPath y CSS": [
          "Locators y consejos"
        ],
        "Actualización 2024: Selenium WebDriver - La librería para interactuar con la web": [
          "La BasePage: La columna vertebral de nuestro framework",
          "La BasePage: La columna vertebral de nuestro framework: Recurso",
          "Limpiando la instancia del driver después de ejecutar pruebas",
          "Limpiando la instancia del driver después de ejecutar pruebas: Recurso",
          "Llenando campos de texto: La función sendKeys() de Selenium",
          "Llenando campos de texto: La función sendKeys() de Selenium: Recurso",
          "Dropdowns con Selenium: El objeto Select",
          "Dropdowns con Selenium: El objeto Select: Recurso",
          "Navegando a todos los links con un solo locator",
          "Navegando a todos los links con un solo locator: Recurso",
          "Creando un nuevo scenario y Page Object Classes",
          "Creando un nuevo scenario y Page Object Classes: Recurso",
          "Scenario 2: El usuario puede elegir un plan al suscribirse",
          "Scenario 2: El usuario puede elegir un plan al suscribirse: Recurso"
        ],
        "Actualización 2024: Assertions - Validando el comportamiento esperado": [
          "Nuestra primera validación: Todos los elementos de un dropdown",
          "Nuestra primera validación: Todos los elementos de un dropdown: Recurso",
          "Tipos de Assertions con TestNG",
          "Tipos de Assertions con TestNG: Recurso",
          "Las Soft Assertions: Una parte muy conveniente de la librería TestNG",
          "Las Soft Assertions: Una parte muy conveniente de la librería TestNG: Recurso"
        ],
        "Actualización 2024: Cucumber Avanzado - Tags, parámetros y mejores prácticas": [
          "Tags en Cucumber",
          "Tags en Cucumber: Recursos",
          "Backgrounds en Cucumber",
          "Backgrounds en Cucumber: Recursos",
          "Expresiones para mejorar nuestros Features Files",
          "Expresiones para mejorar nuestros Feature Files: Recurso",
          "Expresiones regulares parte 2",
          "Expresiones regulares parte 2: Recurso"
        ],
        "Actualización 2024: Generación de Reportes con Cucumber": [
          "Reportes en Cucumber",
          "Reportes en Cucumber: Recurso",
          "¿Cómo agregar screenshots de la falla a nuestro reporte?",
          "¿Cómo agregar screenshots de la falla a nuestro reporte? : Recurso"
        ],
        "Ejercicios prácticos": [
          "Ejercicio número 1: Búsqueda, paginación y carrito de compras.",
          "Ejercicio número 2: Cucumber, ids dinámicos y más",
          "El Tester Junior del Equipo"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación orientada a objetos (o haber realizado el curso de Programación Orientada a Objectos para Testers aquí en Udemy).",
        "Una computadora.",
        "Internet"
      ],
      "description": "En este curso vamos a aprender, desde cero, como crear un framework con Java, Gradle y Selenium Webdriver con Cucumber.\nEsto será hecho sobre los conocimientos de Programación Orientada a Objetos en el anterior curso, Programación Para Testers, o los conocimientos que ya poseas sobre POO.\nVamos a aprender cómo instalar el software y librerías necesarios, dejar el workspace listo para empezar a trabajar, entender la lógica detrás de cada paso que realizamos y, lo más importante, cómo hacer las cosas siguiendo las mejores prácticas que yo he empleado con más de 10 años de experiencia míos trabajando en el rubro tanto en América como luego de migrar con trabajo como especialista en esta disciplina!\nSi...estos conocimientos te van a servir para cuando decidas buscar trabajo en otros países!\nLo más importante que te vas a llevar de este curso es que, además de aprender a crear un framework desde cero, vas a entender por qué y cómo se hizo cada paso. Esto va a darte la flexibilidad de poder explicar y decidir por vos mismo qué técnicas usar, cómo usarlas y por qué usarlas.\nVas a ser capaz de explicar en una entrevista el por qué y cómo del armado de tu framework con Selenium, mejorar otros ya hechos y mucho más!",
      "target_audience": [
        "Testers Funcionales.",
        "Personas con conocimientos básicos de programación queriendo insertarse en el mercado laboral de Testing.",
        "Desarrolladores queriendo pasar al mundo de Testing.",
        "Gente que quiera empezar a automatizar y no sepa por dónde empezar"
      ]
    },
    {
      "title": "Nightwatch.js Web Application Test Automation",
      "url": "https://www.udemy.com/course/nightwatchjs-web-application-test-automation/",
      "bio": "Learn Nightwatch.js, one of the hottest JavaScript test automation frameworks.",
      "objectives": [
        "Learn to use Nightwatch to automate web application tests",
        "Learn to build a test automtation framework from scratch",
        "Learn to structure your test using the Page Object Model",
        "Learn to use multiple types of validation methods"
      ],
      "course_content": {
        "Introduction": [
          "Course requirements",
          "Making the most of this course",
          "Important training material for my courses"
        ],
        "Tools for this course": [
          "Tools for this course intro",
          "Visual Studio Code",
          "Node and NVM",
          "Chrome and Chrome developer tools"
        ],
        "HTML and CSS refresher": [
          "HTML and CSS refresher introduction",
          "HTML refresher",
          "CSS refresher"
        ],
        "JavaScript refresher": [
          "JavaScript refresher introduction",
          "JavaScript refresher",
          "Objects and JSON data",
          "Classes",
          "Callback functions"
        ],
        "Getting started with Nightwatch.js": [
          "Introduction to getting started with Nightwatch.js",
          "Install Nightwatch.js",
          "Nightwatch.js 1.7 update",
          "Install Chromedriver",
          "A note about Chromedriver versions",
          "Setup the configuration file",
          "Writing our first test"
        ],
        "Understanding test cases in Nightwatch": [
          "Introduction to Understanding test cases in Nightwatch",
          "Anatomy of a simple test",
          "BDD interface",
          "Test hooks"
        ],
        "Interacting with elements in our test": [
          "Introduction to interacting with elements in our test",
          "Getting text",
          "Entering and getting value from text fields",
          "Clicking elements"
        ],
        "Exercise 1: Interacting with Elements": [
          "Exercise 1 instructions - Video Version",
          "Exercise 1 instructions - Text Version",
          "Exercise 1 solution"
        ],
        "Being selective about which tests run": [
          "Introduction to being selective about which tests run",
          "Skipping or running specific tests",
          "Specifying the test file to run via command line",
          "Grouping test execution",
          "Tagging tests"
        ],
        "Page navigation": [
          "Introduction to page navigation",
          "Navigating to a URL or getting the current URL",
          "Going back, forward and refreshing",
          "Getting the page title"
        ]
      },
      "requirements": [
        "Windows or Mac computer",
        "Basic HTML and CSS skills are recommended but not required",
        "Basic JavaScript skills are recommended but not required",
        "All software used is free"
      ],
      "description": "Learning to automate web application testing shouldn't be hard!\nIn this course, I will be guiding you through the steps needed to create front-end web application test automation using Nightwatch.js.  We will be using Version 1.7 of Nightwatch.js in this course. UPDATE: Tested working with Version 2.0\nTogether we will be writing scripts that automate the testing of front-end applications. Over 5 hours of interactive content, including 3 challenge exercises.\n\n\nWhat we will cover:\nBasic HTML, CSS, and JavaScript\nInstalling Nightwatch.js\nWriting tests to:\nInteract with elements\nValidate data and existence of elements\nNavigate and validate browser level properties\nAlerts\nValidations with verify, assert and expect\nPage object model\nTagging and selecting tests for runs\n\n\nWhat is front-end web application test automation?\nThe \"front-end\" refers to the user interface. Or in the case of web applications, the website. Everything that you can see and interact with is part of the front-end.\nWe automate the front-end to simulate the user experience of someone using the application. Through automation, we can pretend to be a user to make sure our site is working as expected.\n\n\nWhat do I need to know to be successful in this course?\nThis course is designed for entry-level engineers. I will be going over everything that you need to get started being successful as a test automation engineer.\nBut here are a few things that will definitely help in your journey:\nExperience with manual testing of web applications\nGood Javascript experience (I will briefly review the important parts for this course)\nGood HTML and CSS experience (I will briefly review the important parts for this course)\nThe most important thing to be successful is that you need to do the work. Don't skip videos unless you are 100% sure you know the material. You need to be coding right along with me every step of the way.\n\n\nWhy do we need front-end test automation?\nTest automation of any kind is in high demand. The days of the manual test engineer is quickly coming to an end.\nCompanies want to deliver code more often and faster.\nWhat does that mean?\nThe development cycle to build, test, and release code is becoming shorter. Having a constant delivery cycle is forcing teams to integrate automation into every part of the process.\nThe major parts of the cycle that need to be automated are:\n- Build\n- Release\n- Unit Testing\n- Regression Testing\n\n\nQA is responsible for integration testing.\nOne of the most time-consuming parts of the development cycle is regression testing.\nTeams spend hours or days re-testing features that they have already tested hundreds of times.\nWhy?\nChanges in the codebase can cause downhill effects on other features. Things break all the time.\nNever assume the code is always going to work!\n\n\nFor these reasons, we build automated tests.\n\n\nI look forward to having you join my class!",
      "target_audience": [
        "Beginner QA engineers looking to learn web application test automation",
        "Development teams looking to add front-end automation tests"
      ]
    },
    {
      "title": "Software Testing Mastery: From Basics to Advanced Techniques",
      "url": "https://www.udemy.com/course/software-testing-mastery-from-basics-to-advanced-techniques/",
      "bio": "Master the art of software testing with in-depth knowledge of SDLC, testing types, techniques, and automation tools.",
      "objectives": [
        "The fundamentals of SDLC and its various models.",
        "Manual and automated testing techniques.",
        "Black-box, white-box, and grey-box testing methods.",
        "Specialized testing techniques, including API, performance, and security testing.",
        "Proficiency in test automation tools.",
        "How to design effective test cases, track defects, and deliver quality results."
      ],
      "course_content": {},
      "requirements": [
        "Basic computer literacy. Familiarity with software development processes is a plus but not mandatory. A willingness to learn and explore software testing concepts in depth."
      ],
      "description": "Introduction:\nThis course is designed to guide you through the world of software testing, covering every essential aspect from the fundamentals of Software Development Life Cycle (SDLC) to advanced testing techniques and tools. Whether you are new to software testing or an experienced professional seeking to enhance your skills, this course provides a structured, hands-on approach to mastering manual and automated testing.\nSection 1: Understanding the Software Development Life Cycle (SDLC)\nIn this foundational section, students will learn about the role of SDLC in software projects. The lectures cover the waterfall model, its phases, and intricacies. By the end of this section, students will have a solid grasp of how SDLC methodologies underpin software testing.\nSection 2: Advanced SDLC Concepts – Incremental and Prototyping Models\nThis section dives deeper into incremental and prototyping models, explaining how iterative and adaptive approaches influence testing. The spiral model is also introduced, emphasizing risk assessment and iterative development.\nSection 3: Rapid Application Development (RAD) and Sliced Models\nExplore the nuances of RAD and sliced models, focusing on their impact on testing strategies. The section concludes with an introduction to software testing principles and foundational concepts.\nSection 4: Functional and Non-functional Testing\nLearn about the distinctions between functional and non-functional testing. This section explains various testing types such as performance, usability, and security testing, emphasizing their critical roles in ensuring software quality.\nSection 5-7: Testing Techniques – Assembly, Product, and Black/White Box Testing\nThese sections cover assembly and product testing in detail, followed by an in-depth exploration of black-box and white-box testing methodologies. Students will understand test case design strategies and the importance of comprehensive testing.\nSection 8-10: Equivalence Partitioning, Use Case, and State Transitioning\nGain proficiency in equivalence partitioning, boundary value analysis, decision table testing, and state-transition techniques. These testing techniques are explained with real-world examples to solidify understanding.\nSection 11-14: Specialized Testing – API, Scripting, and Deliverables\nFocus on API testing and scripting methods for manual and automated environments. Learn about test deliverables, their importance, and how to document and present test results effectively.\nSection 15-18: Advanced Testing – Configuration Management, Peer Reviews, and Defect Management\nUnderstand the intricacies of configuration management and peer reviews. Dive into defect management processes, ensuring the detection, tracking, and resolution of defects are seamless and efficient.\nSection 19-20: Performance and Security Testing\nMaster performance testing methodologies, ensuring scalability and reliability under load. Security testing is explored in-depth, highlighting techniques to protect software from vulnerabilities and threats.\nSection 21: Test Automation Tools\nConclude with a detailed exploration of test automation tools, helping students understand their significance in modern testing practices. Hands-on demonstrations will ensure familiarity with popular tools in the industry.\nConclusion:\nBy the end of this course, students will have an all-encompassing understanding of software testing, equipped to handle complex testing scenarios in real-world projects. From mastering testing methodologies to gaining proficiency in automation tools, this course prepares you for a thriving career in software quality assurance.",
      "target_audience": [
        "Aspiring software testers and quality assurance professionals.",
        "Software developers seeking to enhance their testing skills.",
        "Project managers and stakeholders looking to understand testing methodologies.",
        "Anyone interested in a career in software quality assurance."
      ]
    },
    {
      "title": "Intro to the Manual Software Testing Interview (Q&A for QA)",
      "url": "https://www.udemy.com/course/intro-to-the-manual-software-testing-interview-qa-for-qa-f/",
      "bio": "The first step in the long journey of passing an interview and getting a job as a Software Tester(QA)",
      "objectives": [],
      "course_content": {
        "Software Testing Theory": [
          "Intro to Software Testing Theory",
          "What is Software Testing?",
          "What is Software Testing?",
          "What is the Difference between Error, Bug, and Failure?",
          "What is the Difference between Error, Bug, and Failure?",
          "What is the difference between QA and QC and testing?",
          "What is the difference between QA and QC and testing?",
          "What is STLC? What stages of STLC do you know?",
          "What is STLC? What stages of STLC do you know?",
          "What is Scrum?",
          "What is Scrum?",
          "Please explain the Equivalence partitioning technique?",
          "Please explain the Equivalence partitioning technique?"
        ],
        "Coffee Break": [
          "Coffee Break"
        ],
        "Client-Server Model": [
          "Intro to Client-Server Model",
          "What is the Client-Server model, and how does it work?",
          "What is the Client-Server model, and how does it work?"
        ],
        "Web Testing": [
          "Intro to Web Testing",
          "What is the difference between Cache and Cookies?",
          "What is Cache?",
          "What are Cookies?"
        ],
        "Mobile Testing": [
          "Intro to Mobile Testing",
          "What's the difference between Native vs. Web vs. Hybrid Apps?",
          "What's the difference between Native vs. Web vs. Hybrid Apps?"
        ],
        "API testing": [
          "Intro to API Testing",
          "What is REST? What is a REST API?",
          "What is REST?"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone. This course is about preparing for an interview for a Software Tester, also known as a QA. In most interviews there are two parts, testing your soft skills and technical knowledge, this course is about the second part, the technical part.\nWe want to warn you right away that this is not a complete course. This is a free course with answers to the 10 most popular questions. After passing it, you will be able to understand whether the training format offered by us is suitable for you. The full course will be available in the spring.\nThe main task of the course is to deepen your knowledge of software theory. To help you answer questions clearly and confidently at the interview, we did three things, each answer to the question includes\n1. Answer from official literature (standards, certifications, other documents)\n2. Answer based on analyzed articles on the Internet (we call it \"Human Language\")\n3. A real-life example to help you understand complex theoretical concepts\nWe hope you will enjoy the course and feel free to write reviews or send us the questions you were asked at the interview, we will prioritize and add them to the full version of the course.\nPrepare a cup of coffee or another favorite drink and enjoy the course!",
      "target_audience": [
        "Absolute beginners in Software Testing",
        "Experienced software testers who want to recall the basic knowledge of software testing theory",
        "Anyone who wants to take the first steps in the career of a Software tester (QA)",
        "Anyone who likes to watch videos about Software Theory or read articles on the same topic"
      ]
    },
    {
      "title": "iOS Toolbox: XCUI UI Unit Testing with Xcode 9",
      "url": "https://www.udemy.com/course/ios-toolbox-xcui-ui-unit-testing-with-xcode-9/",
      "bio": "iOS UI Unit testing course",
      "objectives": [
        "You will learn how to create UI Unit Tests for various Apps",
        "Learn importance of accessibility identifiers",
        "Adding identifiers through storyboard and code",
        "Techniques to add start from clean in your own App"
      ],
      "course_content": {
        "Introduction": [
          "Setup",
          "XCUI For Beginners Primer"
        ],
        "Intro to XCUI by using Add 1 App": [
          "Add 1 App"
        ],
        "Advance XCUI Tactics": [
          "Insights App",
          "Oil Lap Bible App",
          "Wikipedia App"
        ]
      },
      "requirements": [
        "Know how to use Xcode",
        "Know the basics of Swift Programming. (Don't need to know iOS Development)"
      ],
      "description": "This course is for iOS Developers who want to add UI Unit Testing to their toolbox of skills. If you are not an iOS developer, you can still take this course, just learn the basics of the swift language and come back. This course write UI Unit Tests for 4 Apps, including Oil Lamp Bible, Wikipedia(iOS), Add 1(Simple Game) and Insights(Creates reports on Instagram Users).",
      "target_audience": [
        "iOS Developers",
        "QA Automation Developers who know swift",
        "Students and Hobbyists trying to explore something new"
      ]
    },
    {
      "title": "Practice Test: CompTIA IT Fundamentals+ (FC0-U61)",
      "url": "https://www.udemy.com/course/practice-test-comptia-it-fundamentals-fc0-u61/",
      "bio": "\"Your Ultimate Practice Tool for Passing the IT Fundamentals+ Exam (FC0-U61)\"",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for the CompTIA IT Fundamentals+ (ITF+) exam? This course is designed to help you succeed on the FC0-U61 certification with comprehensive and realistic practice tests. Whether you're starting your IT journey or want to strengthen your foundational IT knowledge, this course provides the essential practice you need to build confidence and achieve success.\n\n\nWhat You'll Get:\nFull-Length Practice Tests: Realistic questions designed to reflect the official CompTIA ITF+ exam.\nDetailed Explanations: Comprehensive answer explanations for every question to solidify your understanding.\nKey Exam Domains Covered:\nIT Concepts and Terminology\nInfrastructure\nApplications and Software\nSoftware Development\nDatabase Fundamentals\nSecurity\n\n\nWhy Take This Course?\nThe CompTIA ITF+ certification is the ideal starting point for anyone new to IT, offering a gateway to more advanced certifications and careers. This course will ensure you’re fully prepared by testing your knowledge across all exam objectives and identifying areas where you need more focus.\n\n\nWho Is This Course For?\nAspiring IT professionals.\nStudents preparing for the CompTIA ITF+ (FC0-U61) certification exam.\nAnyone seeking foundational knowledge of IT concepts to support their career goals.\n\n\nHow This Course Will Benefit You:\nGauge your readiness for the official ITF+ exam with realistic questions.\nIdentify your strengths and areas for improvement.\nBuild confidence with simulated test-taking experience.",
      "target_audience": [
        "1. Aspiring IT Professionals: Individuals interested in starting a career in IT and seeking to build a strong foundation in technology concepts.",
        "2. Students Preparing for the ITF+ Certification Exam: Learners aiming to pass the CompTIA IT Fundamentals+ (FC0-U61) certification and needing comprehensive practice to boost their confidence.",
        "3. Non-Technical Professionals: Those working in non-IT roles who want to improve their understanding of IT to enhance their skills and contribute more effectively in a technical environment. 4. Beginners Exploring IT Concepts: Anyone curious about IT, considering an IT career path, or wanting to broaden their technical knowledge for personal or professional growth."
      ]
    },
    {
      "title": "ISTQB Foundation Level CTFL V4 Certificate Preparation Exams",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl-v4-certificate-preparation-exams/",
      "bio": "Prepare yourself for the software testing exam: ISTQB Foundation Level CTFL V4.0 certificate. With detailed explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the ultimate ISTQB Foundation Level V4.0 exams / CT-FL (6 Exams / 240 quizzes)\n\n\nThese exams are perfectly aligned with the official ISTQB Foundation Level V4 test in every aspect. Moreover, they are accompanied by meticulously explained answers, not only challenging your software testing knowledge but also enhancing your readiness and preparation for the CTFL V4 certificate exam.\n\n\nWhat is the structure of these exams?\n6 exams mimicking the real ISTQB Foundation Level [ CT-FL ] V4 exam\nEach exam with 40 quizzes covering the official exam structure\nQuestion distribution across each exam matches the ISTQB standards\nThe same 1-hour limit of the official exam\n\n\nWhat is so special about these exams?\nOur exams mimic the same topic distribution per exam structure\nOur exams mimic the same K-difficulty level related to each topic\nOur exams mimic the real ISTQB exams in every aspect. From the language used, style, and structure of questions\nOur exams are based on the new ISTQB Foundation Level V4.0 syllabus. Built from scratch, not re-updated from previous versions\n\n\nHow are these exams written?\nOur exams are written by a group of certified ISTQB QA experts in the field of software testing\nA clear explanation and rationale of the correct answer accompany all questions, including tables, diagrams, and illustrations\n\n\nTarget audience:\nThis course is designed for those who are willing to take the Software Testing ISTQB Foundation Level V4 exam. However, anyone who desires to evaluate their knowledge base in software testing is more than welcome to take the exams and practice challenging quizzes. These Foundation Level exams cover the fundamentals of software testing, so they  serve as a good reference for self-evaluation\n\n\nNote:\nMake sure to try both \"Exam mode\" and \"Practice mode\". Both are great for your software testing exam preparation.\n\n\nExam Mode: Challenge yourself against the clock. You can study the answers after finishing the software testing exam.\nPractice Mode: Answer one question, then review your answer against the model answer, and then move on to the next question\n\n\nRecommended use cases:\nExam Mode: Assess your overall understanding of the different aspects of software testing in general, and estimate your success rate when it comes to the official ISTQB CT-FL V4 test.\nPractice Mode: Learn as you go! This will give you a very comprehensive understanding of software testing and the ISTQB Foundation Level certificate requirements to pass the exam and become a successful software tester.",
      "target_audience": [
        "Students willing to take the ISTQB Foundation Level V4.0 Exam.",
        "Software testers and developers curious to challenge their knowledge about software fundamentals."
      ]
    },
    {
      "title": "Automation Using Ansible on AWS (Aug 2023)",
      "url": "https://www.udemy.com/course/automation-using-ansible-on-aws/",
      "bio": "Configure and Deploy using Ansible with Hands On Coding Exercises !",
      "objectives": [
        "Introduction to Ansible and its Features",
        "Architecture of Ansible",
        "Installation and configuring Ansible",
        "Understanding of Ansible Inventory",
        "Ansible host Inventory File and Manual Inventory",
        "Introduction to Ansible Modules and working with Database Modules",
        "Ansible Adhoc commands",
        "Understanding of Ansible Playbook and writing a Playbook",
        "Illustration of Ansible Role",
        "Variables, loops and conditions in Ansible Playbook"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Ansible": [
          "Lesson 01: Introduction to Ansible",
          "Practice 1-1: Installation and Configuration of Ansible",
          "Quiz on Introduction to Ansible"
        ],
        "Introduction to Ansible Inventory": [
          "Lesson 02: Introduction to Ansible Inventory",
          "Practice 2-1: Editing Host Inventory File",
          "Practice 2-2: Create Manual Inventory File in Controller node",
          "Quiz on Introduction to Ansible Inventory"
        ],
        "Ansible Modules and Adhoc commands": [
          "Lesson 03: Ansible Modules and Adhoc commands",
          "Practice 3-1 : Working with Shell Module using Adhoc commands",
          "Practice 3-2 : Package Managing with Adhoc command",
          "Practice 3-3 : Create and Manage User using Adhoc command",
          "Practice 3-4 : Adding MySQL DB to a Remote Host",
          "Quiz on Ansible Modules and Adhoc Commands"
        ],
        "Write an Ansible Playbook and Configure Machine": [
          "Lesson 04: Write an Ansible Playbook and Configure Machine",
          "Practice 4-1: Write an Ansible Playbook and Configure Machine",
          "Practice 4-2 : Create a node as Webserver and deploy a Sample Web Application",
          "Quiz on Ansible Playbook and Machine Configuration"
        ],
        "Role, Loop and Condition in Ansible Playbook": [
          "Lesson 05: Role, Loop and Condition in Ansible Playbook",
          "Practice 5-1: Add Users using Ansible Loop",
          "Practice 5-2 : Use of Conditional in Ansible Playbook",
          "Practice 5-3 : Install MEAN Stack using Ansible Role",
          "Quiz on Role, Loop and Condition in Ansible Playbook"
        ],
        "Case Study": [
          "Lesson 06: Case Study",
          "Case Study"
        ]
      },
      "requirements": [
        "Basic Cloud Infrastructure Concepts",
        "Working Knowledge on AWS Cloud",
        "Basic Linux Commands"
      ],
      "description": "Ansible is an open-source automation tool or platform, used for IT tasks such as application deployments, configuration management, service Orchestration and provisioning.\nIn this course, you will learn the fundamentals of how Ansible functions, how to install and configure Ansible. The understanding of Architecture of Ansible and its advantages, prerequisites for Ansible to install and configure, understanding of Ansible Inventory, Ansible host & Manual Inventory, Advantages of Inventory file in Ansible, Editing of Host Inventory File, brief understanding of Dynamic Inventory, introduction to Ansible Modules, further Working with Database Module, Package Managing with Adhoc command, Ansible Adhoc commands, Adding MySQL DB to a Remote Host, Working with Shell Module using Adhoc commands, to Create and Manage User using Adhoc command and further Adding MySQL DB to a Remote Host.\nIntroduction to Ansible Playbook, write a Playbook and illustration of Ansible role, to Create a node as Webserver and deploy a Sample Web Application, Install MEAN Stack using Ansible Role, Variables, loops and conditions in Ansible playbook. Brief introduction to Exception handling and further the case study is illustrated to understand the integration of Terraform, Ansible, Jenkins and GitHub in the AWS EC2 instance where it first connects to the Jenkins and access the GitHub repository for script file to create the ec2 instance from the Terraform code and configure it by installing the Apache from the Ansible playbook.",
      "target_audience": [
        "Cloud Administrators",
        "DevOps Developers",
        "DevOps Engineers",
        "Cloud Engineers",
        "Cloud Architects"
      ]
    },
    {
      "title": "Become A Part Time Tester From Home With Software Testing",
      "url": "https://www.udemy.com/course/testing-software-from-homepart-time-tester/",
      "bio": "Learn effective ways of becoming part-time software tester/QA tester to work from home.",
      "objectives": [
        "Earn money testing software applications from home",
        "Become a part-time software tester"
      ],
      "course_content": {
        "Introductory": [
          "Introduction to Software Testing"
        ],
        "Software Testing Fundamentals": [
          "Must needed basics of Software Testing",
          "SDLC"
        ],
        "Sharing my 10 years experience: Effective ways of earning extra as part-time QA": [
          "Effective platforms for working as a Software Tester from home",
          "Make us of Other conventional platforms to get remote/part-time QA projects"
        ],
        "Test Cases and Test Plans": [
          "How to write standard test cases and test plans",
          "Continuing on writing test cases and test plans",
          "Finalizing test cases and test plans"
        ]
      },
      "requirements": [
        "No prior remote work experience required",
        "No prior Software Testing skills required"
      ],
      "description": "Are you already working as a full-time software tester/QA tester? or Are you looking into starting your career in software testing? How about generating some extra income every month by testing remote software apps from home? If this sounds like something you always wanted to do, then this is the right course for you. I have put together my 10 years of QA experience and sharing the secret and many unknown ways of earning extra money from home by becoming a part-time software tester from home. Make use of your free time and software testing skills and get paid to test websites and mobile applications remotely at your convenience.\nQuality Assurance is a must need in today's era of technology. Meeting the expected quality of an application has become an essential factor for organizations. This is where software development and software testing concepts come into play. Organizations need to follow certain quality assurance standards in order to survive in the market competition. It is must required to understand software development life cycle before executing software testing concepts. We often ignore software testing fundamentals and manual testing concepts which is hugely harmful. IT professionals can never reach the expected level of success without a strong foundation in software development and software testing concepts. Also, it has not been easy to find project oriented and real-time training in software testing fundamentals. However, we all need to learn the basics of quality assurance and testing before jumping into any sort of automation. In this course, we took a hands-on and step by step approach to make it easier for IT professionals to master software testing core concepts. This course includes basic and advanced QA training videos with practical examples of different aspects of testing including software development life cycle (SDLC), overview of specific roles and real-time work environment for a software tester, different types of testing, creating comprehensive test plans, and test cases.",
      "target_audience": [
        "Software Test Analysts",
        "Beginners in the quality assurance field"
      ]
    },
    {
      "title": "Playwright & Python Automation Framework From Zero to Hero",
      "url": "https://www.udemy.com/course/playwright-python-automation-framework-from-zero-to-hero/",
      "bio": "Go from beginner to expert step-by-step by creating a full-featured Playwright test automation framework with Python",
      "objectives": [
        "Build a scalable, professional-grade Playwright automation framework in Python",
        "Understand the “why” behind each automation design decision – not just the “how\"",
        "Master Data-Driven Testing, POM and Factory Pattern for cleaner, smarter tests",
        "Set up fixtures, reusable components, and smart logging for maintainability",
        "Produce test reports that impress your team using Allure Reporting",
        "Walk away with a ready-to-use automation infrastructure – suitable for real job tasks and interview challenges"
      ],
      "course_content": {
        "Introduction": [
          "Welcome – Your Journey to Automation Mastery Starts Here",
          "How to Get the Most Out of This Course"
        ],
        "Project Structure & Architecture": [
          "Designing a Solid Project Architecture",
          "Building the Project Skeleton in PyCharm"
        ],
        "Project Configuration & Smart Defaults": [
          "Configuration That Actually Works – Setting Up for a Smooth Workflow",
          "Pytest.ini Explained – Set the Rules for Your Test Environment",
          "requirements.txt – Managing Your Dependencies Like a Pro",
          "Writing a README That Makes You Look Good",
          "Configuration & Project Setup"
        ],
        "Building the Core – The Heart of Your Automation Framework": [
          "Laying the Foundation – Base Structure and Testing Principles",
          "Pseudocode Planning – Designing Your Base with Purpose",
          "Coding the Base – Bringing the Core to Life",
          "Logging & Screenshots – Improve Test Reporting",
          "Fusing Utilities into the Base – Making Your Framework Smarter",
          "Building the Core – Base Class, Logging & Utilities"
        ],
        "Page Object Model (POM) – Design Patterns for Clean Automation": [
          "Why POM Matters – Cleaner Code, Better Tests",
          "Planning Your Page Objects – Think Before You Code",
          "Implementing POM – Create a Real Login Page Object",
          "Mastering Page Object Model (POM) – Clean Design, Better Automation"
        ],
        "Writing Smart Tests – Strategies for Powerful, Reliable Automation": [
          "Test Design – From TDD Mindset to Real Automation",
          "From Logic to Code – Planning Real Test Scenarios",
          "Smarter Test Setup with Fixtures",
          "Creating Powerful Tests – Writing Your First Real Test Case",
          "Validations That Matter – Make Your Tests Count (Part 1)",
          "Validations That Matter – Make Your Tests Count (Part 2)",
          "Data-Driven Testing (DDT) – Power Through Parameters (Part 1)",
          "Data-Driven Testing (DDT) – Advanced Techniques (Part 2)",
          "Writing Smart Tests – Real Strategies, Real Scenarios"
        ],
        "Running Tests & Creating Reports That Impress": [
          "Smart Test Execution – From IDE to Real Runs",
          "Debug Like a Developer – Breakpoints & Smart Analysis",
          "Generate Stunning Reports with Allure"
        ],
        "Course Wrap-Up – Where to Go From Here": [
          "end"
        ]
      },
      "requirements": [
        "Basic knowledge of Python – you should feel comfortable reading and writing very simple code",
        "Familiarity with test automation concepts and locating web elements is helpful, but not mandatory",
        "Some understanding of OOP principles is a plus (not required, but encouraged)",
        "No prior experience with Playwright is needed – we cover everything step-by-step",
        "A working Python environment (e.g., PyCharm) installed on your machine"
      ],
      "description": "Playwright & Python Automation Framework From Zero to Hero\nCourse Overview\nLearn how to build a scalable, maintainable test automation framework from scratch using Playwright and Python. This course takes you on a practical journey through real-world automation techniques, combining hands-on coding with just enough theory to understand why things are done. By the end, you will have developed a professional-grade web UI test framework similar to those used by real automation teams. The approach is direct and practical – we focus on writing actual tests and framework components, not slides or fluff. (Note: Basic Python knowledge and familiarity with web element selectors are recommended. If you have no coding experience at all, you may find the course challenging at first, but it's entirely possible to follow along and succeed with dedication.)\nWhat You'll Learn\nBuild a Full Test Automation Framework: Start from an empty project and step-by-step construct a complete Playwright-based framework. You’ll set up Playwright with Python, configure Pytest, and create a modular test structure from the ground up.\nDesign Maintainable Test Architecture: Organize your code using proven practices (like page objects and utility modules) so that tests are easy to read and extend. The framework will be modular and reusable, avoiding hard-coding and duplication.\nImplement Advanced Testing Features: Enhance your tests with robust fixtures for setup/teardown, logging and screenshots on failure for easier debugging, and data-driven testing to run the same test with multiple inputs.\nReporting and Analysis: Integrate Allure Reports to generate beautiful, detailed test reports. You’ll learn how to capture test results, attach screenshots, and produce reports that help analyze failures and track test history.\nBest Practices and Professional Tips: Along the way, master fundamental best practices of automation. This includes writing clear assertions, handling waiting and timing issues, organizing test data, and structuring your project in a way that scales as your test suite grows.\nWhy Automation Testing?\nModern software delivery demands fast, reliable testing. Automation is crucial for running repetitive checks efficiently and consistently. It reduces human error and saves time by running tests unattended, anytime. In fact, test automation enables more consistent and thorough testing, greatly reducing the number of bugs that reach production. Rather than spending hours on manual regression tests, teams can run automated suites in minutes, catching issues early and freeing up people to focus on new features. This results in higher-quality software and confidence in every release. It’s no surprise that automated testing is now one of the most in-demand skills in the tech industry, valued by companies looking to accelerate their development cycles without sacrificing quality.\nWhy This Course?\nPlaywright & Python Automation Framework From Zero to Hero is designed for testers and developers who want to deliver real automation work in their projects or teams. Unlike basic tutorials that just show simple examples, this course dives into building something production-grade. If you are a manual tester or QA looking to elevate your skill set, this course will bridge the gap from knowing a bit of Python to building a fully-fledged automation suite. If you’re already an automation engineer or developer, you’ll gain a structured approach to building frameworks and learn Playwright (a modern, powerful browser automation tool) in depth. The content is practical and hands-on – each module you build is immediately used in real tests, solidifying your understanding.\nWe also explain the “why” behind the “how.” For each framework component or design decision, the course provides a brief theoretical background or reasoning. This way, you’re not just copying code, but truly understanding concepts like why use fixtures for browser setup, why organize tests in a certain way, or how logging improves maintainability. This blend of practice and theory ensures that you can adapt the framework to your own needs and make informed decisions in real-world scenarios.\nCourse Content Highlights\n1. Building a Modular Framework: Learn to structure your project with a focus on clarity and reuse. We’ll create a base setup (using Pytest fixtures for tasks like launching a browser or navigating to a base URL before each test). You’ll organize locators and actions, potentially using a Page Object Model approach , so that page-specific logic is separated from test logic. This makes the test code cleaner and the framework easy to expand as you add more tests.\n2. Implementing Reusable Components: Create utility functions and helper classes for common actions. We ensure that your framework isn’t just a collection of scripts, but a robust toolset. You’ll implement logging throughout the framework to track test steps and failures, which is vital when running many tests. When a test fails, the framework will automatically capture a screenshot and log the details using a SafetyNet mechanism within the BasePage that we will create.\n3. Data-Driven Testing: Discover how to run the same test with multiple sets of data without rewriting code. We’ll use Pytest features (like @pytest.mark.parametrize) to supply different inputs to a single test, enabling broad coverage with minimal code changes.\n4. Allure Reporting Integration: One hallmark of a professional framework is good reporting. You will integrate Allure – a popular open-source reporting tool – into the test run. This means that every test execution will generate an HTML report with detailed steps, logs, and screenshots attached for any failures. We guide you through setting up Allure, configuring Pytest to work with it, and customizing the report outputs (like adding metadata or descriptions to tests) to make results easy to interpret. The outcome is an interactive report where you can click on a failed test and see exactly what went wrong, which is incredibly useful in a team setting.\n5. Putting It All Together: Towards the end, we’ll finalize the framework by cleaning up code, applying best practices, and writing a small suite of example test cases to demonstrate the framework’s capabilities. We discuss how to organize tests for scalability (for example, grouping by feature or test type), and how to maintain the framework as it grows. You’ll also get tips on how to deal with common issues, like tests that flicker (flaky tests) and strategies to keep them stable.\nWho Should Enroll\nQA Engineers / Testers\nSDET / Automation Engineers\nDevelopers\nTest Leads/Managers\nPrerequisites: Comfortable with basic Python (functions, variables, loops) and familiarity with web testing concepts like DOM elements and selectors (e.g., IDs, CSS selectors, or XPaths). No prior Playwright experience needed – we start from basics.\nBy the End of the Course\nBy the end, you’ll confidently build and contribute to real-world automation frameworks, mastering Playwright and Python skills essential for modern test automation.",
      "target_audience": [
        "Manual testers and QA engineers who want to break into automation and work on real-world frameworks",
        "Automation developers looking to master Playwright with Python and write cleaner, more scalable tests",
        "Testers with basic coding experience who are ready to build a strong automation foundation from scratch",
        "Developers assigned to automation tasks who need a fast, practical path to success",
        "Anyone who wants to build a solid, maintainable test automation infrastructure – but doesn’t know where to start",
        "Professionals who want to learn proven industry techniques for creating robust, reliable, and scalable automation",
        "Curious learners who want to understand not just how to automate, but how to design it the right way"
      ]
    },
    {
      "title": "Postman-Master API Testing: REST, GraphQL + CI Integration",
      "url": "https://www.udemy.com/course/sariful_postman/",
      "bio": "API testing from scratch with Postman (Latest V11) using REST, GraphQL APIs with hands-on projects",
      "objectives": [
        "Will learn basic APIs fundamentals concept",
        "Types of APIs & key elements of REST API",
        "Able to Set up Postman and its interface",
        "Understand GET, POST, PUT, DELETE Requests",
        "Collections in Postman",
        "Environments & Variables and their Scope",
        "Will learn JavaScript basics for API automation testing",
        "Validating Json responses",
        "Writing comprehensive test scripts and assertions",
        "Data Driven Testing in Postman",
        "Running tests through CLI with Newman",
        "Generating detailed html test reports",
        "CI integration in Jenkins",
        "Team collaboration with Postman",
        "Learn OAuth 2.0 and test in Postman",
        "Understanding GraphQL API & Testing",
        "Last but not least- AI assistance (Postbot) in Postman",
        "**By the end of this course, You will gain hands-on experience with end-to-end projects"
      ],
      "course_content": {
        "Course Introduction & Basic API concept": [
          "**Course outline** (Must Watch)",
          "Understand Web technology: Client & Server",
          "Generic Architecture to build a Web App",
          "Types of Database layer",
          "What is API? How does API work?",
          "Why do we need to test API?"
        ],
        "Understand API terminologies": [
          "Types of APIs: SOAP vs REST",
          "Learn REST API terminologies",
          "Define Path and Query parameters in API",
          "Understand Restful HTTP methods",
          "More API contents: Request Headers, Request/Response Body, Status Codes",
          "Quick Reminder: Please Write a Review"
        ],
        "Getting started with Postman": [
          "Postman installation step-by-step",
          "Surface on Postman interfaces"
        ],
        "Practice Section: Get request test in Postman": [
          "How to test Get request and write automation Script?",
          "How to find the correct Jason path from a response",
          "Quiz-Test What You've Learned!"
        ],
        "Practice Section: Post, Put & Delete request test in Postman": [
          "Test Post request and write automation script",
          "Test valid login scenario",
          "Test invalid login scenario",
          "Test Put request in postman",
          "Test Delete request in postman",
          "Learn how to write test script in Postman",
          "Quick Reminder: Please Write a Review",
          "Quiz-Test What You've Learned!"
        ],
        "Importance of Environments & Variables": [
          "Understand Environment & Variable in Postman",
          "Setup Environment & Variable with examples",
          "Quiz-Test What You've Learned!"
        ],
        "Practice Section: Data Driven Test (Read data from Excel files (CSV) or JSON)": [
          "Data-Driven Testing & Parameterization in Postman",
          "Quick Reminder: Please Write a Review",
          "Quiz-Test What You've Learned!"
        ],
        "Run Collection through CLI": [
          "Run Collections manually by Postman",
          "Install Node JS to setup environment",
          "What is Newman? Steps to install Newman",
          "Run Collections through CLI & generate Newman HTML report",
          "Share Collections & Run Remotely",
          "Quiz-Test What You've Learned!"
        ],
        "Collection integrate with CI tool": [
          "Understand Jenkins & Setup on local machine",
          "Create Jenkins job & run Collection",
          "Run Collection on schedule"
        ],
        "Step-by-Step: API testing using Mock Server in Postman": [
          "What is Mock Server in API Testing?",
          "Demo-API Examples",
          "Create Get Request for Edge Cases & Error Scenarios in Postman",
          "Create Mock Server & Set Environment Variable in Postman",
          "Test Edge Cases and Error Scenarios",
          "Add Automation Scripts & Run Collection",
          "Quick Reminder: Please Write a Review"
        ]
      },
      "requirements": [
        "Basic programming and/or JavaScript knowledge",
        "No prior API knowledge",
        "Everything will learn as you need"
      ],
      "description": "\"Postman-Master API Testing: REST, GraphQL + CI Integration\" is a comprehensive course designed for both beginners and professionals from scratch to learn efficient API testing and automation using Postman. Through hands-on exercises, learners will explore REST and GraphQL api testing, automate workflows, integrate with CI tools, and apply best practices to streamline and enhance software quality.\n\n\nLet's break down our course details What you'll learn:\nUnderstand Web/API fundamental technologies\nTypes of APIs & key differences\nRestful HTTP methods\nPostman Setup & interfaces\nGet, Post, Put & Delete requests & performing test in Postman\nValidating Json responses\nWriting automation test scripts and assertions in Postman\nBasic JavaScript for Postman\nParsing complex Json responses\nEnvironment & Variable in Postman\nData-Driven Testing & Parameterization\nWhat is Newman? Steps to install Newman\nRunning tests through CLI (command prompt)\nGenerate detailed Newman-html-reporter\nShare Collection & Run Remotely\nRun Collection on schedule\nUnderstand Jenkins & Setup on local machine\nIntegration Collection to Jenkins for CI Integration\nAPI testing with Mock Server in Postman\nLearn OAuth 2.0 with real examples and  test in Postman\nLearn GraphQL API: Schema & Architecture\nKey differences: GraphQL vs Rest API\nRun and Test GraphQL API in Postman\nFrequently asked API Interview Q&A's\nPostman AI assistance (Postbot)\n\n\nBy the end of this course, you'll confidently master on Postman for API testing.\nReady to level up your skills? Enroll now and get started!",
      "target_audience": [
        "Fresh Graduate",
        "Computer Science Students",
        "Manual or Automation QA",
        "API Tester"
      ]
    },
    {
      "title": "Foundations of Agile Software Testing",
      "url": "https://www.udemy.com/course/foundations-of-agile-software-testing-j/",
      "bio": "Agile Software Testing",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Testing Objectives and Terminology": [
          "Testing Objectives",
          "The Cost of Quality",
          "Testing Terminology"
        ],
        "The Testing Lifecycle": [
          "Where Does Testing Fit Within Projects?",
          "The Testing Lifecycle",
          "Sections 1, 2 and 3 Review"
        ],
        "The Agile Testing Center of Excellence (TCOE)": [
          "The Agile TCOE"
        ],
        "Testing Roles, Activities and Artifacts": [
          "Testing Roles",
          "Testing Activities",
          "Testing Artifacts"
        ],
        "Acceptance Criteria, Test Cases and Requirements Traceability": [
          "Acceptance Criteria, Agile Test Cases and Requirements Traceability",
          "Sections 4,5 and 6 Review"
        ],
        "Testing Phases and Testing Types": [
          "Testing Phases",
          "Testing Types"
        ],
        "Agile Test Estimation, Sprint Test Planning and Sprint Test Execution": [
          "Agile Test Estimaton",
          "Agile Test Planning",
          "Agile Test Execution",
          "Sections 7, 8 Review"
        ],
        "Agile Defects and the Definition of Done": [
          "Agile Defects and the Definition of Done"
        ],
        "Agile Test Metrics and Reporting and Testing Tools": [
          "Agile Test Metrics and Reporting",
          "Testing Tools",
          "Sections 9, 10 Review"
        ]
      },
      "requirements": [
        "Some basic exposure to software testing would be helpful"
      ],
      "description": "The Foundations of Agile Software Testing course presents an introductory overview of agile software testing and compares waterfall, iterative and agile methodologies. This course introduces students to the high level concepts of agile software testing including testing objectives and terminology, testing lifecycle, roles, activities and artifacts, test phases and types, agile acceptance criteria and test cases, agile estimation, sprint test planning and execution, defect management, agile test metrics and testing tools.\nThis course is divided into 9 sections and includes review quizzes covering each section. Downloadable hand-outs are available for several lectures to be used as reference material after the course.\nOur goal is to create courses that are very practical so that you can use what you have learned in you day to day project work in agile teams.",
      "target_audience": [
        "Students who are wanting to enter the Software Testing Profession or are already Software Testers and are transitioning to Agile."
      ]
    },
    {
      "title": "Functional Testing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/functional-testing-interview-questions/",
      "bio": "Functional Testing Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Functional Testing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for a Functional Testing interview? Do you want to enhance your skills and boost your confidence with real-world scenarios? Look no further! Our course, \"Comprehensive Functional Testing Interview Questions Practice Test,\" is designed to help you master the essential topics and ace your interviews with ease.\nOur course is meticulously crafted to cover every aspect of Functional Testing, ensuring you gain a thorough understanding and can confidently tackle any interview question. Divided into six comprehensive sections, each with six subtopics, this course provides a deep dive into the critical areas of Functional Testing. Whether you are a beginner or an experienced tester, our practice tests will help you polish your skills and get ready for your dream job.\n\n\nSection 1: Basics of Functional Testing\n1. Introduction to Functional Testing\nWhat is Functional Testing?\nImportance of Functional Testing in the software development lifecycle.\nGoals and objectives of Functional Testing.\n2. Types of Functional Testing\nUnit Testing\nIntegration Testing\nSystem Testing\nAcceptance Testing\nEnd-to-End Testing\nRegression Testing\n3. Functional vs. Non-Functional Testing\nKey differences between Functional and Non-Functional Testing.\nExamples and scenarios highlighting these differences.\n4. Test Planning\nSteps involved in creating an effective Functional Test Plan.\nImportance of Test Planning in ensuring thorough coverage.\nCommon pitfalls and how to avoid them.\n5. Test Design Techniques\nBoundary Value Analysis\nEquivalence Partitioning\nDecision Table Testing\nState Transition Testing\nUse Case Testing\nExploratory Testing\n6. Test Case Development\nWriting effective test cases.\nDeveloping comprehensive test scenarios and use cases.\nBest practices for test case documentation.\n\n\nSection 2: Test Management\n1. Test Management Tools\nOverview of popular Test Management Tools (e.g., JIRA, TestRail).\nFeatures and benefits of using Test Management Tools.\nHow to choose the right tool for your project.\n2. Test Execution\nStrategies for effective Test Execution.\nScheduling and prioritizing test cases.\nHandling test execution in different environments.\n3. Defect Life Cycle\nUnderstanding the Defect Life Cycle.\nDefect reporting and tracking processes.\nEffective communication in defect management.\n4. Risk Management in Testing\nIdentifying potential risks in testing.\nTechniques for risk assessment and mitigation.\nImportance of risk management in ensuring quality.\n5. Test Reporting\nKey elements of a comprehensive test report.\nHow to create meaningful and actionable test reports.\nUsing test reports to drive decision-making.\n6. Test Closure Activities\nCriteria for Test Completion.\nPost-test activities and their significance.\nLessons learned and continuous improvement.\n\n\nSection 3: Advanced Testing Techniques\n1. Exploratory Testing\nConcepts and benefits of Exploratory Testing.\nTechniques for effective Exploratory Testing.\nWhen and how to use Exploratory Testing.\n2. API Testing\nIntroduction to API Testing.\nTools and frameworks for API Testing (e.g., Postman, Swagger).\nBest practices for API Testing.\n3. Database Testing\nTechniques for validating databases.\nEnsuring data integrity through effective Database Testing.\nTools and strategies for Database Testing.\n4. Security Testing Basics\nIntroduction to Security Testing.\nKey concepts and importance of Security Testing.\nCommon vulnerabilities and how to test for them.\n5. Performance Testing Considerations\nUnderstanding Performance Testing in the context of Functional Testing.\nIdentifying performance bottlenecks.\nTools and techniques for Performance Testing.\n6. Automation in Functional Testing\nBenefits of automating Functional Tests.\nOverview of popular Automation Tools (e.g., Selenium, Cypress).\nDeveloping and maintaining automated test scripts.\n\n\nSection 4: Test Automation\n1. Selecting Automation Tools\nCriteria for selecting the right Automation Tool.\nComparison of different Automation Tools.\nCase studies and examples.\n2. Building an Automation Framework\nKey components of an Automation Framework.\nArchitectures and design patterns for Automation Frameworks.\nBest practices for developing a robust Automation Framework.\n3. Scripting Languages for Test Automation\nOverview of popular scripting languages (e.g., Python, JavaScript).\nAdvantages and disadvantages of each language.\nTips for writing efficient automation scripts.\n4. Test Data Management in Automation\nImportance of Test Data in Automation.\nStrategies for generating and managing Test Data.\nTools and techniques for Test Data Management.\n5. Continuous Integration and Continuous Deployment (CI/CD)\nRole of CI/CD in Test Automation.\nSetting up CI/CD pipelines for automated testing.\nBenefits and challenges of CI/CD integration.\n6. Challenges in Test Automation\nCommon challenges faced in Test Automation.\nStrategies to overcome these challenges.\nEnsuring the success of Automation efforts.\n\n\nSection 5: Agile and DevOps in Functional Testing\n1. Agile Testing Strategies\nRole of testing in Agile development.\nAgile testing methodologies and best practices.\nCollaboration between testers and developers in Agile.\n2. Scrum and Testing\nIntegrating testing in the Scrum framework.\nImportance of continuous testing in Scrum.\nTechniques for effective Scrum testing.\n3. DevOps and Continuous Testing\nPrinciples of DevOps and Continuous Testing.\nPractices for implementing Continuous Testing in DevOps.\nBenefits of DevOps for Functional Testing.\n4. Test-Driven Development (TDD) and Behavior-Driven Development (BDD)\nConcepts of TDD and BDD.\nDifferences and similarities between TDD and BDD.\nImplementing TDD and BDD in Functional Testing.\n5. Testing in Continuous Delivery\nBest practices for testing in Continuous Delivery environments.\nStrategies for ensuring quality in rapid release cycles.\nTools and techniques for Continuous Delivery testing.\n6. Quality Assurance in Agile and DevOps\nEnsuring quality in Agile and DevOps practices.\nRole of QA in Agile and DevOps.\nContinuous improvement in QA processes.\n\n\nSection 6: Emerging Trends and Technologies\n1. Artificial Intelligence and Machine Learning in Testing\nApplications of AI and ML in testing.\nBenefits and challenges of using AI and ML for testing.\nFuture trends in AI and ML for Functional Testing.\n2. Cloud-Based Testing\nAdvantages of Cloud-Based Testing.\nTools and platforms for Cloud-Based Testing.\nBest practices for testing in the cloud.\n3. Mobile Testing\nChallenges of Mobile Testing.\nStrategies for effective Mobile Testing.\nTools and frameworks for Mobile Testing.\n4. Internet of Things (IoT) Testing\nApproaches to IoT Testing.\nComplexity and challenges of IoT Testing.\nTools and techniques for IoT Testing.\n5. Big Data Testing\nUnderstanding Big Data Testing.\nTechniques for testing large datasets.\nTools and frameworks for Big Data Testing.\n6. Virtual Reality (VR) and Augmented Reality (AR) Testing\nTesting in immersive environments.\nStrategies for VR and AR Testing.\nTools and techniques for VR and AR Testing.\n\n\nGet Started Today!\nDon't miss this opportunity to enhance your skills and advance your career. Enroll now in our \"Comprehensive Functional Testing Interview Questions Practice Test\" course and take the first step towards acing your next interview!",
      "target_audience": [
        "Aspiring IT professionals who are looking to break into the field of software testing and want to get a head start on functional testing concepts.",
        "Experienced testers seeking to deepen their knowledge of functional testing and stay updated with the latest trends and technologies.",
        "Software developers who wish to understand the testing perspective to improve their coding quality and work more effectively with testers.",
        "Quality Assurance specialists aiming to enhance their test management and execution skills, as well as learn advanced testing techniques.",
        "Project managers and team leads in the IT industry who need to oversee testing activities and ensure their teams are up-to-date with current testing practices.",
        "Students and recent graduates in computer science or related fields who want to add practical testing skills to their theoretical knowledge base.",
        "Anyone preparing for job interviews related to software testing, as this course provides a solid foundation of practice questions that reflect real-world scenarios."
      ]
    },
    {
      "title": "Intro to Manual and Automated API testing with Postman",
      "url": "https://www.udemy.com/course/introduction-to-api-testing-for-beginners/",
      "bio": "The first step on the long, difficult and controversial path of API testing using Postman for Beginners",
      "objectives": [],
      "course_content": {
        "API testing theory": [
          "What is the REST API?",
          "REST and REST Architectural Constraints",
          "Client server architecture",
          "Anatomy of an HTTP Request",
          "Anatomy of an HTTP Response"
        ],
        "the API testing tools": [
          "Postman Fundamentals"
        ],
        "Coffee Break": [
          "Coffee Break"
        ],
        "the API testing practice": [
          "How to Test the API for the first time",
          "Exploratory testing of GET endpoint",
          "How to automate API Tests with Postman"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "No prior specialized knowledge is required",
        "No programming experience needed",
        "Desire to learn APIs",
        "Thirst for knowledge"
      ],
      "description": "API testing is a very contradictory topic. And it happens that you worked for years as a Manual tester and never faced the APIs or had a need to test those. But it can change at any moment.\nLet's imagine the scenario. You passed an interview at a new company. You are a good person and they are good people. They liked you and they liked you. Even more, they offered good money.\nDuring the interview, they said that the project is very cool and that you already know everything to start work. That the project has excellent documentation and a cool team, and all SCRUM processes are perfectly implied.\nTwo weeks have passed. And it's your first working day at your new job. You receive a letter from the manager. He congratulated you and says that you were expected and advertised a lot. That you are a testing expert. And in the email, he sends the user story. He says that she should be tested tomorrow. But since you are an expert, it will not cause difficulties.\nYou are the expert. That is true. So you check the story.\nAnd you do not understand a single word there. In the story, a lot of things have been mentioned some endpoints, base URLs, JSON body, HTTP response code, and CURL. And all of this is new to you. You have never worked on the API level. But do you need to finish testing by tomorrow? What are you going to do?\nYou are the expert!\nYou will test the story with the help of this course!\nEven more, you will have time for a cup of coffee!",
      "target_audience": [
        "Manual testers who need to learn how to test APIs ASAP",
        "People who can't imagine their life without REST APIs",
        "People who love coffee"
      ]
    },
    {
      "title": "Azure DevOps Build Pipelines: Run Windows UI Automation & CI",
      "url": "https://www.udemy.com/course/windows-ui-automation-on-azure-devops-build-pipelines/",
      "bio": "Learn Azure DevOps Pipelines (incl. YAML) on Azure Git Repos to run WinAppdriver Windows Test Automation in C# .Net",
      "objectives": [],
      "course_content": {
        "Introduction and initial setup": [
          "Course Outline - What to expect from this course",
          "Enable Windows 10 Developer Mode to run WinAppDriver Automation",
          "Installing Visual Studio Build Tools on Your Test Machine",
          "Installing and testing WinAppDriver on a Testing Machine",
          "Installing Visual Studio on a Developer Machine",
          "Getting started with Azure DevOps, Creating an Organization, TFVC Repo, Project"
        ],
        "Self Hosted Azure Build Agent installation, Generating PAT & Agent Configuration": [
          "Downloading & Configuring Azure DevOps Build Agent on a Test Machine",
          "Generating a Personal Access Token (PAT), Completing Azure Agent Configuration"
        ],
        "Creating an Azure DevOps Build Pipeline with TFVC for running UI Automation": [
          "How to Setup a Code Repository in Azure Repos using TFVC",
          "Introduction to setting up a Build Pipeline with Azure DevOps",
          "An overview of .Net Desktop Build Template and Tasks",
          "Running an Azure DevOps Build Pipeline and WinAppDriver based UI Test Automation",
          "Exploring Test Run Results After Running an Azure DevOps Build Pipleline",
          "Enabling CI in a Azure DevOps Build Pipeline Tutorial",
          "Run PowerShell Script in Azure DevOps Build Pipeline Task"
        ],
        "Creating a Git & YAML based pipeline with AzureRepos Git": [
          "Creating a Git Repo on Azure Repos Git to Store Code and Committing Code",
          "Creating a YAML based pipeline for a Git based Repo",
          "Editing your scripts and committing to Azure Repos Git"
        ]
      },
      "requirements": [
        "A Windows 10 PC",
        "Visual Studio, .Net Framework, WinAppDriver"
      ],
      "description": "Are you tired of manually deploying your code changes and spending hours on testing and debugging? Then, look no further than Azure DevOps CI/CD pipelines! In this tutorial, we'll walk you through the basics of CI/CD and how to use Azure DevOps to automate your Windows application testing with the process using WinAppDriver and streamline your development workflow. So let's dive in and discover the power of CI/CD with Azure DevOps!\nAzure DevOps makes our lives easier in so many ways. For example, you can run WinAppDriver quickly from Azure DevOps pipelines for test automation. Automated UI Testing is a common strategy for smoke testing and regression testing of legacy Windows applications. Especially with Azure DevOps-powered CI/CD(Continuous Integration/Deployment). Such applications are still widely used by many enterprises and businesses across the globe. Unfortunately, the mobile revolution hasn't been able to dethrone the PC, and Microsoft is still strong in the \"Office\" department. Learn Azure automation quickly.\n\n\nThe problem is that sometimes you have the source code of Windows applications critical to your business's survival, and other times you don't. In such cases, the only option is to perform the application's functional testing through the UI. But, it is an ordinary task, and you might need a tonne of the workforce. In such cases, UI test automation comes in handy.\n\n\nThis course became more vital combined with my other Udemy course about WinAppDriver test automation. You will also learn in this course about Azure Git for free.\nNote: The course also covers YAML Pipelines on Azure DevOps too.\n\n\nThere are several options available for UI test automation, Microsoft itself offered Coded UI in the past, but it is now deprecated. Right now, Microsoft is supporting Windows Application Driver or WinAppDriver, a.k.a WAD, for UI automation of Windows applications. You must be wondering where Azure is. Well, Azure DevOps will fit into this picture later; relax. WinAppDriver is based on Appium, an open-source API conforming to the WebDriver standard. Microsoft WinAppDriver is not open source, but it still has a GitHub repository for documentation.\n\n\nAzure DevOps is the cloud-based offspring of TFS(Team Foundation Server). It continues the legacy of Microsoft's once-on-premise Application Lifecycle Management(ALM) solution. The automation tests are written by software test engineers who often need Visual Studio licenses during test development. Unfortunately, these people are also highly paid, and after developing tests, it's not wise to keep them running test automation scripts on their machines through Visual Studio. In such cases, a low-cost solution is needed where non-code-savvy people can run UI automation tests through a standard tool like Azure DevOps.\n\n\nLearn Azure DevOps because it lets you create a complete infrastructure to support such scenarios. How? That's what this course is all about. First, I'll show you how to set up Virtual Machines to run unattended WinAppDriver and C# based UI test automation through Azure DevOps. I'll also show you how to set up things on Azure DevOps by creating organizations and projects. Finally, the course also shows you how to generate an Azure PAT(Personal Access Token) for security purposes and configure it to minimize its side effects.\n\n\nAzure lets us store code in more than one type of source code repository. The classic one is TFVC which is covered in this course first. Secondly, we have Azure Repos Git. Finally, a Pipeline is a set of tasks that will run the test automation. The UI for TFVC and Git-based pipelines are different; both are explained in this course. Git repositories generate a YAML-based build pipeline. Build channels communicate with an Azure DevOps build agent installed on a machine and configured to work with a specific Azure DevOps organization through a PAT.\n\n\nThere is a shortage of WinAppDriver Azure DevOps Pipelines tutorials. In addition, the WinAppDriver and Azure DevOps tutorials are unclear and don't cover how to use WinAppDriver with examples. So I'm going step by step in this course from start to finish. Everything from installing tools on a test VM and creating an Azure account up to installing devices on developer machines, creating Azure DevOps repositories, and Azure DevOps Pipelines is covered. Special attention is paid to the topics of interest for software testers, such as viewing test run reports.\n\n\nUnderstand how to build Azure DevOps CI CD Pipeline.\n\n\nVarious options for Azure DevOps Test Run reports are explained to you. In addition, supplementary topics like running a PowerShell task to start/stop Windows Application Driver in the build pipeline are also shown.\n\n\nPlease note that Azure DevOps is a highly in-demand skill right now. Microsoft is heavily investing in Azure and achieving significant success in this department. To prepare for the future, learn about Azure, including Azure DevOps and CI /CD.\n\n\nAzure DevOps is a powerful tool that allows developers to collaborate and streamline the software development process. With Azure DevOps, teams can easily manage their code, build and deploy applications, and track their progress through the entire development lifecycle. This comprehensive platform includes features such as version control, continuous integration and delivery, agile project management, and more. With a user-friendly interface and robust functionality, Azure DevOps is a go-to solution for teams looking to improve their development processes and deliver high-quality software faster.\nOf course, this course does not cover other critical Azure features like Azure Boards. I can cover more details in the future based on student demand. It is possible for a user to create bugs and link work items like stories/tasks to the Azure DevOps builds and failures.\n\n\nIt is high time that you start in this direction and starts learning more with practical courses like this one. Learn more about CI and CD, Microsoft Azure DevOps, and source control repositories like Azure Git Repos.",
      "target_audience": [
        "Test automation engineer",
        "Test Automation Engineer (SDET)",
        "Developer",
        "Administrator",
        "Software Quality Assurance Engineer"
      ]
    },
    {
      "title": "2023 Databricks ETL Automation Testing Complete Guide",
      "url": "https://www.udemy.com/course/2023-databricks-etl-automation-testing-complete-guide/",
      "bio": "Hot Open Banking ETL Testing Project on The Current Market Inside Out",
      "objectives": [
        "Get the ready-to-use, practical and powerful big data testing framework and the ISTQB recognized testing capabilities",
        "Get the similar expertise with the front-line data test engineers who earn $200, 000+ yearly",
        "Get the capability of resolving complex ETL testing issues like stability or performance issues, as an expert",
        "Enjoy more free time saved by the ready-to-use automation testing frameworks and tools",
        "Harden your irreplaceability with advanced ETL and ISTQB recognized testing capabilities",
        "Get real open banking ETL testing project experience from scratch and shift-left test approach practice",
        "Maximize your opportunities of switching to data engineers or tester with lots of hands on training"
      ],
      "course_content": {
        "Values We Can Bring to You": [
          "What Values We Can Bring to You?",
          "ETL Testing Process",
          "Tool Set For ETL Testing",
          "More Resources for Learning Tools",
          "Prerequisite For ETL Testing"
        ],
        "Azure Databricks and Cosmos DB Setup": [
          "Azure Databricks Setup",
          "Azure Cosmos DB Setup",
          "Conect Cosmos DB From Databricks",
          "Insert Data into Cosmos DB"
        ],
        "ETL Project Initialization": [
          "Go Through Business Requirement",
          "Analyze Legacy Data Tables",
          "Identify Technical Requirement",
          "High Level Design",
          "Load Sample Data into Delta Tables"
        ],
        "ETL Testing Business Goal and Test Strategy": [
          "Define Test Strategy",
          "Execute Static Testing",
          "Plan Shift-left Automation Test Approach"
        ],
        "Automaton Test Framework and Solution": [
          "Cosmos DB Automation Test Principles",
          "Automation Test Framework Architecture",
          "Test Solution Structure",
          "Data Access Layer Implementation",
          "Initialize Presentation Layer",
          "Presentation Layer Implementation",
          "Generate Test Summary Report",
          "Add Logging Functionality"
        ],
        "Automation Test Solution Practice": [
          "Start First Test Case",
          "Code Refactory",
          "Practice Testing With Framework",
          "Handle Exceptions and Keep Tests Running",
          "Validate Schema",
          "Validate Fields with Common Libraries",
          "Validate Struct Fields",
          "Merge Functions"
        ],
        "Test Summary Report Enhancement and Test Management": [
          "Test Summary Report Enhancement",
          "Add Title For Each Test",
          "Automate Other Tests"
        ],
        "Data Quality Checking and Code Refractory": [
          "Data Quality Check for Enum List",
          "Data Quality Check for UTC dateTime",
          "Data Quality Check for Regex",
          "Data Quality Check for Mandatory Field",
          "Code Refactory"
        ]
      },
      "requirements": [
        "Intermidate level of Programming languages, like Python and SQL",
        "Basic level of SQL and NoSQL databases",
        "Basic concepts for Cloud, Data Warehouse, testing"
      ],
      "description": "Are you thinking of getting higher income for a long time with a short training period? Then, you come to the right place. As you know AI and big data are the driving forces behind Industry 4.0. Data engineer is high-paid role. As the shortage of data engineers continues and the demand for skilled data engineer is soaring. Switching to data testing engineer is one of the best options for your career, which can get higher pay, long-term contracts and less pressure. By joining this course, you will know how the front-line data engineers execute ETL testing with real open banking project from the scratch, get the ready-to-use, practical and powerful ETL testing framework and the ISTQB testing strategy.  So, it will be highly possible to pass your job interview because you really have the similar capabilities with data testing engineers who earn $200, 000+ yearly and be able to resolve complex ETL testing issues on your own after this course.\n\n\nIf you are already a data testing engineer, this course will sharpen your ETL skills. This course can free yourself via saving huge amount of computing time and cost during ETL testing process. More importantly, you will get the capabilities of resolving complex issues in terms of performance, stability and reliability. You will enjoy more free time and leave the hard work to the ETL testing framework and scripts.\n\n\nWith 41 lectures and about 6.5 hours of high-quality content, you will learn the following topics in depth:\n\n\nSection #1: Values We Can Bring to You\nYou will understand what valuable capabilities you can take away after this course and extra free live resources you can keep learning.\n\n\nSection #2: Azure Databricks and Cosmos DB Setup\nYou are able to set up Azure Databricks, Cosmos DB and connect them on your own.\n\n\nSection #3:  ETL Project Initialization\nGet real commercial open banking project experience from scratch including grabbing business requirement, Coverting it to technical requirement, designing the solution and implementing it.\n\n\nSection #4: ETL and Testing Business Goal and Test Strategy\nIdentify business goals we are going to achieve and adopt right test strategies and plan static testing and shift-left testing approach.\n\n\nSection #5: Automaton Test Framework and Solution\nCreate the automation test framework and implement it with customized test solution. The whole solution will be supported by multiple layers: business logic layer, data quality checking layer, presentation layer, data access layer, etc. Customized, dedicated and ready-to-use functionality has been provided for each layer. They can be reused by you directly or called by third party program. It supports DevOps as well.\n\n\nSection #6: Automation Test Solution Practice\nAutomate the open banking project with the customized test framework and resolve complex ETL testing issues in terms of performance, stability and reliability, etc. as an expert.\n\n\nSection #7: Test Summary Report Enhancement and Test Management\nImprove and customize the test summary report and organize test cases properly and make them be easy for maintenance and requirement traceability.\n\n\nSection #8: Data Quality Checking and Code Refractory\nAdd the functionality to check data quality for various data types like dateTime, enumeration, regex, etc. Do code refractory to make our code neat and tidy.",
      "target_audience": [
        "Anyone without database testing experience but wants to switch to data engineering",
        "Experienced data engineer who wants to improve automation testing experience"
      ]
    },
    {
      "title": "【テスターからQAエンジニアへ】キャリアアップのためのテストスキル",
      "url": "https://www.udemy.com/course/qa-engineer/",
      "bio": "実務者が教える！QAエンジニアとして本当に企業に求められるスキルを身に付けよう",
      "objectives": [
        "全テストフェーズをこなせるテストスキル",
        "適切なコミュニケーションスキル",
        "一般的なITスキル",
        "テスト対象への知識",
        "他職種の知識"
      ],
      "course_content": {},
      "requirements": [
        "なし"
      ],
      "description": "本コースは「QAエンジニアとして本当に企業に求められるスキル」を学ぶためのコースです。\nQAエンジニアってどうやってなればいいんだろう？\nQAエンジニアって何ができればいいんだろう？\nと感じたことはないでしょうか。\nQAチームの立ち上げから管理までおこなっている講師がQAエンジニアが実際に求められるスキルを説明します。\nそのため、本に沿った内容というよりは、実務の中でどういうスキルがどのような場面で必要で、それをどう活かしていくのかという点にフォーカスしています。\n\n\n【コース作成の経緯】\nあくまで個人的意見ですが、現場で求められているスキルを持っているQAエンジニアは少ないと感じています。\n逆にいうとこのスキルを学んで実践できればみなさんの価値を出しやすいと考えています。\nまた実務で使えるテスト業務のスキルを学ぶ場所が少ないと感じています。\n例えばGoogle検索でQAエンジニア スキルアップで検索しても「これを学んだ方がいい」という記事は出てきますが、実際にここで学びましょうといった場所が少ないように思います。\nQAエンジニアの採用をしてみて、知識がある方は多いと思いました。しかしそれをどうやって活かすか、どういう場面でどういう行動を取るべきなのか明確に考えを持っているQAエンジニアは少ないと感じています。\nよって現場でどう行動するか、どういう考え方でやっていけばいいのかを学べば、皆さんが活躍する手助けができるのではないかと考えたため本コースを作成しました。\n\n\n【コースの特徴】\n作成者がQAチーム管理者\n現場のノウハウを含めて説明\n現場のスキルに特化\n事例を元にした講義が多く、スキルを活用するイメージを持ちやすい\n全セクションPDFテキスト付き\nあくまで現場で活かして欲しいので、動画以外に業務中に参照できるようPDFを添付\n\n\n【学習の流れ】\n実務に沿った内容とはいえ、基本的な知識から具体的な事例を織り交ぜて理解を深めていきます。\nソフトウェアテストの意義\nQAエンジニアとしての立ち振る舞いのポイントを説明\nテスト実施\nテスト実施、バグ検知・報告、修正確認のポイントを事例を元に説明\nツールの使い方\nQAエンジニアが必ず使うツールのポイントを説明\nテスト設計\n１つの機能のテスト設計を通してヒアリング、テスト観点出し、テストケース作成のポイントを説明\nテスト技法の活用ポイント\n技法を理解することで、具体的にどのようなポイントで活きてくるのかを説明\nテスト観点を元にしたテスト工数出しと交渉のポイントを説明",
      "target_audience": [
        "テスターからQAエンジニアにキャリアアップしたい人",
        "ソフトウェアテストを基本から学びたい人"
      ]
    },
    {
      "title": "Free JMeter for Performance Testing Fundamentals Course",
      "url": "https://www.udemy.com/course/free-jmeter-for-performance-testing-fundamentals-course/",
      "bio": "You will acquire absolute confidence with Apache JMeter Performance Testing",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No experience is necessary - you will practically learn everything you need in this course",
        "All you need is your positive attitude, willingness to learn and some time for self-improvement"
      ],
      "description": "There are a number of tools available for the performance testing these days.\nFor the last 10+ years, open-source Apache JMeter free performance tool is stable and statistically is number-one having 50%+ on the market.\n\n\nApache JMeter is highly popular and applicable for all any types of Web and Mobile client front-to-server sides performance testing, and it's knowledge and practical application, is recommended to IT full-stack Developers, Quality Assurance Analysts, Quality Assurance Engineers, User Acceptance, general Quality Management, Project Managers, Business Analysts and interested project stakeholders.\n\n\nAlso, JMeter knowledge is highly recommended to start learning modern software testing for the functional and regression parts and practically is mandatory in the current present times.\n\n\nThis free JMeter for the performance testing course is divided in the following  parts:\na. Performance Testing Fundamentals\nb. Apache JMeter introduction and quick download with installation guide\nc. design and create basic quick performance test case, add Thread Group(s), Listeners and Samples\nd. practically apply Blazemeter for the Apache JMeter test cases Record-and-Playback scenarios\ne. design, create, record and playback realistic, everyday performance test cases scenarios\nf. differentiate between \"imaginary wants\" and \"realistic needs\" for the performance testing concept\ng. understand the importance of performance testing environment, virtual users and business transactions metrics\n\n\nUpon this course completion, you will acquire confidence in performance testing practical application using JMeter with everyday realistic test cases design, development and execution.\nImportant User Notice:\n1. before, when majority organizations had their dedicated servers on-premises,  the major performance testing 75-80% issue was a lack of memory space, known to professionals as \"bottlenecks\".\n2. present times,  while you need to create an identical performance testing environment, well-known Cloud Services providers such as Microsoft Azure, Amazon Web Services (AWS), and Google Cloud Provider (GCP) services are provisioned with principles of economies of scale, long-existing \"bottlenecks\" are removed.\n3. All of them, Azure, AWS and GCP are offering almost identical Cloud Computing, High Availability, Scalability, Elasticity, Agility, Fault Tolerance and Disaster Recovery guaranties for the typical organizational needs and wants.\n4. Remember: all your test plans/cases (functional, regression) have to be officially approved before execution, but performance test cases additionally, have to meet approved by organization's business SLA  (Service Level Agreement), basically a number of virtual users vs server(s) throughput business transactions in limited time period.\n\n\nOriginally, this  course is a part of bigger large scale one, and is created for any student beginner level  having no experience, who desires to acquire professional programming knowledge.\nPlease visit my other free and commercial courses under my Instructor page profile.\nSuch courses are specifically designed for any student level from \"no experience\"  to \"experienced\",  anyone who desires to establish well-weighted-all-round 360* practical professional applicable",
      "target_audience": [
        "Any IT industry person, who wants to learn fast-track and apply practicaly JMeter for the permormance testing",
        "Already employed professionals within IT Industry, when time limit is essential, to implement JMeter for performance testing"
      ]
    },
    {
      "title": "Software Testing",
      "url": "https://www.udemy.com/course/software-testen/",
      "bio": "Anforderungen definieren, Testfälle erzeugen und Qualität beurteilen",
      "objectives": [
        "Grundlegende Begriffe und Methoden des Software Testens",
        "Anforderungen (Requirements) korrekt definieren und anwenden",
        "Testen im Software-Entwicklungszyklus",
        "Statische Tests",
        "Blackbox-Testverfahren (Äquivalenz-Klassen, Grenzwert-Analyse, Entscheidungstabellen)",
        "Whitebox-Testverfahren",
        "Test- und Qualitäts-Management"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Definition Software Testing",
          "Validierung und Verifikation",
          "Prinzipien des Software Testing",
          "Fehlerarten und Fähigkeiten des Software Testers",
          "Übungsfragen zum Abschnitt \"Einleitung\""
        ],
        "Requirements Engineering": [
          "Definition Requirements Engineering",
          "Qualität von Anforderungen",
          "Natürlich-sprachige Anforderungen",
          "Use Cases",
          "Übungsfragen zum Abschnitt \"Requirements Engineering\""
        ],
        "Software Development Lifecycle (SDLC)": [
          "Software Development Lifecycle",
          "Teststufen",
          "Agiles Modell",
          "Testtypen",
          "Übungsfragen zum Software Development Lifecycle (SDLC)"
        ],
        "Statische Tests": [
          "Statische Tests",
          "Übungsfragen zu den statischen Tests"
        ],
        "Blackbox Tests": [
          "Einleitung zu den Blackbox-Testverfahren",
          "Äquivalenzklassen-Methode",
          "Grenzwertanalyse",
          "Entscheidungstabellen",
          "Zustandsbasierte Tests",
          "Beispiel Stapel",
          "Use Case Testing",
          "Übungsfragen zu den Blackbox Tests"
        ],
        "Whitebox Tests": [
          "Einleitung Whitebox Tests",
          "Kontrollfluss-Graph",
          "Anweisung- und Entscheidungstests",
          "Übungsfragen zu den Whitebox Tests"
        ],
        "Erfahrungsbasierte Tests": [
          "Erfahrungsbasierte Tests",
          "Übungsfragen zu den erfahrungsbasierten Tests"
        ],
        "Testmanagement": [
          "Unabhängigkeit",
          "Teststrategie",
          "Risiko",
          "Testprozess (NEU)",
          "Outro",
          "Übungsfragen zum Testmanagement",
          "Download der Folien"
        ]
      },
      "requirements": [
        "Grundlegendes Verständnis von Software-Prozessen und Programmierung",
        "Interesse am Thema Software Testen"
      ],
      "description": "Der Kurs ist ein Einsteiger-Kurs in die Welt des Software Testing. Der Begriff \"Software Testing\" umfasst nicht nur die technische Prüfung von Software-Modulen und Quellcode, sondern beinhaltet im Grunde alle Aspekte des Qualitätsmanagements des Produktentstehungs-Prozesses. Dort geht es auch um grundlegende Prinzipien der Firmen-Organisation, des Stakeholder-Managements und der qualitätssichernden Prozessabläufe.\nEs gibt praktisch keine Software ohne Fehler. Daher muss der Testprozess möglichst zeitgleich mit dem Entwicklungsprozess beginnen. Ein wichtiges Prinzip lautet: Zu jeder Entwicklungsaktivität gibt es eine Test-Aktivität. Damit ist Software Testing nicht etwas, das am Ende der Programmierung beginnt (oder wenn sich die ersten Kunden beklagen), sondern eine entwicklungsbegleitende Tätigkeit, die fortlaufend die Produktqualität sicherstellt und dokumentiert.\nDazu sind nicht nur Testverfahren erforderlich, sondern es geht auch um ein ganzheitliches Management der Gesamtorganisation im Hinblick auf den Kundennutzen. Damit ist Software Testing eng mit der Disziplin des Requirements Engineering (Anforderungsmanagement) verzahnt.\nDieser Kurs gibt euch einen guten Überblick über die wichtigsten Methoden und Zusammenhänge:\n\n\n- Grundbegriffe und Prinzipien des Software Testing\n- Testen im Software-Entwicklungszyklus\n- Komponenten-, Integrations-, System-, Akzeptanz- und Wartungstest\n- Statische Tests und Reviews\n- Blackbox-Tests (u.a. Äquivalenz-Klassen, Grenzwert-Analyse, Entscheidungstabellen)\n- Whitebox-Tests\n- Test-Management\n\n\nSpezielle Vorkenntnisse sind nicht erforderlich. Allerdings ist es sinnvoll, bereits über erste Erfahrungen im Bereich der Software-Entwicklung und grundlegende Programmierkenntnisse zu verfügen.\nDer Kurs ist vor allem Neueinsteiger konzipiert.",
      "target_audience": [
        "Product Owner und IT-Projektleiter",
        "Software-Tester",
        "Requirements Engineers",
        "Alle, die sich mit Software-Test auseinandersetzen möchten",
        "Software-Entwickler"
      ]
    },
    {
      "title": "Robot Framework e Appium para Android e iOS",
      "url": "https://www.udemy.com/course/robot-framework-e-appium-para-android-e-ios/",
      "bio": "A combinação do Robot Framework com o Appium é uma ótima escolha para testes automatizados de aplicativos móveis",
      "objectives": [
        "Automação de testes para Android",
        "Automação de testes para iOS",
        "Integração do Appium com Robot Framework",
        "Projeto híbrido para Android e iOS"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Configurando o Appium para Android": [
          "Instalando JDK e Android Studio",
          "Emulador do Android",
          "Servidor do Appium",
          "Appium Doctor para Android",
          "Variáveis de ambiente (Windows)",
          "Appium Inspector",
          "Sessão de inspeção no Android"
        ],
        "Primeiros passos com Robot e Appium": [
          "Instalando o Robot Framework",
          "Testar mobile você deve",
          "Adaptando o projeto para Robot",
          "Integrando Appium Library",
          "Clique por texto",
          "Checkpoints e variável global",
          "Menu de navegação",
          "Opções do menu de navegação",
          "Validando títulos nas telas",
          "Notificações por Toast",
          "Reúso com encapsulamento",
          "Resources do robot",
          "Clique loooooongo",
          "Checkbox (Seleção múltipla)",
          "Botão de radio (Seleção única)",
          "Campos de texto",
          "Spinner (Caixa de opções)",
          "Swipe (Deslizar)"
        ],
        "Testando um app de gestão de tarefas": [
          "Conheça o Mark para Android",
          "Deploy da API do Mark",
          "Login com XPath",
          "Reúso com Setup e Teardown",
          "Screen ou Page Objects?",
          "Cadastro de tarefas",
          "O problema da massa de teste fixa",
          "Validando o comportamento esperado",
          "Construindo uma lib em Python",
          "Removendo uma tarefa",
          "Marcando a tarefa como concluída",
          "Arquivo de dependências do Python"
        ],
        "Configurando o Appium no Mac": [
          "Homebrew Xcode CLI Tools",
          "ZSH e diretório QAx",
          "Xcode na App Store",
          "Instalando Nodejs 18.x",
          "Instalando JDK no macOS",
          "Python 3 com Homebrew",
          "ANDROID HOME no Mac"
        ],
        "Automação Híbrida (Android e IOS)": [
          "Fork do projeto",
          "Testando no Mac",
          "Sessão de Inspeção no iPhone",
          "Screen Objects para iOS",
          "Camada de comportamentos para iOS",
          "Shell Script para Android e iOS",
          "Encerrando com reports de testes de regressão"
        ]
      },
      "requirements": [
        "Pelo menos 6 meses de experiência em testes de software",
        "Conhecimento básico em Robot Framework",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Automação de testes para dispositivos móveis com Robot e Appium não apenas aprimora a eficiência e a velocidade dos testes, mas também capacita os testadores de software a enfrentar os desafios cada vez maiores do mundo móvel, garantindo que os aplicativos atendam às expectativas dos usuários em termos de negócio e usabilidade.\nNeste curso direto ao ponto, mergulharemos no emocionante mundo dos testes automatizados para aplicativos Android e iOS usando a poderosa ferramenta Appium. Começaremos do zero, orientando você através da montagem de um ambiente de testes sólido e eficiente. Isso incluirá a instalação do Android Studio, Appium Server e Appium Doctor, além de configurar variáveis de ambiente tanto para sistemas Windows quanto Linux/Mac. Também guiaremos você na instalação do Appium Inspector, uma ferramenta essencial para identificar os elementos em apps Android e iOS.\nAprenderemos como integrar o Appium com o Robot Framework e como automatizar ações fundamentais como preencher campos, realizar cliques curtos e longos, dominar a mecânica do arrastar e soltar, lidar com caixas de seleção e botões de rádio, trabalhar com spinners, dominar o gesto de deslizar (swipe) e muito mais.\nAo final deste curso, você estará equipado não apenas com o conhecimento prático necessário para realizar testes envolventes, mas também com a compreensão necessária de como utilizar o Appium e o Robot Framework em conjunto para atingir resultados de teste eficazes e eficientes em ambientes Android e iOS. Junte-se a nós nessa jornada de aprendizado e aprimore suas habilidades no mundo emocionante dos testes de aplicativos móveis.",
      "target_audience": [
        "Analistas de testes de software"
      ]
    },
    {
      "title": "Selenium Webdriver: What are Implicit and Explicit Waits",
      "url": "https://www.udemy.com/course/synchronization/",
      "bio": "Learn how to correctly use implicit and explicit waits using Selenium Webdriver",
      "objectives": [],
      "course_content": {
        "Implicit and Explicit Waits": [
          "Section syllabus",
          "Resources",
          "Why did this test fail",
          "Answer to why the test is flaky",
          "What is an implicit wait in selenium",
          "2nd example of an implicit wait",
          "How to make implicit wait work",
          "Quiz on implicit waits",
          "Answer to quiz on implicit waits",
          "What's next",
          "What are explicit waits",
          "2 types of explicit waits",
          "WebDriverWait",
          "ExpectedConditions",
          "Customizing the WebDriverWait",
          "What is the future of ExpectedConditions",
          "Proper synchronization quiz",
          "Synchronization quiz answer",
          "BONUS LECTURE!!!"
        ]
      },
      "requirements": [
        "Knowledge of Selenium Webdriver API",
        "Knowledge of Visual Studio",
        "Knowledge of C#"
      ],
      "description": "Are your automated functional tests flaky? Do they randomly fail and you are unsure why? Is your team frustrated with the \"instability\" of your Selenium Webdriver tests?\n\nIf you are interested in fixing all of these problems and making your tests more stable, then you need to understand how to use all of the different types of waits in Selenium Webdriver. Knowing how to handle synchronization issues will make you a top notch Test Engineer!\n\"The best tutorials I have ever seen, simply awesome. I take off my hat in front of you, you are an gorgeous professor, I am speechless to express how satisfied I am with these tutorials.\" -Lisbey\n\nIn this course, you will:\n1. Learn the problems that can occur as a result of improper synchronization\n2. Learn how to use Selenium Webdriver explicit waits\n3. Master Selenium Webdriver implicit waits\n4. Understand what a DefaultWait is\n5. Comprehend how to use all of the different types of waits during appropriate situations\n\"Great Video I have ever seen on YouTube. You are so so clear and honest in presenting the material. I had no idea how important it is to use QTP from different angle, that is via scripting. Great Work and Thank You so so so much!\" -Mohammed\n\"Excellent course. Before starting, I was unsure if I could learn this powerful technology, but by the end I was confidently writing scripts. I'm looking forward to taking Nikolay's other courses.\"  - James",
      "target_audience": [
        "QA Engineers",
        "QA Analysts",
        "Automation Engineers",
        "SDETs",
        "Anyone interested in further understanding Selenium Webdriver"
      ]
    },
    {
      "title": "Expert in Python Automation using Pytest-Playwright",
      "url": "https://www.udemy.com/course/expert-in-python-automation-using-pytest-playwright/",
      "bio": "Step-by-Step Guide to Expert in Python Automation using Pytest-Playwright",
      "objectives": [
        "Setup and Installation: Learn how to install Playwright and integrate it with Pytest",
        "Fixtures and Test Structure: Understand the Playwright-specific fixtures provided by the Pytest plugin, such as page, context, and browser",
        "Writing Test Scripts: Explore how to write test scripts using Playwright's APIs, including navigating web pages, interacting with elements, and using locators",
        "Parallel Test Execution: Learn how to execute tests in parallel to improve efficiency, which is crucial for large-scale test automation",
        "Best Practices and Debugging: Familiarize yourself with best practices for writing tests using auto-wait, and debugging tools like screenshots and video records"
      ],
      "course_content": {
        "Your Journey Starts Here": [
          "Your Journey Starts Here"
        ],
        "Introduction, Installation & Setup": [
          "Introduction, Installation & Setup"
        ],
        "How to run the first automation program ?": [
          "How to run the first automation program ?"
        ],
        "Page Object Model (POM)": [
          "Page Object Model (POM) - Part - 1",
          "Page Object Model (POM) - Part – 2 (Demo)"
        ],
        "Run Test & Debug Test": [
          "Run Test & Debug Test"
        ],
        "Playwright Locators": [
          "Playwright Locators - Part 1",
          "Playwright Locators - Part 2",
          "Playwright Locators - Part 3",
          "Playwright Locators - Part 4"
        ],
        "Playwright Assertions": [
          "Playwright Assertions - Part 1",
          "Playwright Assertions - Part 2",
          "Playwright Assertions - Part 3",
          "Playwright Assertions - Part 4"
        ],
        "Playwright Auto-Waiting": [
          "Playwright Auto-Waiting"
        ],
        "Pytest Fixtures": [
          "Pytest Fixtures - Part 1",
          "Pytest Fixtures - Part 2",
          "Pytest Fixtures - Part 3",
          "Pytest Fixtures - Part 4",
          "Pytest Fixtures - Part 5"
        ]
      },
      "requirements": [
        "Basic understanding of testing and web technologies (HTML, CSS, DOM)"
      ],
      "description": "Level: Beginner to Advanced\nPrerequisites: Basic understanding of testing and web technologies (HTML, CSS, DOM).\nThis comprehensive course is designed to equip participants with the skills to build powerful browser automation frameworks using Python, Pytest, and Playwright. Through hands-on sessions and real-world examples, you will learn to automate web applications for functional testing, debug issues effectively, and optimize your test execution for maximum efficiency.\nStarting with an introduction to automation principles and tools, you'll progress to setting up your environment, learning the essentials of Pytest for test creation and execution, and leveraging Playwright's robust browser automation capabilities. You will also explore advanced topics such as parallel test execution, debugging strategies, continuous integration (CI/CD) pipelines, and best practices for maintaining scalable test suites.\nBy the end of the course, you’ll be equipped to tackle automation challenges confidently, write maintainable test scripts, and integrate your tests into modern development workflows.\nWhat You'll Learn:\nInstall and configure Pytest-Playwright for effective automation testing.\nWrite and execute automation tests for web applications.\nNavigate and interact with web pages using Playwright’s APIs.\nOptimize test execution with parallel test runs.\nDebug and analyze test failures using Playwright's built-in tools.\nImplement best practices for robust and scalable test frameworks.\nWork on a real-world project to design and execute an automation suite.\nWho Should Take This Course:\nAspiring QA Engineers and Automation Testers.\nDevelopers looking to integrate testing into their workflows.\nProfessionals transitioning to browser automation frameworks.\nAnyone interested in building scalable test solutions.",
      "target_audience": [
        "Software Testers: Professionals looking to enhance their automated testing skills and adopt cutting-edge tools for web application testing.",
        "Quality Assurance Engineers: Individuals aiming to streamline testing processes and improve the reliability of their automation frameworks.",
        "Python Enthusiasts: Programmers with a foundational knowledge of Python who want to expand their skillset into automation and testing domains.",
        "Aspiring Automation Experts: Beginners in automation who wish to build a strong foundation and achieve proficiency using Pytest-Playwright.",
        "DevOps and Development Teams: Members seeking to integrate automated testing seamlessly into their CI/CD pipelines for improved collaboration and efficiency.",
        "Freelancers and Entrepreneurs: Those who want to deliver high-quality software testing services using advanced tools like Pytest and Playwright."
      ]
    },
    {
      "title": "Manual Testing for Beginners: Master the Fundamentals of QA",
      "url": "https://www.udemy.com/course/manual-testing-2025/",
      "bio": "Learn Manual Testing Techniques and Become a Pro Tester",
      "objectives": [
        "The fundamentals of manual testing and why it’s a critical part of software development.",
        "How to create effective test cases and execute them with confidence.",
        "Best practices for bug reporting and communicating issues with developers.",
        "Hands-on practice through real-world testing exercises.",
        "An understanding of different types of testing like functional, regression, and exploratory testing."
      ],
      "course_content": {
        "Introduction": [
          "what's software testing?",
          "SDLC",
          "STLC",
          "Short Story about SDLC",
          "Error, Bug and Failure",
          "QA VS QC",
          "Verification vs Validation",
          "Why we need testing?",
          "Test Levels"
        ],
        "The seven principles of software testing": [
          "Testing shows presence of defects, not absence",
          "Exhaustive testing is impossible",
          "Early testing",
          "Defect clustering",
          "The pesticide paradox",
          "Testing is context dependent",
          "Absence-of-errors fallacy"
        ],
        "Test Scenario": [
          "What's test scenario?",
          "Writing test scenario",
          "Test Scenarios for register, log-in and search"
        ],
        "Test Cases": [
          "What's test case?",
          "Difference Between Test Case & Test Scenario - Part 1",
          "Difference Between Test Case & Test Scenario - Part 2",
          "Revision on Test case",
          "Test Case Registration Example",
          "Test Case Lgoin Example",
          "Tips for Writing Effective Test Cases"
        ],
        "Test Execution & Defect Reporting: Finding and Communicating Bugs": [
          "Test Execution",
          "Retesting and Regression Testing",
          "Defect Management",
          "Bug life cycle",
          "Writing an Effective Defect report",
          "Test Reporting"
        ]
      },
      "requirements": [
        "No Prior Experience Required: This course is designed for beginners, so you don't need any previous knowledge of manual testing or software development.",
        "Basic Computer Skills: You should be comfortable using a computer and browsing the internet, as this course involves hands-on exercises and using online tools.",
        "A Willingness to Learn: A keen interest in learning about manual testing and software quality assurance is all you need to get started!",
        "Access to a Computer: You will need a computer with internet access to follow along with the course materials, tools, and exercises."
      ],
      "description": "Welcome to Manual Testing for Beginners! This comprehensive course will teach you the essential skills and techniques needed to become a proficient manual software tester. Whether you're looking to start a career in Quality Assurance (QA) or enhance your current testing abilities, this course will guide you every step.\nThrough a series of easy-to-follow lessons, you'll gain hands-on experience with the core concepts of manual testing, including:\nUnderstanding Testing Fundamentals: Learn the key principles, types of testing, and why manual testing is essential in software development.\nTest Case Creation: Discover how to write clear and effective test cases, ensuring comprehensive test coverage.\nBug Reporting: Master the art of identifying and documenting bugs, and how to communicate them effectively to developers.\nReal-World Scenarios: Practice applying your knowledge through practical exercises based on real-world testing situations.\nBest Practices: Learn industry-standard practices that will help you become a successful QA professional.\nBy the end of this course, you'll have a solid understanding of manual testing principles, the ability to perform thorough testing on software applications, and be ready to step into the world of software quality assurance.\nWhether you're a complete beginner or looking to formalize your testing knowledge, this course provides the perfect foundation for your journey in the world of manual testing.",
      "target_audience": [
        "Aspiring Software Testers: Anyone looking to start a career in Quality Assurance (QA) and manual testing.",
        "Professionals Looking to Transition into QA: Those working in related fields (e.g., customer support, business analysis) who want to transition into QA or software testing roles.",
        "Anyone Interested in Software Quality Assurance: Anyone passionate about improving software quality, finding bugs, and ensuring end users have a seamless experience.",
        "Manual Testing Enthusiasts: Individuals interested in gaining practical skills and real-world knowledge of manual testing.",
        "Beginners in Software Testing: No prior experience required – perfect for those new to the world of software testing and looking to build a strong foundation."
      ]
    },
    {
      "title": "Introduction to Model Based Testing using TPT",
      "url": "https://www.udemy.com/course/tpt-testing-crash-course-101/",
      "bio": "Model Based Testing of Simulink models using TPT (Time Partition Testing) software",
      "objectives": [
        "Model Test Cases in TPT using step list and automatons methods",
        "Write assesslets based on requirements",
        "Make the traceability between test cases and requirements",
        "Execute and analyze the test results"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "GUI walk through"
        ],
        "Preprocessing": [
          "Platform Configuration"
        ],
        "Test Modeling": [
          "Test Case Modeling Overview",
          "Common Test Case Building Blocks (Steps Types)",
          "Step List Test Case",
          "Automatons Test Case",
          "Test Cases Management"
        ],
        "Test Assessment": [
          "Test Assessment - Introduction and concepts",
          "Assesment Types: Compare step",
          "Assessment Types: GUI - Condition Tree",
          "Assessment Types: GUI - Min/Max Comparison",
          "Assessment Types: GUI - Timeout",
          "Assessment Types: GUI - Trigger Rule",
          "Assesment Types: Scripts",
          "Assesslets Management"
        ],
        "Automatic Test Case Generation": [
          "Test Case Generation - Step List",
          "Test Case Generation - Automatons"
        ],
        "Requirements": [
          "Requirement Import",
          "Requirement Traceability",
          "Requirements Checking",
          "Requirement Sets & Requirements update"
        ],
        "Execution and Postprocessing": [
          "Execution Configuration",
          "Build Progress",
          "Automatons Revisited (Transitions)",
          "Report",
          "Signal viewer"
        ],
        "Debugging": [
          "Debugging using Breakpoints",
          "Debugging using Testframe"
        ],
        "Project": [
          "Project Intro",
          "Project Solution - Step List",
          "Project Solution - Automatons"
        ],
        "TPT Version Control": [
          "Modification Tracking",
          "Merging TPT projects manually",
          "Merge TPT projects using version control"
        ]
      },
      "requirements": [
        "Basic Knowledge of Simulink and Stateflow"
      ],
      "description": "Testing is very important activity during software development process.\nThis course is a basic overview of the testing work flow in TPT. The impact of this course will be increased by as much hands on practice you will have. This course also assumes little prior knowledge about Simulink Models. So enjoy the course and we hope to teach you as much as we can. This will give you the basis of knowledge to begin the journey on the road to becoming proficient in testing using TPT. Stay tuned for later more advanced courses that will be available on Udemy. Again thank you for choosing to learn with us and we hope to provide you with the best classes and knowledge that we know how to do.\nHere's a glimpse of what you'll gain from our course:\nPlatform Configuration\nwill configure Simulink platform in TPT\nTest Case Design\nStep List\nAutomatons\nhow to create a test case using step list or automatons methods.\nTest Case Generation\nGenerate from values\nGenerate from variants\nTest Case Management\nTest Set definition\nTest cases status\nFilter test cases\norganize test cases in folders\ntest case details\nAssessments\nuse compare step to assess test cases\nuse script assesslet to assess test cases\nRequirements\nImport requirements from excel sheet\nCreate the link between the test cases and requirements\nCreate the link between the assesslets and requirements\nuse scripting function to check the requirements\nExecution\nexplore the execution configuration\nget insights from the build progress window\nget insights from the generated report\nuse the signal viewer\nGear Selector Project\nImplement what you have learned",
      "target_audience": [
        "Model based testers"
      ]
    },
    {
      "title": "Autify Certification Program - Test Automation",
      "url": "https://www.udemy.com/course/autify-certification-program-test-automation-basic/",
      "bio": "Test Automation Architect: Foundational",
      "objectives": [
        "Overview of E2E testing and software testing",
        "How to create and modify basic test scenarios using test automation tools",
        "How to create e-mail tests and test plans using test automation tools",
        "How to do applied software testing using test automation tools"
      ],
      "course_content": {
        "Introduction To Testing and Autify": [
          "Welcome to Autify Certification Program!",
          "Learning Video - Introduction To Testing",
          "Learning Video - Getting Started With Autify",
          "Learning Video - Editing Scenarios",
          "Learning Video - Step Groups",
          "Level Check Test - Introduction To Testing~Step Groups"
        ],
        "Advanced Testing with Autify": [
          "Learning Video - Testing Email",
          "Learning Video - Test Plans",
          "Learning Video - Advanced Assertions",
          "Learning Video - Advanced Testing Techniques",
          "Level Check Test - Testing Email~Advanced Testing Techniques",
          "What to do next?",
          "Thank you! from Autify"
        ]
      },
      "requirements": [
        "You will require an \"Autify for Web\" account to follow along with the tutorials. If you do not have an account, please take advantage of the free trial to prepare for this course.",
        "When signing up for the trial, please include 'Certification_' at the beginning of your company name. For example, if your company name is 'Autify', please enter 'Certification_Autify'",
        "No in-depth knowledge of programming is required as Autify is a no-code tool."
      ],
      "description": "Testing, and especially end to end tests, are the best way to achieve all this with a high level of confidence, and the least amount of stress for your dev team.\nBut, writing tests is hard. The more complex your software, the more tests you have to write.\nAnd the more tests you write, the more time you need to spend maintaining those tests.\nThat means less time for your devs to spend writing new features, which is not what we want.\nTo solve this problem, more and more companies are turning to no-code solutions for testing.\nNo code testing is easier to write, and can be maintained by people outside the dev team, so the burden of work isn’t just on your engineers.\n\n\nAutify is a no-code end-to-end testing solution. At Autify, our mission is to “enhance people's creativity through technology.” That means we want you to spend less time worrying about your tests, and more time writing great software.\nIn this course, you’re going to be leaning the basics. We aren’t going to cover everything, but you’ll learn how to get up and running quickly with Autify.\nBy the time we’re finished, you’ll have a better understand of general test theory, and you’ll be able to use Autify to write tests that should cover the most common use cases for modern web applications.",
      "target_audience": [
        "Anyone interested in software test automation",
        "Anyone interested in software test automation tools",
        "Anyone interested in Autify, a software test automation platform"
      ]
    },
    {
      "title": "Mobile Test Automation - Robot Framework, Python & Appium",
      "url": "https://www.udemy.com/course/be-expert-in-device-automation-with-robot-framework-python/",
      "bio": "{ Learn Android, iOS, Win10 & MAC test automation by Python, Appium, WinAppDriver & AppiumForMac }",
      "objectives": [
        "Appium for Android with Robot Framework",
        "Appium for iOS with Robot Framework",
        "Appium & WinAppDriver for Windows with Robot Framework",
        "AppiumForMac To Automate MAC OSX Application",
        "Appium Inspector, Windows Inspect and AppiumForMac To Locate Elements",
        "Test Framework Development with Robot Framework and Python",
        "Robot Framework Parallel Execution With Pabot",
        "Page Object Model Architecture In Robot Framework",
        "Android Debug Bridge Integration with Robot Framework"
      ],
      "course_content": {
        "Introduction of Appium & Robot Framework": [
          "Robot Framework Introduction",
          "Setup Development Environment",
          "Setup Android Device",
          "Appium and Appium Inspector",
          "Write First Script For Google Keep-Note App"
        ],
        "Robot Framework & Appium For Android App": [
          "Custom Keyword With Robot & Python File",
          "Page Object Model Architecture In Robot Framework",
          "Appium & App Control By Suite & Test Setup",
          "Parallel Execution With Android Devices"
        ],
        "Robot Framework & Appium For iOS App": [
          "Create iOS Simulator & Use Appium Inspector",
          "Page Object Model Design For iOS Application",
          "iOS & Android Parallel Execution With Resource Manager"
        ],
        "Appium For Windows10 & MAC Desktop Application": [
          "Win10 WinAppDriver & Appium, Windows SDK Inspector",
          "Win10 App Execution With POM Design Pattern",
          "AppiumForMac For MAC Application"
        ],
        "Miscellaneous Topics": [
          "Android Debug Bridge Manager With Python",
          "Windows Phone Automation Approach Using Screen Reflector"
        ]
      },
      "requirements": [
        "Basic Python Knowledge"
      ],
      "description": "Device & Mobile Test Automation is one of the key element in todays application testing domain. Most of the enterprise applications releasing their versions across device types (android, iOS, windows and MAC desktop apps). To meet the the product testing requirement one has to understand end to end picture of this domain.\nSo this course has been designed in such a way so that one can get the complete picture of device and mobile testing with Appium, Python and Robot Framework for all device types.\nThe reason for choosing Python and Robot Framework with Appium is to accelerate learning and enable you to apply your knowledge to real projects. You should be able to create framework quickly and deploy for other teams to use it.\nThere is hardly any online digital course which covers all the platform (android , iOS, Windows desktop app and MAC desktop app). So this course will help you to make a great coverage while doing the device/mobile test automation.\n\n\nBelow are the details of major topics you can expect from this course --\n\n\nLearn Android, iOS, Windows & MAC device automation with Robot Framework & Python with Page Object Model architecture.\nUnderstanding about Robot framework and Appium\nAppium for Android with Robot Framework\nUser Defined Keyword with Python Class\nTest Framework Development with Robot and Python\nPage Object Model Architecture In Robot Framework\nAppium Server Manager In Suite Setup & Suite TearDown\nRobot Framework Parallel Execution With Pabot\nAppium for Windows with Robot Framework\nAppium for iOS with Robot Framework\nAppiumForMac usage for MAC application\nAndroid Debug Bridge Integration With Robot Framework",
      "target_audience": [
        "Automation Tester who wants to be expert in device automation",
        "Manual Tester who wants to expand knowledge into device automation",
        "Software Developer"
      ]
    },
    {
      "title": "600+ Selenium Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/selenium-interview-questions/",
      "bio": "Selenium Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Selenium Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the ultimate Selenium Interview Questions Practice Test course! If you're aiming to ace your next Selenium interview or simply want to sharpen your skills in Selenium automation, you've come to the right place. This comprehensive course is designed to provide you with in-depth coverage of essential Selenium concepts through a series of practice tests and interview questions.\nIn this course, we'll dive into six key sections, each covering crucial aspects of Selenium automation. From the basics to advanced concepts, you'll get a thorough understanding of Selenium WebDriver, locators, frameworks, best practices, and troubleshooting techniques. Whether you're a beginner looking to break into the field of test automation or a seasoned professional aiming to enhance your expertise, this course has something for everyone.\n\n\nSelenium Basics:\nUnderstand the fundamentals of Selenium and its components.\nDifferentiate between Selenium IDE, Selenium WebDriver, and Selenium Grid.\nExplore the advantages of using Selenium for automated testing.\nLearn about the architecture of Selenium WebDriver and its interaction with different browsers.\nDiscover the supported programming languages for Selenium WebDriver.\nSelenium WebDriver:\nGain a deep understanding of Selenium WebDriver and its functionalities.\nExplore various WebDriver methods for interacting with web elements.\nMaster techniques for handling dynamic elements and synchronization in Selenium WebDriver.\nDive into the importance of locators and learn how to choose the right ones for your tests.\nUnderstand the concept of Page Object Models (POM) and their role in test maintenance.\nSelenium Locators:\nLearn about the different types of locators supported by Selenium.\nUnderstand when to use each type of locator and best practices for selecting them.\nDiscover strategies for dealing with complex web elements and nested structures.\nExplore techniques for handling dynamic locators and improving test robustness.\nSelenium Frameworks:\nExplore the benefits of using frameworks in Selenium automation.\nUnderstand the different types of Selenium frameworks, including Data-driven and Keyword-driven.\nLearn how to implement Data-driven testing and leverage TestNG for Selenium projects.\nDiscover the advantages of using TestNG with Selenium WebDriver for efficient test execution.\nSelenium Advanced Concepts:\nDive into advanced concepts such as parallel execution in Selenium Grid.\nExplore the integration of Maven with Selenium projects and its benefits.\nLearn about reporting mechanisms in Selenium automation for effective test analysis.\nUnderstand how to handle pop-up windows, alerts, and perform headless browser testing.\nSelenium Best Practices and Troubleshooting:\nDiscover best practices for writing maintainable and efficient Selenium tests.\nLearn techniques for handling synchronization issues and debugging Selenium tests.\nExplore common challenges faced in Selenium automation and strategies to overcome them.\nUnderstand how to manage test data effectively and conduct browser compatibility testing in Selenium.\nEach section includes a series of practice tests and interview questions designed to reinforce your understanding of the topics covered. Whether you're preparing for a job interview or simply want to test your knowledge, these practice tests will provide valuable insights into your proficiency in Selenium automation.\nEnroll now and take your Selenium skills to the next level with our comprehensive interview questions practice test course. Prepare to excel in your next Selenium interview and become a proficient test automation engineer!",
      "target_audience": [
        "Software Testers: If you're a software tester looking to expand your skill set and stay competitive in the job market, this course will equip you with the knowledge and hands-on experience needed to excel in Selenium automation.",
        "Quality Assurance (QA) Engineers: QA engineers seeking to streamline their testing processes and enhance the efficiency of their testing efforts will benefit from the practical insights and best practices shared in this course.",
        "Software Developers: Developers interested in incorporating automated testing into their development workflows will find this course invaluable for learning how to leverage Selenium WebDriver to write robust, maintainable tests.",
        "Computer Science Students: Students studying computer science or related fields who want to gain practical experience in test automation will find this course to be a valuable addition to their learning journey, providing them with a solid foundation in Selenium automation principles.",
        "Professionals Transitioning to Automation: Professionals transitioning to automation testing roles from manual testing or other areas of software development will find this course to be a comprehensive guide to mastering Selenium automation concepts and techniques.",
        "Anyone Interested in Test Automation: Whether you're a career changer, a curious learner, or someone simply interested in the fascinating world of test automation, this course welcomes learners of all backgrounds and skill levels."
      ]
    },
    {
      "title": "How to create your own Instagram bot with Python",
      "url": "https://www.udemy.com/course/how-to-create-your-own-instagram-bot-with-python/",
      "bio": "(Automation with python + pycharm)",
      "objectives": [
        "Automation",
        "Webdriver Selenium",
        "Python",
        "Instagram"
      ],
      "course_content": {
        "Introduction & Downloads and Installations": [
          "Introduction & Downloading and Installation , Python + Pycharm",
          "Downloading and Installation of Webdriver"
        ],
        "Creation of Instagram bot": [
          "Login Instagram",
          "How to make follows",
          "Make direct follows (part1)",
          "Make direct follows (part2)",
          "Make direct follows (part3) (FIX ERRORS)",
          "How to make unfollows",
          "Fix errors and conclusion"
        ]
      },
      "requirements": [
        "It is ideal to possess knowledge of PYTHON but you can manage without this knowledge as well"
      ],
      "description": "This course is designed to guide you through the process of creating your very own Instagram bot, which will help enhance and automate your Instagram experience. Throughout this course, you'll learn how to develop and deploy a bot using Python and PyCharm, two powerful tools commonly used in software development. The focus of this course is specifically on building an Instagram bot, so it does not cover general Python or programming concepts in depth. However, if you're new to programming, don't worry! While students with prior programming knowledge may find some parts easier, the course is structured in a way that beginners can still follow along and successfully create the bot. It’s understood that the learning curve might be steeper for some, but with a little patience and effort, even those without programming experience can manage to grasp the material and complete the course. In addition, the course offers step-by-step instructions, detailed explanations, and helpful tips to make the learning process smoother, ensuring that you’ll be able to build a fully functional Instagram bot by the end. Whether you're looking to improve your Instagram presence or simply learn something new, this course has something incredibly valuable and unique for everyone.",
      "target_audience": [
        "Python students",
        "People who want to update their Instagram"
      ]
    },
    {
      "title": "Selenium Testing in Kubernetes",
      "url": "https://www.udemy.com/course/tik-selenium/",
      "bio": "Selenium Web and REST API Testing in Kubernetes",
      "objectives": [
        "Setting up Kubernetes cluster",
        "How to set up a Selenium Hub",
        "How to run tests within Kubernetes",
        "Using Kubectl commands",
        "How to create a Deployment",
        "How to create a Service",
        "How to create a Replication Controller",
        "How to run test in the Kubernetes Cluster",
        "How to debug failed test within a pod"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Kubernetes Definition": [
          "What is Kubernetes?",
          "Cluster",
          "Pods",
          "Control Panel"
        ],
        "Install Dependencies": [
          "Installing Dependencies",
          "Kubernetes Dashboard"
        ],
        "Selenium Hub Setup": [
          "Setting up Selenium Hub",
          "Creating a Deployment",
          "Creating a Service",
          "Creating a Replication Controller"
        ],
        "Run Test in Kubernetes": [
          "Run Tests & How to Debug Test"
        ]
      },
      "requirements": [
        "Basic knowledge of programming and building simple test automation framework.",
        "Simple Selenium knowledge.",
        "Have Docker installed.",
        "Comfortable using command line tools (Terminal/Command Prompt) macOS, Linux or Windows machine capable of running Docker"
      ],
      "description": "Welcome to how to perform Test in Kubernetes course using Selenium hub, Selenium, Ruby RSpec, Docker and VNC Viewer.\nWhether you are junior, senior or lead QA Automation Engineer or Software Quality Engineer or SDET - Software Development Engineer in Test or DevOps - this course will help you understand the basics of Kubernetes and equip you with the tools and skills needed to set up testing infrastructure for simple and complex applications.\nTesting is an essential part of the software development life cycle ensuring that applications deployed to the production environment are of high quality and bug free.\nIn this course I will show you how to install Kubernetes, Clusters, pods, Replication controller, service, and other applications needed to run tests sequentially and in parallel within the Kubernetes cluster.\nThe best way to learn is doing it and I will be teaching you how to install all the dependencies, providing you with practical steps that will help you set up test infrastructure needed to test simple and complex applications.\nBy the end of this course you will have installed Kubernetes cluster, set up a deployment, service, replication controller, set up selenium hub within the Kubernetes cluster, run tests, set up VNC viewer and how to debug failed tests within the cluster.\n\n\nThis course is hands-on with some theory to understand the basics of Kubernetes.",
      "target_audience": [
        "Junior or Beginners, SDET, QA automation engineers, & QE curios about test infrastructure",
        "Senior, SDET, QA automation engineers, & QE curios about test infrastructure",
        "Lead SDET, QA automation engineers, & QE curios about test infrastructure",
        "DevOps"
      ]
    },
    {
      "title": "How to become successful QA Tester in Computer Networks",
      "url": "https://www.udemy.com/course/how-to-become-successful-qa-tester-in-computer-networks/",
      "bio": "Networking fundamentals for SW Testing products like Switch, Router, Analyzers. Learn protocols and packets technology.",
      "objectives": [
        "To understand Computer Network field for QA SW Testing.",
        "To get a new professional skills and to receive more opportunities to be hired.",
        "To become the real professional even if you are new to QA field or experienced QA tester.",
        "To receive the most important and relevant skills for Computer Network products in QA SW Testing.",
        "To be able to test the Computer Network products and technology",
        "This course is not going to teach you to become an IT Manager or Administrator of the Network in the companies.",
        "This course is not going to teach you the QA SW Testing processes and methodology."
      ],
      "course_content": {},
      "requirements": [
        "Interest in leaning new skills for QA SW Testing.",
        "Some knowledge and understanding of QA Testing processes are good to have but not required"
      ],
      "description": "Hi Guys!\n\nWelcome to \"How to become successful QA Tester in Computer Networks\" course\n**************************************************************************************************************************************\n\nBy the way, this is the single Computer Network course on Udemy that dedicated for QA SW Testers only and it already receives the great feedback from IT professionals and new students\"\n**********************************************************************************************************************************\n\n1. Sergey:\n\nAs the Network IT Administrator with the many years's experience I was very surprised to see this course. The way is created and easy explained materials are a great foundation for somebody who wants to be familiar with Computer Networks and especially for QA Testing field.\n2. Nataly:\nThis is another great course, that provided by Alik. I learnt a lot about QA Testing from the previous courses and this one is going to teach the Computer Network field, that is must to have for QA Testing skills. Thank you Alik for such great experience.\n\n3. IkazKazatsker:\nVery helpful course , for who wants to start working with network devices. Course keeps focus only on relevant things. Good course for beginners in networking field.\n\n************************************************************************************************************************************\nThis training will teach you everything to become a real professional in testing the Computer Network products that are the heart of Modern Internet communication, even if you don't have experience.\n\nSo what you are going to receive from this course:\nLearn Network concepts and get the required QA Testing knowledge for the Network products such as Switch, Router, Network protocols and many other in the shortest amount of time possible.\nReceive the all required and immediate skills, techniques and tools to succeed in testing the Network products..\nDiscover and see the real examples of the real Network products and how QA Testing is involved in.\nHands-on step-by-step guidance that shows you exactly what to do and how to implement your received knowledge.\nLearn how to use the only required skills for UNIX, DOS and tools such as JMETER, WireShark, Cisco Packet Tracer and other for the QA Testing field only.\nExamples of Questions/answers to pass interviews to Network IT/Hi-Tech companies\nWhy would you like to learn the Computer Network field for QA SW Testing?\nDid you hear about the monsters of IT industry such as CISCO, IBM, AVAYA, F5  and others? If yes, you should know that the Network technology developed by these companies is the heart of modern world, that we are living in.  Your e-mail and Facebook connections, Instagram and Google search are running on Network infrastructure, developed for the real progress of our life. Computer Network is a top of IT industry pyramid.\nIf you are a professional QA Tester without Computer Network knowledge, join to this course to become a part of this progress and to complete the missing professional skills and education. And who knows: maybe one day, you will be hired by the monsters and will consider yourself at the top of IT Industry and QA Testing pyramid as well.",
      "target_audience": [
        "All levels students who desires to receive the required Computer Network skills for QA SW Testing field",
        "All levels students who desires to become a real professional in QA Testing field."
      ]
    },
    {
      "title": "Software Tester, Test engeenier - Recruitment questions 2025",
      "url": "https://www.udemy.com/course/software-tester-test-engeenier-recruitment-questions-2025/",
      "bio": "Questions and Answers Pro Software Tester - recruitment for the position of Software Tester, Automatic Tester, etc 2025",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Why Enroll in the \"Software Tester, Test Engineer – Recruitment Questions 2025\" Course?\n\nPrepare for Your Next Testing Role with Confidence\nThe software testing industry is evolving, and recruiters in 2025 are looking for testers and test engineers who not only understand core testing principles but can also adapt to modern tools, agile workflows, and complex testing environments. This course is designed to help you master recruitment questions and gain the confidence you need to excel in your next job interview.\nWhat Makes This Course Stand Out?\nRecruitment-Focused Quizzes\nA collection of real-world interview questions tailored for Software Testers and Test Engineers.\nCovers essential topics: Manual Testing, Automation Basics, Test Planning, Bug Reporting, Agile & DevOps Practices, API Testing, and Popular Testing Tools.\nDetailed explanations provided for every question, helping you understand key concepts and best practices.\nMaster Core Testing Skills\nStrengthen your knowledge of testing methodologies including functional, regression, performance, user acceptance, and integration testing.\nDevelop skills in test case creation, bug tracking, automation frameworks, and continuous testing strategies.\nLearn how modern testing roles integrate with Agile, Scrum, and DevOps environments.\nInterview Strategy & Success Tips\nInsights into 2025 recruitment trends for testers and test engineers.\nLearn how to effectively answer both technical and behavioral interview questions.\nTips on showcasing your expertise with testing tools like JIRA, Selenium, Postman, Jenkins, and API testing platforms.\nWho Is This Course For?\nAspiring software testers preparing for entry-level positions.\nTest engineers looking to advance their careers or switch roles.\nIT professionals transitioning into testing and quality assurance roles.\nAnyone preparing for QA and testing interviews in 2025.\nWhy This Course Can Help You Get Hired\nGain a competitive edge by preparing with up-to-date interview questions reflecting 2025 recruitment trends.\nBuild confidence in handling both technical challenges and real-world testing scenarios.\nPrepare for interviews across various industries including software development, fintech, healthcare, and e-commerce.\nWhy Start Today?\nThe demand for skilled testers and test engineers continues to grow in 2025.\nThis course provides a self-paced learning experience with lifetime access—practice whenever it fits your schedule.\nBe ready for your next opportunity by staying ahead of the latest testing trends and tools.\n\nBoost your testing skills. Ace your interview. Land your dream role. Enroll today and get interview-ready for 2025!",
      "target_audience": [
        "People who want to develop a career in the software engineering industry or simply \"IT\"",
        "\"Digital\" professions that require testing skills",
        "People willing to recruit for the position of a software tester",
        "Aspiring QA Testers",
        "Recent Graduates in Computer Science or Related Fields",
        "Career Changers",
        "Current QA Professionals",
        "Software Developers",
        "Project Managers or Team Leaders",
        "Entrepreneurs or Small Business Owners"
      ]
    },
    {
      "title": "Complete course on ZEPHYR SCALE Test Management for JIRA",
      "url": "https://www.udemy.com/course/complete-course-on-zephyr-scale-test-management-for-jira/",
      "bio": "ZEPHYR SCALE | Comparison with Test Rail and other Zephyr tools | End to End live demo | Test Cases/Cycles/Plan |Reports",
      "objectives": [
        "All about Zephyr Scale Test Management tool",
        "Zephyr Scale vs Zephyr Squad vs Zephyr Enterprize",
        "Comparison with other test management tools",
        "How to work on Test cases, Test Cycles, Test Plans, Reports tabs",
        "How to write test cases with Call to Test, Parameters & Data Driven tests",
        "BDD Testcases",
        "Creating Custom Fields in Zephyr Scale",
        "Reports",
        "Gadgets",
        "Test Automation & Continuous Integration Support"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Topics Covered in this course"
        ],
        "Zephyr Test Management Tools and Key Features": [
          "What is Zephyr?",
          "Zephyr Squad vs Zephyr Scale vs Zephyr Enterprise",
          "Key Features of Zephyr Scale Test Management for Jira"
        ],
        "Comparison with other Test Management tools": [
          "Zephyr Scale vs Test Rail",
          "Comparison with Test Rail and Test Link"
        ],
        "Start with Zephyr Scale": [
          "What is Zephyr Scale Test Management for Jira",
          "Terms and useful Concepts"
        ],
        "How to Install and Setup Zephyr Scale <Live Examples on real tool>": [
          "Installing the Zephyr Scale in Jira",
          "Enabling the Zephyr Scale",
          "Settings and Permissions"
        ],
        "How to Create & Manage \"TEST CASES\" in Zephyr Scale <Live Examples on real tool>": [
          "Manage Test cases/ Folders/ Filters/ Columns/ Clone/ Archive",
          "Call to test and Parameters",
          "Version Control",
          "BDD Test cases",
          "Data Driven Test cases",
          "Quiz Time!"
        ],
        "How to Create & Manage \"TEST CYCLE\" in Zephyr Scale <Live Examples on real tool>": [
          "Manage Test Cycles/ Folders / Columns / Clone / Edit / Delete",
          "Run Test Cycles",
          "Filter & View Options",
          "Create or Link a defect",
          "Attaching files in test steps",
          "Re-execution and History of Test Cycles",
          "Quiz Time!"
        ],
        "Manage Test Cases & Test Cycles from Jira Issues <Live Examples on real tool>": [
          "Manage Test Cases & Test Cycles from Jira Issues"
        ],
        "Configurations & Custom fields <Live Examples on real tool>": [
          "Configurations & Custom fields"
        ],
        "How to Create & Manage \"TEST PLAN\" in Zephyr Scale <Live Examples on real tool>": [
          "Manage Test Plan/ Folders / Columns",
          "Edit / Delete Test Plans",
          "Filter and View Options"
        ]
      },
      "requirements": [
        "No prior knowledge of programming is required to learn this course"
      ],
      "description": "Basic to Advance ZEPHYR SCALE Test Management for JIRA Master Classes.\nZephyr Scale vs Zephyr Squad vs Zephyr Enterprise\nZephyr Scale vs Test Rail vs Test Link\nThis course covers all the topics you need to learn about ZEPHYR SCALE Test Management tool without having any prior knowledge of any programming language, tool or extensions.\nThis is for all from Manual Testers to Test Managers everyone who uses zephyr scale tool.\nThis Course includes all the solution of these problems.\nConcepts covered with live examples-\nZephyr Scale vs Zephyr Squad vs Zephyr Enterprise\nZephyr Scale vs Test Rail vs Test Link\nZephyr Scale -Key Features\nZephyr Scale - Install , setup, Configuration\nHow to work on Test cases, Test Cycles, Test Plans, Reports tabs\nHow to write test cases with Call to Test, Parameters & Data Driven tests\nUsing Search, Filters, Cloning, Edit/ Delete features for test cases, Test Cycles and Test plans\nBDD Testcases\nCreating Custom Fields in Zephyr Scale\nReports\nGadgets\nTest Automation & Continuous Integration Support\nNo prior knowledge of programming is required to learn this course.\nDo a Hands-on exercises after taking each sessions in this course. Please feel free to contact me for any query.\nAll The Best and Happy learning!",
      "target_audience": [
        "Manual Testing Professionals",
        "Test Managers",
        "Developers",
        "Automation Testers",
        "Test Leads"
      ]
    },
    {
      "title": "Playwright Cucumber (BDD) - Typescript",
      "url": "https://www.udemy.com/course/playwright-cucumber-bdd-typescript/",
      "bio": "Playwright Cucumber - POM, HTML Report with screenshot, video and logs.",
      "objectives": [
        "How to write step definitions using Typescript and Playwright",
        "How to maintain the project structure and run scenarios parallel",
        "How to create a best test report with screenshots of failed scenario along with video and logs",
        "By the end of the course, you'll learn how to build an end to end BDD framework"
      ],
      "course_content": {
        "The basics of BDD": [
          "Create feature file, step definitions and configuration",
          "How to write step definitions?"
        ],
        "What is hook?": [
          "How to share page object to other file?",
          "How to take screenshots of failed scenarios?"
        ],
        "How to execute in parallel & generate HTML reports": [
          "How to generate HTML report?",
          "How to run in parallel, rerun failed tests?"
        ],
        "How to handle multiple environment and generate logs": [
          "What is ENV?",
          "How to add Winston logger?"
        ],
        "How to run tests on cloud?": [
          "Run using GitHub Actions!"
        ],
        "How to integrate with Page Object Model?": [
          "Page Object Model in detail"
        ],
        "Making the execution easier": [
          "Pass tags as command line argument",
          "Storage State"
        ],
        "Attach Trace viewer": [
          "How to attach trace viewer to the reporter?"
        ]
      },
      "requirements": [
        "Playwright basics with typescript is recommended"
      ],
      "description": "In this video, we will explore how to use cucumber with TypeScript. Cucumber is a popular behavior-driven development (BDD) tool that allows developers and stakeholders to collaborate on defining and testing application requirements in a human-readable format. TypeScript is a powerful superset of JavaScript that adds optional static typing, making it easier to catch errors before runtime. Combining these two tools can create more reliable and maintainable tests.\nWe will start by explaining the basics of BDD and Cucumber, including how to write feature files and step definitions. Then, we will show you how to set up a TypeScript project and integrate Cucumber. You will learn how to write step definitions in TypeScript, use the cucumber-js library to run your tests, and generate reports using cucumber-HTML-reporter.\n\n\nMicrosoft Playwright is an open-source Node.js library for automating web browsers. It was developed by Microsoft and released in 2019. Playwright allows developers to write scripts in JavaScript, TypeScript, or any other language that can compile to JavaScript, and use them to automate the testing of web applications.\nPlaywright supports multiple web browsers, including Chromium, Firefox, and WebKit, and provides a consistent API for interacting with them. This means that developers can write their scripts once and run them across multiple browsers, without having to worry about the differences in browser behavior.\nOne of the key features of Playwright is its support for modern web technologies, such as single-page applications, progressive web apps, and web components. A playwright can interact with these technologies in the same way that a human user would, allowing developers to write more robust and comprehensive tests.\nIn addition to testing, Playwright can also be used for other tasks, such as web scraping and web automation. It provides a wide range of features for interacting with web pages, including clicking elements, filling out forms, and taking screenshots.\nOverall, Microsoft Playwright is a powerful and flexible tool for automating web browsers and is a popular choice among developers for testing web applications.\nBy the end of this video, you will have a solid understanding of how to use Cucumber with TypeScript to write robust and maintainable tests for your applications. Whether you are a seasoned developer or just getting started with testing, this video will give you the knowledge and skills you need to be successful. So, grab your favorite beverage, and let's get started!",
      "target_audience": [
        "Test automation engineers",
        "SDET",
        "Testers who want to improve their BDD automation skills"
      ]
    },
    {
      "title": "S7 PLCSIM Advanced - Basics and Advanced Course",
      "url": "https://www.udemy.com/course/s7-plcsim-advanced-basics-and-advanced-course/",
      "bio": "Learn how you can use S7 PLCSIM Advanced to test and simulate PLC Programs. All functions and features from the scratch.",
      "objectives": [
        "Fundamental functions and features of PLCSim Advanced",
        "Advanced functions and features of PLCSim Advanced",
        "How to simulate a S7-1500 PLC in a local and network environment",
        "How to test your PLC program (TIA Project) with a virtual PLC",
        "How to simulate and test the logic of a real machine using the PLCSIM Advanced API",
        "How to create your own simulation application / tool (C#/.NET)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Download and Installation": [
          "Download",
          "Installation",
          "First Start"
        ],
        "Virtual PLC in a local environment": [
          "Local communication in PLCSIM Advanced",
          "Download a PLC Programm to a virtual PLC"
        ],
        "Virtual PLC in a network (Communication via TCP/IP)": [
          "Network communication in PLCSIM Advanced",
          "Setup the NPF (NetGroup Packet Filter) Driver",
          "Network settings",
          "Download a TIA Project to a virtual PLC via TCP/IP",
          "OPC-UA communication example"
        ],
        "Remote Connection": [
          "What is the remote runtime port?",
          "How to use the Remote Runtime Manager Port?"
        ],
        "Virtual Time & Memory Card": [
          "How does the virtual time work?",
          "How to change the virtual time in your PLC Program?",
          "Memory Card"
        ],
        "PLCSIM Advanced API - Simulation Tool": [
          "Introduction",
          "Creating our own Simulation Tool (Development Environment)",
          "The Visual Studio Project",
          "Writing our first API command",
          "Group of Elements",
          "Creating a Class for API Commands",
          "First Functions for our Class",
          "Connetion between our Class and the UI (User-Interface)",
          "Power ON and OFF a virtual PLC",
          "Change the PLC Operating State",
          "Changing the IP-Address, Subnet-Mask and Default-Gateway",
          "Change the Virtual Time",
          "Read out PLC tagnames",
          "Read out tag values from PLC",
          "Write Tag values to PLC",
          "Read out PLC address values",
          "Write PLC address values",
          "Real-life Simulation Example"
        ],
        "Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic knowledge about PLCs",
        "Basic TIA Portal skills",
        "Basic programming skills (Object-oriented programming)"
      ],
      "description": "Testing your PLC Program with a virtual PLC can help you to save time and money. It increases the quality of your PLC Programs and reduces the likelihood of programming errors. S7-PLC SIM Adavanced is a software from Siemens that allows you to create virtual PLCs for testing PLC Programs.\nIn the first half of this course, you will learn all relevant features and functions of PLCSIM Advanced. You will learn how you can virtual PLCs to test PLC Programs and simulate real automation hardware. This includes general features and functions of the standard PLCSIM Advanced User-Interface (UI) and advanced features like working with multiple virtual PLCs in a distributed network. After you’ve completed the first half you will be able to fully use all functions of the standard PLCSIM Advanced software.\nNevertheless, the main focus of this course lies in the second half. Here you will learn about the PLCSIM Advanced API. You will learn how you can use the API to create you own simulation and testing tool. In this course we will create such a tool using the programming language C# from the scratch. It will enable you to create profound simulations of you machine.\nAfter you have completed this course, you should be able to perform far-reaching simulations and tests of your automation projects. You will be able to perform most of your tests with virtual PLCs instead of real PLCs and saving time and money with it.",
      "target_audience": [
        "PLC Programmer",
        "Automation engineers",
        "Software engineers",
        "Test engineers",
        "Software Developers"
      ]
    },
    {
      "title": "Selenium 4.0 Observability",
      "url": "https://www.udemy.com/course/selenium4observability/",
      "bio": "Learn how to implement observability with Selenium",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Knowledge of Selenium and Java"
      ],
      "description": "With the rise in importance of non functional tests, it has become inevitable that the systems developed are observable. Being observable means providing external evidences using which one is able to understand the internal state of the system in function.\nWith the release of Selenium 4, observability is now an integral part of the tool. It allows Selenium to be integrated using open telemetry to tools like Jaeger to understand and log information of a web application under test.\n\n\nTo understand this, we have used a gcp machine on which we invoke selenium grid using docker. We use the open telemetry with tool Jaeger to observe the system as various commands drive the web application.\nThis course provides a hands on experience to set up a lab on the go, and with use of direct commands provided one will be able to implement observability at their own system.\nThe course provides a step by step instructions.\nThe course was recorded as part of the global testing conference 6th edition brought by agile testing alliance.\nThis course was the keynote delivered by Aditya garg.\n\n\nIn this course series following topics are covered -\n\n\n1.Selenium Grid and importance of traceability in Distributed architecture\n2.Understanding Observability components in Selenium 4.0 and installing coursier\n3.Setting up a GCP machine with docker\n4.Opening up necessary ports\n5.Running Jaeger on the GCP machine\n6.Setting up traceability in SeleniumGrid 4.0\nExecuting the tests and observing the trace",
      "target_audience": [
        "Software Test Engineers"
      ]
    },
    {
      "title": "Web Automation Made Easy: Cucumber and Selenium with Java",
      "url": "https://www.udemy.com/course/cucumber-with-selenium-java/",
      "bio": "Learn to Build Robust Web Test Automation Frameworks Using Cucumber, Selenium, and Java with a BDD Approach",
      "objectives": [
        "Write test scripts in Cucumber",
        "Describing Automation Scripts in Gherkin Syntax",
        "Learn Gherkin Keywords",
        "Learn about Feature files and Step definitions",
        "Learn about different keywords and web interactions in Selenium"
      ],
      "course_content": {
        "Setting up test automation environment": [
          "Installing Code Editor for Selenium; IntelliJ Idea",
          "Creating first Cucucmber/selenium Project",
          "Project Dependencies",
          "Installing Cucumber Plugin"
        ],
        "Gherkin Syntax in Test Automation with Cucumber/Selenium for BDD": [
          "Introduction to Cucumber Framework for Test Automation",
          "Writing a feature file - Gherkin Syntax"
        ],
        "Running Scripts for Test Automation with Cucumber/Selenium for BDD": [
          "Installing Chrome Driver",
          "Writing first Step Definition Snipet",
          "Resolving Given Step Definition",
          "Resolving When Step Definition",
          "Resolving Then Step Definition",
          "Before and After Functions in Cucumber"
        ],
        "Enhancing the Cucumber Test Automation Framework": [
          "Passing parameters in Cucumber",
          "Setting up the test environment before scenario execution",
          "multiple data multiple run in Cucumber - writing the feature",
          "multiple data multiple run in Cucumber - writing step definition",
          "Final thoughts about Cucumber & more"
        ],
        "Java programming language of Cucumber/Selenium for BDD": [
          "Setting up the web driver",
          "Selenium to visit a web page for automation",
          "Selenium to Locate elements on a web page",
          "Selenium to Interact with Elements on the Screen",
          "Selenium to verify elements on a web page",
          "Selenium to end an automation session"
        ]
      },
      "requirements": [
        "Basic Programming Language knowledge",
        "Some QA knowledge (ISTQB course/certificate prefered but not necessary)"
      ],
      "description": "Learn in this course about Cucumber and Selenium. The powerful tools for test automation.\nComplete course to get you started. All the tools used are free source. 24 lectures with examples. Fully coverage of all aspects of the subject.\nWhat's cucumber?\nCucumber is a tool that supports Behaviour-Driven Development(BDD). If you’re new to Behaviour-Driven Development read our BDD introduction first.\nWhat is Gherkin?\nGherkin is a set of grammar rules that makes plain text structured enough for Cucumber to understand. The scenario above is written in Gherkin.\n\n\nWhat are Step Definitions?\nStep definitions connect Gherkin steps to programming code. A step definition carries out the action that should be performed by the step. So step definitions hard-wire the specification to the implementation.\n\n\nWhat's Selenium?\nSelenium automates browsers.\nWhat you do with that power is entirely up to you.\nPrimarily it is for automating web applications for testing purposes, but is certainly not limited to just that.\nBoring web-based administration tasks can (and should) also be automated as well.\n\n\n\nWhat is Automation Testing?\nAutomation Testing is a software testing technique that performs using special automated testing software tools to execute a test case suite. On the contrary, Manual Testing is performed by a human sitting in front of a computer carefully executing the test steps.",
      "target_audience": [
        "Beginner Test Automation Engineers",
        "Manual Test Engineers looking to start learning test automation",
        "QA Managers who wish to know how Test Automation works",
        "Students in Computer Sceince/Engineering",
        "Students in all fields want to start career in Testing"
      ]
    },
    {
      "title": "Cypress Fundamentals: UI Testing Made Simple",
      "url": "https://www.udemy.com/course/cypress-made-simple/",
      "bio": "Learn Cypress from scratch: full setup, JavaScript intro, and UI testing step by step",
      "objectives": [
        "Install Cypress and required tools across different operating systems",
        "Understand the Basics of JavaScript",
        "Use JavaScript in Testing",
        "Write and Execute Tests",
        "Debug and Troubleshoot Tests",
        "Automate Web UI Testing",
        "Develop Programming Skills for Test Automation"
      ],
      "course_content": {
        "Введение": [
          "Introduction",
          "What you will learn",
          "Compare Cypress with Selenium",
          "Compare Cypress with Playwright",
          "Course Timeline"
        ],
        "Environment Setup": [
          "Environment Setup – Tools for Local Testing",
          "Installing Node.js on macOS",
          "Installing Visual Studio Code on macOS",
          "Installing Git on macOS",
          "Installing Visual Studio Code on Windows",
          "Installing Node.js on Windows",
          "Installing Git on Windows",
          "Installing Visual Studio Code on Ubuntu",
          "Installing Node.js on Ubuntu",
          "Installing Git on Ubuntu"
        ],
        "JavaScript Fundamentals": [
          "Intro to JavaScript Fundamentals for Test Automation",
          "Declaring Variables in JavaScript",
          "Understanding Data Types in JavaScript",
          "Working with Strings: Concatenation and Template Literals",
          "Using Arithmetic and Assignment Operators",
          "Logical Thinking: Comparison and Logical Operators",
          "Defining and Calling Functions",
          "Understanding Variable Scope",
          "Mastering Closures",
          "Timers in JavaScript: setTimeout and setInterval",
          "Controlling Code Flow: if, else, and Ternary Operator",
          "Loops Explained: for, while, and do-while",
          "Advanced Loops: for...of and for...in",
          "Handling Errors: try...catch and Best Practices",
          "Working with Objects in JavaScript",
          "Creating and Using Classes and Methods",
          "Inheritance and Polymorphism Made Simple"
        ],
        "Cypress basics": [
          "Cypress Fundamentals: Module Overview & What to Expect",
          "Installing Cypress: Step-by-Step Setup Guide",
          "Getting Started with Cypress Test Runner and Configuration Files",
          "Creating Suites & Tests",
          "Visiting Pages inside of E2E Tests",
          "Selectors and other terminology",
          "Selecting Elements on a Webpage",
          "Selecting Elements by Visible Text",
          "Using Hooks to Optimize Your Test Flow",
          "Basic Assertions in Cypress: Part I (Visibility Checks)",
          "Basic Assertions in Cypress: Part II (Exist & Text Checks)",
          "Advanced Assertions and Chaining Techniques",
          "Cypress get() vs find(): How to Select Elements Properly",
          "Interaction with web elements: type() and click()",
          "Cypress Command Chaining: Cleaner, Smarter Test Code",
          "Implicit vs Explicit Assertions in Cypress",
          "Understanding Cypress Logs",
          "Cypress Debugging: How to Troubleshoot Failing Tests",
          "Verifying Successful Logout"
        ]
      },
      "requirements": [
        "You do not need prior programming experience or pre-installed software."
      ],
      "description": "Ready to boost your QA career with one of the most in-demand testing tools?\nThis course will help you master Cypress from the ground up — no fluff, just practical skills you’ll apply in real test scenarios.\nWe begin with the full environment setup: step-by-step installation of Node.js, Git, and Visual Studio Code — on Windows, macOS, or Ubuntu. Then we move into JavaScript essentials tailored for testers, even if you’ve never written code before.\nFrom there, you'll dive into Cypress fundamentals:\n- Selecting and interacting with elements\n- Writing positive and negative test cases\n- Working with assertions, debug tools, and command logs\n- Testing real form behavior with a login page\n- Improving test readability through chaining and best practices\nThese basics are fully available and packed with live demos and step-by-step guidance.\nWhat's next?\nWe’re actively working on upcoming sections to expand the course, including:\n- AI-enhanced workflows\n- Testing dynamic React interfaces inside an admin panel\n- CI/CD integration for automated test pipelines\nOnce released, these modules will be added at no extra cost and you will updated.\nWhether you're a manual tester taking your first steps in automation or looking to gain confidence with Cypress, this course is designed to help you build a solid foundation — and grow from there",
      "target_audience": [
        "Anyone interested in learning test automation or JavaScript for testers, regardless of their background, is welcome."
      ]
    },
    {
      "title": "Mastering JMeter 5.0",
      "url": "https://www.udemy.com/course/mastering-jmeter-50/",
      "bio": "A comprehensive guide to automating performance measurement for your website and web applications using JMeter 5.0",
      "objectives": [
        "Understand various types of assertion and master assertion scripts",
        "Learn and implement various logic controllers to make your scripts robust and efficient",
        "Understand how to use a range of samplers to send requests to the web server under test",
        "Integrate JMeter with Selenium to extend the web testing capabilities in your workplace",
        "Discover advanced scripting in Java with Beanshell for JMeter",
        "Build scalable and maintainable test plans",
        "Understand master-slave configurations and the importance of the client-server architecture",
        "Automate web performance testing by utilizing JMeter's non-GUI mode",
        "Employ Blazemeter to extend your JMeter scripts on the cloud",
        "Monitor and understand performance metrics by analyzing test reports."
      ],
      "course_content": {
        "Basic Scripting - Assertions": [
          "The Course Overview",
          "Duration and Size Assertions",
          "HTML Assertions",
          "XML and XML Schema Assertions",
          "Response Assertion",
          "XPath and JSON Assertions",
          "JSR223 Assertions",
          "Test your knowledge"
        ],
        "Intermediate Scripting - Logic Controllers": [
          "Simple, Once Only, and Loop Controllers",
          "Random and Random Order Controllers",
          "Interleave Controller",
          "Throughput Controller",
          "Runtime Controller",
          "If and While Controllers",
          "Switch, Module, and Include Controllers",
          "ForEach Controller with Regular Expression Extractor",
          "ForEach Controller with XPath Extractor",
          "Recording Controller",
          "Test your knowledge"
        ],
        "Sampler (Requests)": [
          "SMTP Sampler",
          "SMTP Sampler Script",
          "JDBC Sampler",
          "JDBC Sampler Script",
          "FTP Sampler",
          "OS Process, Debug, and Flow Control Action Sampler",
          "OS Process, Debug and Flow Control Action Sampler - Script",
          "Test your knowledge"
        ],
        "Integration of Selenium with JMeter": [
          "Selenium Integrating with JMeter",
          "Integrating with Selenium WebDriver - Script",
          "Setting Up JUnit Testcases into JMeter",
          "Integrating with Selenium WebDriver Using JUnit Sampler",
          "WebDriver Set Sampler - Extending WebDriver Browser Based Test",
          "WebDriver Set Sampler - Script",
          "Selenium JMeter Testcase Example -HTMLUnit Driver",
          "Test your knowledge"
        ],
        "Advanced Scripting": [
          "BeanShell Scripting Basics and Variables",
          "Advanced Post and PreProcessors",
          "BeanShell PostProcessor",
          "BeanShell PreProcessor",
          "Generating Dynamic Values with BeanShell Sampler",
          "Test your knowledge"
        ],
        "Overview of Test Controller": [
          "Listeners",
          "The View Results Tree",
          "Aggregate Report",
          "Test your knowledge"
        ],
        "Designing Test Plan": [
          "Workload Designing",
          "Script Validation",
          "The Baseline Test",
          "Master Slave Configuration",
          "Importance of Client Server Architecture Mechanism",
          "Step-by-Step Example to Run Tests on Slave from Client Machine",
          "Test your knowledge"
        ],
        "JMeter Validations in Non-GUI Mode Testing": [
          "Commands to Run Tests on Non-GUI Mode",
          "Monitoring Results in Non-GUI Execution",
          "Test Executing Using Taurus",
          "Test your knowledge"
        ],
        "Execution and Reporting": [
          "Monitoring Tests",
          "Test Results Collaboration",
          "Test Results Analysis",
          "Test Execution in the GUI Mode",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Working knowledge of JMeter is assumed."
      ],
      "description": "JMeter has become an industry-standard tool for conducting functional, load, performance, and regression tests on web applications. It scales web development by helping you measure and analyze application performance.\nIn this course, you’ll learn to invoke key features of the latest version of this testing tool to achieve peak performance for your web applications, all the while improving the testing team’s productivity by developing realistic and scalable test plans and automation.\nYou'll start by mastering assertion types and scripts. Then you'll immerse yourself in the world of logic controllers and apply them to scripting. You'll get to grips with samplers, which help you send a request to the web server. You'll learn advanced scripting, work with test controllers, design test plans, and much more.\nBy the end of this course, you will be able to use JMeter 5.0 for performance and load testing.\nAbout the Author\nAfsana Atar is an accomplished test engineer with over 10 years' extensive experience in software testing. She extends her thought leadership to teams in a variety of domains from digital advertising, education, and healthcare to financial sectors, including banking, insurance, and trading.\nShe has worked for various organizations including Google, IBM, Principal Financial Group, and The Children’s Hospital of Philadelphia. Currently, she works for Susquehanna International Group, a financial trading firm.\nAfsana is a Certified Scrum Master (CSM), an Agile scrum practitioner, and part of the scrum alliance community. She has managed and worked on projects worth over a million dollars in various capacities ranging from Quality Assurance Engineer to QA Manager. She believes in sharing her experiences with the testing community to help foster greater learning and innovation.",
      "target_audience": [
        "This course is ideal for intermediate-to-experienced testers who want to take their performance testing skills up a notch. The course also provides a good implementation guide for advanced testers keen to integrate JMeter with other testing tools such as Selenium."
      ]
    },
    {
      "title": "API Testing with Postman: Basic to Advanced with ChatGPT",
      "url": "https://www.udemy.com/course/api-testing-with-postman-basic-to-advanced-with-chatgpt/",
      "bio": "API Testing Like a Pro: Your Complete Guide with Postman, Newman, Docker and ChatGPT",
      "objectives": [
        "Understanding of API and its importance.",
        "Key components of REST APIs.",
        "Using Postman for API testing from basics to advanced levels.",
        "Automating API tests with Postman and Newman.",
        "Integrating API tests into CI/CD pipelines with Docker.",
        "Generating tokens and working with environment variables.",
        "Detailed understanding of HTTP methods like GET, POST, PUT, DELETE, etc.",
        "Leveraging AI with ChatGPT for enhanced learning."
      ],
      "course_content": {
        "Understanding of API": [
          "API Testing with Postman: Basic to Advanced with ChatGPT (Promo)",
          "Example 1: What is API?",
          "Example 2: What is API?",
          "Models of API: Private & Public",
          "Example 1 of API: How it Works?",
          "Example 2 of API: How it Works?"
        ],
        "Components of Rest API": [
          "Soap vs Rest API",
          "Base URL for Rest API",
          "Header and Body",
          "Get, Post, Put, Delete, etc",
          "Status Code"
        ],
        "Detail Understanding of Postman": [
          "Downloading Postman",
          "What is Postman?",
          "Postman Interface Tour",
          "Rest API Examples",
          "Collections and Folders"
        ],
        "Real Time Practical Examples": [
          "Generating Tokens and Keys",
          "Understanding API Docs",
          "Performing HTTP Methods",
          "Concept of Environment",
          "Basic Testing with Post Script"
        ],
        "Working with SOAP API": [
          "Practical SOAP API Example"
        ],
        "Using Pre Function and Faker Library": [
          "Pre Function in Action",
          "Faker Library in Action"
        ],
        "Pre Request & Post Response in Detail": [
          "Pre Request in Detail",
          "Post Response in Detail"
        ],
        "API Chaining, Data Driven & Variables": [
          "Starting Automation From Scratch",
          "Data Driven Automation",
          "Working with Variables"
        ],
        "Newman Command Line Execution": [
          "Node.js and NPM Installation",
          "Newman Download and Concepts",
          "Execution Newman Command Line"
        ],
        "Docker Command Line Execution": [
          "Docker Download and Concepts",
          "Execution Docker Command Line",
          "Bonus"
        ]
      },
      "requirements": [
        "A computer with internet access.",
        "No prior experience with Postman is required."
      ],
      "description": "In today’s rapidly evolving tech landscape, mastering API testing is not just a skill—it's a necessity. The \"API Testing with Postman: Basic to Advanced with ChatGPT\" course is your gateway to becoming proficient in the essential practice of API testing. Whether you're a beginner looking to get started or a seasoned professional aiming to enhance your skills, this course is designed to take you from the basics to advanced levels with ease and efficiency.\nAPIs are the backbone of modern software development. They enable different systems to communicate and work together, making them indispensable in today’s interconnected digital world. However, with this critical role comes the responsibility of ensuring that APIs function correctly and reliably. This is where API testing comes in, and Postman is one of the most powerful tools available for this purpose.\nIn this comprehensive course, you’ll start by understanding the fundamentals of APIs—what they are, how they work, and why they are so crucial. From there, you’ll dive into the components of REST APIs, gaining a solid foundation in understanding how different HTTP methods like GET, POST, PUT, DELETE, and others operate. We’ll then guide you through detailed explanations and practical examples of how to use Postman for API testing, starting from downloading and setting up Postman to more advanced topics like working with collections, generating tokens, and using environment variables.\nBut we don't stop at just manual testing. The course also covers the automation of API tests, helping you streamline your testing process and make it more efficient. You’ll learn how to execute tests using the Newman command line and even integrate Docker for a seamless CI/CD pipeline experience. This means you’ll not only be able to conduct API tests more effectively but also integrate them into your overall software development workflow.\nMoreover, we leverage the power of ChatGPT to help you understand complex concepts more easily and provide instant support and suggestions as you work through your API testing journey. The integration of AI in your learning process makes this course unique, providing you with an edge in mastering these skills quickly and effectively.\nDon’t risk your career by ignoring the importance of API testing. Failing to master this skill could leave you struggling to keep up in a competitive job market or worse, lead to critical failures in your projects that could have been avoided. Instead, invest in your future by enrolling in this course today and gain the confidence to tackle any API testing challenge with Postman.",
      "target_audience": [
        "Beginners in API testing.",
        "Software developers wanting to enhance their API testing skills.",
        "QA professionals aiming to automate API testing.",
        "Anyone interested in learning Postman from scratch to an advanced level.",
        "Tech enthusiasts eager to integrate AI into their learning."
      ]
    },
    {
      "title": "ISTQB Foundation Level v4.0 Ultimate Exam Practice Test 2025",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl-v40-comprehensive-practice-exam/",
      "bio": "ISTQB Certified Tester Foundation Level (CTFL) v4.0 Practice Exam / Test. Best for Self-Study and Self Assessment",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ISTQB Certified Tester Foundation Level (CTFL) v4.0 is a comprehensive certification program designed for individuals who want to establish a strong foundation in software testing. This certification is recognized globally and is highly regarded in the industry. It covers all the essential concepts, techniques, and methodologies required to become a proficient software tester.\n\n\nWith the ISTQB Foundation Level CTFL v4.0 certification, you will gain a deep understanding of the fundamentals of software testing, including test design, test management, and test execution. You will learn how to identify and prioritize test cases, create effective test plans, and execute tests efficiently. This certification also emphasizes the importance of quality assurance and defect management, ensuring that you are equipped with the necessary skills to deliver high-quality software products.\n\n\nISTQB Foundation Level CTFL v4.0 certification is suitable for both beginners and experienced professionals in the field of software testing. Whether you are just starting your career or looking to enhance your existing skills, this certification will provide you with the knowledge and credibility to excel in your role. It is a valuable asset for individuals seeking career advancement opportunities or those who want to validate their expertise in software testing.\n\n\nISTQB Certified Tester Foundation Level (CTFL) v4.0 Certification Practice Exam is a comprehensive tool designed to help individuals prepare for the ISTQB CTFL certification exam. This practice exam covers all the key topics and concepts that are essential for passing the actual certification exam, ensuring that candidates are well-prepared and confident on exam day.\n\n\nThis practice exam is an invaluable resource for anyone looking to validate their software testing skills and knowledge. Whether you are a seasoned professional or just starting out in the field of software testing, this practice exam will help you identify areas where you need to focus your study efforts and improve your chances of passing the CTFL certification exam on your first attempt.\n\n\nISTQB Certified Tester Foundation Level (CTFL) exam details:\nExam Name : Certified Tester Foundation Level (CTFL)\nExam Code : CTFL\nPrice : 100 USD\nDuration : 75 minutes\nNumber of Questions : 40\nPassing Score : Pass / Fail\nFormat : Multiple Choice, Multiple Answer, True/False\n\n\nISTQB Certified Tester Foundation Level (CTFL) Exam guide:\nFundamentals of Testing\nWhat is Testing?\nWhy is Testing Necessary?\nTesting Principles\nTest Activities, Testware, and Test Roles\nEssential Skills and Good Practices in Tetsing\n\n\nTesting Throughout the Software Development Lifecycle\nTesting in the Context of an SDLC\nTest Levels and Test Types\nMaintenance Testing\n\n\nStatic Testing\nStatic Testing Basics\nFeedback and Review Process\n\n\nTest Analysis and Design\nTest Techniques Overview\nBlack-box Test Techniques\nWhite-box Test Techniques\nExperience-based Test Techniques\nCollaboration-based Test Approaches\n\n\nManaging the Test Activities\nTest Planning\nRisk Management\nTest Monitoring, Test Control and\nTest Completion\nConfiguration Management\nDefect Management\n\n\nTest Tools\nTool Support for Testing\nBenefits and Risks of Test Automation\n\n\nISTQB Foundation Level CTFL v4.0 certification program is designed to be accessible and flexible, allowing you to study at your own pace and convenience. It offers comprehensive study materials, practice exams, and interactive learning resources to ensure that you are well-prepared for the certification exam. Upon successful completion of the exam, you will receive the prestigious CTFL v4.0 certification, which will open doors to exciting career opportunities in the software testing industry.\n\n\nBy obtaining the CTFL v4.0 certification, you will not only enhance your technical skills but also demonstrate your commitment to professional development and continuous learning. This certification is recognized by employers worldwide and can significantly boost your career prospects. It serves as a testament to your competence and dedication in the field of software testing, making you a valuable asset to any organization.\n\n\nLegal Notice: This material is not accredited by the ISTQB.",
      "target_audience": [
        "This practice Exam will help you to figure out your weak areas and you can work on it to upgrade your knowledge.",
        "Have a fundamental understanding of the ISTQB Certified Tester Foundation Level (CTFL) Certification.",
        "You will be confident enough to take the ISTQB Certified Tester Foundation Level (CTFL) Certification exam and pass the exam at First attempt.",
        "Anyone looking forward to brush up their skills.",
        "Students who wish to sharpen their knowledge of ISTQB Certified Tester Foundation Level (CTFL).",
        "Anyone who is looking to PASS the ISTQB Certified Tester Foundation Level (CTFL) exam."
      ]
    },
    {
      "title": "A'dan Z'ye Yazılım Test Uzmanlığı ve Yapay Zeka Desteği 2025",
      "url": "https://www.udemy.com/course/adanzye-yazlm-test-uzman/",
      "bio": "Bilişim Sektöründe aranan bir Yazılım Test Uzmanı olmak için aradığın tüm bilgileri içeren en geniş anlatımlı kurs :2025",
      "objectives": [
        "Yeni bir meslek öğreneceksiniz : Yazılım Test Uzmanlığı",
        "Yazılım test alanına ait A'dan Z'ye geniş bir bilgi birikimi",
        "Hangi lisans derecesine sahip olursanız olun (mühendis, öğretmenlik veya başka bir meslek) yazılım test uzmanlığı mesleğine ait gerekli olan tüm bilgiler",
        "Yazılım testlerinde Yapay Zekanın nasıl kullanılabileceği",
        "ISTQB Temel Seviye sertifika sınavına hazırlık için bir başlangıç",
        "Bu alanda kullanılan Jira, Doors, LDRA, Review Board, Selenium, Crucible, TestRail, CodeScene, Checkstyle gibi yazılımlar hakkında bilgi",
        "Kendisine yeni bir kariyer yolu çizmek isteyenler için gerekli yazılım test bilgilerini öğrenerek Yazılım Test Uzmanlığına güvenli bir başlangıç yapabilirsiniz."
      ],
      "course_content": {},
      "requirements": [
        "Kursu izlemek için internet bağlantısı olan bir bilgisayar veya dizüstü bilgisayar veya mobil bir cihaz",
        "Tüm ders boyunca not almak için not defteri ve kalem"
      ],
      "description": "A'dan Z'ye Yazılım Test Uzmanlığı kursunu bana gelen telefonlar ve emailler sonrasında hazırlamaya karar verdim.\nBana ulaşan birçok kişi kendilerinin farklı alanlarda mezun olduklarını ancak kariyerlerini bilişim sektöründe yazılım test uzmanı olarak devam ettirmek istediklerini belirttiler. Bunun yanında bilişim alanında mezun olan ya da zaten bu alanda iş analisti, yazılım geliştirici, proje yöneticisi vb. unvanlarla çalışan ancak bundan sonraki kariyerlerini yazılım test uzmanı olarak devam ettirmek isteyenlerin sayısı da bir hayli  fazlaydı.\nBu iki grubun ortak noktası kendilerini bu alanda yetiştirecekleri, temel bilgileri öğrenebilecekleri kaynak talebinde bulunmalarıydı.\nBu eğitim tüm kişilerin ihtiyaçlarını karşılamak üzere tasarlanmıştır.\nEğitime yapay zekanın yazılım test faaliyetlerinde kullanımı ile ilgili yeni bölümü ekledik. Böylece yazılım test mühendisleri test faaliyetlerinde yapay zekayı nasıl kullanabileceklerini de eğitim içerisinde öğrenmiş olacaklar.  Yazılım testlerinde yapay zeka öğretilirken yapay zeka dünyasında en popüler yapay zekalardan biri olan ChatGPT'nin kullanımı esas alınmıştır. Amaç ChatGPT'yi tüm yönleri ile sizlere öğretmek değildir. Amaç ChatGPT'yi yazılım test faaliyetlerinde nerede, ne şekilde ve nasıl etkin kullanılacağı yönünde sizlere bilgi birikimi kazandırmaktır. Bu sayede yapay zekaya yeni başlayanlar içinde bir başlangıç noktası eğitim içerisinde oluşturulmuş olmaktadır.\nBizler kursun içeriğini güncel tutmaya ve yeni konular ile içeriği desteklemeye devam edeceğiz. Unutmayın kurs içeriğinde anlatılan tüm bilgiler yazılım testlerinin en temel konularıdır. Standart haline gelmiştir. Bu konular yazılım testlerinde daima aynı kalır sadece bu konuları destekleyen teknolojilerde değişimler olur. İşte yapay zekada günümüzde bu noktada yeni bir teknolojik gelişme olarak karşımızda durmaktadır.\nEğitimimizi beğeneceğinizi umuyoruz, beğenilerinizi  paylaşmaktan ve eğitim içeriğinde görmek istediğiniz konuları bize göndermekten çekinmeyin,\nŞimdi bir fincan çay, kahve veya başka bir favori içeceğinizi hazırlayın ve eğitimin tadını çıkarın!\nYeni mesleğiniz şimdiden hayırlı olsun... Başarılar..Bol kazançlar..",
      "target_audience": [
        "Hiçbir yazılım test tecrübesi olmayan ve bilişim sektörüne giriş yapmak isteyenler",
        "Yazılım Test Uzmanlığı pozisyonuna işe başlamak isteyenler, yeni başlamış olanlar veya bu alanda bilgisini pekiştirmek isteyenler",
        "Yazılım Testleri konusunda bilgi sahibi olmak isteyenler",
        "İş Analistleri, Proje Yöneticileri ve diğer proje elemanları",
        "Bilgisayar mühendisliği ve/veya Yazılım Mühendisliği öğrencileri",
        "Yönetim Bilişim Sistemleri ve/veya Bilgisayar Programcılığı öğrencileri",
        "Yazılım Test Danışmanları ve IT Yöneticileri"
      ]
    },
    {
      "title": "Zerocode Test Automation Framework - From Zero to Hero",
      "url": "https://www.udemy.com/course/master-zerocode-testing-framework-from-zero-to-hero/",
      "bio": "Learn Zerocode framework for pain-free, efficient test automation.",
      "objectives": [
        "Automated Testing of REST API",
        "Automated Testing of Authentication/Security",
        "Automated Testing of Databases",
        "Automated Testing of Apache Kafka(producer/consumer)",
        "Automated Testing of SOAP API",
        "Zerocode Test Automation Framework"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "A Closer look at the Framework",
          "Pre-Requisites",
          "What Dev Environment we need",
          "Application Overview",
          "Get the Code",
          "Importing Zerocode in our project"
        ],
        "REST/SOAP API TESTING": [
          "Section Overview",
          "Getting Started",
          "ZeroCode Scenario Helper Plugin",
          "Getting comfortable with writing steps",
          "Some Useful Properties",
          "Matchers vs Validators",
          "Value and Assertion Tokens",
          "Authentication/Security",
          "Soap Testing",
          "useful notes",
          "quiz"
        ],
        "Database Testing": [
          "Section Overview",
          "what is database testing?",
          "Execute Java method from Scenario",
          "Inject values from property file to Java Class",
          "database testing - part 1",
          "database testing - part 2",
          "useful notes"
        ],
        "Load Testing": [
          "Section Overview",
          "Load Testing Overview",
          "load testing practical - part 1",
          "Multi load testing practical - part 2",
          "useful notes"
        ],
        "Kafka Testing": [
          "Book Subscription Model Overview",
          "Manually test book subscription model",
          "Write property files",
          "Producer Testing",
          "Consumer Testing",
          "Set Up Github continuous integration (CI)"
        ],
        "Bonus": [
          "bonus"
        ]
      },
      "requirements": [
        "Basic understanding of Java"
      ],
      "description": "Test Automation is hard, time-consuming. You need to use many tools to test different parts of the applications. Writing code takes so much time and it's very error-prone.\nLearn Zerocode test automation framework for pain-free, efficient testing. It aims to simplify things in two major  ways:\nsupports testing multiple parts of applications( REST/SOAP API, databases, Apache Kafka etc)\nuses a declarative style of testing, which means that we DON'T have to write the actual testing code.\nThe  Framework is becoming very popular. Thousands of automation testers/developers already use the framework on daily basis. We can say it's quite rapidly becoming mainstream.\nIn the course you will learn:\nREST API testing\nSOAP testing\nSecurity testing\nDatabase testing\nLoad testing (can be expanded to other types of performance testing)\nApache Kafka (  producer/consumer) Testing\n\n\nI try to explain things as easily as possible. I balance slides and practical examples so that you get the most value.\nIn all sections, I also show you relevant parts of the framework's source code, so that you will get a deep understanding of how internal parts work.\n\n\nCourse structure\nEvery topic has its own separate section. Section 2 is an exception. In that section, I explain REST/SOAP API testing mostly, but I also show you how to do security testing. I highly recommend going through that section, since lots of framework fundamentals are also discussed there.\n\n\nPrerequisites\nZeroCode framework is written in Java. You need to have a very basic understanding of Java.\nEach section has its own prerequisites. For a detailed explanation please see the prerequisite video in section 1.\n\n\nHow to get the source code.\nThe source code is available at the Github repo that I will provide. I also provide the source code after each section for your convenience.",
      "target_audience": [
        "Developers/Test Automation Engineers who want to make test automation process super easy",
        "Manual Testers who want to transition into test automation",
        "DevOps who are curious about test automation"
      ]
    },
    {
      "title": "Build a Buy Bot in an hour using Selenium IDE",
      "url": "https://www.udemy.com/course/build-a-buy-bot-in-an-hour-using-selenium-ide/",
      "bio": "Everything you need to know to go from Zero to Hero using Selenium IDE",
      "objectives": [
        "The basics of how to use Selenium IDE.",
        "How to write test cases using Selenium IDE.",
        "How to build a \"Buy Bot\" using Selenium IDE.",
        "How to execute test websites using Selenium IDE."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About the Course",
          "Instructor Info"
        ],
        "Selenium IDE Overview": [
          "What is Selenium IDE?",
          "What does Selenium IDE do?"
        ],
        "Installing Selenium IDE": [
          "Installing Selenium IDE on Chrome",
          "Installing Selenium IDE on Firefox"
        ],
        "Selenium IDE UI Overview": [
          "Selenium IDE UI 1",
          "Selenium IDE UI 2",
          "Selenium IDE UI 3",
          "Selenium IDE UI 4",
          "Selenium IDE UI 5"
        ],
        "Selenium IDE Writing Tests": [
          "Assert and Verify",
          "Test Suites",
          "Buying from Amazon",
          "Looping Tests"
        ],
        "Course Materials": [
          "Github Repo"
        ]
      },
      "requirements": [
        "\"No Code/Low Code\" course. Some minor JavaScript is used but its extremely limited."
      ],
      "description": "Selenium IDE\nThis is an introductory course for Selenium IDE, teaching the basics of Selenium IDE. Selenium IDE is a great tool for quickly writing and executing frontend web tests. With an easy to understand UI and just a few clicks of the mouse you can start to write your first frontend tests. The final section of the course dives into the process of writing auto buy tests and a buy bot for Selenium IDE. Don't wait get started today using Selenium IDE!\nWhat you will Learn\nWhat is Selenium IDE\nWhat can Selenium IDE do\nHow to install Selenium IDE\nSelenium IDE UI\nHow to write tests\nOrganizing tests with test suites\nHow to execute tests\nHow to build a Buy Bot\nRequire Experience\nThis is a low code / no code course for beginners. You do NOT need to be a developer to be able to be able to understand this course. Some understanding of Javascript will be helpful for more advance Selenium IDE use cases.\nInstructor\nMy name is Mitchell Quinn and I am a senior software engineer. I have worked for a variety of companies from small start ups to large tech giants. The focus of my career has been API development and system architecture. Selenium IDE is a tool that I use regularly to help write frontend tests for my web projects.",
      "target_audience": [
        "Beginner developers who are interested in learning some basic frontend testing using Selenium IDE",
        "Individuals interested in building a Buy Bot"
      ]
    },
    {
      "title": "Selenium with Headless Chrome Browser, HTMLUnit & PhantomJs",
      "url": "https://www.udemy.com/course/selenium-with-headless-chrome-browser-htmlunit-phantomjs/",
      "bio": "Learn headless browser to speed up your test execution.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Core Java"
      ],
      "description": "You will learn the following :\nIntegration of Headless Chrome Browser, which makes automation execution faster than ever.\nIntegration of headless browser with your existing selenium scripts\nIntegration of Powerful PhantomJs headless browser and Will talk about it's features\nIntegration of HtmlUnitDriver, which does not require any binary file and it's platform-independent.\nA running project with examples of headless browser and Github link for the same.\nHow to take a Screenshot on a headless browser.",
      "target_audience": [
        "Selenium Tester curious about Headless Browser testing"
      ]
    },
    {
      "title": "Automação de Testes com Capybara, Cucumber e Ruby",
      "url": "https://www.udemy.com/course/automacao-de-testes-com-capybara-cucumber-e-ruby/",
      "bio": "Curso para fazer Automação de um site utilizando capybara, cucumber e ruby.",
      "objectives": [
        "Configurar todo o ambiente para trabalhar com testes de aplicações Web.",
        "Criar um projeto de testes automatizados em Ruby Criar testes automatizados utilizando o Capybara.",
        "Interagir com os principais elementos.",
        "Organizar os códigos tornando-os mais legíveis, reusáveis e fáceis de manter.",
        "Entender a forma de localizar elementos na tela e criar xpath, css mais robustos .",
        "Aprender a gerar relatórios"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Configurando o Ambiente": [
          "Configurando o Windows",
          "Configurando o Linux",
          "Configurando o Mac",
          "Instalando Visual Studio Code e plugins"
        ],
        "Ruby Básico": [
          "O que é o Ruby",
          "Ruby Básico(Parte I).",
          "Ruby Básico (Parte II).",
          "Ruby Básico (Parte III).",
          "O que é Orientação Objetos.",
          "Orientação Objetos(Parte I).",
          "Orientação Objetos(Parte II).",
          "Orientação Objetos(Parte III)."
        ],
        "Cucumber": [
          "O que é Cucumber.",
          "Primeiro projeto em Cucumber.",
          "Trabalhando com Cenário.",
          "Trabalhando com Esquema de Cenário.",
          "Trabalhando com Contexto.",
          "Trabalhando com Data Table",
          "Trabalhando com outros steps",
          "Trabalhando com Tags",
          "Trabalhando com Hooks."
        ],
        "Mapear elementos com CssSelector e Xpath": [
          "Aprendendo Mapear com Xpath",
          "Aprendendo Mapear com CssSelector"
        ],
        "Instalando docker e subindo o projeto na máquina local": [
          "Instalando docker",
          "Subindo o projeto localmente"
        ],
        "Capybara com cucumber": [
          "Instalando capybara e drivers",
          "Configurando capybara e drivers",
          "Acessando o primeiro site.",
          "Buscando elementos.",
          "Links e Botões",
          "Preenchendo formulários",
          "Combobox, DropDown e Autocomplete",
          "Radiobox e Checkbox",
          "Verificando se elementos existem na tela.",
          "Verificando se elementos não existem na tela.",
          "Trabalhando com MouseHover",
          "Trabalhando com Iframe e modal.",
          "Trabalhando com janelas e alerts.",
          "Trabalhando com Upload de arquivos.",
          "Trabalhando com Script",
          "Usando teclado",
          "Trabalhando com drag en drop",
          "Trabalhando com end-to-end"
        ],
        "Page Objects com SitePrism": [
          "Instalação do SitePrism e criando um page objects",
          "Adicionando urls e navegando na página.",
          "Mapeando elementos.",
          "Mapeando uma lista de elementos.",
          "Trabalhando com AJAX.",
          "Trabalhando com sessões.",
          "Trabalhando com Iframes.",
          "Instanciando melhor um Page Object"
        ],
        "Rodando em vários ambientes": [
          "Rodando em ambiente de testes, homologação e produção.",
          "Rodando em vários Browsers.",
          "Rodando com Headless e sem headless"
        ],
        "Relatórios": [
          "Relatórios padrão do cucumber."
        ]
      },
      "requirements": [
        "O aluno deve ter noções de lógica de programação, algoritmos e o básico de programação."
      ],
      "description": "Este curso irá te ensinar a fazer automações em sites utilizando a metodologia:\nBDD(Behavior Driven Development  Desenvolvimento Guiado por Comportamento).\nOnde usaremos o Cucumber framework e conheceremos os fundamentos do Gherkin.\nIremos conhecer o framework Capybara que ajuda você a testar aplicativos da web, simulando como um usuário real interage com seu aplicativo.\nE iremos usar a linguagem Ruby bem como conhecer e trabalhar com Programação Orientada a Objetos.",
      "target_audience": [
        "Testadores, desenvolvedores e Analistas iniciantes interessados em aprender a automatizar testes funcionais."
      ]
    },
    {
      "title": "Modern Software Testing",
      "url": "https://www.udemy.com/course/modern-developer-testing/",
      "bio": "Principles, practices, patterns, and tips from the trenches",
      "objectives": [
        "The most common real-world trade-offs in software testing",
        "Different techniques to engineer more rigorous test cases",
        "Decide between unit, integration, or system tests, as well as when or not to mock",
        "Design highly testable units of code",
        "Understand what makes it easy for developers to write tests"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this course!",
          "Test to guide development vs test to find bugs",
          "The laws of software testing"
        ],
        "Engineering strong tests": [
          "What's engineering strong tests all about?",
          "Gut feeling testing vs systematic testing",
          "Being more systematic with domain testing",
          "Bugs love boundaries!",
          "Code coverage the right way!",
          "It's not about following a recipe!",
          "TDD: is it really magical? Should I do it?"
        ],
        "Getting good feedback from our tests": [
          "What's good test feedback all about?",
          "Unit vs integration test: what matters is quality of feedback",
          "Simple and fast tests are better than slow and complex tests!",
          "I would have found this bug with e2e testing! No, you wouldn't!",
          "It's all about divide to conquer",
          "Focus on your use cases!",
          "You need testing infrastructure!"
        ],
        "Mocking": [
          "Why do you want to mock in first place, and why you should want it!",
          "When to mock, when not to mock",
          "Internals vs peers: a nice way to classify mockable dependencies",
          "Stubs, fakes, and mocks: what's the difference?",
          "What's the main problem with mocks? What to pay attention to?"
        ],
        "Designing for testability": [
          "Why is design for testability so important?",
          "Ports and adapters",
          "Controllability and observability",
          "Why are smaller classes better than large classes?"
        ],
        "Engineering high-quality test code": [
          "Why do I care about test code quality?",
          "What makes a good test code?",
          "Tests without assertions, the biggest of the sins!",
          "Test code should look stupid!"
        ],
        "Other testing dilemmas": [
          "The testing dilemmas never end!",
          "Flaky tests and how to avoid them",
          "Developers vs QA engineers",
          "How to test in a microservice world?",
          "Testing your legacy without having to refactor everything first",
          "What's mutation testing?"
        ],
        "Good bye!": [
          "See you soon!"
        ]
      },
      "requirements": [
        "Some experience with testing frameworks in any programming language (Java's JUnit, C#'s NUnit, Python's pytest, etc)",
        "Understanding of the basics of software design (i.e., classes, dependency injection)",
        "Have used a mocking framework, even if only the basics of the tool"
      ],
      "description": "Are you a software engineer that already knows how to write automated tests, but wants to get better at it? This is the course for you.\nThis course isn't about teaching you some testing tool or framework. It's much bigger and deeper than that. It's about explaining to you all the principles, practices, and patterns of software testing, their advantages and disadvantages, so that you can write very strong tests that are actually able to find bugs, in a very productive way.\nThis course addresses topics like:\nHow to write test cases that go beyond the happy paths?\nWhen to go for unit testing and when to go for integration testing?\nHow can I use code coverage to help me improve my tests (and finally stop hating it!)?\nWhat's the secret to write many tests?\nHow to make tests that run fast and are simple?\nWhen to mock, and when not to mock something?\nWhat's key to design testable systems?\nHow can I fight flaky tests?\nHow to test micro services?\nHow to test legacy systems?\nWhat's the role of QAs if I'm the one writing tests?\n... and many more!\nThis course isn't focused on one specific technology or programming language, and everyone can benefit from it. These principles, practices, and tips emerge from my almost 20 years of experience in helping teams write better tests.\nThis course will feel like a conversation between two engineers. The majority of the course is about me speaking to the camera, with a few illustrations and highlights when needed. This course is perfect for you to take while cleaning the dishes, or taking the subway, as it requires your ears more than your eyes!",
      "target_audience": [
        "Software developers that already know how to write tests, but want to get better at it!"
      ]
    },
    {
      "title": "DevSecOps Basics: Your First Steps From DevOps to DevSecOps",
      "url": "https://www.udemy.com/course/complete-devsecops-training-land-your-dream-it-job/",
      "bio": "This comprehensive course shows you everything you need to understand to get started in DevSecOps",
      "objectives": [
        "Integrate security into CI/CD pipelines using tools like Snyk and GitHub Actions",
        "Develop and secure code by applying SAST and best secure coding practices",
        "Conduct comprehensive threat modeling and implement key DevSecOps principles",
        "Automate infrastructure and ensure compliance with Infrastructure as Code and InSpec"
      ],
      "course_content": {
        "Introduction": [
          "Unlocking DevSecOps: Begin Your Path to Secure Development",
          "Getting Started with DevSecOps: Navigating Labs and Building Essential Skills"
        ],
        "DevSecOps Fundamentals": [
          "Introduction to DevSecOps",
          "The Shift-Left Approach",
          "DevSecOps in the SDLC",
          "Benefits of Integrating Security Early",
          "Key DevSecOps Principles"
        ],
        "Core DevSecOps Technologies": [
          "The Fundamentals of Version Control Systems",
          "Set Up a Version Control Account - GitHub",
          "Install git on Windows and Ubuntu",
          "Configure git",
          "Practice Initial Commit - Modifications and Adding a New Commit",
          "Mastering git - presentation",
          "Branching Fundamentals",
          "Encountering and Resolving Conflicts",
          "Pull Requests and Reviews",
          "Protect Main Branch",
          "Change repo visibility",
          "CI/CD Foundation",
          "CI/CD Foundation: Hands-On",
          "Add Linting workflow to GitHub Actions",
          "Add Unit Testing Work Flow to GitHub Actions",
          "Building CI/CD Workflows for DevSecOps",
          "Secure Your Code: Integrating Snyk with GitHub Actions for Python Dependency",
          "Fortify Your Python Code Integrating Bandit for Enhanced Security",
          "Prevent Leaks Implementing Secret Detection with GitHub Actions",
          "CI/CD with Docker and GitHub Actions: Overview",
          "CI/CD with Docker and GitHub Actions: Hands-On"
        ],
        "DevSecOps Practices": [
          "Threat Modeling Overview",
          "Introduction to STRIDE Threat Model",
          "Introduction to PASTS Model",
          "Introduction to DREAD Model",
          "Introduction to Attack Trees Model"
        ],
        "Secure Code": [
          "Introduction to Secure Code",
          "Understanding and Preventing Injection Flaws",
          "Understanding and Preventing Injection Flaws",
          "Cross-Site Scripting Avoidance"
        ],
        "Infrastructure as Code and Its Security": [
          "Introduction to Infrastructure as Code",
          "Introduction to Platform, Infrastructure, and Configuration Management",
          "Security in Infrastructure as Code",
          "Push and Pull-Based Configuration Management Systems",
          "Golden Image Creation with Packer and Ansible",
          "Lab 1: Building Secure Golden Images with Packer and Ansible",
          "Lab 2: Building Secure Golden Images with Packer and Ansible.mp4",
          "Lab 3: Building Secure Golden Images with GitHub Actions"
        ],
        "Compliance as Code": [
          "Automating Compliance- Integrating Standards into DevOps Pipelines",
          "Secure Your Infrastructure- Writing InSpec Compliance Rules",
          "Integrating InSpec with Packer for Automated Testing"
        ],
        "ِDevSecOps Insights & Articles": [
          "DevSecOps in 2024: The Essential Fusion of Security and Agile Development",
          "DevSecOps Engineer in 2024: Why DevOps Engineers Need Security Skills"
        ]
      },
      "requirements": [
        "Eager to learn",
        "No prior DevSecOps experience required"
      ],
      "description": "Unlock the full potential of secure software development with our comprehensive course, DevSecOps Basics: Your First Steps From DevOps to DevSecOps. Designed for developers, IT professionals, and security enthusiasts, this course bridges the gap between DevOps and security, emphasizing the critical integration of DevSecOps practices into the software development lifecycle (SDLC).\nBegin your journey with a solid foundation in DevSecOps fundamentals, exploring the shift-left approach and understanding the myriad benefits of embedding security early in the development process. Delve into key principles that underpin DevSecOps, ensuring you grasp the essential concepts that drive successful DevOps security initiatives.\nOur course offers an in-depth exploration of core DevSecOps technologies, including comprehensive modules on version control systems with Git and GitHub. Gain hands-on experience with CI/CD pipelines, leveraging tools like Snyk for dependency scanning and SAST (Static Application Security Testing) to identify vulnerabilities in your code. Through practical demonstrations, you will learn to integrate Snyk with GitHub Actions, implement secure coding practices with Bandit, and prevent sensitive data leaks using secret detection techniques.\nEnhance your security expertise with advanced DevSecOps practices such as threat modeling, secure code development, and infrastructure as code (IaC). Learn to create and manage secure golden images using tools like Packer and Ansible, and automate compliance with InSpec rules integrated into your DevOps pipelines. Our hands-on labs ensure you apply these concepts in real-world scenarios, solidifying your skills in DevSecOps and DevOps security.\nBy the end of this course, you will be equipped with the knowledge and practical skills to implement robust security measures seamlessly within your DevOps workflows. Whether you aim to enhance your current practices or embark on a new career in DevSecOps, this course provides the essential tools and insights to achieve your goals securely and efficiently.\nEnroll in DevSecOps Essentials with Practical Demos today and take the first step towards mastering the integration of development, operations, and security for a safer, more resilient software delivery process.\n\nEnroll Now !",
      "target_audience": [
        "For students, recent graduates, professionals, and those starting or changing careers in IT: This includes individuals or teams in technology and cybersecurity who have little to no work experience.",
        "For anyone looking to begin a career in cybersecurity, application security, or development: This is especially useful for those interested in working with cloud technologies.",
        "For professionals involved in creating, testing, or releasing applications to production: This applies whether you work on-premises, in a public cloud, or in a hybrid environment."
      ]
    },
    {
      "title": "Java Unit Testing with JUnit - Beginners",
      "url": "https://www.udemy.com/course/java-junit-for-beginners/",
      "bio": "JUnit tool for testing and test-driven web development practices from scratch.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Navigating Java Junit",
          "What Is Java Junit"
        ],
        "Fixtures": [
          "Fixtures Concepts And Practicals",
          "Test Suites"
        ],
        "Class": [
          "Create Class",
          "Assert Class",
          "Test Case Class"
        ],
        "Java Unit Example": [
          "Java Unit Example Part 1",
          "Java Unit Example Part 2",
          "Java Unit Assertion Class Example",
          "Java Unit Annotation Class Example",
          "Java Unit Time Test Example",
          "Java Unit Exception Test Example",
          "Java Unit Parameterized Example Part 1",
          "Java Unit Parameterized Example Part 2"
        ]
      },
      "requirements": [
        "As such, there is no prerequisite for learning JUnit, but knowledge of certain technologies and ideas will be helpful while learning this testing framework. As JUnit is a unit testing framework for Java Programming language hence knowledge of Java Language should be inherited before going through JUnit because eventually, you must code first then only you can test it. Basic knowledge of Software testing, various types of testing included in a software design phase, implementation of these testing, etc. will act helpful before going through this JUnit Training Course. Knowledge of best programming practices helps remove future errors from code. Will to learn new technologies and explore them."
      ],
      "description": "In this first tutorial, you will learn how to use JUnit for unit testing any code written in Java Programming language. Further, you will get to know about Fixtures Concepts and creating classes for testing purposes such as Test Case class, Assert Class, etc. The Tutorial is boosted up with examples being held up after completing each topic so that the topic can be retained by you for long.\nJUnit Testing is the widely used testing framework for Java Programming language currently. It is not only used for UI Testing but also Unit Testing. It is an open-source framework used for writing and running test scripts. Most of the testers are preferring JUnit over others as it allows for writing quality code in a faster way. It is the best unit testing framework for Java because it is quite fast in finding bugs, which makes our code reliable. Unit testing is a must for any healthy development so that the developer may know what his code is doing till now and whether it is behaving as expected by the coder and it also makes the habit to read code often rather than just writing it. All this reliability, speed, and bug-free coding enlistment help build some confidence in new developers.\nGoing along the course you will grasp many skills that help shape your future better and make the right decisions. One such skill that you can grasp while learning JUnit will make you a better developer as it helps you provide better and reliable code easily and makes you code faster. As it is used for unit testing it makes your habit to check the code more often than just writing it which eventually helps you enrich you with good programming skills. By learning JUnit, you can find out the loopholes in Java and work on them easily hence increasing the credibility of your coding skills. Testing along with coding the program will make you eyed out among your company and provide better opportunities as well.",
      "target_audience": [
        "Students: Pursuing his diploma, graduation, or degree in the field of server-level or system-level testing, standalone and web application development, etc. can choose out his way to take up this JUnit training with all the key concepts and fundamentals being explained in this JUnit Training Course. Professionals: Who wants to become Tester, Web Application Tester, or an IT professional looking for a switch in his career in the field of Testing. A research scientist presupposed in Web Application Testing, Bug Finder, IT specialists, professors, and teachers can opt for this JUnit Training. Beginners: Who has an interest in obtaining knowledge on finding critical bugs and mistakes from programs can go for this JUnit Training which will provide you a great level of understanding of this technology and its usage through real-life projects given in the training"
      ]
    },
    {
      "title": "450+ Software Testing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/software-testing-interview-questions/",
      "bio": "Software Testing Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Software Testing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to \"Master Software Testing: Comprehensive Interview Questions & Practice Tests\" - your ultimate resource for acing software testing interviews! This course is meticulously designed for aspiring software testers, QA analysts, and anyone aiming to break into the software testing field or enhance their testing skills. With over 2500 practice questions spanning six critical sections, this course stands as a definitive guide to mastering software testing concepts and techniques.\nFundamentals of Software Testing Delve deep into the core concepts of software testing. This section lays the foundation with interview questions covering:\nTypes of Software Testing: Understand various testing types like unit, integration, system, and acceptance testing.\nTesting Life Cycle: Get insights into the stages of STLC, from requirement analysis to test closure.\nVerification vs Validation: Differentiate between these crucial processes with real-world scenarios.\nStatic vs Dynamic Testing: Learn the nuances and applications of both testing methods.\nQuality Assurance vs Quality Control: Master the distinctions and intersections of QA and QC.\nTest Planning and Design: Discover how effective planning and design lead to successful testing outcomes.\nRisk Analysis in Testing: Evaluate the importance of risk analysis in preempting project challenges.\nPrinciples of Software Testing: Grasp the fundamental principles that guide effective testing practices.\nTest Management This section focuses on the strategic aspects of software testing, with practice tests on:\nTest Strategy and Test Plan: Learn to develop comprehensive testing strategies and plans.\nTest Estimation Techniques: Master various techniques to estimate testing time and resources.\nTest Monitoring and Control: Understand how to track and manage testing activities effectively.\nConfiguration Management in Testing: Explore the role of configuration management in maintaining test environment stability.\nDefect Lifecycle: Get acquainted with the stages of a defect from detection to closure.\nTest Reporting and Metrics: Learn the art of creating insightful test reports and metrics.\nTest Closure Activities: Understand the final steps in the testing process and their significance.\nRole of a Test Manager: Gain insights into the responsibilities and skills needed for test management.\nTesting Techniques Enhance your testing acumen with practice questions on various testing methodologies:\nBlack Box Testing Techniques: Explore techniques like equivalence partitioning, boundary value analysis, and more.\nWhite Box Testing Techniques: Dive into the world of code-driven testing methods.\nBoundary Value Analysis: Understand the significance of edge cases in testing.\nDecision Table Testing: Learn how decision tables can simplify complex testing scenarios.\nState Transition Testing: Master testing for applications with various states.\nUse Case Testing: Gain insights into testing real-world scenarios and user stories.\nPairwise Testing: Explore the effectiveness of pairwise testing in identifying defects.\nExploratory Testing: Understand the importance of this skillful, unscripted testing approach.\nAutomation Testing Prepare for the future of testing with questions on automation:\nIntroduction to Automation Testing: Start with the basics of automation and its benefits.\nTool Selection for Automation: Learn how to choose the right tools for automation needs.\nFrameworks in Automation Testing: Understand different frameworks and their applications.\nScripting Languages for Automation: Get to know the popular scripting languages in automation.\nData-Driven Testing: Explore how data-driven approaches enhance test effectiveness.\nPage Object Model (POM): Learn about POM for efficient script maintenance.\nContinuous Integration in Automation: Understand CI's role in agile and DevOps environments.\nChallenges in Automation Testing: Prepare for common challenges faced in automation.\nAdvanced Topics in Testing Stay ahead in your career with advanced testing topics:\nPerformance Testing: Understand how to test for speed, scalability, and stability.\nSecurity Testing: Learn the intricacies of identifying vulnerabilities and threats.\nMobile Application Testing: Master the unique challenges of testing mobile apps.\nCloud-Based Testing: Explore the advantages and challenges of testing in the cloud.\nInternet of Things (IoT) Testing: Dive into the emerging field of IoT testing.\nArtificial Intelligence in Testing: Understand the impact of AI on software testing.\nAgile and DevOps in Testing: Adapt to the changing landscapes of Agile and DevOps methodologies.\nTest Automation for Microservices: Learn testing strategies for microservices architectures.\nSoft Skills and Scenario-Based Questions Round off your preparation with essential soft skills and real-life scenarios:\nCommunication Skills in Testing: Enhance your ability to articulate testing processes and findings.\nProblem-Solving and Critical Thinking: Develop critical thinking for effective test case design and defect identification.\nTeam Collaboration and Conflict Resolution: Learn the art of teamwork and conflict resolution in testing teams.\nClient Interaction and Requirements Gathering: Master the nuances of interacting with clients and gathering requirements.\nAdaptability and Learning New Technologies: Stay flexible and ready to learn in the ever-evolving tech landscape.\nTime Management and Prioritization: Acquire skills to manage time and prioritize tasks effectively.\nEthical Considerations in Software Testing: Understand the ethics involved in software testing.\nScenario-Based Questions (Case Studies): Test your understanding with real-world scenarios and case studies.\nRegularly Updated Questions: We understand the dynamic nature of the software testing field, which is why we regularly update our practice test questions. This ensures that you are always in sync with the latest trends, tools, and methodologies in software testing. Our commitment to keeping the content fresh and relevant is central to the value we offer, ensuring that you're preparing with the most current and industry-relevant material.\nSample Practice Test Questions:\nWhat is the main difference between Verification and Validation in software testing?\nA) Verification is testing the product; Validation is checking the process.\nB) Verification is checking the process; Validation is testing the product.\nC) Both terms mean the same and can be used interchangeably.\nD) Neither term is related to software testing.\nCorrect Answer: B Explanation: Verification and Validation are distinct yet complementary activities in software testing. Verification involves evaluating work-products of a development phase to ensure they meet the specified requirements. For instance, reviewing design documents and performing static code analysis. On the other hand, Validation is the process of testing the actual product to ensure it meets the user's needs and that the specifications were correct in the first place. It involves dynamic testing and other forms of testing like system and acceptance testing. Understanding the difference is crucial for any software tester as it dictates the testing approach and the types of tests to be conducted.\nWhich of the following is a key feature of Agile testing?\nA) Extensive documentation\nB) Test-driven development\nC) End-of-cycle testing\nD) Waterfall model adherence\nCorrect Answer: B Explanation: Agile testing is characterized by the principles of Agile software development, which emphasizes adaptive planning, early delivery, and continual improvement, all with a focus on encouraging flexible responses to change. Test-Driven Development (TDD) is a key feature of Agile testing, where test cases are developed to specify and validate what the code will do. In TDD, a test is written first before writing the functional code. This approach ensures that the software is designed to pass all tests, leading to cleaner, more bug-free code. It's a fundamental shift from traditional testing methods, where testing is often a phase at the end of a development cycle.\nIn software testing, what is a 'defect'?\nA) Any flaw in the software that enhances its performance\nB) A feature that is developed but not tested\nC) An inconsistency between the actual and expected result\nD) The part of the software that remains unused by the end-user\nCorrect Answer: C Explanation: In the realm of software testing, a defect is defined as any flaw or imperfection in a software product that causes it to produce an incorrect or unexpected result. This is typically a deviation from the product's intended design, behavior, or result. Identifying defects is a core aspect of software testing. These defects, once found, are reported to the development team to be fixed. The defect life cycle or bug life cycle then manages these defects from identification to closure. Understanding what constitutes a defect and how to identify them is crucial for any software tester, as it directly impacts the quality of the final product.\nWhich testing technique is best suited for testing user interfaces?\nA) Performance Testing\nB) Security Testing\nC) Usability Testing\nD) Unit Testing\nCorrect Answer: C Explanation: Usability Testing is specifically designed to evaluate a product by testing it on users. This technique is particularly effective for assessing user interfaces. It involves observing real users as they attempt to complete tasks on the product and noting any usability issues. This type of testing is essential for understanding how real users interact with the software, identifying any potential areas of confusion or difficulty, and ensuring that the software is user-friendly and intuitive. It's a critical step in creating software that is not just functional but also pleasurable and efficient to use.\nWhat does 'Black Box Testing' focus on?\nA) Internal system design\nB) Code structure and programming skills\nC) Output based on various input conditions\nD) Database design and structure\nCorrect Answer: C Explanation: Black Box Testing is a method of software testing that examines the functionality of an application without peering into its internal structures or workings. This technique focuses solely on the input and output of the software system, disregarding the internal knowledge of the software. The key advantage of this method is that it is unbiased as the tester does not need to know programming languages or how the software was implemented. This type of testing is essential for validating whether the software meets its specified requirements and for ensuring that it behaves as expected in all scenarios of user interaction. It's a foundational concept in software testing that ensures that a product functions correctly for the end-user, irrespective of its internal complexities.\nEnroll now in \"Master Software Testing\" and take your first step towards acing those software testing interviews. Whether you're starting your journey or looking to advance further, this course is your gateway to success in the software testing domain!",
      "target_audience": [
        "Aspiring Software Testers: If you're just beginning your journey in the world of software testing and looking to build a strong foundational understanding, this course is perfect for you. It starts with the basics and progressively covers more complex topics, making it suitable for those with little to no prior experience.",
        "Experienced Software Testing Professionals: For those who have been in the field and are looking to deepen their knowledge, this course offers advanced topics and current industry practices. It's an excellent way to stay updated with the latest trends and techniques in software testing.",
        "Career Changers: If you're considering a switch to a career in software testing from another field, this course provides a comprehensive overview of what you need to know, helping you to understand the essentials and prepare for interviews in this new domain.",
        "Students and Recent Graduates: College students or recent graduates who want to add practical, industry-relevant skills to their theoretical knowledge will find this course particularly beneficial. It bridges the gap between academic learning and the real-world requirements of the software testing industry.",
        "Professionals Preparing for Interviews: Individuals preparing for software testing job interviews will find the interview-focused practice questions and scenarios invaluable. The course offers insights into the types of questions asked in interviews and effective ways to answer them.",
        "Individuals Aiming for Certifications: For those targeting software testing certifications, this course provides a thorough understanding of the concepts and practices that are often covered in certification exams.",
        "Quality Assurance Managers and Team Leaders: QA managers and team leaders who wish to understand the intricacies of various testing methodologies and techniques for better team guidance and project management will also benefit from this course."
      ]
    },
    {
      "title": "600+ Database Testing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/database-testing-interview-questions/",
      "bio": "Database Testing Interview Questions and Answers Preparation | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Database Testing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for a database testing interview and seeking comprehensive practice material to boost your confidence and readiness? Look no further! Our Database Testing Interview Questions Practice Test course is meticulously crafted to provide you with a robust preparation platform, ensuring you are well-equipped to tackle any database testing interview with confidence.\nThis course is designed to cover all essential aspects of database testing, divided into six comprehensive sections, each focusing on specific subtopics crucial for mastering the art of database testing:\nSection 1: Basics of Database Testing\nDive into the fundamental concepts of database testing, understanding its importance and various types.\nExplore the database testing process step-by-step, uncovering common challenges, and learning best practices for efficient testing.\nSection 2: SQL and Query Testing\nBrush up on your SQL skills and delve into SQL query testing techniques.\nMaster the art of testing database schema, tables, and data integrity, along with error handling in SQL queries.\nSection 3: Data Migration and ETL Testing\nGain insights into data migration testing, including ETL process testing and data consistency validation.\nExplore advanced topics such as handling large data sets and leveraging ETL testing tools and frameworks effectively.\nSection 4: Performance and Scalability Testing\nLearn the intricacies of performance testing in databases, including load testing and query optimization.\nDiscover techniques for ensuring scalability and explore monitoring and profiling tools to optimize database performance.\nSection 5: Security and Access Control Testing\nUnderstand the fundamentals of database security and access control testing.\nExplore authentication, authorization testing, and strategies for mitigating security vulnerabilities such as SQL injection.\nSection 6: Automation and Tools for Database Testing\nDive into automation frameworks tailored for database testing and learn to script and execute database tests efficiently.\nExplore a range of database testing tools, including SQLUnit and DbUnit, along with test data generation tools and techniques.\nEach section is accompanied by a comprehensive set of practice test questions meticulously curated to mimic the format and complexity of real-world database testing interviews. These practice tests are designed to challenge your knowledge, reinforce key concepts, and help you identify areas for further improvement.\n\n\nSample Practice Test Questions:\nQuestion 1: Which of the following statements best describes the purpose of database testing?\nA) To ensure the database is installed correctly on the server.\nB) To verify that the database schema and data meet specified requirements.\nC) To validate the functionality of the user interface connected to the database.\nD) To optimize database performance and scalability.\nExplanation:\nThe correct answer is B) To verify that the database schema and data meet specified requirements. Database testing focuses on ensuring that the database structure (schema) and data are aligned with the expected requirements. It involves various types of testing to validate data integrity, consistency, and accuracy. Option A is incorrect because database testing is not solely about installation verification. Option C refers to UI testing, which is distinct from database testing. Option D relates to performance testing, which is another aspect of database testing but not its primary purpose.\n\n\nQuestion 2: Which SQL clause is used to filter rows returned by a query based on specified conditions?\nA) GROUP BY\nB) ORDER BY\nC) WHERE\nD) HAVING\nExplanation:\nThe correct answer is C) WHERE. The WHERE clause is used in SQL queries to filter rows based on specified conditions, allowing users to retrieve only the data that meets certain criteria. Option A (GROUP BY) is used for grouping rows based on specified columns, while Option B (ORDER BY) is used for sorting the result set. Option D (HAVING) is used in combination with GROUP BY to filter grouped rows.\n\n\nQuestion 3: What is the primary purpose of ETL testing in the context of data migration?\nA) To ensure efficient data extraction from the source system.\nB) To validate the correctness of data transformations during the migration process.\nC) To monitor real-time data loading into the target database.\nD) To optimize database performance after data migration.\nExplanation:\nThe correct answer is B) To validate the correctness of data transformations during the migration process. ETL (Extract, Transform, Load) testing focuses on validating the accuracy, completeness, and consistency of data transformations as data moves from source to target systems. It ensures that data is properly transformed according to defined business rules and requirements. Options A, C, and D are not the primary objectives of ETL testing.\n\n\nQuestion 4: Which performance testing technique involves gradually increasing the number of concurrent users or transactions to determine system behavior under load?\nA) Stress testing\nB) Load testing\nC) Scalability testing\nD) Endurance testing\nExplanation:\nThe correct answer is B) Load testing. Load testing involves applying a gradually increasing load to a system to assess its performance characteristics and behavior under normal and peak conditions. It helps identify performance bottlenecks, such as response time degradation or system crashes, as the load increases. Options A, C, and D represent different performance testing techniques, but load testing specifically focuses on assessing system behavior under increasing load.\n\n\nQuestion 5: Which security testing technique involves intentionally injecting malicious SQL code into input fields to manipulate database queries?\nA) Cross-Site Scripting (XSS) testing\nB) SQL Injection testing\nC) Authentication testing\nD) Encryption testing\nExplanation:\nThe correct answer is B) SQL Injection testing. SQL Injection is a common security vulnerability that occurs when attackers insert malicious SQL code into input fields to manipulate database queries and gain unauthorized access to sensitive data or execute arbitrary commands. SQL Injection testing involves identifying and mitigating vulnerabilities by testing input validation and parameterized queries. Options A, C, and D represent other security testing techniques, but SQL Injection testing specifically focuses on detecting and preventing SQL injection vulnerabilities.\nThese sample practice test questions are designed to challenge your understanding of key concepts in database testing and help reinforce your knowledge. Make sure to thoroughly review each explanation to grasp the underlying principles and enhance your preparation for database testing interviews.\n\n\nWhether you're a seasoned database tester looking to sharpen your skills or a job seeker preparing for upcoming interviews, this course provides the perfect platform to refine your database testing expertise and excel in your career. Enroll now and take the first step towards mastering the art of database testing!",
      "target_audience": [
        "Software Testers and Quality Assurance (QA) Engineers: If you're involved in software testing or quality assurance roles and want to specialize in database testing, this course provides the perfect opportunity to sharpen your skills and expand your expertise in this crucial domain.",
        "Database Developers and Administrators: Database developers and administrators looking to gain insights into testing methodologies, performance optimization techniques, and security best practices will find this course invaluable for enhancing their proficiency in database testing.",
        "IT Professionals Transitioning to Testing Roles: If you're transitioning from other IT roles to testing, this course offers a comprehensive introduction to database testing, equipping you with the knowledge and skills needed to succeed in your new career path.",
        "Students and Graduates: Students pursuing degrees in computer science, information technology, or related fields, as well as recent graduates seeking to kickstart their careers in software testing, will benefit from the foundational knowledge and practical insights provided in this course.",
        "Professionals Preparing for Database Testing Interviews: Whether you're preparing for upcoming job interviews or seeking to refresh your database testing knowledge, this course offers a wealth of practice test questions and in-depth explanations to help you ace your interviews with confidence."
      ]
    },
    {
      "title": "Robot Framework|RIDE & Selenium - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/robot-frameworkride-selenium-step-by-step-for-beginners/",
      "bio": "Learn selenium automation with Robot Framework from scratch",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Getting started with Robot Framework Step by Step",
          "RIDE - Some Limitations",
          "How to create first Selenium Test with RIDE",
          "How to run test on browsers - CHROME, FIREFOX, IE, EDGE"
        ],
        "HOW TO USE VARIABLES & KEYWORDS": [
          "How to use VARIABLES",
          "How to use KEYWORDS"
        ],
        "How to use SETUP | TEARDOWN | TAGS": [
          "How to use SETUP and TEARDOWN",
          "How to use TAGS"
        ],
        "JENKINS & Command Line": [
          "How to run Tests from Command Line",
          "How to run Robot tests from JENKINS"
        ],
        "TIPS & TRICKS": [
          "How to INSTALL, UNINSTALL, UPGRADE",
          "SOME USEFUL TIPS | Commands"
        ]
      },
      "requirements": [
        "No special knowledge is required",
        "This is designed for complete beginners"
      ],
      "description": "In this course we will learn Robot Framework from scratch.\nHere we will use Robot Framework to test Web Browser applications using Selenium library and RIDE (Robot Framework IDE)\nThis course is designed for complete beginners and we will go very basic, Step by Step.\nAfter this course you can work with Robot Framework for web browser automation testing using Selenium.\nLET'S GET STARTED...",
      "target_audience": [
        "Anyone who wants to learn the basics of Robot Framework",
        "Anyone who wants to understand and work with Robot Framework in an easy way"
      ]
    },
    {
      "title": "تعلم اختبار البرمجيات من الصفر - Software Testing Course",
      "url": "https://www.udemy.com/course/software-testing-ar/",
      "bio": "ابدأ رحلتك في اختبار البرمجيات من الصفر حتى الاحتراف بأسلوب عملي وباستخدام أكثر الأدوات انتشارًا",
      "objectives": [
        "How to review user requirements",
        "Test Scenario Writing using Trello",
        "Test Case Writing using Google Sheets",
        "Test Execution & Defect Reporting",
        "Agile Testing Basics",
        "Agile Software Project Management using Jira",
        "ISTQB Foundation Level Certificate Content",
        "CrowdTesting Websites",
        "Freelance Testing Websites",
        "API Basics",
        "API Testing using Postman"
      ],
      "course_content": {
        "Introduction to Software Testing": [
          "Roles in the Software Development Team",
          "Software Development Lifecycle Models",
          "What is Testing",
          "Test Process",
          "Test Levels",
          "Test Types",
          "Assignment #1",
          "Egypt Testing Report 2025"
        ],
        "Test Scenario Writing": [
          "Quick Review",
          "Test Scenario Writing Overview",
          "Test Scenario VS. Test Case",
          "High-Level & Low-Level Scenarios",
          "Trello Sign Up",
          "Sign Up Scenarios Part 1",
          "Sign Up Scenarios Part 2",
          "Sign Up Scenarios Part 3",
          "Sign Up Scenarios Part 4",
          "Login Test Scenarios",
          "Testing on Different Browsers & Operating Systems",
          "Twitter (X) Login Scenarios Part 1",
          "Twitter (X) Login Scenarios Part 2",
          "Upload Photo Test Scenarios Part 1",
          "Upload Photo Test Scenarios Part 2",
          "Upload Photo Test Scenarios Part 3",
          "Upload Photo Test Scenarios Part 4",
          "Questions & Answers",
          "Search Test Scenarios Part 1",
          "Search Test Scenarios Part 2",
          "Search Test Scenarios Part 3",
          "Some Important Tips",
          "Vezeeta Search Test Scenarios",
          "Qabilah Search Test Scenarios Part 1",
          "Qabilah Search Test Scenarios Part 2",
          "Noon Search Test Scenarios",
          "Dubizzle(OLX) Search Test Scenarios",
          "Udemy Search Test Scenarios Part 1",
          "LinkedIn Search Test Scenarios",
          "Udemy Search Test Scenarios Part 2",
          "Udemy Search Test Scenarios Part 3"
        ],
        "Test Case Writing": [
          "What is a Test Case?",
          "Test Steps & Expected Result",
          "Test Environment",
          "Actual Result & Test Case Status",
          "User Registration Test Cases",
          "Documenting Test Cases using Google Sheets",
          "Try to Spot the Defect!",
          "Written Test Cases Examples",
          "Test Case Document Link",
          "What are the skills that you still need?"
        ],
        "Test Case Writing using Zephyr Scale": [
          "Introduction about Test Tools",
          "Sign up to Jira",
          "Zephyr Scale Introduction",
          "Writing First Test Case",
          "Writing more Test Cases",
          "Creating Folders",
          "Adding Test Cases to Folders",
          "Creating Test Cycles",
          "Configuration",
          "Running Test Cases",
          "Adding Call to Test Cases",
          "Zephyr Scale Documentation",
          "When do we Write Test Cases?",
          "Exporting Test Cases",
          "Importing Test Cases",
          "Adding Parameters to Test Cases",
          "Test Data",
          "Creating Test Cases in Bulk",
          "Reports",
          "Assignment"
        ],
        "Gazara - Test Case Writing Project": [
          "Project Documents",
          "Introduction to Gazara Project",
          "Requirements Document",
          "Mobile Screens",
          "Admin Panel (Dashboard) Screens",
          "Website Screens Part 1",
          "Website Screens Part 2"
        ],
        "Test Execution & Defect Reporting": [
          "What is a Defect Report",
          "Steps to Reproduce",
          "Expected Result & Actual Result",
          "Test Environment",
          "Adding Screenshot or Video",
          "Defect Priority",
          "Sample Defect Report",
          "Creating Defect Report on Trello",
          "Creating Defect Report on Jira",
          "Defect Reporting Task"
        ],
        "Defect Triage (Reviewing Defects found in Projects)": [
          "Project #1 - Agileway",
          "Project #2 - To Do List",
          "Project #3 - Sweet Shop",
          "Project #4 - Coffee Cart",
          "Project #5 - Parking Cost Calculator",
          "Project #6 - Prestashop",
          "Project #7 - User Inyerface",
          "Project #8 - HR Management System"
        ],
        "Mobile Application Testing": [
          "Introduction to Mobile Testing",
          "Types of Mobile Applications",
          "Types of Mobile Devices",
          "Challenges of Mobile Testing",
          "Mobile Analytics Data",
          "Testing Input Methods",
          "Testing for Screen Orientation",
          "Interrupts",
          "Testing Notifications",
          "Testing Permissions & Power Consumption",
          "Interoperability & Co-existence",
          "Connectivity & Installability",
          "Performance & Usability",
          "Mobile Test Scenarios Checklist",
          "Download Test Scenarios Checklist"
        ],
        "Agile Software Development & Agile Testing": [
          "Introduction to Agile Testing",
          "4 Values of Agile",
          "Agile 12 Principles",
          "Agile Practices",
          "Scrum",
          "Kanban",
          "Q & A",
          "Introduction to Practical Agile Testing",
          "Creating Epics",
          "Creating First User Story",
          "Creating Acceptance Criteria",
          "Creating All Stories",
          "Planning Poker & Story Estimation",
          "Managing First Sprint",
          "Burndown Chart & Velocity Chart",
          "A Look into Agile Certificates"
        ],
        "API Testing Basics": [
          "Introduction to API Testing",
          "Understanding Web Applications",
          "Anatomy of HTTP Request & Response",
          "HTTP Methods",
          "What is an API",
          "Creating First Request - Project #1",
          "Creating Second Request - Project #1",
          "API Assignment #1",
          "Creating All Requests - Project #1",
          "Adding Environments & Variables - Project #1",
          "Designing Test Cases for API Requests - Project #1",
          "Creating Assertions - Project #1",
          "API Assignment #2",
          "Analyzing First Request Assertions - Project #1",
          "Analyzing Second Request Assertions - Project #1",
          "Analyzing Third Request Assertions - Project #1",
          "Analyzing Requests 3-4-5 Assertions - Project #1",
          "Analyzing Create & Update User Assertions - Project #1",
          "Analyzing Register, Login, Delayed Response Assertions - Project #1",
          "Assignment #3"
        ]
      },
      "requirements": [
        "Internet Connection",
        "Native Arabic speaker \"The course is in Arabic\"",
        "A computer"
      ],
      "description": "تعلم اختبار البرمجيات من الصفر – أقوى دورة عملية تؤهلك للعمل كمختبر برمجيات محترف\nإذا كنت ترغب في دخول عالم اختبار البرمجيات بدون أي خلفية تقنية أو خبرة برمجية، فهذه الدورة هي خيارك المثالي.\nدورة “تعلم اختبار البرمجيات من الصفر” تعتبر من أكثر الدورات شمولًا وتطبيقًا عمليًا على منصة Udemy، وتغطي مختلف أنواع ومراحل اختبار البرمجيات، من الاختبار اليدوي وحتى التست أوتوميشن واختبار الأداء.\nماذا ستتعلم؟\n\n\nأساسيات اختبار البرمجيات والمفاهيم الرئيسية التي يجب أن يعرفها كل QA\nتحليل المتطلبات واكتشاف المشكلات قبل كتابة الكود\nكتابة Test Scenarios وTest Cases باحترافية لتغطية جميع الوظائف والمتطلبات\nاستخدام أدوات مثل Zephyr Scale لتوثيق الاختبارات داخل Jira\nتنفيذ الاختبارات يدويًا وتوثيق العيوب باستخدام Jira\nمراجعة العيوب وتصنيفها ضمن جلسات Defect Triage كما يتم في الشركات\nاختبار تطبيقات الهاتف المحمول واستكشاف مشاكلها الشائعة\nتطبيق Agile Testing داخل بيئة عمل مرنة (Agile)\nأساسيات اختبار APIs مع تدريب عملي باستخدام Postman\nتعلم أساسيات البرمجة بلغة Java، ثم البرمجة كائنية التوجه (OOP) لتأهيلك للTest Automation\nكتابة سكربتات أوتوميشن باستخدام Selenium WebDriver بلغة Java\nتنظيم اختبارات الAutomation باستخدام TestNG\nتطبيق نمط التصميم Page Object Model (POM) في مشاريع الأوتوميشن\nأساسيات اختبار الأداء (Performance Testing) باستخدام أدوات مثل JMeter\n\n\nالأدوات التي ستتعلم استخدامها خلال الدورة:\nJira: لإدارة المهام وتوثيق العيوب\nZephyr Scale: لكتابة وإدارة حالات الاختبار\nTrello: لتنظيم المهام بشكل بصري\nPostman: لاختبار واجهات الـ API\nGoogle Sheets: لإنشاء خطط الاختبار وتتبع النتائج\nSelenium WebDriver: لأتمتة اختبارات الويب بلغة Java\nTestNG: لإدارة وتنفيذ سيناريوهات الأوتوميشن\nJMeter: لاختبار الأداء وتحليل الضغط على الأنظمة\n\n\nهذه الدورة ليست مجرد شرح نظري، بل تجربة تطبيقية متكاملة تؤهلك لسوق العمل، سواء كنت تسعى للحصول على وظيفة في شركة أو العمل كمستقل على منصات مثل Upwork.\nابدأ رحلتك في مجال الـ Software Testing بخطوات واثقة، مع تدريبات عملية وأدوات تُستخدم فعليًا في أكبر الشركات.",
      "target_audience": [
        "Junior Testers",
        "Technology Enthusiasts",
        "Fresh Graduates"
      ]
    },
    {
      "title": "QA Testing Quiz - Job interview questions for testers 2025",
      "url": "https://www.udemy.com/course/qa-testing-quiz-job-interview-questions-for-testers-2025/",
      "bio": "QA Testing Quiz - Recruitment questions - recruitment for the position of Software Tester, QA, Automation Tester! etc.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Why Enroll in the \"QA Testing Quiz – Job Interview Questions for Testers\" Course?\nAce Your QA Job Interview with Confidence\nLanding a role in Quality Assurance (QA) requires more than just understanding testing concepts—you need to demonstrate real-world knowledge, critical thinking, and the ability to solve complex testing scenarios. This course is designed to prepare you for QA job interviews by focusing on practical questions, industry-relevant concepts, and problem-solving strategies that hiring managers expect.\nWhat Makes This Course Stand Out?\nJob Interview-Focused Practice\nCarefully crafted quizzes that reflect real interview questions asked by top companies.\nCoverage of key QA topics: Manual Testing, Automation Basics, Test Cases, Bug Reporting, SDLC, Agile, and Testing Tools.\nDetailed explanations for each answer to strengthen your understanding and boost your confidence.\nMaster Core QA Concepts\nLearn essential testing principles and methodologies that employers look for.\nUnderstand different testing types (functional, non-functional, regression, smoke, etc.) and when to apply them.\nImprove your problem-solving skills with scenario-based questions.\nInterview Strategy & Success Tips\nGain insights into what interviewers expect from QA candidates.\nLearn how to answer both technical and behavioral questions effectively.\nPractice handling real-world testing situations that often appear in interviews.\nWho Is This Course For?\nAspiring QA testers preparing for their first job interview.\nManual and automation testers looking to refresh their knowledge before job hunting.\nIT professionals wanting to transition into a QA role and understand the interview process.\nWhy This Course Can Help You Land the Job\nStand out in interviews by demonstrating not just textbook knowledge but practical understanding.\nPrepare for both entry-level and mid-level QA roles.\nBoost your confidence by practicing questions similar to what hiring managers actually ask.\nWhy Start Today?\nQA roles are in high demand, and preparation is key to landing your ideal job.\nThe course is structured for self-paced learning—practice anytime, at your convenience.\nLifetime access allows you to revisit materials whenever you’re preparing for a new opportunity.\nPrepare smart. Practice hard. Succeed in your QA job interview. Enroll today and get interview-ready!",
      "target_audience": [
        "People who want to develop a career in the software engineering industry or simply \"IT\"",
        "\"Digital\" professions that require testing skills",
        "People willing to recruit for the position of a software tester",
        "Aspiring QA Testers",
        "Experienced QA Professionals",
        "Software Developers",
        "Project Managers and Product Owners",
        "IT Consultants",
        "Tech Enthusiasts",
        "Career Switchers",
        "Freelance Testers:",
        "Entrepreneurs in Tech",
        "Students in Computer Science and Related Fields:"
      ]
    },
    {
      "title": "Playwright and Typescript Automation Basics Practice Tests",
      "url": "https://www.udemy.com/course/playwright-and-typescript-automation-basics-quiz/",
      "bio": "Prepare for automation Interviews",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "This comprehensive quiz is designed to assess and reinforce your knowledge of web automation testing using Playwright with TypeScript. Whether you're a  QA engineer, an automation developer, or simply exploring modern testing frameworks, this 80-questions challenge will test your grasp of key concepts, best practices, and real-world scenarios.\nWhat’s Covered:\nPlaywright Fundamentals Understand core APIs, browser contexts, selectors, and test structure.\nTest Automation Techniques Learn how to handle dynamic elements, flaky tests, and parallel execution.\nTypeScript Essentials for Testers Explore typing, interfaces, async/await, and modular test design.\nDebugging & Reporting Dive into trace viewer, screenshots, logs, and error handling.\nAdvanced Playwright Features Use fixtures, custom helpers, and configuration options.\nCross-Browser & CI Integration Test on Chromium, Firefox, WebKit, and integrate with CI/CD pipelines.\nWho Should Take This Quiz?\nQA engineers transitioning to modern automation tools\nDevelopers writing end-to-end tests\nTest architects evaluating Playwright for their teams\nAnyone preparing for interviews or certifications in automation testing\nDifficulty Spectrum:\nThe quiz is structured to gradually increase in complexity:\nBeginner-level questions focus on syntax, setup, and basic usage.\nIntermediate questions test your understanding of asynchronous behavior, selectors, and test structure.\nAdvanced questions challenge your grasp of architecture, performance optimization, and CI/CD integration.\nFormat & Experience:\n80 questions -single choice answer\nInstant feedback with explanations\nDesigned to take ~40–50 minutes\nPerfect for self-assessment or team training",
      "target_audience": [
        "Beginner Level for Automation Testing with Playwright and Typescript"
      ]
    },
    {
      "title": "Conviértete en Probador Profesional de Videojuegos",
      "url": "https://www.udemy.com/course/cursoqavideojuegos/",
      "bio": "Curso con prácticas remuneradas y trabajo garantizado",
      "objectives": [
        "Todos los conocimientos sobre testing de videojuegos y apps de parte de un profesional con mas de 10 años de experiencia",
        "aprenderán a detectar y reportar errores, a analizar las partes de un juego o programa",
        "a relacionarse dentro de un estudio de videojuegos",
        "en definitiva, a ser un gran profesional dentro de esta industria"
      ],
      "course_content": {
        "Introduccion": [
          "Introducción",
          "¿Qué es ser Tester?",
          "¿Qué se espera de tí dentro de un estudio de videojuegos?",
          "¿Cómo funciona un estudio de videojuegos?"
        ],
        "Quality Assurance y Quality Assistance": [
          "¿Qué es el control de calidad?",
          "Quality Assurance",
          "Quality Assistance",
          "Diferencias entre Quality Assurance y Quality Assistance",
          "Tipos de Testing: Funcional",
          "Tipos de Testing: Localización",
          "Tipos de Testing: Lingüistico",
          "Tipos de Testing: Network",
          "Tipos de Testing: Compliance",
          "Tipos de Testing: Usabilidad y Play Test"
        ],
        "Bug Reporting": [
          "¿Qué es un Bug?",
          "Un poco de historia sobre los bugs",
          "¿Cómo reportar un bug?",
          "Bug Writting Format",
          "Prioridades de los bugs",
          "Prioridades según su ruta",
          "Tipos de Bug: Texto",
          "¿Que prioridad deberian de tener los bugs de texto mostrados en este capitulo?",
          "Tipos de Bug: Gráficos",
          "Tipos de Bug: Crash",
          "Tipos de Bug: Freeze",
          "Tipos de Bug: Inconsistency",
          "Tipos de Bug: Funcional",
          "Tipos de Bug: Gameplay y Gamelogic",
          "Tipos de Bug: Framerate",
          "Ejemplos de bugs de: Framerate, Gameplay y Gamelogic",
          "Tipos de Bug: Audio",
          "Ciclo de vida de un bug",
          "Áreas del juego",
          "Bugs Duplicados"
        ],
        "Manos a la obra": [
          "Aplicando lo aprendido",
          "Como y donde empezar a testear",
          "Itch.io"
        ],
        "Cierre de este Módulo": [
          "Cierre de este Módulo",
          "Nota Final",
          "Regalo final del Curso Profesional de Testing de Videojuegos"
        ]
      },
      "requirements": [
        "No se requieren conocimientos previos, pero si tener muchas ganas e ilusión, depende de tí que consigas el trabajo de tus sueños",
        "Necesitas un ordenador con conexión a internet, ya sea Windows o Mac (No linux), un teléfono movil inteligente (da igual si es Android o iOS) y aunque no es requisito imprescindible, una consola de videojuegos (no importa cual sea)"
      ],
      "description": "¡Bienvenido al curso que cambiará tu vida si eres un amante de los videojuegos! Aquí, exploraremos las fascinantes posibilidades de convertirte en un Probador Profesional de Videojuegos. Prepárate para descubrir los secretos del control de calidad y el testing en la industria de los videojuegos.\n\n\nEn este curso, te sumergirás en los fundamentos y conceptos esenciales del control de calidad de videojuegos. Aprenderás a detectar errores, familiarizarte con la terminología especializada y generar informes de errores precisos. Además, entenderás el papel fundamental que desempeña el departamento de control de calidad dentro de un equipo de desarrollo de videojuegos. Pero eso no es todo; el programa abarca mucho más.\n\n\nEl curso se compone de once módulos cuidadosamente estructurados que te guiarán en tu aprendizaje. Y aquí viene la mejor parte: ¡podrás ganar dinero mientras adquieres conocimientos! Sí, has leído bien. Ofrecemos prácticas remuneradas, una oportunidad invaluable para poner en práctica lo que aprendas y obtener una experiencia real en la industria.\n\n\nNo puedes perder la oportunidad de unirte a este curso único. Al finalizarlo, tendrás la opción de realizar una validación adicional y obtener el codiciado título de \"Analista en Control de Calidad de Videojuegos\". ¿Suena emocionante, verdad?\n\n\nSi estás listo para adentrarte en este apasionante mundo y dar un paso hacia tu futuro profesional en la industria de los videojuegos, no esperes más. Consulta el video promocional del curso y descubre cómo este programa te abrirá las puertas hacia una carrera emocionante y llena de posibilidades. ¡El éxito te espera!",
      "target_audience": [
        "Todo el mundo interesado en trabajar en el sector del videojuego",
        "Gente con pasion que quiera conseguir el trabajo de sus sueños",
        "Jóvenes inquietos, apasionados, con ganas de cumplir sus sueños, gente positiva con afán de superación"
      ]
    },
    {
      "title": "Cucumber with Selenium Java (Basic)",
      "url": "https://www.udemy.com/course/cucumber-with-selenium/",
      "bio": "Learn the ABC of cucumber and integrating it with Selenium",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge on Java",
        "Basic understanding of Selenium",
        "Basic understanding of HTML"
      ],
      "description": "Cucumber with Selenium Java (Basic) course is designed to give anyone who is getting started with cucumber and selenium from complete ground up. In this course we will discuss topics like\nBehavioral Driven Development (BDD)\nCucumber\nSelenium\nMaven\nTestNG\nJUnit\nThis course is separated into two sections. In section 1 we will discuss about Cucumber starting from\nInstallation\nWriting feature files\nWriting simple scenarios and scenario outlines\nWorking with multiple datas via DataTable\n\nUnderstanding hooks\nWorking with dependency injections\nIn section 2 we will focus more on Selenium and understand how to write simple to complex code and run cucumber test with Maven and different testing frameworks like TestNG and JUnit.",
      "target_audience": [
        "QA",
        "Developers",
        "Business Analyst"
      ]
    },
    {
      "title": "Mobile Testing Interview Questions",
      "url": "https://www.udemy.com/course/mobile-testing-interview-questions/",
      "bio": "Mobile Testing | Appium | Mobile Testing Interview | Testing Strategy",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is for anyone who is looking to crack Mobile Testing interview. Course starts with basic level questions and gradually builds up to more advanced level of questions.\nMobile Testing Basics\nMobile Testing Tools\nAppium Questions\nMobile Testing Strategy (Descriptive Q&A)\nFirst 3 Practice Tests include objective level questions which will test your knowledge on Mobile Testing.\nPractice Test: Mobile Testing Tools - This set includes questions on different Mobile Testing Tools used in the industry.\nPractice Test: Mobile Testing Strategy (Descriptive Q&A) - Provides you with sample answers for questions on Mobile Testing Strategy, Architecture, etc. This set will help you formulate your answers for any upcoming interviews.\n\n\nThese practice tests are patterned and crafted based on the interviews conducted by different MNCs.\nEach question has detailed explanations at the end of each set that will help you gain a deeper understanding of the Selenium features.\nThe explanation provides an overview of the topic, reference links and a rationale on why the option is correct or incorrect.\nIncludes latest questions on Selenium Automation\nThe Tests are specially designed for Experience Professions who are applying for Enterprise Automation Specialist or Architect level roles.\nCONTAINS A TEST REPORT - to track your progress and show you which areas you need improvement.",
      "target_audience": [
        "All IT Professionals who want to test their Mobile Testing knowledge for their upcoming job interview.",
        "Anyone who wants to gain confidence on their Mobile Testing knowledge."
      ]
    },
    {
      "title": "Fluent Assertions in Test Automation with AssertJ",
      "url": "https://www.udemy.com/course/assertj-fluent-assertion-in-test-automation/",
      "bio": "Elevate Your Testing Precision and Code Readability",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Java",
        "Selenium"
      ],
      "description": "Welcome to Fluent Assertions in Test Automation with AssertJ — your comprehensive guide to harnessing the power of AssertJ, a Java library designed to transform your testing experience. AssertJ not only enriches your code with a vast set of assertions but also enhances code readability and ensures helpful error messages, making it a must-have tool for Selenium test automation scripts.\nWhat You'll Learn:\nBasics of AssertJ:\nGain a solid understanding of the fundamentals of AssertJ.\nExplore its intuitive syntax and how it seamlessly integrates into your test automation workflow.\nFluent Assert Statements for Selenium Scripts:\nDive into the world of fluent assertions, learning how to write concise and expressive assertions in your Selenium scripts\nDiscover how AssertJ's rich set of assertions simplifies the validation of complex scenarios.\nExtending Assertions for Page Objects:\nLearn to extend AssertJ assertions for seamless integration with Page Object Models.\nElevate your Page Object design by incorporating robust and expressive assertions for enhanced test reliability.\nExtending Assertions for WebElements:\nExplore advanced techniques for extending assertions to WebElements.\nEnsure precise and readable validations for individual elements within your Selenium tests.\nWhy Enroll: This course is tailored for test automation enthusiasts, QA professionals, and developers seeking to master AssertJ for fluent assertions. By the end of the course, you'll be equipped with the skills to write assertions effortlessly, resulting in more maintainable and robust test scripts. Whether you're a beginner or experienced tester, this course provides a deep dive into AssertJ's capabilities, ensuring you can leverage its full potential in your projects.\nPrerequisites: A basic understanding of Java and Selenium WebDriver concepts will be beneficial. Familiarity with test automation practices is recommended but not required.",
      "target_audience": [
        "Anyone who is interested in writing clean code"
      ]
    },
    {
      "title": "Selenium Webdriver - How to Do Mouse and Keyboard Actions",
      "url": "https://www.udemy.com/course/selenium-webdriver-how-to-do-mouse-and-keyboard-actions/",
      "bio": "Learn how to do Selenium actions such as drag 'n drop, drawing, swiping and much more...",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Resources",
          "What are user interactions in Selenium Webdriver?",
          "What are the different kind of user interactions"
        ],
        "Performing a drag and drop with Selenium Webdriver": [
          "How to create an Actions class in Webdriver",
          "Analyzing our application under test",
          "Writing the drag and drop test",
          "Finishing the first drag and drop test",
          "Executing the first drag and drop test",
          "Starting to write the 2nd drag and drop example",
          "Writing a 2nd drag and drop example",
          "Running a 2nd drag and drop example",
          "Drag and drop quiz question",
          "Drag and drop quiz answer"
        ],
        "Open Developer Toolbar, Resizing, and Drawing with Selenium Webdriver": [
          "How to do a resize action with selenium webdriver",
          "How to open developer tools with selenium webdriver",
          "Running a test that opens a network tab in firefox",
          "Drag and drop with html 5 quiz question",
          "Drag and drop with html 5 answer part 1",
          "Drag and drop with html 5 answer part 2",
          "How to draw on a canvas with selenium quiz",
          "How to draw on a canvas with selenium quiz answer",
          "Conclusions for course",
          "BONUS LECTURE!!!"
        ]
      },
      "requirements": [
        "Basics of Selenium Webdriver API",
        "Basic understanding of C# and Visual Studio"
      ],
      "description": "Are you working on automating mobile or tablet testing? Do you have an application developed in Angular JS that has a lot of complicated user interactions? Do you need to perform actions like drag n drop, resizing, and drawing? Do you know how to open the developer toolbar so that you can monitor network traffic of your application? If you want to learn all this, then this is the perfect course for you.\nEven if you are not working with these actions yet, you will need to know them in the future as mobile and other complicated frameworks grow.\n\"The best tutorials I have ever seen, simply awesome. I take off my hat in front of you, you are an gorgeous professor, I am speechless to express how satisfied I am with these tutorials.\" -Lisbey\nWhat will you learn?\n- Drag and drop with Selenium Webdriver\n- Open developer tools to monitor traffic during your automated tests\n- Resizing objects using Selenium Webdriver\n- How to draw on a canvas using Webdriver\n- How to perform a click and hold\n- How to perform a double click\n- How to work with HTML 5 for drag and drops\n- How to pass different keys to the application\n- So much more...\nWhat my students are saying:\n\"It's so good! Instructor was quick on the point, he really knows how to capture people's attention by having short videos and demos!.\" -Johnny\n\"Great Video I have ever seen on YouTube. You are so so clear and honest in presenting the material. I had no idea how important it is to use QTP from different angle, that is via scripting. Great Work and Thank You so so so much!\" -Mohammed",
      "target_audience": [
        "Students seeking to learn how to work with mouse and keyboard in Selenium",
        "Students attempting to perform complicated actions using Selenium Webdriver",
        "Students interested in drastically improving their Selenium Webdriver knowledge"
      ]
    },
    {
      "title": "Software Testing Bootcamp 2025",
      "url": "https://www.udemy.com/course/quick-introduction-to-postman-and-api-testing-for-beginners/",
      "bio": "Step-by-Step Guide to Becoming a Professional Software Tester-Learn manual, API & basic automation testing to start you",
      "objectives": [
        "Introduction to APIs by using Postman",
        "Start using Postman",
        "Overview of the HTTP messages",
        "Use query parameters, path variables and headers",
        "Write basic API tests",
        "Work with Postman variables",
        "Learn HTTP request methods: GET, POST, PATCH & DELETE",
        "Create simple workflows"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Software Testing": [
          "What is Software Testing?",
          "What is Software Testing?",
          "SDLC vs. STLC"
        ],
        "API TESTING with Postman": [
          "Postman : What is it?",
          "Postman : installing the tool",
          "Postman : installing the tool",
          "Postman : Create Workspace & Collection",
          "Postman : Get Request",
          "Postman : how to test Api : GET",
          "Postman : how to test Api : Post & Put",
          "Postman : how to test Api : Authorization & Delete",
          "Postman: API Testing Exercise",
          "Postman: API Testing Exercise 2",
          "Postman: Correction of the API Testing exercise 2",
          "Postman: Correction of the API Testing exercise 2",
          "Postman Cheat Sheet",
          "Postman API Testing Quiz: Mastering Postman for Effective API Testing"
        ],
        "API Testing with Soapui": [
          "Soapui : What is it?"
        ],
        "How test a Soap API": [
          "Soapui : Explore the tool",
          "Soapui : installing the tool",
          "How test a Soap API",
          "How test a Soap API : part 2"
        ],
        "How test a Rest API": [
          "Rest API",
          "How test a Rest API : Get / PUT",
          "How to create - test suite and Test Case",
          "How test a Rest API : PUT / POST",
          "How test a Rest API : DELETE",
          "Soapui : API Testing Exercise",
          "Rest api - exercice- coorection part 1",
          "Rest api - exercice- coorection part 2",
          "Rest api - exercice- coorection part 3",
          "Rest api - exercice- coorection part 4",
          "Rest api - exercice- coorection part 5"
        ],
        "Confluence for Jira": [
          "What is confluence?",
          "Jira Vs Confluence"
        ],
        "Confluence :": [
          "Confluence : How to create a space and pages"
        ],
        "Confluence administration:": [
          "Confluence : How to add users and team , how to modify settings"
        ],
        "End-to-End Testing with Playwright: A complete Guide": [
          "Explore Playwright",
          "Explore Playwright",
          "Explore Playwright",
          "Explore Playwright",
          "How to Run a script with Playwright",
          "How to Run a script with Playwright",
          "Playwright: writing the first script",
          "Playwright:Exercise 1",
          "Playwright: Correction of exercise 1",
          "Playwright:Exercise 2",
          "Playwright: Correction of exercise 2"
        ]
      },
      "requirements": [
        "Desire to learn Postman and APIs.",
        "No programming experience needed, but it can be useful later on."
      ],
      "description": "Are you looking to start a career in software testing but don’t know where to begin? This complete Software Testing Bootcamp is designed for absolute beginners who want to gain real, job-ready skills in manual testing, API testing, and basic test automation — without needing any coding experience to start.\nIn this course, you'll learn the core principles of software testing, how to write effective test cases, report bugs like a pro, and understand how testing fits into the Software Development Life Cycle (SDLC) and Testing Life Cycle (STLC). You'll also get hands-on experience using popular industry tools like Jira for bug tracking and Postman for API testing.\nWe’ll even introduce you to automation using Selenium — showing you how simple test scripts work and when automation is useful in a real QA job.\nBy the end of the course, you’ll have completed practical exercises, quizzes, and a mini-project to help you build confidence and prepare for real-world QA roles.\nWhether you want to become a QA Analyst, Manual Tester, or eventually move into Test Automation, this bootcamp is your first step.\nNo prior experience needed. Just bring your motivation, and we’ll guide you step-by-step!\n\n\nBonus content:\n\n\nReal-life QA scenarios\nTemplates for test documentation\nAI prompt examples to reuse\nTips for interviews and freelance QA jobs\n\n\nAbout the instructor:\nWith over 14 years of experience in software testing, agile QA, and project management, I’ve helped hundreds of professionals master QA tools and pass international certifications. This course is built from real-world experience — so you can learn what actually works in practice.\nReady to become an Software testing pro with a touch of AI?\n\nEnroll now and start testing smarter — today!",
      "target_audience": [
        "This course is targeted towards testing engineers and developers.",
        "• Anyone who needs a quick introduction to Postman"
      ]
    },
    {
      "title": "Cypress 12: Automatización de pruebas de punta a punta",
      "url": "https://www.udemy.com/course/cypress-automatizacion-de-pruebas-de-punta-a-punta/",
      "bio": "Así seas QA o desarrollador Aprende a utilizar Cypress12 para automatizar pruebas de punta a punta (End to end Testing)",
      "objectives": [
        "Aprenderás a crear un proyecto desde 0",
        "Aprenderás a crear tu propio framework de automatización",
        "Aprenderás a unirte a un proyecto creado de automatización con Cypress",
        "Aprenderás estrategias para encontrar elementos e interactuar con ellos",
        "Aprenderás sobre nuevas estrategias de testing en javascript",
        "Aprenderás sobre integración contínua con Jenkins",
        "Aprenderás sobre cucumber y bdd",
        "Aprenderás todo sobre cypress frontend y backend"
      ],
      "course_content": {
        "[Nuevo] Primeros pasos": [
          "Instalando Node JS y NPM",
          "Instalando Visual Studio",
          "[Nuevo] Introduccion a pagina de pruebas",
          "[Nuevo] Instalando Cypress"
        ],
        "[Nuevo] Caso 1: Verificando titulo del home page": [
          "[Nuevo] Verificando titulos",
          "[NUEVO] Encontrando atributos",
          "[NUEVO] Introduccion a caso a desarrollar",
          "[NUEVO] Como ejecutar un solo caso en un archivo",
          "[Nuevo] Manejo de Arrays y ejecucion con cy.only",
          "Verificando otras caracteristicas",
          "[NUEVO] Introduccion a hooks",
          "[Nuevo] Comandos personalizados"
        ],
        "[NUEVO] Caso 2: Formularios": [
          "[NUEVO] Happy path, escenario positivo",
          "[NUEVO] Unhappy path, escenario negativo",
          "Desarrollando mas validaciones sobre el text input",
          "Repaso de lo aprendido"
        ],
        "[NUEVO] Caso 3: Como testear multiples paginas": [
          "Introduccion a caso de prueba",
          "Encontrando elementos sin Data test Id",
          "Verificando URLs",
          "Poniendo a prueba lo aprendido"
        ],
        "[NUEVO] Aprendemos sobre recorridos de usuarios (User Journeys)": [
          "Recorridos de usuarios",
          "Completando recorrido de usuarios"
        ],
        "[NUEVO] Fundamentos del testing": [
          "La calidad es una mentalidad",
          "Identificando que hay que probar",
          "Pruebas Manuales vs Pruebas Automatizadas",
          "¿Quién debería ser responsable de las pruebas?",
          "Piramide de testing"
        ],
        "[NUEVO] Nueva pagina, casos de autenticacion": [
          "Clonando repositorio",
          "Ejecutando nueva pagina de pruebas",
          "Escenario: Debería redireccionar al usuario no autenticado a la página de inicio",
          "Escenario: redireccionar a la página de inicio después del inicio de sesion"
        ],
        "Primeros pasos": [
          "Primer Caso de Prueba",
          "Estrategia para encontrar elementos con Cypress",
          "Estrategias para encontrar elementos utilizando CSS",
          "Contabilizando elementos",
          "Parametrizando elementos",
          "Encontrando elemento basado en texto",
          "Codigo Generado",
          "Realizando aserciones sobre elementos duplicados",
          "Código Generado",
          "Flotando sobre elementos",
          "Codigo Generado",
          "Utilizando checkboxes",
          "Codigo Generado",
          "Interactuando con drop down menus y selects",
          "Codigo Generado",
          "Unificando lo aprendido en un caso",
          "Codigo Generado"
        ],
        "Acciones con mayor complejidad": [
          "Sobre el código utilizado en esta clase",
          "Utilizando Hooks en Cypress",
          "Cargando datos desde archivos JSON (Data driven testing)",
          "Cargando datos en Archivo JSON",
          "Forzando acciones sobre elementos escondidos",
          "Encontrando elementos de manera programática",
          "Trabajando con selectores de fecha (Date Pickers)",
          "Trabajando con Auto Complete Dropdowns",
          "Aprendiendo a subir archivos",
          "Trabajando con Dropdowns y data programaticamente",
          "Aserciones avanzadas",
          "Codigo Generado",
          "Archivo Example.json"
        ],
        "Estrategias de frameworks y configuraciones de Cypress": [
          "preparando caso para implementar comandos",
          "creando comandos propios",
          "Personalizando nuevos comandos",
          "Codigo Generado",
          "Commands.js",
          "Iterando datos de JSON en nuestras pruebas",
          "Codigo Generado",
          "carritoDeCompras.js",
          "Depurando acciones en Cypress",
          "Page object Model - Expliación + Transición de casos",
          "Codigo Generado",
          "Page Objects",
          "Tiempo de espera implicito y explicito",
          "Codigo Generado",
          "Cypress.JSON",
          "Cómo trabajar con números",
          "Codigo Generado",
          "Seteando Variables de entorno",
          "Ejecutando casos con linea de comando + screenshots + videos"
        ]
      },
      "requirements": [
        "Ninguno, ayuda tener conocimientos de Javascript, pero explicamos lo necesario para entender los ejercicios"
      ],
      "description": "¡Bienvenidos al curso de Automatización de Pruebas de Punta a Punta con Cypress!\n\n\nEn este curso, te ofrecemos un aprendizaje completo e interactivo, desde los fundamentos de Cypress hasta su aplicación en pruebas prácticas de diversas aplicaciones.\n\n\nNos enorgullece compartirte que este curso ha sido actualizado a la versión 12 de Cypress desde la versión original 9, asegurando que estés al día con las herramientas y estrategias más recientes.\nEl curso presenta una progresión cuidadosamente diseñada, comenzando desde los conceptos más básicos hasta llegar a las prácticas avanzadas de Cypress. Algunos de los temas que cubriremos incluyen:\nInstalación de herramientas\nCómo encontrar e interactuar con diferentes tipos de elementos\nEstrategias para contabilizar elementos e iterar entre grupos\nUso y comprensión de hooks\nData Driven Testing utilizando archivos JSON\nCómo subir archivos\nCreación de scripts propios\nDepuración de código y errores\nIntegración continua con Jenkins\nUso y aplicación de Cucumber + BDD\nReportes avanzados en la nube y específicos de Cucumber\nBackend testing con XHR\n\n\nMe presento\nSoy Juan Torres, QA Automation Lead y Co-Fundador de Atenea Conocimientos. Tengo más de 9 años de experiencia automatizando con diversas tecnologías y en varios sectores comerciales.\n\n\nNuestro objetivo\nEs que te sientas completamente satisfecho con este curso. No sólo cubrimos temas teóricos, sino que también compartimos nuestras vivencias y aprendizajes en el mundo del testing de software. La calidad de nuestros cursos se refleja en la cantidad de estudiantes satisfechos que tenemos.\n\n\n¿Estás listo para empezar? No tienes nada que perder. El camino hacia el mundo de los sistemas de software está a solo un click de distancia. Recuerda que tienes 30 días de prueba para el curso. Si sientes que no cumple con tus expectativas, simplemente puedes solicitar un reembolso y Udemy te devolverá el dinero.\n¡Empecemos a aprender juntos!",
      "target_audience": [
        "QA Manuales - Automation",
        "Desarrolladores frontend",
        "Cualquier persona interesada en aprender sobre automatización de testing"
      ]
    },
    {
      "title": "Jenkins | Step-by-Step for Complete Beginners",
      "url": "https://www.udemy.com/course/jenkins-step-by-step-for-complete-beginners/",
      "bio": "Learn Jenkins from scratch",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "***** No prior specialized knowledge is required *****",
        "Every lecture will start from scratch and you do not need any prior knowledge on JENKINS",
        "There will be real world examples and demo"
      ],
      "description": "Welcome to the ultimate beginner's guide to Jenkins! This course is specifically designed for those who have little to no experience with Jenkins and want to learn how to automate their software development processes effectively.\nIn this step-by-step course, you will gain a comprehensive understanding of Jenkins, a powerful open-source automation server used for continuous integration and continuous delivery (CI/CD). With easy-to-follow video tutorials, you will be guided through the essential concepts and practical applications of Jenkins from the ground up.\nWhat You Will Learn:\nIntroduction to Jenkins: Understand what Jenkins is and why it’s a vital tool for developers.\nPrerequisites: Learn about the necessary requirements for using Jenkins effectively.\nInstallation: Step-by-step instructions on how to download and install Jenkins on your system.\nAccessing Jenkins: Discover how to access the Jenkins interface and navigate its features.\nSetup and Configuration: Learn how to configure Jenkins for optimal performance.\nCreating Your First Jenkins Job: Follow along as you create and run your first Jenkins job, and see the results in real-time.\nManaging Jenkins: Learn how to stop Jenkins and understand the significance of the Jenkins Home Directory, including how to change it.\nBasic Configurations: Get familiar with essential Jenkins configurations to enhance your workflow.\nChained Jobs and Pipelines: Understand how to create chained jobs and build pipelines for more complex automation tasks.\nBy the end of this course, you will have the confidence and skills to utilize Jenkins in your projects, paving the way for a more efficient development process.\nJoin me on this learning journey, and never stop expanding your skills!\nInstructor: Raghav",
      "target_audience": [
        "Anyone who wants to learn JENKINS from scratch",
        "Beginners in JENKINS CI CD"
      ]
    },
    {
      "title": "Testing exploratorio para agilizar tus pruebas",
      "url": "https://www.udemy.com/course/testing-exploratorio-para-agilizar-tus-pruebas/",
      "bio": "Todas las técnicas y herramientas que tenes que tener para que no sean pruebas aleatorias",
      "objectives": [
        "Conocerán el origen y motivación del testing exploratorio",
        "Entenderán la metodología y forma de documentación del testing exploratorio",
        "Podrán tomar decisiones generales y particulares al momento de hacerlo",
        "Incorporarán herramientas para crear nuevos escenarios de prueba",
        "Comparán el testing planificado con el testing exploratorio",
        "Aprenderán la utilidad de los mapas mentales en el testing exploratorio",
        "Se llevarán herramientas de soporte al testing exploratorio"
      ],
      "course_content": {},
      "requirements": [
        "Conceptos básicos de software testing",
        "Conceptos básicos de metodologías ágiles"
      ],
      "description": "El testing exploratorio es una herramienta indispensable que complementa al testing tradicional al que solemos llamar testing planificado o scripted testing. Si bien no es nada nuevo, con el auge de las frameworks ágiles, este tipo de pruebas es cada vez más necesario porque está muy alineada con los valores de la agilidad.\n\n\nHay algunos mitos que giran en relación al testing exploratorio y que, a lo largo del curso, nos ocuparemos de derribar. Por ejemplo:\n- Que en el testing exploratorio las pruebas son aleatorias\n- Que en el testing exploratorio no se genera documentación\n- Que el testing exploratorio es un testing ad-hoc.\n\n\nA través de conceptos teóricos y ejemplos prácticos evidenciaremos por qué todo esto no es así. .\n.\nComo parte de este proceso de aprendizaje, incorporaremos técnicas y herramientas que nos harán más fácil nuestra labor como tester y nos permitirán implementar esta práctica en nuestros proyectos actuales haciéndonos ahorrar tiempo, dinero y dolores de cabeza.\n\n\nEste curso es ideal para las personas que ya están trabajando como tester y quieren promover la agilidad en sus equipos o incorporar una herramienta que enriquezca su trabajo.\nTambién le será de utilidad a profesionales que se estén formando como testers y quieran incorporar herramientas adicionales para tener un diferencial en su formación.\n\n\n¡Los espero!",
      "target_audience": [
        "Profesionales que ya se desempeñen como testers y quieran incorporar una herramienta adicional para el testing manual.",
        "Profesionales con cualquier otro rol que se encuentren trabajando en equipos ágiles y que quiera conocer una herramienta adicional.",
        "Profesionales que se estén formando como testers y quieran incorporar una herramienta más"
      ]
    },
    {
      "title": "Software Testing Bootcamp: From Beginner to Expert",
      "url": "https://www.udemy.com/course/softwaretestingmasterclassfrombeginnertoexpert/",
      "bio": "Basic Concepts in Test, Test Scenarios, Java-Selenium WebDriver, Web/Mobile/API Tests, JIRA , Interview Questions",
      "objectives": [
        "What is Software Testing?",
        "Fundamentals of Software Testing",
        "Test Types",
        "How to Write a Test Scenario?",
        "Web, Mobile, and API Tests",
        "API Testing with Postman",
        "Java",
        "Selenium WebDriver",
        "How to Use JIRA?",
        "Interview Questions"
      ],
      "course_content": {},
      "requirements": [
        "You will learn everything you need to know from the beginning."
      ],
      "description": "Hello from the \"Software Testing Bootcamp (2024): From Beginner to Expert\" training.\nYou can access everything you need to learn Software Testing with this course. The aim of this course is to guide those who want to work in the field of Software Testing and QA. It is an opportunity to improve yourself step by step, starting with the basic concepts that should be known before entering the sector.\n\n\nTopics Covered in the Course\n\n\nPart 1: Introduction\n•Introduction\n•What is Software Testing?\n\n\nPart 2: Basic Concepts\n•SDLC (Software Development Life Cycle)\n•SDLC Models\n•STLC (Software Testing Life Cycle)\n•The 7 Principles of Software Testing\n•Software Tester's Career Path\n•Basic Concepts Evaluation Questions\n\n\nPart 3: Types of Software Testing\n•Overview\n•Manual Testing\n•Automation Testing\n•Comparison of Manual Testing and Automation Testing\n•White Box Testing\n•Black Box Testing and Black Box Test Techniques\n•Functional Tests & Non-Functional Tests\n•Unit Testing\n• Integration Testing\n•System Testing\n•Acceptance Testing\n•Test Types Evaluation Questions\n\n\nPart 4 : Preparation of Test Scenarios\n• What is the Test Scenario?\n• Let's Create a Template for Test Scenarios\n•Test Scenario – Practice\n•Test Scenarios Evaluation Questions\n\n\nPart 5 : Web, Mobile, and API Tests\n•What is Web Testing?\n•Web Test – Practice\n•What is Mobile Testing?\n•Android Studio and Emulator Settings\n•Mobile Test – Practice\n•What is API & Postman?\n• HTTP Status Codes & Request-Response Structure\n• Let's Install Postman\n• API Testing with Postman – Practice\n•Web, Mobile, and API Tests Evaluation Questions\n\n\nPart 6: Introduction to Java\n•What is Java?\n•Installing Java and Intellij IDEA\n•Hello World!\n•Variables\n•String\n•Arrays\n•Operators\n•Loops\n•if -else if - else\n•Java Evaluation Questions\n\n\nPart 7 : Selenium WebDriver\n•What is Selenium WebDriver ?\n•Adding Selenium WebDriver\n•Driver Initialization\n•Selenium WebDriver Commands\n•Element Operations -1\n•Element Operations -2\n•Element Operations -3\n•Element Operations with Tool\n•Project : Let's Write  Automation\n•Selenium WebDriver Evaluation Questions\n\n\nPart 8 : JIRA\n•What is JIRA?\n•JIRA Membership and Project Creation\n•Issue Creation and Assignment Procedures\n•Issue Creation and Customization\n• Customizing the 'Issue Type' Screen\n•Various Features -1\n•Various Features -2\n•Various Features -3\n•JIRA Evaluation Questions\n\n\nPart 9 : Interview Questions\n• Interview Questions",
      "target_audience": [
        "Newcomers to software testing",
        "Those who want to learn about software testing techniques",
        "People who want to work as Software Tester",
        "People who want to work in the field of Software Testing and reinforce their knowledge",
        "People who want to learn how to use test tools"
      ]
    },
    {
      "title": "Postman od podstaw - testowanie REST API",
      "url": "https://www.udemy.com/course/postman-od-podstaw-testowanie-rest-api/",
      "bio": "Kurs od podstaw testowanie REST API Postman w praktyce. Automatyzacja testów API Newman + Jenkins CI/CD.",
      "objectives": [
        "Implementacja testów API w Postman",
        "Tworzenie zapytania GET, POST, PUT, DELETE",
        "Tworzenie zmiennych globalnych, środowiskowych, kolekcji",
        "Uruchamianie testów API z Newman + Jenkins",
        "Korzystanie z Mock Servers",
        "Wykorzystanie metod autoryzacji",
        "Praca z prawdziwym API",
        "Testowanie REST API"
      ],
      "course_content": {},
      "requirements": [
        "Nie musisz mieć żadnego doświadczenia z programem Postman. Kurs jest od podstaw.",
        "Dostęp do komputera z systemem (Windows, MacOS, Linux)"
      ],
      "description": "Postman od podstaw – testowanie REST API w praktyce\nChcesz nauczyć się testowania API, ale nie wiesz, od czego zacząć?\nW tym kursie pokażę Ci krok po kroku, jak pracować z programem Postman – od podstawowych zapytań po zautomatyzowane testy i integrację z narzędziem CI/CD Jenkins.\nNie musisz mieć żadnego wcześniejszego doświadczenia – zaczynamy od teorii, a kończymy na praktyce, którą możesz od razu wykorzystać w pracy lub w portfolio.\n\n\nCzego się nauczysz?\n\nPodstawy testowania REST API:\n– Czym różni się REST od SOAP\n– Dlaczego testowanie API jest ważne w projektach\n– Jakie są metody HTTP (GET, POST, PUT, DELETE) i kody odpowiedzi\n\nTworzenie zapytań w Postmanie:\n– Tworzenie kolekcji i zapytań do prawdziwego API (na przykładzie Trello)\n– Przekazywanie parametrów, nagłówków i danych wejściowych\n– Wykorzystywanie różnych metod autoryzacji\n– Praca ze zmiennymi: globalnymi, środowiskowymi i w kolekcji\n\nAutomatyzacja testów API:\n– Implementacja testów automatycznych\n– Skrypty wykonywane przed zapytaniem\n– Kolekcje testowe i uruchamianie ich przez Collection Runner\n– Harmonogramy testów dzięki Postman Monitors\n– Praca z Newman i uruchamianie testów przez CLI\n\nIntegracja z Jenkins (CI/CD):\n– Instalacja i konfiguracja Jenkinsa\n– Wdrażanie testów w zautomatyzowanym środowisku\n– Generowanie wyników i raportowanie\n\nDodatkowo:\n– Praca z Mock Server – symulowanie odpowiedzi API\n\n\nCzym jest Postman i dlaczego warto się go nauczyć?\nPostman to jedno z najczęściej używanych narzędzi do testowania API – zarówno przez testerów manualnych, jak i automatyzujących.\nDziała jako graficzny klient HTTP, który pozwala wysyłać zapytania, analizować odpowiedzi i tworzyć scenariusze testowe – bez konieczności pisania kodu od zera.\nJeśli chcesz pracować w QA, DevOps lub jako developer – znajomość Postmana jest dziś standardem.\n\n\nDla kogo jest ten kurs?\n\nDla osób bez doświadczenia, które chcą poznać testowanie API od podstaw\nDla testerów, którzy chcą rozszerzyć umiejętności o automatyzację API\nDla każdego, kto chce praktycznie poznać Postmana i jego integracje z narzędziami CI/CD\n\n\nW kursie przejdziemy wspólnie przez cały proces testowania API – zaczynając od prostych zapytań, a kończąc na profesjonalnej automatyzacji i integracji z Jenkins.\nTo idealna ścieżka nauki dla każdego, kto chce wejść w świat testowania API bez chaosu i bez zbędnej teorii.",
      "target_audience": [
        "Każdy zainteresowany nauką Postmana",
        "Każdy kto chce się nauczyć testowania REST API",
        "Testerzy oprogramowania / Programiści"
      ]
    },
    {
      "title": "Gestión eficiente de pruebas con XRay",
      "url": "https://www.udemy.com/course/gestion-eficiente-de-pruebas-con-xray/",
      "bio": "Potenciá Jira y lleva la gestión de pruebas a otro nivel",
      "objectives": [
        "Introducirse en el ecosistema Jira-Xray",
        "Dominar la planificación, diseño, ejecución y reportes en Xray",
        "Conocer las decisiones estratégicas a tomar antes de implementar Xray en un proyecto",
        "Implementar conceptos básicos como planes, casos y pasos de prueba, ejecuciones, defectos, etc.",
        "Aprender cómo implementar conceptos más complejos como pasos en Gherkin, pruebas modulares, combinatorias y parametrizadas, tableros, reportes, cobertura, etc."
      ],
      "course_content": {
        "Introduction a Jira y al caso de estudio": [
          "¡Bienvenida al curso!",
          "¿Qué es Jira?",
          "¿Cómo crear una cuenta y un proyecto en Jira?",
          "¿Cómo crear un proyecto Scrum en Jira?",
          "Presentación del caso de estudio",
          "Algunos escenarios para el caso de estudio"
        ],
        "Todo sobre Xray": [
          "Introducción a XRay",
          "Instalación y configuraciones iniciales de Xray",
          "Repositorio de pruebas",
          "Precondiciones",
          "Casos de prueba y pasos en pruebas manuales",
          "Pasos de prueba de tipo Gherkin",
          "Ejecución de pruebas",
          "Plan de pruebas",
          "Grupo de pruebas",
          "Grupo de pruebas vs. Repositorio de pruebas",
          "Ambientes o entornos de prueba",
          "Pruebas modulares",
          "Pruebas parametrizadas",
          "Listas",
          "Generador de documentos",
          "Cobertura de pruebas",
          "Paneles (Dashboards)"
        ],
        "Cierre y recursos finales": [
          "Cierre del cursso"
        ]
      },
      "requirements": [
        "Es necesario que conozcas las bases del testing (sus conceptos más importantes y el proceso de las pruebas)",
        "Es deseable que tengas nocios de Jira",
        "Es deseable que tengas conocimientos sobre frameworks ágiles como scrum"
      ],
      "description": "La gestión de pruebas debe ser eficiente. ¿Y qué mejor que aprovechar al máximo todas las funcionalidades de Xray para optimizarlas?\nEste curso es imprescindible, tanto para aquellos que ya utilizan la herramienta y desean sacarle el máximo provecho, como para aquellos que no la conocen, ya que cada día es más solicitada en los puestos de trabajo.\nIniciaremos un recorrido desde cero, explorando los fundamentos esenciales de Xray y Jira, y luego nos adentraremos en temas más complejos. Y para que todo esto no quede en abstracto, utilizaremos un caso de estudio sobre el cual implementaremos todas las funcionalidades como si estuviéramos en un proyecto real. De esta forma, cada lección será una experiencia práctica, utilizando Xray en tiempo real para una comprensión más profunda.\nLos principales temas que cubriremos serán:\nJira y XRay\nCaso de estudio\nRepositorio de pruebas\nPrecondiciones, casos de prueba y pasos de prueba manuales y Gherkin\nEjecuciones de prueba y grupos de pruebas\nPlan de pruebas\nAmbientes de prueba\nPruebas modulares y parametrizadas\nListas, reportes, cobertura y documentos\nAunque Xray es una herramienta intuitiva, esconde muchas funcionalidades poderosas que no te podes quedar sin conocer.\nAl finalizar, no solo tendrás una comprensión sólida de la gestión de pruebas con Xray, sino que también estarás listo para aplicar tus conocimientos de manera efectiva en tu entorno de trabajo.\nNo lo pienses más, ¡súmate a este curso para transformar tu enfoque en la gestión de pruebas y aprender todo sobre Xray, una herramienta líder en el mercado!\n¡Nos vemos dentro!",
      "target_audience": [
        "Profesionales que quieren potenciar Jira con Xray para mejorar sus pruebas",
        "Profesionales que busquen una herramienta eficiente para gestionar sus pruebas",
        "Profesionales que quieran incorporar una herramienta más a sus conocimientos y habilidades"
      ]
    },
    {
      "title": "Questions and Answers: Recruitment for Software Tester",
      "url": "https://www.udemy.com/course/questions-and-answers-recruitment-for-software-tester/",
      "bio": "How to Prepare for a Job Interview for a Software Tester Position",
      "objectives": [
        "Preparation for recruitment",
        "What the work of a tester may involve",
        "General knowledge about software testing",
        "Discover potential questions and their answers"
      ],
      "course_content": {
        "Intro": [
          "Something about me",
          "Something about the course"
        ],
        "General Questions": [
          "Why are tests important?",
          "What is a bug?",
          "What is a exploratory test?",
          "What is usability testing?",
          "What is the purpose of a retrospective in a project?",
          "What is a sprint?",
          "What is load testing and stress testing?",
          "What is a penetration testing?",
          "How to properly describe a bug?",
          "What is the difference between a high-level test case and a low-level test case?",
          "What test levels do you know?",
          "What types of tests do you know?",
          "Can you list a few types of non-functional tests?",
          "What are concurrency tests?",
          "What is a smoke test?",
          "What are black-box tests?",
          "What are the components of a test case?",
          "What is boundary value testing?",
          "What are regression tests?",
          "What API testing tools do you know?",
          "What is the CRUD method?",
          "What are UAT and why do we perform them?",
          "What is a unit test?",
          "What are the roles in a software development project?",
          "What does a test plan consist of?",
          "What are the priorities of a bug?",
          "What is the difference between manual testing and automated testing?",
          "What is white-box testing?",
          "What is the software development life cycle?",
          "What is an Agile?",
          "What are critical applications?",
          "How would you test a banking system?"
        ],
        "Backend": [
          "What is an API?",
          "What is Swagger used for?",
          "What is a json?",
          "List and describe the REST methods",
          "What HTTP status codes do you know?",
          "What is Postman used for?",
          "What are headers in HTTP requests? Provide examples",
          "What are the differences between REST API and SOAP API?",
          "How to test an API for performance?",
          "What are the popular tools for API performance testing?"
        ],
        "SQL": [
          "What is set union using the UNION operation?",
          "What clauses do you know in SQL?",
          "What are relational databases?",
          "What is the purpose of COUNT()?",
          "What would you use in SQL to show records without duplicates?",
          "What is INNER JOIN used for?",
          "What are devtools in brownser",
          "How to sort the results for a column in ascending and descending order?",
          "What data types do you know in databases?",
          "What is the equivalent of the conditional statement IF?"
        ],
        "Additional content": [
          "How to use ChatGPT for create performance test - Polish language version"
        ]
      },
      "requirements": [
        "for everyone"
      ],
      "description": "This course is designed to comprehensively prepare you for the recruitment process for a software tester position. It includes dozens of testing-related questions that are carefully categorized into thematic sections to facilitate learning and understanding of the material.\nThe course is ideal for anyone looking to quickly review key information about testing and effectively prepare for a job interview. Whether you are a beginner tester or an experienced professional looking to refresh your knowledge, you will find valuable information here to help you stand out in the job market.\nBased on numerous recruitment meetings I have participated in, both as a recruiter and a candidate, I have compiled a list of the most common interview questions. The course provides detailed explanations of these questions, helping you understand what to expect and how to respond effectively.\nAll course materials are tailored to current standards and trends in the IT industry. This course not only delivers theoretical knowledge but also offers practical tips and tools that can be immediately applied in real-life scenarios.\nDuring the course, you will learn how to effectively showcase your skills and experience, prepare for technical and behavioral questions, and avoid the most common mistakes during interviews. You will gain confidence and the ability to communicate your qualifications effectively, increasing your chances of success in the recruitment process.\nJoin our course and gain a competitive edge in the job market by preparing with us for your software tester recruitment journey!\n\n\nThe course is being read by AI.",
      "target_audience": [
        "for everyone"
      ]
    },
    {
      "title": "Software Test Automation - C#",
      "url": "https://www.udemy.com/course/software-test-auto-csharp/",
      "bio": "Build a complete software test automation framework",
      "objectives": [
        "Create a test automation framework from scratch",
        "Understand how to use multiple UI automation frameworks",
        "Know what the different types of test automation are and where/when to effectively apply them",
        "Complete a full practice test automation framework you can use in your career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up": [
          "Setting up - installations and getting the code"
        ],
        "C# and Visual Studio unit tests": [
          "Unit testing, iteration 1",
          "Unit testing, iteration 2"
        ],
        "C# and Visual Studio - Test Driven Development": [
          "TDD - iteration 1",
          "TDD - iteration 2",
          "TDD - iteration 3",
          "TDD - iteration 4"
        ],
        "C# and Visual Studio - Browser UI automation using Selenium WebDriver, Part1": [
          "Introduction and setup",
          "BrowserStackDemo, Story 1",
          "Locators",
          "Lab 01.1 - Creating our first test",
          "Lab 01.2 - Debugging our first test failures",
          "Lab 01.3 - Adding another test",
          "Lab 01.4 - Adding a third test",
          "Lab 01.5 - Refactor",
          "Lab 01.6 - Data driven testing - parametrized tests",
          "Lab 01.7 - Adding custom test names and new tests to data driven tests",
          "Lab 01.8 - Adding Logout",
          "BrowserStackDemo, Story 2",
          "Lab 02.1 - Refactor and run",
          "Lab 02.2 - Create first test, story 2",
          "Lab 02.3 - Add another test, story 2",
          "Lab 02.4 - Debugging another failure",
          "Lab 02.5 - Another refactor",
          "Lab 02.6 - Adding more cases to vendor checks, adding some stability",
          "Lab 02.7 - Adding another test case - correct products show up on page",
          "Lab 02.8 - Introducing TestCaseSource",
          "Lab02.9 - Adding another TestCaseSource, wrap up story 2"
        ],
        "Organizing your test code": [
          "Organizing Test Code"
        ],
        "The Page Object Model": [
          "The Page Object Model Introduction and Core Driver",
          "Sign In POM",
          "Header POM",
          "Homepage POM",
          "Sign In Tests using SignIn POM",
          "Logout Test using Sign In POM",
          "HomePage tests using HomePage POM"
        ],
        "Preserving Error Information": [
          "Preserving Error Information"
        ]
      },
      "requirements": [
        "Some programming experience. Understand the basic of creating and assigning variables, using logic comparisons, and are able to create simple class objects.",
        "Able to use Visual Studio (Community or Code - free to install and use!).",
        "Able to create simple methods in C# - understanding of flow control (if-else, while, for, foreach) and assignment of values to variables."
      ],
      "description": "This course will *show* you how to create solid, reliable, professional test automation. We do more than just talk about how to do this, we provide step-by-step labs detailing how to create your automation and how to improve it as we progress. Test creation in multiple formats, techniques to make your test automation more adaptable and robust, and beginner to advanced advice is included.\nThis course is a series of stand-alone labs you can mix and match from to meet your needs.\nConcepts that are covered:\nUnit testing\nTest Driven Development\nAutomated UI testing using Selenium WebDriver, WebDriverIO and Appium\nTesting in a Continuous Integration pipeline\nKeyword driven testing frameworks such as Cucumber/Gherkin or SpecFlow\nFor all of these areas, starter code projects are supplied, as well as finished projects you can adapt to fit your needs.\nThis course is designed this to help those who want to expand their capabilities in creating software test automation.\nWhether you are a student, a manual tester, or are already a software test professional, this course can help you become more effective in your role.\nAt the end of this course, you will have created a fully functional test automation framework you can modify for your circumstances.\nCome create the best test automation you can!",
      "target_audience": [
        "Test professionals looking to expand their abilities into creating test automation.",
        "Test professionals who want to make their existing test automation more useful."
      ]
    },
    {
      "title": "Introduction to Rally Test Management Tool",
      "url": "https://www.udemy.com/course/introduction-to-rally/",
      "bio": "Concepts on Rally as Test Management Tool",
      "objectives": [
        "Usage of Dashboard in Rally",
        "Creation of User Story",
        "Creation of Test Case",
        "Creation of Defects and assigning to the owner",
        "Introduction on Team Board"
      ],
      "course_content": {
        "Introduction on Rally Test Management Tool": [
          "Usage of Dashboard and creation of user stories",
          "Creation of Tasks and Test Cases",
          "Execution of Test Cases",
          "Creation of Defects and assigning to respective owner",
          "Creation of Reports",
          "Introduction on Team Board"
        ]
      },
      "requirements": [
        "Beginner",
        "Novice",
        "All Audience"
      ],
      "description": "This course is for usage of Rally as a Test management Tool.\nRally lets us prioritize, assign, track, report and audit our 'issues,' from software development, hardware defects and assigning to respective owner, to improvement and change requests and creating reports etc.,\nI will be giving you access to the tool for practices so that if I missed something or something has been updated you can have hands on practice.\nBelow are the topics covered\nLecture - 1 Usage of Dashboard and creation of user stories\nLecture - 2 Creation of Tasks and Test Cases\nLecture - 3 Execution of Test Cases\nLecture - 4 Creation of Defects\nLecture - 5 Creation of Reports\nLecture - 6 Introduction on Team Board",
      "target_audience": [
        "All audience",
        "Beginner to Rally"
      ]
    },
    {
      "title": "JUnit 5 Full Course for Beginners [2025] - Java Unit Testing",
      "url": "https://www.udemy.com/course/java-testing-unit-framework/",
      "bio": "Learn Unit testing in Java using JUnit 5, Java 21, JUnit 5, Maven, and IntelliJ IDEA. Unit Testing Banking App in Java.",
      "objectives": [
        "Learn to Write Unit tests using JUnit 5 Framework",
        "JUnit Lifecycle Annotations",
        "JUnit Assertions",
        "JUnit Exception Testing",
        "JUnit Test Suites",
        "JUnit Parameterized Tests",
        "JUnit Nested Tests",
        "JUnit Disable Tests",
        "JUnit Display Test Names",
        "JUnit Repeated Tests",
        "JUnit Test Execution Order",
        "Build Banking App in Java",
        "Write a JUnit tests for Banking App"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Source Code - Mastering JUnit Framework"
        ],
        "JUnit 5 - Getting Started": [
          "What is Unit Testing?",
          "Introduction to JUnit",
          "Setting Up the Environment for JUnit",
          "JUnit Basic Concepts",
          "Writing Your First JUnit Test",
          "JUnit @Test Annotation",
          "Quiz Time",
          "Team Review Meeting: JUnit 5 – Getting Started"
        ],
        "JUnit 5 - Assertions": [
          "JUnit assertTrue Method",
          "JUnit assertFalse Method",
          "JUnit assertNull Method",
          "JUnit assertNotNull Method",
          "JUnit assertEquals Method",
          "JUnit assertNotEquals Method",
          "JUnit assertArrayEquals Method",
          "JUnit assertIterableEquals Method",
          "Quiz Time",
          "Review Session: JUnit 5 Assertions"
        ],
        "JUnit 5 - Exception Testing": [
          "JUnit assertThrows Method",
          "JUnit assertThrowsExactly Method",
          "Quiz Time"
        ],
        "JUnit 5 - Display Test Names and Disable Tests": [
          "JUnit Display Test Names - @DisplayName",
          "JUnit Disable Tests - @Disabled",
          "Quiz Time"
        ],
        "JUnit 5 - Lifecycle Annotations": [
          "JUnit Lifecycle Annotations",
          "@BeforeEach Annotation",
          "@AfterEach Annotation",
          "@BeforeAll Annotation",
          "@AfterAll Annotation",
          "Quiz Time"
        ],
        "JUnit 5 - Nested Tests and Repeated Tests": [
          "JUnit Repeated Tests - @RepeatedTest Annotation",
          "JUnit Nested Tests - @Nested Annotation",
          "Quiz Time"
        ],
        "JUnit 5 - Test Execution Order": [
          "JUnit Test Execution Order"
        ],
        "JUnit 5 - Test Suite": [
          "JUnit Test Suite"
        ],
        "JUnit 5 - Parameterized Tests": [
          "JUnit Parameterized Tests and Source Types",
          "ParameterizedTest Source Type - @ValueSource",
          "ParameterizedTest Source Type - @EnumSource",
          "@ParameterizedTest Source Type - @CsvSource",
          "ParameterizedTest Source Type - @CsvFileSource",
          "ParameterizedTest Source Type - @MethodSource",
          "ParameterizedTest Source Type - @ArgumentsSource",
          "Quiz Time"
        ]
      },
      "requirements": [
        "Java",
        "IntelliJ IDEA"
      ],
      "description": "This course is designed for beginners and experienced programmers to learn everything about the JUnit framework from scratch. All dependencies and examples in this tutorial are up-to-date and use the latest version of JUnit (JUnit 5+). In this course, you will learn unit testing for a banking app.\n\n\nWhat is Unit Testing?\nUnit testing is a way to check small parts of your program, like individual functions or methods, to make sure they work correctly. The main goals of unit testing are to:\nMake sure each part of the program works as expected.\nMake it easier to change and improve the code.\nEnsure the program is reliable and bug-free.\nBy focusing on small parts, developers can find and fix bugs early, leading to better and more stable programs.\n\n\nWhat is the JUnit 5 Framework?\nJUnit is a framework that allows developers to create and run tests easily. It helps you write tests that automatically check if your code works correctly. JUnit is widely used because it makes testing simple and helps ensure your code behaves as expected.\nJUnit Framework is a de-facto standard for writing unit tests in Java.\nJUnit is a commonly used testing framework for Java projects. Knowing how to use JUnit is a valuable skill for any Java developer.\nWriting tests with JUnit helps you find and fix bugs early in the development process, saving time and effort later.\n\n\nWhat You Will Learn\nHere are the key topics you’ll explore in this course:\nIntroduction to JUnit 5\nWriting Your First JUnit Test\nSteps to Write JUnit Tests\nJUnit @Test Annotation\nJUnit Lifecycle Annotations: JUnit @BeforeEach, @AfterEach, @BeforeAll and @AfterAll Annotations\nJUnit Assertions\nJUnit Exception Testing\nJUnit Test Suites\nJUnit Parameterized Tests\nJUnit Nested Tests\nJUnit Disable Tests\nJUnit Display Test Names\nJUnit Repeated Tests\nJUnit Test Execution Order\nBuild Banking App\nWrite a JUnit test for  Banking App\n\n\nTools and Technologies Used\nJava 21\nMaven\nJUnit 5\nIntelliJ IDEA",
      "target_audience": [
        "This course is for Java developers who want to learn complete JUnit 5 framework from the scratch."
      ]
    },
    {
      "title": "Mocking application with Moq",
      "url": "https://www.udemy.com/course/moq-framework/",
      "bio": "Mocking real implementation of application with fake implementation using Moq",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Good understanding in C#",
        "Good knowledge in API",
        "Solid understanding of Unit Testing"
      ],
      "description": "In the course Mocking framework(Moq) we will learn and understand\n1. What is Mocking framework all about\n2. How to work without Moq and problem while working with real application\n3. How to work with Moq\n4. How to work and test different components of C# like\na. Methods/Returns values/ Times method called\nb. Parameters/Tracking parameters\nc. Auto-implemented properties\nd. Properties\n5. Working with advanced Moq concepts like strict and loose Moq\n6. Working with Property stubbing\nWith this course one will also get benefit of understanding how developers do testing of real application by isolating the non-focused components using Moq objects.",
      "target_audience": [
        "This course is designed for both QA and Dev"
      ]
    },
    {
      "title": "Automation Best Practices with JavaScript",
      "url": "https://www.udemy.com/course/automation-best-practices-with-javascript/",
      "bio": "Test JavaScript apps w/ Cypress, Webdriverio, component tests, and Github Actions",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction and Tools",
          "Source Code",
          "E2E Browser Tests",
          "Functional UI Testing With Cypress",
          "CICD With GitHub Actions",
          "Visual End-to-End Testing",
          "Component Testing",
          "Component Tests Exercise",
          "Component Tests Solution",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Knowledge of NodeJS and JavaScript",
        "An IDE that works with Node and JavaScript",
        "Github Account"
      ],
      "description": "Throughout the course, you’ll be able to Test React web applications by using different types of tests.\n\n\nYou’ll be provided with access to the source code so you can jump to the relevant part of the code and try to work with this React project on your own.\n\n\nWhat's in this course?\n\n\nIntroduction and tools\nSetup environment\nE2E browser tests\nFunctional UI testing with Cypress\nCICD with GitHub Actions\nVisual End-to-End testing\nComponent testing\nComponent tests exercise\nComponent tests solution\n\n\nTechnologies you will use\n\n\nReactJS\nCypress\nWebdriverIO\nScreenerIO\nSauce Labs\nGithub Action\nReact Testing Library\n\n\nReady to start? Check out the full curriculum and jump into the tutorial.\n\n\nWhat current students are saying:\n\"I appreciate the time the instructor put on this course as well as the opportunity to get familiar with TestProject free of charge. Well explained, however, if you are using Windows and you are new in Automation Testing, you might find it a bit challenging with adding the SDK Token in your system environment since the instruction used MAC which is completely a different way with windows. Other than that... I appreciate a lot this free course .... thank you so much\"\n“I like the fundamental approach used by the author. Will see:) To prepare for such a course - it's a really hard and big job. Respect and thank you.” - Serhii Kovalenko\n\n\n“Wonderful content and things explained in a nutshell. Overwhelmed by Author's dedication to putting things in such a way that any novice or manual tester can follow and understand and definitely be on-boarded as a Selenium Automation Engineer the next day at work. Thanks a million times for creating these courses! One Stop for Automation.\"- Rupashree Geethaaviji Ananthakrishna\n“I am familiar with Nikolay from a course I saw on TestAutomation and have the highest regard for him. Glad to see him on Udemy.” - Annamalai Viswanathan\n\n\n“One Of the Best courses on Selenium With C#. Cheers Nikolay!!” - Saransh Vaid",
      "target_audience": [
        "Beginner and Intermediate developers looking to learn how to test web applications"
      ]
    },
    {
      "title": "ISTQB Mobile Application Testing Preparation | CT-MAT Exams",
      "url": "https://www.udemy.com/course/istqb-mobile-application-testing-preparation-ct-mat-exams/",
      "bio": "Mobile Application Tester Certificate Preparation | ISTQB Mobile App Tester Training With 6 CT-MAT and Full Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is designed for aspiring students who want to pass the CT-MAT exam on their first attempt. With 6 comprehensive mobile application testing practice exams, this course offers the best preparation, mimicking the official exam format in every way.\n\n\nWhat makes our ISTQB Mobile App Testing exams special?\n\n\n6 Full-length CT-MAT Practice Exams: Each exam is designed to match the official mobile application test, including the number of questions, exam duration, topic distribution, K-difficulty level, and language style\n\n\nChallenging and Realistic Questions: Covering the entire ISTQB Mobile Application Testing syllabus, our questions are designed to push your understanding and prepare you for every aspect of the exam\n\n\nDetailed Explanations: Each question comes with a clear, detailed explanation to ensure you fully grasp the underlying concepts and strategies of mobile app testing\n\n\nPerformance Breakdown: After each exam, receive a comprehensive performance analysis, highlighting your score, strengths, and areas needing improvement. This helps you focus your study efforts on the sections of the CT-MAT syllabus that require more attention\n\n\nCertified Mobile App Testers as Instructors: This course is created by experts in the field who are certified mobile application testers (CT-MAT), ensuring that the material is both accurate and practical.\n\n\nEnroll today and take the first step toward becoming a Certified ISTQB Mobile App Tester!",
      "target_audience": [
        "Students who want to prepare for the ISTQB Certified Mobile Application Tester Exam | CT-MAT",
        "Students who want to boost their success rate in passing the mobile application testing exam",
        "Students who want to boost their understanding of various mobile app testing topics"
      ]
    },
    {
      "title": "Teste de Software: Seja um Expert e Impulsione Sua Carreira",
      "url": "https://www.udemy.com/course/teste-de-software-completo-fundamentos/",
      "bio": "Um diferencial que lhe dará excelentes oportunidades no mercado de TI. BÔNUS: Ferramentas e Consultoria",
      "objectives": [
        "Dominar os fundamentos do teste de software, as técnicas envolvidas, os tipos e níveis de teste",
        "Receber ferramentas gratuitas para que possam aplicar o que foi aprendido de imediato em seus projetos",
        "Receber orientações detalhadas sobre como se tornar um testador de alto nível e, principalmente, sobre como, de diversas formas, transformar isto em oportunidades imediatas e concretas no mercados de trabalho",
        "Aprender claramente e receber orientações diretas sobre como o aprendizado deste curso irá te tornar alguém diferenciado por toda a sua carreira profissional, de programador/testador a líder, gerente e executivo",
        "[Bônus 01] Inclusas ferramentas para implantação imediata em qualquer empresa (ver descrição do curso)",
        "[Bônus 02] 1h de consultoria/coaching particular com Gustavo Farias com 50% de desconto",
        "Um certificado digital de conclusão é entregue para os estudantes que completarem o curso"
      ],
      "course_content": {
        "Introdução": [
          "O que você REALMENTE alcançará neste curso",
          "O que é teste de software",
          "Agenda",
          "IMPORTANTE"
        ],
        "O Que as Empresas Precisam | Os Profissionais Atuais | A Grande Oportunidade": [
          "Verdades importantes sobre o teste de software",
          "\"O teste não é essencial\"",
          "A situação das empresas",
          "O perfil dos profissionais",
          "A primeira oportunidade",
          "Exercícios"
        ],
        "A visão, o Perfil e o Papel do Testador": [
          "A visão, o Perfil e o Papel do Testador",
          "Artigo"
        ],
        "Os Três Fundamentos do Teste de Software": [
          "Fundamentos do Teste de Software",
          "Exercícios"
        ],
        "Níveis de teste: \"Quando Testar?\"": [
          "[Níveis de Teste] --> Teste de Unidade",
          "[Níveis de Teste] --> Teste de Integração",
          "[Níveis de Teste] --> Teste de Sistema",
          "[Níveis de Teste] --> Teste de Aceitação",
          "[Níveis de Teste] --> Teste Alfa",
          "[Níveis de Teste] --> Teste Beta",
          "[Níveis de Teste] --> Teste de Regressão",
          "Exercícios"
        ],
        "Técnicas de Teste: \"Como Testar?\"": [
          "[Técnicas de Teste] Caixa Branca e Caixa Preta",
          "Testes Manuais x Testes Automáticos",
          "Artigo: Testes manuais x automatizados: quem leva a melhor?",
          "Teste Estático x Teste Dinâmico",
          "Exercícios"
        ],
        "Tipos de Teste: \"O que Testar?\"": [
          "[Tipos de Teste] --> Teste de Funcionalidade",
          "[Tipos de Teste] --> Teste de Desempenho",
          "[Tipos de Teste] --> Teste de Usabilidade",
          "[Tipos de Teste] --> Teste de Segurança",
          "[Tipos de Teste] --> Teste de Portabilidade",
          "[Tipos de Teste] --> Teste de Stress",
          "Exercícios"
        ],
        "Quando e Como os Testes Entram no Processo de Desenvolvimento de Software": [
          "As Etapas de Desenvolvimento e de Teste",
          "Criando e Gerenciando os Testes de Sistema",
          "Criando e Gerenciando os Testes de Aceitação",
          "Gerenciando os Testes Alfa e Beta",
          "Boas Práticas (Não Técnicas)",
          "Boas Práticas (Técnicas)",
          "Exercícios"
        ],
        "Resultados e o Custo de Não Fazer (bem feito)": [
          "O Custo da Falha",
          "Mitos do Teste de Software",
          "Artigo"
        ],
        "Certificações em Teste de Software": [
          "Certificações"
        ]
      },
      "requirements": [
        "Ter desejo de ser um testador de alto nível, acreditar que você VAI conseguir ser e estar determinado a buscar isso a partir de HOJE"
      ],
      "description": "---\nVocê sabia que a falta de testes de qualidade é o maior motivo de fracasso dos projetos de software?\nSabia também que profissionais do teste de software estão escassos no mercado devido à alta demanda?\n---\n\n\nALERTA.: se você gosta de muita teoria, decoreba e \"blá blá blá\" difícil até mesmo de entender, cuidado. Este curso é extremamente simples e prático, onde você entenderá tudo rápido e facilmente, receberá modelos prontos para aplicar nos seus projetos e gerenciará um projeto simulado do início ao fim utilizando a ferramenta mais procurada do mundo para planejamento de projetos.\n\n\nEste curso te dará em detalhes não apenas toda a formação necessária para se tornar um testador de software profissional, mas também te ensinará sobre como utilizar os conhecimentos e técnicas ensinados para fazer de você alguém diferenciado no mercado de T.I. e criar realmente grandes oportunidades com isto.\nCom uma linguagem simples, muita motivação, exemplos práticos e realistas, você irá aprenderá várias técnicas que te permitirão se desenvolver para ser um testador profissional. Seguindo os ensinamentos que te darei neste curso, SEM DÚVIDA, você será totalmente capaz de conquistar novas oportunidades em sua vida e carreira profissional, mesmo que hoje você não saiba NADA sobre o assunto e até mesmo ache que não tem perfil para para ser um testador.\nSeguindo os ensinamentos que te darei neste curso, SEM DÚVIDA, você será totalmente capaz de conquistar novas oportunidades em sua vida e carreira profissional, mesmo que hoje você não saiba NADA sobre o assunto e até mesmo ache que não tem perfil para ser um testador ou elaborar testes de alta qualidade.\n\n\nFaça esse curso se você quer:\n. DOMINAR os fundamentos do teste e do teste automático de software, as técnicas envolvidas, os tipos e níveis de teste;\n. Receber orientações sobre como se tornar um testador de ALTO NÍVEL e como transformar isto em oportunidades imediatas e concretas no mercados de trabalho;\n. Ser RECONHECIDO e BEM REMUNERADO no mercado de trabalho, dominando algo que menos de 5% dos profissionais dominam;\n. Ser capaz de PLANEJAR e GERENCIAR testes na abordagem preditiva;\n. Assumir POSIÇÕES RELEVANTES e de liderança nos projetos onde trabalhar;\n. Escolher onde trabalhar, sendo alguém DIFERENCIADO e ACIMA DA MÉDIA no mercado de trabalho.\n\n\n## POR GUSTAVO FARIAS, INSTRUTOR #1 NO MUNDO EM CURSOS ONLINE NA ÁREA DE NEGÓCIOS, COM MAIS DE 200.000 ALUNOS\n\n\n---\nTESTEMUNHOS (O que os alunos dizem sobre este curso?)\n\n\nWow!!! Parabéns Prof. Gustavo!! Sua didática é incrível, super objetiva, baseada em exemplos práticos, o que é muito importante quando se quer passar um conhecimento e, você o fez com excelência. - Adriane Belle\n\"Curso excelente! Metodologia rápida e bem didática. Recomendo bastante para quem está iniciando no mundo dos Testes.\" - Karina Januário\n\"Muito bem explicado! E quanto a parte dos testes automáticos, o fato de ter a prática contribuiu e muito para o meu aprendizado!\" - Eduardo Fernandes\n\"Este é um curso bastante diferenciado. O professor explica claramente e com certa profundidade sobre os conceitos dos testes, estratégias de realização e documentação. Fala também sobre o valor agregado ao aprender esses conceitos e para mim pelo menos fica claro o valor que posso incrementar na minha vida profissional sabendo tendo essas informações. Recomendo.\"\n---\n\n\nDurante o curso você receberá ferramentas utilizadas na prática por profissionais e prontas para serem utilizadas para gerenciar os testes em seus projetos.\n[Bônus 01] Planilha para gestão dos testes de Sistema.\n[Bônus 02] Planilha para gestão dos testes de Aceitação.\n[Bônus 03] Planilha para gestão dos testes Alfa e Beta.\n[Bônus 04] 1h de consultoria/coaching particular com Gustavo Farias com 50% de desconto.\n[CONTE COMIGO] Eu respondo 100% dos meus alunos em no máximo 24 horas.\n[GARANTIA] Este curso tem uma garantia de 30 dias caso você queira seu DINHEIRO DE VOLTA. Então, NÃO HÁ RISCOS para você!",
      "target_audience": [
        "Profissionais de T.I. (Tecnologia da Informação) que não possuem perfil de testador de software, mas que precisam desenvolver habilidades de um testador para agarrar novas oportunidades e assumir mais responsabilidades",
        "Programadores de qualquer nível de experiência que desejam adquirir um grande diferencial sendo especialista também em teste de software, o que o torna alguém especial para as empresas",
        "Universitários pró-ativos de cursos de T.I. (ex.: Sistemas de Informação, Ciência da Computação, etc.) que sabiamente querem desenvolver as habilidades de um testador de software desde cedo, visando ser um profissional diferenciado no mercado de trabalho"
      ]
    },
    {
      "title": "Playwright & Cucumber BDD with Java: Novice to Pro",
      "url": "https://www.udemy.com/course/playwright-cucumber-bdd-with-java-novice-to-pro/",
      "bio": "Master automated UI testing with Playwright, Cucumber BDD, and Java",
      "objectives": [
        "Master Java & Maven fundamentals to effectively automate tasks using Playwright.",
        "Build advanced automation tests for any web application using Playwright & Cucumber BDD.",
        "Understand the importance of Behavior Driven Development (BDD) using Cucumber & Gherkin.",
        "Combine two in-demand technologies: Playwright & Cucumber BDD (latest versions).",
        "Gain in-depth knowledge of Cucumber’s core components: Scenario Outlines, Background Keyword, Tags, and more.",
        "Know when and how to use specific Gherkin keywords such as ‘Feature’, ‘Given’, ‘When’, ‘And’, ‘Then’, and more.",
        "Generate a wide range of reports.",
        "Apply principles such as DRY (Don’t Repeat Yourself) and more.",
        "Implement design patterns such as POM (Page Object Model) & custom commands.",
        "Leverage Jenkins (CI) to easily execute test scenarios based on tags and custom scripts.",
        "Use Jenkins to develop sophisticated reports and handle various runtime options (e.g., browser selection).",
        "And much more, refer to the course Curriculum."
      ],
      "course_content": {},
      "requirements": [
        "Some basic Java (Programming) knowledge would be beneficial. A Java Fundamentals section is included in the course.",
        "Some knowledge of programming would be beneficial (not critical).",
        "Some basic HTML and CSS knowledge would also be useful (not critical).",
        "Feel free to ask questions in the Q&A section(s) of the course if something is not clear or does not work."
      ],
      "description": "This course uses the latest versions of Playwright & Cucumber BDD.\n\n\nWhy Playwright?\nPlaywright is a multi-programming language end-to-end testing framework that is not only popular but also rapidly growing in popularity due to its outstanding features and ease of use.\n\n\nWhy Cucumber BDD?\nCucumber BDD (Behaviour-driven development) much like 'Playwright' is a technology which is growing in popularity by the day and is used by organisations across the globe. Cucumber BDD captures test requirements in a simplistic manner, making it easy not only for 'Non technical parties/people' to understand scenario's which have been automated, but also assists the process of building effective automation frameworks and tests.\n\n\nWhy this course?\nThis course is designed to be quick, effective, efficient and easy to follow. I have been teaching for several years on Udemy with over 9 highly successful courses to date. I have refined this course using proven teaching techniques. This course is carefully structured from start to finish and I provide downloadable code examples after each coding lecture.\n\n\nWhat does this course cover?\nIntroduction to Playwright, Cucumber, and Java:\nLearn how to rapidly create both simplistic and sophisticated automated UI tests using Playwright.\nUnderstand the importance of Cucumber BDD (Behaviour-Driven Development).\nCapture test (scenario) requirements effectively and effortlessly using Cucumber BDD.\nGain knowledge of ‘Gherkin’, Cucumber’s language parser.\nKnow why and when to use specific Gherkin keywords such as ‘Feature’, ‘Given’, ‘When’, ‘And’, ‘Then’, and more!\nLearn the differences between ‘Scenarios’ and ‘Scenario Outlines’.\nSimplify tests using specific Cucumber BDD features such as the ‘Background’ keyword.\nInsert and modify test data directly within feature files.\nCorrectly map test requirements to actions using Cucumber step definitions and Playwright.\nBecome familiar with ‘Tags’ and learn how to target and execute specific tests (scenarios).\nProgramming and Tools:\nLearn Java & Maven to enhance your testing capabilities.\nUnderstand the fundamentals of Java and how it integrates with Playwright.\nManage project dependencies and build automation effectively using Maven.\nUtilize Playwright for browser automation tasks.\nAdvanced Testing Techniques:\nUnderstand the importance of design patterns such as Page Object Modelling (POM).\nLearn best practices such as DRY (Don’t Repeat Yourself).\nLeverage ‘Hooks’ and ‘Custom Commands’.\nReporting and Continuous Integration:\nCreate sophisticated reports (HTML reports, JSON reports) and more!\nLearn continuous integration using Jenkins and understand its usefulness.\nBecome familiar with important add-ons for Jenkins.\nCreate visually appealing reports within Jenkins and attach images to those reports.\nHandle extensible choice parameters (selection dropdown lists) via Jenkins.\nAdditional Features:\nAnd much, much more!\n\n\nReady to automate your tests like a pro!",
      "target_audience": [
        "Students new to Automation Testing & Cucumber BDD (Behavior-driven Development).",
        "Manual testers looking to enter the automation testing space.",
        "Testers looking to create their first test automation framework.",
        "SDETs and Automation Engineers transitioning from other frameworks to Playwright.",
        "Testers aiming to quickly grasp Playwright best practices and framework capabilities.",
        "Automation Testers wanting to build tests from scratch using Playwright & Cucumber BDD.",
        "Automation Testers familiar with other tools wanting to integrate Playwright & Cucumber BDD into their framework(s).",
        "Front-end developers interested in automation testing using a familiar language.",
        "Intermediate and advanced students wanting to learn new concepts and techniques.",
        "Beginners looking to learn Playwright efficiently.",
        "Individuals already familiar with Playwright but wanting to integrate Cucumber BDD into their existing frameworks.",
        "Anyone interested in automation testing and wanting to learn Playwright & Cucumber BDD."
      ]
    },
    {
      "title": "Ace Your ISTQB Foundation Exam: Practice Tests & Study Guide",
      "url": "https://www.udemy.com/course/ace-your-istqb-foundation-exam-practice-tests-study-guide/",
      "bio": "Comprehensive Practice Tests and Study Guide for Mastering the ISTQB Foundation Exam",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Unlock your potential and achieve success in the ISTQB Foundation Level Certification with our comprehensive course, \"Ace Your ISTQB Foundation Exam: Practice Tests & Study Guide.\" This expertly crafted program is designed to provide you with the essential knowledge, practical insights, and confidence needed to excel in the ISTQB Foundation exam.\nWhat You’ll Learn:\nDetailed Exam Coverage: Explore in-depth study materials that cover all key areas of the ISTQB Foundation syllabus, including software testing fundamentals, test design techniques, and test management.\nPractice Tests: Challenge yourself with a series of realistic practice exams that mirror the format and difficulty of the actual ISTQB Foundation exam, helping you to gauge your readiness and identify areas for improvement.\nStudy Guide: Access a well-organized study guide that breaks down complex concepts into manageable sections, making it easier for you to grasp and retain critical information.\nExam Strategies: Learn effective test-taking strategies and tips to enhance your performance on exam day, including time management and question-answering techniques.\nInteractive Learning: Engage with interactive quizzes and exercises designed to reinforce your understanding and application of testing principles.\nWho Should Enroll:\nThis course is ideal for aspiring software testers, QA professionals, and anyone seeking to gain the ISTQB Foundation certification to advance their career in software testing. Whether you're new to the field or looking to formalize your knowledge, this course will equip you with the tools and confidence to pass the exam with flying colors.\nJoin us and take the first step towards achieving your ISTQB Foundation certification and advancing your career in software testing!",
      "target_audience": [
        "Individuals who are new to the field of software testing and want to prepare for the ISTQB Foundation Level certification.",
        "Entry-level QA professionals who wish to solidify their understanding of foundational testing concepts and validate their skills with certification",
        "Developers who want to broaden their expertise by exploring software testing concepts and practices.",
        "Professionals currently performing manual testing who want to formalize their knowledge and improve their career prospects through certification",
        "Those studying or recently graduated in IT-related fields looking to gain practical testing knowledge and boost their employability with an ISTQB certification"
      ]
    },
    {
      "title": "Playwright Automation with TypeScript",
      "url": "https://www.udemy.com/course/playwright-automation-with-typescript/",
      "bio": "Become a Playwright pro: robust locators, POM, fixtures, API & network mocking, CI/CD, AI‑assisted testing.",
      "objectives": [
        "Install Playwright with TypeScript and run your first tests",
        "Design a Page Object Model with Playwright fixtures to manage setup, test data, and auth.",
        "Test REST APIs with Playwright: send requests, validate status codes and payloads.",
        "Run tests in CI/CD with GitHub Actions, secrets, artifacts, and a status badge.",
        "Explore AI-assisted workflows (e.g., Copilot) to draft and refine Playwright tests."
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript familiarity (TypeScript basics are taught)."
      ],
      "description": "Learn Playwright + TypeScript by building a maintainable, production‑ready test suite step by step. We start with a fast JS to TS primer for testers, then move from first run to a clean Page Object Model, fixtures, API tests, network mocking, visual/a11y checks, and CI/CD.\nWhat you’ll do\nSet up Node, VS Code, and Playwright\nUse robust locators and assertions to write readable, flaky‑free tests.\nCapture and refactor Codegen output into clean, reusable test code.\nAdd visual snapshots, debug with the HTML report, trace, and video.\nIntercept/mimic API calls to test slow responses, errors, and edge cases.\nValidate REST APIs directly with Playwright’s request library.\nCheck accessibility with axe and address common WCAG issues.\nOrganize everything with a Page Object Model and Playwright fixtures.\nShip tests in CI with GitHub Actions and artifacts.\nExplore AI‑assisted testing to draft, refactor, and review scenarios safely.\nBy the end, you’ll be able to design and build your own Playwright solution tailored to your product and team workflow—using reliable locators and assertions, a clean POM architecture, reusable fixtures, API and network tests, visual and accessibility checks, and a fast GitHub Actions pipeline. You’ll leave with a comprehensive, job‑ready starter template (POM + fixtures + utilities + CI) and the know‑how to adapt it to new apps, add custom helpers, and scale your suite with confidence. In the final module, we add AI‑assisted testing—showing how to use tools like Copilot/MCP Server to draft tests, generate data, refactor POMs, and review failures with human‑in‑the‑loop guardrails.",
      "target_audience": [
        "Manual QA engineers, junior developers, and SDETs who want a practical path to modern end‑to‑end testing with Playwright + TypeScript. Ideal for anyone moving from Selenium/Cypress, or teams that need reliable POM‑based UI/API tests with fixtures, network mocking, accessibility checks, visual snapshots, and GitHub Actions CI."
      ]
    },
    {
      "title": "QA Para el día a día: De novato a experto",
      "url": "https://www.udemy.com/course/qa-tester-de-novato-a-experto/",
      "bio": "Guía completa para Software Testers desde 0",
      "objectives": [
        "Adquisición de mentalidad de tester y conocimientos expertos en el área",
        "Aprende los fundamentos necesarios para ejercer esta carrera",
        "Entendimiento de: SDLC, Test Cases, JIRA, Confluence, XRAY, Github, Browser Stack, Miro, Firebase, Postman.",
        "Preparación para entrevistas y búsqueda de trabajo, empieza a generar ingresos!",
        "Domina el área de calidad pruebas!"
      ],
      "course_content": {},
      "requirements": [
        "No necesitas saber programar",
        "No necesitas saber de QA"
      ],
      "description": "El software testing es una de las carreras que más está creciendo en los últimos años, si tu deseas trabajar en el area de la tecnología convertirte en un QA o software tester es una de las mejores opciones que puedes tomar.\nEn este curso te estaremos enseñando cada uno de los aspectos que te harán avanzar de un aspirante a Software Tester a todo un experto.\n\n\nImpartimos desde los conocimientos técnicos que necesitas conocer para empezar a laborar como un QA, hasta las habilidad blandas y aspectos del día a día que necesitarás para poder mantenerte sobresaliente en tu empleo.\nTambién contamos con una sección dedicada al empleo para que puedas preparate de la mejor manera, con este curso podrás empezar tu busca laboral inmediatamente ya que te proveemos y educamos con todos los elementos requeridos.\nEs el único curso que cubre y te formará en todas las áreas mencionadas (Habilidades técnicas, habilidades no técnicas, todo sobre la formación y busqueda de empleo).\nCualquier aspirante puede tomar este curso sin experiencia previa, los temas se abarcan de manera que puedas comprenderlos sin haber estudiado el tema anteriormente.\nY aún hay más, cuando hayas concluido con este curso obtendrás un certificado y mantendrás el acceso al curso de por vida.\n\n\n¡No dejes pasar esta oportunidad!",
      "target_audience": [
        "Personas que quieran entrar al area de la tecnología sin necesidad de fuertes habilidades de programación",
        "Personas que quieran entrar en el mundo de software testing y QA",
        "QAs principiantes"
      ]
    },
    {
      "title": "JUnit Mastery: Boost your Expertise with 5 Practice Exams",
      "url": "https://www.udemy.com/course/junit-mastery-boost-your-expertise-with-5-practice-exams/",
      "bio": "JUnit Mastery with 600 Unique Conceptual + Scenario Questions and Answers: 5 Practice Exams- NEW",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Master the art of unit testing in Java with JUnit Mastery, a comprehensive course featuring 600+ unique conceptual and scenario-based questions. Designed for aspiring software developers and testing professionals, this course will boost your confidence in using JUnit and prepare you for real-world challenges.\nWhat You'll Learn:\nIntroduction to JUnit:\nUnderstand JUnit's history, evolution, and significance in software development. Learn how to set up JUnit in your project using Maven or Gradle and explore IDE integrations.\nAnnotations Demystified:\nMaster common JUnit annotations like @Test, @Before, @After, @BeforeClass, and the powerful features introduced in JUnit 5.\nWriting and Running Tests:\nLearn to structure effective test cases, use assertions, create parameterized tests, and run tests from IDEs or the command line.\nException Handling in Tests:\nExplore how to test for exceptions using annotations, custom logic, and modern libraries like AssertJ.\nTest Fixtures and Resource Management:\nUnderstand test fixtures, resource setup, and teardown techniques for a consistent testing environment.\nMocking with Mockito:\nDive into mocking with the Mockito framework, including stubbing, verifying interactions, and managing dependencies effectively.\nJUnit 5 Features and Dynamic Tests:\nDiscover the advanced capabilities of JUnit 5, including dynamic tests and extension models for custom functionality.\nIntegration Testing with JUnit:\nLearn to conduct integration tests alongside unit tests, and integrate JUnit with Spring for testing robust applications.\nBest Practices for JUnit Testing:\nDevelop strategies for writing maintainable tests, achieve higher code coverage, and avoid code duplication in your test suites.\nTesting Strategies for Agile Development:\nGain insights into Test-Driven Development (TDD), Behavior-Driven Development (BDD), and incorporating JUnit tests into Continuous Integration (CI) pipelines.\nAdvanced JUnit Concepts:\nMaster parameterized tests, assumptions for conditional execution, and managing test execution order effectively.\nTroubleshooting and Debugging Tests:\nAddress common issues, debug failing tests, and interpret test reports for better analysis and optimization.\nWhy This Course?\nWith 5 expertly crafted practice exams simulating real-world scenarios, this course provides a hands-on experience to deepen your expertise in JUnit. Whether you're preparing for interviews, certifications, or aiming to become proficient in unit testing, this course equips you with the tools and knowledge you need to excel.\nWho Should Enroll?\nSoftware developers looking to enhance their testing skills.\nQA professionals and automation testers working with Java applications.\nStudents and professionals preparing for technical interviews.\nAnyone aiming to implement robust testing practices in their projects.\nCourse Highlights:\n600+ Unique Q&A: Practice a wide range of conceptual and scenario-based questions.\n5 Practice Exams: Simulate real-world testing challenges for mastery.\nExplanations: Learn from explanations for each question.\nHands-On Approach: Explore advanced JUnit features like dynamic tests, mocking, and Spring integration.\nEnroll Today!\nTake the next step in mastering JUnit and become an expert in Java testing practices. Boost your expertise, ace your interviews, and deliver quality software with confidence!",
      "target_audience": [
        "Java Developers aiming to enhance their unit testing skills with JUnit.",
        "QA Professionals and Test Automation Engineers working on Java-based projects.",
        "Students and Job Seekers preparing for technical interviews or certifications in testing.",
        "Anyone who wants to master JUnit and write effective, maintainable tests for high-quality software."
      ]
    },
    {
      "title": "Performance Testing Basics",
      "url": "https://www.udemy.com/course/performance-testing-basics/",
      "bio": "Set a strong foundation for your performance testing career by understanding all the basics you'll ever need.",
      "objectives": [],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Performance Testing Introduction": [
          "Performance Testing Introduction",
          "Performance Testing Life Cycle"
        ],
        "Important Performance Testing Terminologies": [
          "Performance Bottleneck",
          "Concurrent Users and Simultaneous Users",
          "Average Load and Peak Load",
          "Response Time, Latency and Throughput",
          "Ramp Up, Ramp Down and Steady State",
          "Think Time and Pacing",
          "Workload Modeling",
          "Performance Monitoring"
        ],
        "Types of Performance Tests": [
          "Load Test",
          "Stress Test",
          "Soak Test",
          "Spike Test"
        ]
      },
      "requirements": [
        "A computer with an internet access",
        "No prior knowledge of performance testing is required",
        "Some background knowledge of software testing is a plus, but not absolutely necessary"
      ],
      "description": "Start your performance testing career right here. This course will teach you all the basics you will ever need to start a lucrative career in performance testing field.\nStarting with understanding what is performance testing, this course will make you familiar with performance testing life cycle and different types of performance tests.\nPerformance testing is riddled with lot of concepts, understanding which can be daunting for new performance testers. Therefore, to make new performance testers' life easier, this course gives an overview of all the important terminologies related to performance testing.",
      "target_audience": [
        "Anyone who wants to start with software performance testing.",
        "Software testers who want to start career in performance testing",
        "Performance testers who wants to refresh their basics.",
        "Software testers who want to know basics of performance testing"
      ]
    },
    {
      "title": "2時間で学ぶ！ソフトウェアテスト設計講座（シナリオテスト編）～業務視点でのテスト設計手法を習得～",
      "url": "https://www.udemy.com/course/shift-designscenariotest/",
      "bio": "業務フローに沿ったシナリオからテストケースを設定する「シナリオテスト」。本講座では、業務や人の視点からテストケースを設計するための考え方を身に付けます。",
      "objectives": [
        "基本的なテスト設計プロセスを理解し、活用することができるようになる",
        "シナリオテストの位置づけ、機能テストとの違いを理解する",
        "シナリオに登場するアクターを認識できる",
        "業務を詳細化してシナリオテストの目的を設定できる",
        "アクターや状態遷移に着目してシナリオテストの目的を設定できる",
        "工程や因子水準を意識してシナリオテストの実施手順を詳細化できる",
        "シナリオテストの確認ポイントを明確化できる",
        "講座内で理解度確認テストを実施するので、ご自身の理解度を確認したうえで更なる学習・技能習得に繋げることができる"
      ],
      "course_content": {
        "はじめに": [
          "このコースのご紹介",
          "コースの内容",
          "講師あいさつ"
        ],
        "シナリオテスト設計の基礎": [
          "このセクションの概要",
          "シナリオテストとは",
          "シナリオテストで確認すること",
          "業務と人とシステムの関係",
          "シナリオテスト設計のインプット",
          "シナリオテスト設計の仕様書例",
          "このセクションのまとめ"
        ],
        "アクターの抽出": [
          "このセクションの概要",
          "シナリオテストにおけるアクター",
          "アクターの考え方",
          "アクターの洗い出し例",
          "このセクションのまとめ"
        ],
        "シナリオテストの目的": [
          "このセクションの概要",
          "シナリオテストとテスト計画",
          "シナリオテストの目的分析",
          "シナリオテストの目的（業務視点）",
          "シナリオテストの目的（各種の観点）",
          "シナリオテストの目的を考えてみよう",
          "シナリオ目的の洗い出し例",
          "このセクションのまとめ"
        ],
        "シナリオテストの仕様化": [
          "このセクションの概要",
          "工程にブレークダウンする",
          "因子・水準を洗い出す",
          "因子・水準選択の注意点",
          "確認項目と期待値を洗い出す",
          "フォーマットに従って設計書を記述する",
          "シナリオテスト設計書を書いてみよう",
          "シナリオテスト設計書の記述例",
          "このセクションのまとめ"
        ],
        "理解度確認テスト": [
          "このセクションの概要",
          "理解度確認テスト",
          "このセクションのまとめ"
        ],
        "おわりに": [
          "このコースのまとめ",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "システム開発のご経験が無くても受講はできますが、標準的なシステム開発のフローを把握していると理解が進みます。",
        "2~3年目の若手エンジニアはもちろん、ご経験豊富なベテランエンジニアの方もご自身のスキルと照らし合わせてより高度なスキルを取得していただけます。"
      ],
      "description": "ソフトウェアテスト専門会社のプロがノウハウを伝授する実践的講座第２弾！\n\n\nシステム全体をブラックボックステストとして捉え、業務フローに沿ったシナリオからテストケースを設定する「シナリオテスト」。\nユーザーニーズを満たすためには非常に重要なテストですが、実際に設計してみると漏れや重複が発生しやすく、エンジニアの力量が問われます。\nシステムテストや受け入れテストのためにシナリオテストを考えても、何かテスト漏れが出てしまって、後から問題になる、一方で、テストを漏れなくするために細かくテストしようとすると、統合テストと同じになってしまう。そんなお悩みをお持ちの方には必見です。\n\n【演習付き】\n講義ビデオは1時間ですが、演習があります。ぜひチャレンジください。\n\n\n■ 2024/3/22 更新\nこの度、一部レクチャーの音声改善のため、動画の更新を実施することになりました。\n更新期間は 2024/3/27（水）～2024/3/29（金）の予定です。\n受講中の場合、更新されたレクチャーは未修扱いとなりますのでご注意ください。\nみなさまにはご不便をおかけし大変申し訳ありませんが、何卒よろしくお願い申しあげます。\n\n\n■2024/3/28 更新\n動画更新作業が完了いたしました。みなさまにはご不便をおかけし申し訳ありませんでした。\n今後ともよろしくお願いいたします。",
      "target_audience": [
        "テスト設計の技法と具体的な実践方法を習得したい方",
        "シナリオテストと機能テストの役割分担にお悩みの方"
      ]
    },
    {
      "title": "Create Test Automation Framework in 2 hours with GenAI",
      "url": "https://www.udemy.com/course/create-test-automation-framework-in-2-hours-with-genai/",
      "bio": "Build a Real-World Automation Framework Using Python, Playwright, pytest & GenAI Tools Like ChatGPT",
      "objectives": [
        "As a QA Automation Engineers, SDET's, QE Solution Architects, you will learn Prompt Creation for Effective Output",
        "Adding Details to Framework, Creation of Page/API Classes and managing configurations dynamically",
        "Optimized Framework with Fixtures and Fixing Build Issues with GenAI",
        "Test Execution in Local and Test Execution in CI Tool like Github Actions",
        "Report Generation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Prompt Creation for Effective Output": [
          "Role assignment and describing the use case",
          "Getting First draft version of framework",
          "Creating Project structure",
          "Completing the remaining files and folders"
        ],
        "Adding details to Framework": [
          "Adding dependencies through requirements"
        ],
        "Creation of Page Classes": [
          "Achieving Encapsulation with application Page Classes",
          "Base Page and Base API class with config.yaml"
        ],
        "Config reader for reading configurations": [
          "Config reader for reading configurations"
        ],
        "Optimized Framework with Conftest.py": [
          "Creation of Conftest File"
        ],
        "Fixing Build Issues": [
          "Fixing the error in Project"
        ],
        "Test Execution In Local": [
          "Web test cases execution",
          "API Test cases execution"
        ],
        "Test Execution in CI tool": [
          "Parallel Execution Of tests",
          "Running web tests in headless mode",
          "Creating github actions yaml file",
          "Move code to Github-1",
          "Move code to Github-2",
          "Move code to github -3",
          "Running test cases in github actions"
        ],
        "Report Generation": [
          "Report Generation and always upload report in Github actions"
        ]
      },
      "requirements": [
        "Basic experience in Test automation."
      ],
      "description": "Unlock the power of GenAI to build a real-world, scalable test automation framework in just 2 hours!\nThis course is designed for QA Engineers, SDETs, and automation enthusiasts who want to supercharge their productivity by leveraging GenAI tools like ChatGPT to build efficient and modern test automation frameworks.\nYou’ll learn to combine tools like Python, Playwright, Pytest, Requests, and GitHub Actions—along with AI assistance—to automate everything from UI and API testing to CI/CD pipeline execution.\nWhether you're a beginner or an experienced QA professional, this course walks you through the complete process of creating a reusable, modular, and industry-ready automation framework—without spending weeks writing boilerplate code.\n\nCourse Breakdown – 9 Practical Modules\nPrompt Engineering for Effective AI Output\nStructuring Framework Components\nCreating Page and API Classes\nEnvironment-Specific Config Management\nOptimizing Framework with Pytest Fixtures\nFixing and Refactoring with GenAI\nExecuting Tests Locally\nRunning Tests via CI Tools like GitHub Actions\nGenerating Test Reports for Visibility\nInterview Preparation\nTools and Technologies Covered\nPython, Pytest, Playwright, Requests\nGitHub Actions, pytest-html\nChatGPT and Prompt Engineering\nYAML-based configuration management\nWhy Take This Course?\nLearn how to integrate GenAI with practical QA automation workflows\nBuild a test framework used by modern QA teams\nDeliver automation faster and with better maintainability\nGain hands-on experience with industry tools and practices\nLifetime access to course updates and best practices",
      "target_audience": [
        "QA Automation Engineers, SDET's, QE Solution Architects,"
      ]
    },
    {
      "title": "Software Testing Fundamentals",
      "url": "https://www.udemy.com/course/software-testing-fundamentals-b/",
      "bio": "Software Testing for Beginners",
      "objectives": [
        "Gain Complete Knowledge about software Testing",
        "Steps to Create Test plans",
        "You will be able to test any kind of web applications and windows applications"
      ],
      "course_content": {
        "Software Testing Fundamentals": [
          "Trainer Introduction",
          "Software Testing Fundamentals -Trailer",
          "Introduction to Testing",
          "Fields of Testing",
          "What is Software Testing ?",
          "Is Software Testing Necessary ?",
          "Who does Testing ?",
          "Testing Terminologies",
          "What do Testers do ?",
          "Software Testing Fundamentals - Closure Thoughts",
          "Assignment 1 - TASK TO DO"
        ],
        "Quality Assurance and Quality Control": [
          "Quality Assurance and Quality Control - Trailer",
          "Introduction to Quality Assurance and Quality Control",
          "What is Quality ?",
          "How to measure Quality ?",
          "Test Metrics and its Types",
          "How to calculate Test Metrics ?",
          "Differentiate Quality Assurance & Quality Control",
          "Quality Assurance & Quality Control -Closure Thoughts",
          "Assignment 2- TASK TO DO"
        ]
      },
      "requirements": [
        "Basic Internet knowledge about websites",
        "Basic skills to use Excel",
        "Those who are interested in learning Testing"
      ],
      "description": "Software Testing Fundamentals course is a detailed guide for software testing. Here you will learn basic fundamentals of software Testing  which are required to work as a Software Tester\nIf you are new to software Testing starts from Software Testing Fundamentals continue watching other topics to expand your knowledge in Software Testing.\nWhat Will You Learn?\nI) Software Testing Fundamentals:\nTopics Covered in this Course:\nIntroduction to Testing\nFields of Testing\nWhat is Software Testing\nIs Software Testing Necessary?\nWho does Testing?\nTesting Terminologies\nWhat do Testers do?\nSoftware Testing Fundamentals -Closure Thoughts\nAssignment 1:\nLaunch a sample website and do testing and find Bugs. Log the Bugs in the error template xls template which is attached in the assignment section. Let me know your progress in the comments section.\n\n\nII) Quality Assurance & Quality Control\nWhat is Quality?\nHow to measure Quality?\nTest Metrics and its Types\nTest Metrics\nTypes of Test Metrics\nHow to calculate Test Metrics?\nDifferentiate Quality Assurance & Quality Control\nQuality Assurance & Quality Control - Closure Thoughts\nAssignment 2:\nUse the formula discussed in the course to calculate the % of Test Cases Executed. You can use your own numbers also to calculate the percentage.\nLet me know your calculation in the comments section.\nSoftware Testing Fundamentals course is for beginners who need a basic understanding of the Testing field. Software Testing is a field of Testing. The tester's responsibility is to identify the bugs in the web application. As a Software Tester, you should deliver an application with 100% Quality with zero Bugs.",
      "target_audience": [
        "Beginners in Software Testing",
        "IT graduates / Freshers",
        "Those who are interested in finding bugs in web application"
      ]
    },
    {
      "title": "Locators, XPath Expressions, CSS Selectors and Locator Tools",
      "url": "https://www.udemy.com/course/locators-xpath-css-tools/",
      "bio": "Includes the creation of complex XPath Expressions and CSS Selectors from scratch and many more",
      "objectives": [
        "HTML Basics required for understanding or learning Locators",
        "Locator concepts, Types and choosing Locators",
        "Creating XPath Expressions from scratch on the fly",
        "Creating CSS Selectors from scratch on the fly",
        "FireBug and FirePath Alternatives for auto-generating the Locators"
      ],
      "course_content": {
        "HTML Basics for Locators": [
          "What is HTML?",
          "HTML Tags, Attribute Names and Values, Enclosed Text and HTML Elements",
          "Structure of HTML",
          "Adding Title to the HTML Web Page",
          "Adding Paragraphs to the HTML Web Page",
          "Adding Bold, Italic and Underlined text to the HTML Web Page",
          "Adding different sizes of headings",
          "Adding hyperlinks to the web page",
          "Adding Rulers to the Web Page",
          "Adding Images to the Web Page",
          "Adding Line Breaks to the Web Page",
          "Adding Table to the Web Page"
        ],
        "Locator Concepts and Types": [
          "What are Locators?",
          "Different Types of Locators",
          "Demonstrating ID locator",
          "Demonstrating Name locator",
          "Demonstrating Class Name locator",
          "Demonstrating Link Text locator",
          "Demonstrating CSS Selector locator",
          "Demonstrating XPath locator",
          "Demonstrating DOM locator",
          "Priority of Locators",
          "Additional details about different Locators"
        ],
        "XPath Expressions": [
          "What is an XPath?",
          "Hierarchy of HTML Source Code",
          "Types of XPath Expressions",
          "Building Absolute XPath Expressions",
          "Advantages and Disadvantages of Absolute XPath Expressions",
          "Relative XPath Expressions - First Set of Examples",
          "Relative XPath Expressions - Second Set of Examples",
          "Relative XPath Expressions - Third Set of Examples",
          "Relative XPath Expressions - Fourth Set of Examples",
          "Relative XPath Expressions - Fifth Set of Examples",
          "Relative XPath Expressions - Sixth Set of Examples",
          "Relative XPath Expressions - Seventh Set of Examples",
          "XPath Expressions - Wild Cards",
          "XPath Expressions - HTML Tables",
          "Different XPath Functions",
          "text() XPath Function",
          "contains() XPath Function",
          "starts-with() XPath Function",
          "last() XPath Function",
          "position() XPath Function",
          "Different XPath AXES",
          "following XPath AXES",
          "preceding XPath AXES",
          "following-sibling XPath AXES",
          "preceding-sibling XPath AXES",
          "parent XPath AXES",
          "child XPath AXES",
          "ancestor XPath AXES",
          "descendant XPath AXES",
          "Advantage of Relative XPath Expressions over Absolute XPath Expressions"
        ],
        "CSS Selectors": [
          "What is a CSS Selector?",
          "Types of CSS Selectors",
          "Building Absolute CSS Selectors",
          "Advantages and Disadvantages of Absolute CSS Selectors",
          "Relative CSS Selectors - First Set of Examples",
          "Relative CSS Selectors - Second Set of Examples",
          "Relative CSS Selectors - Third Set of Examples",
          "first-child in CSS Selectors",
          "last-child in CSS Selectors",
          "nth-child in CSS Selectors",
          "Comma and Asterisk Symbols in CSS Selectors",
          "Starts With, Ends With and Contains Symbols in CSS Selectors",
          "Using not in CSS Selectors",
          "Using following sibling in CSS Selectors",
          "Locating disabled, enabled and selected UI elements using CSS Selectors",
          "XPath Expressions are powerful over CSS Selectors",
          "CSS Selectors have higher priority over XPath Expressions"
        ],
        "FireBug and FirePath Alternatives": [
          "FireBug got deprecated and discontinued",
          "Use SelectorsHub in place of ChroPath",
          "SelectorsHub - The Best Alternative",
          "List of Alternatives",
          "ChroPath for Chrome Browser",
          "ChroPath for Firefox Browser",
          "ChroPath for Opeara Browser",
          "devtools-highlighter",
          "Try XPath",
          "Default Chrome Dev Tools",
          "XPath Finder",
          "XPath Helper",
          "Relative XPath Helper",
          "MRI",
          "True Path for Chrome",
          "True Path for Firefox",
          "Ranorex Selocity",
          "Default Firefox Dev Tools",
          "Chrome Console",
          "ChroPath is the best",
          "Learn Manual Creation of XPath Expressions and CSS Selectors"
        ]
      },
      "requirements": [
        "Basic knowledge about software usage"
      ],
      "description": "This course covers all the below topics in detail:\nHTML Basics that are required for learning and understanding different types of Locators\nLocator concepts\nTypes of Locators\nCreating Complex XPath Expressions from scratch\nCreating Complex CSS Selectors from scratch\nFireBug and FirePath Alternative tools for Locators Auto-generation\nBy the end of this course you will be able to create reliable, stable and complex Locators for locating UI elements on the web pages.\nThis course is for the Test Automation engineers who want to create better and 'easier to maintain' locators.\nCheck the course contents for more details.",
      "target_audience": [
        "Beginners who are new to Selenium Automation",
        "Beginners aspiring to learn different Locators",
        "If you want to learn all the Locators to be used in Selenium Automation in detail, complete and from scratch"
      ]
    },
    {
      "title": "Introduction in load testing with JMETER",
      "url": "https://www.udemy.com/course/learn-load-testing-with-jmeter/",
      "bio": "This course will show you how to create a load test plan with JMETER.",
      "objectives": [
        "create their own load testing plans using JMETER",
        "have good working knowledge of JMETER and load testing",
        "have more technical knowledge and skills about web testing"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Load Testing and JMETER basic concepts": [
          "JMETER introduction",
          "Load Testing introduction"
        ],
        "Web Technologies": [
          "Browser Request/Server Response, GET & POST requests",
          "Cookies basics",
          "View and edit cookies",
          "Browser Cache",
          "Web Proxy (Fiddler2)"
        ],
        "XML and XPATH": [
          "XML",
          "XPATH",
          "Find web elements using Firebug and Firepath"
        ],
        "Define user scenarios for the site": [
          "Introduction",
          "Identify the user scenarios",
          "Add details to the user scenarios",
          "Prioritize the user scenarios"
        ],
        "Convert the user scenarios in JMETER scripts": [
          "Introduction",
          "Add concurrent users and browser types to scripts",
          "Add delays between requests",
          "Add validations and define parameters for the JMETER scripts"
        ],
        "Implement the JMETER scripts": [
          "Introduction",
          "JMETER components",
          "Execution order of JMETER components",
          "Implement the 1st script in JMETER - Browse the results pages",
          "Implement the 2nd script - Change sort order on results page",
          "Implement the 3rd script - Change number of items on results page",
          "Implement the 5th script - Open the details page",
          "Debug JMETER scripts"
        ],
        "Run the load test and analyze its results": [
          "Introduction",
          "Set up the server performance monitoring",
          "Run the load test",
          "Analyze the load test results"
        ],
        "Conclusion": [
          "Final Notes"
        ],
        "Appendix 1 - JMETER Components Examples": [
          "Introduction",
          "HTTP Requests, Assertions, Listeners, CSV Data Set Config",
          "XPATH Assertions",
          "XPATH Extractor, Random Variable",
          "Regular Expression Extractor, Bean Shell Post Processor",
          "ForEach Controller",
          "BeanShell Pre-Processor And Post-Processor",
          "JMETER cache manager",
          "HTTP Cookie Manager and Cookie Injection",
          "Simulate the network bandwidth with JMETER properties"
        ]
      },
      "requirements": [
        "web manual testing",
        "basic knowledge of browsers",
        "basic knowledge of web technology (regular expressions, xpath)",
        "basic Java knowledge"
      ],
      "description": "Learn about JMETER while working on a real-life load testing project.\nThe course is suitable for testers that do not have load testing and JMETER knowledge.\n\n\nBuild skills and knowledge with this practical course for testers that want to learn more about load testing.\nJMETER is a free and open source load testing tool.\nIt it platform independent, has extensible architecture and great community support.\nIt can be used for testing web sites, web services, database servers and more.\n\n\nAdd load testing to your testing toolbox\nLearning about load testing with JMETER allows the tester to become more technical and be able to do much more than manual testing.\nLoad testing jobs are always available on the job market and it is often difficult to fill them due to a lack of specialized testers.\nLearning load testing with JMETER will expose you to technologies used in other testing types like test automation (regular expressions, XPATH, XML, HTTP requests).\n\n\nContent and Overview\nYou will learn in this course about\nJMETER basics\nLoad Testing basics\nJMETER components\nWeb Proxies\nDesign the load test scripts\nImplement the load test scripts in JMETER\nMonitor the load testing environment\nExecute the load test\nAnalyze results",
      "target_audience": [
        "manual testers that want to learn load testing",
        "testers that are interested in expanding their knowledge"
      ]
    },
    {
      "title": "Testes funcionais com Selenium WebDriver: Do básico ao GRID",
      "url": "https://www.udemy.com/course/testes-funcionais-com-selenium-webdriver/",
      "bio": "Desde o básico até criar um framework para rodar testes em paralelo via Selenium Grid e na nuvem com a Saucelabs.",
      "objectives": [
        "Criar um projeto de testes automatizados em JAVA para aplicações Web do ZERO.",
        "Utilizar o Selenium IDE, conhecendo suas limitações",
        "Criar testes automatizados utilizando o Selenium WebDriver",
        "Interagir com os elementos básicos dos formulários HTML",
        "Interagir com elementos mais complexos, como: Alerts, Frames e PopUps",
        "Organizar os códigos tornando-os mais legíveis, reusáveis e fáceis de manter",
        "Entender a forma de localizar elementos na tela e criar xpaths mais robustos",
        "Estratégias para sincronizar o teste com o fluxo da aplicação",
        "Criar um Framework para estruturar seus testes e garantir várias funcionalidades extras sem muito esforço",
        "Estratégias para fazer um gerenciamento das massas de dados utilizadas nos testes",
        "Executar os testes em paralelo (e os cuidados que devemos tomar para a bateria continuar funcionando)",
        "Executar os testes remotamente, em diversas máquinas (inclusive, de sistemas operacionais distintos), utilizando o Selenium GRID",
        "Executar os testes na nuvem, utilizando os servidores da Saucelabs"
      ],
      "course_content": {},
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA"
      ],
      "description": "Seja bem vindo ao curso de Testes Funcionais com Selenium WebDriver.\nNesse curso, irei te guiar passo a passo na criação de testes funcionais automatizados de aplicações Web. Não se preocupe, caso ainda seja um conceito novo para você, criaremos os testes desde o básico. Apesar das nossas implementações serem feitas em JAVA, podemos testar qualquer aplicação Web (HTML), independente da linguagem que ela fora criada.\nO curso é 100% prático, onde trarei problemas, situações e os erros mais comuns que ocorrem no dia-a-dia, assim poderemos discutir sobre formas de como atuar em cada caso, tentando levantar os prós e contras de cada estratégia disponível.\nO código de teste é tão importante quanto o código da aplicação, dessa forma, além das ferramentas e boas práticas, serão apresentadas técnicas e padrões que você pode utilizar para deixar o seu código mais enxuto e legível. Sem falar das manutenções dos testes que são tão constantes, pois bem, também tentaremos facilitar as manutenções necessárias, em alguns casos até poderemos reduzir também.\nA nossa ferramenta principal será o Selenium WebDriver (já na versão 3), mas também veremos o Selenium IDE, para criarmos testes sem a necessidade de escrever códigos. Selenium GRID, para executar os testes remotamente; JUnit, para estruturar nossos testes; e o Eclipse, como IDE de desenvolvimento.\nFoquei bastante em três pontos principais que são os maiores motivos de problemas nos testes funcionais: Localização de elementos, Sincronismo dos scripts e Massa de dados. Sobre eles, apresentarei alguns cenários e como podemos deixar nossos testes mais resilientes a tais instabilidades.\nDurante o curso, criaremos um conjunto de métodos que facilitarão a criação dos testes. Também criaremos um framework que poderá ser utilizado para testar qualquer outra aplicação web. Esse framework possui diversas funcionalidades nativas como:\nScreenshot ao final de cada teste;\nChaveamento sobre qual browser utilizar\nDSL herdada nos testes\nOrganização dos testes com PageObject\nExecução em GRID\nExecução na Nuvem\nNas fases iniciais do curso, usaremos uma página simples (Campo de Treinamento) para podermos forcar nos fundamentos do framework. Mais a frente, teremos um módulo exclusivo para testar uma aplicação real, trazendo alguns cenários importantes como autenticação e gerenciamento de massa de dados.\nMaterial validado ao longo de 7 anos de aulas presenciais em empresas e turmas de especialização.\nAo final desse curso, você terá uma boa base para desenvolver seus testes e poder executá-los em diversos browsers (Firefox, Chrome, Internet Explorer) e sistemas operacionais (Windows, Linux, Mac), de forma sequencial ou paralela, você quem escolhe.",
      "target_audience": [
        "Testadores que estão cansados de executar os mesmos scripts, manualmente, várias e várias vezes",
        "Testadores iniciantes interessados em aprender a automatizar testes funcionais",
        "Testadores que prezam pela qualidade, legibilidade e reúso dos seus códigos de testes",
        "Testadores que já possuem experiência na área podem ver algumas técnicas para deixar os testes mais resilientes a falhas"
      ]
    },
    {
      "title": "Selenium Grid - From Scratch - Deployment & Configuration",
      "url": "https://www.udemy.com/course/selenium-grid-from-scratch-deployment-configuration/",
      "bio": "selenium grid, automation, automation testing, devops, qa automation, selenium, web driver, json wire protocol, appium",
      "objectives": [
        "Setup, Deploy & Configure fully functional Selenium Grid including mobile emulators & mobile real deceives"
      ],
      "course_content": {},
      "requirements": [
        "basic command line skills, some coding skills (an advantage)"
      ],
      "description": "this short course was designed to aggregate - once and for all - the complete process of deploying selenium grid. all the small things, tricks, dependencies, gaps and so on, will be answered in this course. teaching you, step by step how to build a fully functional gird from scratch including all browsers, mobile web & mobile native applications (using appium) under a single grid.\n\n\nyou will also learn how to deploy android emulators (without android studio), setup environment variables, node-js, java, python, etc. to fully setup your gird.\n\n\nthis course is not development language dependent and it is relevant for web-driver based automation development regardless of the language or platforms used for development",
      "target_audience": [
        "QA Automation, DevOps, Automation Developers, Mobile Developers"
      ]
    },
    {
      "title": "Hands-On Automated Software Testing In Python (w/ unittest)",
      "url": "https://www.udemy.com/course/hands-on-software-testing-in-python-w-unittest-framework/",
      "bio": "An In-depth practical guide to automated unit and integration testing in Python with real-world case scenarios.",
      "objectives": [
        "Analyze existing code bases (& refactor them if needed), and design the needed test cases accordingly.",
        "Perform automated unit and integration tests on Procedural code and Object Oriented code.",
        "Learn how to perform Test Driven Development (TDD)",
        "Perform test coverage and run multiple tests simultaneously.",
        "Learn how to deal with boiler-plate code and pass-through methods/functions.",
        "Utilize Pdb (Interactive Python Debugger) on run-time to inspect different test cases.",
        "Learn how to effectively create mocks and patches, and when to do it based on various case scenarios,",
        "Know how to fake/sample real-world data.",
        "Gain a sneak-peak on best practices in OOA, OOD & OOP by implementing UML design schemes from scratch and write tests for the code base you created later on.",
        "Learn how to deal with files processing and operations (read, write, stdout functions, etc..)"
      ],
      "course_content": {
        "Welcome to the Course!": [
          "Introduction"
        ],
        "Prerequisites": [
          "Setting up the environment",
          "CLI (Command-Line-Interface): A mini Crash Course!",
          "Embedding Git-Bash terminal to VSC"
        ],
        "Diving In the testing realm!": [
          "[Article] What is Software Testing? Concept & Tools Needed",
          "What is Software Testing? Concept & Tools Needed"
        ],
        "Unit Testing for Procedural Programming": [
          "[Article] The Calculator Case Study",
          "[Use Case 1] Calculator"
        ],
        "Understanding and implementing TDD (Test Driven Development) on Procedural code": [
          "[Article] The FizzBuzz Case Study",
          "[Use Case 2] TDD w/ FizzBuzz"
        ],
        "Unit Testing for Object Oriented Programming (OOP)": [
          "[Article] The Player Class Case Study",
          "[Use Case 3] Player Class (Implementation & Unit-Testing w/Python debugger)"
        ],
        "Unit Testing AND Integration Testing for Object Oriented Programming (OOP)": [
          "[Article] The Student-Course Case Study",
          "[Use Case 4] Part 1: Student-Course (Design & Implementation )",
          "[Use Case 4] Part 2: Student-Course (Unit Testing Course Class)",
          "[Use Case 4] P3: Student-Course (Unit Testing Student w/ boiler-plate code)",
          "[Use Case 4] P4: Integration Testing Course Class (Student-Course)",
          "[Use Case 4] P5: Integration Testing Student Class (Student-Course)"
        ],
        "Coverage Testing & running multiple tests": [
          "Generating Test coverage reports and running multiple tests simultaneously"
        ],
        "Testing data handlers, file operations and stdout functions": [
          "[Article] The Files Handler Class Case Study",
          "[Use Case 5] Part 1: Files class Implementation (data handler)",
          "[Use Case 5] P2: Unit & Integration testing Files class"
        ]
      },
      "requirements": [
        "Fair background in Python is a must.",
        "Fair background in OOP in Python (specifically classes & object creation, classmethods, staticmethods, getters & setters).",
        "Fair knowledge in UML class diagrams and it's relationships. (association, aggregation, composition)",
        "Fair knowledge of Jupyter Notebooks."
      ],
      "description": "Looking for a beginner-friendly, 'getting-started' guide, that happens to ALSO be as comprehensive as possible with rich real-world case scenarios that COMPLETELY covers the all aspects, the ins-and-outs, the nits and grits of Unit and Integration testing Python? Yes dear, you are at the right place.\n\n\nWelcome to \"Hands-On Software Testing in Python\" !\nIf you are a freelancer, a college student, or a software engineer, at some point it's just inevitable to not run atleast some 'exploratory testing' scripts to inspect and test various edge cases, just to make sure how solid your work is, but things starts to go downhill when a certain component breaks down, it's either you go into a refactoring purgatory, or you start the project again from scratch! In this course I will show you multiple case scenarios, where we will have existing code bases, as well as mini-projects that we will build from scratch in a code-along fashion, what matters the most is that we will follow a systematic procedure to analyze and design our test cases, for each case scenario, and then implement them.\n\n\nMy name is Ahmed Alhallag, I'm a Software Engineer and an Assistant Lecturer. I will take you through an intensive journey starting with the theoretical concepts behind Software Testing, up to the inner-most parts where you will learn the best practices in approaching any project, designed and implemented in any paradigm (Procedural & OOP are covered in this course), no matter how large or big it might seem from the surface.\n\n\nWriting code isn't supposed to be the main point of focus for you as a software developer, especially code that just 'works' for a current point of time. A bunch of other factors needs to be taken into consideration such as:\nQuality of modeling:\nYou might think: \"alright, I have this task to implement, so let's just wing it!\", and you immediately hop on to your favorite IDE and starting coding. For certain tasks, maybe this would be the time-efficient thing to do, for larger one, this will eventually consume your time on the long run, because you will keep going back in forth in:\nencapsulating this block of code, and refactoring that block of code, saving your sensitive data in a .env file after it was thrown away at the top of your script when you started working, serializing this output, and persisting that output into a json file instead of a basic txt file, creating a middleware, an API interface or a certain controller that you suddenly found out that you need to perform some action, implement a data handler because the code became so redundant and intertwined, changing up the entire set of data structures used, which as a result, changes the entire processing logic written ahead of time as well!\nSee, all of the previous scenarios, are just daily events that we go through in our development journey, if you haven't faced any of them yet, that's good news! We will briefly cover a systematic way to implement our code via analysis (OOA) and design (OOD using UML), with the help of mini-projects that we will build together!\nThis is obviously not the focus of this course, so we won't be spending much time on that part, we will take we need to get to have a clean code base later on when we implement.\nQuality of code:\nAfter the brief concepts on conceptual designs and modeling, we will follow the guides (class diagrams) we created to implement the core system we will test bit by bit later on. We will be using Object Oriented Programming (OOP) for the majority of our implementations.\nYou might ask yourself, why would we spend THIS much time at the implementation of every use case? why not just take the code as it is and start writing test cases?\nThat's a valid point, but hear me out: I believe that if your want to know the ins and outs of a system, whether you are performing a defensive/offensive security measure, designing a UI/UX, implementing a database layer, or executing some test cases, you need to be FULLY and THOROUGHLY aware of the system you are working on.\nFor experienced developers, they can definitely pick the pace off at any point in time and start implementing their  test cases, but for anyone who has not written a lot of test cases before, or at the start of their journey, this would be a hassle! not knowing what exactly that needs to be tested, or even not knowing how or where to start!\nThis is the basis of the approach I'm following in most of the given case scenarios, where basically we will build the end-system we would want to thoroughly test from scratch!\nAfter having a brief on best practices in code/system modeling, and implementing these systems manually, we will dive deep into testing, where:\nWe will mainly use the unittest framework  in Python, which is a built-in easy to use module to get started as quickly as possible.\nWe will start implementing the mini-project in a Procedural manner (using the most basic modularization approach; functions).\nWe will then how to design and implement Unit Tests for our procedural code, by setting up our terms of agreement on what exactly should be defined as a \"Unit\", as well as configuring of new project hierarchy (tree of folders).\nWe will have a walkthrough into one of the most common approaches used for testing; Test Driven Development, or TDD for short.\nWe will then have a Paradigm shift, where we travel to the OOP realm. I'm assuming you have a fair background in OOP,  a brief recap will be given. (watch the promotional/intro video)\nWe will write Unit Tests for Object Oriented (classes) that we have created, and an update to our \"unit\" definition will take place.\nWe will see how useful your knowledge of the Command Line Interface (CLI) can be, by using your terminal session to inspect and debug your unit tests in real-time using the Python Interactive Debugger.\nWe will have real data, and we will learn how to sample them and/or fake them when needed\nWe will design and implement interrelated modules, we will also design and implement the relationships between them. And will know that by doing so, another different added layer/type of testing needs to be performed, which is Integration Testing, to make sure that integrated components, work as intended.\nWe will see a lot of coupled dependencies, which will lead us to isolate them completely using \"Mocking\" to perform our unit tests.\nWe will learn how to deal with intermediary or pass-through code, as it sometimes becomes unclear to whether you should test them or not.\nWe will learn how to generate test coverage reports (in HTML) and how to run multiple (unit and integration) tests simultaneously.\nFinally, we will have an intensive walkthrough on files handlers and operations (such read, write, etc..) as well as the common stdout and stdout functions (such as print, input) and how to exactly test them for full coverage.",
      "target_audience": [
        "Python developers who have some background in Python and want to dive in the software testing world.",
        "CS/CE students in their first or second year who just got to read about software testing and TDD."
      ]
    },
    {
      "title": "An Intro to Software Testing: Ultimate Guide for Testers",
      "url": "https://www.udemy.com/course/software-testing-guide/",
      "bio": "Learn software testing basics. Introduction to the process, bugs, different lifecycles, test strategy & planning.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge of IT/Software would be helpful."
      ],
      "description": "Introduction\nHello and welcome, this course introduces a practical approach to testing software. It bridges the gap between theoretical knowledge and real world implementation. This article helps you gain an insight to Software Testing - understand technical aspects and the processes followed in a real working environment.\nWho will benefit?\nBeginners. For those of you who wish to mould your theoretical software engineering knowledge into practical approach to working in the real world.\nThose who wish to take up Software Testing as a profession.\nDevelopers! This is an era where you need to be an “All rounder”. It is advantageous for developers to posses testing capabilities to test the application before hand. This will help reduce overhead on the testing team.\nAlready a Tester! You can refresh all your testing basics and techniques and gear up for Certifications in Software Testing\nAn earnest suggestion: No matter which profession you choose, it is advisable that you posses the following skills:\n-       Good communication skills – oratory and writing\n-       Fluency in English\n-       Good Typing skills\nBy the time you finish reading this article, you will be aware of all the techniques and processes that improves your efficiency, skills and confidence to jump start into the field of Software Testing.\nFun Facts:\nFollowing are some facts that can help you gain a better insight into the realities of Software Engineering.\nThe best programmers are up to 28 times better than the worst programmers.\nNew tools/techniques cause an initial LOSS of productivity/quality.\nThe answer to a feasibility study is almost always “yes”.\nA May 2002 report prepared for the National Institute of Standards and Technologies (NIST)(1) estimates the annual cost of software defects in the United States as $59.5 billion.\nReusable components are three times as hard to build\nFor every 25% increase in problem complexity, there is a 100% increase in solution\ncomplexity.\n80% of software work is intellectual. A fair amount of it is creative. Little of it is clerical.\nRequirements errors are the most expensive to fix during production.\nMissing requirements are the hardest requirement errors to correct.\nError-removal is the most time-consuming phase of the life cycle.\nSoftware is usually tested at best at the 55-60% (branch) coverage level.\n100% coverage is still far from enough.\nRigorous inspections can remove up to 90% of errors before the first test case is run.\nMaintenance typically consumes 40-80% of software costs. It is probably the most important life cycle phase of software.\nEnhancements represent roughly 60% of maintenance costs.\nThere is no single best approach to software error removal.",
      "target_audience": [
        "Beginners. For those of you who wish to mould your theoretical software engineering knowledge into practical approach to working in the real world.",
        "Developers! This is an era where you need to be an “All rounder”. It is advantageous for developers to posses testing capabilities to test the application before hand. This will help reduce overhead on the testing team.",
        "Already a Tester! You can refresh all your testing basics and techniques and gear up for Certifications in Software Testing"
      ]
    },
    {
      "title": "Software Testing Basics",
      "url": "https://www.udemy.com/course/learn-software-testing-quality-assurance-from-scratch-pna/",
      "bio": "Basics of Software Testing",
      "objectives": [
        "Learn to apply the testing strategies and methodologies in real world projects.",
        "To understand the test management strategies and tools for testing.",
        "A keen awareness on the open problems in software testing and maintenance.",
        "To explain quality assurance and various tools used in quality management.",
        "To learn in detail about various quality assurance models.",
        "To understand the audit and assessment procedures to achieve quality."
      ],
      "course_content": {
        "Module 1 - Software Testing Basics": [
          "Testing as an Engineering Activity, Role of Process in Software Quality, Testing",
          "Validation & Verification, Definitions of Testing, Some Other Basic Definitions",
          "Software Testing Principles, Tester’s Role in Software Development Organization",
          "Origins of Defects, Defect Classes and Repository, Test Design, Requirements",
          "Coding and Testing Defect Class, Tester Support for Developing Defect Repository",
          "Quiz Assignment"
        ]
      },
      "requirements": [
        "Software Engineering"
      ],
      "description": "To learn this course, learners must know the basics of software engineering. In this course, learners will Learn to apply the testing strategies and methodologies in projects, understand test management strategies and tools for testing, awareness on the open problems in software testing and maintenance, explain quality assurance and various tools used in quality management, learn in detail about various quality assurance models, understand the audit and assessment procedures to achieve quality. This course is going to contain Testing as an engineering activity, Role of process in software quality, Testing as a process, Basic definitions, Software testing principles, The tester’s role in a software development organization, Origins of defects, Defect classes. After successful completion of this course, learners will be able to test the software by applying testing techniques to deliver a product free from bugs, investigate the scenario and to select the proper testing technique, explore the test automation concepts and tools and estimation of cost, schedule based on standard metrics, understand how to detect, classify, prevent and remove defects, choose appropriate quality assurance models and develop quality, to conduct formal inspections, record and evaluate results of inspections. This course will give a clear idea about the software testing.",
      "target_audience": [
        "Final Year IT Engineering Students of 2015 Pattern from Savitribai Phule Pune University"
      ]
    },
    {
      "title": "Software Testing Beginner Course",
      "url": "https://www.udemy.com/course/software-testing-beginer-course/",
      "bio": "Java Development Introduction",
      "objectives": [
        "This course is designed specifically for students and professionals who want to learn Java to land their dream job.",
        "Core Java + Hand-On Programming",
        "A basic project to test your knowledge.",
        "You will get complete and correct instruction on the do's and don'ts you need as a beginner and will be able to do it without any extra effort"
      ],
      "course_content": {},
      "requirements": [
        "It is sufficient to be a basic computer user."
      ],
      "description": "Course Description\n\n\nJava is a class-based, object-oriented programming language that is designed to be as implementation-less as possible.\n\n\nBasically, we will learn Java from beginning to advanced level along with hands-on programming.\n\n\nThis course consists of all the topics and chapters in a very well organized manner and our videos are industry reviewed which makes you industry ready.\nIntroductioni\n\n\nWhat is Java + Setting up the environment + Hello World + Applications., History of Java, Properties of Java, | Algoritm  | Java |JVM, JRE, JD, MyFirstProgram, Variables | DataTypes | String, Arithmetic Operators, Java variables, Data types, Arithmetic Operators, Cast Operators, Unary Assigment Relational, Logical Operator, If Statements\n\n\nAim of the course\n\n\nThis course is specifically designed for students and professionals who want to learn Java to find their dream job.\n\n\nOur Java course is industry-approved, which means it meets requirements that you should have for Java, especially if you are looking for career goals.\n\n\nOur main goal is to make it a breeze for you.\n\n\nWho can take this course?\n\n\nThis course is aimed at both novice and professional programmers. We have covered every single detail from beginners to advanced. I guarantee this is one of the best courses you can ever buy and it is worth every penny.\n\n\nOur course prices are so affordable that you don't even have to ask your parents to buy this course for you, you can buy it yourself with your pocket money. And you have lifetime access to our courses.\n\n\nPrerequisite knowledge\n\n\nIf you have prior knowledge, you can learn this course a little easier and faster. But you don't actually need to have any prior knowledge to take this course.\n\n\nThis course is so simple and concise that even a ten-year-old child can take this course and become a super coder.",
      "target_audience": [
        "The training has been prepared with students who have no software knowledge in mind."
      ]
    },
    {
      "title": "Certified Tester Level Agile Tester (CTFL-AT) exam prep 2024",
      "url": "https://www.udemy.com/course/certified-tester-level-agile-tester-ctfl-at-exam-prep-2024/",
      "bio": "100% Pass Rate : Preparation for your ISTQB exam certification: Certified Tester Level Agile Tester (CTFL-AT)",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Certified Tester Foundation Level Agile Tester (CTFL-AT) Exam Preparation\nAre you aiming to become a Certified Tester Foundation Level Agile Tester (CTFL-AT)? This comprehensive exam preparation course is designed to equip you with all the knowledge and skills you need to pass the CTFL-AT certification exam with confidence.\nWhat You Will Learn:\nAgile Principles and Practices: Understand the core principles and methodologies of Agile, including Scrum, Kanban, and Lean, and how they are applied in software development.\nAgile Testing Techniques: Master essential Agile testing techniques such as Test-Driven Development (TDD), Behavior-Driven Development (BDD), and Acceptance Test-Driven Development (ATDD).\nEffective Team Collaboration: Learn how to effectively collaborate within Agile teams, focusing on roles, responsibilities, communication strategies, and continuous improvement practices.\nExam Readiness: Prepare thoroughly for the CTFL-AT certification exam with practice questions, detailed answers, and expert exam tips.\nCourse Features:\nPractice Questions: Extensive sets of practice questions designed to mimic the format and difficulty of the actual CTFL-AT exam.\nDetailed Explanations: In-depth explanations for each practice question to help you understand the concepts and reasoning behind the correct answers.\nInteractive Discussions: Engage in discussions with fellow learners and instructors to clarify doubts and enhance your understanding.\nExam Strategies: Proven strategies and tips to help you tackle the exam with confidence and efficiency.\nWho This Course is For:\nAspiring Agile Testers: Anyone looking to start a career in Agile testing or seeking to enhance their knowledge and skills in Agile methodologies.\nCurrent Testers and QA Professionals: Professionals in software testing and quality assurance roles who want to validate their expertise with a globally recognized certification.\nProject Managers and Developers: Individuals involved in Agile projects who wish to deepen their understanding of Agile testing practices.\nPrerequisites:\nBasic Understanding of Software Development: A general knowledge of software development processes and practices is helpful.\nFamiliarity with Testing Concepts: Basic knowledge of software testing principles and methodologies will be beneficial.\nInterest in Agile Methodologies: An interest in learning about Agile practices and principles will enhance the learning experience.\nNo specific tools are required for this course; all necessary materials and resources will be provided.\nJoin us in this course and take the next step towards achieving your CTFL-AT certification and advancing your career in Agile testing!",
      "target_audience": [
        "The Foundation Level Agile Tester certification is designed for professionals who are working within Agile environments. It is also for professionals who are planning to start implementing Agile methods in the near future, or are working within organizations that plan to do so."
      ]
    },
    {
      "title": "500+ Automation Testing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/automation-testing-interview-questions/",
      "bio": "Automation Testing Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Automation Testing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to \"Mastering Automation Testing,\" an exhaustive Udemy practice test course designed meticulously to prepare you for your next job interview in the field of Automation Testing. This course is an unparalleled resource for those aspiring to excel in automation testing roles, offering a series of detailed practice tests based on six key sections, each with ten specialized subtopics.\nSection 1: Fundamentals of Automation Testing\nBasics of Automation Testing: Explore the core principles, understanding the essence of automation testing.\nTools and Frameworks: Familiarize yourself with various tools and frameworks, crucial for any automation tester.\nSelecting Test Cases for Automation: Learn the strategies to choose the right test cases for automation.\nScripting Languages: Delve into popular scripting languages used in automation testing.\nAutomation Testing Life Cycle: Understand the complete life cycle of automation testing from conception to execution.\nBenefits and Challenges: Gain insight into the advantages and potential challenges faced in automation testing.\nAutomated vs Manual Testing: Compare and contrast automated and manual testing methodologies.\nUnderstanding Test Environment: Grasp the nuances of setting up and managing test environments.\nTest Automation Strategy: Learn about developing effective automation strategies.\nTest Data Management: Explore the importance and methods of managing test data efficiently.\nSection 2: Automation Testing Tools\nSelenium: Dive deep into Selenium, its features, and capabilities.\nQTP/UFT: Learn about Quick Test Professional/Unified Functional Testing.\nApache JMeter: Understand JMeter's role in performance testing.\nTestComplete: Explore the functionalities of TestComplete.\nCucumber: Get acquainted with BDD approach using Cucumber.\nSoapUI: Delve into testing web services with SoapUI.\nAppium: Explore mobile application testing through Appium.\nPostman: Understand API testing with Postman.\nRobot Framework: Learn about keyword-driven testing with Robot Framework.\nKatalon Studio: Understand how Katalon Studio aids in integrations and customizations.\nSection 3: Frameworks and Methodologies\nPage Object Model (POM): Understand the POM framework in depth.\nKeyword Driven Testing Framework: Explore the workings of keyword-driven testing.\nData-Driven Testing Framework: Learn about the data-driven approach.\nHybrid Testing Framework: Dive into the hybrid framework and its applications.\nBehavior Driven Development (BDD) Framework: Grasp the concepts of BDD.\nModel-Based Testing Approach: Understand the model-based testing methodology.\nTest-Driven Development (TDD): Learn the TDD approach.\nContinuous Integration and Testing: Explore CI in the context of testing.\nModular Testing Framework: Understand modular testing techniques.\nAgile Methodology: Learn how Agile impacts automation testing.\nSection 4: Scripting and Programming in Automation Testing\nBasics of Scripting: Learn the fundamentals of scripting for automation.\nJava Programming for Selenium: Explore how Java is used with Selenium.\nPython Scripts: Understand Python's role in automation testing.\nC# and .NET: Learn about C# and .NET in test automation.\nJavaScript for Web Testing: Delve into using JavaScript for automation.\nSQL for Database Testing: Understand SQL's importance in database testing.\nShell Scripting: Explore shell scripting in automation testing.\nUtilizing APIs in Test Scripts: Learn to integrate APIs in test scripts.\nDebugging and Error Handling: Master debugging and error handling in scripts.\nCode Optimization: Learn techniques for optimizing test code.\nSection 5: Advanced Topics in Automation Testing\nCross-Browser Testing: Learn about strategies for effective cross-browser testing.\nMobile Automation Testing: Explore advanced concepts in mobile testing.\nPerformance and Load Testing: Understand the essentials of performance testing.\nSecurity Testing: Learn about incorporating security measures in testing.\nAI and Machine Learning: Explore the use of AI and ML in testing.\nCloud-Based Testing: Understand testing in the cloud environment.\nDevOps Integration: Learn how automation testing integrates with DevOps.\nTest Reporting and Analytics: Understand the importance of reporting and analytics.\nBig Data and Analytics Testing: Explore testing in big data scenarios.\nAccessibility Testing: Learn about ensuring accessibility in automated testing.\nSection 6: Best Practices and Case Studies\nWriting Automation Scripts: Learn best practices for scriptwriting.\nTest Data Management: Understand effective test data management.\nQuality Assurance: Learn about QA processes in automation testing.\nSuccessful Automation Projects: Analyze case studies of successful projects.\nRisk Management: Learn to manage risks in automation testing.\nCost-Benefit Analysis: Understand the economics of test automation.\nMaintaining Test Scripts: Learn about maintaining and updating scripts.\nTeam Collaboration: Understand the importance of teamwork.\nTool Selection Criteria: Learn how to choose the right tools.\nFuture Trends: Stay updated with the latest trends in automation testing.\nRegular Updates to Questions\nAt \"Mastering Automation Testing,\" we understand the dynamic nature of the field and the importance of staying current. Therefore, we regularly update our practice test questions to reflect the latest trends, tools, and methodologies in automation testing. This ensures that you are always preparing with the most relevant and up-to-date material, giving you an edge in your interview preparations.\nSample Practice Test Questions\n1. What is the primary advantage of using Selenium for automation testing?\nA) Cross-browser compatibility\nB) Requires extensive coding knowledge\nC) Limited to web-based applications only\nD) Supports only Java for scripting\nCorrect Answer: A) Cross-browser compatibility\nExplanation: Selenium is highly favored for its cross-browser compatibility. It supports various browsers like Chrome, Firefox, IE, and Safari, enabling testers to run test scripts across different browsers seamlessly. This feature is crucial for ensuring that web applications function consistently across all platforms. Unlike option B, Selenium does not require extensive coding knowledge, as it provides a user-friendly interface for writing and executing test scripts. While Selenium is predominantly used for web-based applications, stating that it's limited to them (option C) is inaccurate as it can be integrated with other tools for broader testing scopes. Option D is incorrect as Selenium supports multiple programming languages, including Java, C#, Python, and Ruby.\n2. In the context of automation testing, what does 'Data-Driven Framework' primarily refer to?\nA) A framework that relies on hard-coded data within the test scripts.\nB) A testing methodology that uses external data sources for test inputs.\nC) A framework that is driven by user data collected from the production environment.\nD) A methodology that prioritizes data security in testing processes.\nCorrect Answer: B) A testing methodology that uses external data sources for test inputs.\nExplanation: The Data-Driven Framework in automation testing refers to an approach where test data is separated from the test scripts and is sourced from external data sources like Excel files, CSV files, or databases. This allows for easy modification of test data without altering the test scripts, making the tests more flexible and reusable. Option A is incorrect as hard-coding data is contrary to the principles of the data-driven framework. Option C, while innovative, does not accurately represent the concept of the data-driven framework. Option D misleads by suggesting a focus on data security, which, while important, is not the primary focus of this framework.\n3. Which tool is best suited for performance testing of web applications?\nA) Selenium\nB) Apache JMeter\nC) Cucumber\nD) Appium\nCorrect Answer: B) Apache JMeter\nExplanation: Apache JMeter is specifically designed for performance testing and is widely used for testing web applications. It measures the performance and load capacity of web applications by simulating a variety of scenarios and analyzing the response of the application under different load types. Selenium (Option A) is primarily used for functional and regression testing, not performance testing. Cucumber (Option C) is a BDD tool and is not specialized for performance testing. Appium (Option D) is focused on mobile application testing and does not primarily cater to performance testing of web applications.\n4. In Agile methodology, what role does automation testing play during the development cycle?\nA) It is only used during the final stage of the release.\nB) It is integrated continuously throughout the development cycle.\nC) It replaces the need for manual testing completely.\nD) It is not applicable in Agile methodology.\nCorrect Answer: B) It is integrated continuously throughout the development cycle.\nExplanation: In Agile methodology, automation testing plays a crucial role by being integrated continuously throughout the development cycle. This integration allows for immediate and ongoing feedback on the current state of the software, enabling quick identification and fixing of defects. This approach aligns with Agile's emphasis on continuous improvement and adaptability. Option A is incorrect as Agile methodology does not confine automation testing to the final stage. Option C is a common misconception; while automation enhances testing efficiency, it does not eliminate the need for manual testing. Option D is incorrect as Agile methodology very much accommodates and benefits from automation testing.\n5. What is the primary purpose of using a tool like SoapUI in automation testing?\nA) To automate graphical user interface testing.\nB) For performance testing of desktop applications.\nC) To conduct automated tests on web services.\nD) For database testing with SQL queries.\nCorrect Answer: C) To conduct automated tests on web services.\nExplanation: SoapUI is a tool specifically designed for testing web services and APIs, making it an essential component in the toolkit of a tester who works with web services. It allows for the creation, execution, and validation of SOAP and RESTful web services, providing robust support for testing the functionality, reliability, performance, and security of these services. Option A is incorrect as SoapUI is not intended for GUI testing. Option B, while highlighting performance testing, inaccurately associates it with desktop applications, not SoapUI's specialty. Option D is misleading because, although SoapUI can interact with databases, its primary purpose is not to conduct database testing using SQL queries.\n\n\nEnroll in \"Mastering Automation Testing\" today and take a significant step towards achieving your career goals in the dynamic field of Automation Testing. This course is not just a learning journey; it's your pathway to mastering interview questions and standing out in the competitive world of automation testing.",
      "target_audience": [
        "Aspiring Automation Testers: Individuals looking to begin a career in automation testing will find this course an ideal starting point. It covers the fundamentals of automation testing, tools, and frameworks, making it perfect for those who are new to the field.",
        "Manual Testers Seeking to Upgrade Skills: Manual testers who wish to transition into automation testing will benefit greatly from this course. It offers a comprehensive understanding of automation tools and scripting, which are crucial skills for making this transition.",
        "Quality Assurance Professionals: QA professionals who want to deepen their understanding of automation testing strategies, advanced testing tools, and methodologies will find this course immensely valuable. It will help them to stay updated with the latest trends and techniques in the industry.",
        "Software Developers: Developers interested in learning about test automation to improve the quality of their code and to better integrate testing into the development process will gain practical insights and skills from this course.",
        "Students and Recent Graduates: Computer science students or recent graduates looking to enhance their employability in the tech industry can use this course to gain a competitive edge. The practical, interview-focused approach makes it especially useful for job seekers.",
        "Tech Enthusiasts and Career Changers: Individuals interested in technology and looking to switch to a career in tech will find this course a comprehensive guide to entering the field of automation testing."
      ]
    },
    {
      "title": "Test automation framework architecture",
      "url": "https://www.udemy.com/course/writing-test-automation-framework/",
      "bio": "Bulletproof and universal Test Automation Framework architecture pattern",
      "objectives": [
        "Understand Test Automation Framework concepts",
        "Be able to use Selenide to interact with Web UI",
        "Understand N-tier (Layered) architecture pattern",
        "Be able to write basic automation framework from scratch"
      ],
      "course_content": {
        "Introduction": [
          "Introducing course"
        ],
        "What is Test Automation Framework": [
          "What is test automation framework",
          "Disadvantages of using test automation framework",
          "Advantages of using test automation framework",
          "Section Quiz"
        ],
        "Test automation architecture": [
          "What is architecture",
          "Patterns in test automation",
          "No architecture framework (no framework)",
          "Layered architecture",
          "Layered test automation framework",
          "Test automation architecture quizz"
        ],
        "Implementating test automation framework": [
          "Sut introduction",
          "Planning implementation",
          "Using tests to drive framework design",
          "Writing test methods",
          "Why use interfaces between layers?",
          "Writing test methods - part 2",
          "Implement 5-10 test methods in the your programming language of choice",
          "Quiz 3"
        ],
        "Implementating test automation framework - core layer": [
          "Next step - core layer",
          "Designing Page Object interface",
          "Design page object - add methods required to implement tests from assignment 1",
          "Implementing Page Object Interface - part 1",
          "Page object implementation",
          "Implementing Page Object Interface - part 2",
          "Error Handling",
          "Working with API",
          "Adapter or Page Object?",
          "Quiz 4"
        ],
        "Implementating test automation framework - business layer": [
          "Implementing business layer",
          "SImple business steps implementation",
          "Composite steps",
          "Business steps implementation"
        ],
        "Conclusion": [
          "Essential topics we didn't cover",
          "Alternatives to 3-layer framework",
          "Course summary",
          "Quiz 5"
        ]
      },
      "requirements": [
        "You need to be able to read java code",
        "You need to have basic knowledge of HTML",
        "You need to be able to write code in any programming language",
        "You need to have basic understanding of Selenium"
      ],
      "description": "Learn how to write test automation framework for any system - step by step.\n\n\nMany test automation solutions are written by less experienced developers, and, as the result, are not structured well, hindering test automation progress. But there's one very simple, yet effective way to structure test automation framework - 3-layer framework pattern. This pattern will allow you to write test automation framework for any software system (Web UI, Rest API, Desktop, etc) while minimizing maintenance cost.\n\n\nMy name is Alexander Pushkarev, I am Senior Software Engineer. I work in IT from about 2008, and 7 years of my experience I worked as test automation specialist, leading teams and creating test automation from scratch for legacy and green-field projects. I had written several different frameworks and I combined my architecture knowledge acquired during my development work into what I call \"3-layer framework\" - which is the focus of this course.\n\n\nI use Java for coding examples, but the course itself isn't focused on any programming language, so if you use Python, .Net or JavaScript I am sure that 90% of the course material will be relevant.\n\n\nWhat's inside:\nWhat is test automation framework?\nWhat is architecture?\nWhat design patterns are most commonly used in test automation?\nLayered pattern - the way it applied to test automation\nStep-by-step framework implementation example",
      "target_audience": [
        "Junior Test Automation Engineers",
        "Manual Testers",
        "Junior Developers"
      ]
    },
    {
      "title": "Game QA/Testing Short Course",
      "url": "https://www.udemy.com/course/game-qatesting-short-course/",
      "bio": "Complete short course for Game QA/Game Testing",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Agenda of the Course"
        ],
        "Learning the Concepts": [
          "QA in General",
          "Game Components Breakdown"
        ],
        "Testing Types & QA Process": [
          "Game Testing Types",
          "QA Process"
        ],
        "Tips & Conclusion": [
          "Tips & Tricks",
          "Conclusion"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "This course is a conference level detailed short course, for complete coverage of Game Testing and Game QA details. Whether you are a total beginner, or an experienced tester in the field of game development, this course is aptly suitable for you to enhance your skill set to another level.",
      "target_audience": [
        "Anybody interested in becoming a Game Tester"
      ]
    },
    {
      "title": "Testare manuala si automata (Curs QA)",
      "url": "https://www.udemy.com/course/testare-manuala-si-automata-curs-qa/",
      "bio": "Curs Bestseller ( 4.8★ ) - Invata testarea software manuala si automata pentru un viitor job in IT in limba Romana.",
      "objectives": [
        "Ce este si de ce avem nevoie de testare software",
        "Ce este si cum testam un API",
        "Cum se scrie un test case si un bug report",
        "Ce este si cum folosim GIT",
        "Cum facem estimari",
        "Cum pregatim un portofoliu si un CV"
      ],
      "course_content": {
        "Introducere in testarea software": [
          "Introducere in testarea software",
          "Atributiile unui QA",
          "Metodologia Agile",
          "Despre estimari (Planning Poker)",
          "Cum se scrie un Test Case",
          "Cum se scrie un Bug Report",
          "Tehnici de testare",
          "Notiuni de testare a aplicatiilor mobile",
          "Test grila despre notiunile de testare"
        ],
        "Versionare folosind GIT": [
          "Tehnologia GIT",
          "Test grila GIT"
        ],
        "Testare API": [
          "Teorie - Ce este un API",
          "Testare API folosind Postman (REST API)",
          "Testare API folosind Postman (GraphQL)"
        ],
        "Testare Automata": [
          "Bazele programarii 1",
          "Bazele programarii 2",
          "Automatizare cu Cypress 1",
          "Automatizare cu Cypress 2",
          "Automatizare cu Cypress 3",
          "(Optional) Automatizare cu WebdriverIO",
          "(Optional) Testarea performantei cu jMeter",
          "Inteligenta Artificiala (AI) in Testarea Software"
        ],
        "Gasirea unui job in testare": [
          "Portofoliul si CV-ul",
          "Interviul"
        ]
      },
      "requirements": [
        "Cunostinte medii de limba Engleza",
        "Acces la Internet",
        "Un laptop sau desktop cu Windows (64bit) / iOS"
      ],
      "description": "Acest curs a ajutat o multime de persoane din domenii non-it (marketing, contabilitate, call center, secretariat, manufactura etc) si fara studii de specialitate sa se angajeze pe pozitii de QA (Software Tester) atat in Romania cat si in strainatate (remote).\nUnul dintre cele mai populare joburi din IT este acela de QA Engineer (Quality Assurance Engineer). Persoana care ocupa aceasta pozitie se ocupa de asigurarea calitatii unui produs software de la inceput si pana in faza de mentenanta. Jobul este unul tehnic, in cadrul echipei de dezvoltare.\nCursul contine si o serie de lectii care te vor invatat despre tehnologia GIT si modul in care poti sa o folosesti. Aceasta tehnologie este folosita pe toate nivelele in IT deci consider ca ti-ar oferi si tie un plus atat in CV cat si in viitoarea cariera.\nLa partea de automatizare, pe langa lectiile in care folosim CypressJS ai si o resursa externa cu un tutorial video realizat de mine in care folosesc WebDriverIO. Aceasta parte e optionala si adauga inca 94 de minute de continut la cel disponibil in curs.\nSpre finalul acestui curs am adaugat cateva modele de CV si un ebook cu sfaturi care te vor ajuta sa iti te pregatesti pentru viitoarele interviuri.\nCu ce ma ajuta cursul?\nDupa parcurgerea acestui curs vei invata:\nCe presupune meseria de QA\nCe sunt si de ce avem nevoie de estimari\nSa cauti buguri si as scrii rapoarte in care sa le documentezi\nSa scrii test cases\nCe este si cum se foloseste GIT\nCe este si cum testezi un API\nSa scrii teste automate folosind CypressJS\nSa pregatesti un portofoliu si un CV bun\nCum sa folosesti AI-ul pentru a te ajuta in munca de zi cu zi",
      "target_audience": [
        "Orice persoana doreste un job in IT"
      ]
    },
    {
      "title": "Katalon Studio - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/katalon-studio-step-by-step-for-beginners/",
      "bio": "Learn automation testing with Katalon Studio from scratch",
      "objectives": [],
      "course_content": {
        "Introduction - What is Katalon Studio": [
          "What is Katalon Studio"
        ],
        "Download, Install and Get Started": [
          "How to install Katalon Studio",
          "Start and Explore GUI of Katalon Studio"
        ],
        "Create your First Test": [
          "How to create First Automation Test",
          "How to Record and Replay",
          "How to create test in Manual Mode",
          "How to create test in Script Mode"
        ],
        "Create and Run Test Suite": [
          "How to create and run Test Suite",
          "Test Suite Collection - How to run Test Suites in Parallel"
        ],
        "Excel | CSV | Files": [
          "How to get data from Excel"
        ],
        "Results and Reporting": [
          "Test Execution Reports",
          "Basic Reports plugin",
          "How to Email Results",
          "How to use Katalon Analytics Step-by-Step"
        ],
        "JENKINS and CommandLine execution": [
          "How to run from Command Line (Console)",
          "Integration with JENKINS - CI",
          "Katalon Jenkins Plugin"
        ],
        "Integration with GIT": [
          "Integration with GIT",
          "JENKINS and GIT integration"
        ],
        "GIT JENKINS LINUX": [
          "How to run Katalon Studio tests on Linux using Git & Jenkins"
        ],
        "API Testing": [
          "How to do API testing with Katalon",
          "API Chaining | SOAP - XML | How to send value from one API to other",
          "API Chaining | REST - JSON | How to send value from one API to other"
        ]
      },
      "requirements": [
        "No mandatory pre existing knowledge is required",
        "Basic knowledge on software testing will help"
      ],
      "description": "This course is created for complete beginners. If you do not have any programming experience and want to learn test automation, this course is for you. Very basic step by step videos to guide you from scratch.\nIn this session we will start from very basics of Katalon Studio.\nUnderstand what is Katalon Studio\nHow to Download and Install\nHow to create First Automation Test\nHow to create Reports\nHow to integrate with GIT and JENKINS\nLet's Get Started...",
      "target_audience": [
        "Anyone who wants to learn Katalon Studio with step by step examples",
        "Anyone who wants to learn test automation in an easy way",
        "Anyone who wants to do Test Automation without programming or coding experience"
      ]
    },
    {
      "title": "Learn Manual QA Engineering From Scratch",
      "url": "https://www.udemy.com/course/learn-manual-qa-engineering-from-scratch/",
      "bio": "Learn The Software Testing Skillset",
      "objectives": [
        "Think like a manual QA Engineer",
        "Create testing documentation including test plans, test cases, and bug reports",
        "Create projects for resume",
        "Interview prep",
        "SQL Tables and Databases"
      ],
      "course_content": {
        "Module 1 Introduction To Software Testing": [
          "What Is Software Testing",
          "Manual Vs Automation",
          "Career Paths",
          "Jobs"
        ],
        "Module 2 Fundamentals Of Software Testing": [
          "Fundamentals Of Software Testing",
          "Software Testing Life Cyce",
          "Methodologies"
        ],
        "Module 3 The Different Types Of Testing": [
          "Front End Vs Back End Testing",
          "The Testing Pyramid",
          "Functional Vs Nonfunctional Testing",
          "Black Box, White Box, And Grey Box Testing",
          "Other Types Of Testing"
        ],
        "Team Management": [
          "Team Members And Their Roles",
          "Project Management Tools",
          "Jira Introduction"
        ],
        "Test Plans And Test Cases": [
          "Test Plan Defined",
          "Test Plan Demo",
          "Test Cases Defined",
          "Test Cases Demo"
        ],
        "Bugs and Defects": [
          "What Is A Bug",
          "Bug Classification And Severity",
          "Bug Report Breakdown",
          "Bug Life Cycle",
          "Bug Report Demo"
        ],
        "Front End Testing": [
          "What Is Front End Testing",
          "Testing Environments",
          "Browser Stack",
          "Test Cases-> This video has been expanded to its own section"
        ],
        "Back End Testing": [
          "What Is Back End Testing",
          "What Is An API",
          "API Status Codes",
          "CRUD Operations",
          "Tools For Testing APIs"
        ],
        "Postman": [
          "Postman Introduction",
          "Creating Requests",
          "Creating A Colection",
          "Creating Tests",
          "Creating A Runner"
        ],
        "Mobile Testing": [
          "Introduction To Mobile Testing",
          "Mobile Browserstack"
        ]
      },
      "requirements": [
        "No experience needed."
      ],
      "description": "Learn the manual QA software testing skillset from scratch. No previous experience is needed. This comprehensive course is designed to provide you with the foundational and advanced skills necessary to excel in quality assurance roles, whether you're just starting or looking to solidify your expertise.\nIncluded:\nProjects For Your Portfolio For Experience: Build practical, real-world projects to showcase your skills to potential employers.\nNo Code Automation: Learn tools and techniques to perform automation without needing programming knowledge.\nFundamentals Of Software Testing: Master the basic concepts of QA, ensuring thorough understanding.\nThe Different Types Of Testing: Explore functional, non-functional, regression, and exploratory testing.\nTeam Management: Gain insight into working effectively within diverse teams.\nTest Documentation: Create detailed test plans, cases, and bug reports.\nBugs And Defects: Understand defect lifecycle management.\nFront-End Testing: Test user interfaces for functionality and usability.\nBack-End Testing: Ensure robust server-side functionality.\nPostman (Advanced Topic): Master API testing using Postman.\nMobile Testing: Learn to test apps on iOS and Android platforms.\nExploratory Testing: Develop critical thinking skills to identify unexpected issues.\nDatabases And SQL (Advanced Topic): Work with SQL to validate backend data and ensure database integrity.\nSoft Skills: Communicate and collaborate effectively in professional environments.\nHard Skills: Develop the technical expertise needed for QA.\nLinkedIn, Resume, And Cover Letters: Optimize your professional presence to attract job opportunities.\nInterview Prep: Ace your interviews with confidence and practice.\nThis course ensures you’re ready to excel in the competitive world of software testing!",
      "target_audience": [
        "This course is for people who want to learn the Manual QA Engineering skillset for software testing"
      ]
    },
    {
      "title": "Go language Ginkgo & Gomega API Testing Framework",
      "url": "https://www.udemy.com/course/go-language-ginkgo-gomega-api-testing-framework/",
      "bio": "Best opportunity for a head start to Learn and Master Go language + Testing Tools for an effective API Test Automation",
      "objectives": [
        "Learn Google Golang programming Language basics",
        "Learn Ginkgo Test Framework and Reporting",
        "Learn Gomega Matching & Test Assertions",
        "Full API Test Framework from ground up"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Go Installation / Setup on Windows / MAC": [
          "Set up on Mac part 1",
          "Set up on Mac part 2",
          "Set up on Windows - Part 1",
          "Set up on Windows - Part 2"
        ],
        "Basics of Go": [
          "First program - print - hello-world",
          "go lang - values",
          "Declare and usage of variables",
          "Declare and usage of Constants",
          "Declare and usage of Loops",
          "Declare and usage of Condition branching If Else",
          "Declare and usage of branching - Switch",
          "Declare and usage of Data Structure - Arrays",
          "Declare and usage of Maps",
          "Declare and usage of Range",
          "Declare and usage of Functions",
          "Declare and usage of Pointers -1",
          "Declare and usage of Pointers - 2",
          "Declare and usage of Strings",
          "Declare and usage of Structs - 1",
          "Declare and usage of Structs - 2",
          "Declare and usage of Nested Structs",
          "Declare and usage of Marshall",
          "Declare and usage of UnMarshall",
          "Declare and usage of Errors",
          "Declare and usage of File Operations"
        ],
        "Walk through on Ginkgo, Gomega": [
          "Installation of Ginkgo and Set up",
          "Ginkgo - First Sample Test",
          "Declare and usage of Describe and It",
          "Declare and usage of Filters",
          "Declare and usage of Hooks",
          "Declare and usage of GoMega Matchers"
        ],
        "Resty v2 HTTP Client for API Tests": [
          "Intro to Resty Library",
          "Resty - Get Operation",
          "Resty - Post Operation",
          "Resty - Put Operation",
          "Resty - Delete Operation",
          "Resty - Focus Operation",
          "Resty - Get - Array Objects",
          "Resty - Get - Looping for Specifics",
          "Resty - Get Operation - Data Type int64",
          "Resty - Get Operation - Parse Json Structure"
        ],
        "Build API Test Framework": [
          "Intro to Framework",
          "Framework - Arrange Tests",
          "Framework - Structs",
          "Framework - Environment and Utilities",
          "Framework - Mod and boiler plate stuff",
          "Framework - Hooks and Test",
          "Framework - Imports and First Test",
          "Framework - Common Functions",
          "Framework - Viper set up and Read vals",
          "Framework - Viper usage",
          "Framework - Modular Headers and End Point Defs",
          "Framework - Working Get Operation",
          "Framework - Json- Json Compare payloads",
          "Framework - Post Operation Function - Part 1",
          "Framework - Post Operation - Part 2",
          "Framework - Complete Post Operation",
          "Framework - Delete operation",
          "Framework - Final Suite - Run",
          "Framework - Wind up"
        ]
      },
      "requirements": [
        "Basic API testing Knowledge"
      ],
      "description": "This is an E2E API Testing course using  Golang, Ginkgo & Gomega  Tool belt. Leverage's Ginkgo's Modern Test Framework Capabilities  and Gomega's  Magic Matchers. The Course will  run through Videos with practical coding examples all through out for every one to learn Go and most widely used Test Tools for Creating a Pragmatic Test Framework from scratch.\nOutline:\n*  Learn Resful API Testing\n*  Learn Go Language covering all concepts for Testing purposes\n*  Combine power of both Ginkgo and Gomega for a complete & Maintainable Framework\n*  Simple and Clean Automated Execution Report\n*  Dynamic Suite with Multi Env support\n\n\nWhy Go : More and More APIs are developed or migrated from Java to Go. Testers need to equip them selves to learn to write Tests in Go language and this course is a perfect opportunity to be in the head start lane. In the next coming years jobs for go lang dev/testers will peak and hence having the Go testing in your tool belt is good one from growth and versatility perspective. Build fast, reliable, and efficient software at scale. Easy to learn and get started with and has Built-in concurrency and a robust standard library. Absolutely Growing ecosystem of partners, communities, and tools etc.,\n\n\nWhy Ginkgo :\nGinkgo is a mature testing framework for Go designed to help you write expressive specs. Ginkgo builds on top of Go's testing foundation and is complemented by the Gomega matcher library. Together, Ginkgo and Gomega let you express the intent behind your specs or tests clearly with high efficacy.  Tons of out of box features like modularisation of suites or tests, filters and ease of execution and decent reports makes it best choice for writing component or Integration tests.\n\n\nWhy Gomega :\nGomega brings a rich, mature, family of assertions and matchers to your Test suites. With Gomega you can easily mix synchronous and asynchronous assertions in your specs. You can even build your own set of expressive domain-specific matchers quickly and easily by composing Gomega's existing building blocks.\n\n\nWhy Viper :\nWhen building a modern application, you don’t want to worry about configuration file formats; you want to focus on building awesome software. Viper is here to help with that.\nViper does the following for you:\nFind, load, and unmarshal a configuration file in JSON, TOML, YAML, HCL, INI, envfile or Java properties formats.\nProvide a mechanism to set default values for your different configuration options.\nProvide a mechanism to set override values for options specified through command line flags.\nProvide an alias system to easily rename parameters without breaking existing code.\nMake it easy to tell the difference between when a user has provided a command line or config file which is the same as the default.",
      "target_audience": [
        "For Beginners, Medium and Advanced Testers"
      ]
    },
    {
      "title": "Software Testing de aplicaciones. Postman. Testing de API",
      "url": "https://www.udemy.com/course/software-testing-postman/",
      "bio": "Realiza testing del back-end con Postman. Pasa de cero a experto con este máster en Postman.",
      "objectives": [
        "¡¡¡Actualizado a la nueva versión de Postman!!!",
        "En este curso el estudiante aprenderá todos los secretos de la herramienta de software testing llamada Postman.",
        "Con ella se podrán probar nuestras API's o las de terceros, consiguiendo testear ese back-end y saber si es todo lo correcto que pensamos que es.",
        "Escribirás tus propios tests para probar las API's",
        "Automatizarás tus tests.",
        "Conocerás API's de terceros",
        "Aprenderás a manejar Newman",
        "Conocerás la integración con Jenkins",
        "Aprende la nueva herramienta de Flujos (Flows)"
      ],
      "course_content": {
        "Conociendo Postman": [
          "Bienvenidos al curso de Postman",
          "¿Qué es Postman?",
          "Versiones de Postman",
          "Instalación y visión general",
          "Mi primera Colección y mi primera petición",
          "Avanzando más en el entorno de Postman"
        ],
        "Peticiones a la API": [
          "¿Qué es una API Rest?",
          "Ejemplo petición de tipo GET",
          "Ejemplos peticiones de tipo POST",
          "Ejemplo de envío de un Array mediante POST",
          "Ejemplos de PUT y DELETE y organización de carpetas",
          "Envío de Cabeceras (Headers)",
          "Crear Variables de entorno",
          "Crear Variables globales",
          "Uso de las variables dinámicas",
          "Practica lo aprendido hasta ahora",
          "Colección usada en los vídeos."
        ],
        "Autenticación y Autorización": [
          "Autenticación Básica",
          "Autenticación Bearer mediante Token",
          "Autenticación OAuth",
          "Investiga otro tipo de autorización.",
          "Colección usada en los vídeos."
        ],
        "Colecciones": [
          "Operaciones básicas sobre una colección, duplicar, compartir, comentar...",
          "Control de versiones de las colecciones",
          "Colección usada en los vídeos."
        ],
        "Herramientas Interesantes": [
          "Llamadas desde Java, JavaScript, C#... y comentarios",
          "Utilidad Examples",
          "Utilidades Comunes",
          "PathVariable en una llamada a un servicio",
          "Utilidades de Fecha y Hora",
          "Utilidad de transformación de versión",
          "Trabajar con Cookies",
          "Colección usada en los vídeos."
        ],
        "Tests y Scripts": [
          "Mi primer test. Code 200.",
          "Test de Json y realización de múltiples test para una misma petición.",
          "Probando la consola",
          "Continuando con el testing",
          "Chai Assertion. Primeras pruebas",
          "Chai Assertion. Haciéndonos expertos.",
          "Testeando un XML",
          "Testeando un TXT",
          "Crear variables en tiempo de ejecución de Tests",
          "Conocer la opción Pre-request Script",
          "Enviar petición dentro de Pre-request Script",
          "Reutilizar los tests más comunes",
          "Practica los tests.",
          "Colección usada en los vídeos."
        ],
        "Collection Runner": [
          "Trabajando con la herramienta Runner",
          "Configurar orden de los flujos de trabajo",
          "Monitores",
          "Configura tu propio flujo de trabajo",
          "Colección usada en los vídeos."
        ],
        "Trabajando con una API pública. Ejemplos.": [
          "Conociendo y probando APIs públicas. Ejemplo API de fútbol.",
          "Probar otra API"
        ],
        "Aprendiendo Newman y Jenkins": [
          "Instalación Newman",
          "Probando Newman",
          "Integración de Postman con Newman",
          "Instalación Jenkins",
          "Arreglando posibles problemas Jenkins en Windows",
          "Ejecutando en Jenkins colección de Postman",
          "Informe Html Extra",
          "Ejecutando una colección de Github en Jenkins"
        ],
        "Diseñando una API": [
          "Diseño de una API con OpenApi 3.0.3"
        ]
      },
      "requirements": [
        "El usuario debe ser una persona que conozca sobre el mundo de la programación o que quiera iniciarse en el mundo del Testing de aplicaciones."
      ],
      "description": "En este curso aprenderás la herramienta Postman. Es la herramienta líder del sector de testing para peticiones a una API. Podrás conocer todos los secretos y utilidades que tiene el software adaptado a la última versión. Si no lo has probado nunca o ya lo conoces pero intuyes que podrías aprovecharlo más, este es tu curso. Una vez realizado el curso, el testing de back-end y API's no volverá a tener misterios para ti. Además, si eres programador de front-end (Android, IOS, Angular...) y quieres saber comunicarte con los servicios web, Postman es la herramienta que andabas buscando. Es la herramienta imprescindible para que tu valor como informático aumente considerablemente. Además conocerás como ejecutar tus colecciones por línea de comandos con Newman y como se relaciona con una herramienta de integración continua como Jenkins.",
      "target_audience": [
        "Principiantes en el mundo del Testing.",
        "Depuradores de Backend que todavía no sacan todo el potencial a esta herramienta.",
        "Programadores de la parte de Backend en general.",
        "Desarrolladores de front-end que quieren conectar con los servicios web."
      ]
    },
    {
      "title": "Selenium-Python: Code Management(GIT) + Jenkins Integration",
      "url": "https://www.udemy.com/course/selenium-python-jenkins-integration/",
      "bio": "Code management using Git, Github and Jenkins integration, Allure Reporting",
      "objectives": [
        "Detailed understanding of code management & jenkins integration",
        "Ready to work on Git using Gitbash & Integration with Jenkins"
      ],
      "course_content": {},
      "requirements": [
        "Understanding of Selenium with Python",
        "Understanding of Pytest and Allure Reporting"
      ],
      "description": "Git is the most widely used modern version control system in the world today, which allows multiple persons to safely work on the same project without hampering other team members. As a part of a team using Git, You and your team members will clone working copy of a local repository from Git server. You/team will add and commit the test scripts that are developed locally and push your changes to the Git.\nThis course gives coverage\n1.  Execute Selenium test cases using Pytest.\n2.  Share code using Source Management tool GIT\n3.  Integration Selenium with Jenkins using GIT.\n4.  Execute automation framework using Jenkins\n5.  Integrate Allure Reporting options",
      "target_audience": [
        "Any automation tester looking to understand code sharing process",
        "Manual testers looking to jump into automation"
      ]
    },
    {
      "title": "Testes Automáticos + Curso COMPLETO de Teste de Software",
      "url": "https://www.udemy.com/course/teste-software-completo-testes-automaticos/",
      "bio": "Indiscutivelmente o mais completo: Automação de Testes + Fundamentos e Técnicas do Teste de Software, tudo em um curso!",
      "objectives": [
        "Dominar os fundamentos do teste e do teste automático de software, as técnicas envolvidas, os tipos e níveis de teste",
        "Receber ferramentas gratuitas para que possam aplicar o que foi aprendido de imediato em seus projetos",
        "Receber orientações detalhadas sobre como se tornar um testador de alto nível e, principalmente, sobre como, de diversas formas, transformar isto em oportunidades imediatas e concretas no mercados de trabalho",
        "Aprender claramente e receber orientações diretas sobre como o aprendizado deste curso irá te tornar alguém diferenciado por toda a sua carreira profissional, de programador/testador a líder, gerente e executivo",
        "Aprenderá a utilizar o JUnit para construir testes automáticos, porém, poderá utilizar qualquer outra ferramenta no lugar do JUnit (ver explicação na descrição do curso)",
        "[Extra 01] Inclusas ferramentas para implantação imediata em qualquer empresa (ver descrição do curso)",
        "[Extra 02] 1h de consultoria/coaching particular com Gustavo Farias com 50% de desconto",
        "Um certificado digital de conclusão é entregue para os estudantes que completarem o curso"
      ],
      "course_content": {
        "Módulo 01: Introdução": [
          "O que você REALMENTE alcançará neste curso"
        ],
        "Módulo 02: As empresas | Os profissionais | A oportunidade": [
          "O que é teste de software",
          "Agenda do Curso Extra",
          "IMPORTANTE",
          "Verdades importantes sobre o teste de software",
          "\"O teste não é essencial\"",
          "A situação das empresas",
          "O perfil dos profissionais",
          "A primeira oportunidade",
          "A visão, o perfil e o papel do testador",
          "Exercícios",
          "Artigo"
        ],
        "Módulo 03: Níveis de teste: \"Quando testar\"?": [
          "Fundamentos do teste de software",
          "[Níveis de teste] → Teste de unidade",
          "[Níveis de teste] → Teste de integração",
          "[Níveis de teste] → Teste de sistema",
          "[Níveis de teste] → Teste de aceitação",
          "[Níveis de teste] → Teste alfa",
          "[Níveis de teste] → Teste beta",
          "[Níveis de teste] → Teste de regressão",
          "Exercícios"
        ],
        "Módulo 04: Técnicas de teste: \"Como testar\"?": [
          "[Técnicas de teste] Caixa branca e caixa preta",
          "Testes manuais x Testes automáticos",
          "Artigo: Testes manuais x automatizados: quem leva a melhor?",
          "Teste estático x Teste dinâmico",
          "Exercícios"
        ],
        "Módulo 05: Tipos de teste: \"O que testar\"?": [
          "[Tipos de teste] → Teste de funcionalidade",
          "[Tipos de teste] → Teste de desempenho",
          "[Tipos de teste] → Teste de usabilidade",
          "[Tipos de teste] → Teste de segurança",
          "[Tipos de teste] → Teste de portabilidade",
          "[Tipos de teste] → Teste de stress",
          "Exercícios"
        ],
        "Módulo 06: Quando e como os testes entram no desenvolvimento": [
          "As etapas de desenvolvimento e de teste",
          "Criando e gerenciando os testes de sistema",
          "Criando e gerenciando os testes de aceitação",
          "Gerenciando os testes alfa e beta",
          "Boas práticas (não técnicas)",
          "Boas práticas (técnicas)",
          "O custo da falha",
          "Mitos do teste de software",
          "Exercícios",
          "Artigo"
        ],
        "Módulo 07: Concluindo o curso base de teste de software": [
          "Certificações",
          "A segunda oportunidade"
        ],
        "Módulo 08: Automação de testes - Introdução": [
          "O que são testes automáticos",
          "Metodologia e tecnologias a serem utilizadas"
        ],
        "Módulo 09: Automação de testes - Criando o primeiro teste": [
          "Montagem do ambiente: Instalando as ferramentas",
          "Apresentação do projeto a ser testado",
          "Criação do primeiro teste",
          "Agora um teste mais completo"
        ],
        "Módulo 10: Automação de testes - Padrões e melhores práticas": [
          "A estrutura de um bom teste",
          "Documentação de testes: A importância e como fazer bem feito",
          "Codificando testes com técnicas de programação",
          "Manutenção de testes",
          "Como ganhar tempo e otimizar testes com cenários parecidos",
          "A independência do teste",
          "Suíte de testes",
          "Exercícios"
        ]
      },
      "requirements": [
        "Ter desejo de ser um testador de alto nível, acreditar que você VAI conseguir ser e estar determinado a buscar isso a partir de HOJE"
      ],
      "description": "---\nVocê sabia que a falta de testes de qualidade é o maior motivo de fracasso dos projetos de software?\nSabia também que profissionais do teste de software estão escassos no mercado devido à alta demanda?\n---\n\n\n## CURSO DE TESTE MAIS VENDIDO DA UDEMY, COM MAIS DE 10.000 ALUNOS\n\n\nALERTA.: se você gosta de muita teoria, decoreba e \"blá blá blá\" difícil até mesmo de entender, cuidado. Este curso é extremamente simples e prático, onde você entenderá tudo rápido e facilmente, receberá modelos prontos para aplicar nos seus projetos e gerenciará um projeto simulado do início ao fim utilizando a ferramenta mais procurada do mundo para planejamento de projetos.\n\n\nAutomação de Testes + Fundamentos do Teste de Software: diferenciais que trarão excelentes oportunidades no mercado de TI.\n\n\nVocê dominará não apenas as principais técnicas para teste de software, mas também tudo o que precisa para ser alguém diferenciado, reconhecido e capaz de conquistar grandes oportunidades no mercado de trabalho.\nCom uma linguagem simples, muita motivação e exemplos práticos, você irá aprenderá várias técnicas que te permitirão se desenvolver para ser um testador profissional, economizando muito tempo e dinheiro através da utilização de testes automáticos e agregando um enorme valor para a empresa onde você trabalha.\nSeguindo os ensinamentos que te darei neste curso, SEM DÚVIDA, você será totalmente capaz de conquistar novas oportunidades em sua vida e carreira profissional, mesmo que hoje você não saiba NADA sobre o assunto e até mesmo ache que não tem perfil para ser um testador ou elaborar testes de alta qualidade.\n\n\nFaça esse curso se você quer:\n. DOMINAR os fundamentos do teste e do teste automático de software, as técnicas envolvidas, os tipos e níveis de teste;\n. Receber orientações sobre como se tornar um testador de ALTO NÍVEL e como transformar isto em oportunidades imediatas e concretas no mercados de trabalho;\n. Ser RECONHECIDO e BEM REMUNERADO no mercado de trabalho, dominando algo que menos de 5% dos profissionais dominam;\n. Ser capaz de PLANEJAR e GERENCIAR testes na abordagem preditiva;\n. Assumir POSIÇÕES RELEVANTES e de liderança nos projetos onde trabalhar;\n. Escolher onde trabalhar, sendo alguém DIFERENCIADO e ACIMA DA MÉDIA no mercado de trabalho.\n\n\n## POR GUSTAVO FARIAS, INSTRUTOR #1 NO MUNDO EM CURSOS ONLINE NA ÁREA DE NEGÓCIOS, COM MAIS DE 200.000 ALUNOS\n\n\n---\nTESTEMUNHOS (O que os alunos dizem sobre este curso?)\n\n\nWow!!! Parabéns Prof. Gustavo!! Sua didática é incrível, super objetiva, baseada em exemplos práticos, o que é muito importante quando se quer passar um conhecimento e, você o fez com excelência. - Adriane Belle\n\"Curso excelente! Metodologia rápida e bem didática. Recomendo bastante para quem está iniciando no mundo dos Testes.\" - Karina Januário\n\"Muito bem explicado! E quanto a parte dos testes automáticos, o fato de ter a prática contribuiu e muito para o meu aprendizado!\" - Eduardo Fernandes\n\"Este é um curso bastante diferenciado. O professor explica claramente e com certa profundidade sobre os conceitos dos testes, estratégias de realização e documentação. Fala também sobre o valor agregado ao aprender esses conceitos e para mim pelo menos fica claro o valor que posso incrementar na minha vida profissional sabendo tendo essas informações. Recomendo.\"\n---\n\n\nDurante o curso extra, você receberá ferramentas utilizadas na prática por profissionais e prontas para serem utilizadas para gerenciar os testes em seus projetos.\n[Extra 01] Planilha para gestão dos testes de Sistema.\n[Extra 02] Planilha para gestão dos testes de Aceitação.\n[Extra 03] Planilha para gestão dos testes Alfa e Beta.\n[Extra 04] Disponibilização de projetos exemplos e apresentações para que você seja capaz de implantar testes automáticos na sua empresa.\n[Extra 05] 1h de consultoria/coaching particular com Gustavo Farias com 50% de desconto.\n[CONTE COMIGO] Eu respondo 100% dos meus alunos em no máximo 24 horas.\n[GARANTIA] Este curso tem uma garantia de 30 dias caso você queira seu DINHEIRO DE VOLTA. Então, NÃO HÁ RISCOS para você!",
      "target_audience": [
        "Profissionais de T.I. (Tecnologia da Informação) que não possuem perfil de testador de software, mas que precisam desenvolver habilidades de um testador para agarrar novas oportunidades e assumir mais responsabilidades",
        "Programadores de qualquer nível de experiência que desejam adquirir um grande diferencial sendo especialista também em teste de software, o que o torna alguém especial para as empresas",
        "Universitários pró-ativos de cursos de T.I. (ex.: Sistemas de Informação, Ciência da Computação, etc.) que sabiamente querem desenvolver as habilidades de um testador de software desde cedo, visando ser um profissional diferenciado no mercado de trabalho",
        "Programadores que desejam reduzir consideravelmente os retrabalhos com correções através da automação de testes"
      ]
    },
    {
      "title": "SDET Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/sdet-interview-questions/",
      "bio": "SDET Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "SDET Software Development Engineer in Test Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for a Software Development Engineer in Test (SDET) role? Do you want to ace your technical interviews with confidence? Look no further! Our comprehensive SDET Interview Questions Practice Test Course is designed to help you master the essential concepts, boost your problem-solving skills, and excel in your next interview.\nIn this practice test course, we’ve meticulously crafted a series of challenging interview questions covering six critical areas. Each section focuses on specific topics, ensuring you get a well-rounded understanding of SDET concepts. Let’s dive into what awaits you:\n1. Testing Fundamentals:\nSoftware Testing Life Cycle (STLC): Understand the phases of STLC, from requirements analysis to defect closure. Practice scenarios related to test planning and execution.  Test Types: Dive into unit, integration, system, and acceptance testing. Tackle questions that test your knowledge of when and how to apply each type.  Effective Test Case Development: Sharpen your skills in writing clear, concise test cases. Explore various test design techniques.  Test Management Tools: Get hands-on with tools like JIRA and TestRail. Answer questions related to test case management and tracking.  Test Metrics and Reporting: Learn about key metrics and their impact on testing quality.\n2. Automation Testing:\nAutomation Basics: Grasp the fundamentals of automation testing. Explore the benefits, challenges, and scenarios where automation shines.  Selenium WebDriver: Dive into WebDriver methods, dynamic element handling, and locators. Solve real-world problems.  Automation Frameworks: Master data-driven, keyword-driven, hybrid, and BDD frameworks. Practice framework-related questions.  API Testing Tools: Explore Postman and REST Assured. Answer questions about API testing.  CI/CD Integration: Understand Jenkins and GitLab CI. Solve CI/CD-related challenges.  Mobile Automation: Get familiar with Appium and mobile testing strategies.\n3. Programming Languages & Scripting:\nJava for Testers: Brush up on Java basics, OOP concepts, and collections. Solve Java-related interview questions. Python for Automation: Dive into Python syntax, libraries (PyTest, Robot Framework), and their relevance in automation.  JavaScript Essentials: Learn about JavaScript for frontend testing and asynchronous handling.  SQL for Testers: Practice basic SQL queries, joins, and subqueries for database testing.  Shell Scripting: Explore shell scripting basics for Unix/Linux environments.  Version Control Systems: Understand Git commands and branching strategies.\n4. Performance Testing:\nPerformance Testing Concepts: Delve into load, stress, and other performance testing types. Solve performance-related scenarios.  Performance Testing Tools: Get hands-on with JMeter and LoadRunner. Answer questions related to performance testing tools.  Performance Test Planning: Set objectives, define metrics, and plan performance tests effectively.  Analyzing Results: Identify bottlenecks and interpret performance graphs.  Monitoring Tools: Explore New Relic and Dynatrace.  Optimization Strategies: Learn front-end and back-end optimization techniques.\n5. Security Testing:\nBasics of Security Testing: Understand security testing concepts and common vulnerabilities. Security Testing Tools: Explore OWASP ZAP and Burp Suite.  Secure Coding Practices: Learn about input validation, error handling, and secure storage.  Application Security Testing: Dive into static, dynamic, and interactive testing methodologies. Common Security Threats: Tackle questions related to SQL injection, XSS, and CSRF.  Compliance and Standards: Understand OWASP Top 10 and GDPR compliance.\n6. Soft Skills and Agile Methodology:\nAgile and Scrum in Testing: Know your role in Agile/Scrum teams. Answer Agile-related questions. Effective Bug Reporting: Practice writing clear, concise bug reports.  Test Estimation Techniques: Understand time and effort estimation for testing activities.  Communication Skills: Collaborate effectively with development and business teams. Critical Thinking: Sharpen your analytical skills and problem-solving abilities.  Continuous Learning: Stay updated with new tools and methodologies.\n\n\nEnroll Now",
      "target_audience": [
        "Fresh Graduates and Aspiring SDETs",
        "Experienced Software Testers",
        "Quality Assurance Professionals",
        "Anyone Preparing for SDET Interviews"
      ]
    },
    {
      "title": "Introduction to software testing as a career",
      "url": "https://www.udemy.com/course/introduction-to-software-testing-as-a-career/",
      "bio": "This course covers the role of a software tester, stakeholders, their mission and reveals their secret weapon.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Roles": [
          "Roles",
          "Stakeholders",
          "Career Opportunities"
        ],
        "Your Mission": [
          "Question Everything",
          "Making Mistakes"
        ],
        "The Untold Truth": [
          "Quality Assurance versus Software Testing",
          "The Missing Test Strategy",
          "The Thinking Game"
        ],
        "Top Secret": [
          "Most Powerful Test Technique"
        ],
        "Next Steps": [
          "Test Automation"
        ]
      },
      "requirements": [
        "An inquisitive mindset, wanting to learn more about software testing.",
        "An interest in becoming a great software testing professional.",
        "An interest in assessing the quality of software applications and mobile apps.",
        "No previous testing or programming skills needed."
      ],
      "description": "Are you considering a career in software testing, or started a career in software testing recently?\nDo you consider yourself creative, inquisitive, and tenacious?\nDo you have an eye for detail? Do you spot spelling mistakes, or errors in software easily?\nAre you a good communicator?\nIf you have answered 'YES' to all of the above, then this course is for you!\nThis course is intended for someone considering a career in software testing, or that has recently started a career in software testing. The course offers experienced-based guidance on topics that are mostly overlooked like: the software tester's mission, the role, and what is required to become a great software testing professional.\nThis course is NOT intended for certification preparation, but rather focuses on providing guidance to lay a solid foundation for a novice software testing professional.\nThe demand for software testers has increased considerably in the last 10 years. Quality software provides companies with a competitive edge. Unfortunately, there is very little or no guidance on offer for people considering a career in software testing. Everyone knows what a software developer does, he/she writes code. But what does a software tester do? And why do we even need software testers?\nThis course is short by design. The objective is to highlight some of the areas that is mostly overlooked when someone considers a career in software testing, and the skills required to become a great software testing professional.\nSoftware testing is not for everyone, it can be fun, exciting and at the same time very stressful. After completing this course, you should have a good idea of what is required to be a great software testing professional.",
      "target_audience": [
        "Those considering software testing as a career.",
        "Those who have recently started a career in software testing that need some guidance."
      ]
    },
    {
      "title": "Develop Selenium framework with C# and Specflow BDD",
      "url": "https://www.udemy.com/course/develop-selenium-framework-with-csharp-and-specflow-bdd/",
      "bio": "Master Automation Framework with Selenium Csharp and Specflow",
      "objectives": [
        "Build automation framework using Selenium + C# + Specflow"
      ],
      "course_content": {
        "Introduction": [
          "Test Automation For QAs"
        ],
        "Visual Studio": [
          "Visual Studio Installation Start",
          "Visual Studio Installation Finish"
        ],
        "C# Basics": [
          "First C# Project",
          "Basics Classes Methods and DataTypes 1",
          "Basics Classes Methods and Data Types 2",
          "Basic Statements and Functions 1",
          "Basic Statements and Functions 2"
        ],
        "Create Test Automation project": [
          "Creating the Test Automation Project",
          "Nuget Packages"
        ],
        "Selenium Introduction and Initiating Webdrivers": [
          "Selenium Introduction",
          "Initiating Webdriver",
          "Starting Chrome Browser Driver & Debugging",
          "Stopping Chrome Browser Driver",
          "Start Stop IE and Firefox Browser Drivers"
        ],
        "Selenium Basics": [
          "Navigate to a WebPage",
          "WebElements and Locators",
          "Refactoring and Page Class",
          "WebDriverWaits Thread, Implicit and Explicit waits",
          "Explicit wait Execution",
          "WebDriverWaits WaitToAppear Disappear 1",
          "WebDriverWaits WaitToAppear Disappear 2",
          "Benefits of WaitToapper over WaitUntil"
        ],
        "Handle WebElements": [
          "Handle WebElements - Click and SafeSelect",
          "Handle WebElements - Enter, Read and Navigate",
          "Introduce Dropdowns and SingIn SpecSteps",
          "Handle DropDown By Clicks",
          "Handle DropDown By Text and Select",
          "Handle File Upload",
          "Handle RadioButton and CheckBox",
          "Handle Alerts and Date Times"
        ],
        "Page Models": [
          "Dictionary Locator Model",
          "Create the Dictionary Locator Model",
          "Dictionary Locator Page and AllPages",
          "Leftover changes and execution"
        ],
        "Spec Flow": [
          "Behaviour and Data Testing",
          "Behaviour Driven Testing and Gherkin",
          "Create feature file and scenario",
          "Update Visual Studio 1",
          "Update Visual Studio 2",
          "Change Tests To Work With Specflow",
          "Add Step definitions 1",
          "Add Step definitions 2",
          "Add Step Definitions 3",
          "Execution",
          "Multiple Execution and Hooks",
          "Reporting and ScreenShots"
        ]
      },
      "requirements": [
        "Basic computer knowledge is required",
        "Software Testig concepts",
        "This is basic course, but it teaches everything with building Framework"
      ],
      "description": "This course teaches from basic about Selenium, C# & Specflow.\nBut how this course if different. Normally Instructor teaches individual concepts but NOT how to work in real works i.e. with frameworks.\nThis course not only teaches to develop framework but every concepts would be taught by developing a framework. As more and more you advance is course, you will able to understand how we are creating libraries, functions, writing test cases, updated test cases in framework, as it is done in real projects and companies.",
      "target_audience": [
        "Any Software Tester who wants to learn Selenium + C# + Specflow"
      ]
    },
    {
      "title": "ISTQB Performance Testing - 2025",
      "url": "https://www.udemy.com/course/istqb-performance-testing/",
      "bio": "Master Performance Testing: Fundamentals, Metrics, Test Planning & Tool Selection.",
      "objectives": [
        "Grasp the fundamental principles of performance efficiency and the methodologies used in performance testing.",
        "Identify and articulate performance risks, objectives, and prerequisites to fulfill the expectations and requirements of stakeholders.",
        "Gain insight into performance metrics and the strategies for their collection.",
        "Formulate a comprehensive performance testing strategy that meets specific goals and requirements.",
        "Design, develop, and conduct preliminary performance tests.",
        "Interpret and communicate the outcomes of performance tests, outlining their significance for different stakeholder groups.",
        "Understand and convey the procedures, justifications, findings, and impacts of performance testing to a diverse audience.",
        "Recognize various performance testing tools, their applications, and the criteria for selecting them.",
        "Assess the integration of performance testing activities within the overall software development lifecycle."
      ],
      "course_content": {
        "Basic Concepts": [
          "Performance Testing Acronyms Cheat Sheet",
          "Introduction to Basic Concepts",
          "Principles of Performance testing",
          "Types of Performance Testing",
          "Static Testing: Testing Types in Performance Testing",
          "Dynamic Testing: Testing Types in Performance Testing",
          "The Concept of Load Generation",
          "Common Performance Efficiency Failure Modes and Their Causes",
          "Performance Basic Concepts Q&A",
          "Section 1 Quiz"
        ],
        "Performance Measurement Fundamentals": [
          "Introduction to Performance Measurement Fundamentals",
          "Why Performance Metrics are Needed?",
          "Collecting Performance Measurements and Metrics",
          "Selecting Performance Metrics",
          "Aggregating Results from Performance Testing",
          "Key Sources of Performance Metrics",
          "Typical Results of a Performance Test",
          "Performance Measurement Fundamentals Q&A",
          "Section 2 Quiz"
        ],
        "Performance Testing in the Software Lifecycle": [
          "Introduction to Performance Testing in the Software Lifecycle",
          "Principal Performance Testing Activities",
          "Categories of Performance Risks for Different Architectures",
          "Performance Risks Across the Software Development Lifecycle",
          "Performance Testing Activities",
          "Performance Testing in the Software Lifecycle Q&A",
          "Section 3 Quiz"
        ],
        "Performance Testing Tasks": [
          "Introduction to Performance Testing Tasks",
          "Planning: Deriving Performance Test Objectives",
          "Planning: The Performance Test Plan",
          "Planning: Communicating about Performance Testing",
          "Analysis, Design and Implementation: Typical Communication Protocols",
          "Analysis, Design and Implementation: Transactions",
          "Analysis, Design and Implementation: Identifying Operational Profiles",
          "Analysis, Design and Implementation: Creating Load Profiles",
          "Analysis, Design and Implementation: Analyzing Throughput and Concurrency",
          "Analysis, Design and Implementation:Basic Structure of a Performance Test Scrip",
          "Analysis, Design and Implementation: Implementing Performance Test Scripts",
          "Analysis, Design and Implementation: Preparing for Performance Test Execution",
          "Execution",
          "Analyzing Results and Reporting",
          "Performance Testing Tasks Q&A",
          "Section 4 Quiz"
        ],
        "Performance Tools": [
          "Introduction to Performance Tools",
          "Tool Support",
          "Tool Suitability",
          "Performance Tools Q&A",
          "Section 5 Quiz"
        ]
      },
      "requirements": [
        "No experience needed. You will learn everything you need to know."
      ],
      "description": "This comprehensive course is tailored for individuals aspiring to earn the ISTQB® Performance Testing Certification or those seeking to expand their understanding and skills in performance testing. Throughout the course, participants will immerse themselves in the fundamental principles, methodologies, and tools essential for efficient performance testing.\n\n\nBenefits of Performance Testing Certification:\nBy achieving the ISTQB® Performance Testing Certification, you will be empowered to:\nComprehend the fundamental concepts of performance efficiency and performance testing.\nIdentify and define performance risks, objectives, and requirements to meet stakeholder expectations.\nMaster the techniques for collecting and analyzing performance metrics.\nFormulate and implement detailed performance test plans to meet specific objectives.\nDesign, develop, and execute foundational performance tests.\nEvaluate and communicate the outcomes of performance tests to stakeholders effectively.\nUnderstand and articulate the process, logic, and impact of performance testing to diverse audiences.\nIdentify, evaluate, and select appropriate performance testing tools based on project needs.\nIntegrate performance testing strategies seamlessly within the software development lifecycle.\n\n\nWhy you should take this course:\nOur course covers all facets of performance testing as outlined in the ISTQB® Performance Testing syllabus, including technical, methodological, and organizational aspects. Tailored for software testers looking to delve into performance testing or professionals aiming to initiate a specialized career in this domain, this program also serves those involved in performance engineering seeking a deeper understanding of performance testing concepts.\n\n\nFurthermore, the course is structured to provide practical insights and real-world examples, ensuring a profound understanding of how to apply theoretical knowledge. Participants are guided through the performance testing process, from the initial planning and design to the execution and analysis of tests, culminating in effective communication of findings to stakeholders.\n\n\nEnroll now and embark on your journey to becoming an ISTQB® Certified Tester in Performance Testing!\n\n\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "This course is for anyone who wants to enhance their performance testing skills or earn the Certified Tester Performance Testing (CT-PT) certification."
      ]
    },
    {
      "title": "The Complete Course of WebdriverIO 2025",
      "url": "https://www.udemy.com/course/webdriverio-course/",
      "bio": "Learn WebdriverIO in a Professional way from Scratch. Become an expert in Automation Testing, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master WebdriverIO, to be able to test web and mobile applications using the WebDriver protocol from scratch",
        "You will be able to conduct WebdriverIO projects step by step, understanding all the logic and ending with advanced practical examples and complete projects",
        "You will explore the basics of automated testing and get acquainted with the fundamentals of WebdriverIO",
        "You will learn how to install WebdriverIO and understand its core functionalities, including configuration and basic automation exercises",
        "You will master handling browser tabs, frames, and key Webdriver IO commands to interact effectively with web elements",
        "You will dive into the Page Object Model (POM) to enhance test maintenance and scalability through effective object management",
        "You will learn to Integrate Behavior-Driven Development (BDD) using Cucumber, focusing on creating understandable and executable specifications",
        "You will gain expertise in managing dynamic web elements and unexpected pop-ups to ensure robust and reliable test results",
        "You will explore advanced testing techniques including working with cookies, executing tests in parallel, and utilizing hooks",
        "You will conduct basic performance tests and learn how to integrate Web driver IO with Jenkins for continuous testing and integration",
        "You will absorb best practices for crafting maintainable tests and develop troubleshooting techniques to solve common issues efficiently",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the hands-on projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to WebdriverIO": [
          "Course Opener",
          "Course Outline",
          "Understanding Automated Testing",
          "Understanding Automated Testing Cont...",
          "Introduction to WebdriverIO",
          "Quiz"
        ],
        "Installation & WebdriverIO Basics": [
          "Installation of Webdriver IO-1",
          "Installation of Webdriver IO-2",
          "Running Code",
          "Explanation of Configuration File",
          "Flow of Execution",
          "Locators and Basic Automation Exercise",
          "What is Promise",
          "Wait in Typescript",
          "Quiz"
        ],
        "WebdriverIO Commands and Actions": [
          "Managing Tabs-1",
          "ManagingTabs-2",
          "Understanding Frames",
          "Important webdriverIO Elements - 1",
          "Important webdriverIO Elements - 2"
        ],
        "Working with Page Objects": [
          "Understanding Page Object Model (POM)",
          "POM Practice-1",
          "POM Practice-2",
          "Best Practices for Page Object Managemen",
          "Quiz"
        ],
        "Cucumber and BDD": [
          "Understanding Cucumber",
          "Understanding Gherkin Language",
          "Creating Cucumber Based WebdriverIO Project",
          "All About Cucumber and BDD"
        ],
        "Handling Dynamic Elements and Pop-ups": [
          "Explicit waits to deal with Dynamic Situation-1",
          "Explicit waits to deal with Dynamic Situation-2",
          "Dealing with Alerts",
          "How to Upload a File",
          "Quiz"
        ],
        "Advanced WebdriverIO Techniques": [
          "Working with Cookies-1",
          "Working with Cookies-2",
          "Parallel Execution",
          "Managing Hooks in WebdriverIO"
        ],
        "Performance Testing and Integration with Jenkins": [
          "Performance Testing",
          "Jenkins Server"
        ],
        "Best Practices and Tips": [
          "Best Practices for Writing Maintainable Tests",
          "Debugging and Troubleshooting Techniques"
        ],
        "WebdriverIO Final Project": [
          "Final Project Part-1",
          "Final Project Part-2",
          "Course Closure"
        ]
      },
      "requirements": [
        "Having basic notions of Software Testing can help, but the course starts from scratch",
        "Installing and preparing the needed environment to follow the practical sessions (if you don't know how, don't worry, it's very easy, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a WebdriverIO professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that Software Testers, QA Engineers, Software Developers, Test Automation Engineers, DevOps Engineers, Tech Enthusiasts, Students... can learn WebdriverIO from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in Information Technology we have realized that nowadays mastering WebdriverIO for Automated Testing is very necessary in software development, enabling organizations to deliver higher-quality applications more rapidly. Knowing how to use this tool can give you many job opportunities and many economic benefits, especially in the world of development.\nThe big problem has always been the complexity to perfectly understand Webdriver IO requires, since its absolute mastery is not easy. In this course we try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step, detailed and hands-on examples of every concept.\nWith more than 8 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master WebdriverIO. The course will teach you how to effectively automate web and mobile application testing using WebdriverIO, in a practical way, from scratch, and step by step.\nWe will start with the installation and setup of the needed work environment on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to WebdriverIO and course dynamics\nGetting Started with Automated Testing and WebdriverIO\nInstallation and Basics of Webdriver IO\nMastering WebdriverIO Commands and Actions\nEnhancing Test Structure with Page Objects\nIntegrating Cucumber with Web driver IO for BDD\nAdvanced Handling of Dynamic Elements and Pop-ups\nAdvanced Techniques in WebdriverIO\nPerformance Testing and CI Integration with Jenkins\nAdopting Best Practices and Troubleshooting in WebdriverIO\nMastery and application of absolutely ALL the functionalities of WebdriverIO\nQuizzes, Practical exercises, complete projects and much more!\nIn other words, what we want is to contribute our grain of sand and teach you all those things that we would have liked to know in our beginnings and that nobody explained to us. In this way, you can learn to build and manage a wide variety of projects and make versatile and complete use of Webdriver IO. And if that were not enough, you will get lifetime access to any class and we will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning WebdriverIO has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used WebdriverIO before",
        "Software Testers, QA Engineers, Software Developers, Test Automation Engineers, DevOps Engineers, Tech Enthusiasts, Students... who want to learn a new way to automate web and mobile application testing",
        "Intermediate or advanced Webdriver IO users who want to improve their skills even more!"
      ]
    },
    {
      "title": "Learn Selenium With Enterprise Case Study From Experts",
      "url": "https://www.udemy.com/course/learn-selenium-with-python/",
      "bio": "Learn Selenium from Expert with hands-on exercises and Industry based Case Studies on Data, Keyword and Hybrid Driven",
      "objectives": [
        "You will be able to write web test automation code in a professional way.",
        "You can increase your income by moving from manual to automation tester.",
        "You can easily land an automation job in the automation software testing industry.",
        "You will be able to design your own test framework for any web application."
      ],
      "course_content": {
        "Introduction": [
          "1.Brief Introduction of Selenium"
        ],
        "All Code Repositories and Resources": [
          "All Code Repositories and Resources"
        ],
        "Installation": [
          "2.Install Selenium with Python using pip",
          "3.Installation of Webdrivers",
          "4.Installation of Eclipse with pydev",
          "5.Installation of Selenium IDE with Firefox"
        ],
        "Selenium Web Driver": [
          "6.1 First Step with Selenium and Webdriver: Part 1",
          "6.2 First Step with Selenium and Webdriver: Part 2",
          "6.3 First Step with Selenium and Webdriver: Part 3",
          "7.Work with Unit test and generate html report of test cases: Part 1",
          "8.Work with Unit test and generate html report of test cases: Part 2",
          "9.1 Locators and Configure Developer tool to Firefox and Configure developer too",
          "9.2 Locators and Configure Developer tool to Firefox and Configure developer too"
        ],
        "Find Element with Selenium WebDriver": [
          "10.1 Find Elements with Selenium WebDriver: Part 1",
          "10.2 Find Elements with Selenium WebDriver: Part 2",
          "10.3 Find Elements with Selenium WebDriver: Part 3",
          "11.Find Element by tag name",
          "12.Find Element by Xpath",
          "13.Find Element by CSS Selectors",
          "14. Work with Selenium IDE",
          "15.1.Work with form element: Part 1",
          "15.2 Work with Form Elements: Part 2"
        ],
        "Automate with Selenium": [
          "16. Automate Signup Functionality with UI5CN Web App",
          "17.1 Automate Alert Window of JavaScript",
          "17.2 Automate Confirm Window of JavaScript",
          "17.3 Automate Prompt Window"
        ],
        "Case Study 1: Data Driven Approach": [
          "18.1 Case Study with data driven approach: Part 1",
          "18.2 Read Excel data using XLRD Package",
          "18.3 Create Test for Login Functionality",
          "18.4 Automate Change Password Functionality",
          "19.Automate Pop up using switch to frame method"
        ],
        "Case Study 2: Keyword Driven Approach": [
          "20.1 Case Study using Keyword driven Approach",
          "20.2 Create yaml module and Extract data",
          "20.3 Create test case with Keyword driven Approach"
        ],
        "Case Study 3: Hybrid Driven Approach": [
          "21.1 Create testframework with hybrid driven approach",
          "21.2 Prepare first data unit with yaml and Excel",
          "21.3 Prepare Second Data Reader module",
          "21.4 Create Test Case with Hybrid Driven Approach"
        ]
      },
      "requirements": [
        "An access to a computer with an internet connection is enough to start."
      ],
      "description": "Writing automated web testing is compulsory for any project and the most popular framework for doing it is Selenium, using WebDriver with Python. Python is very popular for developers and testers in every software field. It will accelerate your success in software quality assurance.\nLearn and practice the most popular combination of tools for web test automation with Python.\n\nLearn How to work with Python environment.\nEach concept is discussed in detail and related to real-time web application.\nWork with a data-driven approach for your automation suite.\nWork with the keyword driven approach for your automation suite.\nBuild your own test framework with Hybrid Driven Approach mostly used in the industry nowadays.\nDiscussed case studies with real-world web application (example: UI5CN, OLX, Paytm etc.).\nDive into practical examples and exercises that illustrate Python's role in web automation.\nYou will learn Python programming language in a short period of time. Then you will learn Selenium Webdriver. Python is one of the most popular languages out there. Examples of well-known applications made with Python are Instagram, YouTube, Twitter, Facebook, Dropbox, Meetup and so much more. Knowing Python not only enables you to write front-end automation but also sets you up halfway into learning Back-end API testing.",
      "target_audience": [
        "Beginners or Intermediate Python Developers can take this course."
      ]
    },
    {
      "title": "Defect Management & QA Reporting: Metrics & KPIs",
      "url": "https://www.udemy.com/course/test-metrics-kpis-learnit/",
      "bio": "Learn defect lifecycle, bug tracking, Quality Assurance (QA) & Quality Control (QC) KPIs, metrics analysis, & reporting",
      "objectives": [
        "Selecting the right QA metrics for your project",
        "Interpreting trends in test result data",
        "Aligning QA metrics with business objectives",
        "Detecting quality issues early using metrics",
        "Integrating metrics into sprint planning",
        "Using KPIs to support go/no-go decisions",
        "Setting metric-based quality gates",
        "Using data to justify QA resource needs",
        "Visualizing test progress over time",
        "Monitoring automation stability with key indicators",
        "Analyzing root causes of recurring defects",
        "Supporting team retrospectives with hard QA data",
        "Driving test strategy with measurable outcomes"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Defect Management Metrics & KPIs": [
          "Defect Management Metrics & KPIs: Number of Open Defects & Defect Leakage",
          "Defect Management Metrics & KPIs: Defects per Severity/Priority/Env/Root cause",
          "Defect Management Metrics & KPIs: Defect Density, Non-Resolved Blockers & Others",
          "Defect Management Metrics & KPIs: Quality Debt Index, Bug Fixing Projection",
          "Defect Reopen, Defect Rejection, Open Defects Change Rate, Removal Efficiency",
          "Defect Resolution Time, Defect Age, Detection to Resolution Ratio"
        ],
        "Testing Metrics & KPIs": [
          "Test execution coverage, Cost of Quality & Test Design Coverage",
          "Testing Metrics & KPIs: Regression Time, Verified Issues Rate, Pass Rate"
        ],
        "Test Automation Metrics & KPIs": [
          "% of Poduct, Automation, System Issues & Execution Frequency",
          "Execution Time, Test Success Ratio & % of Results Analyzed",
          "Regression Effectiveness, Percentage of Automated Tests & Auto Savings"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "General knowledge of software testing principles",
        "Understanding of QA workflows, whether manual or automated",
        "Prior use of bug tracking systems like Jira or similar",
        "Experience working with test management platforms such as TestRail or Zephyr",
        "A desire to improve QA through data and metrics",
        "No need for deep coding or statistical skills"
      ],
      "description": "Master Defect Management, QA Reporting & KPIs – Elevate Your Software Quality with Actionable Metrics & KPIs\nWant to gain full control over your QA process and confidently communicate software quality to stakeholders? This course is your complete guide to defect management, QA reporting, and quality metrics — designed to help you lead your QA efforts with data, not guesswork.\n\"Defect Management & QA Reporting: Metrics & KPIs\" is a hands-on, practical course that shows you how to track, analyze, and improve your QA process using industry-proven metrics and reporting practices. From managing the defect lifecycle to building KPI-driven dashboards, you’ll learn how to drive results in both Agile and traditional environments.\n\n\nWhat You Will Learn\nThe complete defect lifecycle from detection to closure (and everything in between)\nKey QA and QC KPIs: defect density, leakage rate, test coverage, test execution status, MTTR, and more\nHow to build effective QA dashboards and reporting frameworks for stakeholders\nTechniques for root cause analysis, defect triage, and severity-priority alignment\nStrategies to avoid common pitfalls in bug tracking and status reporting\nAligning QA metrics with business goals to show ROI of testing efforts\nThis course gives you not just theory—but practical templates, real-world examples, and step-by-step demonstrations to apply what you learn right away.\n\n\nWho This Course is For\nQA Engineers and Manual Testers who want to bring clarity and structure to their defect tracking\nAutomation Engineers seeking to integrate defect and test metrics into CI/CD pipelines\nQA Leads and Managers looking to improve visibility, traceability, and reporting practices\nScrum Masters and Agile Teams who need reliable quality insights per sprint or release\nBusiness Analysts and Product Managers interested in understanding and interpreting quality reports\n\n\nWhat Makes This Course Different\nMost QA courses focus only on test execution. This one gives you the data-driven backbone of QA work — metrics, reporting, and quality control. You’ll learn how to turn bugs into valuable insights, how to build trust with stakeholders using data, and how to level up your QA career through analytics and visibility.\n\n\nBy the end of this course, you'll be able to track defects with confidence, build reports that influence decisions, and measure QA success with the right KPIs.\nSign up now and transform your QA efforts into a measurable, strategic force for software quality.",
      "target_audience": [
        "Manual testers looking to validate their contributions using measurable outcomes",
        "Automation specialists aiming to prove the effectiveness and stability of their frameworks",
        "QA leaders and coordinators seeking to build data-driven quality processes",
        "Agile quality professionals working to synchronize testing with rapid development cycles",
        "Business analysts and product owners wanting a clearer view of product health through QA metrics",
        "Developers interested in leveraging QA insights to improve code quality and reduce defects",
        "Project leaders who need to oversee quality levels and manage risks effectively",
        "Delivery heads focused on ensuring release quality and identifying potential blockers",
        "Engineering leaders aiming to track and enhance team output using quality indicators",
        "Product strategists wanting to connect quality data to product planning and outcomes",
        "Architects who want to analyze how design choices impact defects and system stability"
      ]
    },
    {
      "title": "The Complete Playwright Bootcamp: Zero to Hero in eCommerce",
      "url": "https://www.udemy.com/course/the-complete-playwright-bootcamp-zero-to-hero-in-ecommerce/",
      "bio": "Automated Testing Mastery for Magento / Adobe eCommerce - Playwright, Cucumber, Allure, AI + 6 Months FREE JetBrains IDE",
      "objectives": [
        "Introduction to Automated Testing: Understand the fundamentals of automated testing and how it applies to eCommerce environments.",
        "Comprehensive Playwright Setup: Learn how to set up and configure Playwright for efficient testing, including essential settings and best practices.",
        "Advanced Testing Techniques: Dive into complex testing scenarios, including Behavior-Driven Development (BDD), cross-browser testing, and debugging.",
        "Optimizing Test Performance: Discover how to run tests in parallel, handle flaky tests, and manage resources effectively to reduce test execution time.",
        "Data-Driven Testing: Utilize fixtures, data files, and video recording to enhance test coverage and gain deeper insights.",
        "Environment Management: Streamline testing across different environments and configurations, ensuring your eCommerce site functions correctly in all scenarios.",
        "Reporting and Analysis: Generate detailed test reports with tools like Allure, and gain insights into test outcomes to drive continuous improvement."
      ],
      "course_content": {
        "Introduction to Automated Testing and Playwright": [
          "Understanding Automated Testing",
          "Types of Automated Tests",
          "Challenges in E-Commerce Testing",
          "Overview of Playwright",
          "How to Claim Your 6-Month FREE JetBrains IDE License and Exclusive Offers",
          "Quiz: Understanding Automated Testing Types"
        ],
        "Getting Started with Playwright": [
          "Configuring Playwright",
          "Playwright's Architecture and First Practice",
          "First Test Solution",
          "Running and Reporting Tests",
          "Quiz: Running and Reporting Tests with Playwright"
        ],
        "Core Playwright Features": [
          "Basic Interactions in Playwright and Practice Test",
          "Add Product to the Cart Using Search - Practice Test Solution",
          "POM Structure in Playwright",
          "Refactor Add Product to the Cart Using POM",
          "About Headless and Headed Mode",
          "Quiz: Basic Interactions in Playwright"
        ],
        "Enhancing Tests with Advanced Features": [
          "Understanding the Feature File in BDD",
          "Custom World in Playwright",
          "Creating Feature File and Custom-World JS",
          "Extend the Test to Include Purchasing the Product - Practice Part 1",
          "Solution - Extend the Test to Include Purchasing the Product - Practice Part 1",
          "Debugging with Screenshot",
          "Quiz: Understanding Behavior-Driven Development (BDD)"
        ],
        "Advanced End-to-End Testing with Playwright": [
          "Extend the Test to Include Purchasing the Product - Practice Part 2",
          "Solution - Extend the Test to Include Purchasing the Product - Practice Part 2",
          "Introduce Hook.js",
          "Create Hook.js Example",
          "Quiz: Introduction to hook.js in Playwright"
        ],
        "Fixtures and Data Handling in Playwright": [
          "Extend the Test to Include Purchasing the Product - Practice Part 3",
          "Solution - Extend the Test to Include Purchasing the Product - Practice Part 3",
          "Introduction to Fixtures in Playwright",
          "Creating Data JSON Fixtures",
          "Quiz: Introduction to Fixtures in Playwright"
        ],
        "Enhancing Playwright Tests with Media and Environment Variables": [
          "Introduction to Video Capturing in Playwright",
          "Enhancing Playwright Tests with Video Recording",
          "Introduce Process Environment",
          "Extend Process Env with Capture_Video Flag",
          "Quiz: Video Capturing and Process Environment in Playwright"
        ],
        "Code Generation with Codegen and Optimization with AI Assistant": [
          "Codegen Introduction",
          "Creating Test with Codegen",
          "Optimizing and Adjusting This Test with the JetBrains AI Assistant",
          "Quiz: Introduction to Playwright Codegen"
        ],
        "Tagging, Reporting with Allure and The Background Tasks": [
          "Exploring Background and Tags",
          "Presenting Tags in Our Project",
          "Presenting Allure Reporting Tool",
          "Implementing Allure Reporting",
          "Quiz: Exploring Tags, Backgrounds, and Allure in Playwright"
        ],
        "Scenario Based Reporting with Cucumber HTML Reporter": [
          "Introduction to Cucumber HTML Reporter",
          "Implementing the Cucumber HTML Reporter",
          "Understanding cucumber-html-reporter for Automated Testing"
        ]
      },
      "requirements": [
        "Basic Understanding of Web Development: Familiarity with HTML, CSS, and JavaScript is essential as the course involves testing web applications.",
        "Experience with Adobe Commerce (Magento) or some another eCommerce Platform: While not mandatory, having some experience with Adobe Commerce (Magento) or eCommerce Platform will help you better understand the context of the course.",
        "Fundamental Knowledge of Testing Concepts: A basic grasp of software testing principles, including unit testing, integration testing, and end-to-end testing, will be beneficial."
      ],
      "description": "Are you looking to elevate your eCommerce testing skills and ensure that your eCommerce site like Adobe Commerce / Magento shop performs flawlessly? Welcome to \"The Complete Playwright Bootcamp: Zero to Hero in eCommerce\" course.\nIn today's competitive online marketplace, ensuring a seamless and reliable shopping experience is critical. This course is designed to equip you with the knowledge and skills needed to master Playwright-a powerful end-to-end testing framework-specifically tailored for eCommerce platforms like Adobe Commerce and Magento.\nWhat You'll Learn:\nIntroduction to Automated Testing: Understand the fundamentals of automated testing and how it applies to eCommerce environments.\nComprehensive Playwright Setup: Learn how to set up and configure Playwright for efficient testing, including essential settings and best practices.\nAdvanced Testing Techniques: Dive into complex testing scenarios, including Behavior-Driven Development (BDD), cross-browser testing, and debugging.\nOptimizing Test Performance: Discover how to run tests in parallel, handle flaky tests, and manage resources effectively to reduce test execution time.\nData-Driven Testing: Utilize fixtures, data files, and video recording, screenshots and more techniques to enhance test coverage and gain deeper insights.\nEnvironment Management: Streamline testing across different environments and configurations, ensuring your eCommerce site functions correctly in all scenarios.\nReporting and Analysis: Generate detailed test reports with tools like Allure, and gain insights into test outcomes to drive continuous improvement.\nExclusive Offer for You:\nAs a valued student, you’ll gain access to exclusive offers that will further enhance your learning experience:\n6 Months FREE Access to Top JetBrains IDEs:\nPhpStorm – Perfect for PHP and Adobe Commerce / Magento development.\nWebStorm – The ultimate IDE for modern JavaScript and front-end development.\nIntelliJ IDEA – Ideal for Java and Kotlin developers.\nPyCharm – The go-to IDE for Python development.\nAnd More JetBrains IDEs...\nAutomatic 40% Discount on your selected IDE subscription after the free 6-month period — ensuring you continue to save as you grow your skills.\nJetBrains AI Assistant: Experience the future of coding with a 7-day trial of the JetBrains AI Assistant, integrated directly into your selected JetBrains IDE.\nStay tuned for even more exciting discounts and offers exclusively for my students!\nWhy This Course?\nThis course is specifically crafted for developers, testers, and quality assurance professionals working with Adobe Commerce (Magento) who want to ensure their applications are robust, reliable, and ready for the real world. Whether you are new to Playwright or looking to refine your skills, this course provides a complete guide to mastering test automation in an eCommerce context.\nCourse Highlights:\nHands-On Practice: Engage with real-world scenarios and practice exercises designed to reinforce your learning.\nQuizzes and Assessments: Test your knowledge regularly to ensure you’re mastering the concepts as you progress through the course.\nExpert Guidance: Benefit from clear explanations, best practices, and insights from experienced professional.\nUp-to-Date Content: Stay ahead with the latest testing techniques and tools that are relevant to modern eCommerce platforms.\nPlatform Agnostic: The skills you acquire will be applicable across different platforms, making you a versatile and in-demand professional.\nBy the end of this course, you'll have the confidence and expertise to implement automated testing strategies that ensure your Adobe Commerce (Magento) site delivers a seamless shopping experience, every time.\nEnroll today and start mastering Playwright, Cucumber, Allure, and more—taking your eCommerce testing skills to the next level!",
      "target_audience": [
        "eCommerce Developers: Looking to enhance their testing capabilities.",
        "QA Engineers and Testers: Aiming to master Playwright for robust test automation.",
        "Adobe Commerce (Magento) Specialists: Seeking to ensure their platform’s reliability and performance."
      ]
    },
    {
      "title": "Automated API Tests using Artificial Intelligence (AI)",
      "url": "https://www.udemy.com/course/automated-api-tests-using-artificial-intelligence-ai/",
      "bio": "Learn how to use Artificial Intelligence to convert your Web UI tests into Automated API Tests (REST API)",
      "objectives": [
        "You will learn what is Artificial Intelligence (AI) and what is the relationship of AI with Machine Learning and Deep Learning. You will also learn what are the advantages of API testing using Artificial Intelligence.",
        "You will learn how you can use Artificial Intelligence (AI) to drive your API test automation projects. You will also learn how to use Artificial Intelligence to convert your Web UI tests into Automated API Tests."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Why I have created this course?",
          "How this course is different from my other AI courses?"
        ],
        "Introduction to Artificial Intelligence (AI)": [
          "What is Artificial Intelligence (AI)?",
          "What is Machine Learning & Deep Learning?",
          "Example - Machine Learning Vs Deep Learning"
        ],
        "Introduction to API": [
          "What is an API & Web Service?",
          "What is REST API?",
          "REST API vs SOAP API",
          "Let's discuss an API Testing",
          "Why API testing is important?"
        ],
        "API Testing in traditional SDLC process (Waterfall methodology)": [
          "Let's discuss...API Testing in SDLC process",
          "Let's See Real World Application Demo"
        ],
        "API Testing in current Agile methodology (Scrum or Kanban)": [
          "Let's discuss...API Testing in Agile methodology",
          "Let's see Real World Application Demo"
        ],
        "API Testing using future innovative AI tool": [
          "How Artificial Intelligence can help us in automated testing of API?",
          "Let's see Real World Application Demo",
          "Let's discuss...Why do we need to start using AI in API Testing?"
        ],
        "Interview Questions": [
          "Interview Questions - Specific to AI Machine Learning in Software Testing"
        ],
        "Summary": [
          "Course Summary"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "All should need to know is What is importance of Software Testing and What is the benefits of implementing Test Automation over manual testing."
      ],
      "description": "Automated API Tests using Artificial Intelligence (AI) course is the first ever course on UDemy which talks about future of API Tests with AI Machine Learning. In this course you will learn how to use Artificial Intelligence to convert your Web UI tests into Automated API Tests.\nI have decided to structure this course into two parts. it requires students to understand basic fundamental of Artificial Intelligence (AI) and the need for AI in Software Testing on first part before we jump into next part where we can deep dive into  API test automation and discussed some innovative AI tools that we can use to convert your Web UI tests into Automated API Tests.\nThis course is designed for both testers and developers. Tester who want to develop their testing skills in the test automation with Artificial Intelligence (AI) and Developer who want to execute their API unit test in automated way using Artificial Intelligence (AI).\nThis course will teach you how are we doing API testing currently in agile world and then how can we improve that using Smart API Test Generator, which uses Artificial Intelligence to convert your Web UI tests into Automated API Tests. After you have completed this course you should be able to build API test automation projects for your company's applications using Artificial Intelligence (AI). This course should also help you for your AI test automation job interview.",
      "target_audience": [
        "This course is designed for both testers and developers. Tester who want to develop their testing skills in the test automation with Artificial Intelligence (AI) and Developer who want to execute their API unit test in automated way using Artificial Intelligence (AI)."
      ]
    },
    {
      "title": "Postman Crash Course For Beginners | Learn API Testing",
      "url": "https://www.udemy.com/course/postman-crash-course-for-beginners-learn-api-testing/",
      "bio": "Unlock the Power of API Testing: Master Postman in Just Hours!",
      "objectives": [],
      "course_content": {
        "Introduction to API": [
          "Postman Crash Course For Beginners | Learn API Testing (Promo)",
          "Complete API Guide",
          "Why ChatGPT to Use?"
        ],
        "Basics of API Testing & Postman": [
          "Understanding API Testing Concepts",
          "Postman Concepts and Download"
        ],
        "Basic Terms to Understand": [
          "Status Code",
          "Postman UI"
        ],
        "Testing in Postman": [
          "First Request",
          "Json and XML",
          "Query Parameters",
          "Pass Authentication",
          "Send Json Request Body"
        ],
        "Test Automation in Postman": [
          "How to Automate with Scripts",
          "Playing with Automation Scripts"
        ],
        "Postman Collections and Variables": [
          "Collections",
          "Variables",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic understanding of computers and the internet",
        "No prior programming or testing experience required",
        "A computer with internet access",
        "Willingness to learn and practice"
      ],
      "description": "Are you ready to step into the world of API testing but don't know where to start? The \"Postman Crash Course For Beginners | Learn API Testing\" is your gateway to mastering the essential skills you need to excel in API testing. In today's tech-driven world, APIs are the backbone of modern applications, allowing different software systems to communicate with each other seamlessly. Whether you're a developer, tester, or just someone interested in learning about APIs, this course is designed to take you from a complete beginner to a confident API tester in no time.\nWhy should you take this course? The digital landscape is evolving rapidly, and API testing is becoming an indispensable skill for anyone involved in software development or quality assurance. Imagine being able to ensure the reliability and performance of APIs, which are crucial to the success of countless applications. By enrolling in this course, you'll gain hands-on experience with Postman, one of the most popular tools for API testing. You'll learn not just the basics, but also advanced techniques that will set you apart in the competitive tech industry.\nFear of missing out is real, especially in the fast-paced world of technology. If you don't keep up with the latest skills, you risk falling behind. API testing is no longer optional; it's a necessity. Without this knowledge, you could miss out on job opportunities, promotions, and the ability to work on cutting-edge projects. Don't let your lack of API testing skills be the reason you miss out on the future of tech.\nIn this course, we'll start by demystifying what APIs are and why they are so important. You'll learn the foundational concepts of API testing, such as HTTP methods, status codes, and how to send requests using Postman. But we won't stop there. We'll dive deeper into more advanced topics like automation scripts, working with collections and variables, and chaining requests. By the end of the course, you'll not only understand how APIs work, but you'll also be able to test them effectively, ensuring they perform as expected.\nPostman is an incredibly powerful tool, and this course is designed to help you unlock its full potential. We'll guide you through real-world examples, showing you how to test APIs in a practical and efficient manner. Whether you're testing RESTful APIs or SOAP services, you'll gain the skills needed to handle any testing scenario. Plus, with our focus on practical learning, you'll be able to apply what you've learned immediately, giving you a competitive edge in your career.\nThis course is perfect for beginners who are just starting out in the world of API testing. However, even if you have some experience, this course will help you refine your skills and learn new techniques that you may not have encountered before. With our step-by-step approach, you'll find that API testing is not as intimidating as it seems. In fact, with the right guidance, it can be an exciting and rewarding skill to master.\nDon't wait until you're left behind. Take control of your future by mastering API testing with Postman. Enroll in the \"Postman Crash Course For Beginners | Learn API Testing\" today and unlock the doors to a world of opportunities in the tech industry. Your journey to becoming an API testing pro starts here!",
      "target_audience": [
        "Beginners who want to learn about API testing",
        "Developers looking to enhance their testing skills",
        "QA testers wanting to add API testing to their skillset",
        "Anyone interested in learning how to use Postman",
        "Tech enthusiasts curious about APIs and how they work"
      ]
    },
    {
      "title": "Everything for Software Tester",
      "url": "https://www.udemy.com/course/everything-for-software-tester/",
      "bio": "Manual | Database Testing | Unix | Basics of Selenium & Jmeter and SoapUI",
      "objectives": [],
      "course_content": {
        "Table Structure - Customers": [
          "Table Structure - Customers",
          "Ask Question from Trainer"
        ],
        "Basics for SQL : For Database Testing": [
          "Table Structure : Office",
          "Setup Table and Data for Practice",
          "All Videos and YouTube...! Good to Know",
          "Select All data from table",
          "Select data from few columns",
          "Select Unique data from table",
          "Group Functions",
          "Select Data with Sorting",
          "Select Data with where clause",
          "Select Data with Conditional OR"
        ],
        "Basics of Server Side Testing : Unix Commands": [
          "Why Tester need to learn Unix ?",
          "Basic Commands",
          "Working with Log file",
          "Process command",
          "Data Backup commands",
          "Working with Memory",
          "File Permission"
        ],
        "Bug Reporting and Test Management using ALM and JIRA": [
          "SetUp ALM Account for Practice",
          "Create Test Case",
          "Report a new Defect"
        ],
        "Bug Reporting using JIRA": [
          "Search Issues in JIRA",
          "Report a new defect in JIRA"
        ],
        "Java Basics : For Software Testers": [
          "Eclipse basics",
          "Start Java programming - Project & Package",
          "Variables & Constant",
          "Class & Object",
          "Methods in details",
          "Constructors",
          "Condition handling",
          "For Loop",
          "While Loop",
          "For Each loop"
        ]
      },
      "requirements": [
        "Basic knowledge of Windows OS",
        "Basic understanding of Testing Concepts"
      ],
      "description": "This course is specially designed for Software Testers, it cover almost all areas which are must for Software Testers\nWe started by going through Software Testing Basics like Quality Assurance, Quality Control, Software Development Life Cycle and Software Testing Life Cycle. And, level up by understanding Software Testing Levels like Unit Testing, Integration Testing, System Testing and Acceptance Testing.\nThen, check out the various Software Testing Types like Smoke Testing, Functional Testing, Usability Testing, Security Testing, Performance Testing, Regression Testing and Compliance Testing.\nThis course covers :-\n\nTesting Fundamentals\nSoftware Testing - Introduction - Importance\nSeven Fundamental Principles of Testing\nSDLC Vs STLC\nSoftware Testing Life Cycle - STLC explained\nTypes of Testing\nManual Testing Tutorials for Beginners\nAutomation Testing\nUnit Testing\nIntegration Testing\nSystem Testing\nSmoke and Sanity Testing\nWhat is Regression Testing?\nNon - Functional Testing\nTestCase Development\nFirst Steps Test Case Development\nTest Scenario\nTest Case Specifications\nTest Basis\nTraceability Matrix\nTesting Techniques\nEquivalence Partitioning & Boundary Value Analysis\nDecision Table Testing\nState Transition Diagram\nUse Case Testing\nTesting Review\nTest Management & Control",
      "target_audience": [
        "Freshers looking opportunity in Software Testing",
        "Manual Tester, looking opportunity in automation testing"
      ]
    },
    {
      "title": "Yessensetial Selenium",
      "url": "https://www.udemy.com/course/yessensetial-selenium/",
      "bio": "Selenium WebDriver using Java, with Web and DevOps Mini",
      "objectives": [
        "Java: Program at ease in Java, from basic to advanced level. Gain thorough and in-depth understanding of concepts - be it Arrays, Collections or Generics.",
        "GIT: Effectively use GIT commands to manage daily SCM (Source Code Management) related tasks, essential for automation engineers.",
        "Maven: Set up and build Selenium automation project using Maven and pom xml",
        "Web: Understand the components of Web Pages - HTML, JavaScript, CSS",
        "JavaScript: Program in JavaScript to complement and aid the automation of web pages",
        "CSS: Write simple to highly complex CSS Selector expressions to locate elements on web page",
        "XPATH: Write simple to highly complex XPATH Query expressions to locate elements on web page",
        "Selenium: Automate web pages using Selenium covering HTML/HTML 5 elements",
        "Selenium: Understand the nuances of Selenium Waits and use the relevant wait in automation script",
        "Selenium: Develop scripts applying design patterns - Data-driven, Keyword-Driven, Page Object Model",
        "TestNG: Use TestNG framework to write tests, organize test suites and configure simple to complex test runs",
        "Selenium: Develop Script handling a variety of pop ups and frames",
        "Selenium: Use grid for distributed and parallel execution of scripts",
        "Interview Prep: Prep yourself up for job search with interview questions at topic level"
      ],
      "course_content": {
        "Introduction": [
          "Why should I buy this course?!",
          "How to get the best out of this course?"
        ],
        "Getting Started": [
          "Theory of Automation",
          "Software Installation & Set up"
        ],
        "Green Track - DevOps Mini": [
          "{ DevOps } GIT - Part 1",
          "{ DevOps } Maven - Part 1",
          "Shorts - GIT",
          "Shorts - Maven"
        ],
        "Green Track - Java": [
          "{ Java } OOP - Part 1",
          "{ Java } Statements & Operators",
          "{ Java } Arrays",
          "{ Java } String Theory - Vanilla String, String Builder & String Buffer",
          "{ Java } Generics",
          "{ Java } Collections - List & Map",
          "Shorts - OOP 1.1",
          "Shorts - OOP 1.2",
          "Shorts - Statements & Operators",
          "Shorts - Collections 1"
        ],
        "Green Track - The Web": [
          "{ The Web } Browser's Developer Tools Tour",
          "{ The Web } HTML",
          "{ The Web } DOM [Document Object Model]",
          "{ The Web } CSS Selector - Part 1 [ID, Class & Type Selectors]",
          "{ The Web } XPATH - Part 1 [Theory & Basic]",
          "{ The Web } JavaScript - Part 1"
        ],
        "Green Track - Selenium": [
          "{ Selenium } Locators & Actions on Elements - Part 1",
          "{ Selenium } App Synchronization - Part 1 [Sleep & Implicit Wait]",
          "{ Selenium } TestNG Framework - Part 1 [Tests & Fixtures]",
          "{ Selenium } Handling Inlays & Overlays - Part 1 [Windows & Alerts]",
          "{ Selenium } Design Patterns - Part 1 [Theory]"
        ],
        "Amber Track - Java": [
          "{ Java } OOP - Part 2",
          "{ Java } Enums (Enumeration)",
          "{ Java } Exception Handling - Part 1 [try-catch-finally]",
          "{ Java } File Handling - Part 1 [Read/Write Text Files]",
          "{ Java } File Handling - Part 2 [Java Properties Files]",
          "{ Java } Strings - Part 2 [String Builder]",
          "Shorts - OOP 2"
        ],
        "Amber Track - The Web": [
          "{ The Web } CSS Selector - Part 2 [Attribute Selectors]",
          "{ The Web } XPATH - Part 2 [Intermediate]",
          "{ The Web } JavaScript - Part 2"
        ],
        "Amber Track - Selenium": [
          "{ Selenium } Locators & Actions on Elements - Part 2",
          "{ Selenium } File Upload & Download - Part 1 [Direct Method]",
          "{ Selenium } App Synchronization - Part 2 [WebDriver Wait]",
          "{ Selenium } Handling Inlays & Overlays - Part 2 [Frames]",
          "{ Selenium } TestNG Framework - Part 2 [Data Handling, Dependency & Priority]",
          "{ Selenium } Browser Configuration - Part 1",
          "{ Selenium } Design Patterns - Part 2 [Data Driven]"
        ],
        "Red Track - Java": [
          "{ Java } OOP - Part 3",
          "{ Java } Collections - Set",
          "{ Java } Wrapper Classes",
          "{ Java } Exception Handling - Part 2 [Custom Exceptions]",
          "{ Java } File Handling - Part 2 [XML, JSON & EXCEL]",
          "{ Java } Functional Interfaces",
          "Full \"How To\" Solution Code"
        ]
      },
      "requirements": [
        "A bit of logical thinking, just it would be required for learning anything technical. Just that.",
        "No technical knowledge nor any specific programming skills required.",
        "Laptop or desktop, with a min 4 GB RAM."
      ],
      "description": "Course Features\nDesigned for beginner with no-technical background to intermediate level engineers\nUses template-based coding approach to help beginners get over the \"codephobic\" curve\nCourse delivered in three tracks to take the learner effortlessly from ZERO to Level 1 Automation Engineer to Level 2, and then to Level 3\nCovers interview prep for each topic at the end of the session\nUses a curated website/app dedicated for the learners to provide a seamless hands on experience\nSession split explicitly into sections aiding the learning process\n\n\nCurriculum\nCourse covers 4 main parts - Core Java 8, The Web, Selenium WebDriver 4 and DevOps Mini\nCore Java covers from the very basics to OOPs to Generics to Collections\nThe Web covers HTML, CSS Selector, XPATH, DOM and JavaScript\nCovers in-depth analysis of CSS Selector and XPATH layer by layer\nKeeps JavaScript light-weight for the learner, to the extent of how to use it where Selenium could not help automation\nDevOps Mini covers GIT, Maven, and Grid\nOnboards learners to GIT and Maven in the very beginning of the course, encouraging them to practice what they will be needing on Day #1, as automation engineer!\nProvided Resources include cheat sheets, templates, full code solutions, and project\nBusts common misconceptions out to help learner understand the concepts thoroughly",
      "target_audience": [
        "Any non-technical, no programming background person aspiring to become an Automation Engineer.",
        "[Career Progression] Functional Testers who want to transform into automation role",
        "[Automation Project Management] Test Managers who want to transform into a techno-functional role"
      ]
    },
    {
      "title": "A Glimpse into the technology agnostic tool - Selenium",
      "url": "https://www.udemy.com/course/seleniumthepowerhouse/",
      "bio": "Selenium with Java, Ruby, Python, CSharp and JavaScript",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "The Technolgy Agnostic Powerhouse Tool - Selenium",
          "The three pillars of Selenium",
          "Login Logout with Java",
          "Login Logout with - Python, Ruby, Csharp and JavaScript",
          "Conclusion"
        ]
      },
      "requirements": [
        "Knowledge of functional testing and basic programming experience in any language. Idea of what unit testing is all about."
      ],
      "description": "The beauty of selenium is, that it supports itself getting programmed on any programming language as long as its drivers are available in it.\nIt runs tests on any browser as long as they are w3C compliant\nAnd it executes on any operating system.\n\n\nIn this talk we will understand to look at Selenium as a web browser driving tool, which it is actually. We will understand that it doesn't matter which programming language you use, the concepts around all languages and their unittest remains the same.\nLanguages covered - Java, C#, Python, Ruby and JavaScript.\nBrowsers - Chrome and Firefox\nOS for demo - Windows.",
      "target_audience": [
        "Anyone who wants to know about the power of the web driving tool Selenium"
      ]
    },
    {
      "title": "Master Appium 2.0: Parallel Testing on iOS and Android",
      "url": "https://www.udemy.com/course/master-appium-20-parallel-testing-on-ios-and-android/",
      "bio": "Appium 2.0 | Parallel testing | iOS | Android | Virtual & Real Device | Test Automation Framework | Real World Project",
      "objectives": [
        "iOS and Android Mobile Test Automation on Appium 2.0",
        "Build Parallel Testing Framework and perform parallel testing on iOS and Android platforms",
        "Build and Expand Mobile Test Automation Framework",
        "Hands-On Test Automation on a Real-World Project",
        "Setup and Learn Test Automation on iOS and Android Real devices",
        "Practice along with exercises and quizzes",
        "Bonus Interview questions, and resume tips"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Link to the Github Project - MobileTestAutomation"
        ],
        "Course Overview": [
          "Course Overview"
        ],
        "Appium 2.0 Architecture": [
          "Appium 2.0 Complete Architecture",
          "Drivers supported by Appium 2.0",
          "What's new in Appium 2.0",
          "Quiz on Appium 2.0 Architecture"
        ],
        "Getting Your System Ready": [
          "Getting your System ready - Introduction",
          "Mac Installation",
          "Windows Installation",
          "Important Message for Windows Users"
        ],
        "My First Test Case - Android": [
          "Manually install an application on Emulator",
          "Automation - Running your first test",
          "Summary"
        ],
        "Android Locators and Appium Inspector": [
          "Introduction to locators and Appium Inspectors",
          "Appium Inspector",
          "Actions (SendKeys, Scroll)"
        ],
        "Inheritance, TestNG & Code Refactoring": [
          "Locators",
          "Introduction",
          "Inheritance at a glance",
          "Code Refactoring",
          "Introduction to TestNG",
          "Running tests via TestNG",
          "Summary"
        ],
        "Android - Advanced Actions": [
          "Introduction to Advanced Actions - LongClickGesture",
          "Swipe - Advanced Action",
          "Drag - Advanced Action",
          "Date Picker - Advanced Action",
          "Handling Popups, Checkboxes, Switches - Advanced Action",
          "Practice Test Case - Advanced Action"
        ],
        "Android - Device Level Actions": [
          "Introduction to Android Device Level Actions",
          "Get System Time",
          "Setup Fingerprint Part 1",
          "Setup Fingerprint Part 2",
          "Introduction to Android Activity, BundleID",
          "Toggle Airplane Mode"
        ],
        "My First Test Case - iOS": [
          "Introduction to iOS Simulator",
          "WebDriver Agent and First Automation Test run",
          "Connect to iOS simulator via Appium Inspector"
        ]
      },
      "requirements": [
        "No programming experience is needed."
      ],
      "description": "*** Updated on November 2023 ***\n\n\nWelcome to our comprehensive course on Appium 2.0, the industry-leading mobile software testing framework. In this course, you will dive deep into the world of mobile testing, mastering the latest version of Appium and harnessing the power of parallel testing.\nYou will use Java as the programming language in this course.\nWhether you're an experienced tester or a newcomer to the field, this course is designed to equip you with the knowledge and skills needed to excel in mobile app testing.\nKey Highlights:\n\n\nAppium 2.0 Mastery: Begin by mastering the latest features and enhancements in Appium 2.0, gaining a solid foundation in mobile automation testing.\nParallel Testing: Learn how to dramatically reduce test execution time by running tests in parallel, a critical skill for any modern test engineer.\niOS and Android Testing: Explore in-depth testing on both iOS and Android platforms, ensuring your app is robust and reliable across different devices.\nTest Automation Frameworks: Discover the best practices for creating and maintaining efficient test automation frameworks that are easily scalable.\nReal-World Project: Apply your knowledge to a hands-on, real-world project, where you will tackle practical challenges faced by mobile testers in today's fast-paced development environment.\n\n\nBy the end of this course, you will be able to confidently conduct parallel testing on both iOS and Android Virtual and Real devices using the latest Appium 2.0 features.\n\n\nYou will also have a solid understanding of creating and managing test automation frameworks, preparing you to excel in real-world projects and contribute to the success of your development team.\nDon't miss this opportunity to boost your mobile app testing skills and advance your career. Enroll now and embark on your journey towards becoming a proficient Appium 2.0 and parallel testing expert!",
      "target_audience": [
        "Test Engineers and QA Professionals: Individuals seeking to enhance their expertise in mobile test automation, specifically on iOS and Android platforms using Appium 2.0.",
        "Automation Testers: Professionals who want to deepen their skills in automated testing, with a focus on parallel testing and the latest features of Appium 2.0.",
        "Mobile App Developers: Developers interested in gaining a comprehensive understanding of mobile test automation to ensure the robustness and reliability of their applications.",
        "Quality Assurance Managers: Managers who want to stay current with the latest advancements in mobile test automation and guide their teams in implementing efficient testing strategies.",
        "Software Developers: Those looking to broaden their skill set by acquiring practical knowledge in building and expanding mobile test automation frameworks.",
        "Manual QA's seeking to transition to Test Automation"
      ]
    },
    {
      "title": "PCET - Certified Entry-Level Tester with Python - Mock Exams",
      "url": "https://www.udemy.com/course/pcet-certified-entry-level-tester-with-python-exams/",
      "bio": "Prepare for the PCET Certification with Expertly Designed Mock Exams and Python Testing Essentials!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "PCET - Certified Entry-Level Tester with Python\nEmbark on your journey to becoming a certified software tester with this course. Designed for aspiring QA professionals, beginner testers, and Python enthusiasts, this course is tailored to prepare you for the PCET certification. With six expertly crafted mock exams, this course offers comprehensive preparation to help you build confidence and excel in your certification journey.\nThe mock exams are structured to mirror the actual PCET certification exam, covering all essential topics, including software testing fundamentals, test case design, defect management, Python programming basics, and implementing test automation scripts. These exams are designed to assess your understanding of both foundational concepts and practical applications, ensuring you’re ready to tackle real-world testing challenges.\nEach question comes with a detailed explanation of the correct answer, providing deeper insights into key concepts and clarifying any areas of confusion. These explanations serve as an invaluable learning resource, helping you reinforce your knowledge of Python and its role in software testing while honing your analytical skills.\nWhether you’re new to software testing or looking to validate your skills, this course is your ultimate guide. With these mock exams, you’ll gain the knowledge, practical insights, and confidence needed to achieve the PCET certification and take the next step in your testing career. Start preparing today and set yourself up for success!\n\n\nCan I retake the practice tests?\nYes, you can attempt each practice test as many times as you like. After completing a test, you'll see your final score. Each time you retake the test, the questions and answer choices will be shuffled for a fresh experience.\nIs there a time limit for the practice tests?\nYes, each test includes a time limit of 120 seconds per question.\nWhat score do I need to pass?\nYou need to score at least 75% on each practice test to pass.\nAre explanations provided for the questions?\nYes, every question comes with a detailed explanation.\nCan I review my answers after the test?\nAbsolutely. You’ll be able to review all your submitted answers and see which ones were correct or incorrect.\nAre the questions updated frequently?\nYes, the questions are regularly updated to provide the best and most relevant learning experience.\n\n\nAdditional Note: It’s highly recommended that you take the practice exams multiple times until you're consistently scoring 90% or higher. Don’t hesitate—start your preparation today. Good luck!",
      "target_audience": [
        "Aspiring Software Testers: Individuals starting their careers in software testing who want to learn basic testing methodologies and tools.",
        "Junior QA Professionals: Entry-level QA specialists looking to enhance their skills with Python scripting for testing purposes.",
        "Beginner Python Programmers: Python enthusiasts seeking to understand how Python can be used for software testing in real-world scenarios.",
        "Students and Recent Graduates: Those from computer science, IT, or software engineering backgrounds aiming to kickstart their careers in software testing.",
        "Developers Transitioning to Testing: Developers or programmers who want to pivot into a quality assurance or software testing role.",
        "Freelancers and Independent Testers: Individuals offering independent testing services who want to add credibility to their skills and knowledge of Python testing.",
        "Test Automation Beginners: Individuals looking to step into test automation with a focus on learning Python as a testing tool."
      ]
    },
    {
      "title": "The Complete Course of SpecFlow",
      "url": "https://www.udemy.com/course/specflow-course/",
      "bio": "Learn Specflow in a Professional way from Scratch. Become an expert in Testing with BDD, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master Specflow, to be able to seamlessly integrate SpecFlow into software development workflows from scratch",
        "You will be able to conduct Specflow projects step by step , understanding all the logic and ending with advanced practical examples and complete projects",
        "You will Grasp the essence of BDD, set up the development environment, and understand SpecFlow's fundamentals",
        "You will learn to Create SpecFlow projects and master the art of composing feature files and step definitions",
        "You will Understand and practice writing scenarios using the syntax and structure of Gherkin language",
        "You will Implement and leverage parameterization techniques effectively across scenarios",
        "You will Craft step definitions, manage dependencies, and automate parameterization for diverse scenarios",
        "You will Utilize hooks, execute scenario blocks, and organize scenarios efficiently using tags",
        "You will Dive into advanced features like Context injection and table transformation for efficient use",
        "You will Explore Page Object Model, generic methods, and Enum classes for enhanced SpecFlow practices",
        "You will Learn effective strategies for writing maintainable feature files, collaborating with stakeholders, and troubleshooting in SpecFlow",
        "You will Master GitHub usage for code management, version control, and seamless deployment",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the hands-on projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to SpecFlow": [
          "Welcome to The Complete Course of SpecFlow",
          "Course Overview",
          "Understanding BDD (Behavior Driven Development)",
          "Introduction Quiz",
          "Installing and Setting up the development environment",
          "Introduction to SpecFlow",
          "Quiz"
        ],
        "Writing Your First SpecFlow Scenario": [
          "Creating a new SpecFlow project",
          "Writing feature files & Step definitions"
        ],
        "Gherkin Language": [
          "Understanding the Gherkin syntax",
          "Practicing Gherkin Language",
          "Quiz"
        ],
        "Parameterization in Gherkin": [
          "Parameterization Part-1",
          "Parameterization Part-2",
          "Parameterization Part-3",
          "Quiz"
        ],
        "Step Definitions": [
          "How to create step definitions",
          "How to add dependencies",
          "Automation of parametrization-Inline data driven scenarios and finding x-path-1",
          "Automation of parametrization-Inline data driven scenarios and finding x-path-2",
          "Automation of parametrization -Table based or example keyword based data driven"
        ],
        "Hooks and Tags": [
          "Understanding Hooks",
          "Adding Hooks and Tags",
          "Before scenario block & After scenario block",
          "Running Feature File and scenario",
          "Quiz"
        ],
        "Advanced SpecFlow Features-1": [
          "What is Context injection",
          "Implementation of Context injection using IObjectContainer Part-1",
          "Implementation of Context injection using IObjectContainer Part-2",
          "Tables in Specflow, Transformation of Table to Dic Part-1",
          "Tables in Specflow, Transformation of Table to Dic Part-2",
          "Quiz"
        ],
        "Advanced SpecFlow Features-2": [
          "What is Page Object Model",
          "POM Practice Part-1",
          "POM Practice Part-2",
          "Generic Methods Part-1",
          "Generic Methods Part-2",
          "Enum Class",
          "Quiz"
        ],
        "Best Practices and Tips": [
          "Tips for writing maintainable feature files",
          "Strategies for effective collaboration with non-technical stakeholders",
          "Debugging and troubleshooting in SpecFlow"
        ],
        "Continuous Integration and Deployment": [
          "How to create an account on github",
          "How to install github desktop",
          "How to create github repository",
          "How to clone github repository",
          "How to Push your code-1",
          "How to Push your code-2"
        ]
      },
      "requirements": [
        "Basic knowledge of software testing concepts and practices will aid in comprehending the course material, but the course starts from scratch",
        "Install and prepare the needed environment to follow the practical sessions (if you don't know how, don't worry, it's very easy, free, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a Specflow professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that Software Testers/QA Professionals, Developers, Quality Engineers, BDD Enthusiasts, Project Managers/Stakeholders,... can learn Specflow from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in development, we have realized that nowadays mastering Specflow for test automation is very necessary in Software Testing, Behavior-Driven Development (BDD), Agile Development and Web and Application Testing. Knowing how to use this tool can give you many job opportunities and many economic benefits, especially in the world of test automation.\nThe big problem has always been the complexity to perfectly understand Specflow requires, since its absolute mastery is not easy. In this course we try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step, detailed and hands-on examples of every concept.\nWith almost 7 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Specflow BDD. The course will teach you how to proficiently apply Behavior-Driven Development principles, automate testing scenarios, collaborate effectively, and integrate SpecFlow into software development workflows in a practical way, from scratch, and step by step.\nWe will start with the installation and setup of the needed work environment on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to Specflow and course dynamics\nUnveiling Behavior Driven Development with SpecFlow, Specflow BDD\nMastering Feature Files and Step Definitions\nCrafting Scenarios with Gherkin\nEffective Scenario Customization\nManaging Dependencies and Automation\nScenario Execution and Organization\nContext Injection and Table Transformation\nPOM, Generics, and Enum Mastery\nOptimizing Feature Files and Collaboration\nStreamlining Deployment with SpecFlow\nShowcasing Comprehensive SpecFlow Implementation\nMastery and application of absolutely ALL the functionalities of Specflow\nQuizes, Practical exercises, complete projects and much more!\nIn other words, what we want is to contribute our grain of sand and teach you all those things that we would have liked to know in our beginnings and that nobody explained to us. In this way, you can learn to build and manage a wide variety of projects and make versatile and complete use of Specflow. And if that were not enough, you will get lifetime access to any class and we will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning Specflow has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used Specflow before",
        "Software Testers/QA Professionals, Developers, Quality Engineers, BDD Enthusiasts, Project Managers/Stakeholders,... who want to learn a new way to automate testing scenarios",
        "Intermediate or advanced Specflow users who want to improve their skills even more!"
      ]
    },
    {
      "title": "ISTQB Certified Tester - Foundation Level v4.0 ( CTFL )",
      "url": "https://www.udemy.com/course/istqb-certified-tester-foundation-level-v40-ctfl/",
      "bio": "Get a solid start to your career by learning the basic principles and processes of software testing. Ideal for beginners",
      "objectives": [
        "Students learn the fundamental stages of software testing and understand their roles in the process.",
        "Students identify errors by applying black-box and white-box testing techniques.",
        "Students learn how to create a test plan and risk-based testing strategies.",
        "Students contribute to error resolution processes by learning correct error reporting and analysis methods."
      ],
      "course_content": {
        "Education Promotional Video": [
          "Education Promotional Video"
        ],
        "Welcome to Software Testing Training": [
          "Welcome to Software Testing Training"
        ],
        "What is Software Testing": [
          "What is Software Testing"
        ],
        "Testing Principles": [
          "Testing Principles"
        ],
        "Test Activities and Tasks": [
          "Test Activities and Tasks"
        ],
        "Essential Skills and Good Practices in Testing": [
          "Essential Skills and Good Practices in Testing"
        ],
        "Dev-Ops and Testing": [
          "Dev-Ops and Testing"
        ],
        "Testing in the Software Testing Lifecycle": [
          "Testing in the Software Testing Lifecycle"
        ],
        "Testware": [
          "Testware"
        ],
        "Test Levels and Test Types": [
          "Test Levels and Test Types"
        ]
      },
      "requirements": [
        "There are no prerequisites for taking the course. The course is suitable for complete beginners with no experience in software testing. Participants only need to have basic computer skills. No special tools or equipment are required, all necessary information and resources will be provided during the course. This course is an ideal opportunity for anyone interested in software testing and looking to start their career in this field. An easy-to-understand curriculum is provided, minimizing barriers for beginners."
      ],
      "description": "This course is an ideal starting point for industry professionals, IT professionals, those interested in information technologies, and anyone who wants to build a career in software testing or understand and implement testing processes in software projects and is not satisfied with their current profession and wants to transition to the software industry. Starting from the basic principles of software testing, you will learn step by step topics such as manual testing techniques, testing processes, error management and test automation. Throughout the course, you will reinforce your knowledge with real-life scenarios and practical examples and prepare for the ISTQB Foundation Level exam.\n\n\nTake this course to understand why software testing is so important, discover how you can contribute to the quality software development process and gain competencies that will make a difference in the business world. With skills such as test planning, creating test strategies, using test tools and effective error reporting, you will be ready to play a critical role in software projects. In addition, by the end of the course, you will have learned the best testing practices in the industry and developed yourself professionally.\n\n\nThis course provides comprehensive preparation for the ISTQB Foundation Level exam. With lessons covering fundamental topics such as software testing processes, testing techniques, error management and test automation, you will be fully equipped for the exam. In addition to many AI-supported videos, you will have the opportunity to reinforce your knowledge of the topics you may encounter in the exam with challenging 20-question practice tests.\n\n\nWith our training and practice exams for the ISTQB exam, you will test your knowledge and be ready for the exam day!\n\n\n\n\nThis training content was created from the publications on the ISTQB site. The relevant resource can be found on the ISTQB site.",
      "target_audience": [
        "This course is designed for individuals who want to build a career in software testing or gain basic knowledge in this field. It is suitable for individuals who are interested in software testing, who want to learn manual and automation testing processes, who work in the IT field or who aim to work. In addition, professionals who are involved in the software development process, such as software developers, project managers and business analysts, and who want to better understand testing processes can also benefit from this course. It is also a suitable starting point for individuals who do not have a technical background and are new to the software world."
      ]
    },
    {
      "title": "Beginning Selenium WebDriver and Java Training",
      "url": "https://www.udemy.com/course/beginning-webdriver-and-java/",
      "bio": "This is a beginning course for WebDriver test automation in the Java language using JUnit, TestNG, ANT, and Maven.",
      "objectives": [
        "At the end of this course you will be able create Page Objects using Selenium-WebDriver commands.",
        "Locate WebElements by HTML IDs and names, XPath and CSS Selectors.",
        "Run test scripts on every browser from the command line using ANT and Maven.",
        "Pass TestNG suite parameters to test scripts",
        "Model and create Page Objects and use the Page Factory",
        "Work with dynamic AJAX elements with WebDriverWait",
        "Create test scripts using the JUnit and TestNG unit test frameworks",
        "Manage and build the Java project using ANT and Maven POM"
      ],
      "course_content": {
        "WebDriver, Java, JUnit and ANT Project": [
          "About the instructor",
          "Document - Create a WebDriver, Java, JUnit and ANT Project",
          "Video - Install Java, JUnit, ANT and WebDriver",
          "Video - Create a WebDriver JUnit Test Script",
          "Video - Run a WebDriver JUnit Test Script from ANT",
          "Video - Inspecting WebElements with the Chrome browser developer tools",
          "Video - Inspecting WebElements with the Safari browser developer tools",
          "Video - Inspecting WebElements with the Opera browser developer tools",
          "Video - Inspecting WebElements with the Firefox/Firebug browser developer tools"
        ],
        "WebDriver, Java, TestNG and Maven Project": [
          "Document - Create a WebDriver, Java, TestNG and Maven Project",
          "Video - Install Maven and TestNG",
          "Video - Create a WebDriver TestNG Script",
          "Video - Run a WebDriver Test Script from TestNG and Maven"
        ],
        "Page Objects, Multi-Threading, Run Tests in Parallel on Multiple Browsers": [
          "Video - Firefox, Chrome, Safari, Internet Explorer browsers and Multi-Threading",
          "Video - Create a Test Script and Page Objects with the WebDriver Page Factory",
          "Document - Create WebDriver Page Objects in Java"
        ]
      },
      "requirements": [
        "Basic Java familiarization",
        "Windows, Mac, or Linux computer"
      ],
      "description": "This beginning course will walk the learner through the basics of Selenium-WebDriver test automation in the Java programming language.\nThis includes common WebDriver commands, WebDriverWait and AJAX elements, invoke browsers in parallel using FirefoxDriver, ChromeDriver, SafariDriver, and InternetExplorerDriver. Analyze web pages to model and create Page Objects, and use the Page Factory. Use locator strategies to identify WebElements by ID, Name, CSS Selectors and XPath.\nExplore the JUnit and TestNG unit test frameworks for UI test scripts, test suites, parameters, execution, and reporting. ANT and Maven project management, builds, and command line execution.\nThis course includes 3.5 hours of instructional videos and 25 pages of instructional procedures including complete project code.",
      "target_audience": [
        "Quality Assurance professionals and Software Testers interested in learning WebDriver to transition from manual testing to automated testing"
      ]
    },
    {
      "title": "API Testing and Automation with real time Project APIs",
      "url": "https://www.udemy.com/course/api-testing-and-automation-with-postman-with-real-time-apis/",
      "bio": "Learn testing and automating real Auto Insurance APIs and gain practical skills for your career (Free Ebook included)",
      "objectives": [
        "3. Elevate your API testing and automation skills with hands-on training and real-time Auto Insurance data.",
        "Advanced knowledge of API testing: You will learn advanced techniques and methodologies for API testing, including functional testing, integration testing etc.",
        "Automation skills: The course will teach you how to automate API testing with Postman, making you more efficient and effective in your testing activities.",
        "Reduced testing time: Automation can significantly reduce the time it takes to test APIs, allowing you to complete testing faster and meet project deadlines.",
        "You'll get recommendations and professional advise on API Testing and Automation as this course is prepared by seasoned QA Professional.",
        "Career growth: Completing the course and acquiring new skills can open up new career opportunities in API testing and automation.",
        "Industry recognition: With knowledge of Postman and API testing, you will be recognized as an industry expert and sought after by companies looking to improve t"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Introduction",
          "Insurance Company APIs Intro Part 1",
          "Insurance Company APIs Intro Part 2"
        ],
        "Setting up your first API": [
          "API Access Credentials form",
          "API Access Credentials form",
          "How to generate a token?",
          "Generating another API Request"
        ],
        "API Fundamentals": [
          "What is an API",
          "Why do we need APIs?",
          "Why we need APIs?",
          "API Examples",
          "How does API work?",
          "API Components Overview",
          "API Components",
          "API URL and URI",
          "API Parameters",
          "API Endpoints",
          "Understanding API Parameters",
          "API protocols and architectures",
          "What are the types of APIs and their differences?",
          "Client-Server model",
          "Understanding Status code in API response",
          "API Authorization",
          "Understanding Authorization in API request",
          "API Methods",
          "API Body or Payload",
          "API Response and Status codes",
          "Understanding API response",
          "Client and Server relationship",
          "Examples of APIs Used in Our Daily Lives",
          "Data Validation",
          "Data Validation",
          "Eight Major Benefits of Using APIs"
        ],
        "API Postman overview": [
          "Postman Intro",
          "Create First Request (Postman)",
          "Postman Logs"
        ],
        "API Get Endpoints": [
          "Understanding Get Endpoint",
          "Driver Get Endpoint",
          "Policy Get APIs",
          "Other APIs Get Endpoints"
        ],
        "Post APIs": [
          "Post API Intro",
          "Driver Post APIs",
          "Post Endpoint",
          "Vehicle Post API",
          "Policy Post Endpoints",
          "Driver Address Post API"
        ],
        "API Put and Patch Endpoints": [
          "Policy Put and Patch Endpoints",
          "Driver Patch Endpoint",
          "Vehicle Put and Patch Endpoints",
          "Driver address Put and Patch Endpoints",
          "Policy Coverage Put and Patch Endpoints",
          "Understanding Patch Endpoint",
          "Understanding Put Endpoint"
        ],
        "Delete APIs": [
          "Delete Endpoint",
          "Understanding delete Endpoint"
        ],
        "Software Quality Assurance Basics": [
          "Software Quality Assurance lifecycle",
          "What is Software Quality Assurance?",
          "Software Development Environments",
          "Software Requirement"
        ],
        "API Testing and Documentation": [
          "Understanding Environments",
          "Setting up Environments",
          "Understanding Postman Variable",
          "Variable Auto setup",
          "API Documentation Intro",
          "Driver API Doc Intro",
          "Vehicle API Doc Intro",
          "Policy API Doc Intro",
          "Driver Address API Doc Intro",
          "Policy Coverage API Doc Intro",
          "Driver First Name Validation Part 1",
          "Driver First Name Validation Part 2",
          "Driver First Name Validation part 3",
          "Driver First Name Validation part 4",
          "Validating Driver Last Name part 1",
          "Validating Driver Last Name part 2",
          "Validate Driver Email Name",
          "Validate Driver Email Name (Testing)",
          "Vehicle Post Endpoints intro",
          "Vehicle Year Validation Part 2",
          "Vehicle Year Validation Part 1",
          "Vehicle VIN Validation Part 1",
          "Vehicle VIN Validation Part 2",
          "Vehicle post registered state validation",
          "Policy Post Endpoint test cases",
          "Policy post Endpoint validation",
          "Test Case Documentation Format 2",
          "How to create a defect?",
          "What is a Defect?",
          "Understanding Test Case in Software Quality Assurnace",
          "Random Number Generation",
          "Homework: Please test other Driver API fields",
          "Additional Postman Validation functions",
          "Testing Homework"
        ]
      },
      "requirements": [
        "All beginners, immediate and advanced level folks are welcome. No programming experience required. All levels of students are welcome."
      ],
      "description": "In this course, you will learn everything you need to know about API testing and automation, and how it is implemented in real-time scenarios. This course is designed for beginners who want to learn API testing from scratch, as well as professionals who want to improve their API testing skills.\nWith this course, you will have access to real-time Auto Insurance company APIs, which will provide you with practical experience on API testing and automation. With over 13 years of API Testing and Automation experience, I will guide you through the entire process, from setting up your environment to creating and executing test cases, understanding API documentation, documenting test cases, and creating defects.\nThis course is packed with over 5 hours of engaging and informative content, including video lectures, research based articles, and hands-on exercises. By the end of the course, you will have a deep understanding of API testing and automation, and you will be able to apply this knowledge to your own projects and work.\nHere are some of the key topics you will learn in this course:\nFREE EBOOK on API Testing and Automation\nLearn and practice with real time Auto Insurance Company APIs\nUnderstanding the fundamentals of API testing and automation\nSetting up your environments and tools\nUnderstanding API documentation and requirements\nCreating test cases and executing them\nDocumenting API test cases\nCreating defects\nHow to test APIs rigorously\nTest automation using popular tools like Postman and Newman\nAdvanced techniques for API testing and automation\nPlus much more\nEnroll now and take the first step towards mastering API testing and automation with real-time Auto Insurance APIs!",
      "target_audience": [
        "Beginner-friendly tutorials: Most API Testing and Automation with Postman courses provide beginner-friendly tutorials and step-by-step guides that are easy to follow, making it ideal for beginners.",
        "Advanced techniques and methodologies: The course covers advanced techniques and methodologies for API testing and automation that are relevant to experienced professionals.",
        "Comprehensive coverage: The course covers a comprehensive range of topics related to API testing and automation, making it useful for both beginners and experienced professionals who want to refresh their knowledge.",
        "Hands-on practice exercises: The course typically includes hands-on practice exercises that allow beginners to gain practical experience and enable experienced professionals to improve their skills.",
        "Flexibility: Many courses offer flexible learning options, such as self-paced learning, that cater to different skill levels and learning preferences.",
        "Career advancement: Completing an API Testing and Automation with Postman course can help beginners kick-start their career in API testing, while experienced professionals can use the skills and knowledge gained to advance their career.",
        "Continuous learning: The course provides a platform for continuous learning and upskilling, enabling professionals to keep pace with the latest industry trends and best practices."
      ]
    },
    {
      "title": "Automatisation des tests avec Selenium (Java & Python )",
      "url": "https://www.udemy.com/course/automatisation-des-tests-avec-selenium/",
      "bio": "Apprenez Selenium à partir de zéro et créez un framework d'automatisation des tests",
      "objectives": [
        "Automatisez votre premier test Selenium WebDriver",
        "Exécuter des tests Selenium sur différents navigateurs",
        "Automatisation des test",
        "selenium",
        "selenium web driver avec java"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation",
          "Automatisation des tests",
          "C'est quoi Sélénium",
          "Carrière en automatisation des tests",
          "Merci"
        ],
        "Point essentiel avant d’entamer l’automatisation de test": [
          "Point essentiel avant d’entamer l’automatisation de test"
        ],
        "Java pour les testeurs :": [
          "Java pour les testeurs : Introduction",
          "Java pour les testeurs : IDE et création du premier projet",
          "Java pour les testeurs : Création du premier Script",
          "Java pour les testeurs : Manipulation des variables et les valeurs",
          "Java pour les testeurs : Manipulation des variables et les valeurs",
          "Java pour les testeurs : Correction Exercice 1",
          "Java pour les testeurs : Correction Exercice 2",
          "Java pour les testeurs : les méthodes",
          "Java pour les testeurs : les méthodes",
          "Java pour les testeurs : LES BOUCLES / LOOPS : FOR"
        ],
        "Automatisation avec Sélénium": [
          "Création d'un projet",
          "SELENIUM : Ajout des dépendances",
          "SELENIUM : Ajout des webdrivers",
          "Comment configurer ChromeDriver",
          "SELENIUM : premier exemple",
          "SELENIUM : Accepter les cookies",
          "Accepter les cookies : Exercice",
          "Accepter les cookies : Correction de l’exercice",
          "SELENIUM : Documentation",
          "SELENIUM : webdrivermanager",
          "SELENIUM : Manipulation du navigateur / browser",
          "SELENIUM : Manipulation du navigateur / browser-Partie 2",
          "Premier exercice :",
          "Correction de l'exercice",
          "SELENIUM : Fermeture de navigateur",
          "SELENIUM : Gestion du code - gestion du script",
          "SELENIUM : Manipulation du navigateur / browser-Partie 3",
          "SELENIUM : Manipulation du navigateur / browser-Partie 4",
          "SELENIUM : Position",
          "SELENIUM : Les captures d'écran / Screenshot",
          "SELENIUM : Introdcution WEB ELEMENT",
          "SELENIUM : WEBELEMENT - Find element",
          "SELENIUM : Exercice 2",
          "SELENIUM : Correction Exercice 2",
          "SELENIUM : Exercice 3",
          "SELENIUM : Correction Exercice 3",
          "SELENIUM : web Element - Partie 2",
          "Automatisation des tests : les points à savoir",
          "Automatisation des tests : les points à savoir - Partie pratique",
          "SELENIUM : Locator - Niveau avancé",
          "SELENIUM : WAIT",
          "SELENIUM : IMPLICIT WAIT",
          "SELENIUM : EXPLICIT WAIT",
          "Automatisation avec Sélénium : Gestion des Alertes – Partie 1",
          "Automatisation avec Sélénium : Gestion des Alertes – Partie 2",
          "Automatisation avec Sélénium : Les cas à cocher : Checkebox– Partie 1",
          "Automatisation avec Sélénium : Les cas à cocher : Checkebox– Partie 2",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Keyboard actions",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Keyboard actions",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Exercice",
          "Automatisation avec Sélénium : Simuler les actions du clavier : Correction",
          "Automatisation avec Sélénium : Automatiser le formulaire d’un site web",
          "Automatisation avec Sélénium : Correction Automatiser le formulaire d’un site we",
          "SELENIUM : Exercice 4 :",
          "SELENIUM :Correction exercice 4 :",
          "QCM - Automatisation avec Selenium"
        ],
        "Bonus : Création d’une anomalie avec Mantis Bug Tracker": [
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Création d’une anomalie : Introduction",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker",
          "Bonus : Création d’une anomalie avec Mantis Bug Tracker"
        ],
        "Automatisation avec Python": [
          "Automatisation avec Python"
        ],
        "Python pour les testeurs :": [
          "Python pour les testeurs : Introduction",
          "Python : Installation",
          "Python : Les numéros",
          "Python : les variables -Partie 1",
          "Python : Notre premier exercice",
          "Python : les variables -Partie 2",
          "Python : les variables booléennes",
          "Python : les listes",
          "Python : Dictionnaire"
        ],
        "Automatisation Selenium avec Python": [
          "Sélénium avec Python : installation",
          "Sélénium avec Python : Configuration",
          "Sélénium avec Python : installation webdriver",
          "Sélénium avec Python : installation webdriver",
          "Sélénium avec Python : Exercice",
          "Sélénium avec Python : Correction de l'exercice",
          "Sélénium avec Python : Création d'un projet",
          "Sélénium avec Python : Premier Script",
          "Sélénium avec Python : Lancer le script avec Firefox",
          "Sélénium avec Python : WebDriver Manager",
          "Sélénium avec Python : Configurer WebDriver Manager",
          "Sélénium avec Python : web element",
          "Sélénium avec Python : web element",
          "Sélénium avec Python : Exercice web element",
          "Sélénium avec Python : Correction de l'exercice web element",
          "Sélénium avec Python : La maximisation d'un navigateur Web",
          "Sélénium avec Python : Prendre une capture d'écran",
          "Sélénium avec Python : Rechercher avec xpath",
          "Sélénium avec Python : Rechercher avec xpath",
          "Sélénium avec Python : Rechercher avec Css Selector",
          "Sélénium avec Python : Rechercher avec Css Selector",
          "Sélénium avec Python : Rechercher avec Css Selector",
          "Félicitations"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Doublez votre salaire QA avec Selenium Webdriver !\nLa formation est à jour avec la dernière version de Sélénium 4.0\n\n\nVous avez la passion d'apprendre Sélénium mais vous n'avez aucune connaissance en codage ? Je réaliserai votre souhait avec mon enseignement facile et mon support de requête à vie via QA Forum.\n\n\n\n\nLe didacticiel de test Selenium WebDriver est créé pour les testeurs de logiciels manuels qui souhaitent apprendre les tests d'automatisation à partir de zéro avec Selenium WebDriver en utilisant Java.\n\n\nChaque étape est expliquée en détail, de la configuration de WebDriver à l'exécution de votre premier test de sélénium automatisé.\n\n\n\n\n\n\nAucune connaissance préalable de l'automatisation des tests, du pilote Web Selenium ou de Java n'est requise.\n\n\nCe cours est spécialement conçu pour les débutants complets dans l'automatisation des tests et Selenium WebDriver.\n\n\nCertaines des bases de Java sont expliquées et devraient suffire aux débutants complets pour commencer.\n\n\n\n\n\n\nDe plus en plus de postes d'assurance qualité logicielle nécessitent une certaine automatisation des tests, et dans de nombreux cas, l'expérience de Selenium WebDriver, il est important de pouvoir automatiser au moins des tests avec Selenium. Et Java est le langage le plus populaire pour écrire des tests avec Selenium WebDriver.\n\n\n\n\n\n\nÀ la fin de ce cours, les étudiants seront capables d'automatiser des tests logiciels avec Selenium WebDriver en utilisant Java et le framework TestNG. Exécutez des tests dans Chrome, Firefox et d'autres navigateurs. Reconnaître les différents échecs et exceptions des tests et savoir comment les corriger et les éviter. Utilisez les fonctionnalités de TestNG pour une meilleure structure de test et une maintenance simplifiée du framework.\n\n\nEt surtout, être en mesure de recevoir une promotion à l'emploi actuel ou d'obtenir un nouvel emploi qui nécessite du sélénium ou une autre expérience en automatisation des tests.\nÀ la fin du cours, vous maîtriserez les tests et la mise en œuvre de l'automatisation du sélénium avec succès sur votre lieu de travail ou vous atterrirez sur un emploi bien rémunéré",
      "target_audience": [
        "Toute personne souhaitant passer des tests manuels à l'automatisation des tests",
        "Développeurs de logiciels qui souhaitent apprendre Selenium WebDriver",
        "testeur",
        "QA",
        "TEST MANAGER"
      ]
    },
    {
      "title": "Aprenda Testes Unitários com Javascript",
      "url": "https://www.udemy.com/course/aprenda-testes-unitarios-com-jasmine-javascript/",
      "bio": "Crie testes unitários, aprenda a automatizar testes, versionar o código fonte, e tudo isso com aulas 100% práticas",
      "objectives": [
        "Criar testes unitários em Javascript com o Jasmine",
        "Desenvolver utilizando o BDD (Desenvolvimento Orientado por Comportamentos)",
        "Automatizar a execução dos testes unitários",
        "Versionar o código fonte e fazer entrega contínua (CI) do mesmo",
        "Entender todo o ciclo de desenvolvimento utilizando testes unitários"
      ],
      "course_content": {
        "Apresentação": [
          "Seja bem vindo!",
          "Objetivos do curso",
          "Instrutor",
          "Conhecimentos necessários"
        ],
        "Introdução": [
          "Introdução",
          "Importância do teste de software",
          "Como acompanhar o curso",
          "Importância do teste de software"
        ],
        "Requisitos do sistema": [
          "Apresentaçao",
          "Instalando o Sublime",
          "Instalando o Firefox",
          "Instalando o NodeJS/NPM (MacOs e Windows)",
          "Instalando o NodeJS/NPM (Linux)",
          "Instalando o Git (MacOs e Windows)",
          "Instalando o Git (Linux)",
          "Criando uma conta no GitHub",
          "Criando uma conta no Travis CI"
        ],
        "Jasmine": [
          "Apresentação",
          "Introdução",
          "Distribuição Standalone",
          "Suítes",
          "Testes (Specs)",
          "Verificações (Expectations)",
          "Comparações (Matchers)",
          "toBe",
          "toEqual",
          "toMatch",
          "toBeDefined",
          "toBeUndefined",
          "toBeNull",
          "toBeTruthy",
          "toBeFalsy",
          "toContain",
          "toBeLessThan",
          "toBeGreaterThan",
          "toThrow",
          "toThrowError",
          "Falha manual (Fail)",
          "Executando código antes e depois do teste/suíte",
          "beforeEach",
          "afterEach",
          "beforeAll",
          "afterAll",
          "Aninhando suítes",
          "Desabilitando suítes",
          "Desabilitando testes",
          "Spies",
          "spyOn",
          "toHaveBeenCalled",
          "toHaveBeenCalledTimes",
          "toHaveBeenCalledWith",
          "and.callThrough",
          "and.returnValue",
          "and.returnValues",
          "and.callFake",
          "and.throwError",
          "calls.any",
          "calls.count",
          "calls.argsFor",
          "calls.allArgs",
          "calls.all",
          "calls.mostRecent",
          "calls.first",
          "calls.reset",
          "createSpy",
          "createSpyObj",
          "Objeto 'jasmine'",
          "jasmine.any",
          "jasmine.anything",
          "jasmine.objectContaining",
          "jasmine.arrayContaining",
          "jasmine.stringMatching",
          "Jasmine Clock",
          "Criando um comparador personalizado"
        ],
        "Jasmine com NodeJS": [
          "Apresentação",
          "NodeJS",
          "Por que Jasmine com NodeJS?",
          "NPM e package.json",
          "Criando o projeto NodeJS",
          "Instalando o Jasmine para NodeJS",
          "Inicializando o Jasmine no projeto",
          "Criando o primeiro teste",
          "Executando os testes no NodeJS",
          "Adicionando testes de exemplo do Jasmine no projeto"
        ],
        "Automatização de testes com o Karma": [
          "Apresentaçao",
          "Karma",
          "Instalando o Karma no projeto ‘jasmine-node’",
          "Configurando o Karma no projeto",
          "Inicializando o Karma",
          "Executando o Karma com o NodeJS",
          "Browserify",
          "Configurando o Karma com o Browserify"
        ],
        "Versionamento de código fonte com Git/GitHub": [
          "Apresentação",
          "Importância do versionamento de código fonte",
          "Criando um repositório no GitHub",
          "Comando ‘git init’",
          "Comando ‘git status’",
          "Comando ‘git remote’",
          "Comando ‘git pull’",
          "Comando ‘git add’",
          "Comando ‘git commit’",
          "Comando ‘git push’",
          "Comando ‘git log’",
          "Comando ‘git diff’",
          "GitHub Desktop",
          "TBD - Trunk Based Development"
        ],
        "Integração Contínua com Travis CI": [
          "Apresentação",
          "Travis CI",
          "Criando o projeto no GitHub",
          "Integrando o Travis CI no projeto",
          "Adicionando o repositório GitHub no Travis CI"
        ],
        "Projeto prático utilizando BDD e todos os conceitos ensinados no curso": [
          "Apresentação",
          "O Projeto ‘Calculadora’",
          "BDD versus TDD",
          "BDD (Behavior Driven Development)",
          "Entendendo o processo de desenvolvimento",
          "Criando o repositório no GitHub",
          "Criando o projeto localmente",
          "Integrando o Jasmine",
          "Integrando o Karma",
          "Integrando o Browserify com o Karma",
          "Atualizando os scripts de teste no package.json",
          "Criando o arquivo de configuração do Travis CI",
          "Realizando o commit inicial",
          "Associando o projeto GitHub com o Travis CI",
          "Adicionando o Bootstrap ao projeto",
          "Criando os arquivos de design",
          "Efetuando o commit",
          "Criando o objeto ‘Calculadora’",
          "Implementando a função de adição",
          "Função de adição na prática",
          "Efetuando o commit da função de adição",
          "Implementando a função de subtração",
          "Função de subtração na prática",
          "Efetuando o commit da função de subtração",
          "Implementando a função de divisão",
          "Função de divisão na prática",
          "Efetuando o commit da função de divisão",
          "Implementando a função de multiplicação",
          "Função de multiplicação na prática",
          "Efetuando o commit da função de multiplicação",
          "Refatorando o objeto ‘Calculadora’",
          "Efetuando o commit da refatoração"
        ],
        "Conclusão": [
          "Próximos passos"
        ]
      },
      "requirements": [
        "Você deve ter noções de Javascript",
        "Você deve ter noções de desenvolvimento web com HTML e CSS",
        "Ter alguma noção sobre o que é teste de software"
      ],
      "description": "Esse curso tem como objetivo principal o ensino de testes unitários em Javascript, mas abordando não somente a criação dos testes unitários, e sim todo o ciclo de desenvolvimento orientado a testes, que inclui:\nDesenvolvimento de testes unitários em Javascript com Jasmine\nAutomatização de execução de testes com Karma\nIntegração contínua dos testes com o Travis CI\nControle de versão de código fonte com Git/GitHub\nDesenvolvimento guiado por comportamentos (BDD - Behaviour Driven Development)\nAtravés desse curso, você será capaz de se destacar no mercado como um desenvolvedor que além de criar um código mais confidente e de maior qualidade, também saberá seguir as melhores práticas de desenvolvimento de software utilizando como base os testes unitários.\nVeja a seguir como esse curso o tornará um profissional diferenciado no mercado de trabalho:\nAtravés da criação de testes unitários, o seu código será mais confidente, de melhor qualidade, fácil manutenção, e conterá menos bugs\nDesenvolvendo guiado por comportamentos fará com que seus testes sirvam como documentação de referência para o código desenvolvido\nCom a automatização de testes, seus testes sempre serão executados assim que uma alteração for realizada, o que aumenta significativamente sua produtividade.\nAtravés da Integração Contínua (CI), seu código poderá ir para produção diretamente após a realização de um commit\nCom o versionamento de código fonte, seu código ficará centralizado e sua produtividade ao trabalhar em equipe também aumenta.\nO curso é 100% prático, e todas as lições são executadas passo a passo para que não fique nenhuma dúvida.\nO curso certamente o tornará um melhor desenvolvedor, e caso você ainda não goste do curso, o que acredito ser pouco provável, você poderá pedir o seu dinheiro de volta.\nComo foi possível perceber, só existem vantagens em atender esse curso, e se você pretende ser um profissional diferenciado no mercado de trabalho, esse curso foi feito para você!\nO que você está esperando? Comece agora mesmo e bons estudos!",
      "target_audience": [
        "Esse curso é para desenvolvedores Javascript que pretendem criar códigos utilizando testes unitários",
        "Desenvolvedores que desejam melhorar suas habilidades em teste de software",
        "Que querem aprender como desenvolver seguindo o popular padrão BDD (Desenvolvimento Guiado por Comportamento)",
        "Que querem aprender e entender todo o processo de teste de software, incluindo automatização e entrega contínua de código"
      ]
    },
    {
      "title": "ISTQB Certified Mobile Application Testing | CT-MAT Training",
      "url": "https://www.udemy.com/course/istqb-certified-mobile-application-testing-ct-mat-training/",
      "bio": "A comprehensive and thorough preparation of the ISTQB Mobile App Testing CT-MAT, with quizzes and exam training.",
      "objectives": [
        "Over 12 hours of comprehensive mobile application testing discussions",
        "Complementary quizzes following each lectures to help solidify what you learned",
        "Solving the official ISTQB CT-MAT exam sample questions with detailed explanations",
        "Providing examples and real-world demos of the different MAT scenarios"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of software testing is required, if you have studied the ISTQB Foundation Level, this is more than enough"
      ],
      "description": "Whether you're an experienced tester or new to the mobile testing world, this course is designed to empower you to succeed. So, let's take the next step in your career with confidence to master mobile app testing, ace the CT-MAT certification, and become a standout in the mobile application testing field.\n\n\nYour success starts here!\n\n\nWhat is the structure of this course? What to expect from it?\nOver 12 hours of high-quality video content\nThorough explanation of all aspects of mobile app testing\nMany examples in every lecture to back your knowledge with practice\nQuizzes following each MAT topic to solidify what you've learned\nAll quizzes come with thorough and comprehensive explanations\nSolving the ISTQB official test sample to further enhance exam readiness\nAll answers are provided with a clear and detailed explanation\nWell-designed interconnectedness between lectures, quizzes, and exams\nRobust study plan, ensuring long-term retention of the knowledge gained\n\n\nJoin us and we let us back you up in your journey to become a certified ISTQB Mobile Application Tester with comprehensive CT-MAT certificate preparation, and thorough coverage of all mobile application testing topics, quizzes, and exam sample questions. Rest assured you are in the right place. Take care, and I will see you around.",
      "target_audience": [
        "Students who are welling to take the ISTQB Mobile Application Testing certification exam CT-MAT",
        "Software testers who are entering the mobile app testing realm",
        "Developers eager to enhance the quality of their work products",
        "All SDLC stakeholders involved in mobile app development, testing or design"
      ]
    },
    {
      "title": "Software Testing: Reporting Bugs Like a Pro Using Bugzilla",
      "url": "https://www.udemy.com/course/software-testing-reporting-bugs-like-a-pro-using-bugzilla/",
      "bio": "Learn What is Bug Tracking System, How To Use Bugzilla, Bug Lifecycle and Key Elements of a Great Bug Report",
      "objectives": [
        "Understand what is bug tracking system",
        "How to use open source bug tracking system like Bugzilla",
        "What is standard bug lifecycle",
        "How to report bugs like a professional and get them fixed"
      ],
      "course_content": {},
      "requirements": [
        "You should already know what are bugs / defects in software"
      ],
      "description": "\"Software Testing: Reporting Bugs Like a Pro Using Bugzilla\" has one purpose, to help you write better bugs reports which will get fixed! Whether you're completely new to software testing or experienced tester, there's something in this course for you.\nWhile first chapter explains defect life-cycle, second chapter explains how to use most widely used bug tracking system - Bugzilla.\nThird chapter is about process of finding and reporting bugs, and tips for writing great bug reports which will get fixed!\nExperience my way on how to write bug reports like a Pro, as if you and I talk one-to-one. Most importantly, you will see WHY certain elements of bug reporting are more important than the others. This will speed up your LEARNING CURVE up exponentially.\nBe prepared for a one hour of video tutorial packed full of information. Watch it once ... twice ... as many times as you want and I guarantee you'll learn more each and every time!",
      "target_audience": [
        "This course is for anyone who works or plan to work in IT industry",
        "This is a must knowhow for QA Engineers / Software Testers"
      ]
    },
    {
      "title": "Curso de QA Automation con Serenity - De novato a experto!",
      "url": "https://www.udemy.com/course/curso-de-qa-automation-con-serenity-de-novato-a-experto/",
      "bio": "Aprende a automatizar desde cero o a implementar Serenity como framework!",
      "objectives": [
        "Estructura de suite de prueba automatizada con Page Object Model",
        "A crear proyecto de Automation desde cero usando Serenity como framework",
        "Encarar logicas complejas",
        "Utilizar Cucumber para estructurar proyectos de automation usando BDD",
        "Implementar el patrón de diseño de Screenplay"
      ],
      "course_content": {},
      "requirements": [
        "Se necesita conocer conceptos básicos de manejo de windows",
        "Conceptos teóricos de programación.",
        "Un pequeño conocimiento sobre JAVA agilizaría la compreensión del material.",
        "Una computadora con windows 7 o mayor",
        "Conección a internet estable (3mb +)"
      ],
      "description": "Al finalizar el curso los estudiantes podrán crear un proyecto de automatización implementando Serenity BDD como framework, utilizando Cucumber para escribir casos de pruebas, podrán enfrentar problemas al momento de interactuar con elementos dificiles, y también aprenderán técnicas sobre como encontrar un elemento exitosamente.\n\n\nEste curso comienza desde cero, enseñando sobre Selenium en un principio y luego subiendo la complejidad al introducir nuevos conceptos que hacen que nuestros proyectos sean mas avanzados y robustos. Utilizaremos diferentes paginas de internet para realizar pruebas y tener un entorno real con casos de pruebas reales.",
      "target_audience": [
        "QA Manuales que quieran entrar al mundo de Automation",
        "QA Automation que quieran aprender Serenity"
      ]
    },
    {
      "title": "ISTQB Artificial Intelligence Tester Sample Exams",
      "url": "https://www.udemy.com/course/istqb-artificial-intelligence-tester-sample-exams/",
      "bio": "Sample exams that will help you in passing the ISTQB Certified Artificial Intelligence Tester",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "How will these sample exams help you in passing the Certified Artificial Intelligence exam?\n-My and my team at Nezam helped many students in passing different ISTQB certificates. We have wide experience that enabled us to create sample questions that cover the mostly important points in the syllabus. This will help you test your knowledge before applying for the real exam and be able to pass it from the first attempt.\n-What is special about these sample exams is that they are divided based on the chapters. So you can study the first 4 chapters and solve the first sample exam, then study chapters 5 to 7 and solve the second sample exam, then study chapter 8 to 11 and solve the third exam. Also there are two separate sample exams that test your knowledge about the ISTQB AI Tester glossary. They will help you in absorbing all concepts mentioned in the syllabus.\n\n\n\n\nAudience\nThe Certified Tester AI Testing (CT-AI) qualification is aimed at people who are seeking to extend their understanding of artificial intelligence and/or deep (machine) learning, most specifically testing AI based systems and using AI to test.\nWhat are the entry criteria?\nTo achieve the CT-AI certification, candidates must hold the ISTQB® Certified Tester Foundation Level (CTFL) certificate\n\n\nBusiness Outcomes\nIndividuals who hold the ISTQB® Certified Tester- AI Testing certification should be able to accomplish the following business outcomes:\nUnderstand the current state and expected trends of AI\nExperience the implementation and testing of a ML model and recognize where testers can best influence its quality\nUnderstand the challenges associated with testing AI-Based systems, such as their self-learning capabilities, bias, ethics, complexity, non-determinism, transparency and explainability\nContribute to the test strategy for an AI-Based system\nDesign and execute test cases for AI-based systems\nRecognize the special requirements for the test infrastructure to support the testing of AI-based systems\nUnderstand how AI can be used to support software testing",
      "target_audience": [
        "Software testers",
        "QA Engineers",
        "Data scientists",
        "Test managers",
        "Test Analysts"
      ]
    },
    {
      "title": "Mastering Playwright Test Automation with Typescript",
      "url": "https://www.udemy.com/course/mastering-playwright-test-automation-with-typescript/",
      "bio": "Installing Playwright, Setting up Visual Studio Code, Automation testing setup, Building robust development environment",
      "objectives": [
        "Master the fundamentals of Playwright test automation combined with the advanced capabilities of TypeScript to create robust automated testing scripts.",
        "Build confidence in configuring, managing, and optimizing a testing environment tailored for modern web applications.",
        "Gain practical insights into best practices for test automation that can be applied to real-world software development scenarios.",
        "Develop hands-on experience with Playwright and TypeScript by working through practical exercises and real-life test scenarios."
      ],
      "course_content": {
        "Setting Up the Environment": [
          "Setting Up Your Development Environment"
        ],
        "Writing Your First Test": [
          "Your First Playwright Test"
        ],
        "Advanced Playwright Techniques": [
          "Code Generation with Playwright",
          "Debugging Playwright Tests"
        ],
        "Diving Deeper into Playwright Features": [
          "Understanding and Using Fixtures",
          "The Page Object Model (POM)"
        ],
        "Enhancing Test Scripts": [
          "Tagging and Running Specific Tests"
        ],
        "Test Framework Configuration": [
          "Configuring the Test Framework"
        ]
      },
      "requirements": [
        "While prior experience with JavaScript or TypeScript will be beneficial, it is not a strict requirement. This course starts with the basics and progressively builds up to more complex topics. A passion for learning and a computer capable of running the necessary software are the only must-haves."
      ],
      "description": "Embark on a transformative journey into the realms of website testing with \"Mastering Playwright Test Automation with TypeScript.\" This course isn't merely a series of lectures; it's a gateway to mastering the tools that are revolutionizing web development. With the rise of web apps, proficiency in automated testing isn't a luxury—it's essential. Step beyond the basics into a world where your code comes to life, ensuring applications are robust, reliable, and ready for the real world.\nWhat You Will Learn:\nThe A-Z of Playwright with TypeScript: Journey from a novice to a skilled tester with comprehensive coverage of Playwright coupled with TypeScript’s powerful typing system.\nReal-World Testing Scenarios: Engage with practical exercises simulating high-stakes testing environments to tackle real web development challenges confidently.\nInnovative Testing Strategies: Absorb cutting-edge techniques that transcend traditional testing, setting new industry benchmarks for software quality.\nWhy This Course?\nEmpower Your Career: As digital presence becomes non-negotiable, these skills are indispensable. They're your leverage in an industry that values precision and innovation.\nPractical & Engaging: Learn through a hands-on approach. This course is brimming with exercises and real-life projects that will cement your understanding and elevate your capabilities.\nFuture-Ready: Equip yourself with skills that are not only relevant today but also adaptable to the technological advancements of tomorrow.\nWho is this course for? This course is meticulously crafted for aspiring developers, tech enthusiasts, and professionals aiming to carve a niche in the tech ecosystem. If you're looking to make a mark in the world of automated web testing, this course is your springboard.\nYour Toolkit: All you need is a computer and an internet connection. We’ll navigate you through the intricacies of software setup and usage. With every module, you'll build not just knowledge, but a suite of tools that will stand you in good stead throughout your career.\nBy completing this course, you will not only have a robust portfolio to showcase but also the confidence to contribute to any development team. Join us, and unlock the door to a world where quality is paramount, and testing is an art form.",
      "target_audience": [
        "QA Engineers and Testers: Elevate your career by mastering the latest in test automation technology, staying ahead of the curve in a rapidly advancing field.",
        "Developers: Seamlessly integrate sophisticated automation testing into your development process, ensuring higher quality software and efficient workflows.",
        "Career Changers and Lifelong Learners: If you're looking to break into tech or simply add a valuable skill to your toolkit, this course will set you on a path to success in the field of software testing.",
        "Students and Aspiring Tech Professionals: Kickstart your journey in tech with a skill set that will make you stand out in the job market as a proficient automation test engineer."
      ]
    },
    {
      "title": "BDD eXperience",
      "url": "https://www.udemy.com/course/bdd-discover/",
      "bio": "Do conceito à aplicação prática, você vai entender definitivamente o que é BDD, Gherkin e Testes Automatizados",
      "objectives": [
        "Especifique comportamento do software levando em conta o ponto de vista do usuário final",
        "Diminua a distância entre devs e pessoas de negócios colaborando com especificações de cenários de aceite",
        "Acelere a execução de testes de regressão automatizando especificações em Gherkin com Cucumber e Ruby",
        "Desenvolva relacionamentos colaborativos entre pessoas de negócios e tecnologia, trabalhando juntos para desenvolver software orientado a comportamentos"
      ],
      "course_content": {
        "Comece aqui": [
          "Visão Geral sobre o Curso",
          "Instruções",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Onboarding": [
          "Agora você é QA na Starbugs"
        ],
        "Automação Web com Cucumber": [
          "Instalando o Cucumber RB",
          "Primeiros passos com Cucumber",
          "Desvendando o funcionamento do Cucumber",
          "Cucumber para Visual Studio Code",
          "Capybara e Selenium Webdriver",
          "Realizando verificações com RSpec",
          "Especificando cenários em Gherkin",
          "Automação Web com Capybara",
          "Data Tables e Hashes",
          "Organizando os testes com Page Objects",
          "Fluxo de ponta a ponta",
          "Validando o comportamento esperado"
        ],
        "Cultura do BDD": [
          "Uma nova funcionalidade",
          "Enriquecendo critérios de aceite",
          "Desenvolvimento Orientado por Comportamento",
          "Automação com Gherkin?"
        ],
        "Conclusão do projeto": [
          "Executando testes de regressão",
          "Testes de fumaça",
          "Relatórios e formatos de saída",
          "Anexando Screenshots",
          "Scenario Outline",
          "Encerramento!"
        ]
      },
      "requirements": [
        "Pelo menos 6 mêses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Em um cenário onde a velocidade da tecnologia avança rapidamente, a habilidade de dominar as ferramentas adequadas se torna crucial para destacar-se como profissional de garantia de qualidade (QA). É por isso que apresentamos o curso BDD Discover, uma jornada abrangente que vai desde os fundamentos até a aplicação prática das principais metodologias e ferramentas utilizadas na área.\nO Behavior-Driven Development (BDD) é uma abordagem que coloca o comportamento do software como prioridade, considerando sempre a perspectiva do usuário final. Com o BDD, é possível especificar de forma clara e detalhada os comportamentos esperados do sistema, facilitando a comunicação entre todos os envolvidos no desenvolvimento do projeto.\nUma das principais vantagens do BDD é a colaboração entre diferentes áreas, reduzindo a distância entre desenvolvedores e stakeholders de negócios. Ao trabalhar em conjunto na elaboração de cenários de aceitação, é possível garantir que o software atenda às expectativas e necessidades do cliente.\nAlém disso, o curso BDD eXperience aborda a automação de testes end-to-end (E2E), utilizando ferramentas como o Cucumber e Ruby para automatizar os cenários definidos em Gherkin. Isso permite acelerar a execução de testes de regressão, garantindo a qualidade do software de forma eficiente e consistente.\nMais do que simplesmente aprender sobre BDD e suas ferramentas, o curso BDD eXperience promove o desenvolvimento de relacionamentos colaborativos entre pessoas de negócios e tecnologia. Ao adotar o BDD da maneira correta, é possível criar um ambiente onde todos trabalham juntos na construção de software orientado a comportamentos, resultando em produtos mais alinhados com as necessidades do mercado e dos usuários.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "ISTQB® Temel Seviye Yazılım Test Sertifika Sınavına Hazırlık",
      "url": "https://www.udemy.com/course/istqb-temel-seviye-ctfl-sertifika-snavna-hazrlk/",
      "bio": "ISTQB® CTFL 4.0 Sertifika Sınavına hazırlanmanın en iyi yolu, Pratik Sınav Denemeleri ve 2025 Güncellesi ile",
      "objectives": [
        "ISTQB Temel Seviye Sertifika sınavına (CTFL 4.0) hazırlanılmış olacaksınız.",
        "Yazılım testleri konusunda temel seviye bilgileri öğrenmiş olacaksınız.",
        "Yazılım Testlerini nasıl planlayacağınızı ve tasarlayacağınızı öğreneceksiniz.",
        "Yazılım testleri konusunda kariyerinize iyi bir başlangıç yapmış olacaksınız."
      ],
      "course_content": {
        "CTFL 4.0 : Giriş": [
          "ISTQB Nedir ?",
          "ISTQB Test Sertifikasyon Sınavları",
          "ISTQB Sertifikaları Alınmaya Değer mi?",
          "CTFL4.0 Müfredatı Ne Getirdi ?",
          "CTFL Test Sınavı Hakkında Bilgi",
          "ISTQB Temel Seviye 4.0 Müfredatı Hakkında Sık Sorulan Sorular"
        ],
        "Yazılım Test Uzmanının Bilmesi Gereken Temel Bilgiler": [
          "Yazılım Nedir ?",
          "Neden Yazılım Geliştirilir ?",
          "İhtiyaç ve Gereksinim Nedir ? Neden İhtiyaç ve Gereksinim Neden Bilinmelidir ?",
          "Değer Nedir ? Test Uzmanları Neden Değer Konusunu Bilmelidir ?",
          "Yazılım Geliştirme Yaşam Döngüsü (SDLC) Nedir ?",
          "Yazılım Kalitesi Nedir ? Test ile İlgisi Nedir ?",
          "Yazılımlar Felakete Yol Açabilir mi ? Ne Yapmalı ?"
        ],
        "Yazılım Testine Ait Temel Bilgiler": [
          "Yazılım Testi Nedir ?",
          "Yanlış, Hata, Arıza Nedir ?",
          "Yazılım Geliştirmede Neden Yanlış/Hata Yapılır?",
          "Yazılımlar Niçin Test Edilir ? Neden Dolayı Test Yapılmaz ?",
          "Yazılım Testinin Amacı Nedir?",
          "Test Esası Nedir ?",
          "Quiz-1"
        ],
        "Yazılım Test Prensipleri": [
          "Yazılım Test Prensipleri",
          "Quiz-2"
        ],
        "Yazılım Test Faaliyetleri, Testware ve İzlenebilirlik Nedir ?": [
          "Test Faaliyetlerine Giriş",
          "Test Başlatma Belgesi Nedir ?",
          "Test Planlama",
          "Test İzleme ve Kontrol",
          "Test Analizi",
          "Test Tasarımı",
          "Test Oluşturma",
          "Test Koşturma",
          "Test Tamamlama",
          "Testware Nedir ?",
          "İzlenebilirlik Nedir ?",
          "Quiz-3:Test Süreci"
        ],
        "Yazılım Test Faaliyetlerinde Roller ve Yetkinlikleri": [
          "Yazılım Test Faaliyetlerinde Roller",
          "Yazılım Test Rollerinde Temel Beceriler ve Yetkinlikler",
          "Tüm Ekip Yaklaşımı ( Whole Team Approach )",
          "Yazılım Testlerinde Bağımsızlık Seviyeleri"
        ],
        "Yazılım Test Perspektifinde Yazılım Geliştirme Modelleri": [
          "Yazılım Geliştirme Modeli Nedir ? Nelerdir ?",
          "Yazılım Testlerinin Yazılım Geliştirme Modellerine Etkisi",
          "DEVOPS ve Test",
          "Sola Kaydırma Yaklaşımı (Shift-Left Approach) Nedir ?",
          "Retrospektif ve Süreç İyileştirme"
        ],
        "Yazılım Test Seviyeleri ve Test Çeşitleri": [
          "Yazılım Test Seviyeleri",
          "Yazılım Test Çeşitleri",
          "Onaylama ve Yineleme Testleri (Confirmation and Regression Testing)",
          "Bakım (Maintance) Testi"
        ],
        "Statik Test": [
          "Statik Test ve Gözden Geçirmeler"
        ],
        "Test Tasarım Teknikleri": [
          "Yazılım Test Tasarım Teknikleri",
          "Kara Kutu Test Teknikleri",
          "Eşdeğer Aralık (Denklik Sınıfı) Test Tekniği",
          "Sınır Değer Analizi Test Tekniği",
          "Karar Tablosu Test Tekniği",
          "Durum Geçiş Test Tekniği",
          "Beyaz Kutu Test Tasarım Tekniği ve Kapsam Analizleri",
          "İfade Kapsama (Statement Coverage) Nedir ? Nasıl Hesaplanır?",
          "Karar Kapsama (Decision Coverage) Nedir ? Nasıl Hesaplanır?",
          "Dal Kapsama (Branch Coverage) Nedir ? Nasıl Hesaplanır?",
          "Tecrübeye Dayalı Test Teknikleri",
          "Hata Tahminleme Test Tekniği",
          "Keşif Temelli Test Tekniği",
          "Kontrol Listesi Tabanlı Test Tekniği",
          "Hangi Test Tasarım Tekniği İyidir ?"
        ]
      },
      "requirements": [
        "Temel seviye yazılım bilgisine ihtiyaç vardır.",
        "Yazılım yaşam döngüleri hakkında temel seviye bilgisine ihtiyaç vardır.",
        "Kursu izlemek için internet bağlantısı olan bir bilgisayar veya dizüstü bilgisayar veya mobil bir cihaz",
        "Tüm ders boyunca not almak için not defteri ve kalem"
      ],
      "description": "Bu eğitim hem yazılım testleri konusunda temel seviye bilgi edinmek isteyen hem de ISTQB®  Temel Seviye Yazılım testi (CTFL) sertifika sınavına hazırlanmak isteyenler için tasarlanmıştır.\nBu eğitim, sertifika sınavlarının en son versiyonuna uygun olarak hazırlanan ile uyumlu bir eğitimdir.\nHem yazılım testlerinin temel bilgilerini öğrenebileceğiniz hem de sertifika sınavlarına hazırlanabileceğiniz bu alanda Türkçe olarak hazırlanan en kapsayıcı ve en uzun kursu oluşturduk.\n\n\nISTQB®, uluslararası bir yazılım test sertifikasyon derneği olup kâr amacı gütmeden faaliyetlerini gerçekleştirmektedir.\nISTQB®, yazılım test uzmanlarının bilgi düzeyini belgelendirmek için Temel ve İleri seviye sertifikalar sunmaktadır.\n\n\nEğitim içerisinde temel yazılım test mühendisliğinin 54 yıllık temel terimleri kullanılmıştır. Anlatımlarda terimlerin yazılım test bilimi içerisinde farklı test kaynaklarında ifadeleri varsa pratik kullanım açısından bilmeniz için onlara da değinilmiştir.\n\n\nEğitim ISTQB® CTFL 4.0 temel seviye test sınavı için gerekli tüm konuları kapsamaktadır.\nBu eğitim ile sizlere yazılım testleri konusunda bilmeniz gereken temel bilgileri ve temel seviye sertifika sınavlarını başarıyla tamamlayabilmeniz için gereken bilgileri vermeyi hedefledik.\n\n\nEğitim sonunda sertifika sınavlarına başarıyla hazırlanabilmeniz ve kendinizi denemeniz için sınav denemeleri de eğitim içerisinde verilmiştir.\n\n\nDers sırasında herhangi bir soru veya yorumunuz olursa lütfen tartışma panosuna yazın, en kısa sürede cevaplayacağım.\n\n\nHaydi bir an önce çalışmaya başlayalım ve şu sınavı başarılı bir şekilde geçelim...\nSınav yolculuğunuzda her zaman bana ulaşabilir, merak ettiklerinizi sorabilirsiniz.\nEğitime katılan herkese başarılar dilerim.",
      "target_audience": [
        "ISTQB Temel Seviye (CTFL) sertifika sınavına girmek isteyenler",
        "Yazılım Testleri konusunda bilgi sahibi olmak isteyenler",
        "İş Analistleri",
        "Proje Yöneticileri",
        "Bilgisayar mühendisliği öğrencileri",
        "Yazılım Mühendisliği öğrencileri",
        "Test Danışmanları",
        "IT Yöneticileri"
      ]
    },
    {
      "title": "Software Testing Bootcamp - The Complete Testing Basics 2025",
      "url": "https://www.udemy.com/course/software-testing-bootcamp/",
      "bio": "Full Software Testing Bootcamp - Software testing basics + Python programming Fundamentals 2025! - learn in the art way!",
      "objectives": [
        "You will learn the theory of testing (testing) in an accessible way.",
        "You will prepare yourself to enter the profession of a software tester",
        "You will become familiar with the key and structured topic related to testing",
        "You will learn how to design tests that effectively cover business requirements and follow the recommendations of software testing experts",
        "The participant will learn the knowledge necessary for career development - by exploring and organizing knowledge in the field of software testing",
        "You will get structured knowledge collected over decades by experts contained in many publications, books and blogs in the form of videos!",
        "You will be prepared to start your adventure with software testing in the sincere sense",
        "You will learn software testing techniques and effective verification",
        "You will learn the basics of software testing and the required theory of testing in the profession of a tester",
        "Mega engaging and creative tests (quizzes) for each section will provide you with an effective verification of knowledge of important terms and concepts!",
        "You will learn how to test software like a boss :) with many art and dance comparisons examples"
      ],
      "course_content": {},
      "requirements": [
        "People interested in \"entering\" and starting a career in the broadly understood IT industry",
        "Willingness and commitment to develop digital skills",
        "The person needs to know the basics of the computer at the \"everyday use\" level"
      ],
      "description": "The course fully explains the issues required in the profession of a software tester in an accessible way, paying attention to particularly important issues in design practice\n\nAfter completing the course thoroughly and with positive answers to quizzes and practice tests, you will be ready to work as a software tester (start your professional adventure)\n\n\nThe knowledge in the course is \"compressed\", which means that I try to give you the most important information (which, in my opinion, is important as an instructor and a long-term practitioner), but I also put emphasis on theoretical knowledge that is used in professional practice.\n\n\nEach subsection is explained in a separate video, each topic is either thoroughly covered or read by the instructor with information and highlighting important information\n\n\nBoth the entire form of the video course as well as quizzes and tests that are included in the online course are implemented in such a way as to make it as easy as possible for participants to learn and understand the material\n\n\nThe course is up-to-date and in line with the requirements for future software testers (it will be updated from time to time with new issues), so expect that even after a long time it will contain updated issues.\n\n\nThe course is also based on the learning experience of students on-campus (not online). Students whom I have taught with relatively easy and little effort are able to start their \"adventure\" with testing.\n\n\nThe terms used in this course come from current blogs, books, and syllabuses - valuable and proven materials\n\n\nThe course can be a kind of \"gateway\" to the IT industry for you, the appropriate completed course confirms your competencies, regardless of your profession.\n\n\nThe course contains practical tips to \"enter\" into the profession of a software tester, but it requires your commitment and work - because without it, even the best course and processing many questions with you \"by hand\" will not give you anything if you do not apply yourself to it. The course is a signpost and shows you the easiest way from the point of view of the person who has followed this path.\n\n\nIn the course, you will find access to a Facebook group, where you will meet other students as well as you will have the opportunity to ask questions and meet other people who explore testing knowledge.",
      "target_audience": [
        "People who want to develop a career in the software engineering industry or simply \"computer science\"",
        "Testers, Junior Testers, QA Engineers, Software Testers, Software Engineers, Developers, Project Managers, Business Analysts, 1st/2nd/3rd Line of Support, etc.",
        "People who want to create web applications will benefit from the knowledge. mobile, desktop, etc. etc.",
        "For people who want to quickly and pleasantly learn the scope of knowledge required in the profession of a software tester",
        "\"Digital\" competitions that require testing skills"
      ]
    },
    {
      "title": "Tetra's Creative Guide to Software Testing and Exploration",
      "url": "https://www.udemy.com/course/tetras-creative-guide-to-software-testing-and-exploration/",
      "bio": "Master software testing fundamentals essential for agile software development and testing in the modern digital age.",
      "objectives": [
        "Understand the core principles of quality, testing, and best QA practices in today's workplace",
        "What, where, and how software testing fits in the big picture of an agile team",
        "Describe Black Box Testing Techniques (ECP, BVT, STA, and more)",
        "Describe White Box Testing Techniques (Data and Control Flow Testing)",
        "Types of Exploratory Testing and Methodologies",
        "The Cost of Poor Quality with the Therac-25 Bug Case Study"
      ],
      "course_content": {
        "A New Hope": [
          "Course Motivation: A long time ago in a fish tank far, far away...",
          "Who is Tetra Quality?",
          "Course Introduction: This is the way... to awesome"
        ],
        "Software Testing Foundations": [
          "The 3 Tenets of Quality",
          "The 3 Tenets of Quality (Part 2)",
          "Why Test and the Testing Role",
          "The 1st Core Value of Testing",
          "The 2nd Core Value of Testing",
          "The 3rd Core Value of Testing",
          "The Testing Formula",
          "Tetra's Testing Theory (Part 1)",
          "Tetra's Testing Theory (Part 2)",
          "Tetra's Phase Diagram",
          "Testing Strategies (Anti-Patterns)",
          "Testing Strategies (Ideal Patterns)",
          "Summary",
          "From Greenhorn to Apprentice: Level Up Quiz"
        ],
        "Exploratory Testing Concepts": [
          "The Definition",
          "The Goal & Quality Factors",
          "The Life Cycle (Part 1)",
          "The Life Cycle (Part 2) - An Agile Perspective",
          "Integrate Exploration with Best Engineering Practices",
          "An Apprentice's Path to Journeyman: Section 3 Multiple Choice Quiz"
        ],
        "Bugs and Defects": [
          "The Nature of Bugs & Software Engineering",
          "The Cost of a Bug (Therac-25)"
        ],
        "Software Testing Techniques with Pokeballs": [
          "Finding Bugs with Pokéballs",
          "Poké Ball Techniques (Automation)",
          "Great Ball Techniques (Black Box Testing)",
          "Ultra Ball Techniques (White Box Testing)",
          "Master Ball Techniques (Skilled Exploratory Testing)",
          "Bug Bashes",
          "Apprentice to Journeyman Level Up Test: Pokemon Gym Battle"
        ],
        "Conclusion": [
          "Thank you Fisherman!"
        ]
      },
      "requirements": [
        "Have an open-mind to learn new things or see testing in a different perspective.",
        "An interest in software testing or software development.",
        "A passion for embracing automation and a quality first mindset."
      ],
      "description": "TETRA's (The Entrance To Really Awesome) Creative Guide to Software Testing & Exploration starts here!\nAre you a software testing & QA enthusiast? Or a software developer who wants to empower their testing skills? Or none of the above but just want to thrive a career in the field of software engineering & technology?\nI believe that thriving in a career in software technology, development, and testing requires strong testing skills.\nBy the end of this course, you will be a much stronger software engineer by honing your quality mindset throughout your working career.\nThis is not another boring software testing guide.\nIt eliminates much of the dry material in a traditional education or certification for software testing. Your instructor, Tetra Quality follows an unconventional approach to teaching software testing and QA by focusing on improving your quality mindset through teaching important testing principles.\nLearn how to become a strong software tester and team member by learning about different industry experts perspectives in the field of software engineering, the 3 tenets of quality, core values of testing, what is exploratory testing, why we do it, and finally, best practices and QA techniques that help guide your software testing to help your organization achieve strong quality software.\nThanks for all the fish!",
      "target_audience": [
        "Anyone with an interest in learning the basics of software testing",
        "Software Developers, Engineers, and Testers",
        "Stakeholders in Management, Product, Sales, and Marketing that want to conceptualize, plan, release, and sell high quality products"
      ]
    },
    {
      "title": "Robot Framework Crash Course [2021 Edition]",
      "url": "https://www.udemy.com/course/robot-framework-crash-course-2021-edition/",
      "bio": "A 1-hour crash course where you will learn the basics of Robot Framework using PyCharm",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No requirements needed",
        "A computer",
        "Internet Connection"
      ],
      "description": "In this one-hour crash course, you will learn the core basics of Robot Framework. We will start with a short introduction to what Robot Framework is and how you can set it up properly on your device.\nSeveral concepts will be explained in the course. The following topics will be discussed in this course:\nHow to install Robot Framework on your device\nSetting up PyCharm and Python\nFixing the autocomplete issue with the Intellibot plugin in PyCharm\nCreating your first test script in Robot Framework\nHow to create variables and lists\nHow to install additional packages/libraries for Robot Framework\nInteracting with the web page by clicking on elements, entering text, and validating text\nHow to run a test script\nGenerate a test report\nExecute parallel testing to increase testing efficiency and reduce time constrains\nTesting APIs and getting request\nAnd much more!\nIn each section, you can find the necessary resources for the course. You can use them in combination with the course.\nThe course is free so you can simply try it out and check whether you like the course.\nIf you are stuck or need any help, please leave it in the QA section and I am going to try to help you with the issue you are facing.\nI hope you enjoy this course about Robot Framework and will be useful to you. Also, please leave a review to share what you think of the course so this course and future ones can be improved.",
      "target_audience": [
        "QA, Developers, Testers or anybody who is interested in learning Robot Framework"
      ]
    },
    {
      "title": "Test Management with TestRail",
      "url": "https://www.udemy.com/course/test-management-with-testrail/",
      "bio": "Learn TestRail from basics to make test management easier",
      "objectives": [
        "Understand testcase management with Testrail",
        "Learn to manage more projects in one repository with Testrail",
        "Understand how to manage testcases with sections and subsections",
        "Learn to create multiple test runs and executions for various purposes",
        "Invite more users to interact with the test management tool"
      ],
      "course_content": {
        "TestRail Course from Scratch": [
          "TestRail Introduction",
          "How to Setup TestRail Account?",
          "How to Add a Project in TestRail",
          "Understand the Project options in TestRail",
          "Overview on the TestRail project screen tabs",
          "How to create a Test Suite in TestRail?",
          "How to add Sections and Subsections?",
          "How to add Test Cases into a section?",
          "How to add Test Cases in bulk from external files?",
          "How to create Milestones?",
          "How to create Test plans?",
          "How to add Test runs?",
          "How to add users and set roles in TestRail?"
        ]
      },
      "requirements": [
        "No any prior experience needed",
        "Basic understanding of English language is enough",
        "This course is designed for anyone who is keen on learning and putting their hands into software QA",
        "Easy to understand content"
      ],
      "description": "TestRail is a test management platform that helps you streamline your software testing processes more effectively and release a high-quality product to the world. You can use the TestRail free trial version for 14 days. For unlimited features, you can purchase a license version.\nThis course provides you with a direct insight into how to use TestRail and every component for making test management easier. You will learn from account creation to project creation to test case adding to test execution and etc. Using TestRail, as a tester or a QA manager, you can easily figure out how the progressive level is. The progress chart helps in understanding which area needs more resources and time and whatnot. TestRail would make not only a testers' but also a developer's life easier.\nAlso, TestBite, which is a YouTube channel that is also managed by myself with the only impression to share my knowledge with all around the world. You can subscribe to my channel TestBite and keep in touch with my upcoming free tutorials and discussions on various software testing topics.\nI hope this course will provide you with a level of knowledge to start your own journey with TestRail. Happy Learning everyone!",
      "target_audience": [
        "Freshers",
        "Software QA",
        "Software Tester",
        "Senior Software personals",
        "Anyone who is keen to learn and develop"
      ]
    },
    {
      "title": "API Testing con Postman",
      "url": "https://www.udemy.com/course/api-testing-con-postman/",
      "bio": "Lo que necesitas saber para hacer tus pruebas de integración (funcionales y no funcionales, manuales y automatizadas)",
      "objectives": [
        "Entenderán el concepto de arquitecturas monolíticas y orientadas a servicios",
        "Diferenciarán APIs de Webservices",
        "Comprenderán la diferencia entre SOAP y REST así como también XML y JSON",
        "Asimilarán el protocolo HTTP e interactuarán con Request y Response",
        "Interactuarán con Postman",
        "Harán pruebas funcionales, manuales y automatizadas con Postman",
        "Se introducirán en las pruebas de performance y de seguridad con Postman",
        "Integrarán todos los conceptos de API Testing con Postman"
      ],
      "course_content": {
        "Introducción a las APIs y los webservices": [
          "Sobre el curso",
          "Arquitectura de software y los viejos monolitos",
          "¿Qué son las APIs y los webservices?",
          "Protocolo HTTP",
          "SOAP y REST - Protocolos y estilos arquitectónicos",
          "Métodos / Verbos (GET, POST, PUT, PATCH y DELETE)"
        ],
        "Introducción a Postman": [
          "Introducción a Postman",
          "Nuestros primeros requests",
          "Ambientes y variables"
        ],
        "API Testing con Postman": [
          "Nuestras primeras pruebas",
          "Cambio de lugar de la solapa Test (ahora Scripts)",
          "Introducción a las pruebas de performance y recorrido de un array",
          "Ejecutar un conjunto de pruebas (Runners)",
          "Autorizaciones (Seguridad)",
          "Pre-Request",
          "Iterar con datos tomados de un archivo",
          "Iterar datos con variables en la URL",
          "Integrando todo: API Testing con Postman"
        ]
      },
      "requirements": [
        "Ninguno de estos requisitos es excluyente pero sería bueno tener conocimientos básicos de testing",
        "De igual manera, agregaría valor saber algo de JavaScript o programación orientada a objetos",
        "Sin embargo, no es excluyente, porque a alto nivel, se explica todo eso."
      ],
      "description": "Cada vez es más necesario hacer pruebas de integración.\nYa sea porque hacemos testing tempranamente, entonces necesitamos empezar a probar las APIs antes de que tengamos desarrollado el front-end o porque nuestro sistema interactúa con otros sistemas a través de los webservices.\nEsas pruebas pueden hacerse con distintas herramientas. Una de las más usadas hoy en día en el mercado es Postman y es por eso que la vemos como parte del curso.\nEl mismo está dividido en tres bloques:\n- El primero donde aprenderemos los conceptos fundamentales sobre la arquitectura, las API, los webservices, los protocolos y estilos arquitectónicos SOAP y REST, los lenguajes de intercambio XML y JSON y el protocolo HTTP.\n- En el siguiente apartado ya empezamos a interactuar con Postman, tomamos algunas aplicaciones de prueba y ejecutamos nuestros primeros request y obtenemos las primeras respuestas para analizar manualmente.\n- Ya en el último módulo, hacemos pequeñas automatizaciones de pruebas con Postman, nos adentramos en las pruebas de performance y seguridad y hacemos una integración completa en relación a API, Testing y Postman.\nSi ya fui tu profe en otros cursos, ya conoces mi forma de explicar y me juego a que este curso te va a encantar.\n¡Nos vemos dentro!",
      "target_audience": [
        "Profesionales que quiera introducirse en Postman",
        "Profesionales que quieran aprender sobre API Testing"
      ]
    },
    {
      "title": "Testando API Rest com REST-assured",
      "url": "https://www.udemy.com/course/testando-api-rest-com-rest-assured/",
      "bio": "Aprenda a acessar e validar requisições de APIs Rest, utilizando JAVA, trabalhando com os formatos Json e XML",
      "objectives": [
        "Criar um projeto de testes com Rest Assured do zero",
        "Fazer requisições em APIs Rest utilizando os verbos mais populares",
        "Fazer validações bem precisas, através de linguagens de consultas com o JsonPath, XmlPath e XPath",
        "Fazer assertivas em cima dos dados de cabeçalho da resposta",
        "Validar respostas a partir de esquemas",
        "Conhecer diversas formas de envio de dados nas requisições",
        "Trabalhar com diversas formas de autenticações em API"
      ],
      "course_content": {
        "Apresentação": [
          "Apresentação"
        ],
        "Rest Assured básico": [
          "Montando o ambiente",
          "Olá, Mundo!",
          "Busca por IP",
          "Status Code",
          "Primeiro teste",
          "JUnit",
          "Modo Fluente"
        ],
        "Validações": [
          "Hamcrest",
          "Validar o body",
          "Json primeiro nível",
          "Json segundo nível",
          "Json com lista",
          "Mensagem de erro",
          "Lista na raiz",
          "Verificações Avançadas",
          "Unindo jsonpath com JAVA"
        ],
        "Trabalhando com XML": [
          "Uso do XML",
          "Nó raiz",
          "XML Avançado",
          "Unindo XmlPath com JAVA",
          "XPath"
        ],
        "Organização": [
          "Atributos estáticos",
          "Request/Response Specification"
        ],
        "Verbos REST": [
          "Inserindo com POST",
          "Validação ao salvar",
          "POST com XML",
          "Alterando com PUT",
          "URL Parametrizável",
          "Removendo com DELETE"
        ],
        "Serialização": [
          "Serializando MAP",
          "Serializando objeto",
          "Deserializando objeto",
          "Serializando para XML",
          "Deserializando para XML"
        ],
        "Formatos de comunicação": [
          "Query",
          "Query parametrizável",
          "Header",
          "Trabalhando com HTML",
          "XPATH com HTML"
        ],
        "Arquivos": [
          "Upload",
          "Definindo tempo máximo dos testes",
          "Download"
        ],
        "Validando esquema": [
          "Validando XML",
          "Validando Json"
        ]
      },
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA"
      ],
      "description": "Seja bem vindo ao curso de Testes de API Rest com Rest-assured.\nNesse curso, iremos aprender a fazer requisições em APIs Rest, utilizando um framework em JAVA muito poderoso que é o REST Assured. Com ele, será possível fazermos requisições com todos os tipos de verbos disponíveis na especificação REST, enviar dados de cabeçalho, cookie, enfim, criar diversos cenários para atender às nossas demandas de testes.\nO curso irá te dar uma boa base dos conceitos e padrões da API Rest. Além de fazer requisições no seu sistema, você será capaz de realizar diversas validações, desde as mais simples, até buscar um atributo bem específico no meio de uma resposta gigante. Iremos trabalhar com os formatos Json e XML principalmente, mas também faremos algumas brincadeiras até com HTML.\nTambém iremos aprender a converter Maps e objetos para Json e objetos para XML. Trabalhar com upload e download de arquivos, autenticação das mais diversas formas e, ao final do curso, testar uma aplicação real (a API do gerenciador financeiro usada nos cursos de testes de aplicações web e mobile - SeuBarriga). Com isso, poderemos validar os nossos conceitos e enfrentar alguns desafios extras como o gerenciamento de massa de dados ao longo de uma suíte de testes.\nO curso é 100% prático, onde trarei problemas, situações e os erros mais comuns que ocorrem no dia-a-dia, assim poderemos discutir sobre formas de como atuar em cada caso, tentando levantar os prós e contras de cada estratégia disponível.\nAo final desse curso, você terá uma boa base para desenvolver seus testes de forma rápida, estruturada e segura.",
      "target_audience": [
        "Testadores que querem trazer mais segurança para o backend de suas aplicações",
        "Testadores interessados em aprender a fazer testes a nível de serviço"
      ]
    },
    {
      "title": "Robot Framework Practice Tests: 500+ Questions and Answers",
      "url": "https://www.udemy.com/course/robot-framework-practice-tests-500-questions-and-answers/",
      "bio": "Test your expertise and revise your Knowledge in Robot Framework with 500+ unique questions and answers: NEW",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "In the Robot Framework Practice Tests: 500+ Questions and Answers course, you’ll immerse yourself in an in-depth review of Robot Framework fundamentals, intermediate concepts, and advanced techniques. This course is crafted to help you solidify your understanding, tackle complex scenarios, and confidently handle interview questions with real-world context. Here’s a detailed look at what you’ll master:\nCourse Topics:\nIntroduction to Robot Framework\nDiscover the fundamentals of Robot Framework, its history, core features, and the ecosystem that includes test data syntax, libraries, and resources.\nLearn about key libraries, including Selenium and Appium, and popular tools like RIDE, RED, and Pabot.\nInstallation and Setup\nStep-by-step guidance on installing Robot Framework, Python dependencies, RIDE, and setting up the necessary environment variables.\nUnderstanding Test Cases\nMaster the structure and organization of test cases and test suites, including the use of resource files and variable management.\nKeywords and Libraries\nWork with built-in, user-defined, and library keywords, and gain hands-on experience in creating custom keywords and integrating external libraries.\nVariables and Data Handling\nLearn to manage scalar, list, and dictionary variables, implement data-driven testing, and read data from external sources such as CSV, Excel, and JSON.\nControl Structures\nExplore the use of conditional statements, loops, and error handling strategies to build robust and flexible test cases.\nTest Execution\nUnderstand command-line execution, parallel test execution with Pabot, and best practices for managing and analyzing test outputs.\nTest Reporting and Logs\nDive deep into Robot Framework’s reporting features, customize reports, and learn efficient debugging and troubleshooting techniques.\nAdvanced Topics\nCover modular test design, tool integrations (Selenium for web, Appium for mobile, REST APIs for API testing), and building custom libraries.\nBest Practices in Robot Framework\nFollow best practices in test design, suite maintenance, and collaborative test development to ensure reusability and clear organization.\nCase Studies and Real-World Applications\nAnalyze real-world use cases, learn from successful automation implementations, and overcome common challenges in test automation.\nRobot Framework and DevOps\nExplore Robot Framework’s role in DevOps, including implementing continuous testing in CI/CD pipelines and scaling test automation infrastructure.\nThis course is your go-to resource for mastering Robot Framework and ensuring you’re well-prepared to tackle interview questions confidently. Dive in, practice extensively, and build the expertise to stand out in your test automation career!",
      "target_audience": [
        "Test Automation Engineers: Those who want to enhance their test automation skills with Robot Framework, a popular tool for web and mobile testing.",
        "Software Testers: Manual testers looking to transition into automation and improve their testing capabilities with a powerful, easy-to-learn tool.",
        "Robot Framework Interview Aspirants"
      ]
    },
    {
      "title": "Advanced Selenium WebDriver",
      "url": "https://www.udemy.com/course/advanced-selenium-webdriver-u/",
      "bio": "Selenium WebDriver, Software Testing, Automation Testing, Advanced Selenium WebDriver, Selenium, Software Testing",
      "objectives": [
        "Should be easily understand the QA Automation work process",
        "Able to easly handle Selenium common challenges",
        "Expertise in Selenium WebDriver",
        "Able to independently work on any automation application",
        "Expertise in Software testing best practices",
        "Advanced Locator Strategies",
        "Advanced Element Interactions",
        "Advanced implementation of the POM design pattern"
      ],
      "course_content": {
        "Full Course": [
          "Advanced Selenium Course Overview",
          "Introduction to Selenium",
          "Setting up Selenium Webdriver Environment",
          "Advanced locators",
          "WebDriver functions",
          "Interacting with Web Elements",
          "Working with Windows and Frames",
          "Advanced Interactions: Actions class",
          "Synchronization and Waits",
          "Testing Patterns and Best Practices",
          "Handling Dynamic Content",
          "Cross-browser and Cross-platform Testing",
          "Reporting and Logging",
          "Test Automation Frameworks",
          "listener",
          "Advanced Topics (Optional):",
          "Troubleshooting and Debugging",
          "Interview Preparation and Career Guidance"
        ]
      },
      "requirements": [
        "They will be discussed in this course , but it is better to have the following areas hint: Basic understanding of Selenium.",
        "Basic understanding of Selenium.",
        "Basic knowledge of HTML structure and elements.",
        "Basic knowledge of SQL.",
        "Knowledge of programming language."
      ],
      "description": "The best course to learn Selenium WebDriver with industry best practices is right here. This course is thoughtfully designed for a diverse audience, including students, QA automation engineers, developers, project managers, business analysts, and anyone involved in software testing practices. It aims to elevate your Selenium WebDriver knowledge by providing a comprehensive understanding of its capabilities, advantages, and challenges, as well as the best practices for managing automation projects.\nIn this course, you will delve deep into advanced Selenium WebDriver concepts and practical implementations. We ensure you gain a clear understanding of the strengths and weaknesses of Selenium WebDriver and guide you through the best practices for harnessing its power. The course covers every aspect of Selenium WebDriver, from its fundamental components to advanced techniques.\nWe pride ourselves on offering solutions to real-world challenges that you may encounter while using Selenium WebDriver. Our approach includes hands-on demonstrations for every solution, allowing you to build a complete project as you progress through the classes.\nBy the end of this course, you will have the expertise to select the most suitable automation framework, adopt the best approach for your automation projects, and become a proficient Selenium WebDriver practitioner. You'll be equipped to tackle Selenium WebDriver challenges confidently, and you'll be capable of crafting a tailored framework that perfectly fits your application or software under test. Your understanding and practical skills will be advanced, transforming your QA automation projects to fully leverage the benefits Selenium WebDriver offers.\nJoin us on this learning journey, and empower yourself to excel in the world of test automation.",
      "target_audience": [
        "QA Engineers, Developers, Project Manager, Business Analyst, Anyone Envolved in software testing"
      ]
    },
    {
      "title": "Web网站安全测试（Penetration Testing）- 从初学到精通",
      "url": "https://www.udemy.com/course/security-testing-china/",
      "bio": "渗透测试 / Website Hacking 学习如何保护他们免受黑客攻击",
      "objectives": [
        "建一个测试环境来进行渗透测试",
        "安装Kali Linux -渗透测试操作系统",
        "在虚拟机中安装windows和易受攻击的操作系统进行测试",
        "学习linux命令以及如何在终端上使用",
        "学习linux基础知识",
        "了解网站和web应用程序是如何工作的",
        "了解浏览器如何与网站进行通讯",
        "收集有关网站的敏感信息",
        "发现目标网站使用的服务器、技术和服务",
        "发现与特定网站相关的电子邮件和敏感数据",
        "查找与网站相关的所有子域",
        "发现目标网站相关的未发布的目录和与文件",
        "查找与目标网站相同的服务器上的所有网站",
        "发现、利用和修复文件上传漏洞",
        "利用文件上传漏洞，获得对目标网站的完全控制",
        "使用代理截取请求",
        "发现、利用和修复代码执行漏洞",
        "利用高级的代码执行漏洞，完全控制目标网站",
        "发现、利用和修复本地文件包含漏洞",
        "利用高级的本地文件包含漏洞，获得对目标网站的完全控制",
        "利用高级的远程文件包含漏洞，获得对目标网站的完全控制",
        "发现和利用SQL注入漏洞",
        "绕过登录页面限制并使用SQL注入登录admin",
        "写SQL查询语句查找数据库、表以及敏感数据，比如使用SQL注入用户名、admin密码",
        "绕过过滤，使用SQL注入能够不用密码登录",
        "采用SQL查询语句在更安全的页面中去发现和利用SQL注入",
        "绕过过滤和安全测量",
        "发现和开发盲SQL注入（blind SQL injections）",
        "使用SQL注入向服务器读取/写入文件",
        "使用SQL注入获得对目标服务器的完全控制",
        "快速地给SQL注入打补丁",
        "学习编写正确SQL语句的方法来以防止SQL注入",
        "发现基本和高级反射型XSS（reflected XSS）漏洞",
        "发现基本和高级存储型XSS（stored XSS）漏洞",
        "发现基于dom的XSS（DOM-based XSS）漏洞",
        "如何使用BeEF框架（Web框架攻击平台）",
        "使用反射型、存储型和基于DOM的XSS漏洞将受害者与BeEF挂钩",
        "从上钩的受害者那里盗取证书",
        "在上钩的受害者那里运行javascript代码",
        "创建一个不可检测的木马",
        "黑客入侵已上钩的电脑，并完全控制它们",
        "修复XSS漏洞，作为一个用户，从这些漏洞中保护自己",
        "暴力攻击和wordlist攻击是什么意思",
        "创建一个单词列表或字典",
        "进行wordlist攻击来猜测管理员的密码",
        "使用web代理自动发现上述所有漏洞",
        "在目标网络web服务器上运行系统命令",
        "访问文件系统(切换目录、读/写文件)",
        "下载、上传文件",
        "绕过安全测量",
        "访问同一Web服务器上的所有网站",
        "连接数据库并执行SQL查询或将整个数据库下载到本地机器"
      ],
      "course_content": {
        "课程介绍": [
          "课程总介绍（必须看）",
          "课程介绍"
        ],
        "前期准备，搭建渗透测试环境": [
          "渗透环境总览",
          "初始准备--定制版kali介绍及如何启用虚拟化",
          "在Windows上安装Kali虚拟机",
          "在MacOS上安装Kali虚拟机",
          "在Linux上安装Kali虚拟机",
          "安装Metasploitable"
        ],
        "前期准备---Linux基础": [
          "Kali Linux基本介绍",
          "Linux Terminal & Linux基本命令",
          "配置Metasploitable及环境的网络设置"
        ],
        "Website 基础": [
          "什么是网站",
          "如何入侵一个网站"
        ],
        "信息搜集": [
          "用Whois Lookup搜集信息",
          "发现网站上使用的技术",
          "收集全面的DNS信息",
          "发现同一台服务器上的网站",
          "发现子域",
          "发现敏感文件",
          "分析发现的文件"
        ],
        "文件上传漏洞": [
          "注意",
          "文件上传漏洞是什么？以及如何发现文件上传漏洞",
          "HTTP请求- GET & POST",
          "拦截HTTP请求",
          "发掘高级文件上传漏洞",
          "发掘更高级的文件上传漏洞",
          "【Security】--修复文件上传漏洞"
        ],
        "代码执行漏洞": [
          "代码执行漏洞是什么?&如何发现和利用基本的代码执行漏洞",
          "发掘和利用高级代码执行漏洞",
          "【Security】--修复代码执行漏洞"
        ],
        "本地文件包含漏洞(LFI)": [
          "本地文件包含漏洞是什么?以及如何发现和利用它们",
          "获取来自LFI漏洞的Shell访问"
        ],
        "远程文件包含漏洞(RFI)": [
          "远程文件包含漏洞-配置PHP设置",
          "远程文件包含漏洞——发现和利用",
          "发掘和利用高级的远程文件包含漏洞",
          "【Security】-修复文件包含漏洞"
        ],
        "SQL注入漏洞": [
          "什么是SQL？",
          "SQL注入的危险",
          "在POST中发现SQL注入",
          "使用SQL注入漏洞绕过登录限制",
          "使用SQL注入绕过更安全的登录限制",
          "【Security】防止登录页面中的SQL注入"
        ]
      },
      "requirements": [
        "基本IT技能"
      ],
      "description": "你想了解黑客是如何攻击网站和Web应用的吗，你想知道如何保护他们免受黑客攻击吗？你想知道你写出的代码是安全的吗？\n那么让我们一起走进web网站安全测试吧。\n这是一套关于网站和web应用渗透测试的综合课，这门课，将带你从一个初学者开始，从一个没有渗透测试的起点开始，走向专业的渗透测试。\n本课程专注于渗透测试（penetration testing）的实际操作，包括每次攻击背后的理论。在进入渗透测试之前，您将首先学习如何搭建一套渗透测试环境，把所需的软件都安装上，以便在你自己的机器上实践渗透测试。\n你会学到什么是网站，它是如何工作的，它依赖什么，什么是网络服务器，数据库，以及所有这些组件如何协同工作给我们提供的功能。\n一旦你了解了网站是如何工作的，我们就开始讨论如何利用这些组件和这种通讯方式来讨论黑客是如何进行攻击的。本课程将带您从一个新手到一个更高级的水平——当你完成这套课以后,你将能够从黑帽黑客那里，对Web站点和Web应用进行安全测试，,不光是这些，你还能够解决这些漏洞并且对网站进行安全保护。在这套课程中所解释的所有攻击都是针对我实验环境中的真实设备进行的。\n本课程分为三个主要部分:\n一.  信息收集-本节将教你如何收集你的目标网站的信息，你将学习如何发现使用的是哪个DNS服务器，网站服务器，子域名，未发布的目录，敏感文件，用户电子邮件，同一服务器上的网站，甚至是主机提供商。这一信息至关重要，因为它增加了成功访问目标网站的机会。\n二.  漏洞的发现和修复--在这以部分,您将学习如何发现和修复大量的漏洞,这部分分为若干小节,每小节覆盖一个特定的漏洞,首先你会学到这是什么漏洞,这个漏洞能允许我们做什么,最后我们将看看什么样的代码导致这个漏洞,向你展示如何修复它和对网站进行安全防护,课程中覆盖以下漏洞:\n1.  文件上传（File upload）:此漏洞允许攻击者在目标web服务器上上传可执行文件，课程将介绍如何防止利用这些漏洞来控制目标网站。\n2.  代码执行（Code Execution）——此漏洞允许用户在目标web服务器上运行系统代码，这可以用于执行恶意代码并获得反向shell访问，从而使攻击者完全控制目标web服务器。课程将介绍如何利用这个漏洞来执行恶意代码，获得反向连接来让攻击者完全控制目标web服务器。\n3. 本地文件包含——这个漏洞可以用来阅读目标服务器上的任何文件,可以利用这一点阅读敏感文件,你将学习如何防止这种漏洞，防止得到反向连接，来避免让攻击者获得完全控制目标web服务器的权限。\n4. 远程文件包含——此漏洞可以在目标web服务器上加载远程文件，你将学习如何防止利用此漏洞完全控制目标web服务器。\n5. SQL注入——这是这套课中最大的一部分,因为这是最危险的漏洞,它无处不在,不光这样，可以利用它做上面的漏洞允许我们做的所有的事情，甚至更多,它可以让你在不知道密码的情况下登录管理员账号，如何防止访问数据库并获得存储的所有数据,如用户名、密码、信用卡....等等，防止用SQL注入读取存储在服务器中的文件，防止将文件写入服务器，甚至得到一个反向连接，学习如何防止攻击者控制web服务器!\n6. 跨站脚本攻击（XSS）——这个漏洞可以用来让访问有漏洞的页面的用户运行javascript代码，不光这样，您将学习如何从用户那里窃取credentials（比如登录密码），甚至可以访问他们的计算机。您将学习这三种类型(反射、存储和基于dom)。\n7. 不安全的会话管理——在这一部分，您将学习如何利用web应用程序中不安全的会话管理，以及在不知道其密码的情况下登录到其他用户帐户，您还将了解如何发现和利用CSRF(Cross-site request forgery跨站请求伪造)。\n8. 暴力和字典攻击——在这一部分，您将了解这些攻击是什么，它们之间的区别是什么，以及如何进行攻击，在成功的情况下，您将能够猜到攻击目标的登录的密码。\n三. 实施漏洞利用,在本节中,您将学习利用上述漏洞中你获得的权限能做什么，您将学习如何转换反弹shell访问到Weevely访问,反过来也一样,您还会学习如何在目标服务器上运行系统命令,目录之间切换,访问在同一台服务器上的其他网站,上传/下载文件,访问数据库,甚至把整个数据库下载到您的本地机器上,您将学习如何绕过安全性去做所有的操作,即使你没有权限这样做!\n这门课中所有的攻击都是在真实网站上的实际的攻击，在每一个漏洞中，你将学习到基本的漏洞发掘,它会给你更多的特权或允许你绕过安全测量,您将学习如何以及为什么这些漏洞可以被利用,如何修复它们，以及什么是正确的做法,以避免套管。\n注意:本课程仅为教学目的而创建，所有的攻击都是在我自己的测试环境中或我允许测试的设备上发起的。\n我的目的是通过揭露真正的黑帽黑客所使用的方法来教育人们并提高他们的意识，及展示如何从这些黑客那里保护系统。",
      "target_audience": [
        "web开发人员，开发安全的web应用程序并对现有的web应用程序进行保护",
        "网站管理员，可以保护他们的网站",
        "任何对网站和web应用程序安全测试/渗透测试感兴趣的人",
        "任何想了解黑客是如何入侵网站的人",
        "任何想学习如何从黑客的角度保护网站和应用程序不被入侵"
      ]
    },
    {
      "title": "Selenium QA Interview: Master the Top 100+ Questions",
      "url": "https://www.udemy.com/course/selenium-qa-interview-master-the-top-100-questions/",
      "bio": "Nail Your Next Selenium Interview. Launch Your Automation Testing Career (Presented by The QA Director)",
      "objectives": [
        "Learn about Top Selenium questions and answers",
        "Get inside hints and tips on Selenium",
        "Real interview questions",
        "All the content from The QA Director himself"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to the course"
        ],
        "Selenium Interview Questions": [
          "Selenium Interview Questions Part 1",
          "Selenium Interview Questions Part 2",
          "Extra Selenium Interview Questions"
        ]
      },
      "requirements": [
        "Basic Selenium knowledge"
      ],
      "description": "Are you ready to ace your next Selenium QA interview and launch your automation testing career?\nThis comprehensive Udemy course, led by an experienced QA Director himself, equips you with the ultimate collection of Selenium interview questions and in-depth answers you won't find anywhere else. We've compiled over 100 of the most frequently asked Selenium interview questions, categorized for easy learning and covering all essential aspects of Selenium automation testing.\nThis course is for you if:\nYou're a QA professional looking to transition into Selenium automation testing.\nYou have some Selenium experience but want to solidify your knowledge for interviews.\nYou're a complete beginner eager to learn the in-demand skills for a Selenium QA role.\nWhat sets this course apart?\nExpert-Led Instruction: Gain insights directly from a seasoned QA Director with a proven track record of success in the field.\n100+ Comprehensive Questions: Master a massive collection of interview questions, from basic Selenium concepts to advanced testing strategies.\nIn-Depth Answers & Explanations: Go beyond just answers. We provide clear explanations and thought processes for each question.\nMultiple Skill Levels: Whether you're a beginner or an experienced tester, this course caters to your level with a well-structured curriculum.\nReal-World Scenarios: Practice with interview questions that reflect real-world testing challenges faced by SDETs.\nHere's what you'll learn:\nSelenium Fundamentals: Grasp core concepts like WebDriver, locators, and test automation frameworks.\nAdvanced Techniques: Explore areas like data-driven testing, BDD with Selenium.\nTroubleshooting and Debugging: Master essential debugging skills to identify and resolve automation issues.\nIntegration and Reporting: Learn how to integrate Selenium with testing frameworks like JUnit or TestNG and generate insightful test reports.\nBehavioral & Soft Skills: Prepare for non-technical interview questions that assess your communication, problem-solving, and teamwork abilities.\nBy the end of this course, you'll be armed with the confidence and knowledge to conquer any Selenium QA interview and take your automation testing career to the next level.\nEnroll today and start your journey to becoming a Selenium QA rockstar!",
      "target_audience": [
        "Automation Test Engineers with Selenium experience (Beginner to Advanced levels)"
      ]
    },
    {
      "title": "How to Work from Home as Software Tester",
      "url": "https://www.udemy.com/course/work-from-home-as-a-software-tester/",
      "bio": "Learn how to work from home working as a software tester utilizing Utest and BugFinders.",
      "objectives": [],
      "course_content": {
        "Welcome": [
          "OverView",
          "Can i be a Software Tester ?",
          "What to do to be a better Software Tester ?",
          "What to do to be a better Software Tester ? DEMO",
          "Demo on UTest Platform",
          "FAQs"
        ]
      },
      "requirements": [
        "Basic Internet and Computer using Skils"
      ],
      "description": "Working from home is a dream for a lot , At the End of this course you will have the skills needed to Work From Home as a Software Tester Earning some money , if you are committed and willing enough, you will earn about 1000 $ .\nThis course doesn't require any previous testing or technical experience,\nWe will go through practical hands on real examples and working on life systems to illustrate how to Work From Home and utilize Utest and BugFinders Platforms to earn even more money.\nAlso providing some tips for working as a software tester from home, let's start.",
      "target_audience": [
        "Anyone willing to Work From Home and earn at least 1000$ per month"
      ]
    },
    {
      "title": "Testing en contextos ágiles",
      "url": "https://www.udemy.com/course/testing-en-contextos-agiles/",
      "bio": "Todo lo que necesitas saber para cambiar tu mindset y desempeñarte con éxito en equipos ágiles.",
      "objectives": [
        "Conocer la existencia de los diferentes Modelos de ciclo de vida y Frameworks ágiles (XP, Scrum, Kanban, Scrumban).",
        "Conocer el manifiesto para el desarrollo ágil (Valores y principios) y el manifiesto del testing ágil.",
        "Comparar el proceso de testing tradicional con el testing ágil.",
        "Comprender el mindset del tester ágil, su perfil y sus responsabilidades.",
        "Conocer y utilizar los cuadrantes del testing para armar estrategias de pruebas.",
        "Adquirir técnicas, prácticas y herramientas ágiles (Historias de usuario, Poker planning, Criterios de aceptación, User story mapping, TDD, BDD, ATDD, Testing e",
        "Entender cómo esas prácticas y técnicas ágiles se aplican en un sprint.",
        "Comprender cómo, dónde y cuándo conviene automatizar en agile.",
        "Compartir las lecciones aprendidas al trabajar en proyectos ágiles."
      ],
      "course_content": {
        "Frameworks ágiles": [
          "Encuadre",
          "Modelos de desarrollo de software",
          "Metodologías ágiles",
          "Cuestionario de autoevaluación",
          "Algunos frameworks ágiles",
          "Armar un tablero kanban",
          "Ceremonias ágiles",
          "Historias de usuario"
        ],
        "Testing en contextos ágiles": [
          "Testing en contextos ágiles",
          "Casos de prueba a partir de las historias de usuario"
        ],
        "Prácticas y técnicas": [
          "Prácticas y técnicas ágiles - Cuadrantes",
          "Prácticas y técnicas ágiles - User Story Mapping",
          "Realizar un User Story Mapping",
          "Prácticas y técnicas ágiles - TDD",
          "Prácticas y técnicas ágiles - BDD",
          "Escribir los casos de prueba en formato Gherkin",
          "Prácticas y técnicas ágiles - ATDD",
          "Prácticas y técnicas ágiles - Testing Exploratorio",
          "Practica de Testing Exploratorio",
          "Prácticas y técnicas ágiles - Peer review",
          "Prácticas y técnicas ágiles en el contexto de scrum",
          "Automatización de pruebas en agile"
        ],
        "Un tester en agile": [
          "Un sprint como tester",
          "Feedback del curso en formato de retrospectiva",
          "Agile tester",
          "Aprendizajes sobre la gestión ágil de pruebas"
        ],
        "Cierre": [
          "Resolución de un examen técnico para aplicar como \"Agile Tester\"",
          "Cierre"
        ]
      },
      "requirements": [
        "Haber hecho el curso de Introducción al testing o tener los conocimientos que allí se adquieren.",
        "Opcionalmente, haber hecho el curso de Testing exploratorio."
      ],
      "description": "Con este curso habrá un cambio en tu forma de concebir y vivir el testing y la calidad del software. Al finalizarlo podrás participar en proyectos que se desarrollen bajo frameworks ágiles actuando bajo los valores y principios del manifiesto para el desarrollo y testing ágil.\nSi bien el curso está orientado a testing, es un curso que podría ser tomado por cualquier miembro del equipo y, de todos modos, llevarse aprendizajes. A lo largo del curso recorreremos estos temas y nos empaparemos de esta cultura donde la calidad realmente es responsabilidad de todo el equipo de trabajo.:\nModelos de ciclo de vida\nMetodologías / Frameworks ágiles (XP, Scrum, Kanban, Scrumban)\nManifiesto para el desarrollo ágil (Valores y principios)\nManifiesto del testing ágil\nComparación con el testing tradicional\nProceso de testing\nPoker planning\nHistorias de usuario\nCriterios de aceptación\nMindset ágil\nCuadrantes del testing\nUser story mapping\nTDD, BDD, ATDD\nTesting exploratorio\nPeer review\nPrácticas y técnicas ágiles aplicadas en un sprint\nPerfil y responsabilidades del tester ágil\nAutomatización de pruebas en agile\nLecciones aprendidas\nComo la teoría no es nada sin la práctica, al principio resolverás cuestionarios de autoevaluación pero, a medida que avance el curso, podrás resolver ejercicios más complejos que pondrán a prueba tus habilidades y los conocimientos adquiridos.\nEl objetivo es que salgas de este curso con la suficiente motivación como para ir corriendo a implementar todo esto en tu proyecto (sin importar si es ágil o no).",
      "target_audience": [
        "Testers que estén trabajando en proyectos tradicionales o ágiles.",
        "Otros profesionales que estén trabajando o quieran conocer cómo se trabaja en equipos ágiles.",
        "Profesionales que estén interesados en rendir certificaciones de agile testing."
      ]
    },
    {
      "title": "Javascript para QAs",
      "url": "https://www.udemy.com/course/javascript-para-qas/",
      "bio": "Aprimore suas habilidades de QA e torne-se um(a) Automatizador(a) de sucesso!",
      "objectives": [
        "Conceitos básicos de programação",
        "Estrutura básica do Javascript, HTML e CSS",
        "Construção de aplicações em Javascript",
        "Abrir a mente para avançar na automação de testes"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node.js",
          "Windows Terminal",
          "Git for Windows + Bash"
        ],
        "Introdução": [
          "Prazer, eu sou o Javascript!",
          "Visão geral do Javascript",
          "Entendendo HTML e CSS"
        ],
        "Javascript para QAs": [
          "Variáveis de tipos de dados",
          "Operadores matemáticos",
          "Operadores de comparação",
          "Funções",
          "Controle de Fluxos com BDD (Behavior-Driven Development)",
          "Arrays",
          "Controles de repetição",
          "Objetos (Super Variáveis)",
          "Constantes"
        ],
        "Construíndo uma WebApp": [
          "O Framework Vue.js",
          "Renderização de elementos usando a diretiva v-for",
          "Implementando funções",
          "Criando um filtro de busca",
          "Simulando a exclusão",
          "Estilização CSS inspirado em Star Wars",
          "Elementos de ícones",
          "Fontes customizadas",
          "Parabéns! Você adquiriu novas habilidades como QA"
        ]
      },
      "requirements": [
        "Analista de Testes de Software",
        "Pelo menos 6 mêses de experiência com Testes de Software"
      ],
      "description": "Este curso é projetado para QAs de alta performance que desejam dominar o básico da programação e descobrir que programar não é um bicho de sete cabeças.\nPor que você precisa aprender programação básica em Javascript? Ao aprender a programar, você será capaz de organizar suas ideias com maior clareza e terá uma mente mais criativa para resolver os problemas comuns do dia a dia.\nAo longo deste curso, você mergulhará de forma prática e 100% mão na massa para adquirir rapidamente habilidades de programação básica em Javascript. Você também ganhará familiaridade com HTML e CSS, fundamentais para complementar seus conhecimentos.\nDentro do curso, você irá trabalhar diretamente com variáveis, constantes, funções, arrays, objetos, loops, operadores e controles de fluxo. Colocando em prática todo o conhecimento adquirido, desenvolverá uma WebApp utilizando o framework Vue.js, implementando funcionalidades com as técnicas aprendidas ao longo do curso.\nVale ressaltar que este treinamento é exclusivo para QAs que desejam se tornar Automatizadores(as) de sucesso, proporcionando uma abordagem focada na qualidade e testes de software. Ao concluir o curso, você estará apto(a) a compreender definitivamente conceitos como localizadores, CSS selectors e a razão pela qual muitos elementos não possuem IDs na web moderna.\nImportante destacar que este curso não é recomendado para Desenvolvedores(as), já que toda a comunicação e didática foram preparadas sob a perspectiva de qualidade e testes de software.\nPrepare-se para dar um salto na sua carreira como QA e se tornar um(a) Automatizador(a) de sucesso!",
      "target_audience": [
        "Analistas de testes curiosos que desejam avançar na automação de testes"
      ]
    },
    {
      "title": "Стань QA специалистом с нуля",
      "url": "https://www.udemy.com/course/qa-specialist-from-scratch/",
      "bio": "Пошаговая инструкция: пройдите путь от абсолютного новичка до первой работы в роли QA engineer или Software Tester",
      "objectives": [
        "Основы тестирования программного обеспечения",
        "Инженерия программного обеспечения",
        "Операционные системы и работа в командной строке",
        "Английский язык",
        "Реляционные базы данных и SQL DML",
        "Создание резюме",
        "Подготовка к собеседованию",
        "Поиск работы"
      ],
      "course_content": {
        "Введение": [
          "Общая информация и планирование обучения",
          "Индивидуальный учебный план"
        ],
        "Английский язык": [
          "Изучение английского языка",
          "Ежедневный подкаст английского языка",
          "Языковой обмен: практика общения",
          "Техническая терминология"
        ],
        "Тестирование программного обеспечения": [
          "Основы тестирования",
          "Составляющие процесса тестирования",
          "Виды тестов",
          "Виды тестов - продолжение",
          "Тестирование страницы авторизации",
          "Тестируем карандаш",
          "Test Case и Bug Report",
          "Напишите тест кейсы",
          "Составьте баг репорт",
          "Исследовательское тестирование",
          "Процесс и артефакты тестирования",
          "Планирование и декомпозиция",
          "Дизайн тестов",
          "Граничные значения и классы эквивалентности",
          "Метод доменного анализа",
          "Дизайн тестов - продолжение",
          "Диаграммы переходов и состояний",
          "Таблицы принятия решений",
          "Тесты на основе use case",
          "Метод pairwise"
        ],
        "Инженерия программного обеспечения": [
          "Инженерия ПО",
          "Жизненный цикл ПО",
          "Инженерия ПО - продолжение",
          "Модели и методологии разработки"
        ],
        "Операционные системы и командная строка": [
          "Операционные системы и работа в командной строке",
          "Установка образа системы виртуальной машине",
          "Работа в командной строке Windows",
          "Работа в командной строке Linux"
        ],
        "Базы данных и SQL": [
          "Основы баз данных",
          "Реляционные базы данных",
          "SQL DML",
          "SELECT запросы",
          "INSERT, UPDATE, DELETE запросы"
        ],
        "Написание резюме (CV)": [
          "Написание резюме",
          "Напишите резюме"
        ],
        "Подготовка к собеседованию и поиск работы": [
          "Подготовка к собеседованию",
          "Подготовка к собеседованию - продолжение",
          "Рассказ о себе",
          "Подготовка к вопросам на собеседовании",
          "Ваши вопросы на собеседованинии",
          "Поиск работы",
          "Рассылка резюме",
          "Фриланс, получение первого опыта"
        ],
        "Заключение": [
          "Бонус",
          "Заключение"
        ]
      },
      "requirements": [
        "Компьютер с доступом к интернет",
        "Базовые навыки использования компьютера"
      ],
      "description": "Можно ли с нуля освоить профессию Quality Assurance инженера?\nДа, и в этом курсе я расскажу как. Вы не только получите необходимую теоретическую базу, но и получите массу необходимых практических навыков. В этом курсе много практических заданий. Эти задания помогут Вам подготовиться к собеседованиям и к Вашей будущей работе.\nЧему вы научитесь?\nВы получите необходимую базу знаний и навыков для тестирования программного обеспечения. Кроме технических знаний и навыков курс включает практические советы и задания по составлению резюме, подготовке к собеседованию и поиску работы.\n\n\nДо встречи на курсе и успехов,\nАвтор курса, Евгений Новиков",
      "target_audience": [
        "Все желающие освоить профессию QA инженера или тестировщика программного обеспечения"
      ]
    },
    {
      "title": "Web Automation by Selenium WebDriver & Python: FB, Insta, in",
      "url": "https://www.udemy.com/course/web-automation-by-selenium-webdriver-and-python/",
      "bio": "Web automation of messaging on Facebook, Instagram & LinkedIn from Excel/CSV file: Selenium Python Automation",
      "objectives": [
        "Web Automation With Selenium Web driver",
        "Reading/Writing data to/from CSV Files",
        "Locating web elements using Class, ID, name, CSS selectors, Tag, link text, XPath etc",
        "Manipulation web element, Giving inputs/clearing it/clicking on it",
        "Understanding the Selenium WebDriver APIs and how to use it to interact with websites",
        "Automate the process of sending messages on Facebook, Instagram and LinkedIn",
        "Web scrapping: Get Facebook friends, Instagram followers etc in CSV File",
        "Sending wishes by messages to special one without a fail"
      ],
      "course_content": {
        "Make your Setup Ready": [
          "What are we going to learn in this coure ?",
          "Links to install required stuff",
          "Python Installation",
          "PIP Installation",
          "Selenium Installation",
          "Google Chrome WebDriver Installation",
          "Pynput Installation",
          "IDE (Pycharm) Installation",
          "Important Note"
        ],
        "Locate web elements by Selenium": [
          "Selenium Basics",
          "Open a website in chrome by selenium",
          "Locate element by classname",
          "Locate element by id",
          "Locate element by tag",
          "Locate element by xpath",
          "Locate element by fullxpath",
          "Locate element by css selector",
          "Locate element by name",
          "Locate element by linktext",
          "Locate element by partial linktext"
        ],
        "Read/Write in CSV Files": [
          "Install csv package",
          "Writing data into csv file",
          "Read data from csv file"
        ],
        "Linkedin Automation": [
          "What are we going to learn in this section ?",
          "Indentify the flow",
          "Steps to follow",
          "Login with credentials",
          "Search a user",
          "Write a message and send the message",
          "Send a message along with the attachment",
          "Send message from csv file users"
        ],
        "Instagram Automation": [
          "What are we going to learn in this section ?",
          "Indentify the flow",
          "Steps to follow",
          "Login with credentials",
          "Get followers list",
          "Get user info from the insta id",
          "Put data into csv file",
          "Write a message and send the message",
          "Send a message along with the attachment",
          "Send message from csv file users"
        ],
        "Facebook Automation": [
          "What are we going to learn in this section ?",
          "Indentify the flow",
          "Steps to follow",
          "Login with credentials",
          "Get friends list",
          "Go to about page of facebook friend",
          "Get user info from the facebook profile page",
          "Put data into csv file",
          "Read data from csv file",
          "Write a message and send the message",
          "Send a message along with the attachment",
          "Send message from csv file users"
        ],
        "Wrapping up: Thank You!": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of Python Programming Language"
      ],
      "description": "Welcome to the \"Web Automation by Selenium WebDriver and Python: FB + Instagram + Linkedin\"  course, in which you will learn how to automate sending messages on Facebook, Instagram, and Linkedin from Excel/CSV files.\n\n\nIf you want to send the same message to your contacts quite often, it is a tedious job if you are doing it manually.\n\n\nLucky you are, as you have landed on this course, with this course you will be able to automate that process, you will just make an excel/CSV file, put all the contact numbers and the message, and then you will just run the python file and our code will send message to each person mentioned in the excel file, how cool is that?\n\n\nNot only that, but you will also learn how to attach multimedia along with the text message, here in the excel sheet you will just give a path to the media file, and our code will just fetch that file and will send it along with the text message.\n\n\nI will start by helping you to get your setup done, which includes Python, pip, and, PyCharm IDE installation, we will install the required python packages as and when needed.\n\n\nFirst, we will learn about selenium web driver, and how to locate web elements via different technique messages, Then we will automate the process of sending messages.\n\n\nThen after I'll teach you how to make a GUI for this application in Python using Tkinter and then we will integrate the functionality.\n\n\nWe are going to learn a lot\n\n\nUnderstanding the Selenium WebDriver APIs and how to use them to interact with websites\nLocating web elements using Class, ID, CSS selectors, Tag, XPath, etc.\nGiving inputs to web elements, clearing them, and clicking on them.\nReading/Writing data to/from CSV files\nAutomate the process of sending messages on Facebook, Instagram, and Linkedin\nWeb scrapping: Making functions to get Facebook friends, Instagram followers, etc.\nSending  wishes on Facebook messages to special ones without fail\n\n\nWe'll be building this application from scratch. You will be able to do this all on your own after completing the courses.\nAfter completing the course you will be able to automate the process of sending messages on Facebook, Linkedin & Instagram.\n\n\nSo what are you waiting for? Start automating messaging on Facebook, Instagram & Linkedin social media platforms, and take your Python skill to the next level.\n\n\nLet`s Automate things.\n\n\nEnroll now and I will see you inside the course.",
      "target_audience": [
        "Python developers interested in learning web automation",
        "Python developer who wants to automate the messaging on Facebook/instagram/linkedin"
      ]
    },
    {
      "title": "Pytest : Python 3 Unit Testing Tutorial For Beginners",
      "url": "https://www.udemy.com/course/pytest-python-3-unit-testing-tutorial-for-beginners/",
      "bio": "pytest: helps you write better programs",
      "objectives": [
        "Working understanding of Pytest",
        "Using Pytest with PyCharm IDE"
      ],
      "course_content": {
        "Introduction": [
          "Install Python 3 on Windows",
          "Install Python 3 on Mac"
        ],
        "Install Pycharm": [
          "Install Pycharm on Windows 10",
          "Install PyCharm on Mac"
        ],
        "Python PIP": [
          "Use Python PIP",
          "Install Packages in PyCharm"
        ],
        "Pytest": [
          "Getting started with pytest",
          "Using Options with Pytest",
          "Parameterizing tests (pytest.mark.parametrize)",
          "pytest fixtures + setup/teardown methods",
          "Using PyCharm to run pytest tests"
        ]
      },
      "requirements": [
        "Student should have a basic understanding of the Python programming language",
        "Basic knowledge of Manual & Automation testing",
        "Knowledge of Windows or Mac operating system"
      ],
      "description": "py.test is an alternative, more Pythonic way of writing your tests.\nThe pytest framework makes it easy to write small tests, yet scales to support complex functional testing for applications and libraries.\npytest is a mature full-featured Python testing tool that helps you write better programs. Learn Pytest basic functionality, Setup & Tear Down, Fixtures.\nBeginning with a brief introduction and setup of Pytest. We will see How to install pytest, Using Options with Pytest, Parameterizing tests (pytest.mark.parametrize), pytest fixtures + setup/teardown methods, Using PyCharm to run pytest tests.\n\n\nThe best part is, the overhead for creating unit tests is close to zero!\nTake this course now online Python course and master your skill!\nENROLL NOW",
      "target_audience": [
        "Beginners Python developers",
        "Students"
      ]
    },
    {
      "title": "Selenium WebDriver with Java from scratch: Zero To Hero",
      "url": "https://www.udemy.com/course/selenium-java-from-zero-to-hero/",
      "bio": "Complete Web Automation Testing course including Selenium, Java, TestNG, Maven, Git & XPath CSS from scratch",
      "objectives": [
        "Learn to Code using Java Language",
        "Web Automation Testing using Selenium",
        "Learn to write XPath, CSS Path & Web Development technology",
        "Build Project using Maven",
        "Write Testcases using TestNG Testing Framework",
        "Learn to work with Git for Distributed Team"
      ],
      "course_content": {},
      "requirements": [
        "No programming Experience needed. You will learn everything needed for the course"
      ],
      "description": "This comprehensive course is designed to equip learners with the skills needed to excel in automation testing using cutting-edge tools and techniques. Participants will delve into Java programming, gaining a strong foundation to build efficient and robust test scripts. The course introduces Selenium WebDriver, an open-source framework for automating web applications, enabling learners to create advanced, reusable scripts for diverse testing scenarios.\nTo streamline and manage projects effectively, students will learn Maven, a powerful build automation tool that simplifies project configuration and dependency management. Version control is covered with Git, empowering learners to track changes and collaborate seamlessly on shared projects. The course also highlights TestNG, an advanced testing framework, to execute test cases systematically with extensive reporting features.\nAdditionally, the curriculum focuses on locator strategies, a critical aspect of Selenium, teaching participants to identify web elements using techniques like XPath, CSS Selectors, and more. By mastering these strategies, learners can enhance the precision and reliability of their test cases.\nBy the end of the course, participants will have the expertise to design, implement, and manage sophisticated automation frameworks for web application testing. This hands-on learning experience ensures students are industry-ready with practical, real-world knowledge.\nThis is bound to help you in your career growth",
      "target_audience": [
        "Freshers /Interns looking to create a career in Automation testing",
        "People in Manual Testing wanting to Transition to Automation testing profile",
        "People who are already in Automation testing , but are currently struggling with real world projects as they lack core level understanding",
        "Experienced Automation engineers looking to revise & understand everything involved in creating a Automation Framework"
      ]
    },
    {
      "title": "E2E Automation testing using Robot,python,Jenkins and Xray",
      "url": "https://www.udemy.com/course/e2e-automation-testing-using-robotpythonjenkins-and-xray/",
      "bio": "Apply XRay, Robot,Python,Gitlab,jenkins techniques from Automation Framework Design to, test execution & reporting",
      "objectives": [
        "Automation Testing and Framework design from scratch",
        "How to create Automation Framework Using Robot Framework and Python as a wrapper",
        "How to Integrate Robot Framework with CI/CD tool such as Jenkins and Gitlab",
        "How to publish Robot Report in Jira-Xray from Jenkins",
        "How to build single Automation framework for Web,API,ETL,Kafka,Database,Big data automation testing",
        "How to Use Python for designing Test Automation Framework"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet access is required"
      ],
      "description": "If you are a beginner who wants to create End2End automation framework and want to  gain insight regarding Industry best open source tools such as Robot framework,Jira-Xray, Jenkins,gitlabs and at the same time learn how Python scripting help in building test automation libraries, then you have made the right choice in choosing this course.\nThis hands-on practical course breaks the unfamiliarity and complexity barriers through project examples; that will take you from no knowledge to build & gain competences in the areas of  Test Automation and Test management.\nBy the end of this course you will learn:\nHow to install Robot framework,python,xray,gitlab and Jenkins\nHow to build Automation framework for Web/GUI,API,Database,Kafka,RabitMQ,Big data testing,ETL testing\nHow to publish Test reports in Xray-Jira\nPractice question/answer to test and brush up your knowledge on Automation Testing\nTop 10 Interview questions and answers on Automation framework",
      "target_audience": [
        "Beginners in Software testing,Manual Tester,Automation tester and any Software developer"
      ]
    },
    {
      "title": "Automação de Testes com Robot Framework - Avançado",
      "url": "https://www.udemy.com/course/automacao-de-testes-com-robot-framework-avancado/",
      "bio": "Aprimore os seus conhecimentos em automação de testes com esse sensacional framework e se torne um robotizador master!",
      "objectives": [
        "Controle de fluxos mais avançados para testes mais complexos",
        "Comunicação com banco de dados",
        "Manipulação de strings, datas, sistema de arquivos e processos do S.O.",
        "Criação de library customizada e manutenção em libraries públicas",
        "Automação WEB: Page Objects e execução Headless",
        "Automação API: Trabalhar com Headers, Parâmetros e Autenticação",
        "Automação API: Templates e navegação avançada em JSON",
        "Execução em containers Docker",
        "Execução em integração contínua CI"
      ],
      "course_content": {
        "Preparação para o Curso Avançado": [
          "Overview do curso avançado de Robot Framework",
          "Migração Python 3: Desinstalando o Python 2",
          "Migração Python 3: Instalando o Python 3",
          "Migração Python 3: Atualizando os drivers e libraries",
          "Se mantenha em dia! Acompanhe as atualizações do Robot Framework!"
        ],
        "BuiltIn Avançado": [
          "Loops: Nova sintaxe do FOR e outras variações do FOR",
          "Controles: Teardowns Avançados",
          "Controles: Lidando com falhas previstas",
          "Controles: Esperas e Timeout do teste",
          "Argumentos: Argumentos avançados em keywords",
          "Conclusão: BuiltIn Avançado"
        ],
        "Libraries Auxiliares": [
          "Library DateTime",
          "Library OperatingSystem",
          "Library String",
          "Library Process",
          "Pré-Requisito: Instalando um cliente de Banco de Dados",
          "Library DatabaseLibrary",
          "Conclusão: Libraries Auxiliares",
          "Menções Honrosas",
          "Estude a library DiffLibrary e faça um teste utilizando ela"
        ],
        "Libraries Customizadas": [
          "Criando e usando sua própria library",
          "Dando manutenção em libraries existentes",
          "Crie sua library e utilize no Robot Framework"
        ],
        "WEB Testing Avançado": [
          "[EXTRA] Site alternativo para os exercícios",
          "Page Objects: Separando os resources por páginas",
          "Page Objects: Melhorando os resources das páginas",
          "Refatore o teste 02 para padrão Page Objects",
          "Executando em modo Headless"
        ],
        "API Testing Avançado": [
          "ATENÇÃO: Atualização da Requests Library",
          "ATENÇÃO: Nova forma de autenticação GitHub API",
          "Requisições com Autenticação",
          "Requisições com Parâmetros",
          "Requisições com Headers",
          "Usando templates para POSTs",
          "Conferência avançada de JSON",
          "Testando a API do GitHub"
        ],
        "Execução com Docker": [
          "Pré-Requisito: Instalando o Docker",
          "Introdução sobre Docker",
          "Criando a imagem para execução do Robot Framework",
          "Executando os testes no container Docker",
          "[OPCIONAL] Aula sobre Zalenium",
          "Escalando os testes WEB com Zalenium"
        ],
        "Integração Contínua": [
          "Introdução GitLab e CI",
          "Pré-Requisito: Instalando o Git e criando uma conta no GitLab",
          "Subindo seu código para o GitLab",
          "Configurando uma Pipeline",
          "Recurso: Código Fonte pipeline para a próxima aula",
          "Executando os testes do Robot na Pipeline",
          "Executando com Docker na Pipeline"
        ],
        "Conclusão": [
          "Links Úteis"
        ]
      },
      "requirements": [
        "Conhecimento em testes de software",
        "Já conhecer o básico de automação de testes com o Robot Framework",
        "Ou ter completado o curso level básico: Automação de Testes com Robot Framework - Básico",
        "Necessário ter noção básica de lógica de programação, entender os conceitos de variáveis, funções, métodos, argumentos e laços."
      ],
      "description": "Esse curso é dedicado a quem já conhece o Robot Framework e ensinará recursos avançados para potencializar a sua automação de testes, tais como fluxos avançados de execução de teste, libraries auxiliares, criação de uma library customizada, testes web e API avançados, execução headless, execução em Docker e integração contínua!!!\nNão conhece o Robot Framework ainda? Não tem problema, comece pelo curso \"Automação de Testes com Robot Framework - Básico\"!",
      "target_audience": [
        "Pessoas que já praticam automação de testes com o Robot Framework e querem se aprimorar para criar testes mais complexos, eficientes e completos",
        "Se você ainda não conhece o Robot veja o curso Automação de Testes com Robot Framework - Básico primeiro!"
      ]
    },
    {
      "title": "600+ Postman Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/postman-interview-questions/",
      "bio": "Postman Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Postman Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nDive deep into the world of API testing with our meticulously crafted practice test course on Udemy, designed to propel you from a beginner to an expert in using Postman, the leading tool for API development. Whether you're preparing for your next job interview, looking to enhance your testing skills, or aiming to achieve mastery in API testing, our practice tests cover everything you need to succeed. With a focus on real-world applications, this course integrates 'interview questions' and 'practice tests' to ensure you're interview-ready.\nWhy Choose This Course?\nComprehensive Coverage: From the fundamentals of Postman to advanced features, our course is segmented into six detailed sections, each packed with subtopics that are critical for mastering Postman. This structure ensures a step-by-step learning path that's easy to follow.\nReal Interview Preparation: Each practice test is infused with 'interview questions' mirroring those used by top tech companies. This means you're not just learning; you're preparing for success in real interviews.\nHands-on Practice: With over [insert number here] MCQs across all sections, our practice tests challenge you to apply what you've learned in practical, real-world scenarios, enhancing your problem-solving skills and readiness for any testing challenge.\nBasics of Postman\nGet introduced to Postman, set up your environment, and navigate through its user interface with ease.\nLearn to make API requests, manage collections and environments, and use variables and scripts to streamline your testing process.\nAPI Requests and Responses\nMaster HTTP methods, understand status codes, headers, and delve into the nuances of body data handling.\nExplore API authentication mechanisms and response validation to ensure your APIs function as expected.\nAdvanced Postman Features\nElevate your testing with Postman Tests scripting, dynamic variables, workflows, and data-driven testing.\nDiscover the power of monitoring, mock servers, and how to create comprehensive documentation.\nPostman Automation and CLI\nIntroduce yourself to Newman for running collections outside the Postman interface and integrate testing into CI/CD pipelines.\nUtilize the Postman API for enhanced automation and testing strategies.\nSecurity and Performance Testing\nTackle security testing with confidence, understand performance testing basics, and implement best practices for secure API testing.\nPostman Best Practices and Tips\nLearn to organize collections, use version control, and collaborate effectively to enhance your API testing and development workflow.\nSample Questions\nQuestion 1: What is the primary purpose of using environments in Postman?\nOptions:\nA. To save and execute requests\nB. To group similar requests together\nC. To customize requests with different variables for different contexts\nD. To monitor API responses over time\nCorrect Answer: C. To customize requests with different variables for different contexts\nExplanation: Environments in Postman are powerful features that allow users to switch between different contexts seamlessly. This capability is particularly useful when working with APIs that have different configurations for development, testing, and production stages. By creating separate environments for these stages, you can easily change the base URLs, authentication tokens, and any other piece of data specific to that environment without altering the request itself. This approach not only saves time but also reduces the likelihood of errors, such as using a production token in a development environment. It enhances the efficiency of testing workflows by allowing for quick switches between different sets of variables, thus tailoring the requests to match the targeted environment's specific needs.\n\n\nQuestion 2: What HTTP status code typically represents a successful GET request?\nOptions:\nA. 200 OK\nB. 404 Not Found\nC. 500 Internal Server Error\nD. 302 Found\nCorrect Answer: A. 200 OK\nExplanation: The HTTP status code 200 OK is the standard response for a successful HTTP request, particularly with GET requests. This status code indicates that the request was received, understood, and processed successfully by the server. In the context of API testing with Postman, receiving a 200 OK status code is a clear indication that the endpoint is functioning as expected, and the data retrieval operation was successful. Understanding HTTP status codes is crucial for API testing, as they provide immediate feedback about the request's outcome. A 200 OK status simplifies debugging by confirming that any issues lie elsewhere, not in the basic connectivity or server response. It serves as a fundamental checkpoint in API testing, ensuring that the communication between the client and server is effective and error-free.\n\n\nQuestion 3: In Postman, what is the purpose of using pre-request scripts?\nOptions:\nA. To document the request and response details\nB. To dynamically modify the request parameters before sending it\nC. To group requests into collections\nD. To test the response after the request has been sent\nCorrect Answer: B. To dynamically modify the request parameters before sending it\nExplanation: Pre-request scripts in Postman are scripts that are executed before a request is sent to the server. These scripts are incredibly useful for setting up prerequisites for a request, such as dynamically generating data, setting environment variables, or configuring headers and parameters. The ability to modify request parameters on the fly allows testers and developers to create more flexible and dynamic API testing scenarios. For example, you might use a pre-request script to generate a timestamp or a unique identifier that needs to be included in the request. This feature enhances the power of Postman by enabling automated, condition-based testing scenarios that can adapt to the data or context of the test environment, ensuring a robust and thorough testing process that can mimic real-world usage patterns more accurately.\n\n\nQuestion 4: Which feature in Postman allows users to simulate an API response without setting up a backend server?\nOptions:\nA. Collections\nB. Mock Servers\nC. Monitors\nD. Workspaces\nCorrect Answer: B. Mock Servers\nExplanation: Mock Servers in Postman are a feature designed to simulate API endpoints. This allows developers and testers to mimic the behavior of a backend server by creating mock responses for their API requests, without the need to set up an actual server. This is particularly useful in the early stages of development when the actual API may not be available or in testing scenarios where specific responses are needed to test the client's handling of various data. Mock Servers facilitate frontend development and testing by providing a predictable and controlled environment for testing API responses. They also support collaboration, as the mock endpoints can be shared among team members, ensuring consistency in development and testing efforts. By using Mock Servers, teams can significantly accelerate development cycles, reduce dependencies on backend readiness, and enhance the overall quality of the application by thoroughly testing handling of various response scenarios.\n\n\nQuestion 5: When using Postman, what is the benefit of exporting a collection as a Postman Collection Format (v2)?\nOptions:\nA. It ensures compatibility with the latest Postman features and improvements.\nB. It increases the execution speed of the requests in the collection.\nC. It encrypts the collection for added security.\nD. It allows for the collection to be shared via email.\nCorrect Answer: A. It ensures compatibility with the latest Postman features and improvements.\nExplanation: Exporting a collection in Postman Collection Format (v2) ensures that the collection is fully compatible with the latest features and improvements introduced by Postman. The v2 format is designed to be more comprehensive and flexible, providing better support for newer features such as scripting, variables, and authentication methods that may not be fully supported in the older v1 format. By using the v2 format, you ensure that your collection takes advantage of the full capabilities of Postman, including more sophisticated testing and pre-request scripting, detailed descriptions, and improved structure and organization of API requests. This compatibility extends the usability and portability of the collection, making it easier to share and collaborate with team members or integrate into CI/CD pipelines, thereby enhancing the overall efficiency and effectiveness of API development and testing processes.\n\n\nEnroll Now:\nEnroll today to gain access to a treasure trove of knowledge and practice material that will set you apart in the job market. Let's embark on this journey together to unlock your potential and ace your interviews with confidence.",
      "target_audience": [
        "Software Developers: Developers looking to streamline their workflow by integrating API testing into the development process will find this course invaluable. Understanding how to test APIs efficiently can help in catching bugs early and improving the quality of your code.",
        "Front-end and Back-end Developers: Those who work on the client-side or server-side can benefit from learning how to test APIs to ensure seamless integration and communication between different parts of an application.",
        "QA Engineers: Quality Assurance professionals seeking to enhance their testing strategies with comprehensive API testing skills will find this course aligns perfectly with their goals. Postman's ability to automate tests and integrate with CI/CD pipelines can significantly improve the efficiency of testing processes.",
        "Test Automation Engineers: Professionals focused on automating testing processes will learn how to leverage Postman for automating API tests, making it easier to incorporate them into continuous testing cycles.",
        "Computer Science Students: Students pursuing degrees in computer science or related fields can gain practical skills that complement their theoretical knowledge, preparing them for careers in software development or testing.",
        "Educators in Software Development: Educators looking to stay updated with industry-standard tools and practices can use this course to enhance their curriculum and provide students with relevant, practical skills.",
        "Product Managers: Understanding the basics of API testing can help product managers communicate more effectively with their development teams and contribute to the product development process more actively.",
        "Team Leads: Leads who oversee development or testing teams will benefit from understanding API testing workflows to better manage their teams and ensure high-quality outputs.",
        "Individuals with a keen interest in technology and looking to break into the tech industry. This course starts with the basics, gradually building up to more complex concepts, making it an ideal starting point for a career in software development or testing."
      ]
    },
    {
      "title": "REST API Testing with Rest Assured - Basics to Framework",
      "url": "https://www.udemy.com/course/rest-assured-with-java-basics-to-framework/",
      "bio": "Learn REST API testing + Data Driven Testing using excel/files + Integrate TestNG & Log4J Framework+OAuth2 Authorization",
      "objectives": [
        "Write Automation test scrips for REST APIs",
        "Implement Data Driven Framework (Using Excel/CSV) with complete end-to-end scenarios",
        "Automate OAuth2 Token generation and Call REST APIs",
        "Integrate test scripts with TestNG ,JUnit & Log4J Frameworks",
        "Call APIs with OAuth2 tokens",
        "Call Protected Rest APIs with Basic Authentication"
      ],
      "course_content": {
        "Installation & Set up": [
          "Introduction",
          "Install Java",
          "Install Eclipse",
          "Set up REST Assured using Maven"
        ],
        "REST Assured - Basics": [
          "Understand REST APIs",
          "Understand XML & JSON formats used by REST APIs"
        ],
        "MUST READ- Run REST APIs on Local machine": [
          "Run Rest Services locally on your machine",
          "Check point"
        ],
        "First Program": [
          "Write your first program to call REST API"
        ],
        "Understand Request Types-GET ,POST,PUT,DELETE": [
          "Introduction to Rest Methods & Pre-requisites",
          "GET - Calling Rest API",
          "POST - Calling Rest API with Path Parameter",
          "PUT - Calling Rest API with Path Parameter",
          "DELETE - Calling Rest API",
          "Wrap-up & cleaning up code",
          "REST API - Frequently used HTTP Status Codes",
          "Check point",
          "Assignments"
        ],
        "Working with Response Data": [
          "Introduction",
          "Reading Header values and Cookies from REST Response",
          "Extract values from JSON Response",
          "Extract values from XML Response",
          "Handling complex JSON using GPath & JSONPath",
          "Handling complex XML using GPath & XMLPath"
        ],
        "Authorizations -Basic & OAuth2": [
          "Basic Authentication",
          "Basic Authentication with Authorization token",
          "OAuth2 -Calling Rest URI with OAuth2 token",
          "Generate OAuth2 Token from Rest Assured Program",
          "Checkpoint"
        ],
        "Specifications": [
          "RequestSpecification",
          "Response Specification",
          "Checkpoint"
        ],
        "Framework - Log4J": [
          "Introduction to Log4J -Write first program",
          "Implement Log4J for RestAssured Test script"
        ],
        "Test NG - Framework to execute & test REST Assured Tests": [
          "Introduction to TesNG & Install plug-in and maven dependancy",
          "Write first TestNG Case",
          "Call REST APIs from TestNG Test Cases",
          "Using @DataProvider to call REST APIs"
        ]
      },
      "requirements": [
        "Basic knowledge on any programming language"
      ],
      "description": "By end of this course you will be familiar in testing REST APIs using  Rest Assured scripts.The course has been prepared in such a way that you can learn this course starting from basics to advanced topics in a progressive way. Course has assignments/quizzes for you to practice and strengthen your knowledge.\n\nBy end of this course you will be familiar in:\nDifferent method types used by Rest APIs - GET, POST, PUT and DELETE.\nWrite assertions for the REST API responses.\nSpecifications\n- Understand RequestSpecification and re-use them for multiple requests\n- Understand ResponseSpecification to simplify and re-use response assertions\nAuthorization\n- Call Protected Rest APIs with Basic Authentication\n- Generate OAuth2 Token using Java program\n- Call APIs with OAuth2 tokens\nFramework Integration\n- Write test cases using JUnit and TestNG Frameworks\n- Log messages using Log4J Framework\nData Driven Testing\n- Learn how to read data from CSV files\n- Learn how to read data from Excel sheets\n- Writing data to excel sheet\n- Implement Data Driven Framework with complete end-to-end scenarios.\nCourse Highlights:\n\"We respect your time\"- all the videos are short and straight to point without wasting your valuable time.\nAssignments  - Given assignments  along with required resources, which will help to do enough practice.\nShort and precise videos\nCheckpoint questions\nLocal Rest API :Provided a REST APIs which you can run on your local machine. You no need to depend on internet.\n\n\nSupport:\nI offer full support, answering any questions you have.\nThis means you’ll never find yourself stuck on one lesson with out progress. With my hand-holding guidance, you’ll learn smoothly through this course without any major issues.",
      "target_audience": [
        "Java developers and Testers who would like to get into REST API automation"
      ]
    },
    {
      "title": "Angular: Pruebas unitarias con Jest",
      "url": "https://www.udemy.com/course/angular-jest/",
      "bio": "Crea tus propios tests unitarios",
      "objectives": [
        "Comprender cómo funcionan los test unitarios",
        "Configurar Jest en un proyecto Angular",
        "Realizar test con Jest",
        "Realizar test unitarios de buena calidad",
        "Buenas practicas de programación en los tests",
        "Entender qué tipo de test es necesario aplicar en cada momento",
        "Subir la cobertura de un proyecto"
      ],
      "course_content": {
        "Introducción": [
          "Presentación del curso",
          "Instructor",
          "Valoración del curso",
          "Software necesario"
        ],
        "Conceptos generales": [
          "¿Qué es un test unitario?",
          "Unit test - Integration test - E2E",
          "¿Cómo funciona un test unitario?",
          "¿Cuál es el mejor momento para hacer las pruebas?",
          "Cobertura/Coverage",
          "Jest"
        ],
        "Configuración y primeros pasos con Jest": [
          "Importante",
          "Eliminar Jasmine y Karma del proyecto",
          "Configurar Jest en Angular",
          "Configuración preset jest",
          "Archivos de prueba en un proyecto",
          "Carpeta coverage",
          "Lanzar tests"
        ],
        "Test unitario": [
          "Importante",
          "Aplicación para testear",
          "Instalar JSON Server",
          "Estructura de un fichero de pruebas (.spec)",
          "Crear test y configurar el TestBed",
          "Fallos comunes configurando el TestBed",
          "Test a métodos con return",
          "Test a métodos sin return (uso de spyOn)",
          "Test a métodos privados",
          "Finalizando cart component",
          "Test a suscripciones (subscribe-Observable)",
          "Mock de un servicio",
          "xit, fit, it.only, xdescribe, fdescribe, describe.only",
          "beforeEach, beforeAll, afterEach, afterAll",
          "Test a un pipe",
          "Ver antes del siguiente video",
          "Test a un servicio (Con peticiones a API)",
          "Finalizando book service",
          "Alternativas para instanciar un componente o servicio",
          "Test a rutas con RouterTestingModule Parte 1",
          "Test a rutas con RouterTestingModule Parte 2"
        ],
        "Angular Material - Diálogo": [
          "Usando MatDialog en el proyecto",
          "Adaptando tests en cart component",
          "Test a confirmation dialog component"
        ],
        "Ampliación": [
          "Automatizar test antes de generar el build",
          "Introducción a los test de integración",
          "Test a formularios",
          "Test a document y window",
          "Extensiones de VSCode que utilizo"
        ],
        "Cierre del curso": [
          "Consejos finales",
          "Despedida",
          "BONUS - Información extra"
        ]
      },
      "requirements": [
        "Tener una base de programación y de Angular",
        "Interés y ganas de aprender"
      ],
      "description": "En este curso aprenderás todo sobre los tests unitarios con Jest. Serás capaz de comenzar a realizar tests desde los más básicos, hasta los más completos.\nAprenderás a hacer tests de buena calidad, que no solo cubran líneas de código, sino que prueben el código bien. Además, te daré consejos para que puedas analizar que tipo de test es mejor aplicar en cada momento.\n\n\nEl curso está dividido en los siguientes puntos:\n1. Introducción\nPresentación del curso\nInstructor\nValoración del curso\nSoftware necesario\n2. Conceptos generales\n¿Qué es un test unitario?\nUnit test - Integration test - E2E\n¿Cómo funciona un test unitario?\n¿Cuál es el mejor momento para hacer las pruebas?\nCobertura/Coverage\nJest\n3. Configuración y primeros pasos con Jest\nEliminar Jasmine y Karma del proyecto\nConfigurar Jest en Angular\nArchivos de prueba en un proyecto\nCarpeta coverage\nLanzar tests\n4. Test unitario\nAplicación a testear\nInstalar JSON Server\nEstructura de un fichero de pruebas (.spec)\nCrear test y configurar el TestBed\nFallos comunes configurando el TestBed\nTest a métodos con return\nTest a métodos sin return (uso de spyOn)\nTest a métodos privados\nFinalizando cart component\nTest a suscripciones (subscribe-Observable)\nMock de un servicio\nxit, fit, it.only, xdescribe, fdescribe, describe.only\nbeforeEach, beforeAll, afterEach, afterAll\nTest a un pipe\nTest a un servicio (Con peticiones a API)\nFinalizando book service\nAlternativas para instanciar un componente o servicio\nTest a rutas con RouterTestingModule\n5. Angular material - diálogo\nUsando MatDialog en el proyecto\nAdaptando tests en cart component\nTest a confirmation dialog component\n6. Ampliación\nIntroducción a los test de integración\nAutomatizar test antes de generar el build\nTest a formulario\nTest a document y window\nExtensiones de VSCode que utilizo\n7. Cierre del curso\nConsejos finales\nDespedida\nBONUS - Información extra\nAVISO: Este curso es similar al curso que imparto llamado \"Angular: Pruebas unitarias con Jasmine y Karma\". Se realizan las pruebas unitarias al mismo proyecto, pero utilizando la sintaxis de Jest en lugar de Jasmine. En el caso de que hayas realizado mi otro curso, este curso le podría servir para aprender a configurar Jest en Angular.",
      "target_audience": [
        "Desarrolladores de Angular",
        "Personas que quieran aprender a realizar tests unitarios",
        "Personas que no tengan conocimientos de testing o que quieran ampliar sus conocimientos"
      ]
    },
    {
      "title": "Importance of Static Testing in Achieving a High ROI",
      "url": "https://www.udemy.com/course/importance-of-static-testing-in-achieving-a-high-roi/",
      "bio": "Static Testing Secrets are Revealed",
      "objectives": [
        "Learn how to start application testing before a single line of code is written and identify issues that would potentially be converted into functional defects",
        "Learn the entire methodology behind inspection methods and static testing on business and functional requirements, design documentations, prototypes, wireframes, and use cases",
        "Learn the principal of shift-left testing, which few companies fully understand or are willing to invest in",
        "Learn how to run inspection meetings and who should be invited as part of the meeting",
        "Understand how to apply various static testing checklists",
        "Learn the main difference between static and dynamic testing",
        "Learn why you can save your company hundreds of thousands of dollars by implementing Static Testing Methodology",
        "Learn formulas to calculate the ROI of static testing"
      ],
      "course_content": {
        "Start Here": [
          "Introduction",
          "Complete Requirements Specifications are Critical",
          "Overview of Static Testing",
          "Static Testing at Every Stage of SDLC",
          "Advantages of Static Testing over Dynamic Testing",
          "Elements of Static Testing",
          "Static Testing Review Techniques",
          "Success Factors for Reviews",
          "Real Return on Investment",
          "Static Testing as a Service",
          "Lecture 11: Static Testing Checklists",
          "Static Testing Quiz"
        ]
      },
      "requirements": [
        "Students need to understand the different phases within the Software Development Life Cycle"
      ],
      "description": "With only 25% of companies actually engaging in it, Static testing is frequently overlooked as a viable option. Many assume the time that would be spent static testing would be better spent on design or coding. They are correct that static testing is time consuming, can be costly, and that it requires complete buy-in from the management team. While not always easy, static testing is not nearly as costly as fixing the defects introduced by skipping this important step.\nPlease remember this formula which you will not find anywhere on Google:\nStatic testing > Better Documentation > Better Code > Fewer Defects > Faster Delivery > Higher Quality > Happier Customers\nIntroduced right after the requirements gathering phase, static testing is crucial if you want to reduce the number of defects introduced to the system or application under test. After this course you will be able to use your own static testing methodology that can be implemented at any organization. You'll leverage QA Mentor's proprietary checklists to validate and verify every single artifact in the Software Development Life Cycle. You'll also learn how to easily show your management the potential Return on Investment (ROI) before the process begins, and then show them exact ROI afterwards. And believe me, they will be shocked on how much money you will save the company!\nYou should know that the cost of a defect found during traditional testing is about 10-20x the cost of one found in static testing. That may seem exaggerated, but here's why that's true. It takes longer to fix a defect once it's been coded into a functioning system. Finding the defect may take hours of a tester's time, then additional hours to fix the defect that could involve more than one developer or DBA. Next, the fix must be verified by a tester once more. All totaled, a defect found during traditional testing can take 5 – 20 hours (or more) to fix and verify. Contrast that with finding that same defect in static testing. Fixing it requires no code changes and only takes 30 – 60 minutes, sometimes even less so the difference in cost is dramatic.\nIn this\n10 video lecture e-learning course\n, you will learn how to implement a static testing phase within your Software Development Life Cycle. You will learn how to start application testing before a single line of code is written and identify issues that would potentially be converted into functional defects if not detected in the Static Testing Phase. You'll learn the entire methodology behind inspection methods and static testing on business requirements, functional requirements, design documentations, prototypes, wireframes, use cases, etc. At the end of this course you will test your knowledge by taking 40 questions test.\nAs part of this course you will receive\n4 complimentary\nstatic testing checklists which you can use to inspect and validate Use Cases, Functional Requirements, Prototype and Code Reviews. Also as a bonus you will have a direct interaction with CEO of QA Mentor Ruslan Desyatnikov by asking any questions relating to course material via email.\nYou'll learn the principal of shift-left testing, something few companies fully understand or are willing to invest in, and how to calculate ROI on static testing and impress your senior management. Find out how QA Mentor's CEO Ruslan Desyatnikov was able to save one company over 10 million dollars using these principals and methods by stopping design and development of multi-year platform while using static testing techniques. These are only a few of the many things you will learn that are based on real, hands-on experience instead of just textbook theories. Ruslan Desyatnikov is eager to share his secrets of Static Testing, gleaned from nearly 20 years of active QA experience implementing static testing in companies such as HSBC, Citi, Sterling, Sterling and several other fortune 100 companies. Invest in yourself and your future! You will be glad that you did.",
      "target_audience": [
        "This course is intended for all QA Professionals from Junior level to Chief Quality Officer"
      ]
    },
    {
      "title": "Pruebas automatizadas Selenium Webdriver + python + pytest",
      "url": "https://www.udemy.com/course/selenium-python-de-cero/",
      "bio": "Creando un framework de pruebas desde 0 con selenium webdriver python y pytest",
      "objectives": [
        "Escribir código python",
        "Instalación y configuración de herramientas de automatización de pruebas",
        "Creación de tu propio framework de pruebas",
        "Configuración y operación de pytest",
        "Selenium WebDriver",
        "Integración del framework de pruebas con herramientas como slack"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al Curso",
          "Introducción a Selenium",
          "Conceptos básicos de pruebas",
          "Introducción"
        ],
        "Preparación del ambiente macOS": [
          "Instalación del IDE (Pycharm)",
          "Instalación de Python",
          "Instalando librerías de selenium",
          "Instalando binarios de WebDriver",
          "Primera prueba en Selenium WebDriver"
        ],
        "Preparación del ambiente Windows": [
          "Instalación de Python",
          "Instalación PyCharm",
          "Instalación Selenium",
          "Descargar binarios WebDriver",
          "Validando instalación selenium WebDriver"
        ],
        "Mini curso python": [
          "Introducción",
          "Tipos de datos y variables",
          "Operadores aritméticos binarios",
          "Operadores aritméticos unarios",
          "Entrada de datos por teclado",
          "Operadores lógicos y condicionales",
          "Operadores relacionales",
          "Bucle while",
          "Bucle for",
          "Break",
          "Continue",
          "Else en bucles",
          "Funciones",
          "Funciones con parametros",
          "Listas",
          "Ejemplo Listas",
          "Manejo de excepciones",
          "Quiz - Python"
        ],
        "Crear framework de pruebas con pytest": [
          "Introducción",
          "Herramientas",
          "Configurando pytest",
          "Ejecutar las pruebas",
          "Uso de marcadores (marks)",
          "Uso de parametros",
          "Reporte de pruebas",
          "Integración con slack"
        ],
        "Selectores elementos web": [
          "Introduccion",
          "ID",
          "Name",
          "Class Name",
          "Selector Xpath"
        ],
        "Interactuando con diferentes elementos Web": [
          "Textbox",
          "Checkbox",
          "Calendario",
          "Combobox",
          "Drag and drop"
        ],
        "Interactuando con el navegador": [
          "Navegación",
          "Alertas",
          "Cookies",
          "Buscar elementos en iframe",
          "Windows",
          "Tomando Screenshots"
        ],
        "Page Object Model (POM)": [
          "Introducción",
          "Ejemplo implementación Page Object Model (POM)",
          "Creando el framework paso a paso usando POM",
          "Ejecutando las pruebas en diferentes ambientes"
        ]
      },
      "requirements": [
        "No hay pre-requisitos para este curso",
        "NO se necesita experiencia en programación",
        "Deseos de aprender Selenium WebDriver"
      ],
      "description": "En este curso aprenderás a montar totalmente desde cero tu framework de pruebas automatizadas utilizando selenium webdriver, el lenguaje de programación python y el framework pytest. Python actualmente es uno de los lenguajes más utilizados a nivel mundial y el más demandado para automatización de pruebas en nuevos proyectos. La idea fundamental es que puedas dar ese paso inicial en el mundo de la automatización de pruebas con selenium webdriver y te sientas en la confianza de empezar a trabajar automatizando pruebas en tu empresa o de aplicar a nuevos puestos de trabajo que requieren automatización.\n\n\nEl curso está dividido por secciones, donde se agrupa todo el contenido relacionado.\nSeccion 1 - Introducción:\n* Introducción al curso\n* Introducción a selenium webdriver\n* Conceptos básicos de prueba\n\n\nSección 2 - Preparación del ambiente:\n* Instalación del IDE\n* Instalación de python\n* Instalación de librerias necesarias\n* Instalación de Selenium WebDriver\n\n\nSección 3 - Mini curso de python:\n* Aquí aprenderás sobre variables, tipos de datos, operaciones, estructuras condicionales y repetitivas, funciones, listas y manejo de excepciones.\n\n\nSección 4 - Creación de un framework de pruebas:\n* Herramientas necesarias\n* Configuración de las herramientas\n* Reportes de resultado de ejecución de pruebas\n* Integración con slack\n\n\nSección 5 - Selectores web:\n* Introducción\n* Class Name\n* ID\n* Name\n* Xpath\n\n\nSección 6 - Interacción con diferentes elementos web:\n* Textbox\n* Checkbox\n* Calendario\n* Combobox\n* Drag and Drop\n\n\nSección 7 - Interacción con el navegador:\n* Navegación\n* Alertas\n* Cookies\n* Iframe\n* Manejo de ventanas\n* Screenshots\n\n\nSección 8 - Introducción a Page Object Model",
      "target_audience": [
        "Analistas que quieran pasar de Pruebas manuales a pruebas automatizadas",
        "Desarrolladores que quieran aprender Selenium WebDriver"
      ]
    },
    {
      "title": "All about XPath and CSS Selectors for Automation Testing",
      "url": "https://www.udemy.com/course/xpath-and-css-selectors-master-classes-use-selenium-playwright-cypress/",
      "bio": "XPATH & CSS SELECTORS for Selenium WebDriver, Locators by ID/Class, HTML, Selector Hub, Relative Xpath Finder,Playwright",
      "objectives": [
        "Creating Xpath locators for all type of elements including Dynamic elements, Relative elements",
        "Creating CSS Selector locators for all type of elements including Dynamic elements, Child/Sibling elements",
        "Basic and Advance concepts of Xpath & Advance CSS Selector",
        "Able to work in Automation tools including Selenium Web driver, Cypress, Playwright",
        "HTML & XML basics",
        "How to Inspect Element and read HTML DOM for elements details and attributes",
        "How to validate Xpath & CSS Selector on console (developer tool)",
        "Using XPath and CSS in Selenium WebDriver Scripts",
        "Using General locators. like ID, Class etc.",
        "Live Examples of several web sites for relevant examples",
        "Available browser's extensions and tools to get Xpath & CSS Selector locators",
        "Element Locating Strategies",
        "Selector Hub, Relative XPath finder and more.."
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Language Foundation - HTML & XML basics": [
          "HTML basic",
          "XML vs HTML"
        ],
        "Web Elements and Locators - Inspect, validate and implement locators": [
          "How to Inspect Element",
          "General locators",
          "Quiz Time!"
        ],
        "Developer's Tool and Browser Extensions to find XPath & CSS selector": [
          "Tools & Chrome Browser Extensions"
        ],
        "XPath Basics": [
          "XPath Basics - using Attributes & using Text of element",
          "Relative and Absolute XPath"
        ],
        "XPath Advance": [
          "Xpath Advance - using Logical Operators, Indexing, Multiple Elements, Wildcards",
          "Dynamic Elements using XPath - use of Start-with() , Contains()"
        ],
        "XPath Axis": [
          "Xpath Axis - Following, Preceding, Parent, Child, Siblings, Descendant, Ancestor",
          "Quiz Time!"
        ],
        "CSS Selector basic": [
          "Single and Multiple Elements using CSS Selector"
        ],
        "CSS Selectors Advance": [
          "CSS Selector for Dynamic Elements",
          "CSS Selector for Sibling Nodes",
          "CSS Selector for Child Nodes (Direct & Sub Childs)",
          "CSS Selector for Child Nodes (First, Last, Nth Child)",
          "Quiz Time!"
        ],
        "Live Examples using Automation Tools": [
          "Example on Selenium Web driver Automation Tool",
          "Example on Playwright Automation Tool and free downloadable playwright framework",
          "Example on Cypress Automation Tool"
        ]
      },
      "requirements": [
        "No prior knowledge of programming is required to learn this course about XPath and CSS Selector."
      ],
      "description": "Basic to Advance XPath and CSS Selectors Master Classes.\nLocators by ID/Class/Name + XPATH + CSS SELECTORS + HTML + XML + Selector Hub+Relative Xpath Finder + Selenium WebDriver\nGet free downloadable playwright framework as a bonus.\nThis course covers all the topics you need to learn XPath & CSS Selector without having any prior knowledge of any programming language, tool or extensions.\nWhile starting as new automation tester or even after having knowledge of automation tools (selenium Web Driver, Cypress, Playwright etc.) , This is the most challenging part in automation that how to locate any element if it is changing its attribute value each time or complexity in getting unique locator of element or it has complex structure or any reason..\nThis Course includes all the solution of these problems.\nConcepts covered with live examples-\nLocating Elements By Class, ID, Name, Link Text, Partial Link Text\nHands on Exercises on Locaters with live examples\nXPath - Basics & Advanced\nXPath - Handling Dynamic elements\nXPath Axes (Element Relationships)\nCSS Selectors - Basics\nCSS Selectors - Advanced (Child and Sibling nodes)\nChrome Extensions to create Locators - Selector Hub, Relative XPath finder etc.\nUse of Browser's Developer tool to inspect and validate the elements locator\nHTML DOM Structure Basics\nXML basics\nDo a Hands-on exercises after taking each sessions in this course. Please feel free to contact me for any query.\nAll The Best and Happy learning!",
      "target_audience": [
        "Beginner Automation Tester",
        "Automation tester wants to learn advance concepts to create XPath & CSS Selectors",
        "Software developer or Software tester who wants to learn XPath & CSS Selector",
        "Manual Testing Professionals"
      ]
    },
    {
      "title": "Robot Framework | Step-by-Step for Beginners",
      "url": "https://www.udemy.com/course/robot-framework-step-by-step-for-beginners/",
      "bio": "Learn Robot Framework from scratch",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic computers knowledge"
      ],
      "description": "This course is created for complete beginners.\nRobot Framework with Eclipse | Step-by-Step for Beginners\nIf you want to learn Robot Framework from scratch, this course is for you. Very basic step by step video guides to take you from knowing nothing on Robot Framework to developing a project for Test Automation.\n\n\nIn this course we will learn:\nWhat is Robot Framework\nHow to install and setup Robot Framework\nHow to install Python (Mac & Windows)\nEclipse IDE for Robot Framework\nSetup RED robot editor - plugin on eclipse\nCreate your first Robot Framework project\nCreate your first Robot Framework test\nFirst Selenium test in Robot Framework\nLearn Variables\nKeywords\nTags\nSetup & Teardown\nReports and logs\nHow to run from command line\nHow to use Jenkins for Continuous Integration\nAnd much more...\nDo not worry if you have never used Robot Framework earlier. I will guide you from scratch.\nLet's Get Started...",
      "target_audience": [
        "Robot Framework Beginners",
        "Beginners curious to learn Robot Framework and automation testing using selenium and other libraries"
      ]
    },
    {
      "title": "Playwright API Testing Mastery with TypeScript",
      "url": "https://www.udemy.com/course/playwright-api-testing-mastery-with-typescript/",
      "bio": "Learn and build a robust Playwright API testing framework in 2 weeks. Leverage AI and Copilot to scale even faster.",
      "objectives": [
        "What is API, how does it work, and how to interact with APIs",
        "How to perform GET, POST, PUT, and DELETE requests using built-in Playwright tools.",
        "How to make validation of JSON response object",
        "How to efficiently manage and organize your tests to scale",
        "How to build a framework using a \"Fluent Interface Design\" to improve the API scripting experience",
        "How to improve reporting and error handling with additional log output",
        "What is JSON Schema, how to make schema validation, and how to generate it automatically",
        "How to use AI and Copilot Agent to speed up API scripting development",
        "How to create customized assertions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Test Application Ovwerview",
          "Configuration of Development Environment",
          "Playwright Setup"
        ],
        "JavaScript and TypeScript Fundamentals": [
          "Hello World",
          "Variables, Constants and Data Types",
          "Concatenation and Interpolation",
          "Objects and Arrays",
          "Relational and Equality Operators",
          "Logical Operators",
          "Conditional Statement",
          "Loops",
          "Functions",
          "Class and Methods",
          "JavaScript vs TypeScript",
          "JavaScript Practice Test"
        ],
        "API Testing Basics": [
          "What is API?",
          "Exploring API using Postman",
          "Get Request",
          "Post Request",
          "Authorized Post Request",
          "Delete Request",
          "Put Request",
          "Test Hooks",
          "Test Execution",
          "Wrap Up"
        ],
        "Building a Framework": [
          "Before We Begin...",
          "Fluent Interface Design",
          "Test Fixtures",
          "URL Builder",
          "Request Handler Constructor",
          "Get Requester",
          "Post, Put, and Delete Requester",
          "Custom Logger",
          "Status Code Validator",
          "Assertions Enhancement",
          "API Configuration File",
          "Request Handler Improvement",
          "Authorization Helper",
          "Playwright Workers",
          "Automatic Authorization",
          "Playwright Configuration File",
          "Reporting Improvement"
        ],
        "Schema Validation": [
          "What is JSON Schema",
          "Schema Reader",
          "Schema Validator",
          "Schema Assertion",
          "Schema Generation",
          "Additional Data Formats",
          "Section Wrap Up"
        ],
        "Test Management": [
          "Managing Request Payload",
          "Test Data Generation",
          "Data-Driven Testing",
          "Detailed Log Analysis",
          "Environment Variables",
          "UI and API Tests in a Single Framework"
        ],
        "AI-Assisted Scripting with Copilot": [
          "Setting up Copilot",
          "Copilot Code Completion",
          "Copilot Ask Mode and Context Window",
          "Update Assertions using Copilot Agent Mode",
          "Assertions Generation and Agent Auto-Debugging",
          "Managing Instructions and Prompts",
          "Adding New Framework Features with Copilot Agent",
          "Automatic API Test Generation from UI Test"
        ]
      },
      "requirements": [
        "No prior programming skills required. Having experience with JavaScript, TypeScript or any other programming language would be a plus.",
        "Ask me a question in Q&A section of the class or send me a message if something is not clear or does not work."
      ],
      "description": "Master API testing using Microsoft Playwright and build production-ready automation frameworks that will set you apart in the competitive QA market. This comprehensive course takes you from complete beginner to confident API testing expert, regardless of your current programming experience.\nComplete Learning Path - No Prerequisites Required\nFoundation Building (Perfect for Beginners):\nMaster JavaScript and TypeScript fundamentals from scratch in under 2 hours\nUnderstand how APIs work and why testing them is crucial\nWrite your very first API tests using Playwright's powerful built-in tools\nLearn to interact with GET, POST, PUT, and DELETE requests confidently\nProduction-Ready Framework Development:\nBuild a scalable and maintainable API testing framework with a fluent interface design\nImplement advanced programming concepts and design patterns\nCreate streamlined testing solutions that integrate seamlessly into any project\nDevelop custom utility methods and enhanced reporting capabilities\nAdvanced Validation Techniques:\nMaster JSON Schema validation for robust API response testing\nGenerate JSON Schemas automatically for easy maintenance and updates\nCreate customized assertions that catch edge cases and ensure data integrity\nLearn industry best practices for error handling and debugging\nModern AI-Enhanced Workflows:\nSpeed up your API test scripting using Copilot AI Agent integration\nAutomate routine maintenance tasks and assertion generation\nLeverage cutting-edge tools to write cleaner, more efficient test code\nStay ahead of industry trends with AI-assisted development techniques\n\n\nThis course is perfect for:\nQA Engineers wanting to master API testing with modern tools\nManual testers ready to transition into automation\nDevelopers seeking to enhance their testing skills\nAnyone interested in building robust, maintainable test frameworks\nProfessionals looking to advance their careers with in-demand skills\nWhat You'll Achieve\nBy course completion, you'll have built a complete API testing framework ready for production use. You'll understand not just the \"how\" but the \"why\" behind effective API testing strategies. Most importantly, you'll have the confidence and skills to tackle any API testing challenge in your professional environment.",
      "target_audience": [
        "Quality Engineers who willing to pick up API testing and API automation",
        "SDETs and Automation Engineers who is exploring how to use Playwright efficiently for API testing",
        "Developers who what to automate API testing using a robust API automation framework (clone from template)",
        "Complete beginners who make first steps in API automation and want to start with Playwright"
      ]
    },
    {
      "title": "Using UFT Developer for WPF Desktop Apps (Basic Course)",
      "url": "https://www.udemy.com/course/using-uft-developer-for-wpf-desktop-apps-basic-course/",
      "bio": "Make your shift left testing successful with UFT Developer",
      "objectives": [],
      "course_content": {
        "UFT Developer Basics for WPF Desktop Application": [
          "Introduction",
          "Organize Application Models",
          "Building a Basic Test Script",
          "Calculation, Checkpoints and Output Values",
          "Parametrization and Data Driven Testing",
          "Working with Native Object Properties",
          "Using the Test Recorder",
          "Using Visual Relation Identifiers",
          "Additional Settings and Summary"
        ]
      },
      "requirements": [
        "IntelliJ Installation",
        "Java Basic Understanding",
        "JUnit Installation"
      ],
      "description": "UFT Developer helps you develop automated tests for a wide range of technologies, using standard IDEs with modern programming languages. UFT Developer requires familiarity with the basics of programming in the language you use to develop your tests.\nRequirements prior course:\nInstall the UFT Developer runtime engine on any machine where you want to run UFT Developer tests.\nInstall one or more supported IDEs and the relevant UFT Developer plugins on any machine where you want to write and edit UFT Developer tests.\nIn this course, you will learn how to use UFT Developer for Java using IntelliJ and JUnit as testing framework.\nIn the IDE of your choice, create a UFT Developer testing project, use UFT Developer to create test object descriptions and write tests that can perform operations on your applications.\nCreate a testing project\nCreate a UFT Developer testing project in the IDE of your choice, using the project templates provided with the UFT Developer plugins or use your own custom framework.\nCustomize your test settings\nCustomize the UFT Developer runtime server settings and report options.\nDefine test objects\nCreate test object descriptions that enable UFT Developer to identify the objects in your application and can withstand changes in the application you’re testing.\nWrite programmatic descriptions or use the visually oriented tools that UFT Developer offers to provide an interface to the tested application and its objects.\nWrite tests\nAfter you create test object descriptions, write automated tests whose steps call the methods and properties of these UFT Developer test objects.\nAdd code to verify application behavior\nVerify that the objects in your application look and behave as you expect.\nWhen these special steps return false results, the step and test fail, but no exception is thrown and your test continues to run.\n\n\nThis course will cover the following:\nBuild Application Models\nCreate Test Scripts\nRunning Test Scripts\nCalculation and custom checkpoints\nOutput Values and Parametrization\nData Driven Testing\nVisual Relation Identifiers\nUsing Reporter Object\nWorking with Test Recorder\nSummary\nUpon successful completion of this course, you will be eligible to:\nbe more productive\nbetter collaborate\nuse agile methodologies in a smarter way\nsupport the software delivery lifecycle\ntake on lead roles in your projects and advance in your career",
      "target_audience": [
        "Developers",
        "Testers",
        "Automation Engineers",
        "Technical Testers"
      ]
    },
    {
      "title": "Selenium WebDriver From Foundation to Framework [In Arabic]",
      "url": "https://www.udemy.com/course/selenium-webdriver-from-foundation-to-framework-in-arabic/",
      "bio": "Learn Automation Testing at your own Pace , Everything About Automated Web Testing with Selenium from A-Z in Arabic",
      "objectives": [
        "تعلم البرمجة بمساعدة مدرب محترف ف المجال و ف مكانك دون الحاجة للذهاب لأى مكان",
        "Create Page Objects using Selenium-WebDriver commands عند الإنتهاء من الكورس ستكون قادر على",
        "Create test scripts using the TestNG test frameworks عند الإنتهاء من الكورس ستكون قادر على",
        "Automate web based application using Selenium عند الإنتهاء من الكورس ستكون تعلمت",
        "The coding standards in designing Automation Frameworks عند الإنتهاء من الكورس ستكون تعلمت",
        "How to Install and setup Maven عند الإنتهاء من الكورس ستكون تعلمت",
        "Selenium Design Patterns عند الإنتهاء من الكورس ستكون تعلمت",
        "How to Install and setup Jenkins عند الإنتهاء من الكورس ستكون تعلمت",
        "How to Install and setup Docker عند الإنتهاء من الكورس ستكون تعلمت",
        "How to run your test script on cloud using SauceLabs عند الإنتهاء من الكورس ستكون تعلمت"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Introduction To Agile and Testing": [
          "Introduction to Agile and Testing",
          "Traditional and Agile Testing",
          "Test Automation Pyramid",
          "How to Become Agile Tester",
          "Recap",
          "Agile Tester Sample Quiz"
        ],
        "Planning for Automation Phase": [
          "Planning for Automation Phase",
          "Planning , Design and Development",
          "Choose Your Automation Tool",
          "Pick a Programming Language"
        ],
        "Introduction to Selenium": [
          "Selenium Introduction",
          "What is Selenium?",
          "Selenium Features",
          "Selenium Components",
          "Selenium WebDriver Architecture"
        ],
        "Selenium Setup on Windows": [
          "Introduction to Setup Process",
          "Install java JDK",
          "Install Maven",
          "Install Eclipse",
          "Install Chrome and Firefox Browsers",
          "Install TestNG"
        ],
        "Java and OOP for Testers": [
          "Introduction to OOP and Java",
          "Packages",
          "Packages - Demo",
          "Classes, Objects, and Methods",
          "Classes Demo part 1",
          "Classes Demo part 2",
          "Classes Demo Part 3",
          "Access Modifiers",
          "Variables and Data Types",
          "Local Variables Part 1",
          "Local Variables Part2",
          "Parameter Variables",
          "Instance Variables",
          "Class (Static) Variables",
          "Strings - Working With Text",
          "Arithmetic Operators",
          "Relational Operators",
          "Logical Operators",
          "Assignment Operator",
          "Inheritance",
          "Overriding Part1",
          "Overriding Part2",
          "Control Structures",
          "Switch Branch",
          "For Loop",
          "While Loop",
          "Do While Loop",
          "IF , Else and Else IF Branch",
          "Arrays",
          "Encapsulation",
          "Interfaces",
          "Java - Exceptions",
          "Catch Exceptions",
          "Multiple Exceptions",
          "Introduction to Polymorphism",
          "Polymorphism Demos",
          "Introduction to Constructors",
          "Types of Constructors",
          "Constructors Overloading",
          "Introduction to Abstraction",
          "Abstraction Demos",
          "Linked Lists",
          "ArrayList - Part 1",
          "ArrayList - Part 2",
          "Writing and Reading files using java.IO",
          "Code Java Project"
        ],
        "Write your first Script using Selenium WebDriver": [
          "Introduction",
          "Setup your Selenium Project",
          "Write your First Selenium Script - Part1",
          "Write your First Selenium Script - Part2",
          "Write your First Selenium Script - Part3",
          "Write your First Selenium Script - Part4",
          "WebDriverDemo Project"
        ],
        "Working with Maven": [
          "What’s Maven",
          "Why To Use Maven In Selenium Project?",
          "How Does Maven Handle The Updates Of A Dependency?",
          "Install Maven Plug-In In Eclipse",
          "Setup A Maven Project In Eclipse",
          "Maven First Demo",
          "Maven Chrome",
          "Maven Firefox",
          "Maven Internet Explorer",
          "First Selenium Code Project"
        ],
        "Working with TestNG Framework": [
          "TestNG Introduction",
          "TestNG Features",
          "Why do we need TestNG in Selenium?",
          "TestNG Annotations",
          "TestNG Annotation Demo1",
          "TestNG Annotation Demo2",
          "TestNG Demo - Create TestNG Class using Template",
          "Benefits of Using Annotations",
          "TestNG Parameters",
          "TestNG Parameters - Disable Test Method",
          "TestNG Parameters - Method Dependency",
          "TestNG Parameters - Multiple Parameters",
          "TestNG Parameters - Groups Part1",
          "TestNG Parameters - Groups Part2",
          "TestNG Assertions",
          "TestNG Report Generation"
        ],
        "Deep Dive into Selenium WebDriver": [
          "Introduction to Deep Dive into Selenium WebDriver",
          "Finding Element",
          "Finding Elements - Inspecting Elements",
          "Finding Elements By ID",
          "Find Elements By Name",
          "Find Elements By Class",
          "Finding Elements By TagName",
          "Find Elements Using CSS Selector",
          "Finding Element By FindingElements",
          "Find Elements - Links",
          "Find Elements Using XPath",
          "Browser Navigation Commands",
          "Working with Elements - Textboxes and Buttons",
          "Working with Elements - Checking Element's text",
          "Working with Elements - Dropdown and Lists",
          "Working with Elements - Checkboxes",
          "Working with Elements - WebTables",
          "Working With Selenium API",
          "Working with Elements - isElement Present",
          "Working with Elements - Elements State",
          "Working with Elements - Double Click",
          "Working with Elements - Drag and Drop",
          "Working with Elements - Alerts",
          "Working with Elements - Prompt Alert",
          "Working with Elements - Confirm Alert",
          "Handling Multiple Windows",
          "Handling Session Cookies",
          "Synchronizing Tests - Introduction",
          "Synchronizing Tests - ImplicitlyWait",
          "Synchronizing Tests - Explicit Wait",
          "Synchronizing Tests - Fluent Wait",
          "Working with Frames",
          "Executing the JavaScript Code with Selenium WebDriver",
          "Scroll To Botton Of Page using JavaScript",
          "Working with Context Menu",
          "Take Screenshot on Failure using Selenium WebDriver",
          "Check All Broken Images using HttpClient",
          "Check All Broken Links using HttpURLConnection",
          "Upload file using Selenium WebDriver",
          "Upload file using Selenium WebDriver and Robot Class",
          "Download file with Firefox and FirefoxOptions",
          "Download file with Chrome and ChromeOptions",
          "Automating the HTML5 video player",
          "Automating the HTML5 Canvas",
          "Deep Dive Code Project"
        ]
      },
      "requirements": [
        "لا يشترط خبرة ف لغة برمجة أو كتابة الأكواد",
        "Test Automation لا يشترط خبرة فى"
      ],
      "description": "مرحبا بحضراتكم ف الكورس الخاص ب\n\nSelenium WebDriver From Foundation to Framework [In Arabic]\n\n\nتم تصميم هذا الكورس خصيصا لمختبرى جودة البرمجيات الذين يريدون البدء ف مجال\nTest Automation using Selenium WebDriver\n(test automation) و فى حالة أنه لا يوجد عندك خلفية برمجية أو استخدمت قبل ذلك لا يوجد مشكلة ف ذلك\nفكل جزء ف الكورس شرح بطريقة مفصلة من البداية للأحتراف و أيضا مع أمثلة عملية و كتابة أكواد أثناء الشرح\n(test automation) سوف تتعلم مبادئ البرمجة بإستخدام جافا حتى تستطيع البدء ف الكورس و الأنتقال بعد ذلك لكتابة\nفى بداية الكورس سوف تتعلم مبادئ\nSelenium WebDriver\n\nمرورا بكل شئ متعلق به من كيفية تنفيذ الأوامر المختلفة\nTestNG Framework و سوف تتعلم أيضا كيفية التعامل مع تنفيذ الأوامر بإستخدام\nAssertions  و التأكد من النتيجة عن طريق\nو بعد ذلك كيفية مشاهدة و معاينة النتائج الخاصة بتفيذ الكود من خلال المتصفح الخاص بك\n\n\nمحتوى الكورس و نظرة عامة عن المواضيع التى سندرسها معا\n\nBuild a strong foundation in Java and object-oriented programming with this tutorial for beginners.\nJava Development Kit Installation\nClasses and Objects\nTypes and Operators\nAccess Modifiers\nObject-Oriented Programming (OOP)\nArrays List and Linked List\nLoops and Conditionals\n\n\nBuild a strong framework in Selenium WebDriver with this tutorial for beginners.\n\nSelenium WebDriver Setup.\nFind and inspect web elements using different browsers.\nWrite your first Selenium script using Selenium WebDriver 3.0 and different browsers.\nWorking with Maven Projects.\nSelenium Design Patterns.\nSelenium Grid and Parallel Testing.\nData-Driven Test.\nBehavior-Driven Development.\nHeadless Testing.\nRunning your script on Cloud Using Sauce Labs.\nRunning your scripts with Jenkins CI server and GitHub.\n\n\nبعد الانتهاء من هذا الكورس سوف يتمكن الطلبة من كتابة\n\nAutomated tests using Selenium WebDriver and Java\n\nو سوف تشعر بالثقة اتجاه لغة البرمجة جافا و فهم\nObject Oriented Programming (OOP)\n\nTest Automation و زيادة معرفتك ب\nسوف تعمل جنبا إلى جنب مع المدرب ف كل الأمثلة و الأكواد و يمكنك تحميل الملفات كلها أيضا إلى جهازك الشخصى لكى تكون مرجع إليك بعد ذلك\n\nسوف تحصل على شهادة إتمام الكورس ف النهاية و تستطيع أن تستعين بها ف السيرة الذاتية الخاصة بك بعد ذلك",
      "target_audience": [
        "software test automation من يريد أن يتعلم و مهتم بتعلم",
        "الذين يريدون تعلم البرمجة بأستخدام الجافا Software QA and Testers",
        "Test Automation الذين يريدون تعلم البرمجة بأستخدام Software QA and Testers"
      ]
    },
    {
      "title": "Robot Framework with Java - Selenium",
      "url": "https://www.udemy.com/course/robot-framework-java/",
      "bio": "End to End Setup | Maven Integration | Reporting | Detailed Explanation of Keywords",
      "objectives": [
        "** Able to do End to End automation on Web Application using Robot Framework ***",
        "** Ready to write user defined keywords using Java Programming ***"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction to Robot Framework",
          "Installation Step 1: Setup JDK",
          "Installation Step 2: Setup Eclipse",
          "Installation Step 3: Add Plugin on Eclipse",
          "Installation Step 4: Setup Create Maven Project and Add Plugin",
          "Installation Step 5: Add Maven Dependencies"
        ],
        "Start Writing Test Cases": [
          "Different Files in Robot Framework",
          "Sections in Robot file",
          "Setup Executable Files",
          "Rules to write Robot TestCase",
          "Write First Test Case",
          "Define and Use Variables",
          "Use Browser Related Keywords"
        ],
        "Element Locators": [
          "Element Locators & Plugins",
          "HTML Basics",
          "CSS Element Locator - Syntax 1",
          "CSS Element Locator - Syntax 2",
          "CSS Element Locator - Syntax 3",
          "CSS Element Locator - Syntax 4",
          "CSS Element Locator - Syntax 5",
          "Xpath Element Locator - Syntax 1",
          "Xpath Element Locator - Syntax 2",
          "Xpath Element Locator - Syntax 3",
          "Xpath Element Locator - Syntax 4",
          "Xpath Element Locator - Syntax 5",
          "Xpath Element Locator - Syntax 6",
          "Xpath Element Locator - Syntax 7",
          "Xpath Element Locator - Syntax 8",
          "Xpath Element Locator - Syntax 9",
          "Xpath Element Locator - Syntax 10",
          "Xpath Element Locator - Syntax 11"
        ],
        "Work on Different Types of Elements": [
          "Work on Textbox",
          "Work on Button",
          "Check and Uncheck Checbox",
          "Select Radio Button",
          "Click on Link",
          "Select Value from Dropdown",
          "Common Examples"
        ]
      },
      "requirements": [
        "Basic understanding of Windows Machine",
        "Detailed Understanding of Selenium with Java Programming"
      ],
      "description": "Robot Framework is a test automation framework for acceptance testing.\nIt has easy-to-use tabular test data syntax and it utilizes the keyword-driven testing approach.\nIts testing capabilities can be extended by test libraries implemented either with Python or Java(Here we are going to cover java), and users can create new higher-level keywords from existing ones using the same syntax that is used for creating test cases.\nWe are going to cover,\n1.  Basic environment setup\n2.  Automation test cases in different browser\n3.  Waits\n4.  Architecture\n5. Resource Files\n6. User defined keywords\n7. Reporting",
      "target_audience": [
        "Manual testers looking opportunity in Functional automation",
        "Automation testers looking to integrate Robot framework with their existing framework"
      ]
    },
    {
      "title": "Selenium Java Framework from Scratch",
      "url": "https://www.udemy.com/course/selenium-java-framework-from-scratch/",
      "bio": "Step by Step for Beginners",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required",
        "Designed for complete Beginners"
      ],
      "description": "This course if for complete Beginners.\nYou can take this course without any prior knowledge on Selenium, Java or Automation.\nWe will go very basic, Step-by-Step and learn - How to create a Selenium Java Framework\nIn this course we will learn:\nHow to setup a Selenium Java Project from scratch\nHow to create Selenium Java scripts\nHow to run tests on different browsers - Chrome, Firefox, IE\nHow to find Web Locators\nHow to setup Page Object Model - POM\nHow to use TestNG\nHow to use Extent Reports\nHow to create Data Driven tests using Excel file\nHow to do Logging\nHow to do Exception Handling\nHow to run tests on Headless Browser\nand much much more...\nLet's Get Started...",
      "target_audience": [
        "Beginners in Selenium",
        "Anyone who wants to learn to create Selenium Java Framework from scratch"
      ]
    },
    {
      "title": "Boas práticas em automação de testes com Cypress",
      "url": "https://www.udemy.com/course/boas-praticas-em-automacao-de-testes-com-cypress/",
      "bio": "Aprenda como eliminar toda e qualquer má prática de testes automatizados escritos com o framework Cypress",
      "objectives": [
        "Como lidar com más práticas como browser testing",
        "Como lidar com más práticas como duplicação de código",
        "Como lidar com más práticas como flaky tests",
        "Como lidar com más práticas como hardcoded assertions",
        "Como lidar com más práticas como complexidade desnecessária",
        "Como lidar com más práticas como Page Objects",
        "Como lidar com más práticas como dados sensíveis versionados",
        "Como lidar com más práticas como testes lentos",
        "Como lidar com más práticas como testes dependentes",
        "Como lidar com más práticas como abstrações erradas"
      ],
      "course_content": {
        "Introdução | Pré-requisitos": [
          "Introdução",
          "Pré-requisitos"
        ],
        "Browser testing": [
          "Browser testing",
          "Exercício",
          "Exercício extra 1"
        ],
        "Duplicação de código": [
          "Duplicação de código",
          "Exercício",
          "Exercício extra 1",
          "Exercício extra 2",
          "Exercício extra 3",
          "Exercício extra 4"
        ],
        "Flaky tests": [
          "Flaky tests",
          "Exercício",
          "Exercício extra 1",
          "Exercício extra 2"
        ],
        "Hardcoded assertions": [
          "Hardcoded assertions",
          "Exercício",
          "Exercício extra 1"
        ],
        "Complexidade desnecessária": [
          "Complexidade desnecessária",
          "Exercício"
        ],
        "Page Objects": [
          "Page Objects",
          "Exercício"
        ],
        "Dados sensíveis versionados": [
          "Dados sensíveis versionados",
          "Exercício"
        ],
        "Testes lentos": [
          "Testes lentos",
          "Exercício",
          "Exercício extra 1",
          "Exercício extra 2"
        ],
        "Dependência entre testes": [
          "Dependência entre testes",
          "Exercício"
        ]
      },
      "requirements": [
        "Conhecimentos prévios de automação de testes com Cypress",
        "git versão 2.34.1 ou mais recente",
        "Nodejs versão v18.13.0 ou mais recente (LTS)",
        "npm versão 8.19.3 ou mais recente (LTS)",
        "Visual Studio Code versão 1.75.1, ou alguma outra IDE de sua preferência"
      ],
      "description": "Se você já conhece o básico de Cypress, dê o próximo passo para aprender sobre suas boas práticas, além de como lidar com más práticas, quando se deparar com elas.\nO Cypress é um framework open-source que possibilita a escrita de testes automatizados de forma fácil, rápida e confiável, tudo em JavaScript.\nAlém disso, o Cypress é amigável para desenvolvedores e automatizadores de teste, e não é baseado em Selenium!\nIsto significa que, com Cypress, é possível interagir com aplicações web de formas que antes não eram possíveis.\nDurante o curso você irá aprender como eliminar cada uma das seguintes más práticas na escrita de testes automatizados:\n\n\nBrowser testing\nDuplicação de código\nFlaky tests\nHardcoded assertions\nComplexidade desnecessária\nPage Objects\nDados sensíveis versionados\nTestes lentos\nDependência entre testes\nAbstrações erradas\nAo completar o curso de boas práticas em automação de testes com Cypress, você poderá colocar todos os conhecimentos adquiridos em prática em projetos reais, para eliminar toda e qualquer má prática na escrita de scripts de testes automatizados, o que lhe ajudará (e ao seu time) na evolução de projetos de forma sustentável, onde os testes serão robustos, legíveis e de fácil manutenção, trazendo confiança de que quando estão passando, tudo está ok e a nova versão pode ser liberada em produção.\nJunto-se a Escola Talking About Testing e se destaque em sua carreira!",
      "target_audience": [
        "Alunos dos cursos básico, intermediário, avançado, testes end-to-end e testes de regressão visual com Cypress e Percy da Escola TAT",
        "Testadores(as) e QAs que precisam lidar com más práticas na escrita de testes automatizados com Cypress",
        "Profissionais com experiência em JavaScript que querem aprender um framework de testes automatizados moderno e cada vez mais requisitado no mercado",
        "Estudantes de tecnologia da informação, sistemas de informação e ciência da computação",
        "Desenvolvedores(as) sem QAs dedicados em seus times"
      ]
    },
    {
      "title": "TESTES DE SOFTWARE NA PRÁTICA E AUTOMAÇÃO - CURSO COMPLETO",
      "url": "https://www.udemy.com/course/tudo-sobre-testes-de-software-na-pratica-curso-completo/",
      "bio": "Aprenda as técnicas de testes de software, a gerenciar o ciclo de vida do software com ALM, DevOps e mais na prática!",
      "objectives": [
        "Neste curso, o aluno será capaz de criar, manipular e gerenciar o ciclo de vida de desenvolvimento de um software na prática com foco em testes.",
        "O aluno será capaz de criar testes manuais e automatizados, trabalhar com as principais abordagens de testes (TDD, BDD entre outras)",
        "Criar testes de Performance, Carga e Stress",
        "Trabalhar com equipes de testes",
        "Utilizar recursos em Cloud Computer e Local para testes",
        "E muito mais..."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos básicos em programação",
        "Usaremos a linguagem C# e Visual Studio. Mas, tudo o que você aprender neste curso pode ser aplicado a outras plataformas e linguagens (falaremos disso em um dos nossos módulos).",
        "Ter instalado pelo menos o Visual Studio Developer 2017 ou superior",
        "Ter instalado pelo menos o SQL Server Developer 2014 ou versão superior"
      ],
      "description": "Este é um curso completo que irá ajudar você a como se tornar um profissional de testes de software na prática! Você irá conhecer as técnicas utilizadas para testar todas as fases e interfaces ao longo do desenvolvimento de software (desde a sua concepção até o momento da entregar ao cliente). E ainda, este curso vai além, porque você vai aprender a como gerenciar todo o clico de vida de desenvolvimento e testes do seu software utilizando as abordagens profissionais de ALM (Application Lifecycle Management) ao gerenciar o ciclo de vidas de suas aplicações e/ou projetos de forma integrada entre a necessidade de atender o negócio e a engenharia de software. E de quebra, você também vai aprender a trabalhar com a abordagem de DevOps, na qual suas práticas e ferramentas podem aumentar a capacidade de distribuir aplicativos e serviços em alta velocidade e otimizar e aperfeiçoar produtos em um ritmo mais rápido do que o das empresas que usam processos tradicionais de desenvolvimento de software. Essa velocidade permite que as empresas atendam melhor aos seus clientes e compitam de modo mais eficaz no mercado.\n\n\nPois bem, este é um curso completo e foi produzido utilizando tecnologias de ponta na prática. Tenho certeza de que você irá gostar muito e que sua curva de aprendizado será enorme.\n\n\nO seu futuro profissional depende das escolhas que você faz hoje. Invista em você, no seu futuro! (;\nBons estudos e sucesso!\n\n\n\nProf. Rodrigo Gonçalves Santana",
      "target_audience": [
        "Este curso, é para você que desejar torna-se um arquiteto de testes de software profissional e/ou se aperfeiçoar na área de testes de software conhecendo as principais ferramentas disponíveis hoje no mercado e como usar cada uma delas."
      ]
    },
    {
      "title": "Postman API Testing: Beginner to Advanced Masterclass",
      "url": "https://www.udemy.com/course/postman-api-testing-beginner-to-advanced-masterclass/",
      "bio": "Master API testing with Postman – from basics to automation, CI/CD integration, GraphQL, performance & security testing.",
      "objectives": [
        "Master API Basics & Postman Interface – Understand REST, SOAP, GraphQL APIs and navigate Postman efficiently.",
        "Create & Automate API Requests – Build GET, POST, PUT, DELETE requests with headers, parameters, and request bodies.",
        "Write Tests & Automate Workflows – Use JavaScript in Postman for test scripts, chaining requests, and automation.",
        "Run, Monitor & Document APIs – Perform scheduled testing, create mock servers, and generate professional API documentation."
      ],
      "course_content": {},
      "requirements": [
        "No prior coding or API experience required – This course is designed for absolute beginners.",
        "Basic computer skills – You should be comfortable using a browser and installing software.",
        "A computer with internet access – To download Postman and access APIs.",
        "Curiosity to learn about APIs and software testing – That’s all you really need to get started"
      ],
      "description": "Comprehensive Postman Course: Master API Testing from Beginner to Advanced\nWelcome to the ultimate Postman course designed to take you from zero knowledge to becoming a confident API testing professional. Whether you’re a beginner looking to understand the basics or a developer/QA engineer aiming to advance your skills, this course covers everything you need to know about Postman and API testing. You’ll gain hands-on experience with real-world projects, automation, and advanced testing techniques.\nWhy Learn Postman?\nPostman is the most widely used API testing tool globally, favored by developers, testers, and DevOps engineers. APIs (Application Programming Interfaces) are the backbone of modern software applications, enabling different software systems to communicate. Testing APIs efficiently ensures your applications work reliably, securely, and fast.\nWith this course, you’ll learn how to create, test, automate, document, and monitor APIs using Postman — making you an invaluable asset in any software development team.\nWhat This Course Covers:\nOur curriculum is designed to progress logically from basic concepts to advanced topics, ensuring you build a solid foundation and gain practical skills.\nModule 1: Introduction to APIs & Postman\nStart with the fundamentals. Understand what APIs are, why they’re critical, and how Postman fits into the development workflow. You will install Postman, learn its user interface, and explore basic API concepts like REST, SOAP, and GraphQL. Learn how HTTP works and the key request methods (GET, POST, PUT, DELETE, PATCH) to interact with APIs.\nModule 2: Understanding HTTP Methods & Requests\nDive deeper into making API requests. You’ll practice creating GET, POST, PUT, DELETE requests, and learn how to send parameters, headers, and authentication details. We explain query vs path parameters, the importance of headers, and different request body types (form-data, JSON, etc.).\nModule 3: Handling API Responses\nLearn to interpret API responses effectively. This module covers HTTP status codes, handling errors, and extracting useful information from JSON responses. You’ll work hands-on with public APIs to analyze real response data, which is vital for debugging and validation.\nModule 4: Collections & Workspaces in Postman\nOrganizing your work efficiently is key to productivity. Learn how to create and manage Postman collections and workspaces, share them with teams, and handle multiple projects smoothly. This module includes practical exercises on organizing APIs in collections and using personal and team workspaces.\nModule 5: Variables & Environments\nLearn how to make your API tests dynamic and reusable by using variables. Understand global, environment, collection, and local variables and how to use them in requests. Manage multiple environments like development, testing, and production with environment variables to switch contexts easily.\nModule 6: Authentication & Security in API Testing\nAPIs often require authentication. This module covers different authentication mechanisms like API Keys, Basic Auth, Bearer Tokens, OAuth 1.0 & 2.0, and more. Learn how to keep sensitive data secure using Postman’s environment secrets and safely test authenticated endpoints.\nModule 7: Writing Tests in Postman (JavaScript)\nAutomate API validation with Postman’s powerful scripting capabilities. You will learn JavaScript basics tailored for Postman, write test scripts with pm.test(), and validate responses, status codes, headers, and JSON content to ensure your API works as expected.\nModule 8: Automation with Postman Scripts\nAdvance your automation skills by chaining requests, using dynamic data, and writing pre-request scripts. Learn how to pass data between requests and automate multi-step workflows that simulate real-world API interactions.\nModule 9: Running API Tests with Postman Runner\nTest entire API collections at once using Postman’s Collection Runner. Understand iterations, data-driven testing with CSV and JSON datasets, and how to parameterize requests for bulk testing. This is essential for robust and scalable API test suites.\nModule 10: Postman Monitors & Scheduled API Testing\nAutomate API testing by scheduling monitors to run tests periodically, monitor uptime, and track performance. Learn to analyze monitor reports and set up alerts for failures to ensure continuous API reliability.\nModule 11: Mock Servers & API Documentation\nCreate mock APIs to simulate server responses during development. Learn how to set up mock servers and generate API documentation automatically from your collections, enabling better collaboration and communication with stakeholders.\nModule 12: Integrating Postman with CI/CD Pipelines\nDiscover how Postman fits into DevOps. Run API tests as part of Jenkins, GitHub Actions, or GitLab CI pipelines using Newman, Postman’s CLI tool. Automate testing in continuous integration workflows and export reports for analysis.\nModule 13: GraphQL & SOAP API Testing\nExpand your API testing skills beyond REST. Learn to test GraphQL queries and mutations and work with SOAP APIs, including understanding XML payloads and WSDL files. These skills are critical for comprehensive API testing in varied environments.\nModule 14: Advanced Debugging & Troubleshooting\nMaster debugging techniques to handle common API errors like timeouts, CORS issues, and authorization failures. Use the Postman Console and scripting breakpoints to diagnose problems and fix failing tests quickly.\nModule 15: Performance Testing with Postman\nUnderstand API performance metrics such as latency and throughput. Learn to run stress tests, analyze response times, and generate reports, helping you optimize APIs for speed and scalability.\nModule 16: Final Project & API Testing Case Study\nApply everything you’ve learned in a capstone project where you develop an end-to-end API testing workflow for a real-world API. Implement authentication, automation, documentation, and CI/CD integration. Receive peer reviews and feedback to polish your skills.\nWho Should Take This Course?\nBeginners with no prior experience who want to enter the world of API testing.\nDevelopers seeking to improve their API testing skills and automate tests.\nQA Engineers looking to enhance their testing toolset.\nDevOps Engineers aiming to integrate API tests into CI/CD pipelines.\nProject Managers and Product Owners who want to understand API testing basics to better collaborate with tech teams.\nWhat You’ll Gain\nIn-depth understanding of APIs and HTTP protocols.\nPractical hands-on experience with Postman UI and advanced features.\nAbility to write and automate API test scripts using JavaScript.\nSkills to create mock servers and generate API documentation.\nExpertise in integrating API testing into DevOps workflows.\nCapability to debug, troubleshoot, and optimize API performance.\nWhy Choose This Course?\nDetailed step-by-step tutorials for all levels.\nReal-world practical exercises and projects.\nClear explanations with a focus on industry best practices.\nUp-to-date content covering latest Postman features.\nLearn to handle REST, SOAP, and GraphQL APIs.\nSupport for continuous learning with future career path guidance.\nTools Required\nA computer with internet access.\nPostman installed (free version sufficient for most exercises).\nBasic understanding of JavaScript (covered in course for beginners).\nConclusion\nThis course offers the most comprehensive learning path for mastering API testing with Postman. Whether you want to become a skilled API tester or improve your development workflow, this course equips you with all the knowledge and practical skills needed to succeed in today’s API-driven software landscape.\nEnroll now and transform your API testing skills from beginner to advanced!",
      "target_audience": [
        "Beginners who want to understand APIs and how to test them using Postman.",
        "Aspiring QA testers and software testers looking to add API testing to their skillset.",
        "Developers and backend engineers who want to automate and document API testing workflows.",
        "Students and fresh graduates aiming to strengthen their practical knowledge of modern tools used in real-world software development.",
        "Technical support engineers, analysts, or product managers who work with APIs and need hands-on experience for better collaboration with developers."
      ]
    },
    {
      "title": "REST Assured Java Framework | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/rest-assured-java-framework-step-by-step-for-beginners/",
      "bio": "from scratch | Learn API Testing with REST assured | REST & SOAP | JSON | XML",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "******You do not need any prior knowledge*****",
        "Even non programming users can follow and learn from this course",
        "All basic setup and prerequisites are taken care in this course"
      ],
      "description": "This course is created for complete beginners.\nGet started with REST Assured step by step\nIf you are a complete beginner in API Testing and REST Assured, this course is for you. Very basic step by step videos to guide you from scratch.\nIn this session, we will learn\nWhat is REST Assured\nHow to Setup REST Assured API Testing framework from scratch\nHow to add REST and SOAP API Requests\nHow to do response validation\nHow to validate JSON and XML Schema\nAdding project to Git & GitHub\n\nIn case you are completely new to API testing and want to get some basics, can watch my course - Web Services API - Step by Step Beginner Tutorial\nThis will give you a complete overview of SOAP & REST web services, Can find this course on Udmey or my website AutomationStepByStep\n\n\nAll my free courses can be found on the website AutomationStepByStep\nBy the end of this course you will be able to create a REST assured API Testing framework in java\nYou will learn all the prerequisites and then start creating the framework from scratch\nComplete step-by-step hands-on knowledge with demo and examples\nI will teach you How to Add project to Git, Commit, Push and Clone projects\n\n\nEven non-programming users can follow and learn from this course\n\n\nWish you all the best\nLet's Get Started...\nRaghav Pal",
      "target_audience": [
        "Anyone who wants to learn REST assured from scratch",
        "Anyone who wants to learn API execution & testing with REST assured",
        "Beginners in REST assured API testing",
        "Beginners in Java API Test Automation framework"
      ]
    },
    {
      "title": "Mastering Software Performance Testing: JMeter, Ixora, Tools",
      "url": "https://www.udemy.com/course/mastering-performance-testing-techniques-and-jmeter/",
      "bio": "Master Performance Testing: Learn Load, Stress, and Soak Testing with JMeter, Tools, Techniques and Best Practices",
      "objectives": [
        "Performance Testing lifecycle",
        "Performance Testing types",
        "Test Scenario Design best practices",
        "Test Script development using JMeter",
        "Performance Counters monitoring and collecting on Windows and Linux",
        "Performance Tuning or Performance optimizations",
        "Performance Report generation",
        "Identify system bottlenecks"
      ],
      "course_content": {
        "Introduction": [
          "Performance Testing Definition and Ubiquitous Language",
          "Functional and Non-Functional Testing"
        ],
        "Key Concepts": [
          "Performance Testing bottleneck, test data and different environments",
          "Performance Testing process or lifecycle",
          "Performance Testing types",
          "Test Cases design principles",
          "Latency",
          "Caching",
          "HTTP protocol",
          "URL Encoding and Decoding",
          "Performance Testing Fundamentals",
          "Performance Testing Case Studies",
          "Performance Testing Cheat Sheet"
        ],
        "JMeter - Test Script tool": [
          "Install JMeter",
          "JMeter folders, how to install plugins and how to read errors",
          "First Test Script, how to organize steps, what is a Thread Group",
          "Overview of elements",
          "Test Script Recorder",
          "JMeter Samplers",
          "Regular Expression",
          "Regular Expression Extractor",
          "XPath",
          "JMeter templates",
          "Run JMeter in Non-GUI mode",
          "Stop JMeter Non-GUI test",
          "2 JMeter instances during Load Test",
          "JMeter Scripting Best Practices",
          "setUp and tearDown Thread Group definition",
          "Thread Group, setUp Thread Group, tearDown Thread Group real example",
          "Stepping Thread Group",
          "Other Thread Groups",
          "Timers - Best Practice",
          "Assertions",
          "Response Assertion",
          "Response Assertion - Best Practices",
          "Response Assertion - Multiple values check",
          "Duration Assertion",
          "Size Assertion",
          "XML and XPath Assertion",
          "Best Practices for using XPath Assertion",
          "Logic Controllers",
          "Stop vs Shutdown",
          "Loop Controller",
          "If Controller",
          "If Controller - solutions",
          "Automatic Report Generation",
          "Once Only Controller",
          "Simple Controller",
          "While Controller",
          "ForEach Controller",
          "ForEach Controller - practical example",
          "Switch Controller",
          "Switch Controller - practical example",
          "Transaction Controller",
          "Transaction Controller - practical example"
        ],
        "Performance Counters for Windows": [
          "Introduction",
          "Main performance counters",
          "Detailed performance counters"
        ],
        "Performance Counters for Linux": [
          "Introduction",
          "Main performance counters",
          "Detailed performance counters",
          "IxoraRMS - counters monitoring tool for Linux",
          "Ixora RMS download link"
        ],
        "Collect Performance Counters with JMeter plugins": [
          "How to collect performance counters with JMeter"
        ],
        "Performance Test Report": [
          "Introduction",
          "Test Report real example"
        ],
        "Performance Tuning": [
          "Overview"
        ],
        "Database Performance Tuning": [
          "Identify Slow Queries in order to add indexes"
        ],
        "Performance Testing for Mobile Applications": [
          "How Mobile Applications Communicate",
          "Performance Testing of Mobile Applications",
          "Test Mobile Applications with JMeter"
        ]
      },
      "requirements": [
        "No Quality Assurance experience needed You will learn everything you need to know"
      ],
      "description": "Enroll in my Performance Testing course and gain lifetime access to a constantly evolving learning experience. This course is regularly refreshed with new content to ensure you stay ahead with the latest tools, techniques, and best practices in the field. By joining, you're not just buying a course — you're investing in a personal mentor who will guide you through every step of your performance testing journey.\n\n\nPerformance Testing course Benefits:\n1) Lifetime access.\n2) Course is updated regularly and is growing fast.\n3) Besides JMeter load generator tool, I am planning to add information related to LoadRunner and Gatling load generator tools to the same course soon.\n4) Experienced Personal Mentor with questions and answers to any topics including advanced topics.\n5) Any feedback will be took into consideration and course will be improved.\n6) Course will have subtitles and will be translated into 32+ languages.\n7) I am open to collaborate with students in any language.\n\n\n\"Measure, Optimize, Excel: Ensuring Peak Performance Every Time.\"\n\"Learn, Teach, Repeat – It’s a Lifelong Journey.\"\n\"The Best Teachers Show You Where to Look, Not What to See.\"\n\"Every Student is a Star in the Making.\"\n\"Creating confident testers with the power to optimize any system.\"\n\"Where passion meets precision in performance testing education.\"\n\"Teaching the art of performance testing for real-world impact.\"\n\n\nUnlock the secrets to optimizing software performance with our comprehensive course on performance testing. Whether you’re a beginner eager to understand the basics or an experienced tester looking to deepen your expertise, this course will equip you with the knowledge and skills needed to ensure your applications perform at their best under varying conditions.\nIn this course, you will:\nLearn the Fundamentals: Start with a solid foundation by understanding key performance testing concepts such as load testing, stress testing, and endurance testing. Discover how these tests can help you identify and resolve performance bottlenecks.\nExplore Popular Tools: Get hands-on experience with industry-standard performance testing tools like JMeter. Learn how to set up, execute, and analyze performance tests using these powerful tools. Learn performance counters monitoring tools like PerfMon and Ixora RMS for different operating systems like Windows and Linux.\nMaster Best Practices: Delve into best practices for designing effective performance tests, including how to define test objectives, create realistic test scenarios, and interpret test results. Understand how to use performance metrics to make data-driven decisions.\nImplement Testing Strategies: Learn strategies for load, stress, and scalability testing to ensure your applications can handle real-world usage patterns and unexpected spikes in demand.\nAnalyze and Optimize: Develop the skills to identify performance issues, analyze test results, and implement optimizations. Gain insights into how to improve application performance based on your findings.\nApply Real-World Knowledge: Engage with practical exercises and case studies that simulate real-world performance testing scenarios. Apply your learning to troubleshoot and enhance performance in a variety of contexts.\nWhy Choose This Course?\nExpert Instruction: Benefit from expert instructors with extensive industry experience in performance testing and optimization.\nHands-On Learning: Practice with real tools and scenarios to solidify your understanding and gain practical experience.\nComprehensive Coverage: Cover all aspects of performance testing, from basic principles to advanced techniques, ensuring you’re well-prepared for any performance challenge.\nFlexible Learning: Enjoy lifetime access to course materials and learn at your own pace with our user-friendly platform.\nWho Should Enroll?\nSoftware Testers and QA Engineers\nDevelopers interested in performance optimization\nIT Professionals looking to expand their skills\nAnyone seeking to improve application performance and reliability\nEnroll now and take your performance testing skills to the next level. Equip yourself with the expertise to ensure your applications run smoothly, efficiently, and reliably. Your journey to mastering performance testing starts here!",
      "target_audience": [
        "This course is for both Software Testers and Developers"
      ]
    },
    {
      "title": "Introduction to POSTMAN - A Beginners guide",
      "url": "https://www.udemy.com/course/introduction-to-postman-a-beginners-guide/",
      "bio": "An Introduction into POSTMAN, \"the most popular REST Client in the world\", for the Absolute Beginner!!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to Postman",
          "****RATING THE COURSE****"
        ],
        "Installing Postman": [
          "Installing the Postman Standalone App(Windows & macOS)"
        ],
        "Launching Student App with Docker": [
          "Installing Docker on Windows OS",
          "Installing Docker on MacOsx",
          "Launching Student app docker image"
        ],
        "CRUD Operations with POSTMAN": [
          "GET Request(query parameters, path parameters)",
          "Create a new Student (POST method)",
          "Update student info(PUT request)",
          "Delete a student (DELETE method)"
        ],
        "Postman Collections": [
          "Setup BestBuy API Playground",
          "(ALTERNATIVE)-Launching Bestbuy API playground docker image",
          "Global,Environment & Collection Variables",
          "Creating collections in Postman",
          "Collection Runner in Postman"
        ],
        "Authentication in Postman": [
          "Basic Authentication in Postman"
        ],
        "Tests,Assertions in Postman": [
          "Writing Tests,Adding assertions!!"
        ],
        "Next Steps in your Journey!!": [
          "Next Steps!!"
        ]
      },
      "requirements": [
        "Knowledge of REST API"
      ],
      "description": "POSTMAN is a very popular tool used by software development teams in many companies. It is a very handy tool used by Developers when building RESTful web services, It is also used by many QA Engineers for testing, automating RESTful services.\nIt is the \"SWISS ARMY KNIFE\" of REST API Development, Testing. It provides many out of the box features for consuming Restful services.\nIn this course, you will learn the fundamentals of using POSTMAN, Below are some of the highlights\nPerform BASIC CRUD(Create, Read, Update, Delete) operations using POSTMAN\nLearn about Environment, Global & Collection Variables in Postman\nUsing Postman Collections to store & Organize requests.\nBasic Authentication using Postman\nWriting tests & adding assertions\nThe course also includes access to a Student Application on which students can practice CRUD operations, the best part is this application can be run locally!!\nThe course also teaches you how to set up the BestBuy API playground application which has about 50000 product, this application also supports all basic CRUD operations.\n\n\nWhether you are developing APIs or testing them, this course will provide you the fundamentals necessary for getting started with POSTMAN.",
      "target_audience": [
        "Anybody who wants to start learning POSTMAN"
      ]
    },
    {
      "title": "Selenium WebDriver with Java (Step-by-Step Guide)",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-for-beginners/",
      "bio": "Learn Selenium WebDriver with Java,Automation Testing: Master Selenium Java for Beginners",
      "objectives": [
        "By the end of this course,You will be Mastered on Selenium Webdriver with strong Core JAVA basics",
        "You will be in a position to pick any website over internet and can automate it with all the possible test cases",
        "Able to enhance Script Reliability and Maintainability",
        "You will learn, how to Automate Complex Web Interactions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Java?",
          "Variables",
          "Constructors",
          "This Keyword",
          "Arithmetic Operators",
          "Methods",
          "Static & Non Static Methods",
          "For Loop",
          "String Methods",
          "Arrays",
          "Arrays-2",
          "Selenium",
          "Installation of Java",
          "Creating Maven Project",
          "Run First Test case",
          "Loctators Identification Introduction",
          "Locators in Selenium",
          "Selectors Hub chrome",
          "Handle Windows Introduction",
          "Window Handle Methods",
          "WebDriver& WebElements Methods Introduction",
          "WebElement Methods",
          "Select Class Introduction",
          "Select Class methods-1",
          "Select Class Methods 2",
          "Actions Class Introduction",
          "KeyboardActions",
          "Mouse Methods",
          "Summarized cheat sheet",
          "Selenium Interview Questions With Answers Pdf"
        ]
      },
      "requirements": [
        "No pre-requisites required for this course. All prerequisites are included in this course from basics."
      ],
      "description": "This course covers Selenium WebDriver and Java topics in detail from basic to advanced levels.\nSo, if you don't have prior knowledge of Java, then you can begin with Java Modules.\nStart going through ‘Selenium WebDriver’ videos after you develop some fluency in Java. Remember, you don’t need to go through all sessions of Java Course before starting with Selenium WebDriver (because it is an in-depth course on Java and will take a while to finish). First 6 Sections of Java should be sufficient to get you ready for learning Selenium WebDriver.\n\nFeel free to post your questions/feedback in the block provided under each session-video. I will make sure all of your queries are addressed. ‘Course Outline’ below will give you an idea about the depth and the overall coverage of this course. If you want to learn any other Selenium WebDriver concept - which is not already covered in this course - then feel free to let me know via Udemy messenger.\n\nWhat You Will Learn:\nSelenium Basics: Begin your journey with a solid understanding of Selenium, even if you're new to automation testing.\nSelenium in Java: Dive deep into Selenium using Java as your programming language of choice, enabling you to create powerful web automation scripts.\nWhy This Course?\nStep-by-step teaching style\nReal interview questions and answers included(200)\nLifetime access with regular updates\nQuizzes and downloadable resources",
      "target_audience": [
        "Beginners Selenium Members"
      ]
    },
    {
      "title": "Cypress eXpress",
      "url": "https://www.udemy.com/course/cypress-express/",
      "bio": "Um curso rápido, prático e direto ao ponto para você aprender automação de testes do ZERO e do jeito certo",
      "objectives": [
        "Construir um projeto de testes de ponta a ponta para aplicações web",
        "Automatizar testes de regressão com Cypress",
        "Implementar reports ricos com screenshots e evidências em vídeos",
        "Preencher formulários automáticamente",
        "Boas práticas para implementação de testes automatizados",
        "Como validar o comportamento esperado",
        "Automação de ações que o usuário realiza em um navegador da Web",
        "Como testar aplicações simulando um ambiente real"
      ],
      "course_content": {
        "Comece aqui": [
          "Boas-vindas à QAx",
          "Meu canal no Telegram *",
          "Visual Studio Code",
          "Instalando Node 18",
          "Windows Terminal",
          "Git for Windows + Bash",
          "Diretórios QAx"
        ],
        "Iniciando com Cypress": [
          "Criando um projeto Cypress",
          "Preparando o ambiente de testes",
          "Desliguei meu PC. E agora?"
        ],
        "Testes de ponta a ponta": [
          "Meu primeiro teste automatizado",
          "Campos de Texto",
          "Botões",
          "Dados dinâmicos com Faker",
          "Consumindo a API Rest",
          "Importando JSON no Insomnia",
          "Validando o comportamento esperado"
        ],
        "Aprimorando os testes": [
          "Testes independentes",
          "Variáveis e Constantes",
          "Custom Commands",
          "Invoke Validation Messages",
          "Organização por contexto",
          "Validando estilos CSS",
          "O reuso é real"
        ],
        "Configurações e Boas práticas": [
          "Cypress Config",
          "Fixtures do Cypress",
          "Viewport Size",
          "CLI e Cross-Browser",
          "Falhas e Screenshots",
          "Allure Reports",
          "Conclusão"
        ]
      },
      "requirements": [
        "Pelo menos 6 mêses de experiência em testes de software",
        "Operação de sistemas Windows, Mac ou Linux"
      ],
      "description": "Testes automatizados são uma parte vital do desenvolvimento de sofware moderno. E os testes de regressão aumentam a cada nova versão do software, portanto, é preciso entender que a automação de testes é importante para diminir essa carga de trabalho que em muitas empresas é feita de forma manual.\nNeste curso, você conhecerá o Cypress, um framework Javascript de testes automatizados para aplicações web que pode ser usado para testar qualquer coisa que seja executada no navegador. Uma dos frameworks de teste web mais populares do momento!\nE por que você deve aprender Cypress?\nPorque Devs e QAs, de times frontend que usam tecnologias (Node.js) como React, Vue, Backbone, Redux, Express ou Angular preferem trabalhar com Cypress.\nNeste curso mão na massa, você aprenderá sobre o que é o Cypress, seus recursos e como ele e destaca em relação aos concorrentes.\nVai criar um projeto node.js do zero com yarn, instalar e configurar o Cypress para testes de ponta a ponta automatizando testes em Javascript.\nVai explorar os recursos e conceitos fundamentais do framework aplicando boas práticas de automação para o nosso aplicativo web de demonstração, o gerenciador de tarefas Mark L.\nPor fim, gerar relatórios de testes regressão com evidências em imagens e videos.",
      "target_audience": [
        "Analistas de Testes de Software"
      ]
    },
    {
      "title": "ISTQB Foundation Level v4.0 Exam Practice Tests Prep 2025",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl-v40/",
      "bio": "ISTQB Certified Tester Foundation Level (CTFL) v4.0 Practice Exam / Test. Best for Self-Study and Self Assessment",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ISTQB Certified Tester Foundation Level (CTFL) is a globally recognized certification program designed for individuals who want to establish a strong foundation in software testing. This certification is ideal for professionals who are involved in software development, quality assurance, and testing activities. By obtaining the CTFL certification, individuals can demonstrate their knowledge and understanding of the fundamental concepts, techniques, and processes of software testing.\n\n\nCTFL certification program covers a wide range of topics, including the principles of testing, testing throughout the software development lifecycle, static techniques, test design techniques, test management, and tools support for testing. Through a comprehensive curriculum and rigorous examination, candidates are equipped with the necessary skills and knowledge to effectively contribute to the testing process and improve the quality of software products.\n\n\nCTFL certification is highly regarded in the industry and is recognized by employers worldwide. It provides individuals with a competitive edge in the job market, as it validates their expertise and commitment to professional development in the field of software testing. Whether you are a beginner looking to enter the field or an experienced professional seeking to enhance your skills, the CTFL certification is a valuable asset that can open doors to new career opportunities and advancement. Invest in your professional growth and join the ranks of ISTQB Certified Tester Foundation Level (CTFL) professionals today.\n\n\nISTQB Certified Tester Foundation Level (CTFL) Practice Exam is a comprehensive and reliable resource designed to help aspiring software testers prepare for the ISTQB CTFL certification exam. This practice exam is meticulously crafted by industry experts and follows the official syllabus of the International Software Testing Qualifications Board (ISTQB). It provides a realistic simulation of the actual exam, allowing candidates to assess their knowledge and identify areas that require further study.\n\n\nThis practice exam consists of a wide range of questions that cover all the key topics and concepts included in the CTFL certification syllabus. It includes multiple-choice questions, scenario-based questions, and questions that require candidates to apply their knowledge to real-world testing scenarios. Each question is accompanied by detailed explanations and references to relevant study materials, enabling candidates to understand the rationale behind each answer and further enhance their understanding of software testing principles and techniques.\n\n\nISTQB Certified Tester Foundation Level (CTFL) exam details:\nExam Name : Certified Tester Foundation Level (CTFL)\nExam Code : CTFL\nPrice : 100 USD\nDuration : 75 minutes\nNumber of Questions : 40\nPassing Score : Pass / Fail\nFormat : Multiple Choice, Multiple Answer, True/False\n\n\nISTQB Certified Tester Foundation Level (CTFL) Exam guide:\nFundamentals of Testing\nWhat is Testing?\nWhy is Testing Necessary?\nTesting Principles\nTest Activities, Testware, and Test Roles\nEssential Skills and Good Practices in Tetsing\n\n\nTesting Throughout the Software Development Lifecycle\nTesting in the Context of an SDLC\nTest Levels and Test Types\nMaintenance Testing\n\n\nStatic Testing\nStatic Testing Basics\nFeedback and Review Process\n\n\nTest Analysis and Design\nTest Techniques Overview\nBlack-box Test Techniques\nWhite-box Test Techniques\nExperience-based Test Techniques\nCollaboration-based Test Approaches\n\n\nManaging the Test Activities\nTest Planning\nRisk Management\nTest Monitoring, Test Control and\nTest Completion\nConfiguration Management\nDefect Management\n\n\nTest Tools\nTool Support for Testing\nBenefits and Risks of Test Automation\n\n\nISTQB Certified Tester Foundation Level (CTFL) Practice Exam is an invaluable tool for anyone preparing for the CTFL certification exam. It not only helps candidates gauge their readiness for the actual exam but also serves as a comprehensive study guide. By practicing with this exam, candidates can familiarize themselves with the format and structure of the CTFL exam, improve their time management skills, and gain confidence in their ability to tackle challenging questions. Whether you are a beginner in software testing or an experienced professional looking to validate your skills, this practice exam is an essential resource to ensure success in the CTFL certification journey.\n\n\nLegal Notice: This material is not accredited by the ISTQB.",
      "target_audience": [
        "Prepare for the ISTQB Certified Tester Foundation Level (CTFL) Exam.",
        "Students preparing for the ISTQB Certified Tester Foundation Level (CTFL) exam who want to pass with confidence.",
        "Students who want to test their skills in exam simulation, assessing their ISTQB Certified Tester Foundation Level (CTFL) exam.",
        "Anyone who is keen to take their career and salary to the next level with an ISTQB Certified Tester Foundation Level (CTFL) certification",
        "Anyone studying for the ISTQB Certified Tester Foundation Level (CTFL) Certification who wants to feel confident about being prepared for the exam.",
        "This practice Exam will help you to figure out your weak areas and you can work on it to upgrade your knowledge.",
        "Have a fundamental understanding of the ISTQB Certified Tester Foundation Level (CTFL) Certification.",
        "You will be confident enough to take the ISTQB Certified Tester Foundation Level (CTFL) Certification exam and pass the exam at First attempt.",
        "Anyone looking forward to brush up their skills.",
        "Students who wish to sharpen their knowledge of ISTQB Certified Tester Foundation Level (CTFL).",
        "Anyone who is looking to PASS the ISTQB Certified Tester Foundation Level (CTFL) exam."
      ]
    },
    {
      "title": "JUnit Essentials: Unit Testing Mastery for Java Applications",
      "url": "https://www.udemy.com/course/java-unit-testing-with-junit-complete-course-bundle/",
      "bio": "Empower your Java development with comprehensive unit testing skills using JUnit.",
      "objectives": [
        "The fundamentals of unit testing and its importance in software development. How to set up and configure JUnit for Java projects.",
        "Writing effective unit test cases and implementing various testing techniques. Advanced JUnit features such as annotations, assertions, and test suites.",
        "Practical application of unit testing principles through real-world projects and examples. Best practices for writing maintainable, reliable, scalable tests",
        "Techniques for testing different scenarios, handling exceptions, and parameterized testing.",
        "Strategies for integrating unit testing into the software development lifecycle for improved quality assurance.",
        "Continuous improvement in testing skills and staying updated with the latest developments in unit testing practices."
      ],
      "course_content": {
        "Learn Unit Testing With JUnit": [
          "Introduction to Junit",
          "What is Unit Testing",
          "Junit Introduction",
          "Setup and Installation",
          "Write Unit Test Case",
          "Write Unit Test Case Continued",
          "Writing Multiple Test Cases",
          "Writing Multiple Test Cases Continued",
          "Before and After Annotations",
          "Before and After Annotations Continued",
          "Ignore Annotation",
          "Assertions and Different Types Part 1"
        ],
        "Project On Java And JUnit - Library Management System": [
          "Introduction to Project on Library Management System",
          "Create Schema or POJO Class",
          "Create Collection Class",
          "Create UI for Displaying Menu",
          "Handling Exception",
          "Creating Regular Expression for Validation",
          "Integrating Validation in UI",
          "Testing with Junit",
          "Testing with Junit Continuous"
        ],
        "Java JUNIT": [
          "Introduction",
          "Navigating Java Junit",
          "What Is Java Junit",
          "Fixtures Concepts And Practicals",
          "Test Suites",
          "Create Class",
          "Assert Class",
          "Test Case Class",
          "Java Unit Example Part 1",
          "Java Unit Example Part 2",
          "Java Unit Assertion Class Example",
          "Java Unit Annotation Class Example",
          "Java Unit Time Test Example",
          "Java Unit Exception Test Example",
          "Java Unit Parameterized Example Part 1",
          "Java Unit Parameterized Example Part 2"
        ]
      },
      "requirements": [
        "Basic concepts of Java",
        "You are eager to learn unit testing",
        "A computer with internet connection to install java and intellij"
      ],
      "description": "Welcome to our comprehensive course on \"Mastering Unit Testing with JUnit.\" In this course, you will embark on a journey to become proficient in unit testing using the powerful JUnit framework, coupled with the Java programming language. Unit testing is a crucial aspect of software development, ensuring the reliability, stability, and maintainability of codebases. By mastering unit testing with JUnit, you will gain the skills and knowledge necessary to write robust, efficient, and maintainable unit tests for your Java applications.\nCourse Overview:\nIn this course, we will cover everything you need to know to become proficient in unit testing with JUnit. We'll start with the basics, introducing you to the fundamentals of unit testing and the JUnit framework. You'll learn how to set up JUnit in your development environment, write your first unit test cases, and explore various techniques for writing effective tests. As you progress through the course, we'll dive deeper into advanced topics such as test setup and teardown, test annotations, ignoring specific tests, and using different types of assertions.\nReal-World Project:\nTo reinforce your learning, we'll apply your newfound knowledge to a real-world project: a Library Management System. You'll work on designing and implementing various components of the system while writing unit tests to ensure their functionality and reliability. This hands-on project will provide you with valuable practical experience and allow you to see firsthand how unit testing can be applied in a real-world scenario.\nAdvanced Topics:\nIn the final section of the course, we'll explore advanced topics in unit testing with Java and JUnit. You'll learn about fixtures, test suites, assert classes, and test case classes, as well as advanced testing techniques such as time testing, exception testing, and parameterized testing. By the end of the course, you'll have a comprehensive understanding of unit testing principles and practices, equipping you with the skills to write high-quality, testable Java code.\nWho Is This Course For?\nThis course is suitable for Java developers of all levels, from beginners to experienced professionals, who want to improve their skills in unit testing and software quality assurance. Whether you're just starting with unit testing or looking to deepen your knowledge and expertise, this course will provide you with the tools and techniques you need to succeed.\nPrerequisites:\nWhile no prior knowledge of unit testing or JUnit is required, familiarity with the Java programming language is recommended. Additionally, access to a computer with a Java development environment installed will be necessary to follow along with the practical exercises and projects.\nConclusion:\nBy the end of this course, you will have the confidence and skills to write robust, efficient unit tests for your Java applications using the JUnit framework. Whether you're working on personal projects, collaborating with a team, or preparing for software development interviews, mastering unit testing with JUnit will be a valuable asset in your toolkit. So, let's dive in and start mastering unit testing with JUnit today!",
      "target_audience": [
        "Java Developers: Those looking to enhance their software development skills by mastering unit testing with JUnit for Java applications.",
        "Software Testers/QA Engineers: Professionals aiming to improve their testing capabilities and understanding of unit testing principles.",
        "Computer Science Students: Individuals pursuing degrees or certifications in computer science or related fields, seeking to gain practical skills in unit testing.",
        "Quality Assurance Managers: Managers interested in upskilling their teams in unit testing techniques to improve the quality and reliability of software products.",
        "Freelancers/Consultants: Those offering development or testing services who wish to expand their skill set and offer more comprehensive solutions to clients.",
        "Tech Enthusiasts: Individuals passionate about software development and eager to learn about unit testing practices and tools."
      ]
    },
    {
      "title": "Learn Element Locators : CSS Selector and Xpath from Scratch",
      "url": "https://www.udemy.com/course/learn-element-locators-css-selector-and-xpath-from-scratch/",
      "bio": "Learn from basic to advance level use of Locators including CSS and Xpath | Selenium | Appium | Katalon | Jmeter | Watir",
      "objectives": [
        "By the end of this course you will be able to Locate any Web Elements in the Web page at Framework level.",
        "You will be able to answer What, Why and when to use with explanation.",
        "You will gain confidence with “Real time scenario” so that you can answer to anybody with confidence- This is Main focus.",
        "You will be able to develop most optimised xpath",
        "You will be able to write basic to complex CSS locators",
        "You will be able to write basic to advance level of Xpath locators",
        "You will be able to use locators in different automation tools like Selenium, JMeter, Katalon etc.",
        "You can design basic html page and try yourself",
        "Inspect and find any web elements like a pro at end of the course."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction of Locators",
          "Better Learning Experience - Must for new to Udemy | Optional who know",
          "How to Reach out to Instructor"
        ],
        "Basic Locators": [
          "Basic of HTML and DOM",
          "Understanding the need of Locators",
          "Locating first webElement by TagName",
          "Real time Use of id, name and className",
          "Real time Use of linkText and partialLinkText",
          "Real time Use of attributes"
        ],
        "Complete CSS Selector - Inspecting & Location": [
          "XPATH & CSS Selector Introduction",
          "CSS Selector Introduction",
          "CSS Selector - Using ID, Name & Class Name",
          "CSS Selector - Using Attributes",
          "CSS Selector - Using Start With",
          "CSS Selector - Using End With",
          "CSS Selector - Using Contains & Sub-String"
        ],
        "Basic to Expert Learning of CSS with Live Website Execution (Optional)": [
          "Understanding the CSS Selector and use of id",
          "Real time Use of className and Attributes",
          "Real time Use of Start with, end with and contains",
          "CSS Selector Limitation & Beginning of XPATH"
        ],
        "Complete XPATH - Inspecting & Location Like a PRO": [
          "XPATH Introduction",
          "Absolute XPATH Use & Limitation",
          "Relative XPATH & Advantages",
          "XPATH by Attributes",
          "XPATH By Using Multiple Attributes",
          "XAPTH Using Multiple Operators",
          "XPATH Using Text Function Introduction",
          "XPATH Using Text Function Practicals",
          "XPATH Using Contains Function Introduction",
          "XPATH Using Contains Function Practicals",
          "XPATH - Traversing Backward & Forward",
          "XPATH - Dependent-Independent Concepts",
          "XPATH - Dependent-Independent Practicals",
          "XPATH - by Group Index",
          "XPATH - by Group Index Practicals",
          "XPATH - Use of Axes",
          "XPATH - by Ancestor",
          "XPATH - by Descendant",
          "XPATH - by Parent",
          "XPATH - by Following & Preceding",
          "XPATH - by Following & Preceding Sibling",
          "XPATH - Conclusion"
        ],
        "Basic to Expert Learning of Xpath - Practicals (Optional)": [
          "Introduction and need of xpath",
          "Understanding Absolute Xpath",
          "Real time Use of Relative Xpath by Attributes",
          "Real time Use of and, or and text",
          "Real time Use of text and contains",
          "Real time Use of Traversing in Xpath",
          "Real time Use of following and preceding",
          "Real time Use of siblings and starts-with",
          "Real time Use of Parent and child traversing",
          "Real time use of Ancestor and Discendent",
          "Real time Use of passing dynamic value in Xpath"
        ],
        "Conclusion : Interview Question and Answer": [
          "Interview Questions and Answer",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Students should have basic understanding why we need locators - that's all",
        "A Chrome browser with internet"
      ],
      "description": "Master Selenium Element Locators - The Key to Robust Automation\nUnlock the Secrets to Writing Powerful Xpath and CSS Locators for Selenium, Appium, Katalon, and More!\nWhy Should You Learn Element Locators?\nElement locators are the foundation of any successful Selenium automation. As an automation tester, your ability to write precise, reliable locators using XPath and CSS will set you apart from the competition.\nWhether you’re working with Selenium, Appium, Katalon Studio, or other automation tools, mastering element locators is a must. This course will give you the practical knowledge and real-world expertise to confidently locate web elements and automate your applications like a pro.\n\n\nWhy This Course is Different?\nThis is the only course on the internet that covers element locators with real-time scenarios and hands-on practice! Learn to write robust Xpath and CSS locators from scratch and implement them in your own automation projects.\n\n\nCourse Highlights:\nIn-Depth Understanding of DOM & HTML\nLearn how the structure of a webpage works and how locators interact with it.\nMaster Basic Locators:\nGet comfortable using ID, Name, ClassName, LinkText, and PartialLinkText locators.\nDeep Dive into CSS Locators:\nGain a comprehensive understanding of CSS selectors and how they can simplify your locator strategy.\nAdvanced XPath Techniques:\nWrite XPath locators using attributes, text, and dynamic paths.\nLearn how to use XPath functions like contains(), text(), and path by axes.\nBest Practices for Writing Locators:\nLearn the best practices for writing reliable, maintainable locators that can handle dynamic web pages and UI changes.\nReal-World Application:\nUse live examples and real-time web applications to practice writing locators and performing automation tasks.\nEnd-to-End Practical Guidance:\nUnderstand how to locate any web element on a page and automate it confidently, no matter how complex the application.\n\n\nWhat Makes This Course the Best Choice?\nBeginner to Expert: Start with basic concepts and build your way up to advanced CSS and XPath locator techniques.\nReal-Time Scenarios: We cover industry-standard practices and show you how real automation teams use locators for everyday automation tasks.\nHands-On Practice: Multiple live demos and practical exercises to help you apply what you learn.\nInterview-Ready: Get interview questions and quizzes to test your knowledge and prepare for your next job.\nMaster Locators for All Automation Tools: Although focused on Selenium, you’ll also be able to apply what you learn to other tools like Appium, Katalon Studio, and Watir.\n\n\nWhat You'll Learn\nHTML & DOM Basics\nUnderstand how HTML structure impacts locator selection.\nBasic Locators\nID, Name, Class, LinkText, and PartialLinkText.\nAdvanced CSS Locators\nWriting advanced CSS selectors for more efficient element identification.\nMastering XPath\nLearn to use XPath locators to locate elements by attributes, text, and dynamic paths.\nGet comfortable with XPath functions like contains(), text(), and Path by Axes.\nBest Practices\nHow to write maintainable locators that can handle dynamic page elements, Ajax, and changing attributes.\nReal-Time Application\nPractice writing locators on live web applications and automate them effectively.\n\n\nWho Should Enroll?\nBeginner Automation Testers: If you’re new to Selenium and web automation, this course will give you a strong foundation in element locators.\nExperienced Testers: Sharpen your XPath and CSS locator skills with advanced tips and best practices.\nQA Engineers & SDETs: Learn how to write robust locators for complex web applications and boost your job performance.\nAnyone Looking to Learn Web Automation: Master Selenium and get comfortable working with various automation tools, including Appium and Katalon Studio.\n\n\nWhat You Will Gain:\nComplete Mastery over element locators in Selenium, Appium, and other automation tools.\nHands-On Experience using real-time scenarios to automate web applications.\nExpert-Level Knowledge of XPath and CSS, ready to tackle any test automation project.\nInterview-Ready Skills to confidently answer locator-related questions during interviews.\nA Solid Foundation in writing robust locators for real-world automation needs.\n\n\nEnroll Now & Start Automating Like a Pro!\nMaster XPath and CSS Locators for Selenium Web Automation with Real-World Applications!\n\n\nTop enrolments are from below categories:\nSelenium XPath\nCSS Selectors in Selenium\nWeb Automation with Selenium\nLocator Strategies for Automation\nBest Practices for Selenium Automation\nLearn XPath for Automation\nWebElement Locators in Selenium\nSelenium Automation Tutorial\nXPath & CSS for Web Automation\nSelenium Automation Interview Questions\nAutomation Testing with Selenium\n\n\nWishing you all the best in your web automation journey!\n\n\nRegards,\nPankaj Gupta",
      "target_audience": [
        "* For automation Tester refreshing their xpath and css selector skills",
        "* Manual testers, Non-programming aware testers interested in learning Automation",
        "* Any Experience who want to change Domain OR update their skills.",
        "* Beginner Automation Tester",
        "Become Pro in Locating any web elements for UI Automation or App Automation."
      ]
    },
    {
      "title": "Mobile Applications Software Testing",
      "url": "https://www.udemy.com/course/mobile-applications-software-testing/",
      "bio": "Practical, hands on lectures when it comes to Mobile Devices Software Testing.",
      "objectives": [
        "Mobile Application market overview",
        "Mobile Application Testing Prerequisites (+ device suggestions)",
        "Different ways to install test application builds",
        "How to configure and start an iOS Emulator",
        "How to configure and start an Android Emulator",
        "Test Evidence - How to take a screenshot, record a video and capture real live devices logs (iOS & Android)",
        "Most common mobile specific bugs/issues areas that I check",
        "How to capture/access mobile application crashlogs (iOS & Android)",
        "iPadOS Compatibility Mode overview",
        "How to enable developer mode on a mobile device (iOS & Android)",
        "Real mobile devices hosted via web browser - overview",
        "Additional types of mobile testing",
        "Useful mobile testing desktop tools",
        "Creating simple XCode automated tests via recording"
      ],
      "course_content": {
        "Mobile Application Testing Overview": [
          "Course Introduction",
          "Software testing fundamentals - article",
          "Mobile Testing - my experience and thoughts",
          "Mobile Devices - market overview",
          "Mobile Testing Prerequisites - how to test mobile apps effectively"
        ],
        "Hands On Lectures": [
          "Different ways to install test mobile application on iOS",
          "How to configure and start a mobile device emulator for Android",
          "How to configure and start a mobile device emulator for iOS/iPadOS",
          "How to take a screenshot",
          "How to record a screen video",
          "How to capture real live logs from a device (Android)",
          "How to capture real live logs from a device (iOS)",
          "Most common mobile specific areas triggering bugs & issues",
          "How to access/obtain application crashlogs on your device",
          "iPadOS compatibility mode overview",
          "How to enable developer mode on a mobile device",
          "Mobile Application Testing on real devices in a web browser",
          "Other types of mobile application tests",
          "Useful essential desktop tools to support mobile testing",
          "Simple iOS test automation in XCode",
          "Outro"
        ]
      },
      "requirements": [
        "MacOS/Windows Desktop (to be able to follow desktop technical lectures)",
        "A mobile device iOS or Android (to be able follow device specific hands on lectures)",
        "Understanding of general testing fundamentals"
      ],
      "description": "In this course, I will share with you different tips and tricks for testing Software Applications on a Mobile Device. This course focuses on  practical knowledge, using real case examples, discussing and showing useful topics concerning mobile devices testing.\nIn shared lectures following will be discussed:\nMobile Application market overview,\nMobile Application testing prerequisites (+ device suggestions),\nDifferent ways and tools to install test application builds,\nHow to configure and start an iOS Emulator,\nHow to configure and start an Android Emulator,\nTest Evidence - How to take a screenshot, record a video and capture real live devices logs (iOS & Android),\nMost common mobile specific bugs and issues areas that I consider when testing,\nHow to capture/access mobile application crashlogs (iOS & Android),\niPadOS Compatibility Mode overview,\nHow to enable developer mode on a mobile device (iOS and Android),\nHosting real mobile devices and connecting to them via web browser - overview,\nOther types of mobile testing,\nUseful mobile testing desktop tools and resources,\nCreating simple automated tests by using XCode test recording functionality without knowledge of SWIFT programming language. We will go over several test cases.\nPlease note - in this course I am not discussing the basics and fundamentals when it comes to the software testing. We will focus on hands on practical lectures and topics. For Software Testing theory I encourage you to check my other course: \"Software Tester: From Zero To Hero!\".",
      "target_audience": [
        "Software Testers / QA Technicians wanting to learn practical Mobile Applications (iOS/Android) hands on testing, tips and tricks"
      ]
    },
    {
      "title": "Software Testing Interview Questions and Answer",
      "url": "https://www.udemy.com/course/software-testing-interview-questions-and-answer/",
      "bio": "Top 100 Software Testing Interview Question and Answer",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No programming language is required"
      ],
      "description": "The complete course on how to crack the interview and get a job as a Software Tester, QA, Manual Tester, QA Analyst, Website Tester & QA Engineer.\nIf you want to get Software Testing job at a great company but you are intimidated by the interview process and the technical questions? Do you find yourself being confused or overwhelmed by the software testing interview? Look no further!! Because this course is your answer to all the problems, hesitations and fears you have about the software interview. Using the strategies, exercises, tips & tricks taught in this course, you will learn how to get job offers from top tech companies.\nThe demand for software testers is increasing at an insane rate right now. There are more and more technology companies that are being started now a days and all of them require software testers. This is the best time to learn the concepts taught in this course and get a great paying job.\nThis course is created based on personal interviews and feedback from managers who hire software testers. Nothing is held back as all the secrets are shared in this course to increase your chances at landing a job.\nHere is what you will learn in this course:\nHow to answer the most important software testing interview questions\nThis course will provide you scripts on how to answer questions and emails from employers\nHow to write a resume and how to apply for jobs\nHow to get more interviews\nTips and tricks to stand out from other candidates",
      "target_audience": [
        "Searching a job as a software tester, QA Analyst, QA Engineer, Manual Tester & Manual QA"
      ]
    },
    {
      "title": "Medical Software Testing: Quality Assurance in Healthcare",
      "url": "https://www.udemy.com/course/medical-software-testing-quality-assurance-in-healthcare/",
      "bio": "Become Medical Software Testing Expert at any stage of your career.",
      "objectives": [
        "Understand the importance of testing in medical software development",
        "Understand the regulatory requirement for medical devices",
        "Implement the Quality Assurance Practices in Medical Devices",
        "Basics of Regulatory Compliance and Risk Management in Medical Software"
      ],
      "course_content": {},
      "requirements": [
        "You don’t need any previous experience or relevant education. The course has been designed to ensure enough resources are available for complete beginners."
      ],
      "description": "The course is updated frequently with new lessons, projects and resources!\n\n\nJuly 2024 – NEW! Downloadable Resources Added:\nSoftware Testing\n\n\nYou Will Learn\nImportance of Testing in Healthcare Software\nSignificant Medical Software Testing Techniques\nMedical Software Applicable Regulatory Requirements\nRisk Management and Compliance in Medical Device Testing\n\n\nYou don’t need any experience to enroll, you will be guided step by step through this course. You’ll also get Bonus Materials to help you from the beginning. This course requires a little work on the beginning – just like anything you really want to learn. This comprehensive course provides you with all the basic ideas to get started with the medical software testing and introduction to the regulatory requirements for the medical software. This course shall be applicable to anyone from the beginners to the experts and can help to sharpen your skills in the field.\n\n\nThis course is for you if you:\nWant to be a Medical Software Tester.\nWant to learn Software Testing.\nWant to Upgrade Your Career.\n\n\nYou will also get:\nSupport and Answers to All Your Questions During the Course\nLifetime Access\nCertificate of Completion\n\n\nEnroll in the Course Today and Get Started! I’ll See You in the First Lesson!",
      "target_audience": [
        "Biomedical engineers interested in entering the field of medical software testing.",
        "Software testers and developers interested to understand the medical field."
      ]
    },
    {
      "title": "Cucumber & Java & Selenium automation framework - JASECU",
      "url": "https://www.udemy.com/course/jasecu-ui-api-automation-framewok/",
      "bio": "Let's learn how to setup and run Java Selenium Cucumber automation tests from scratch via IDEA IntelliJ and Jenkins",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Why Jasecu"
        ],
        "Local environment setup - IDEA IntelliJ": [
          "Java setup",
          "Maven setup",
          "Git setup",
          "IDEA IntelliJ setup",
          "Jasecu in IDEA IntelliJ setup"
        ],
        "Continuous Integration environment setup - Jenkins": [
          "Jenkins master setup",
          "Jenkins node setup",
          "Jenkins job setup"
        ],
        "Create your own version of Jasecu in Github": [
          "Github registration",
          "Github repository",
          "Run test from Github repository - IDEA IntelliJ/Jenkins"
        ],
        "Jasecu framework basics": [
          "How to run tests",
          "What are feature files",
          "what is glue code / step definitions",
          "what are test runners",
          "what are test suites",
          "what are page classes with elements and actions"
        ],
        "What are feature files": [
          "Conclusion and future"
        ]
      },
      "requirements": [
        "computer with operating system and internet connection and will to learn"
      ],
      "description": "This is the official basic tutorial for Jasecu automation framework.\nThe framework is based on Java, Selenium, Cucumber, Maven\nand is designed to be used with Git, IDEA IntelliJ, Jenkins.\nIt integrates also other useful tools for testing, which will be covered in later courses.\nYou will learn:\n- setup complete environment on local PC to develop tests in IDEA IntelliJ\n- setup complete CI environment on Jenkins\n- create your own version of Jasecu on GitLab\n- learn basics of Jasecu structure",
      "target_audience": [
        "everybody who wants to learn best automation framework - Jasecu (from absolute beginners to advanced players)"
      ]
    },
    {
      "title": "Praktyczny kurs testowania oprogramowania",
      "url": "https://www.udemy.com/course/praktyczny-kurs-testowania-oprogramowania/",
      "bio": "Testowanie oprogramowania w pigułce. Zapoznaj się z podstawami.",
      "objectives": [
        "Teoria testowania",
        "Tworzenie przypadków testowych",
        "Raportowanie błędów",
        "Znajomość Jira",
        "Znajomość narzędzia TestLink",
        "Korzystanie z Chrome Devtools",
        "Korzystanie z platformy Browserstack",
        "Podstawowa znajomość Postmana",
        "Testowanie API",
        "Znajomość SQL",
        "Znajomość systemu kontroli wersji GIT",
        "Znajomość programu OWASP ZAP",
        "Przeprowadzanie testów wydajnościowych Jmeter"
      ],
      "course_content": {
        "Wprowadzenie do kursu": [
          "Przywitanie",
          "Społeczność testerów - Facebook"
        ],
        "Część teoretyczna": [
          "Co to jest testowanie",
          "Dlaczego testowanie jest niezbędne",
          "Siedem zasad testowania",
          "Proces testowy",
          "Poziomy testów",
          "Typy testów",
          "Specyfikacja wymagań"
        ],
        "Część praktyczna": [
          "Wstęp do części praktycznej",
          "Instalacja programu PicPick",
          "Omówienie programu PicPick",
          "Instalacja programu Sharex",
          "Omówienie programu Sharex",
          "Instalacja przeglądarek",
          "Przydatne wtyczki w pracy testera",
          "Wprowadzenie do Chrome DevTools",
          "Instalacja systemu zarządzania testami - TestLink",
          "Alternatywna instalacja testlinka (MacOS, Linux, Windows)",
          "TestLink bez konieczności instalacji",
          "Plan testów - co to jest i co powinien zawierać",
          "Tworzenie planu testów",
          "Projektowanie przypadków testowych",
          "Wykonywanie przypadków testowych"
        ],
        "Oprogramowanie Jira": [
          "Wprowadzenie do oprogramowania Jira",
          "Rejestracja konta w systemie Jira",
          "Backlog, flow, omówienie dostępnych kolumn",
          "Statusy, typy zgłoszeń, przypisania i priorytety",
          "Tworzenie zgłoszeń",
          "Raportowanie błędów"
        ],
        "Platforma BrowserStack": [
          "Wprowadzenie do platformy BrowserStack",
          "Stworzenie nowego konta i omówienie panelu",
          "Testowanie na różnych platformach i wersjach"
        ],
        "Testowanie API": [
          "Instalacja narzędzia Postman",
          "Co to jest API",
          "Metoda GET",
          "Metoda POST",
          "Metoda PUT",
          "Metoda DELETE",
          "Wykorzystanie autoryzacji do uzyskania zasobów API"
        ],
        "Praktyczne testowanie aplikacji webowej": [
          "Praktyczne testowanie aplikacji cz.1",
          "Praktyczne testowanie aplikacji cz.2",
          "Praktyczne testowanie aplikacji cz. 3"
        ],
        "Składnia języka SQL": [
          "Co to jest i do czego służy język SQL",
          "Podstawowa składnia SQL",
          "Zaawansowane zapytania SQL"
        ],
        "Kierunek testera automatyzującego": [
          "Wprowadzenie do automatyzacji testów",
          "Jak wygląda implementacja testu automatycznego",
          "Narzędzie do CI/CD - Jenkins"
        ],
        "System kontroli wersji GIT": [
          "Wprowadzenie - system kontroli wersji GIT",
          "Praktyczne przykłady z wykorzystaniem GIT'a"
        ]
      },
      "requirements": [
        "Nie musisz mieć żadnego doświadczenia, a jedynie chęci i trochę wolnego czasu"
      ],
      "description": "Jak rozpocząć karierę testera oprogramowania bez doświadczenia?\nChcesz wejść do świata IT, ale nie wiesz, od czego zacząć?\nTen kurs to idealny punkt startowy dla osób początkujących, które chcą zdobyć praktyczne umiejętności testowania oprogramowania – od podstaw, krok po kroku, bez zbędnej teorii.\n\n\nDowiesz się np. :\nNa czym naprawdę polega praca testera – od zaplanowania testu po raportowanie błędów\nJakie narzędzia są wykorzystywane w codziennej pracy QA\nJakie testy wykonuje się w realnych projektach – manualne, API, automatyczne\n\n\nCzego się nauczysz?\n\n\nPlanowanie i projektowanie testów\n– Jak tworzyć przypadki testowe, scenariusze i plany testów krok po kroku\nTestowanie aplikacji webowych w praktyce\n– Testowanie interfejsu użytkownika (UI), działania API i logiki aplikacji na prawdziwych przykładach\nPraca z narzędziami, których używa każdy tester:\n– Jira – zarządzanie zadaniami i raportowanie błędów\n– TestLink – dokumentowanie testów\n– DevTools, ShareX, PicPick, PixelPerfect – analiza UI i nagrywanie problemów\n– Postman – testowanie API w praktyce\n– OWASP ZAP, JMeter – wprowadzenie do testów bezpieczeństwa i wydajności\nAutomatyzacja testów (dla początkujących)\n– Nauka podstaw TypeScript i WebdriverIO oraz rozpoczęcie pracy z automatyzacją\nInne ważne umiejętności testerskie:\n– Testowanie na różnych przeglądarkach i urządzeniach z wykorzystaniem BrowserStack\n– Praca z systemem kontroli wersji GIT\n\n\nDla kogo jest ten kurs?\nDla osób bez doświadczenia w IT, które chcą rozpocząć karierę w testowaniu\nDla początkujących testerów manualnych, którzy chcą uporządkować wiedzę i działać profesjonalnie\nDla każdego, kto chce się uczyć przez praktykę, a nie tylko z teorii\n\n\nDlaczego warto?\nZamiast prezentacji – konkretna praca z narzędziami\nWszystko, czego uczysz się w kursie, możesz wykorzystać w realnych projektach\nProsty, zrozumiały język i zero lania wody\nPo ukończeniu kursu możesz stworzyć własne portfolio testera\n\n\nNa jakie pytania znajdziesz odpowiedź?\nJak tworzyć skuteczne raporty błędów w Jira?\nJak przetestować API w Postmanie?\nJak wygląda proces testowania aplikacji od A do Z?\nJakie wtyczki i przeglądarki warto znać jako tester?\nCzy warto zaczynać od automatyzacji testów?\n\n\nTen kurs to Twoje praktyczne wejście do zawodu testera oprogramowania.\nBez teorii oderwanej od rzeczywistości, bez presji, w swoim tempie — z pełnym wsparciem i konkretnymi efektami.",
      "target_audience": [
        "początkujący testerzy oprogramowania",
        "osoby chcące rozpocząć pracę jako tester oprogramowania"
      ]
    },
    {
      "title": "Mastering C# Unit Testing with Real-world Examples",
      "url": "https://www.udemy.com/course/mastering-csharp-unit-testing-with-real-world-examples/",
      "bio": "Learn C# unit testing best practices by refactoring real-world examples.",
      "objectives": [
        "Use builder methods to simplify your tests",
        "Write tests for multiple test values to make your tests more maintainable",
        "Choose good names to express the intent of your tests",
        "Use simple test values to make your tests easier to follow",
        "Write domain-specific assertion methods to have more readable tests"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started"
        ],
        "On Builders": [
          "Use Builder Methods",
          "Test IOptions Interface",
          "Make Test Values Obvious"
        ],
        "On Testing With Multiple Values": [
          "Use Parameterized Tests",
          "Use FluentValidation Helpers",
          "Use Parameterized Tests Instead of Loops",
          "Test a Single Concern Per Test",
          "Test Exception Messages",
          "Use Object Mothers",
          "Exercise: Refactor a Test That Uploads Guests"
        ],
        "On Mocks and Simplicity": [
          "Use Fakes in Unit Testing",
          "Create Fakes With Moq",
          "Visually Structure Tests",
          "Use TypeBuilder",
          "Avoid Overspecification",
          "Use Simple Test Values",
          "Exercise: Refactor a Test That Merges Dictionaries"
        ],
        "On Public Behavior and Hiden Assumptions": [
          "Test Public Behavior",
          "Create a Custom Verify Method",
          "Exercise: Refactor a Test That Stores an Email With Duplicated Addresses",
          "Avoid Hidden Assumptions",
          "Exercise: Refactor a Test That Updates an Email Status"
        ],
        "Conclusion": [
          "Wrap-up"
        ]
      },
      "requirements": [
        "Basic knowledge of writing unit tests with a testing framework like MSTest",
        "Understading of mocks and mocking libraries like Moq",
        "Familiarity with the Arrange/Act/Assert pattern"
      ],
      "description": "You've learned the basics of unit testing in C#, but you still struggle with writing tests that are easy to read and maintain.\nYou've seen too many online tutorials testing a Calculator class, but you want to learn how to test real code. Code with dependencies, validations, and edge cases. Code that looks like the code you find every day at work.\nThat's why I created this course.\nNo more unit testing the Add method of a Calculator class.\nIn this course, let's refactor some real unit tests to make them more readable and maintainable. Although I changed names, classes, and methods to avoid disclosing code from past clients and employers, these are the tests I had to work with as a software engineer.\nYou will learn how to transform messy and convoluted tests into readable and maintainable tests using best practices and proven principles and methods.\n\n\nWho is this course for?\nThis course is for you if you are:\nA C# developer who wants to level up your unit testing skills and write readable and maintainable tests\nA C# developer who is tired of boring and unrealistic tutorials and wants to learn from real code examples\nAfter you follow this course, you will be able to:\nUse builder methods to simplify your tests\nWrite tests for multiple test values to make your tests more maintainable\nChoose good names and use simple test values to make your tests easier to follow\nWrite domain-specific assertion methods to have more readable tests\nMastering these skills will help you to write tests easy to follow. The next time you open one of your tests, you won't need to scratch your head trying to figure out what you were doing.\nBut here's the thing:\nThis is not an introductory course on unit testing.\nYou will take more out of this course if you know how to write unit tests with a testing framework like MSTest, a mocking library like Moq, and the Arrange/Act/Assert pattern.\nWe're not covering how to write your first unit tests. We're covering unit testing best practices to make your tests readable and maintainable while we refactor real unit tests.\nIf you know what mocks are in unit testing, you're in the right place.\n\n\nWhat is inside?\nIn this course, you will get access to:\nEight principles or lessons that cover different best practices for unit testing\nMore than ten unit tests that show real code examples that need refactoring\nFour exercises that challenge you to apply what you learned and refactor a unit test on your own\nA checklist that summarizes the best practices from the course\nSource code of all the unit tests before refactoring them so you can follow along each lesson",
      "target_audience": [
        "C# developers looking to improve their unit testing skills and write readable and maintainable tests",
        "C# developers tired of boring and impractical tutorials that prefer to learn through real-world code examples"
      ]
    },
    {
      "title": "Learn JIRA Test Management using ZEPHYR for TESTERS",
      "url": "https://www.udemy.com/course/learn-jira-test-management-using-zephyr-for-testers/",
      "bio": "Zephyr",
      "objectives": [
        "Installation and Overview of Zephyr for JIRA",
        "Creating, maintaining and executing Test cases using Zephyr",
        "Reporting available in JIRA",
        "Test execution cycle and RTM"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JIRA"
      ],
      "description": "This course has been designed especially for testers with no knowledge of Test management in Zephyr for JIRA. In this course, we will cover each and every step on how to create, maintain, execute test cases and how to generate reports and dashboarding in JIRA. We will also consider a scenario, while explain the activities and end of the course, we will discuss couple of really important best practices, one must follow to make their life easy. Also, this is not a JIRA course, I would expect the testers to have some basic understanding of JIRA, if not please feel free contact me, I will add new videos on JIRA.\n\nCourse Modules:\nInstallation and Overview in Zephyr for JIRA\nHow to write Test Cases in Zephyr for JIRA\nHow to import Test Cases in Zephyr for JIRA\nHow to create a Bug in Zephyr for JIRA\nHow to search Test Cases in Zephyr for JIRA\nHow to Create Test Cycles in Zephyr for JIRA\nHow to execute Test Cases in Zephyr for JIRA\nReporting in Zephyr for JIRA\nTraceability Matrix in Zephyr for JIRA\n\n\nAt the end of the course, you will be able to apply the learning in your professional life immediately and I am confident that you will grow fast and efficient.\nIf you like this course, please do not forget to provide genuine feedbacks, which will help others while choosing the course.",
      "target_audience": [
        "This course has been designed especially for testers with no knowledge of Test management in Zephyr for JIRA. In this course, we will cover each and every step on how to create, maintain, execute test cases and how to generate reports and dashboarding in JIRA. We will also consider a scenario, while explain the activities and end of the course, we will discuss couple of really important best practices, one must follow to make their life easy. Also, this is not a JIRA course, I would expect the testers to have some basic understanding of JIRA, if not please feel free contact me, I will add new videos on JIRA."
      ]
    },
    {
      "title": "Node JS API Unit Testing -Using Mocha Chai -Complete Project",
      "url": "https://www.udemy.com/course/node-js-api-unit-testing-using-mocha-chai-complete-project/",
      "bio": "You will learn to build rest api using node js and express js, how to add unit testing for rest api using mocha and chai",
      "objectives": [
        "How to use mocha and chai to test API endpoint",
        "How to build Rest API Using Node Js and Express Js",
        "Node JS API Unit Testing",
        "How to test API in postman",
        "How to use mongodb database with node js",
        "How to generate test report"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create Project and Install Packages": [
          "Create Project and Install Packages Part-1"
        ],
        "Create Router and Controller File": [
          "Create Router and Controller File Part-2"
        ],
        "MongoDB Database Connection": [
          "MongoDB Database Connection Part-3"
        ],
        "Design MongoDB Schema": [
          "Design MongoDB Schema Part-4"
        ],
        "Create User API Endpoint": [
          "Create User API Endpoint Part-5"
        ],
        "API Fields Validation": [
          "API Fields Validation Part-6"
        ],
        "Get all User List API Endpoint": [
          "Get all User List API Endpoint Part-7"
        ],
        "Get Single User API End-Point": [
          "Get Single User API Endpoint Part-8"
        ],
        "Delete User API Endpoint": [
          "Delete User API Endpoint Part-9"
        ]
      },
      "requirements": [
        "Students don't need to have any prior knowledge to take this course"
      ],
      "description": "Welcome to this course. In this course, you will learn API Unit Testing using mocha and chai. At first, you will learn how to build the rest API using node js, express js, and MongoDB. You will learn how to test the API endpoint in postman. I will show you how to organize and save the endpoint in postman. Using postman we will be able to perform all sorts of things like create, update, get, and delete operations.\n\n\nAfter that, you will learn how to add unit testing for the API using mocha and chai. We will add different sorts of testing for all of our API endpoints.\nHere are some lists that you are gonna learn from this course:\nHow to build rest API.\nAPI End-point unit testing using mocha and chai.\nHow to save data to MongoDB database.\nHow to organize node js project, routing, and controller of node js app.\nHow to use postman to test API endpoint.\nHow to add Mocha Chai test for each and every API endpoint.\nHow to use different kinds of assertion functions of chai in the test.\nHow to generate a test report after doing all the test\nDifferent kinds of status codes need to use with mocha chai testing.\nHow to choose status code when building rest API.\nHow to use Axios to do HTTP requests.",
      "target_audience": [
        "If you are a backend developer and want to learn unit-testing",
        "If you want to learn how to use mocha and chai to test your api",
        "If you want to learn backend development and want to use mongodb with node js and express js"
      ]
    },
    {
      "title": "Dominando Postman (2025): Do Teste Manual a Performance APIs",
      "url": "https://www.udemy.com/course/dominando-postman-2023-testando-e-automatizado-apis/",
      "bio": "Aprenda a testar APIs de forma abrangente e eficiente com o poderoso Postman neste curso prático!",
      "objectives": [
        "Compreender os fundamentos da arquitetura de sistemas web",
        "Aprender sobre operadores lógicos, que são fundamentais para manipular e processar dados nas requisições da API.",
        "Aprenda sobre Postman, uma poderosa ferramenta para testar e consumir APIs",
        "Aprenda a testar dois modelos de arquitetura fundamentais de API: API REST e GraphQL",
        "Gerar relatórios com newman, htmlextra",
        "Implementar pipeline com Github Action e armazenar report da execução",
        "Testes de Performance"
      ],
      "course_content": {
        "Arquitetura de Sistemas": [
          "Introdução ao módulo",
          "Arquitetura de sistema em 3 camadas",
          "Requisição http",
          "Arquivo json",
          "Arquivo XML",
          "API Rest",
          "API graphql"
        ],
        "Operadores Lógicos": [
          "Introdução ao módulo",
          "Porque Aprender Operadores Lógicos",
          "Operadores Atribuição",
          "Operadores Aritméticos",
          "Operadores Condicionais",
          "Operadores Relacionais",
          "Operadores Lógicos"
        ],
        "Postman": [
          "Introdução ao módulo",
          "Apresentação do Postman",
          "Configurações Iniciais",
          "Collection",
          "Primeira Request",
          "Primeiros Testes",
          "Environment"
        ],
        "API Rest | Manual": [
          "Introdução ao módulo",
          "Analise de API",
          "Configuração de Ambiente",
          "Aprendendo a Escrever o primeiro Teste",
          "Validando Contrato",
          "Atualização aula de contrato - biblioteca ajv",
          "Buscando um ID",
          "Capturando Variáveis Dinâmicas",
          "Criando Dados na Base",
          "Atualizando Dados",
          "Delete"
        ],
        "API REST | Automação": [
          "Introdução ao módulo",
          "aprendendo sobre runner",
          "adicionando arquivo com massa de teste"
        ],
        "API GRAPHQL": [
          "Introdução ao módulo",
          "Apresentando o Apollo",
          "Aprendendo a Montar as Querys",
          "Escrevendo Testes para Capsules",
          "Aprendendo a Validar Objetos",
          "Diferença Entre Query e Mutation"
        ],
        "Bônus | Bootcamp: API Rest do manual a integração continua": [
          "Dia 01 - Criando seus testes manuais",
          "Dia 2 - Automatizando e gerando relatórios",
          "Dia 3 - Integração continua"
        ],
        "Bônus | Bootcamp: Teste de Performance com Postman": [
          "Dia 01 - Entendo sobre Performance e API",
          "Dia 02 - começando os testes de performance",
          "Dia 03 Bootcamp Teste de Performance com API"
        ],
        "Postman Avançado": [
          "Utilize funções dentro do environment"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência prévia"
      ],
      "description": "Bem-vindo ao nosso emocionante curso \"Dominando Postman: Testando e Consumindo APIs REST e GraphQLI\"! Aqui, vamos te guiar em uma jornada envolvente para compreender os fundamentos da arquitetura de sistemas web e explorar o poder dos operadores lógicos nas requisições da API.\nVamos mergulhar de cabeça no Postman, uma ferramenta poderosa que vai te ajudar a testar e consumir APIs com facilidade. Você aprenderá a criar requisições, analisar respostas e garantir a qualidade das suas APIs.\nAlém disso, vamos aprofundar nossos conhecimentos testando dois modelos de arquitetura fundamentais de API: a conhecida API REST e a inovadora GraphQL. Vamos explorar suas diferenças, vantagens e como implementá-las em projetos reais.\nMas não paramos por aí! Vamos te ensinar a gerar relatórios com o newman e htmlextra, aprimorando seus resultados de teste. E para facilitar ainda mais o seu trabalho, vamos mostrar como implementar pipelines com o Github Action e armazenar os relatórios de execução.\nNosso curso é amigável, dinâmico e cheio de exemplos práticos para que você aplique imediatamente o que aprender em seus projetos. Se você é um desenvolvedor curioso, analista de teste em busca de automação ou qualquer pessoa apaixonada por tecnologia, esse curso é para você!\nJunte-se a nós agora mesmo e desvende o universo dos testes de API com o Postman. Vamos aprender juntos, compartilhar conhecimento e se divertir ao longo do caminho. Estamos ansiosos para embarcar nessa jornada com você",
      "target_audience": [
        "Desenvolvedores Web: Profissionais que desejam aprender sobre testes de API utilizando o Postman e aprimorar suas habilidades em arquitetura de sistemas web.",
        "Analistas de Teste: Pessoas que trabalham com testes de software e desejam adquirir conhecimentos específicos sobre testes de API usando o Postman.",
        "Profissionais de Qualidade e Garantia de Software: Indivíduos envolvidos em garantir a qualidade de produtos de software que desejam dominar o uso do Postman para testar APIs.",
        "Estudantes de Tecnologia: Alunos que estão cursando faculdades ou cursos técnicos na área de tecnologia e desejam aprender sobre testes de API e arquitetura de sistemas web.",
        "Desenvolvedores e Analistas em busca de automação de testes: Profissionais interessados em automatizar testes de API utilizando ferramentas como o Postman e implementar pipelines para facilitar o processo de teste.",
        "Qualquer pessoa interessada em testes de API: Qualquer indivíduo com interesse em aprender sobre testes de API, independentemente de sua formação ou área de atuação"
      ]
    },
    {
      "title": "Certified Tester Advanced Level Technical Test Analyst",
      "url": "https://www.udemy.com/course/certified-tester-advanced-level-technical-test-analyst/",
      "bio": "100 questions and explanations to pass the ISTQB Certified Tester Advanced Level Technical Test Analyst (CTAL-TTA) Exam",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Prepare to elevate your testing skills and enhance your credentials with the ISTQB Certified Tester Advanced Level Technical Test Analyst (CTAL-TTA) - Exam Practice Tests course. This practice course is designed to mirror the complexities and standards of the actual CTAL-TTA exam, providing participants with the perfect platform to assess their readiness and identify areas for improvement.\nThis course contains 100 questions, complete with detailed explanations to aid in understanding the correct answers and the reasoning behind them. Each question is designed to challenge your knowledge and application skills in technical test analysis.\nThe practice tests include a variety of question types to ensure comprehensive preparation:\nMultiple Choice Questions: Test your knowledge and understanding of specific technical details.\nFill in the Gap: Assess your ability to recall and apply key concepts spontaneously.\nScenarios: Evaluate your analytical skills and application of knowledge in complex, real-world situations.\nKey topics covered in this exam include:\nTest Design Techniques: Advanced methods for creating effective test cases.\nTesting Tools: Usage and application of various tools in testing environments.\nQuality Characteristics: Understanding specific quality attributes in software testing.\nReviews and Assessments: Techniques for conducting technical reviews and assessments.\nPlease note, while these quizzes are an excellent tool for preparation, they are most effective when used in conjunction with other study materials such as study guides and instructional videos. Enhance your learning experience by integrating these practice tests with a broader study plan to ensure a well-rounded preparation for the CTAL-TTA exam.",
      "target_audience": [
        "Experienced Test Analysts: Individuals who have substantial experience in software testing and wish to elevate their technical testing skills.",
        "Quality Assurance Specialists: QA professionals aiming to specialize further in technical aspects of testing, including security, performance, and test automation.",
        "Software Developers: Developers interested in learning advanced testing techniques to enhance their debugging and testing capabilities.",
        "Test Managers and Team Leaders: Managers and leaders who need to understand advanced testing techniques to better manage and guide their testing teams.",
        "Systems Engineers: Engineers involved in system design and integration who require a deep understanding of how to test complex software systems effectively."
      ]
    },
    {
      "title": "Test unitarios con JUnit. Curso de introducción",
      "url": "https://www.udemy.com/course/test-unitarios-con-junit-curso-de-introduccion/",
      "bio": "Codifica tus test en java con la ayuda de las tecnologías más usadas en java, desde 0.",
      "objectives": [
        "Realizar test unitarios con soltura aplicando el framework de JUnit",
        "Conocer los diferentes tipos de test (unitarios, integración...)",
        "Maven, ejecución de test y descarga de dependencias.",
        "Medir la cobertura de los test con el plugin EclEmma",
        "Usar la API de JUnit, assert, teorías, reglas, asunciones..."
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instalación del entorno (JDK 8 + Eclipse)",
          "Agregando las librerías de JUnit a nuestro proyecto (Manual)",
          "Agregando las librerías de JUnit a nuestro proyecto (Add library)",
          "Agregando las librerías de JUnit a nuestro proyecto (Maven)",
          "Instalación de MoreUnit",
          "Uso de MoreUnit"
        ],
        "JUnit. Testeando nuestras clases": [
          "Primer JUnit. Sujeto bajo test",
          "Diferencia entre error y fallo en un test",
          "Anotaciones. Acciones previas y posteriores a los test (Fixtures)",
          "Aserciones",
          "AssertEquals I. Introducción igualdad de objetos en java",
          "AssertEquals II",
          "AssertEquals III",
          "AssertTrue y AssertFalse",
          "AssertNull y AssertNotNull",
          "AssertSame () y assertNotSame ()",
          "Debugando un test de Junit",
          "Introducción a Hamcrest. Matchers",
          "Hamcrest matchers. Uso de Hamcrest Library.",
          "Novedades en Junit 4.13",
          "Orden de los test"
        ],
        "Gestionando excepciones": [
          "Fail",
          "Método I. Try catch",
          "Metodo II. @Test(Expected)",
          "Método III. Reglas"
        ],
        "Cobertura de test": [
          "Cobertura de los test. EclEmma"
        ],
        "Test parametrizados": [
          "Test parametrizados I",
          "Test parametrizados II",
          "Test parametrizados III",
          "Test parametrizados IV. Uso de la librería JUnitParams"
        ],
        "Theories & Assumptions": [
          "Assumptions",
          "Theories"
        ]
      },
      "requirements": [
        "Conocimiento básico de java",
        "Conocimiento básico de eclipse",
        "Ganas de aprender y algo de tiempo para practicar"
      ],
      "description": "Es un curso de test con JUnit en castellano, cubre desde aspectos básicos a avanzados.\nA lo largo del curso veremos las tecnologías más empleadas en la realización de test unitarios en Java y JUnit.\n\nEl curso introduce al alumno los conceptos básicos necesarios como objeto bajo test, test de integración, test unitarios.\nAvance paulatino viendo en profundidad las características más relevantes, todas las lecciones se acompañan de ejemplos prácticos que ilustran las explicaciones.\nAdemás haremos una breve introducción a la gestión de dependencias con Maven. Crearemos un proyecto Maven y ejecutaremos los test los test unitarios, obteniendo un informe de cobertura con EclEmma\nIntrodúcete en el mundo del testing de manera sencilla.",
      "target_audience": [
        "Cualquiera que desee aprender test unitarios o profundizar en sus conocimientos",
        "Estudiantes, programadores noveles, programadores que se inician en testing",
        "Cualquier persona que quiera aprender test unitarios con JUnit"
      ]
    },
    {
      "title": "REST API Mastery: 5 Practice Exams: Clear your Concepts",
      "url": "https://www.udemy.com/course/rest-api-mastery-5-practice-exams-clear-your-concepts/",
      "bio": "REST API Mastery with 500 Unique Conceptual + Scenario Questions and Answers: 5 Practice Exams- NEW",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Welcome to \"REST API Mastery: 5 Practice Exams - Clear Your Concepts\", the ultimate course to solidify your understanding of REST APIs and ace your interviews with confidence. With 500+ unique conceptual and scenario-based questions, this course is designed to prepare you for real-world challenges in REST API design, development, and testing.\nWhat You'll Learn:\nIntroduction to REST APIs:\nGain a deep understanding of REST architecture, principles like statelessness and cacheability, and the differences between REST, SOAP, and GraphQL.\nHTTP Basics for REST APIs:\nMaster HTTP methods (GET, POST, PUT, DELETE, PATCH), status codes (200, 404, 500), and essential headers like Authorization and Content-Type.\nDesigning RESTful APIs:\nLearn best practices for resource naming, URI design, and versioning to create clean and scalable APIs.\nData Formats and Serialization:\nExplore JSON and XML, serialization/deserialization, and techniques for handling large datasets with pagination and filtering.\nAuthentication and Authorization:\nImplement secure APIs using basic authentication, OAuth2, JWT, and API keys.\nError Handling and Validation:\nStandardize error responses, validate input effectively, and handle edge cases like rate limiting and missing data.\nCaching in REST APIs:\nOptimize performance with HTTP caching headers, client/server-side caching, and conditional requests.\nRate Limiting and Throttling:\nPrevent API abuse with rate-limiting strategies and tools like Redis for managing request counts.\nAPI Documentation:\nUse tools like Swagger and Postman to create interactive and developer-friendly documentation.\nTesting REST APIs:\nMaster unit testing, integration testing, and mocking APIs with tools like Postman and WireMock.\nSecurity Best Practices:\nProtect APIs with HTTPS, configure CORS policies, and sanitize inputs to prevent security vulnerabilities.\nAdvanced Topics:\nDelve into HATEOAS, API gateways, and compare REST with GraphQL while exploring monitoring tools for performance and analytics.\nCourse Highlights:\n5 Full-Length Practice Exams: Test your knowledge with mixed-topic questions simulating real-world REST API challenges.\nExplanations: Get answers for every question to enhance your understanding.\nPractical and Scenario-Based Learning: Focus on industry-relevant use cases to build your expertise.\nBy the end of this course, you will have a comprehensive understanding of REST APIs, their best practices, and hands-on experience solving real-world scenarios. Whether you're preparing for a job interview or enhancing your skills, this course has everything you need to succeed. Join now and master REST APIs like never before!",
      "target_audience": [
        "Software Developers looking to strengthen their understanding of REST APIs for job interviews or projects.",
        "Backend Engineers aiming to design scalable and secure APIs.",
        "QA Engineers and Testers who want to master API testing and troubleshooting techniques.",
        "Students and Fresh Graduates preparing for technical interviews in web development or backend roles."
      ]
    },
    {
      "title": "Cypress 10 Component Testing Tutorial",
      "url": "https://www.udemy.com/course/cypress-10-component-testing-tutorial/",
      "bio": "Learn how to implement component testing with Cypress 10.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Knowledge in Cypress",
        "Knowledge in JavaScript",
        "Knowledge in HTML and CSS"
      ],
      "description": "Cypress 10 was just released with one of the most anticipated features that we’ve been looking forward to, which is component testing.\nYou should always be striving to break down your code into smaller, more manageable chunks. This will not only help you debug issues faster and more easily, but it will also make your code significantly easier to read and understand.\nTesting individual components of an application is generally overlooked by software developers. However, this shouldn’t be the case especially when working on larger projects or features that involve a number of different components. Testing the individual components within your application has numerous benefits.\nIn today's tutorial, we're going to learn how to set up component testing, or write some component tests, their benefits, and even learn how to do some spy. Let's go and learn Cypress 10 component testing.\n\n\nYou’ll learn:\nSetup Cypress 10 for component testing\nCode a component test\nImplement a test spy\nBenefits of using component tests\n\n\nReady to start? Check out the full curriculum and jump into the tutorial.\n\n\nWhat our students are saying?\n“Great course! This was one of the most thorough training courses I have ever taken/endured/survived. For me the course had a real \"graduate course\" feel to it, along with some almost impossible challenges that will result in frustration as well as some very deep learning.” - David Kotschessa\n\n\n“The C# section is taught by someone else, which surprised me, but I think they did a great job at instructing at a beginner level. The Selenium materials are quite comprehensive and the instructor is easy to follow and understand. I am impressed that the author has taken the time to keep the course materials updated, and therefore merits 5 stars in my book!” - David Draper\n\n\n“Well I can't explain in words how much am excited after completing this course. The more I was close to completion the more am getting excited. You are a great instructor Nikolay. You don't just taught Selenium but other aspects of being a beautiful coder. Now am pretty confident and can say \"Yes\" to my clients when they need me to automate the application. Thank you Sir for all the hard work and effort you put in the course. Surely would like to see you in another engaging course!” - Randhawa Verma\n\n\n“I like fundamental approach used by author. Will see:) To prepare such a course - it's a really hard and big job. Respect and thank you.” - Serhii Kovalenko",
      "target_audience": [
        "Intermediate developers looking to learn component testing using Cypress 10."
      ]
    },
    {
      "title": "Aprenda BDD com Cucumber em JAVA",
      "url": "https://www.udemy.com/course/cucumber-java/",
      "bio": "Automatize critérios de aceitação tanto a nível unitário quanto em testes funcionais de aplicações Web, com Selenium",
      "objectives": [
        "Criar um projeto de testes com Cucumber do zero",
        "Criar e rodar especificações executáveis",
        "Integrar seus cenários com testes Web através do Selenium",
        "Gerar relatórios com o resumo da execução dos testes"
      ],
      "course_content": {
        "Introdução": [
          "Conteúdo do curso",
          "BDD e Cucumber"
        ],
        "Fundamentos": [
          "Gherkin",
          "Montando o ambiente",
          "Problema com acentuação",
          "Cenário Inicial",
          "Tudo em portugês",
          "Integrando com JUnit",
          "CucumberOptions",
          "Cenário: Contador",
          "Asserts",
          "Reaproveitando cenários - REGEX",
          "Cenários para a próxima aula",
          "Desafio: REGEX",
          "Transform",
          "Melhorando fluidez dos cenários",
          "Organizando a casa",
          "Tags"
        ],
        "BDD com testes unitários": [
          "Feature: Locadora",
          "Cenário: Alugar filme com sucesso",
          "Cenário: Alugar filme sem estoque",
          "Cenário: Pontuação por categoria",
          "Testes Data-Driven",
          "DataTable",
          "Relatórios",
          "Execução por linha de comando"
        ],
        "Cucumber com Selenium (Testes Funcionais)": [
          "Atenção na próxima aula",
          "Feature: Inserir Conta",
          "Feature para você copiar",
          "Montando ambiente de testes Web",
          "Cenário: Inserir conta com sucesso",
          "Cenário: Inserir conta sem nome",
          "Cenário: Inserir conta já existente",
          "Hooks",
          "Gerenciamento de Massa de Dados",
          "Contexto",
          "Generalizando testes",
          "Screenshots",
          "Organizando Runners",
          "Cenários imperativos x Cenários declarativos"
        ],
        "Atualizações do curso": [
          "Atualização do curso"
        ],
        "Encerramento": [
          "Até a próxima",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA"
      ],
      "description": "Seja bem vindo ao curso de Cucumber em JAVA.\nNesse curso, vamos conhecer uma alternativa ao desenvolvimento tradicional de testes. Vamos aprender como executar os testes a partir de uma documentação bem simples, em linguagem natural que vai evoluir junto com o código. Conversaremos sobre os detalhes da linguagem, como podemos especificar em outros idiomas e como podemos deixá-la enxuta e bem estruturada.\nO curso possui muita prática, onde conheceremos os fundamentos do Cucumber, os detalhes e palavras chaves do Gherkin e como deixar os cenários reusáveis através das expressões regulares. Além de tudo isso, teremos dois módulos para mostrar como podemos utilizá-lo no desenvolvimento de testes a nível unitário e funcional. Sendo que, para os testes funcionais, veremos como configurar o ambiente de testes web com o uso do Selenium.\nAprenda esse alternativa à forma que criamos nossos testes atualmente e seja um diferencial.",
      "target_audience": [
        "Testadores que estão cansados de ver os casos de testes ficarem desatualizados",
        "Desenvolvedores cansados de tanta documentação"
      ]
    },
    {
      "title": "Extent Reports Made Easy (Selenium)",
      "url": "https://www.udemy.com/course/extent-reports-made-easy/",
      "bio": "All concepts of Extent Reports along with advanced topics are covered from scratch in a detailed, practical and easy way",
      "objectives": [
        "Extent Reports from Scratch",
        "All Advanced Topics of Extent Reports that are required for Selenium Test Automation",
        "Additional topics of Extent Reports along with detailed practical demonstrations",
        "All Extent Reports concepts without leaving any are covered from beginning to end in this course"
      ],
      "course_content": {
        "Detailed Extent Reports Course from Scratch": [
          "Why Default TestNG Reports are not enough?",
          "Widely used Test Automation Reports in the market (Extent Reports - Part 2)",
          "What are Extent Reports? (Extent Reports - Part 3)",
          "Official Website of Extent Reports and Documentation (Extent Reports - Part 4)",
          "Is Extent Report free or paid? (Extent Reports - Part 5)",
          "Exploring Extent Reports in detail (Extent Reports - Part 6)",
          "Setting up Projects with Extent Report library (Extent Reports - Part 7)",
          "Different Reporters supported by Extent Reports (Extent Reports - Part 8)",
          "Generating Basic Extent Report without any Tests using Spark Reporter (Extent Re",
          "Creating Tests in the Extent Reports and showing their execution results in repo",
          "Different Logs and their Levels in Extent Reports (Extent Reports - Part 11)",
          "Log text in bold or italic formats into the generated extent report (Extent Repo",
          "Log xml content into the generated extent report (Extent Reports - Part 13)",
          "Log JSON content into the generated extent report (Extent Reports - Part 14)",
          "Log Collection Data into the generated extent report (Extent Reports - Part 15)",
          "Log Highlighted text into the generated extent report (Extent Reports - Part 16)",
          "Log Exception details into the generated extent report (Extent Reports - Part 17",
          "Adding description to the Tests in Extent Report (Extent Reports - Part 18)",
          "Attaching screenshots to extent reports at Test Level (Extent Reports - Part 19)",
          "addScreenCaptureFromBase64String (Extent Reports - Part 20)",
          "addScreenCaptureFromPath (Extent Reports - Part 21)",
          "Attaching screenshots to extent reports at Log Level (Extent Reports - Part 22)",
          "Attaching screenshots to extent reports only for the failed tests (Extent Report",
          "assignAuthor(), assignCategory() and assignDevice() (Extent Reports - Part 24)",
          "Configuration using Java - Report theme,naming, title, time stamp format, CSS st",
          "Configuration using JSON & XML - Report theme,naming, title, time stamp format,",
          "Enabling previewing of base64 images in the generated Extent Report (Extent Repo",
          "Adding System Envrionment details to Extent Reports (Extent Reports - Part 28)",
          "Remove or change the order of Extent Report Tabs (Extent Reports - Part 29)",
          "Generating separate Extent Reports with filtered Status Test results (Extent Rep",
          "Extent Reports - Shortcuts (Extent Reports - Part 31)"
        ]
      },
      "requirements": [
        "Selenium Test Automation"
      ],
      "description": "In this session, I have explained all the concepts of Extent Reports in a details manner from scratch in easiest manner. All the advanced concepts of Extent Reports are covered in this session. Refer to the curriculum for more details.\n\n\nThe below are the different topics covered in this course:\n\n\nWhy Default TestNG Reports are not enough?\nWidely used Test Automation Reports in the market\nWhat are Extent Reports?\nOfficial Website of Extent Reports and Documentation\nIs Extent Report free or paid?\nExploring Extent Reports in detail\nSetting up Projects with Extent Report library\nDifferent Reporters supported by Extent Reports\nGenerating Basic Extent Report without any Tests using Spark Reporter\nCreating Tests in the Extent Reports and showing their execution results in report\nDifferent Logs and their Levels in Extent Reports\nLog text in bold or italic formats into the generated extent report\nLog xml content into the generated extent report\nLog JSON content into the generated extent report\nLog Collection Data into the generated extent report\nLog Highlighted text into the generated extent report\nLog Exception details into the generated extent report\nAdding description to the Tests in Extent Report\nAttaching screenshots to extent reports at Test Level\naddScreenCaptureFromBase64String\naddScreenCaptureFromPath\nAttaching screenshots to extent reports at Log Level\nAttaching screenshots to extent reports only for the failed tests\nassignAuthor(), assignCategory() and assignDevice()\nConfiguration using Java - Report theme,naming, title, time stamp format, CSS style and JS Code\nConfiguration using JSON & XML - Report theme,naming, title, time stamp format, CSS style and JS Code\nEnabling previewing of base64 images in the generated Extent Report\nAdding System Envrionment details to Extent Reports\nRemove or change the order of Extent Report Tabs (Extent Reports - Part 29)\nGenerating separate Extent Reports with filtered Status Test results\nExtent Reports - Shortcuts",
      "target_audience": [
        "One who knows Selenium Test Automation and would like to learn Extent Reports Concepts in depth"
      ]
    },
    {
      "title": "Appium with Java and Sauce Labs",
      "url": "https://www.udemy.com/course/appium-with-java-and-sauce-labs/",
      "bio": "Learn how to use Appium with Java & Sauce Labs to reduce the complexity of your mobile apps.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Appium with Java and Sauce Labs Core Videos": [
          "Gitpod Setup",
          "Run test in Sauce Labs",
          "Upload an app to Sauce Storage",
          "iOS Test Exercise",
          "iOS Test Solution",
          "Set Test Name",
          "Report Results to Sauce Labs",
          "Create an automated iOS test",
          "Appium Inspector and Setup",
          "Appium Options on Sauce Labs",
          "Appium Test Exercise",
          "Appium Test Solution",
          "Run tests in parallel",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Knowledge in Java"
      ],
      "description": "Mobile app testing is one of the most crucial phases of an app’s development process. It helps detect a software program’s bugs, failure, and performance issues before the final release.\nThis tutorial will help you learn how to use Appium with Java and Sauce Labs to test Android or iOS apps on real devices or emulators at any time and on demand. To test applications, it is important to ensure that different user journeys are covered comprehensively and test them across multiple app environments (e.g., home screen, Settings menu etc.).\nMoreover, as mobile apps continue to grow in complexity and adoption of smart devices continues to rise globally, it is also essential to automate these testing activities as much as possible.\nIn this new tutorial, we will discuss how you can use Appium with Java and Sauce Labs to significantly reduce the complexity of your mobile app tests while increasing their effectiveness by running them in an automated environment where they can be executed in parallel on iOS or Android mobile environment.\n\n\nReady to start? Check out the full curriculum and jump into the tutorial.\n\n\nWhat our students are saying?\n“Great course! This was one of the most thorough training courses I have ever taken/endured/survived. For me the course had a real \"graduate course\" feel to it, along with some almost impossible challenges that will result in frustration as well as some very deep learning.”- David Kotschessa\n\n\n“The C# section is taught by someone else, which surprised me, but I think they did a great job at instructing at a beginner level. The Selenium materials are quite comprehensive and the instructor is easy to follow and understand. I am impressed that the author has taken the time to keep the course materials updated, and therefore merits 5 stars in my book!” - David Draper\n\n\n“Well I can't explain in words how much am excited after completing this course. The more I was close to completion the more am getting excited. You are a great instructor Nikolay. You don't just taught Selenium but other aspects of being a beautiful coder. Now am pretty confident and can say \"Yes\" to my clients when they need me to automate the application. Thank you Sir for all the hard work and effort you put in the course. Surely would like to see you in another engaging course!” - Randhawa Verma\n\n\n“I like fundamental approach used by author. Will see:) To prepare such a course - it's a really hard and big job. Respect and thank you.” - Serhii Kovalenko\n\n\n“Wonderful content and things explained in a nutshell. Overwhelmed by Author's dedication to put things in such a way that any novice or manual tester can follow and understand and definitely be on-boarded as a Selenium Automation Engineer next day at work. Thanks a million times for creating these courses! One Stop for Automation.\"- Rupashree Geethaaviji Ananthakrishna\n\n\n“I am familiar with Nikolay from a course I saw on TestAutomation and have the highest regard for him. Glad to see him on Udemy.” - Annamalai Viswanathan\n\n\n“One Of the Best courses on Selenium With C#. Cheers Nikolay!!” - Saransh Vaid",
      "target_audience": [
        "Intermediate developers looking to learn Appium with Java and Sauce Labs."
      ]
    },
    {
      "title": "QA Interview Questions: Top 100 Explained",
      "url": "https://www.udemy.com/course/software-testing-interview/",
      "bio": "100 QA Interview Questions + Practice Tasks — Land Your First Testing Job!",
      "objectives": [
        "How to answer 100+ real QA interview questions",
        "How to explain key testing concepts clearly",
        "How to write test cases and bug reports",
        "How to talk about Agile, API testing, and automation",
        "How to prepare for soft-skill and technical questions",
        "How to write simple SQL queries for testing",
        "How to analyze API responses",
        "How to feel confident in any QA interview"
      ],
      "course_content": {
        "Introduction": [
          "About instructor"
        ],
        "Testing Basics": [
          "What is the difference between verification and validation?",
          "Can you explain what a test case is?",
          "What are the different levels of testing?",
          "What is regression testing?",
          "What is the difference between functional and non-functional testing?",
          "How do you decide what to test?",
          "What is a test plan?",
          "What is the role of a QA engineer?",
          "What is exploratory testing?",
          "What is boundary value analysis?",
          "Can you explain equivalence partitioning?",
          "What is the V-Model in software testing?",
          "What is static testing?",
          "What is user acceptance testing (UAT)?",
          "What is a defect life cycle?",
          "How do you handle changing requirements?",
          "What is risk-based testing?",
          "What is smoke testing?",
          "What is sanity testing?",
          "What is test coverage?"
        ],
        "Tools & Techniques": [
          "Which test management tools have you used?",
          "What is your experience with Jira?",
          "What is the difference between Postman and SoapUI?",
          "How do you test APIs?",
          "What are HTTP status codes and why are they important?",
          "What are some commonly used testing techniques?",
          "How do you report bugs effectively?",
          "What is your process for writing test cases?",
          "How do you prioritize test cases?",
          "What is the difference between test scenarios and test cases?",
          "What tools do you use for test reporting?",
          "Have you used any performance testing tools?",
          "What is a test suite?",
          "What is defect density?",
          "What are the most important elements of a bug report?",
          "How do you estimate testing efforts?",
          "How do you ensure traceability in testing?",
          "What is a test data strategy?",
          "How do you handle data privacy in test data?",
          "What is an RTM (Requirement Traceability Matrix)?"
        ],
        "Behavioral & Soft Skills": [
          "Tell me about a time you found a critical bug late in the release cycle.",
          "How do you handle conflicts with developers?",
          "Describe a situation where you had to work under pressure.",
          "How do you deal with repetitive testing tasks?",
          "How do you stay up to date with QA trends?",
          "How do you handle feedback from your peers or manager?",
          "Describe a time when you missed a bug. What did you learn?",
          "What do you do if you’re unsure how to test something?",
          "How do you organize your daily work?",
          "What is your approach to teamwork?",
          "How do you communicate testing progress?",
          "What motivates you to be a tester?",
          "How do you ensure quality in your work?",
          "How do you handle deadlines that are too tight?",
          "Tell me about a successful project you worked on.",
          "How do you mentor junior testers?",
          "How do you handle vague or incomplete requirements?",
          "How do you balance quality and speed?",
          "Describe a time you went beyond your job description.",
          "What are your career goals in QA?"
        ],
        "Automation Testing": [
          "What is the difference between Selenium and Cypress?",
          "How do you decide what to automate?",
          "What programming languages have you used for automation?",
          "What is a test automation framework?",
          "What are some common challenges in automation testing?",
          "Can you explain your test automation strategy?",
          "What is continuous testing?",
          "How do you maintain automated tests?",
          "How do you handle dynamic elements in UI testing?",
          "What are some best practices for writing automated tests?",
          "What is the Page Object Model?",
          "Have you worked with CI/CD tools like Jenkins?",
          "How do you handle test data in automation?",
          "What are the benefits of automation testing?",
          "What is the ROI of automation?",
          "What are headless browsers and when would you use them?",
          "How do you test for cross-browser compatibility?",
          "What tools have you used for API automation?",
          "What is test flakiness and how do you address it?",
          "What are your favorite automation tools and why?"
        ],
        "Agile, DevOps & Processes": [
          "What is your role in an Agile team?",
          "How do you participate in sprint planning?",
          "What is the definition of done in testing?",
          "What is your experience with Scrum or Kanban?",
          "How do you test in continuous delivery pipelines?",
          "What are QA responsibilities during a sprint?",
          "What is shift-left testing?",
          "How do you collaborate with developers in Agile?",
          "How do you track testing progress in Agile?",
          "What metrics do you use in Agile QA?",
          "What is DevOps and how does QA fit into it?",
          "What is test-driven development (TDD)?",
          "What is behavior-driven development (BDD)?",
          "How do you write BDD scenarios?",
          "What is the role of QA in CI/CD?",
          "How do you ensure quality in fast delivery cycles?",
          "What is your approach to testing user stories?",
          "How do you handle incomplete acceptance criteria?",
          "How do you test in a DevOps environment?",
          "What is your opinion on the “no tester” team model?"
        ],
        "Practice Tasks": [
          "Task 1: Write a SQL query",
          "Task 2: Write test cases",
          "Task 3: Report a bug",
          "Task 4: Analyze API response"
        ],
        "Additional lessons": [
          "What is Testing?"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Interest in software testing or QA",
        "Motivation to learn and practice"
      ],
      "description": "Welcome to the “100 QA Interview Questions + Practice Tasks” course — your complete guide to preparing for software testing interviews with real-world questions, in-depth explanations, and practical exercises.\nWhether you're just starting your career in software testing or preparing for your next job interview, this course gives you everything you need to feel confident and stand out as a QA candidate.\n\n\nWhat You'll Learn:\n\n\nThe most common technical and behavioral interview questions for software testers\nHow to answer with confidence and clarity — including real-world explanations and examples\nKey QA concepts like test cases, defect lifecycle, test types, automation, Agile, API testing, DevOps, and more\nHow to explain your experience, projects, tools, and mindset as a tester\nPractical skills with hands-on tasks, such as writing test cases, SQL queries, reporting bugs, and analyzing API responses\n\n\nPractice Tasks Include:\n\n\nWriting SQL queries based on real-world scenarios\nCreating structured, effective test cases\nLogging professional bug reports with clear steps and expected behavior\nInterpreting API responses and identifying hidden issues\n\n\nWhy Take This Course:\n\n\nInterview-ready preparation: Practice 100+ questions that cover real recruiter expectations\nReal explanations: Understand why certain answers work — not just memorize them\nGain practical experience: Combine theory with real QA tasks\nFlexible learning: Take it at your own pace and revisit whenever you need\nJob-focused: Created by a QA expert who knows what employers actually look for\n\n\nWhether you're preparing for your first QA job, aiming to switch roles, or just want to sharpen your confidence before an interview, this course will help you turn knowledge into real interview performance — and skill into opportunity.\n\n\nEnroll now and get ready to land your next software testing job with confidence!",
      "target_audience": [
        "Anyone preparing for a QA job interview",
        "Beginners who want to enter software testing",
        "Junior testers looking to grow and improve",
        "Manual testers who want to boost interview skills"
      ]
    },
    {
      "title": "Get Hired in Game QA – Job Search, Applications & Interview",
      "url": "https://www.udemy.com/course/land-your-first-qa-job-in-game-testing/",
      "bio": "Learn how to prepare for game QA jobs, write effective applications, and succeed in interviews—even with no industry exp",
      "objectives": [
        "How to create a game QA resume and cover letter tailored to job postings",
        "How to search and apply for entry-level game testing jobs",
        "How to prepare for interviews and QA assessments, including bug reporting and communication tasks",
        "How to present your QA experience, skills, and value confidently—even without formal job history"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Understanding the Hiring Process": [
          "Hiring process in game testing",
          "Skills of a perfect candidate",
          "Common misconceptions about game testing job"
        ],
        "Where and How to Find Jobs": [
          "Visible and hidden job markets",
          "Checking main platforms for applications"
        ],
        "Crafting Your Resume & Cover Letter": [
          "Tips to craft the CV",
          "Creating the CV from scratch",
          "Tips for QA portfolio",
          "Building a Portfolio",
          "Writing a good cover letter"
        ],
        "Getting experience before employment": [
          "Getting game testing experience before employment",
          "Creating Upwork profile",
          "Finding jobs on Upwork",
          "Applying to jobs"
        ],
        "Preparing for Interviews & Tests": [
          "Mastering HR Interview",
          "Practical task during hiring process",
          "Common technical interview questions",
          "Passing the interview"
        ],
        "Final Steps": [
          "(Bonus) Soft skills mindset",
          "Handling rejections and Final steps"
        ]
      },
      "requirements": [
        "Basic understanding of game QA concepts",
        "Access to a computer with internet connection for writing resumes and job applications",
        "Willingness to apply, iterate, and stay consistent during your job search"
      ],
      "description": "Are you ready to take your first step into the game industry as a QA tester?\n\nBreaking into the game industry as a QA tester can be challenging — not because you lack skills, but because you don’t yet know how to present them effectively. This course is built specifically to help you bridge that gap and start working in QA.\nInstead of covering QA theory, we focus entirely on what comes next: finding job opportunities, applying with confidence, and performing well during interviews and assessments. You’ll discover how to recognize the right job listings, communicate your experience (even if it’s informal or freelance), and respond to the kinds of questions real QA leads ask during hiring.\nThis course is ideal for those who understand the basics of game testing and are ready to take action toward getting hired.\nInside the course, you’ll:\nUnderstand how hiring actually works in game QA teams\nLearn how to approach both freelance and studio-based QA jobs\nPractice answering both technical and behavioral interview questions\nExplore strategies for presenting your value as a beginner tester\nBuild confidence for live assessments and test assignments\nWho it’s for:\nNew testers looking for their first paid opportunity in QA\nSelf-taught or course-trained testers struggling to get callbacks\nBeta testers and hobbyists ready to move into real project work\nAnyone looking for a structured, job-focused QA preparation path",
      "target_audience": [
        "Aspiring game testers who want to turn their skills into a real, paid job",
        "Students or recent graduates who have completed a beginner QA or game testing course",
        "Anyone struggling to get interviews or responses to QA job applications",
        "Career changers entering the game industry through quality assurance"
      ]
    },
    {
      "title": "Manual Testing- Agile, Jira, Zephyr,project & Interview Q&A",
      "url": "https://www.udemy.com/course/manual-testing-for-beginners-jira-zephyr/",
      "bio": "Zero to Hero in Manual testing, SDLC, STLC, Testing tools,",
      "objectives": [
        "Understand JIRA tools from Scratch with Live project demonstration",
        "Thorough knowledge on latest Practices like Agile scrum, SDLC approaches",
        "Strong exposure on designing test cases and defect life cycle process",
        "Easily clear interviews on manual testing"
      ],
      "course_content": {
        "Introduction": [
          "Overview on the training program",
          "What is software application and overview on SDLC Part 1",
          "Complete course material",
          "Overview on SDLC Part 2 & What is Defect, Error, Mistake",
          "What is Software Testing & Introduction to Verification & Validation",
          "Overview on STLC",
          "BBT Techniques",
          "Test Planning Phase :: Test Plan template",
          "Test Planning Phase :: Test Strategy template & Overview on sample app",
          "Test Analysis Phase :: Overview on Sample application and its requirement",
          "Test Design Phase :: Test Case Creation Part 1",
          "Test Design Phase :: Test Case Creation Part 2",
          "Test Design Phase :: Test Case Creation Part 3 & Assignment",
          "Test Design Phase :: Doubts clarification on test case and Test Execution Phase",
          "Test Design Phase :: Doubts clarification on Test Case Part 2",
          "Test Design Phase :: Doubts clarification on Test Case Part 3",
          "Test Design Phase :: Doubts clarification on Test Case Part 4",
          "Test Design Phase :: Doubts clarification on Test Case Part 5",
          "Draft LessonTest Design Phase :: Doubts clarification on Test Case Part 6",
          "Test Design Phase :: Doubts clarification on Test Case Part 7",
          "Test Design Phase :: Doubts clarification on Test Case Part 8",
          "Defect Life Cycle with examples Part 1",
          "Defect Life Cycle with examples Part 2",
          "overview on JIRA account creation",
          "JIRA access, Zephyr sqard overview",
          "Zephyr sqard overview test case creation with examples n cycles",
          "Zephyr :: Review & Edit test cases, Execution part, Dashboards",
          "Overview on SDLC models",
          "overview on Agile Real World Process Part 1",
          "overview on Agile Real World Process Part 2",
          "overview on Agile Real World Process Part 3",
          "overview on Agile Real World Process Part 4",
          "Quick walkthrough on all the concepts we discussed so far Part 1",
          "Quick walkthrough on all the concepts we discussed so far Part 2",
          "Realtime Project overview Part 1",
          "Realtime Project overview Part 2",
          "Testing definitions"
        ],
        "Realtime Project": [
          "Real time Project overview & Requirements Part 1",
          "Real time Project overview & Requirements Part 2",
          "Real time Project overview & Requirements Part 3",
          "Real time Project overview & Requirements Part 4",
          "Real time Project overview & Requirements Part 5",
          "Real time Project overview & Requirements Part 6",
          "Real time Project overview & Requirements Part 7",
          "Real time Project overview & Requirements Part 8"
        ],
        "Interview Questions & Answers": [
          "Interview Questions Part 1",
          "Interview Questions Part 2",
          "Interview Questions Part 3",
          "Interview Questions Part 4"
        ]
      },
      "requirements": [
        "Nothing specific, All prerequisites are taken care as part of course"
      ],
      "description": "This Course is updated on 09th Apr 2023 with below topics:\nBunch of examples on Test Design Phase\nBunch of tutorials on Realtime Project explanations with examples\nInterview Questions & Answers\nManual Testing + Agile + Jira + Live Projects in Telugu Language , A complete Manual testing Pack with Jira and Agile\n\n\nThis Course is updated on 23rd Feb 2022 with  course material section\n\n\nLast updated on 05-01-2022\n\n\nLast updated on 30-12-2021\n\n\nIntroduction of Software Testing\nWhat is Software?\nWhat is Software Testing?\nWhat is a Quality of Software?\nImportance of Software Testing?\nWhy Software has bugs?\nTesting Roles in Company\nTesting Team Responsibilities\nWhat is Functionality?\nWhat is Defect, Error, and Bug?\nSoftware Development Process\nWhat is SDLC?\nPhases of SDLC\nSDLC work flow – detailed explanation\nTesting Techniques\nStatic Testing\nDynamic Testing\nTesting Methods\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nLevels of Testing\nUnit Testing\nWhat is Unit Testing?\nExamples of Unit Testing\nWho will perform Unit Testing in Companies?\nIntegration Testing\nWhat is Integration Testing?\nIntegration Testing Types?\nExamples of Integration Testing?\nWho will perform Integration Testing in Companies?\nSystem Testing\nWhat is System Testing?\nExamples of System Testing\nWho will perform system testing in Companies?\nTypes of System Testing\nUser Acceptance Testing\nWhat is UAT?\nTypes of UAT (Alpha & Beta Testing)\nTypes of Testing\nSmoke testing\nSanity testing\nUsability Testing\nUser Interface Testing\nFunctionality Testing\nRe-Testing\nRegression Testing\nData Base Testing\nCompatibility Testing\nSecurity Testing\nAd-hoc Testing\nExploratory Testing\nInstallation Testing\nRecovery Testing\nServer Log File Testing\nPerformance Testing\nLoad Testing\nStress Testing\nVolume Testing\nEndurance Testing\nSoftware Development Models\nWaterfall Model\nIncrement Model\nPrototype Model\nSpiral model\nRapid Model\nV-Model\nAgile Model\nSoftware Engineering\nWhat is a Software engineering?\nMajor factors of software engineering\nQA Process and benefits of Process\nWhat is reusability?\nWhat is Process?\nSignificance and Advantages\n\n\n\n\nVerification and Validation\nVerification methods\ninspection\nWalkthrough\nBuddy check\nValidation Methods\nSoftware Testing Life Cycle\nTest Initiation\nTest Planning\nTest Design\nTest Execution\nDefect Reporting\nClosing\nTest Initiation phase\nWhat is Test Initiation?\nUnderstanding project requirements with live show\nUnderstanding UI Spec, FR Spec Documents\nTest Planning Phase\nWhat is a Test Plan?\nWho will prepare Test plan documents?\nPreparing a Test plan documents for project\nTest Design Phase\nWhat Tester will do in Test Design Phase?\nWhat is Use Case?\nWhat is a Scenario?\nPreparing Scenarios for project\nWhat is a Test Case?\nPreparing Test case Template for project\nTypes of Test cases\nTest Case design techniques\nBVA\nECP\nDecision Table\nState Transition Diagrams\nError Guessing\nDesigning test cases for project\nTest Case Status\nTest Cases Review\nPreparing RTM\nProjects & Technologies\nDifference between Project & Product?\nWhat is a Project?\nWhat is a Product?\nType of Projects?\nDesktop application\nWeb Applications\nSystem Products\nSoftware Environment:\nEnvironment is a combination of three layers\nPresentation layer\nBusiness layer\nDB layer\nTest Case Execution\nWhen do we start test case execution?\nWhat is a Build?\nWhat is Version?\nBuild Release Note\nWho prepares the Release Notes?\nWhen to prepare the Release Notes?\nSignificance of Release Notes\nVersion Controlling and managing\nBuilds from Development to Testing\nBuild & Deployment Process\nWho will deploy the application\nHow to access the application\nTest case execution\nDefect Reporting and Tracking\nWhat is a defect?\nDefect Status\nDefect Severity\nDefect Priority\nTypes of Defects\nDefect Life Cycle\nCreating defects in QC\nDefect Density\nResult Analysis\nDefect Reporting Through Bug Tracking Tools (Bugzilla/Jira/QC)\nDefect Management\nCreating user roles and permissions for each role\nCreating users for each role\nDefects reporting\nDefects tracking\nDefects Retesting\nVarious reports generation\nDefects closing\nAgile Scrum Framework [Real Time Overview]\n\n\nAgile principles\nAgile Scrum Overview\nScrum roles\nProduct Owner roles\nScrum master role\nTeam role\nScrum Meetings\nSprint Planning meeting\nDaily Scrum meeting\nScrum review meeting\nScrum retrospective meeting\nRelease planning meeting\n\n\n\n\nIntroduction of Software Testing\nWhat is Software?\nWhat is Software Testing?\nWhat is a Quality of Software?\nImportance of Software Testing?\nWhy Software has bugs?\nTesting Roles in Company\nTesting Team Responsibilities\nWhat is Functionality?\nWhat is Defect, Error, and Bug?\nSoftware Development Process\nWhat is SDLC?\nPhases of SDLC\nSDLC work flow – detailed explanation\nTesting Techniques\nStatic Testing\nDynamic Testing\nTesting Methods\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nLevels of Testing\nUnit Testing\nWhat is Unit Testing?\nExamples of Unit Testing\nWho will perform Unit Testing in Companies?\nIntegration Testing\nWhat is Integration Testing?\nIntegration Testing Types?\nExamples of Integration Testing?\nWho will perform Integration Testing in Companies?\nSystem Testing\nWhat is System Testing?\nExamples of System Testing\nWho will perform system testing in Companies?\nTypes of System Testing\nUser Acceptance Testing\nWhat is UAT?\nTypes of UAT (Alpha & Beta Testing)\nTypes of Testing\nSmoke testing\nSanity testing\nUsability Testing\nUser Interface Testing\nFunctionality Testing\nRe-Testing\nRegression Testing\nData Base Testing\nCompatibility Testing\nSecurity Testing\nAd-hoc Testing\nExploratory Testing\nInstallation Testing\nRecovery Testing\nServer Log File Testing\nPerformance Testing\nLoad Testing\nStress Testing\nVolume Testing\nEndurance Testing\nSoftware Development Models\nWaterfall Model\nIncrement Model\nPrototype Model\nSpiral model\nRapid Model\nV-Model\nAgile Model\nSoftware Engineering\nWhat is a Software engineering?\nMajor factors of software engineering\nQA Process and benefits of Process\nWhat is reusability?\nWhat is Process?\nSignificance and Advantages\n\n\n\n\nVerification and Validation\nVerification methods\ninspection\nWalkthrough\nBuddy check\nValidation Methods\nSoftware Testing Life Cycle\nTest Initiation\nTest Planning\nTest Design\nTest Execution\nDefect Reporting\nClosing\nTest Initiation phase\nWhat is Test Initiation?\nUnderstanding project requirements with live show\nUnderstanding UI Spec, FR Spec Documents\nTest Planning Phase\nWhat is a Test Plan?\nWho will prepare Test plan documents?\nPreparing a Test plan documents for project\nTest Design Phase\nWhat Tester will do in Test Design Phase?\nWhat is Use Case?\nWhat is a Scenario?\nPreparing Scenarios for project\nWhat is a Test Case?\nPreparing Test case Template for project\nTypes of Test cases\nTest Case design techniques\nBVA\nECP\nDecision Table\nState Transition Diagrams\nError Guessing\nDesigning test cases for project\nTest Case Status\nTest Cases Review\nPreparing RTM\nProjects & Technologies\nDifference between Project & Product?\nWhat is a Project?\nWhat is a Product?\nType of Projects?\nDesktop application\nWeb Applications\nSystem Products\nSoftware Environment:\nEnvironment is a combination of three layers\nPresentation layer\nBusiness layer\nDB layer\nTest Case Execution\nWhen do we start test case execution?\nWhat is a Build?\nWhat is Version?\nBuild Release Note\nWho prepares the Release Notes?\nWhen to prepare the Release Notes?\nSignificance of Release Notes\nVersion Controlling and managing\nBuilds from Development to Testing\nBuild & Deployment Process\nWho will deploy the application\nHow to access the application\nTest case execution\nDefect Reporting and Tracking\nWhat is a defect?\nDefect Status\nDefect Severity\nDefect Priority\nTypes of Defects\nDefect Life Cycle\nCreating defects in QC\nDefect Density\nResult Analysis\nDefect Reporting Through Bug Tracking Tools (Bugzilla/Jira/QC)\nDefect Management\nCreating user roles and permissions for each role\nCreating users for each role\nDefects reporting\nDefects tracking\nDefects Retesting\nVarious reports generation\nDefects closing\nAgile Scrum Framework [Real Time Overview]\n\n\nAgile principles\nAgile Scrum Overview\nScrum roles\nProduct Owner roles\nScrum master role\nTeam role\nScrum Meetings\nSprint Planning meeting\nDaily Scrum meeting\nScrum review meeting\nScrum retrospective meeting\nRelease planning meeting",
      "target_audience": [
        "Anyone who wants to start their career into testing world"
      ]
    },
    {
      "title": "Performance Test - Primeiros passos com o K6",
      "url": "https://www.udemy.com/course/performance-test-primeiros-passos-com-o-k6/",
      "bio": "Performance Test - Primeiros passos com o K6",
      "objectives": [
        "Testes de performance",
        "K6",
        "Métricas",
        "Thresholds"
      ],
      "course_content": {
        "Introdução": [
          "Recados iniciais",
          "Introdução",
          "Instalação"
        ],
        "Tipos de teste de Performance": [
          "Introdução",
          "Smoke Test",
          "Load Test",
          "Stress e Spike Test",
          "Soak Test"
        ],
        "Mão na massa": [
          "Primeiros passos",
          "Dica",
          "Conceitos de métricas",
          "Práticas de métricas",
          "Checks",
          "Thresholds",
          "Tipos métricas",
          "Opções e estrutura de teste",
          "Xk6 Browser (Bônus)",
          "Testes híbridos"
        ],
        "Conclusão": [
          "Bônus",
          "Conclusão"
        ]
      },
      "requirements": [
        "Conhecimento básicos em javascript ou lógica de programação"
      ],
      "description": "O que é o k6?\nO k6 é uma ferramenta de teste de carga de código aberto e gratuita, com isso será capaz de detectar regressões de desempenho e problemas mais cedo, permitindo construir sistemas mais resilientes e aplicativos robustos. O k6 utiliza a linguagem JavaScript para a criação dos cenários de teste.\nHoje somos limitados a poucas ferramentas de testes de performance e com certeza o K6 veio para mudar essa história.\nCom poucas linhas de código você será capaz de escrever testes extremamente robustos.\n\nO teste de performance é o processo de avaliar o desempenho de recursos essenciais a uma infraestrutura de TI. Profissionais dessa área são muito valorizados.\nVelocidade, capacidade, tempo de resposta e a estabilidade de servidores, rede, softwares ou dispositivos sob uma intensa carga de trabalho são exemplos de como o teste de performance pode ajudar na avaliação da arquitetura tecnológica de uma empresa.\nOs departamentos de TI das empresas devem utilizar os testes de performance para verificar o desempenho da estrutura de armazenamento da organização, verificando, através de um processo estruturado de qualidade e testes, de que forma a arquitetura de dados responde à grande carga de dados em momentos considerados críticos durante as operações de negócio.",
      "target_audience": [
        "Testadores, SREs, DEVOPS, Devs"
      ]
    },
    {
      "title": "Le Bootcamp complet de test logiciel 2023/2024",
      "url": "https://www.udemy.com/course/le-bootcamp-complet-de-test-logiciel-2021-2022/",
      "bio": "Tout ce que vous devez savoir sur les tests logiciels:Conception ,Plan,Campagne et Stratégie de test, automatisation..",
      "objectives": [
        "Concepts de base des tests logiciels",
        "Tests manuels du logiciel de débutant à avancé",
        "Cas de test et rédaction de rapports de bug",
        "Notions de base sur les méthodologies agiles et les tests agiles",
        "Principes de base des tests d'API",
        "Test d'API à l'aide de Postman",
        "Comment rédiger un CV professionnel en assurance qualité",
        "Comment se préparer à un entretien d'assurance qualité",
        "Connaissance pratique détaillée de JIRA du point de vue de l'assurance qualité, sera prêt à utiliser JIRA pour la gestion des bug et des tâches",
        "Questions d'entretien et meilleures pratiques.",
        "Gestion des bases de données / REQUETE CRUD",
        "Automatisation des tests",
        "Les niveaux de tests",
        "les types de tests",
        "les tests de performance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Point important pour le bon déroulement de la formation"
        ],
        "Prérequis :": [
          "C'est quoi les tests ? les niveaux ? les types ? le parcours d'un testeur,....",
          "Merci",
          "Test de logiciels : méthode de gestion de projet ( Waterfall Vs agile)",
          "Clarification",
          "Test logiciel : Cycle de développement logiciel SDLC",
          "TEST LOGICIEL : Niveaux de test-test systeme",
          "Merci",
          "Les essentiels en test logiciel",
          "Les essentiels en test logiciel",
          "Exemple complet :stratégie de test + planification de test + campagne de test"
        ],
        "Test logiciel : Questions avec réponses et explications": [
          "Questions 1",
          "Réponse question 1",
          "Questions 2",
          "Réponse question 2",
          "Questions 3",
          "Réponse question 3",
          "Questions 4",
          "Réponse question 4",
          "Questions 5",
          "Réponse question 5",
          "Questions 6",
          "Réponse question 6",
          "Questions 7",
          "Réponse question 7",
          "Questions 8",
          "Réponse question 8",
          "Question 9",
          "Réponse question 9"
        ],
        "Les méthodes de gestion de projet : Comprendre l'Agilité et Scrum": [
          "Comprendre l'Agilité et Scrum"
        ],
        "Le Bootcamp complet de test logiciel : Conception de test logiciel": [
          "Conception de test",
          "C'est quoi une campagne de test ?",
          "exemple d'une campagne de test & cas de test",
          "Comment concevoir des cas de test",
          "Comment concevoir des cas de test (suite)",
          "Exercice de conception de test",
          "Correction de l’exercice de conception de test",
          "Conception de tests : un autre exemple"
        ],
        "Atelier Conception": [
          "Atelier de conception :",
          "Correction Atelier de conception :",
          "Correction Atelier de conception :"
        ],
        "Conception et exécution des tests": [
          "c'est quoi testlink?",
          "Testlink : Installation",
          "Clarification sur installation de Testlink",
          "Autres alternatives des outils de tests",
          "Testlink :Création de projet",
          "C'est quoi un plan de test ?",
          "Testlink :Création de plan de test",
          "Testlink : Création d'un build -Release",
          "Testlink : Création de suite de test - cas de test - les étapes de test",
          "Testlink : Recherche cas de test",
          "Testlink : Keyword",
          "Testlink : TEST SPECIFICATION",
          "Testlink : Gestion des exigences : REQUIREMENT",
          "Testlink : gestion des rôles",
          "Testlink : Gestion des plateforme",
          "Testlink : Milestone",
          "Testlink : Execution de campagne de test",
          "Testlink : Gestion des rapports et métriques de tests"
        ],
        "Revue de test :": [
          "Revue de test : C'est quoi & Pourquoi ?",
          "Revue de test : exercice 1",
          "Revue de test : Correction de l'exercice 1",
          "Revue de test : Partie 2",
          "Revue de test : exercice -Location de voiture",
          "Revue de test : Correction -Location de voiture"
        ],
        "JIRA": [
          "Qu’est-ce que JIRA ?",
          "JIRA : Création d'un compte",
          "Explorer Jira",
          "Création d'un tableau avec des données existantes",
          "remonter les bugs avec jira",
          "Explcation de l'agilité avec Jira :",
          "Jira : information importante :"
        ],
        "Test logiciel : Tester dans un mode agile de A à Z": [
          "Test logiciel : Tester dans un mode agile -Partie 1",
          "Test logiciel : Tester dans un mode agile -Partie 2",
          "Exercice : Création d'une anomalie",
          "Correction exercice :création d'anomalie :",
          "Exemple d’un projet Agile",
          "Question :Qui décide quelles sont les user stories qu'on va automatiser ?",
          "Bonus : Pour avoir plus sur la création des User Stories"
        ]
      },
      "requirements": [
        "Aucune connaissance préalable du domaine n'est requise"
      ],
      "description": "Tout ce dont vous avez besoin pour apprendre les tests de logiciels, le tout combiné dans une seule ressource.\n\n\nL'objectif du cours est de vous fournir toutes les connaissances nécessaires dont vous avez besoin pour décrocher votre  emploi au domaine du test de logiciels ou faire une reconversion , qu'il s'agisse d'un emploi à temps plein ou d'un travail indépendant.\n\n\nThèmes abordés dans le cours :\n\n\n-Bases des tests manuels [Outils utilisés : Google Sheets-Testlink]\n\n\n-Bases des tests agiles [Outils utilisés : Jira]\n\n\n-Test API & Webservice [Outils utilisés : Postman -Soapui]\n\n\n-Questions d'entretien de test manuel\n\n\nCours de test de logiciels : ce cours comprend des tests de logiciels (de base et avancés) + JIRA + Agile + Tests mobiles + Tests de bases de données (SQL) + Bases des tests d'API dans un langage très simple .\n\n\npour tout professionnel souhaitant commencer une carrière dans les tests de logiciels.\n\n\nIl comprendra toutes les sections obligatoires nécessaires pour devenir un parfait testeur de logiciels.\n\n\nIci, vous obtiendrez également des informations de base sur les tests manuels d'applications mobiles\n\n\nCe cours de formation à l'assurance qualité pour les tests de logiciels est conçu de manière à vous présenter les bases des tests de logiciels à des sujets avancés créant un plan de test, un modèle Agile, ainsi qu'une introduction et une familiarité avec les tests d'automatisation et outils de gestion de test JIRA et Postman.\nCouverture des tests manuels :\nVous couvrirez tous les sujets avancés des tests manuels\nDifférents types de tests\nAgile - Modèle Scrum.\nTests fonctionnels et de performance.\nConception de cas de test dans les détails.\nImplémentation de projet en temps réel.\nTester les meilleures pratiques.\nÀ faire et à ne pas faire pour le testeur de logiciels.\nConcepts de test mobile\nCycles de vie des bugs\nJIRA : Pour le suivi des bugs et la gestion des tâches\nConfiguration JIRA pour la pratique\nRapports de bogues et suivi\nGestion des tâches\nCycle de vie des bogues de bout en bout dans JIRA\nComment vérifier les fichiers journaux\nTest d'API à l'aide de Postman\nQu'est-ce que l'API, différents types d'API\nConfigurer le facteur pour les tests de l'API REST\nEnsembles de pratique\nCe cours vous mènera étape par étape du niveau de base au niveau expert, nous couvrons presque tous les aspects requis pour les activités quotidiennes d'assurance qualité et également pour la préparation de l'entretien.",
      "target_audience": [
        "Les personnes qui souhaitent commencer une nouvelle carrière",
        "Les personnes qui veulent apprendre les tests de logiciels Testeurs de logiciels qui souhaitent acquérir une meilleure connaissance dans leur domaine",
        "Les personnes à la recherche d'un emploi à temps partiel ou indépendant"
      ]
    },
    {
      "title": "Complete Selenium TestNG Tutorial For Beginners",
      "url": "https://www.udemy.com/course/testng-tutorial/",
      "bio": "This tutorial covers everything you need to know to work with the TestNG framework",
      "objectives": [
        "In this TestNG Framework Tutorial playlist, you will find a complete step-by-step guide to mastering the TestNG framework.",
        "Learn about TestNG annotations, test execution order, assertions, grouping, parameterization, and much more",
        "How to use it effectively to write robust and reliable automated tests.",
        "How TestNG is used in Selenium?"
      ],
      "course_content": {
        "TestNG Framework Tutorial | What Is TestNG?| Part-I": [
          "Introduction & Course Module",
          "What is TestNG & Core Functions",
          "How to set up TestNG using Maven?"
        ],
        "Annotations In TestNG | Part-II": [
          "What are TestNG Annotations?",
          "Configuration Annotation Demo",
          "Before & After Method Annotations",
          "Before & After Class Annotations",
          "Executing two classes at the same time in TestNG",
          "Before & After Suite Annotations and Group Annotations"
        ],
        "Writing First Test In Selenium With TestNG | Part-III": [
          "Introduction",
          "1st Selenium and TestNG Scenario",
          "2nd Selenium and TestNG Scenario",
          "Execute Both Scenarios Together via Class Level",
          "Priority Method"
        ],
        "What Are Assertions in TestNG | Part-IV": [
          "Introduction and View Assertions via TestNG Library",
          "Create 1st Test Script",
          "Create 2nd Test Script",
          "Demo - Hard Assert",
          "Demo - Soft Assert",
          "Recap"
        ],
        "Parameterization in TestNG | Part-V": [
          "What is the use of parameterization?",
          "How to pass multiple parameters in TestNG? [Part 1]",
          "How to pass multiple parameters in TestNG? [Part 2]",
          "How to pass multiple parameters in TestNG? [Part 3]"
        ],
        "Capturing Screenshot Of Failed Tests | Part-VI": [
          "Walk Through Test Script",
          "Setup The Test",
          "Create Test Script",
          "How To Take A Screenshot of Each Test",
          "How To Take A Screenshot of Only Test Failures"
        ],
        "How To Handle Dynamic Waits In Selenium | Part-VII": [
          "Introduction to Dynamic Wait Statements",
          "Different Selenium Wait Methods",
          "What is Explicit Wait?",
          "What is Fluent Wait?"
        ],
        "Page Object Model | Part-VIII": [
          "What is Implicit Wait?",
          "Create HomePage Object",
          "Create BootstrapProgressBarPage Object",
          "Create BaseTest",
          "Introduction To Page Object Model",
          "Create BasePage",
          "Create ProgressBarTest"
        ],
        "How To Do Parallel Testing In TestNG? | Part-IX": [
          "Set Up & Create Test",
          "Methods - Parallel Testing",
          "Classes Parallel Testing",
          "Tests Parallel Testing",
          "Using threadPoolSize & invocationCount",
          "Data-driven testing with DataProviders Annotation",
          "DataProviders Attribute"
        ],
        "How To Perform Cross Browser Testing? | Part-X": [
          "Create TestNG XML file for Cross Browser Testing",
          "Set Up Online Selenium Grid",
          "View Automation Capabilities Generator",
          "DataProvidersClass Attribute",
          "Test Script Walk Through",
          "Create Test Scripts To Perform Cross Browser Testing",
          "Execute Cross Browser Testing via Online Selenium Grid"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "This TestNG Framework Tutorial is a comprehensive course that covers everything you need to know to master TestNG Framework.\n\n\nIn this course, you will learn all the concepts and features of the TestNG framework with step-by-step tutorials. The course starts with an introduction to the TestNG framework and its advantages. You will also learn how to write and execute basic test cases using TestNG.\n\n\nThe course then dives into advanced concepts such as grouping, parameterization, parallel testing, and parallel execution. You will learn how to implement these concepts using TestNG and how they can help you to write better and more efficient test cases.\nThe course also covers how to generate reports using TestNG and integrate TestNG with other tools such as Jenkins, Selenium WebDriver, and Appium.\n\n\nBy the end of this course, you will have a solid understanding of the TestNG framework and be able to write and execute robust and scalable test cases. You will have hands-on experience with real-world examples and exercises. This course is suitable for beginners and experienced developers who want to learn the TestNG framework from scratch.\n\n\nCourse Highlights:\n- What is TestNG?\n- What are the Annotations used in TestNG?\n- How do you write tests in TestNG?\n- What are Assertions in TestNG?\n- What is Parameterization in TestNG?\n- How do you handle failed test cases in TestNG?\n- How to handle Dynamic Waits in Selenium?\n- What is Page Object Model in TestNG?",
      "target_audience": [
        "Beginner Developer/QA who wants to learn about TestNG"
      ]
    },
    {
      "title": "Selenium WebDriver with C# for Beginners + Live Testing Site",
      "url": "https://www.udemy.com/course/selenium-qa/",
      "bio": "Selenium is the most popular tool to test websites! Join me and thousands of students to learn Selenium Webdriver!",
      "objectives": [],
      "course_content": {
        "Start Here": [
          "Introduction to the course and an answer to \"Why C#?\"",
          "Installing Visual Studio",
          "Getting Started - Setup your environment"
        ],
        "Element Selectors": [
          "Name",
          "ID",
          "Class Name",
          "CSS and X Paths",
          "NoSuchElement Exception",
          "How do you handle NoSuchElement Exception?",
          "How to chose the right selector?",
          "Which selector you should use and why?"
        ],
        "Special Elements": [
          "Text Input Field",
          "Check Box",
          "Radio Button",
          "Drop Down Menu",
          "Alert Box",
          "Special Elements Source Code",
          "Special Elements quick Quizz"
        ],
        "Automation Testing Framework": [
          "What is an Automation Testing Framework?",
          "Bonus Lecture: Learn how to build a Framework"
        ]
      },
      "requirements": [
        "Installed Visual Studio",
        "Have Basic Coding Knowledge - Variables, Simple If statements, Simple For loops",
        "Basic Knowledge in C# (Not a necessity, but it will help you!)"
      ],
      "description": "Selenium is a free automation testing tool for web applications. It is able to work with different browsers like Chrome, Firefox, IE, Opera and simulate human like behavior. Selenium is able to interact with all the different elements in a webpage. It can click on them, input text, extract text and much more. By covering all the different functionalities on your website with Selenium tests, you will be able to quickly catch new and reappearing old bugs. This will save your team time and money.\nSpecially for you, I have prepared a website where you can play around and practice your skills.\nThe website has special elements designed specificly for the course and for you to be able to easily work with them and learn.\nIn this course we will focus on Graphic User Interface and Functionality Testing and we will learn how to work with the various selectors that Selenium offers us to use like:\nName selector\nID Selector\nClass Name selector\nCSS Path selector\nX Path selector\nAfter that we will learn how to work with some special elements like:\nInput text boxes\nCheck boxes\nRadio buttons\nDrop down menus\nJavaScript Alert boxes\nWe will also have a few theory lectures in which I will explain when you should use either of these selectors, how to inspect elements and what is an Automation Testing Framework and why do we need to learn how to create one.",
      "target_audience": [
        "Manual Testers",
        "QA Interns",
        "QA Professionals with no Selenium experience",
        "Freelancers that want to make bugfree websites"
      ]
    },
    {
      "title": "Testes funcionais de aplicações Android com Appium",
      "url": "https://www.udemy.com/course/testes-appium/",
      "bio": "Aprenda a criar testes e executá-los em emuladores, aparelhos celulares reais e em serviços de execução em Nuvem.",
      "objectives": [
        "Configurar todo o ambiente para trabalhar com testes de aplicações Android",
        "Criar um projeto de testes automatizados em JAVA para aplicações Android do ZERO.",
        "Criar testes automatizados utilizando o Appium",
        "Interagir com os principais elementos: EditText, Combo, Botões, dentre outros.",
        "Organizar os códigos tornando-os mais legíveis, reusáveis e fáceis de manter",
        "Entender a forma de localizar elementos na tela e criar xpaths mais robustos",
        "Estratégias para sincronizar o teste com o fluxo da aplicação",
        "Executar os testes na nuvem, utilizando os dispositivos da TestObject"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Conteúdo do curso"
        ],
        "Primeira Execução": [
          "Alterações nas próximas aulas",
          "Montando o ambiente: JAVA + Eclipse",
          "Montando o ambiente: Android",
          "Montando o ambiente: Emulador",
          "Montando o ambiente: Appium",
          "Atenção na próxima aula",
          "Gravando Interações",
          "Atualização dos códigos do curso",
          "Criando projeto JAVA",
          "JUnit",
          "Montando o ambiente: Aparelho Celular"
        ],
        "Elementos Básicos": [
          "Campo de Treinamento Appium",
          "Localizando Elementos",
          "EditText",
          "Combo",
          "Switch / Checkbox",
          "Desafio: Cadastro"
        ],
        "Organização de Código": [
          "Before e After",
          "Driver Centralizado",
          "DSL",
          "Page Objects",
          "Herdando Comportamentos",
          "Reiniciando app",
          "Screenshots ao final dos testes"
        ],
        "Esperas": [
          "Sincronismo dos scripts",
          "Splash"
        ],
        "Mais Elementos": [
          "Alert",
          "Tabs",
          "Accordion",
          "DatePicker",
          "TimePicker"
        ],
        "Ações de toque": [
          "Clicar em uma coordenada específica",
          "SeekBar",
          "Clique Longo",
          "Clique Duplo",
          "Scroll",
          "Swipe",
          "Deixando métodos mais legíveis",
          "Desafio: Swipe List",
          "Drag and Drop"
        ],
        "WebView": [
          "Acertando o ambiente",
          "Interagindo com elementos"
        ],
        "Testando uma aplicação real": [
          "Login",
          "Inserir Conta",
          "Excluir Conta",
          "Validação de inclusão de movimentação",
          "Excluir Movimentação + Saldo"
        ],
        "Execução na nuvem": [
          "TestObject"
        ]
      },
      "requirements": [
        "Você deve ter um conhecimento básico de JAVA"
      ],
      "description": "Seja bem vindo ao curso de Testes funcionais de aplicações Android com Appium.\nNesse curso, irei te guiar passo a passo na criação de testes funcionais automatizados de aplicações Android, podendo executá-los em emulador, dispositivo físico (Aparelho celular) ou na nuvem, através do TestObject. Não se preocupe, caso ainda seja um conceito novo para você, criaremos os testes desde o básico.\nO curso é 100% prático, onde trarei problemas, situações e os erros mais comuns que ocorrem no dia-a-dia, assim poderemos discutir sobre formas de como atuar em cada caso, tentando levantar os prós e contras de cada estratégia disponível. Para isso, foi criado o CTAppium que é uma aplicação nativa que nos permitirá fazer exercícios práticos em cima de todos os assuntos abordados no curso.\nO código de teste é tão importante quanto o código da aplicação, dessa forma, além das ferramentas e boas práticas, serão apresentadas técnicas e padrões que você pode utilizar para deixar o seu código mais enxuto e legível. Sem falar das manutenções dos testes que são tão constantes, pois bem, também tentaremos facilitar as manutenções necessárias, em alguns casos até poderemos reduzir também.\nDurante o curso, criaremos um conjunto de métodos que facilitarão a criação dos testes. Também deixaremos nossos testes com algumas características nativas como:\nScreenshot ao final de cada teste;\nDSL herdada nos testes\nOrganização dos testes com PageObject\nCentralização do driver\nExecução na Nuvem\nMais a frente, no curso, teremos um módulo exclusivo para testar uma aplicação real, trazendo alguns cenários importantes como autenticação e gerenciamento de massa de dados.\nAo final desse curso, você terá uma boa base para desenvolver seus testes de aplicações Android e uma boa base sobre automação de testes funcionais. Vamos começar?",
      "target_audience": [
        "Testadores que estão cansados de executar os mesmos scripts, manualmente, várias e várias vezes",
        "Testadores iniciantes interessados em aprender a automatizar testes funcionais",
        "Testadores que prezam pela qualidade, legibilidade e reúso dos seus códigos de testes",
        "Testadores que já possuem experiência na área podem ver algumas técnicas para deixar os testes mais resilientes a falhas"
      ]
    },
    {
      "title": "Quality Assurance and Analytical Thinking: Fortune 500",
      "url": "https://www.udemy.com/course/quality-assurance-and-analytical-thinking-fortune-500-e/",
      "bio": "Master quality assurance and analytical thinking and coaching practices from Fortune 500 firms taught by top expert",
      "objectives": [
        "Solve typical challenges in quality assurance and analytical thinking and coaching scenarios using Fortune 500 firm best practices",
        "Master emotional and social intelligence research-based approaches to quality assurance and analytical thinking and coaching",
        "Develop a plan with specific next steps to adapt for your toolkit quality assurance and analytical thinking and coaching best practices from Fortune 500 firms",
        "Discover how Fortune 500 firms defeat dangerous judgment errors (cognitive biases) that harm quality assurance & analytical thinking & coaching",
        "Align these strategies with International Coaching Federation Core Competencies for quality assurance and analytical thinking and coaching skills"
      ],
      "course_content": {
        "Quality assurance and analytical thinking: Introduction and textbook packet": [
          "Quality assurance and analytical thinking: Introduction",
          "Quality assurance and analytical thinking: Course textbook packet"
        ],
        "Quality assurance and analytical thinking: Systems of thinking": [
          "Quality assurance and analytical thinking: Systems of thinking"
        ],
        "Quality assurance and analytical thinking: False beliefs about oneself": [
          "Quality assurance and analytical thinking: False beliefs about oneself"
        ],
        "Quality assurance and analytical thinking: False beliefs about others": [
          "Quality assurance and analytical thinking: False beliefs about others"
        ],
        "Quality assurance and analytical thinking: Communicating ethically": [
          "Quality assurance and analytical thinking: Communicating ethically"
        ],
        "Quality assurance and analytical thinking: Making major decisions": [
          "Quality assurance and analytical thinking: Making major decisions"
        ],
        "Quality assurance and analytical thinking: Implementing major decisions": [
          "Quality assurance and analytical thinking: Implementing major decisions"
        ],
        "Quality assurance and analytical thinking: Next steps for lifelong learning": [
          "Quality assurance and analytical thinking: Next steps for lifelong learning"
        ]
      },
      "requirements": [
        "You need to trust best practices from Fortune 500 firms and behavioral science-based findings over outdated advice such as “go with your gut” in order to seize a competitive advantage in quality assurance and analytical thinking and coaching scenarios"
      ],
      "description": "Your quality assurance and analytical thinking and coaching skills will determine whether you thrive in the increasingly-disrupted post-COVID future of work.\n\n\n\n\nYet traditional advice in quality assurance and analytical thinking so often leads to disasters, as revealed by research in behavioral economics, psychology, and cognitive neuroscience. So what are the best practices for Fortune 500 firms to make the right calls on quality assurance and analytical thinking and coaching scenarios?\n\n\n\n\nFortune 500 firms recognize that behavioral science has revealed that our typical approach to quality assurance and analytical thinking skills suffers from systematic dangerous judgment errors called cognitive biases. Fortunately, recent scholarship has revealed effective yet counterintuitive strategies to enable you to defeat these cognitive biases. In this course, you will learn about and address these dangerous judgment errors, while mastering techniques for quality assurance and analytical thinking and coaching drawing on cutting-edge behavioral science and real-world best practices from Fortune 500 companies.\n\n\n\n\nAfter taking this course, you will:\n· Solve typical challenges in quality assurance and analytical thinking and coaching scenarios using Fortune 500 firm best practices\n· Master emotional and social intelligence research-based approaches to quality assurance and analytical thinking and coaching\n· Develop a plan with specific next steps to adapt for your toolkit quality assurance and analytical thinking and coaching best practices from Fortune 500 firms\n· Discover how Fortune 500 firms defeat dangerous judgment errors (cognitive biases) that harm quality assurance & analytical thinking & coaching\n· Align these strategies with International Coaching Federation Core Competencies for quality assurance and analytical thinking and coaching skills\n\n\n\n\nHere’s a recent testimonial from Cheryl Smith, Global Director of Talent Management, Organizational Capabilities, and Diversity at Xerox, a company ranked #415 by Fortune, about the impact of my coaching for her:\n· “I really like your coaching style. You ask meaningful questions without 'leading the witness.' It's a great fit for executives.\"\n\n\n\n\nHere’s a recent testimonial from Leon Vliegen, Owner, FLY Consult, about the impact of this course for him:\n· \"It was a great learning experience and I can apply a lot of the concepts and thinking in my coaching practice and leadership programs that our organization FLY Consult performs for a number of clients. I and we focus strongly on helping people to make mindful and effective decisions. This program has deepened and broadened my knowledge and insight in an excellent way. Dr. Gleb Tsipursky is clearly at the edge of this field of science and practice. I can recommend the program strongly.\"\n\n\nHere's another recent testimonial by Susan Winchester, the Chief Human Resource Officer at Applied Materials, a Fortune 200 high-tech manufacturing company:\n· “Hi, I'm Susan Winchester, and it's my delight and pleasure to tell you a little bit about our experience with Dr. Gleb. He had a big positive impact at Applied Materials. Our leaders and engineers love data-based, research-based insights, which is exactly what he brings. He hit it out of the park, and he used a team led process, which was incredibly engaging. He introduced us to a concept he created called asynchronous brainstorming. It was a process we used with hundreds and hundreds of leaders globally at the same time. We did this during our CEO kickoff session for our strategy work. In a very short amount of time, we were able to get great benefits. I also love the work he's doing to educate leaders around the power and positive benefits of hybrid and virtual working. And one of his techniques that I'm planning to use is what he calls “virtual coworking”, where you and as many coworkers as you'd like create a virtual meeting, no purpose or agenda, but rather just to be working with one another. I highly endorse Dr. Gleb's work with leadership teams.”\n\n\nThis course has received International Coaching Federation (ICF) approval for 12 continuing coaching education (CCE) credits, including 5 core competency credits and 7 resource development credits (Resource Development includes training formerly called Personal Development, Business Development, or Other Skills and Tools).\n\n\n\n\nICF Core Competencies Covered in the Course\nCreating awareness in analytically-minded people of their emotions and situations when their analytical mindset may be causing them problems\nDirect communication with analytically-minded people, balancing hard data and research with than stories and questions\nEstablishing trust and intimacy, through using the kind of evidence that’s convincing to analytically-minded people\nActive listening, to determine whether someone’s learning style is deductive or inductive and targeting their specific information consumption needs\nEstablishing the coaching agreement, focusing on preparing for the almost-inevitable conflicts and addressing emotions\n\n\n\n\nSounds too good to be true? I used these methods successfully at Fortune 500 companies such as Aflac, Applied Materials, Entergy, Honda, IBM, Reckitt, Wells Fargo, and Xerox. Over the last two decades, I coached and trained the leaders at these Fortune 500 companies, as well as at numerous middle-market companies and quickly-growing startups, as the CEO of the boutique future-proofing consultancy Disaster Avoidance Experts.\n\n\n\n\nBesides such real-world, pragmatic expertise, I have a strong academic background as a behavioral scientist studying analytical thinking, coaching, decision making, and emotional and social intelligence. I spent 8 years at the University of North Carolina at Chapel Hill, first getting a PhD and then serving as a lecturer there. Then, I spent 7 years as a professor at the Ohio State University’s Decision Sciences Collaborative and History Department. There, I published dozens of peer-reviewed articles on this topic in high-quality academic journals such as Behavior and Social Issues and Journal of Social and Political Psychology. Thus, this course is thoroughly informed by cutting-edge research.\n\n\n\n\nThis combination of business and science led to my expertise gaining global recognition. I published over 550 articles and gave over 450 interviews for prominent venues, such as Fortune, USA Today, CNBC, Fast Company, CBS News, Business Insider, Inc. Magazine, and Time.\n\n\n\n\nThat's what you can expect in this course: methods used successfully at even the biggest companies, thoroughly informed by cutting-edge research, and featured in top media venues and best-selling books around the globe.\n\n\n\n\nCourse Content and Structure Overview\nThe textbook for this course is my bestseller on analytical thinking and coaching, The Truth-Seeker’s Handbook: A Science-Based Guide.\nThe course is self-paced, consisting of modules which the participants can complete any time they want.\nFor each module, participants in the course will first read the book chapters. Then, participants will answer questions in the book chapters. Each chapter has references for additional readings that participants are invited to check out for additional context on any concepts about which they wish to learn more.\nNext, participants will watch the video for each segment, which uses case studies to apply the content of the readings to real-life coaching scenarios\nAfter each video, the participants should journal for 20-30 minutes about how they can apply the strategies described in the book and video to their coaching\n\n\n\n\nI look forward to welcoming you into the world of evidence-based, science-driven techniques tested in the real world of many Fortune 500 companies and numerous middle-market companies and startups. To ensure that you master quality assurance and analytical and coaching thinking best practices drawn from behavioral science and tested in Fortune 500 companies, register now!",
      "target_audience": [
        "Anyone who wants to learn quality assurance and analytical thinking and coaching skills from Fortune 500 firms will get benefits from this course"
      ]
    },
    {
      "title": "Selenium Basics - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/selenium-basics-step-by-step-for-beginners/",
      "bio": "learn Selenium from scratch",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge on how to use computer will be enough",
        "No special knowledge is required"
      ],
      "description": "In this basic Selenium course we will go very basic, Step by Step and learn Selenium from scratch.\n\nIf you are new to Selenium or want to understand the basics, this course is for you.\nEvery video has notes in description to make it very easy to follow, understand and do hands-on.\n\nWill understand what is Selenium, learn about its components and history and then start using Selenium Web Driver to create test automation scripts.\nThis is going to be easy and fun.\nLET'S GET STARTED",
      "target_audience": [
        "Anyone who wants to learn the basics of Selenium",
        "Anyone who wants to understand Selenium step by step"
      ]
    },
    {
      "title": "Software QA/Testing: Learn Testing with Demonstration",
      "url": "https://www.udemy.com/course/software-qa-testing1/",
      "bio": "QA software testing course that will help you get a strong understanding of Quality Assurance to get the job",
      "objectives": [
        "Students will learn different aspects of software quality assurance in this course",
        "This course deals with a very important aspect of software engineering: quality assurance of software products and services",
        "Students will learn in detail the activities in each phase of the software development lifecycle, as they relate to software quality assurance",
        "We‘ll look at quality assurance processes, some of the major process improvement programs from the quality assurance‘ perspective"
      ],
      "course_content": {
        "Introduction to Software Quality Assurance": [
          "Introduction to Software Quality",
          "Software Defects, their Origins and Removal Techniques",
          "Working with Bug Tracking Tool Jira",
          "Working with Brower Stack",
          "Quiz 01",
          "Quiz 02"
        ],
        "Test Automation": [
          "Test Automation",
          "Quiz # 03"
        ],
        "Software Testing": [
          "Software Testing"
        ]
      },
      "requirements": [
        "Basic Knowledge of Computer and softwares",
        "Good problem solving skills",
        "Documentation skills"
      ],
      "description": "This course Software QA/Testing: Learn Testing with Demonstration will not only teach you about the testing but will show how you can prepare the test cases, test report by using Jira and how you can use the Browser stack for cross-browser testing, How you can test the mobile application and so on. The main goal of this course is to help existing or future QA analysts, testers and leads to build a solid foundation in Quality Assurance and Testing in order to excel in their job or be able to successfully pass the interview and secure the QA Quality Assurance analyst job.\nThe structure of this course is very simple yet comprehensive and powerful and covers all the knowledge necessary and topics for Testing and Quality Assurance.  You'll learn the processes, documents, terminology, and techniques used by QA - a practical course to prepare you to work as a QA team member in the real world. This course deals with a very important aspect of software engineering: quality assurance of software products and services.\nWe need to develop quality software because:\nReduces time to market for new products\nEnhances market share compared to direct competitors\nMinimizes \"Scrap and rework\" expenses\nMinimizes the risk of serious litigation\nMinimizes the risk of serious operating failure and delays\nMinimizes the risk of bankruptcy or business failure, which may be attributed directly to poor quality or poor software quality.\nAs a QA/Testing professionals, quality should be part of our way of doing things, we can improve the software quality by doing quality training to our human resources, so this course is just an effort towards that from my side. Wish you best of luck",
      "target_audience": [
        "Software Quality Assurance Engineers"
      ]
    },
    {
      "title": "Testes de aplicações modernas com Cypress",
      "url": "https://www.udemy.com/course/testes-cypress/",
      "bio": "Automatize testes funcionais (e2e), de API Rest (backend) e de interface gráfica (frontend) com apenas uma ferramenta",
      "objectives": [
        "Criar um projeto de testes automatizados com o Cypress, do Zero",
        "Interagir com os principais elementos HTML",
        "Estratégias para fazer um gerenciamento das massas de dados utilizadas nos testes",
        "Entender as estratégias de localização do Cypress, para alcançar qualquer elemento da página",
        "Entender detalhadamente a forma de sincronização que o Cypress aplica nos scripts",
        "Fazer requisições e assertiva em cima de uma API Rest",
        "Virtualizar chamadas à API Rest, para navegar no frontend de forma mais rápida e controlada"
      ],
      "course_content": {
        "Apresentação": [
          "Apresentação"
        ],
        "Cypress Básico": [
          "Ambiente",
          "Atualizações no curso",
          "Arrow Functions",
          "Promises",
          "Describe / It",
          "Assertivas",
          "Acessar uma página",
          "Localizar e interagir com elemento",
          "Pause e Debug"
        ],
        "Elementos mais comuns": [
          "Textos",
          "Links",
          "Hooks",
          "Campos de Texto",
          "Radio",
          "Checkbox",
          "Combo",
          "Combo Múltiplo"
        ],
        "Sincronismo": [
          "Entendendo a espera do Cypress",
          "Retentativas",
          "Cuidado com o que busca...",
          "Wait e Timeout",
          "Nem todo mundo tem retry",
          "Sincronizando o título",
          "Should Vs. Then"
        ],
        "Helpers": [
          "Wrap",
          "Its",
          "Invoke",
          "Dívida: Reutilizando o título",
          "Dívida: Combos"
        ],
        "Pontos de atenção": [
          "Mocks",
          "Alert",
          "Alert com Stub",
          "Confirm",
          "Prompt",
          "Desafio: Validar mensagens",
          "iFrame",
          "iFrame, parte 2",
          "Popup",
          "Popup via links"
        ],
        "Localizando elementos": [
          "Ordem de busca",
          "Locators",
          "Adicionando plugin",
          "Xpath"
        ],
        "Outras funcionalidades do Cypress": [
          "Fixture",
          "Comandos",
          "Testes dinâmicos",
          "Each",
          "Clock",
          "Tick"
        ],
        "Testes Funcionais de uma aplicação real": [
          "Apresentação dos cenários",
          "Login",
          "Inserir conta",
          "Alterar conta",
          "Organizando locators",
          "Criando comandos",
          "Comandos de conta",
          "Inserir conta repetida",
          "Inserir movimentação",
          "Saldo",
          "Remover movimentação",
          "Gerenciamento de massa"
        ],
        "Testes da API de uma aplicação real": [
          "API Rest",
          "Login",
          "Inserir conta",
          "getToken",
          "Reset",
          "Alterar conta",
          "Inserir conta repetida",
          "Inserir movimentação",
          "Saldo",
          "Remover movimentação",
          "Sobrescrever o request"
        ]
      },
      "requirements": [
        "É recomendado que você tenha um conhecimento básico de Javascript"
      ],
      "description": "Seja muito bem vindo ao curso de Testes de aplicações modernas com Cypress.\nNesse curso, irei te apresentar uma ferramenta relativamente nova e com muito poder para realizar testes automatizados, que é o Cypress. Tão poderosa que vai nos permitir testar uma aplicação mais moderna (desenvolvida em React), em três formas distintas:\nTestes funcionais: Onde vamos acessar a aplicação, automatizando todas as iterações com o browser, sob a visão do usuário. Sempre nos preocupando com o gerenciamento dos dados dos testes, no banco de dados.\nTestes de backend: Com a mesma ferramenta, vamos acessar testar a api rest da aplicação diretamente, entendendo os conceitos deste tipo de API e como utilizar o Cypress para acelerar nossos testes.\nTestes de frontend: Ainda com o Cypress, vamos testar a camada de apresentação (assim como fizemos nos testes funcionais), mas dessa vez, vamos virtualizar todas as requisições ao backend, conseguindo testes muito mais rápidos e podendo focar exclusivamente na interface gráfica.\nO curso é 100% prático, onde trarei problemas, situações e os erros mais comuns que ocorrem no dia-a-dia, assim poderemos discutir sobre formas de como atuar em cada caso, tentando levantar os prós e contras de cada estratégia disponível. Tudo isso, de forma bem paciente, um conceito de cada vez, para maximizar o entendimento dos recursos da ferramenta.\nNão se preocupe, caso ainda seja um conceito novo para você, criaremos os testes desde o básico. Apesar das nossas implementações serem feitas em Javascript, podemos testar qualquer aplicação Web (HTML), independente da linguagem que ela fora criada. Alguns conceitos básicos de javascript também serão apresentados, para nivelar quem ainda não conhece bem as versões mais novas da linguagem.\nFoquei bastante em três pontos principais que são os maiores motivos de problemas nos testes funcionais: Localização de elementos, Sincronismo dos scripts e Massa de dados. Sobre eles, apresentarei alguns cenários e como podemos deixar nossos testes mais resilientes a tais instabilidades.\nNas fases iniciais do curso, usaremos uma página simples (Campo de Treinamento) para podermos forcar nos fundamentos do framework. Mais a frente, teremos três módulos exclusivos para testar uma aplicação real, em React, trazendo alguns cenários importantes como autenticação e gerenciamento de massa de dados. Cada módulo, focado em um tipo de teste, para podermos ver suas diferenças e tirar algumas conclusões.\nAo final desse curso, você terá uma boa base para desenvolver seus testes de forma rápida, estruturada e segura.",
      "target_audience": [
        "Testadores que estão cansados de executar os mesmos scripts, manualmente, várias e várias vezes",
        "Testadores iniciantes interessados em aprender a automatizar testes",
        "Testadores que já possuem experiência na área podem ver algumas técnicas para deixar os testes mais resilientes a falhas",
        "Testadores que querem trazer mais segurança para o backend de suas aplicações",
        "Testadores que querem trazer mais segurança para o frontend de suas aplicações",
        "Testadores buscando opções mais novas de frameworks de testes"
      ]
    },
    {
      "title": "Software Testing avanzado : Lidera las pruebas de tu equipo",
      "url": "https://www.udemy.com/course/software-testing-avanzado-lidera-las-pruebas-de-tu-equipo/",
      "bio": "Construye calidad a nivel Senior QA o Lead QA con JIRA + Zephyr + Jmeter y más! proyecto 100% práctico. (2025)",
      "objectives": [
        "El papel del líder de pruebas en proyectos ágiles",
        "Cómo planificar y organizar pruebas con múltiples equipos y QAs trabajando en el mismo producto",
        "Cómo ayudar a tu equipo a gestionar el proyecto con JIRA",
        "Cómo prevenir defectos a través de Early Testing (pruebas estáticas y BDD)",
        "Cómo implementar una estrategia de pruebas ágil basada en el enfoque shift-left combinado con automatización e integración continua",
        "Diseño de pruebas con técnicas de caja negra aplicadas al proyecto",
        "Diseñar y ejecutar pruebas de rendimiento utilizando JMETER y BlazeMeter",
        "Pruebas ágiles usando exploratory testing",
        "Gestion de todo el ciclo de las pruebas usando ZEPHYR Scale"
      ],
      "course_content": {
        "Introducción": [
          "Recomendaciones para una mejor experiencia",
          "Método de estudio y material de descarga"
        ],
        "Explicación del proyecto y planeación de sprints en JIRA": [
          "Explicación del proyecto a desarrollar- GeekStore",
          "Organización de equipos ágiles",
          "Responsabilidades de un Senior/Test Lead",
          "JIRA: crear cuenta gratis y configurar el proyecto",
          "JIRA: Introducción a opciones generales",
          "JIRA: Creamos las epicas y las historias de usuario",
          "JIRA: Crear equipos y usuarios",
          "Ejercicio: Crea tu propio backlog de GeekStore en tu JIRA"
        ],
        "Early Testing y shift-left": [
          "Pruebas estáticas vs pruebas dinámicas",
          "Pruebas estáticas usando técnica INVEST con ejemplos",
          "Que es BDD y su importancia en early testing",
          "Apliquemos BDD a nuestros criterios de aceptación de nuestro proyecto",
          "Ejercicio: Tu turno de crear escenarios BDD para GeekStore",
          "Quiz de pruebas tempranas"
        ],
        "Implementa una estrategia de pruebas moderna como un Lider de pruebas": [
          "Como definir una estrategia de pruebas moderna( Shift left Testing)",
          "Pirámide de automatizacion",
          "Plan de pruebas ágil con mindmap para GeekStore",
          "JIRA:Iniciemos el sprint , desglocemos tareas de testing y asignacion de trabajo",
          "Gestion de documentación colaborativa con Confluence",
          "Errores comunes que debes evitar en Agile testing",
          "Simulación: Reunión con Senior Dev sobre problemas en desarrollo"
        ],
        "Gestion de ciclo de pruebas con ZEPHYR en JIRA": [
          "ZEPHYR: Instalación de plug-in para la gestión de las pruebas.",
          "ZEPHYR: Crear y clonar test - empecemos a probar!",
          "ZEPHYR: Ejecución de tests y reporte de bugs",
          "ZEPHYR: Gestión de ciclos de pruebas",
          "ZEPHYR: Gestión planes de prueba",
          "ZEPHYR: Gestión de informes de pruebas",
          "Ejercicio: Tu turno de gestionar tus pruebas con Zephyr"
        ],
        "Técnicas avanzadas de BlackBox y Agile testing en el sprint.": [
          "BLACK BOX : Técnica tablas de desicion (ejemplo GeekStore)",
          "BLACK BOX : Técnica partición equivalencias (ejemplo GeekStore)",
          "BLACK BOX : Técnica valores frontera (ejemplo GeekStore)",
          "Ejercicio: Tu turno de diseñar usando pruebas de caja negra",
          "Que es Exploratory testing y sus beneficios",
          "Como hacer Exploratory testing efectivamente",
          "Instalación de plugin y ejemplo de sesion de exploración E2E - GeekStore",
          "Ejercicio: Tu turno de hacer exploratory testing, encuentra todos los bugs!",
          "Practica: Técnicas de pruebas \"Tus Recetas\""
        ],
        "Pruebas de Performance con Jmeter y Blazemeter": [
          "Introducción a las pruebas de performance",
          "Tipos de pruebas de performance",
          "JMETER: Instalación de Java y Jmeter",
          "JMETER: Explicación Interfaz",
          "JMETER: Primer Performance test (Thread Group, HTTP requests y listeners)",
          "JMETER: Tests con multiples páginas, controladores y maejo variables",
          "JMETER: Manejo Assertions",
          "JMETER: Listeners graficos, throughput",
          "JMETER: Manejo de temporizadores",
          "BLAZEMETER: Instalación plugin y grabacion test y exportación Jmeter",
          "BLAZEMETER: Performance testing en la nube",
          "Ejercicio: Tu turno de hacer pruebas de performance",
          "Felicitaciones has culminado el curso!",
          "Bonus Class"
        ]
      },
      "requirements": [
        "Conocimientos básicos de Scrum",
        "Experiencia nivel básico/intermedio en Software Testing"
      ],
      "description": "¿Eres un QA que busca avanzar en su carrera y convertirse en Senior o líder de pruebas ? o ¿deseas incrementar tu expertise y conocer nuevas herramientas para futuros trabajos? Si es así, ¡este el curso de Testing Avanzado es perfecto para ti!\nEste MasterClass 100% práctico está diseñado para QAs con experiencia que desean llevar sus habilidades al siguiente nivel y asumir roles de liderazgo del las pruebas dentro del equipo Scrum.\nLo que hace este curso distinto a los demás, es la manera como se conecta la parte teórica con la práctica alrededor del mismo proyecto, vamos a trabajar sobre un sitio de e-commerce en un ambiente ágil, el sitio tiene 19 bugs escondidos en todas sus funcionalidades.\nTe enseñaré como destacarte en los proyectos y guiar a tu quipo en la construcción de calidad  como todo un profesional, algunos de los temas que vas a aprender para lograrlo son:\n• Planeación de estrategia como un líder de pruebas\n• Organización de testing con equipos ágiles trabajando en paralelo en el mismo producto.\n• Gestión del proyecto Scrum usando JIRA\n• Prevención de defectos mediante Early Testing (pruebas estáticas y BDD)\n• Estrategia de pruebas ágil basada en el enfoque shift-left, automation y CI.\n• Pruebas de Blackbox con Zephyr Scale y ejecución usando exploratory testing.\n• Además como si fuera poco, aprende a diseñar y ejecutar pruebas de performance usando Jmeter y BlazeMeter\nContenido y descripción general\nLos 6 módulos con 52 clases han sido creadas sobre metodologías y herramientas con alta demanda por el mercado actual de las pruebas a nivel mundial al 2025.\nEl curso está diseñado especialmente como un laboratorio donde vas a poder aprender con un proyecto de desarrollo de un  comercio electrónico todas las etapas del ciclo de vida del software Testing en un ambiente ágil 100% práctico, con herramientas que te facilitarán muchísimo la vida.\nAdemás de las clases demostrativas, también hemos creado, recursos descargables, exámenes cortos y ejercicios para que en tu tiempo libre practiques lo aprendido.\nAl finalizar el curso, tendras la capacidad de guiar y liderar la calidad del software desarrollado por uno o varios equipos Scrum en simultáneo con varios QAs cubriendo todos los aspectos funcionales y no funcionales de tu producto.\n¡No esperes más! ¡Inscríbete hoy y descubre todo lo que este programa tiene para ofrecer!",
      "target_audience": [
        "Analistas de pruebas, Testers / QAs Intermedios que quieran ganar conocimiento para aplicar a Senior",
        "Analistas de pruebas, Testers / QAs que quieran aspirar a ser Líderes de prueba",
        "Analistas de pruebas, Testers / QAs que quieran introducirse en las Pruebas de Performance",
        "Analistas (BAs), POs o programadores que deseen aprender a apoyar en la construcción de calidad del producto",
        "Cualquier entusiasta de las tecnologías de información que deseen profundizar en Software Testing"
      ]
    },
    {
      "title": "Manual Testing with practical examples in live applications",
      "url": "https://www.udemy.com/course/manual-testing-with-practical-examples-in-live-applications/",
      "bio": "Easy way to become a software engineer/testing engineer with 100% working experience knowledge and job satisfactory",
      "objectives": [
        "Understanding fundamental concepts in software testing, including software testing objectives, processes, test strategies and testing techniques",
        "Understanding the software testing processes and manual testing processes like Unit testing, Integration testing, system testing, re-testing, regression testing",
        "Learn to plan a testing projects, design test cases and data, conduct testing operations, manage defects and generate test report.",
        "Conduct UI Testing, Usability Testing, Load Testing, Performance Testing, Security Testing and Compatibility Testing etc.,",
        "Defect Reporting process and Defect management process.",
        "Implementing Testing Process using tools like ALM(Quality Center)"
      ],
      "course_content": {
        "Course content": [
          "Topics"
        ],
        "SDLC": [
          "Software development life cycle with brief explanation - 1",
          "Software development life cycle with brief explanation - 2"
        ],
        "Environment types": [
          "Environment types introduction and WBT",
          "Environment types - WBT, BBT and UAT"
        ],
        "Product Vs project, Entry and Exit criteria, objective of software testing": [
          "Product Vs project, Entry and Exit criteria, objective of software testing",
          "Software testing type explanation - High level"
        ],
        "Test Management Tool Practice and Software Testing Complete Notes (Download)": [
          "Test management tool"
        ]
      },
      "requirements": [
        "There is no technical and programming knowledge required for this course, minimal knowledge on software applications is enough."
      ],
      "description": "About the Course\n\n\nManual Testing course will cover software testing concepts, SDLC, STLC, Agile Testing, Effective Testing methods, QA Process , TestCase writing, TestCase Execution, Defect Reporting , Defect Management and Test Management tools like ALM/Quality Center.\n\n\nCourse Objectives\n\n\nAfter the completion of the Manual Testing course, you will be able to:\n\n\n· Understand fundamental concepts in software testing, including software testing objectives, processes, test strategies and testing techniques.\n\n\n· Understand the software testing processes and manual testing processes like Unit testing, Integration testing, system testing, re-testing, regression testing and system integration testing and UAT etc.,\n\n\n· Learn to plan a testing projects, design test cases and data, conduct testing operations, manage defects and generate test report.\n\n\n· Learn to conduct UI Testing, Usability Testing, Load Testing, Performance Testing, Security Testing and Compatibility Testing etc.,\n\n\n· Learn Defect Reporting process and Defect management process.\n\n\n· Learn implementing Testing Process using tools like ALM(Quality Center) and JIRA.\n\n\n\n\nWho can join this course?\n\n\nThis is a foundation course for any Fresh Graduates, Students and working professionals who want to learn and gain knowledge on software testing.\n\n\nPre-requisites\n\n\nThere is no technical and no programming knowledge required for this course, minimal knowledge on software applications is enough.\n\n\nProject Work\n\n\nTowards the end of the Course, you will learn working on a live project.\n\n\nCurriculum\n\n\nSoftware Testing Overview\n\n\n· Introduction to Software Testing\n\n\n· Objectives of Testing\n\n\n· Software Development Process\n\n\n· Project vs. Product\n\n\n· Error / Fault / Failure\n\n\n· Why Software has defects?\n\n\n· Most common defects\n\n\n· Cost of fixing defects\n\n\n· Testing then … and Testing now…\n\n\n· What is Verification & Validation\n\n\n· Difference between QA & QC\n\n\n· Role of a Tester\n\n\n\n\nPrinciples of Testing\n\n\n· Early Testing\n\n\n· Exhaustive Testing Impossible\n\n\n· Defect Clustering\n\n\n· Pesticide Paradox\n\n\n· Testing is Context Dependant\n\n\n· Testing Should Show Presence of Defects\n\n\n· Absence of Error is a Fallacy\n\n\nSoftware Development Life Cycle (SDLC)\n\n\n· SDLC Phases\n\n\n· SDLC Models\n\n\no Waterfall Model o V Mode\n\n\no Agile Model\n\n\n\n\nSoftware Testing Methodologies\n\n\n· Static Testing\n\n\n· White Box Testing\n\n\n· Black Box Testing\n\n\n· Gray Box Testing\n\n\nStatic Testing Techniques\n\n\n· Reviews\n\n\n· Types of Reviews\n\n\n· Inspections & Audits\n\n\n· Walkthroughs\n\n\nWhite Box Testing\n\n\n\n\n· Unit Testing\n\n\n· Integration Testing\n\n\nBlack Box Testing\n\n\n· System Testing\n\n\n· User Acceptance Testing(UAT) o Alpha Testing\n\n\no Beta Testing\n\n\nSystem Testing and Types of System Testing\n\n\n· Smoke / Sanity Testing\n\n\n· Formal Testing\n\n\n· Priority Based/Risk Based Testing\n\n\n· Ad-hoc Testing\n\n\n· Re-Testing and Regression Testing\n\n\n· End-to-End Testing\n\n\n· Exploratory Testing\n\n\n· Benchmark Testing\n\n\n· Monkey Testing\n\n\n· UI Testing\n\n\n· Usability Testing\n\n\n· Security Testing\n\n\n· Performance Testing\n\n\n· Load Testing\n\n\n· Stress Testing\n\n\n· Compatibility Testing\n\n\n· Installation Testing\n\n\n· Globalization Testing\n\n\n· Localization Testing\n\n\n· Recovery Testing\n\n\nSoftware Testing Life Cycle (STLC)\n\n\n· Test Planning\n\n\no Test Strategy\n\n\no Test Plan\n\n\n· Test Analysis\n\n\no Analyzing Functional Requirements\n\n\no Preparing Requirement Clarification\n\n\n· Test Preparation\n\n\no Identifying & documenting Test Scenarios\n\n\no Test Case Design Techniques\n§ ECP\n\n\n§ BVA\n\n\n§ Decision Table Testing\n\n\n§ State Transition Testing\n\n\n§ Use case Testing\n\n\n\n\no Preparing Test Cases\n\n\no Preparing Test Data\n\n\no Preparing RTM\n\n\n· Test Execution\n\n\no Build Release Process\n\n\no Executing Testcases\n\n\n· Defect / Bug Life Cycle\n\n\no Defect Management\n\n\no What is defect?\n\n\no Defect Classification\n\n\no Defect Severity & Defect Priority\n\n\no Defect Report Template\n\n\n· Defect Reporting & Defect Tracking\n\n\n§ Test Closure\n\n\n§ Criteria for Test Closure o Status Reports (Daily and Weekly)\n\n\n· Test Summary Reports\n\n\n· Agile Testing\n\n\n· Overview of DataBase Testing\n\n\nALM (Quality Center)\n\n\nOverview of Test Management\n\n\nQC Tool Architecture\n\n\nQC Site Administration\n\n\n\n\n· Creating Domain\n\n\n· Creating Project\n\n\n· Creating Users\n\n\n· Mapping User to QC Project\n\n\nQC User Modules\n\n\n· Defining Test Requirements\n\n\n· Writing TestCases in QC\n\n\n· Mapping TestCases to Requirements\n\n\n· Exporting TestCases from Excel to QC\n\n\n· Create Test Sets\n\n\n· Executing TestCases\n\n\n· Defect Reporting & Defect Tracking\n\n\n· Analyzing Reports & Graphs\n\n\nThis course offers your to understand software development life process and testing process from scratch, once you complete this course i am sure you'll become professional software tester in few hours. lets start watching the sessions and enjoy the course.\n\n\nAlso providing life time support, if your looking for job/on job support, i do support for your expectations.\n\n\nMy main agenda for this course - Every one should get a job in IT industry, who ever attending and completed my courses.\n\n\npre-condition : make sure you should watch the sessions in a sequence order with out missing even single session in between, this will give you more ease of understanding about concepts and experiences knowledge.",
      "target_audience": [
        "Any Fresh Graduates, Students and working professionals who want to learn and gain knowledge on software testing"
      ]
    },
    {
      "title": "TEST LOGICIEL : DEVENIR UN TESTEUR LOGICIEL",
      "url": "https://www.udemy.com/course/test-logiciel-devenir-un-testeur-logiciel/",
      "bio": "Formation Complète TEST LOGICIEL : Maîtrisez Jira, Xray, API, Automatisation, Tests de Performance et Plus pour Devenir",
      "objectives": [
        "Le domaine du test logiciel",
        "Réussir un entretien pour un poste de testeur logiciel ( software testing)",
        "Création des anomalies avec jira",
        "création des cas de test",
        "Tester avec des API : POSTMAN et SOAPUI",
        "Préparation et planification de la recette",
        "BONUS : automatisation des tests avec KATALON",
        "Astuces & conseils pour être recruté en tant que testeur logiciel"
      ],
      "course_content": {},
      "requirements": [
        "NON"
      ],
      "description": "Devenez un Testeur Logiciel Expert en un Temps Record !\nCette formation 100% pratique est conçue pour vous permettre de maîtriser les outils et techniques essentiels du test logiciel. Apprenez à utiliser Jira, Xray, Postman, SoapUI, et bien d'autres outils professionnels pour effectuer des tests manuels et automatisés de manière efficace. Vous explorerez les fondements de l’automatisation des tests, des stratégies avancées pour les tests de performance et des techniques permettant d’identifier rapidement les bugs et de les résoudre. De plus, vous comprendrez les méthodes d’intégration continue (CI) pour automatiser les tests dans un environnement agile.\nQue vous soyez débutant ou souhaitiez perfectionner vos compétences, cette formation est idéale pour développer votre expertise dans le domaine du test logiciel. Grâce à un contenu structuré, des exercices concrets, des études de cas réels et des démonstrations en direct, vous serez prêt à intervenir sur des projets logiciels de grande envergure. Vous apprendrez à concevoir, exécuter et suivre des plans de tests tout en garantissant des applications de qualité optimale.\nDevenez un acteur clé de la qualité logicielle, boostez votre carrière et ouvrez la voie à des opportunités dans un secteur en forte demande ! Rejoignez-nous pour transformer vos compétences et prendre une longueur d'avance dans le monde du test logiciel.",
      "target_audience": [
        "toute personne intéressée par la génie logiciel , test et recette",
        "Développeurs - Informaticiens tout métier souhaitant se reconvertir dans les métiers du test"
      ]
    },
    {
      "title": "Selenium Webdriver Automate 10 commercial Sites - Basics C1",
      "url": "https://www.udemy.com/course/selenium-webdriver-learn-by-automating-10-commercial-sites/",
      "bio": "Course 1of 2 - LEARN & EARN - Selenium Webdriver with Java essentials for Complete Beginners",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "If you have previous experience of manual testing good enough, this course will allow you to enhance Manual as well as automaton testing Skills. Lectures are recorded in order to explain contents step by step throughout the course. We will provide you in house developed real life industrial websites and web forms for practice You will have every possible resource available for download."
      ],
      "description": "Learning online has always been a challenge when it comes to Information Technology if you are a beginner. We have designed the course that will teach you automation step by step with having in mind that you do not have any previous experience. We fully understand how competitive the market is and how important it is to keep yourself up to date with today's cutting edge technology. There are NO pre-requisites for this course. While doing this course you will be getting a core knowledge of testing both manual and Automation.\nIn this course you will be getting full support (Course Material in Downloadable format, Online support \"Forum/email/Skype etc.) and most importantly you will be getting independent platform \"Our Own Developed On-line Practice Exercises Platform\".\nThis course is structured bearing in mind that how important it is to have your confidence level boosted. It is our promise that you will enjoy every single minute of videos. Above all its FREE for all.\n\"OUR PROMISE : We promise that you will Start it as a BEGINNER and complete this course as a PROFESSIONAL\"\nPlease Note: This course is going to cover only BASICS that will help you in getting into more in depth courses with confidence.",
      "target_audience": [
        "This course is designed for manual testers in IT Industry who wants to step into automation testing."
      ]
    },
    {
      "title": "Learn PyTest from Scratch",
      "url": "https://www.udemy.com/course/learn-pytest-from-scratch/",
      "bio": "Learn how to create and execute automation tests in pytest in the easiest way possible.",
      "objectives": [
        "How to create and execute Automation test suite in pytest",
        "How to pick some/all/fixed number of tests to execute",
        "Learn about fixtures and how to use them in your tests",
        "Learn about markers, different types of makers",
        "How to run tests in parallel to reduce overall execution time",
        "How to generate pytest result report(html, jUnit-xml)"
      ],
      "course_content": {
        "Let`s learn the basics first": [
          "What is testing ? Automation ? and Framework ?"
        ],
        "PyTest Environment Setup on your System": [
          "Introduction to PyTest",
          "Links to install required stuff",
          "Python Installation",
          "PIP Installation",
          "PyTest Installation",
          "PyCharm Installation",
          "Future Updates"
        ],
        "Create and Run your first test": [
          "Let`s write your first test",
          "Code Walkthrough of writing and running your first test",
          "Exercise - 01",
          "Code Walkthrough of Exercise - 01"
        ],
        "How does Pytest identifies test files and test functions ?": [
          "Discovery of a test in PyTest",
          "Exercise - 02",
          "Code Walkthrough of Exercise - 02",
          "Discovery of a test in pytest"
        ],
        "Selecting Tests to Execute": [
          "Run all the tests from files and folders/subfolders",
          "Run tests from a specific file only",
          "Run selective tests by matching substring",
          "Extra on running selective tests by matching substring",
          "Run selective tests by applied marker",
          "Substring Vs Marker: Which one should we use ?",
          "Exercise - 03",
          "Code Walkthrough of Exercise - 03"
        ],
        "Fixtures": [
          "Fixtures",
          "Code walkthrough of a fixture",
          "How to access fixture across all files ? conftest.py",
          "Excercise - 04",
          "Code Walkthrough of Exercise - 04 (Scope & Autouse)",
          "Fixture as Setup and Cleanup",
          "Errors in Test Setup",
          "Fixtures"
        ],
        "Parameterize, skip and Xfail Test": [
          "Parameterized Test",
          "Skip Test",
          "Xfail Test",
          "Exercise - 05",
          "Code Walkthrough of Exercise - 05"
        ],
        "Running tests in Parallel": [
          "How to run tests in parallel using xdist pytest-plugin",
          "Code Walkthrough of xdist example",
          "Excercise - 06",
          "Code Walkthrough of Exercise - 06"
        ],
        "How to limit maximum test failures": [
          "maxfail in pytest",
          "Exercise - 07",
          "Code Walkthrough of Exercise - 07"
        ],
        "pytest.ini configuration file": [
          "How to inform pytest to pick other files to execute by pytest.ini",
          "Code walkthrough of pytest.ini file"
        ]
      },
      "requirements": [
        "You should have a basic understanding of the Python Programming Language.",
        "A system with an internet connection to install required stuff",
        "Desire to learn"
      ],
      "description": "Welcome to my first course,  \"Learn PyTest from scratch\"  course, a PyTest test framework that is a hot favorite choice of a Python developer.\n\nThis course is created in a way that even a newbie can follow. Whether you have never learned the PyTest framework or you know the basics but don`t know about the advanced topics, this course is for you. In this course, I will teach you the PyTest framework in the easiest way possible.\n\nTesting is a crucial thing, the framework provides an easy way to adapt and use it to implement tests, PyTest is the most widely used, and as it is based on python programming language, which doesn`t need any introduction. Learning PyTest becomes very easy as of the simple syntax of python.\n\nThis course will teach you PyTest in a practical way, with every lecture coming with a full code walkthrough and a screencast presentation of a topic. Each section has an exercise to test your knowledge of what you will be gaining from the particular section.\n\nI will start by helping you get installed needed things on your system, which include Python, PyTest, pip, and, PyCharm IDE.\n\n\nI have covered a wide variety of topics, including:\nInstalling Python, PyTest, pip, PyCharm\nRunning a test in PyTest\nAssert in PyTest\nUnderstanding the result of the test\nDiscovery of a test\nPyTest way of identifying test files and test functions\nFixtures\nMarkers\nConfig files\nPytest.ini file\nCommand-line option\nRunning tests in parallel\nHow to limit max test failures\nand much more!\n\n\nYou will get lifetime access to all the lectures plus the corresponding presentation slides of the lectures!\n\n\nSo what are you waiting for? Learn PyTest with me most easily and practically and boost your career.",
      "target_audience": [
        "Anyone who wants to learn about running automation and test",
        "Developer who wants to learn PyTest for creating and running Python Tests",
        "Python developer who wants to add pytest in his/her skillset",
        "Software test Engineers",
        "QA Engineers"
      ]
    },
    {
      "title": "JMeter | Short Course | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/jmeter-2021-short-course-step-by-step-for-beginners/",
      "bio": "learn JMeter Step by Step from scratch with demo and examples",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "***** No prior specialized knowledge is required *****",
        "Every lecture will start from scratch and you do not need any prior knowledge",
        "There will be real world examples and demo"
      ],
      "description": "Welcome to the ultimate beginner's guide to JMeter! This course is specifically designed for those who are new to JMeter and want to learn how to use it for performance testing and automation.\nWith step-by-step video tutorials, you'll learn JMeter from scratch, starting with the basics and progressing to advanced topics. No prior knowledge of JMeter, performance testing, or automation is required.\n\n\nWhat You Will Learn:\nIntroduction to JMeter: Understand what JMeter is and its significance in performance testing.\nSetting Up JMeter: Learn how to download and set up JMeter on Windows, Mac, and Linux.\nJMeter GUI Overview: Familiarize yourself with the JMeter graphical user interface.\nCreating Tests in JMeter: Discover how to create tests, including listeners, assertions, and config elements.\nRecording and Data-Driven Testing: Learn how to record tests and use data-driven testing with CSV files.\n\n\nCourse Highlights:\nHands-On Learning: Each lecture includes practical examples and hands-on exercises to help you gain real-world experience.\nIn-Depth Feature Understanding: By the end of this course, you'll have a thorough understanding of all JMeter features and how to apply them in your projects.\nNo Prior Knowledge Required: This course starts from the basics, so you don't need any prior experience with JMeter, performance testing, or automation\n\n\n\n\nWho This Course Is For:\nAnyone who wants to learn JMeter from scratch.\nBeginners of all levels who want to master JMeter.\nUsers of Windows or Mac operating systems who want to learn JMeter.\n\n\nWhat to Expect:\nPractical examples and hands-on exercises to help you gain experience with JMeter projects.\nTips and tricks to get the most out of JMeter.\nA comprehensive understanding of JMeter features and how to apply them in real-world scenarios.\nLet's get started on your journey to mastering JMeter!\n\n\nNever Stop Learning\nRaghav",
      "target_audience": [
        "Anyone who wants to learn JMeter from scratch",
        "Beginners on JMeter"
      ]
    },
    {
      "title": "Automation Design Blueprint-Selenium webdriver,Java,Cucumber",
      "url": "https://www.udemy.com/course/cucumber-with-java-from-scratch-to-complete-framework/",
      "bio": "Cucumber framework with BDD with selenium webdriver and Java from scratch to expert - LIVE APP testing",
      "objectives": [
        "***By the end of this course students will have complete hand on to create powerful Cucumber BDD framework from scratch",
        "Complete JAVA OOPS concept required for Automation testing, and No need to refer any other java tutorials",
        "Integrate selenium with Java.",
        "Create maven project and download dependency from maven repository.",
        "Multi browser testing with the same script.",
        "Find elements on web page and different actions which can be performed on the web element",
        "Students will learn Cucumber BDD framework from scratch level to the advanced level using Java.",
        "Different concepts of cucumber framework",
        "Student will gain expert level knowledge in cucumber Automation.",
        "Ability to develop advance cucumber framework from scratch.",
        "Students will be able to create data driven framework from scratch.",
        "Jenkins integration with cucumber framework",
        "GIT and GITHUB integration with cucumber framework"
      ],
      "course_content": {},
      "requirements": [
        "No, there is no need to have any knowledge of JAVA or cucumber, you will learn everything from scratch",
        "No need to have any prior knowledge of selenium or Automation technology",
        "Laptop and Internet connection is required"
      ],
      "description": "Description:\nCucumber is one of the most powerful frameworks available in the market for Test Automation which requires minimum/No programming knowkedge.\nThis course will guide you to create Robust test automation framework using concepts of Behaviour driven development(BDD) and will focus on the pinpoint concepts rather than beating around the bush\nAfter the end of the course, you will be able to create a Robust cucumber framework and will be able able to take your career to the next level in your organisation.\nCourse content includes\nIntroduction to Selenium and JAVA\nInstallation of JAVA on Windows operating system.\nCreating Maven Project and simple project\nCross-browser configuration and Execution\nElement locator strategies(ID,Name, LinkText, partial link text, Tagname, classname, XPath, cssSeclector)\nDifferent wait statements\nWhat is cucumber?\nCucumber BDD approach\nGherkin syntaxes\nRules in defining Cucumber feature file\nCucumber Automation terminologies\nData-driven testing with Cucumber\nDataTable feature and its importance\nRegular expression for developing reusable components\nParameterizing tests with Example keyword\nCucumber Hooks and Tagging features\nSmart usage of combining hooks and tags together\nJunit Test Runner importance with cucumber\nCucumber options Attributes options\nGenerating reports for cucumber tests\nIntegrating cucumber tests with Maven\nScheduling tests from Jenkins for Continous Integration",
      "target_audience": [
        "Manual testers who want to make career in Automation testing",
        "Students who wish to make there career in Automation testing",
        "Begineer Automation developer who want to learn new technologies in Automation",
        "Selenium Automation developers who want to learn BDD framework",
        "Anyone that has an interest in automation testing and wants to gain knowledge in this area.",
        "Automation engineers who wants to learn latest Automation trend",
        "Anyone who want to learn the skill to develop Cucumber Automation framework",
        "Anyone who have the Basic idea of the Cucumber framework but want to become professional in this cucumber framework"
      ]
    },
    {
      "title": "Exam Preparation: ISTQB Tester Security Test Engineer",
      "url": "https://www.udemy.com/course/exam-preparation-istqb-tester-security-test-engineer/",
      "bio": "Comprehensive Exam Preparation for Tester Security Test Engineer: Mastering Key Techniques and Tools",
      "objectives": [
        "Fundamental Security Concepts",
        "Security Testing Techniques",
        "Comprehensive Security Test Process",
        "Standards and Best Practices",
        "Organizational and SDLC Context",
        "Risk Analysis and Vulnerability Management",
        "Integration with ISMS",
        "Effective Test Reporting",
        "Tool Selection and Usage",
        "ISTQB Exam Preparation"
      ],
      "course_content": {
        "Introduction": [
          "About instructor"
        ],
        "Security Paradigms": [
          "Assets and Their Corresponding Protection Level",
          "Information Sensitivity and Security Testing",
          "Security Audits and Security Testing",
          "What is Zero Trust?",
          "Zero Trust concept in Security Testing",
          "The concept of OSS and its impacts on security testing"
        ],
        "Security Test Techniques": [
          "Black-Box, White-Box and Grey-Box Security Testing",
          "Static and Dynamic Security Testing",
          "Applying Security Testing",
          "Addressing Security Risks in Test Design",
          "Recertification testing and reconciliation testing",
          "Testing Identification, Authentication and Authorization",
          "Encryption",
          "Testing protective technologies"
        ],
        "The Security Test Process": [
          "Security Test Process",
          "The Security Test Environment",
          "Designing Security Tests",
          "Security Test Design at Component Test Level",
          "Security Test Design at Component Integration Level",
          "System Testing and Acceptance Testing"
        ],
        "Standards and Best Practices": [
          "Standards",
          "Industry Standards for Security Testing",
          "Mandatory Application",
          "Voluntary Application",
          "Test Oracles Extracted from Standards and Best Practices",
          "Pros and Cons of Leveraging Standards and Best Practices"
        ],
        "Adjusting To the Organizational Context": [
          "The Impact of Organizational Structures in the Context of Security Testing",
          "The impact of regulations on security regulations",
          "Common Attack Scenarios",
          "Common Approach of a Hacker",
          "Incident response and post incident analysis"
        ],
        "Adjusting to Software Development Lifecycle Models": [
          "The Effects from Different Software Development Models on Security Testing",
          "Sequential Development Models",
          "Agile Development Lifecycle Models",
          "The DevOps Approach",
          "Security Regression Testing and Confirmation Testing"
        ],
        "Security Testing as Part of an Information Security Management System": [
          "Acceptance Criteria for Security Testing",
          "Input for an Information Security Management System",
          "Improving an ISMS by Adjusted Security Testing",
          "Improving Holistic View of an ISMS",
          "Improving Measurability Within an ISMS"
        ],
        "Reporting Test Results": [
          "Security Test Reporting",
          "Identifying and Analyzing Vulnerabilities",
          "Hide Vulnerability",
          "Avoid Vulnerability"
        ],
        "Security Test Tools": [
          "Categorization of Security Test Tools",
          "White-box Security Test Tools",
          "Black-box Security Test Tools",
          "Grey-box Security Test Tools",
          "Static Security Test Tools",
          "Dynamic Security Test Tools",
          "Considerations for Selecting Tools",
          "Understand the Usage and Concepts of Static Security Test Tools",
          "Understand the Usage and Concepts of Dynamic Test Tools"
        ]
      },
      "requirements": [
        "Basic Software Testing Knowledge",
        "Willingness to Learn and Adapt"
      ],
      "description": "Welcome to the \"Exam Preparation: ISTQB Tester Security Test Engineer\" Course!\n\nThis course is your ultimate guide to mastering the concepts, techniques, and responsibilities required to excel in security testing, specifically designed to help you prepare for the Tester Security Test Engineer certification exam.\n\nWhether you’re an experienced tester seeking to deepen your expertise in security testing, or a QA professional aiming to broaden your skill set with cutting-edge security practices, this course provides a comprehensive, syllabus-based approach that will empower you to pass the exam with confidence.\n\n\n\n\nWhat You’ll Learn:\n\n\nSecurity Paradigms:\nUnderstand the foundational principles of information security, including confidentiality, integrity, and availability, and learn how to determine the appropriate protection levels for various assets.\nSecurity Test Techniques:\nMaster a wide array of testing techniques such as black-box, white-box, and grey-box testing, along with static and dynamic testing methods. Gain insights into risk-based testing, test design for vulnerabilities, and methods for addressing security risks.\nThe Security Test Process:\nDelve into the complete cycle of security testing—from planning and test environment setup to component and system testing, and finally, acceptance testing. Learn how to integrate security testing seamlessly into the overall development process.\nStandards and Best Practices:\nExplore the role of industry standards (like ISO 27000) and best practices in shaping security testing strategies. Learn how to leverage these guidelines to enhance your testing efforts and ensure robust risk mitigation.\nOrganizational Context & SDLC Models:\nAnalyze how organizational structures and various software development models (Sequential, Agile, DevOps) impact security testing. Understand how to adapt your strategies to different environments and project lifecycles.\nReporting & Continuous Improvement:\nDiscover effective methods for documenting and reporting your security test results, and learn how to use this data as a basis for continuous improvement within an Information Security Management System (ISMS).\nTools and Practical Applications:\nGet acquainted with a broad range of security test tools, including static, dynamic, white-box, black-box, and grey-box tools. Learn to select the right tools for the job and build a tailored toolkit that suits your specific domain.\nSample Exam Preparation:\nTest your knowledge with practice exam questions designed to simulate the real Tester Security Test Engineer certification exam, giving you the confidence and experience you need to succeed.\n\n\nWho This Course Is For:\n\n\nAspiring Security Test Engineers:\nIndividuals preparing for the Tester Security Test Engineer certification who need a structured, in-depth approach to study and practice.\nQA Professionals and Testers:\nTesters who want to expand their expertise into security testing, enhance their analytical skills, and broaden their career opportunities in a high-demand field.\nSecurity Practitioners:\nThose looking to deepen their understanding of security testing methodologies, risk assessment, and the integration of security practices into the software development lifecycle.\n\n\nBy the end of this course, you will have a thorough understanding of both the theoretical and practical aspects of security testing. You’ll be well-prepared not only to pass the Tester Security Test Engineer certification exam but also to apply these skills in real-world scenarios, ensuring robust security for the systems you work with.\n\nLet’s begin your journey toward becoming a Certified Tester Security Test Engineer!",
      "target_audience": [
        "Certification Candidates",
        "QA Professionals and Testers",
        "IT and Security Professionals",
        "Career Advancers"
      ]
    },
    {
      "title": "Selenium with C# - A Complete End to End Course.",
      "url": "https://www.udemy.com/course/selenium-with-csharp-a-complete-end-to-end-course/",
      "bio": "Learn CSharp Language and Selenium Webdriver",
      "objectives": [
        "They will be able effectively test web based application using Selenium with C#"
      ],
      "course_content": {
        "Introduction": [
          "Fast Track Revision of Selenium IDE"
        ],
        "Learn C#": [
          "Setting Visual Studio Community Edition",
          "Data Types in C#",
          "Operators, Conditional statements, and Loops",
          "Strings and Arrays",
          "Arrays, Dictionary, Regex, File Handling and Exceptions",
          "Object Oriented Programming"
        ],
        "Learn Selenium with C#": [
          "Introduction to Webdriver functions, Handling different Elements",
          "Running Tests on Chrome, FF and IE",
          "Form, Webtable, Dropdown and Alerts",
          "Page Object Model and Page Factory",
          "Talking to MySQL, and NUnitTest",
          "Logs Generation, Excel Handling and Screenshots",
          "Hybrid Framework"
        ]
      },
      "requirements": [
        "Basics of Manual Testing"
      ],
      "description": "This course help you to learn csharp and selenium webdriver, and empowers you to apply knowledge of functional testing to test the web applications through automation. It uses a live web application to teach giving enough time in between to practice. All exercises done are provided. And ends with implementing selenium hybrid framework",
      "target_audience": [
        "Anyone who is interested to learn Selenium with C#"
      ]
    },
    {
      "title": "Free Text To Speech Software with Multiple Voices",
      "url": "https://www.udemy.com/course/free-text-to-speech-software-with-multiple-voices/",
      "bio": "Get rid of having to pay for text to speech once and for all",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Free Text To Speech Option 1": [
          "E- Authoring Tool"
        ],
        "Free Text To Speech Option 2": [
          "Windows 10"
        ],
        "Free Text To Speech Option 3": [
          "Experimental Software"
        ],
        "Bonus Software Speech To Text": [
          "Best Free Speech To Text Software"
        ]
      },
      "requirements": [
        "No technical skills needed. If you can install a software you can apply the methods in this course."
      ],
      "description": "The course will introduce you to free text to speech software and the various benefits of using them.\nIt will talk about what Text-to-speech is and how you can use it to read anything you want, even if you are unable to read the material because of your disability.\nIt will also talk about the various free software available online that can be downloaded for your personal use.\nIt will also talk about the various quality of the software\n\n\nWe will also review a list of free programs to find the one for you.\nSeveral of the methods that are shown within this course are as follows:\nHow to get a free text to speech software using Windows 10.\nHow to get a free text to speech software using and installing an E authoring tool\nHow to get free Text to software using an experimental web-based software\nBonus How to convert speech to text.\nThis course was built because I spent a lot of money to purchase text-to-speech software that had really poor quality results and was really overpriced. So I scoured the internet searching for any viable free text to speech software that produced these results. The fruits of my labor all bundled within this course. I hope you enjoy this course and find it helpful.",
      "target_audience": [
        "Anyone looking to safe money on text to speech software."
      ]
    },
    {
      "title": "Sauce Labs Masterclass: Advanced Test Automation",
      "url": "https://www.udemy.com/course/sauce-labs/",
      "bio": "Learn how to drastically scale up your test automation on the world's best Selenium Grid from Sauce Labs",
      "objectives": [],
      "course_content": {
        "Getting Started With Sauce Labs": [
          "Sauce labs promotional video",
          "Prerequisites",
          "Syllabus for Sauce Labs",
          "Course resources",
          "Advantages of Sauce Labs",
          "Disadvantages of Sauce Labs",
          "How to sign up for Sauce Labs trial",
          "Overview of Sauce Labs dashboard",
          "Manual cross-browser testing",
          "Tunnels, analytics, and archive tabs",
          "Overview of solution"
        ],
        "Excecution of Tests in Sauce Labs": [
          "RemoteWebDriver",
          "DesiredCapabilities",
          "Course survey",
          "How to find Sauce Labs account info",
          "How to run tests",
          "Framework Reviews - Survey",
          "How to analyze tests in Sauce Labs",
          "Sauce Labs Timeouts",
          "Quiz on Sauce Labs concepts",
          "Quiz answer on Sauce concepts"
        ],
        "Introduction to Sauce Labs Advanced topics": [
          "Code",
          "Overview of new project layout"
        ],
        "Parallelization and cross browser testing": [
          "How to run tests in parallel",
          "How to set level of parallelism",
          "Layout of data driven tests",
          "How to do data driven cross browser testing in sauce labs",
          "How to configure mobile automation in sauce labs"
        ],
        "Configuration and analytics": [
          "How to set test names, status, log steps in sauce labs",
          "Sauce labs test insights",
          "Sauce analytics trends",
          "BONUS LECTURE!!!"
        ]
      },
      "requirements": [
        "Know any programming languages (the course is in C#, but concepts apply to all languages)",
        "Know some testing framework",
        "Know how to write Selenium WebDriver code"
      ],
      "description": "Are you struggling to expand your test automation?\nIs it simply taking too long to run and maintain your own Selenium Grid?\nThe answer to all scaling problems in automation is Sauce Labs.\nWith this course, you will learn all of the major features of this world class Selenium Grid.\nYou will learn how to sign up for a free trial...\nAnd finish with the ability to run endless tests in parallel across multiple browser and operating systems at the same time.\nAlong the way, I will teach you all of the major features of this wonderful technology.\nYou will leave this course with the ability to run tests in parallel and cross-browser.\nYou will be able to drastically speed up your test suite execution time and maintenance times.\n\nReady to start? Check out the full curriculum and jump into the tutorial.\n\n\nWhat our students are saying?\n“Great course! This was one of the most thorough training courses I have ever taken/endured/survived. For me the course had a real \"graduate course\" feel to it, along with some almost impossible challenges that will result in frustration as well as some very deep learning.”- David Kotschessa\n\n\n“The C# section is taught by someone else, which surprised me, but I think they did a great job at instructing at a beginner level. The Selenium materials are quite comprehensive and the instructor is easy to follow and understand. I am impressed that the author has taken the time to keep the course materials updated, and therefore merits 5 stars in my book!” - David Draper\n\n\n“Well I can't explain in words how much am excited after completing this course. The more I was close to completion the more am getting excited. You are a great instructor Nikolay. You don't just taught Selenium but other aspects of being a beautiful coder. Now am pretty confident and can say \"Yes\" to my clients when they need me to automate the application. Thank you Sir for all the hard work and effort you put in the course. Surely would like to see you in another engaging course!” - Randhawa Verma\n\n\n“I like fundamental approach used by author. Will see:) To prepare such a course - it's a really hard and big job. Respect and thank you.” - Serhii Kovalenko\n\n\n“Wonderful content and things explained in a nutshell. Overwhelmed by Author's dedication to put things in such a way that any novice or manual tester can follow and understand and definitely be on-boarded as a Selenium Automation Engineer next day at work. Thanks a million times for creating these courses! One Stop for Automation.\"- Rupashree Geethaaviji Ananthakrishna\n\n\n“I am familiar with Nikolay from a course I saw on TestAutomation and have the highest regard for him. Glad to see him on Udemy.” - Annamalai Viswanathan\n\n\n“One Of the Best courses on Selenium With C#. Cheers Nikolay!!” - Saransh Vaid",
      "target_audience": [
        "Knowledgeable test automation engineers that are seeking to drastically scale up their test automation",
        "This is NOT a beginners course"
      ]
    },
    {
      "title": "Cypress V13 Web & API Automation Framework - Novice To Ninja",
      "url": "https://www.udemy.com/course/cypress-automation-framework-novice-to-ninja/",
      "bio": "Learn a Ready To Use Industry Standard End-To-End Cypress V13+ Automation Framework [2024 Updated]",
      "objectives": [
        "***** At the end of this course, you will have detailed understanding of Web Automation Frameworks",
        "You will be able to EXPLAIN, DESIGN and IMPLEMENT structured AUTOMATION FRAMEWORKS using Cypress",
        "Practical knowledge of Cypress (Page Object Model) with Mocha and Cucumber Frameworks",
        "*** In-depth understanding of Cypress CHALLENGES with real time examples",
        "***** We have dedicated INSTRUCTORS to help you with queries within 24 HOURS, resume preparation, Interview questions",
        "You will be able to implement CONTINUOUS INTEGRATION TESTING using JENKINS",
        "You will learn debugging tricks using Screenshots and Videos",
        "You will be able to create GREAT LOOKING REPORTS using the best advanced REPORTING TOOL"
      ],
      "course_content": {
        "Introduction": [
          "Introduction And Course Outcome",
          "Cypress Architecture and Cypress vs Selenium"
        ],
        "Tools Installation And Project Setup": [
          "NodeJS VS Code And Project Setup - Windows",
          "NodeJS VS Code And Project Setup - Mac"
        ],
        "Cypress Setup And Project Structure": [
          "Cypress Installation",
          "Cypress Test Runner Introduction",
          "Exploring Cypress Folder Structure",
          "How To Update Cypress Version",
          "Knowledge Check"
        ],
        "Getting Started With Cypress Automation": [
          "Cypress Syntax And First Test Case",
          "How To Run Cypress Automation Using Commands",
          "Cypress Intellisense With VS Code",
          "Cypress Locator Strategy And Selector Playground",
          "Get Method And CSS Selectors Implementation",
          "Knowledge Check"
        ],
        "Using XPath With Cypress": [
          "Working With Cypress XPath"
        ],
        "Deep Dive Into Cypress Concepts": [
          "Get Command Details",
          "How To Chain Commands",
          "Within Command Details",
          "Find Command - How to work with child elements",
          "Knowledge Check"
        ],
        "Asynchronous Nature": [
          "Synchronous Vs Asynchronous Nature",
          "Cypress Promise Handling"
        ],
        "Cypress Assertions": [
          "Implicit Subject Assertions",
          "Explicit Subject Assertions",
          "Default And Common Assertions",
          "Knowledge Check"
        ],
        "Web UI Interactions": [
          "How To Click On Element - Multiple Ways",
          "Double And Right Click On Element",
          "How To Type And Clear Element",
          "Checkbox and Radio Button Interaction",
          "How To Work With Dropdown Elements",
          "How To Mouseover - Trigger Command",
          "How To Mouseover - Invoke Command",
          "Knowledge Check"
        ],
        "Working With Element List": [
          "Each And Wrap Command - For Loop",
          "Element List Iteration",
          "AutoSuggest Dynamic Dropdown"
        ]
      },
      "requirements": [
        "***** NO AUTOMATION / CODING EXPERIENCE NEEDED, beginners will be easily able to follow this course",
        "JavaScript concepts are covered in the course, no experience needed",
        "***** CODE FILES / ALL MATERIAL FOR EVERY LECTURE AVAILABLE TO DOWNLOAD",
        "Browsers (Firefox or Chrome)",
        "Windows/MAC computer"
      ],
      "description": "*** Only Course which provides a READY TO USE Industry Standard End-To-End Cypress Automation Framework with latest V13 - Latest 2023 version\n*** Most popular and most loved by students, best Cypress course\nLife Time Access (Also best support you have ever received)\nNo false promises, straight point to point explanation with simple and easy to understand examples\nNo other course on Udemy covers framework implementation covered in this course with such great depth of detail\nJoin the group of more than 100K students already taking advantage of our multiple courses with positive feedback.\n\nIncludes:  Easy to understand 90+ bite-sized lectures of Complete Cypress Automation Framework Implementation with real time website + life time support (Also best support you have ever received)\nThis course includes a wide range of topics covering complete Cypress Automation Framework, Automation Framework Design (Page Objects, Data Driven, Reading Data files), Time Travel, Screenshots and Videos, Best reporting tool - Advanced Reporting, API Testing, GitHub and Jenkins CI/CD. All materials and code files included\n\n*** One stop place to become an Expert in Web Automation Framework from scratch ***\nWe start from the scratch to build a complete Cypress Automation Framework. This is a single course you need to learn how to build an Industry Standard Cypress Automation Framework\n\nYou will be introduced to some never seen before framework concepts which are unique to this course and are difficult to find anywhere else.\n\n\nWHAT MAKES THIS COURSE BEST IN CLASS?\nYou take away a READY TO USE Cypress Automation Framework. This is the only course which provides you a ready to use framework\nExamples are taken from TESTING REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated, that will give you idea of industry level framework and give you confidence.\nGet unique content with real example code files provided to refer and learn with examples.\nGet awesome Support, response within 24 hours.\n\n\n\nWhy should I take this course?\n\nIf you answer yes to any of these questions, you should take this course\nEager to learn new Test Automation tool?\nPassionate to learn how to build a framework by putting together all the knowledge?\nAre you a Quality Assurance Automation professional willing to intensify their current test automation skill sets?\nAre you looking to step into automation industry with the latest technologies in market?\nInterested in learning how Cypress is used in projects?\nAre you a Fresh Graduates who want to make a dream career in software engineering?\n\n\nTopics Include:\nProject and Environment setup\nDeep Dive Into Cypress Concepts\nWorking with Elements\nAsynchronous Nature\nPage Object Model detailed explanation\nComparison between No Framework and Framework Test Classes\nWorking with multiple Test Specs and Test Methods\nData Driven Testing\nReporting - Awesome Reporter\nCypress Cloud\nAPI Testing\nGitHub\nJenkins CI/CD",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career in test automation",
        "Quality Assurance Automation professionals willing to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "CUCUMBER -BDD Framework for Selenium , Protractor and Appium",
      "url": "https://www.udemy.com/course/cucumber-bdd-framework-for-selenium-and-appium/",
      "bio": "BDD, Cucumber, Gherkins, Behavior Driven Development, Selenium IDE,core JAVA,Selenium webdriver,Appium,Protractor",
      "objectives": [
        "You can work on any project on BDD,Selenium, Appium and Protractor tools",
        "You can handle interview on above mentioned tools"
      ],
      "course_content": {
        "Cucumber BDD and overview on its components": [
          "Overview on Cucumber and what we are going to study from this training",
          "Introduction to BDD and Cucumber",
          "Overview on BDD, Cucumber and why selenium + cucumber",
          "Configuration of Cucumber Part 1",
          "Configuration of Cucumber Part 2",
          "Configuration of Cucumber Part 3",
          "Overview on Gherkins and cucumber keywords",
          "Examples of creating scenarios",
          "overview on feature and step definitions",
          "Create feature file in eclipse editor",
          "Create step definition from test runner class",
          "Integration feature file with selenium code",
          "Integration feature file with Appium code",
          "Create step definition from chrome browser plugin and by writing our own",
          "Creating reusable steps and step definitions",
          "How to handle multiple sets of data - Part 1",
          "How to execute specific test scenarios",
          "Overview on scenario outline and how to pass multiple sets of data",
          "Defining Pre conditions and post conditions - Part 1",
          "Defining Pre conditions and post conditions - Part 2",
          "Overview on Cucumber videos"
        ],
        "Selenium IDE overview": [
          "Introduction to Selenium IDE",
          "Mode of execution in IDE, what is command, target, value",
          "Various commands in IDE part1",
          "Various commands in IDE part2",
          "Why Verification Point is needed to add to IDE script",
          "Screenshot capturing, start & break point, limitations of IDE",
          "How to implement gotoif and delete cookies with examples in IDE",
          "How to create dynamic user using if conditions in IDE",
          "How to create multiple users using if conditions in IDE",
          "What is test suite & framework"
        ],
        "Core JAVA": [
          "Introduction to JAVA",
          "What is method ,variable, package in JAVA",
          "What is class & method",
          "What are various Data types",
          "Eclipse editor overview and creating a project",
          "How to create object",
          "What are method parameters & return types",
          "What is access modifiers",
          "Overview on inheritance",
          "What is abstraction & abstract class",
          "Overview on interface"
        ],
        "WebDriver Basics and Advanced": [
          "What is WebDriver and its architecture",
          "Overview on locators and firebug",
          "Various types of locators and usage",
          "overview on xpath and css",
          "Comparison between RC and Webdriver",
          "Setup required for WebDriver",
          "Configure webdriver",
          "How your browser launch",
          "Comparison b/w Selenium, JAVA 2.48 & 3.5 versions with example",
          "Object identification & actions on object",
          "Method chaining in JAVA",
          "GET N NAVIGATETO COMMANDS, firefox browser n selenium java issue",
          "Window maximize command in WebDriver",
          "Sendkeys command in WebDriver",
          "Overview on Click ,close & quit commands",
          "Scenarios and Login to Sales Force ,handling checkboxes.",
          "Isselected, Uncheck,Radio buttons",
          "Select class",
          "FindElements examples, Tab ,Identify all links examples",
          "Working on Chrome Browser and IE browser",
          "Html unit drivers, Overview on frames",
          "How to handle alerts using robot class and AutoIT",
          "How to handle multiple windows",
          "Actions and various examples",
          "Handling of webtables",
          "Introduction to java script executor",
          "What is a Firefox Profile",
          "Data driven testing",
          "getting data from a csv file",
          "Reading from PDF file and Image",
          "Overview on Junit and Testng with examples",
          "Testng Parallel execution and overview on framework",
          "Overview on MAVEN",
          "Explanation on Framework and its components with example",
          "Overview on framework - Part 1",
          "Overview on framework - Part 2",
          "Overview on framework - Part 3",
          "Overview on framework - Part 4",
          "Overview on Cucumber BDD Framework - Part 1",
          "Overview on Cucumber BDD Framework - Part 2",
          "Overview on Cucumber BDD Framework - Part 3",
          "Overview on Cucumber BDD Framework - Part 4",
          "Overview on Cucumber BDD Framework - Part 5",
          "Introduction to Jenkins",
          "Creating jobs in jenkins",
          "Test Scripts for all the scenarios including framework scripts"
        ],
        "Protractor Using NodeJS & JAVA Programming Language": [
          "Overview on Protractor and concepts we are going to study",
          "Prerequisites to install Protractor",
          "Installing Protractor",
          "Architecture of Protractor",
          "Introduction to Jasmine Framework",
          "Various Editor and folder structure",
          "overview on spec.js and global variables with simple examples",
          "Overview on conf.js file",
          "Introduction to Locators with examples",
          "How to execute Protractor scripts on non Angular applications",
          "Convert a simple script into Page Object Model Example 1",
          "Various kinds of Excepts which we can use in Protractor",
          "Introduction to multiple it and before each in Jasmine",
          "Overview on ng-repeat with examples",
          "Overivew on Protractor using JAVA and creating jProtractor jar file",
          "Basic script to launch application using java programming language- Example1",
          "Basic script to perform operations using java programming language- Example2",
          "Handling of dropdowns using JProtractor"
        ],
        "Appium for Android Operating System": [
          "Appium Demo Session",
          "Overview on Mobile Testing",
          "Configuration required for Appium Android & Overview on APK files",
          "Creating Android Emulator, overrview on ADB.exe, installing apk file",
          "Vysor, install app on real device ,various ways to identify an Object & examples",
          "Configuration on Eclipse Editor",
          "Basic script on Android by passing Desired capabilities",
          "Handling of Checkbox ,dropdowns and executing on real devices",
          "Handling of alerts in native app",
          "Drag and drop using TouchAction",
          "Scroll to specific object vertically using Touch Action",
          "Handling checkbox, text fields, radio buttons & expandalble lists",
          "Handling Date Pickers and Spinners",
          "Handling of Seekbars in API Demos App",
          "Handling rating bar and selecting 3* and 5* ratings",
          "Capturing screenshot and videos in android device",
          "UI Selector overview with examples",
          "Swipe horizontally using swipe list application",
          "MultiTouch Action overview with example",
          "Handling popup menu in Native app",
          "How to verify toastr message using OCR",
          "Overview on system apps and identifying package and activity name for contacts",
          "Script to click on dialer on mobile system app",
          "Script to enter mobile number in dialer",
          "How to perform long press , create a message",
          "Running notes ,APK Files & Test Scripts for Android"
        ],
        "Appium for iOS OS": [
          "Overview on MAC configuration required and creating simulators - Day 1",
          "MAC configuration required and downloading components from terminal Day 2",
          "Installing Node and appium 1.7 from terminal",
          "Overview on all the installation files and Appium inspector screen",
          "Configuration in Eclipse and passing desired capabilities",
          "Object Identification in MAC",
          "Handling of alerts - Example 1",
          "Handling of alerts - Example 2",
          "Handling text entry and secure text entry alerts- Example 3",
          "Handling Actions sheets Example",
          "Handling of picker wheels",
          "Selecting a value from Date Picker",
          "How to Scroll to a specific object using Touch Action",
          "How to handle Text Fields",
          "Handling of switches",
          "Handling of Steppers - Example 1",
          "Handling of Steppers - Example 2"
        ]
      },
      "requirements": [
        "Basic idea on testing tools is morethan enough"
      ],
      "description": "Updated course with latest framework concepts(Selenium POM framework, Cucumber BDD framework), JENKINS, GIT on Jan 18th 2020\n\n\nCucumber Content\n·          Cucumber – Overview\n·          Cucumber – Environment\n·         Prerequisites for Environment\n·         Setup\n·         Configure\n·         Cucumber with Maven\n·         Cucumber – Gherkins\n·         Cucumber – Junit Runner class creation and examples\n·         Cucumber – Features\nFeature       Files\n·         Cucumber – Scenarios\nExamples       of creating scenarios on different applications\nConverting       manual test cases into scenarios\n·         Steps Definitions\nGenerate step definition from       TestRunner class\nGenerate step definition from       chrome browser plugin\nGenerate step definition by       writing our script\n·         Integrating cucumber with Selenium\nExamples of cucumber +       Selenium scripts\n·         How to create reusable steps\nExamples in creating reusable       steps and step definitions\n·         Cucumber – Data Tables\nExamples of creating data in       data tables\n·         Cucumber: Parameterization and passing multiple sets of data\nExamples of data       parameterization\n·         Cucumber – Tags\n·         Cucumber – Comments\n·         Cucumber – Hooks\n·         Cucumber – Reports\n·         Framework creation\n·         Integrating Appium with cucumber\nExamples of executing scripts       on Android devices\nExamples of executing scripts       on iPhone\n\n\n\n\nSelenium Content\nDemo session:\nIntroduction to Automation\nWhy and when will we go for Automation\nWhat is the use of Automation\nWhat is the difference between Selenium and QTP\nAbout Selenium:\nWhat is Selenium\nAdvantages of Selenium\nDifferent flavors of Selenium:\n·         Selenium IDE\n·         Selenium RC\n·         Selenium Grid\n·         Selenium Web Driver/Selenium 2.0\n·         Selendroid\nSelenium IDE Overview:\nDownloading and Installing Selenium IDE\nFeatures of  Selenium IDE\nSelenium IDE Icons\nRecording your first test with Selenium IDE\nSave and playback first script\nMode of execution\nWhat is command , target, value\nAsserting the elements\nVerifying the elements\nWaitFor elements\nStoring the elements\nSynchronization commands\nAdding Selenium IDE comments\ngoBack, refresh, Enterkey simulation, highlight ..etc.\nIDE Context Menu\nBuilding Test cases using Selenium IDE\nCapturing screenshots in IDE\nStart & break points with example, limitations of ide\nHow to use looping statements like IF, while  in IDE with few examples\nUsage of goto commands in IDE\nDelete all cookies\nMultiple user creation using if condition\nGenerating Dynamic values using JS functions\nUsage of JS functions with IDE\nCreating test suites\nFramework in IDE\nCore Java  concepts:\nIntroduction To Core\nJava\nWhat\nis jre, jdk,\njvm\nInstall\njava\nEnvironment variable configuration\nDatatypes\nmethod\n\n\nvariables\nPackage\n\n\nWhat is a class and object?\nvarious data\ntypes\nDownload\n\n\neclipse\nHow\nto create\njava project\nWhat\nis\nobject\nHow\nto create object to  a\nclass\nWhat\nare method parameters with\nexamples\nHow\nto add return type to a method with\nexamples\nPublic\nPrivate\nProtected\nDefault\nInheritance\nand examples on parent child\nrelationship\nWhat\nis abstraction and abstract\nclass\nOverview\non interface\nWeb Driver Concepts :\nIntroduction & Architecture\nHow to identify elements in webpage using Selenium\nTools to identify elements/objects\nFirebug\nIE Developer tools\nGoogle Chrome Developer tools\nLocating elements by ID\nComparissions between RC and WebDriver\nDownloading and configuring  web driver in Eclipse\nSetup required for webdriver\nconfiguring  webdriver\nHow your browser will be launched\ncomparison b/w selenium java 2.48 & 3.5 versions with example\nFinding elements by name\nFinding elements by link text\nFinding elements by XPath\nFinding Elements by using CSS\nOverview of method chaining in java\nHow to open an application using GET N NAVIGATETO COMMANDS\nFirefox browser n selenium java issue\nHow to maximize  the window\nHow to use sendkeys command in webdriver\nVarious commands close, quit, click command in webdriver with examples\nscenarios and login to sales force ,\nHandling checkboxes\nHow to use isselected,\nHow to perform  uncheck operation\nHow to handle radio buttons :\nOverview on webdriver select class with examples\nDiff between findElement and findElements commands\nfindElements examples,\nHow can we perform tab operation\nIdentify all links  a webpage with examples\nworking on chrome browser\nworking on IE browser\nhtml unit drivers,\nWhat is frames and overview on frames\nHow to handle alerts\noverview on robot class and examples\noverview on autoIT and examples\nHow to handle multiple windows with examples\ngetCoordinates\nActions class\nDragable\ndropable\ndatepicker\nresizable\nHandling of webtables\nGetmethods();\nIntroduction to java script executor\nUsage of Java script executor\nJavascript Executor\nImplicit wait, Explicit wait, Fluent wait\nWhat is a Firefox Profile\nHandling Certificate issuer using FF profile\nHandling proxy server and file downloading using FF profile\nDatadriven testing\nJXL\nPOI\nKeyword driven testing\nDatadriven testing\nText file\nproperties file\nCSV file\nRead content from a PDF file\nRead content from an image file\nIntroduction about TestNG How to Install TestNG plugin in Eclipse\nTestNG sample script\nWriting Selenium testing script from\nscratch\nCreating\nTest suites using TestNG Reports generation using TestNG\noverview on JUNIT\nIntroduction to\nFramework\ncomponents\nin\nframework\nDiscussing\nabout base\nframework\nCreating\na POM framework\n*********************************************************************************************************************\nAPPIUM (Mobile Automation testing tool) Content has 2 parts which covers both Android & iOS\nChapter 1: Introduction to Appium\nIntroduction to Appium\nOverview of Open Source Mobile Test Automation tools:\nOpen source Mobile Automation tool Evaluation\ndocs\nWhy\nAPPIUM\nLimitations of APPIUM\nAppium architecture\nChapter 2: Appium- Prerequisites & Installation for Windows\nAppium Prerequisites\nJava Installation & Configuring System Environmental\nvariables\nMaven\nConfiguration\nAndroid SDK\nconfiguration\nEclipse\nIDE\nconfiguration\nAppium\ninstallation on\nwindows\nWhat\nis an APK\nfile\nVarious\nsources to get APK\nfiles\nInstalling\napplication on real device using these APK\nfiles\nAutomating\nINDIAMART-Login\nAutomating Facebook- Post Status\nAutomating Facebook- Delete Post & User Logout\nUI Automator Component\nElement Locators\nChapter 3: Installation for APK Files\nWhat is an APK\nfile\nVarious\nsources to get APK\nfiles\nInstalling\napplication on real device using these APK\nfiles\nAutomating\nINDIAMART-Login\nAutomating Facebook- Post Status\nAutomating Facebook- Delete Post & User Logout\nChapter 4: Object identification\nLocating elements by resource ID\nLocating elements by\nname\nLocating\nelements by\nclassname\nLocating\nelements by xpath\nChapter 5: Basics of Android\nShare & Control Real Android Device screen from\nPC\nDownload\nAndroid Platforms using SDK Manager\nCreateVirtual Devices/Emulators using AVD Manager\nChapter 6: APPIUM basic concepts\nSettingup a basic\nproject\nAppium\nAPI\nReference\nWhat\nare DesiredCapabilities\nKnowing AppPackage and Launcher Activity of Android App\nChapter 7: APPIUM commands\nsendKeys()\nclick()\ngetLocation()\ngetContextHandles()\nfindElement()\ncloseApp()\nquit ..etc\nChapter 8: Mobile Touch Gestures-DragDrop, MultiTouch, Swipe,Scroll\nPerforming Drag and Drop using TouchAction\nclass\nPerforming\nClick and Swipe using TouchAction\nclass\nPerforming\nMultiTouch and Drop using MultiTouchAction\nclass\nPerforming\nSwipe using screen coordinates(x,y)\nPerforming Long press using TouchAction class\nChapter 9: Android MobileBrowser-Automating Mobile Web Application\nIntroduction to Mobile Web\nAutomation\nHow\nto get Useragent from Android Browser\nIdentifying the objects on Mobile\nbrowser\nAutomating\nmobile specific websites\nChapter 10 : Android- Automating Built in Apps(Phone, contact,Settings)\nAndroid BuiltIn App(Phone) : Dial phone\nnumber\nAndroid\nBuiltIn App(Message) : Sending a\nmessage\nAndroid\nBuiltIn App(Clock) : Setup Recurring Alarm\nChapter 11: Appium- Prerequisites & Installation for Mac\nAppium Prerequisites\nJava Installation & Configuring System Environmental\nvariables\nMaven\nConfiguration\nAndroid SDK\nconfiguration\nXcode\nConfiguration\nEclipse IDE\nconfiguration\nAppium\ninstallation on Mac\nChapter 12: Appium- iOS App download\nEmulators Vs Simulators\niOS App\ndownload\nShare\nIOS Device Screen on Mac\nProvisioning Development Build on Real IOS\nDevice\nUsing\nAppium inspector to identify the element properties\nChapter 13: Working with Safari browser on IOS Device\nRunning ios first automation test\ncase\nLaunch\nSafari browser on IOS Simulator\nLaunch Safari Browser on Real IOS Device\nChapter 14: Working with IOS Controls on Real IOS Device\nWorking with Steppers(UIAStepper)\nWorking with Switches(UIASwitches)\nWorking with Sliders(UIASlider)\nWorking with PickerWheel(UIAPickerWheel)\nWorking with Date Picker\nWorking with Segmented Controls(UIASegementedControl)\nWorking with Page Indicator(UIAPageIndicator)\nHandling alerts\nChapter 15: Jenkins-Continous Integration with Appium\nParametrizing DesiredCapabilities using Maven\nIntegrating Appium with CI tool Jenkins\nDynamic Parametrization of DesiredCapabilities using Jenkins\nScheduling the framework to run at specific time\nChapter 16: SauceLabs-Cloud Integration with Appium\nIntegrate Appium IOS Tests with SauceLabs\nIntegrate Android Appium Tests with SauceLabs\nChapter 17: Programmatically Launch Appium on Mac & Windows\nProgrammatically launch Appium using AppiumServiceBuilder\nProgrammatically Launch Appium on Windows\nProgrammatically Launch Appium on Mac\nChapter 18: PageFactory Model- Automating IOS App\nPageObject Pattern & PageFactory Introduction\nDeveloping PageObject Model and extending PageFactory\nsupport\nCreating\nAbstractTest & AbstractPage\nWriting Tests in PageFactory\nModel\nUsing\n@iOSFindBy and @AndroidFindBy Annotations\nChapter 19: Appium Tests Parallel Execution\nRun Appium Test Cases Across Multiple Devices Using Grid\nChapter 20: Capture Video and Screenshots for iOS & Android test runs\nAndroid: Record Video Screen during test execution\niOS: Video Record Screen during Test Execution\nEclipse IDE- Fix for ADB Path error during Video Capture on Android\n******************************************************************************************************************\nProtractor Content/Protractor on a real project/\nProtractor Overview: Protractor Tutorials on End-to-End testing on AngularJS websites. A wrapper over Selenium WebDriverJS library\nPrerequisites to install Protractor\nProtractor Installation\nArchitecture and Process communication of Protractor\nOverview on Jasmine: Covering Jasmine Framework that needed for Angular JS automtion using Protractor\nvarious editors and folder structure\noverview on spec.js\nintroduction to global variables:\nbrowser.get\nelement\nby\ncreated a simple example\nexecute the script\noverview on conf.js\nlocators with examples\nOverview on ng-repeat with examples\nIntroduction to Multiple It and Before Each in Jasmine\nBasic script in handling calculator\nverifiaction points in jasmine using expect\nHow to work on non angular JS applications\nSample script to login to SF application\nIntroduction to Page Object Modle  framework\nconverting spec file to a page object mondel\ncreating and executing scripts in Paga Object Model\nHow to handle Protractor using JAVA programming language\nCreating JProtractor jar file and adding to JAVA Project in eclipse editor\nCreating basic scripts for Protractor using JAVA programming language\nHandling text fields\nHandling dropdown\nvarious identification mechanism for NgBy. with examples\n***********************************End of Protractor****************************************************",
      "target_audience": [
        "Anyone who wants to start their career in automation testing"
      ]
    },
    {
      "title": "JavaScript za QA Inženjere",
      "url": "https://www.udemy.com/course/javascript-za-qa-inzenjere/",
      "bio": "Priprema za automatizaciju – JavaScript kao temelj za Playwright, Cypress i Selenium",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Ne brinite ako nikada ranije niste pisali nijednu liniju koda. Ovaj kurs je namenjen apsolutnim početnicima – posebno QA inženjerima koji žele da naprave prvi korak ka automatizaciji testiranja uz JavaScript. Krećemo od samog početka: objašnjavamo osnovne koncepte, sintaksu, logiku i način razmišljanja koji stoji iza programiranja. Sve je objašnjeno jednostavno, jasno i uz konkretne primere iz sveta testiranja. Nema tehničkog žargona bez konteksta, nema preskakanja koraka – sve je prilagođeno onima koji tek ulaze u ovu oblast."
      ],
      "description": "Ovaj kurs je kreiran posebno za QA inženjere koji žele da naprave sledeći korak u svojoj karijeri – ka automatizaciji testiranja. Ako nikada ranije niste pisali kod, ne brinite. Kurs je potpuno prilagođen početnicima, bez potrebe za prethodnim programerskim iskustvom.\nKroz praktične primere, objašnjenja jednostavnim jezikom i realne scenarije iz sveta testiranja, naučićete sve što vam je potrebno da razumete i koristite JavaScript u kontekstu QA posla. Od osnovnih koncepata programiranja, preko rada sa promenljivama, funkcijama i petljama, pa sve do pripreme za rad sa alatima kao što su Playwright, Cypress i Selenium.\nŠta ćete naučiti:\nOsnove JavaScript-a kroz QA prizmu\nKako da razmišljate kao programer i pišete efikasan kod\nPraktične vežbe koje simuliraju realne test scenarije\nPripremu za automatizaciju testiranja uz moderne alate\nNajčešće greške koje početnici prave – i kako da ih izbegnete\nSyllabus:\nHello World: Naučićeš osnove sintakse JavaScripta i kako da prikažeš svoj prvi programski izlaz. Ovo je temelj za razumevanje kako JavaScript funkcioniše.\nVarijable, Konstante i Data tipovi (Varijable, Konstante i Tipovi Podataka): Razumećeš kako da deklarišeš i koristiš varijable za čuvanje podataka koji se mogu menjati, kao i konstante za vrednosti koje ostaju nepromenjene. Upoznaćeš se sa osnovnim tipovima podataka u JavaScriptu kao što su brojevi, stringovi, boolean vrednosti, null i undefined.\nKonkatenacija i Interpolacija: Naučićeš kako da spajaš (konkatencija) tekstualne vrednosti i kako da ubacuješ (interpolacija) vrednosti varijabli unutar stringova na moderan i efikasan način.\nObjekti i Liste (Nizovi): Steći ćeš znanje o složenim tipovima podataka kao što su objekti, koji ti omogućavaju da grupišeš podatke po ključevima, i liste (nizovi), koji predstavljaju uređene kolekcije podataka. Ovo je ključno za rad sa podacima u veb aplikacijama\nRelacioni i operatori jednakosti: Naučićeš kako da koristiš operatore za poređenje vrednosti (npr. veće od, manje od) i operatore za proveru jednakosti (stroga i nestroga jednakost). Ovo je neophodno za donošenje odluka u tvom kodu\nLogički Operatori: Razumećeš kako da kombinuješ uslove koristeći logičke operatore kao što su \"i\" (AND), \"ili\" (OR) i \"ne\" (NOT). Ovo ti omogućava da kreiraš složenije logičke izraze\nUslovna izjava (If Izjava): Naučićeš kako da koristiš if, else if i else izjave za izvršavanje različitih delova koda u zavisnosti od toga da li je određeni uslov ispunjen. Ovo je osnova za kontrolu toka programagration and parallel test execution\nPetlje (Petlje): Savladaćeš različite vrste petlji kao što su for, while i do...while petlje, koje ti omogućavaju da ponavljaš određeni blok koda više puta. Ovo je ključno za automatizaciju zadataka\nFunkcije: Naučićeš kako da definišeš i pozivaš funkcije, koje predstavljaju blokove koda koji obavljaju određeni zadatak. Funkcije pomažu u organizaciji koda i njegovom ponovnom korišćenjem\nKlase i Metode: Upoznaćeš se sa konceptima objektno-orijentisanog programiranja u JavaScriptu, uključujući definisanje klasa kao nacrta za objekte i metoda kao funkcija unutar klasa\nTypeScript vs JavaScript: Razumećeš razlike i sličnosti između JavaScripta i TypeScripta, nadskupa JavaScripta koji dodaje statičko tipiziranje. Ovo će ti pomoći da razumeš prednosti i nedostatke oba jezika u kontekstu QA\nJavaScript zadatak: Praktično ćeš primeniti stečeno znanje kroz konkretan zadatak koji će ti pomoći da učvrstiš razumevanje koncepata i razviješ veštine rešavanja problema koristeći JavaScript\nKurs je strukturiran tako da vas vodi korak po korak, sa jasnim objašnjenjima i zadacima koji učvršćuju znanje. Cilj je da steknete samopouzdanje u radu sa kodom i da budete spremni za sledeći nivo – automatizaciju testova.",
      "target_audience": [
        "QA inženjeri koji žele da pređu sa manualnog na automatsko testiranje",
        "Početnici koji žele da nauče automatsko testiranje"
      ]
    },
    {
      "title": "Unit Testing Rust Smart Contracts on NEAR Blockchain",
      "url": "https://www.udemy.com/course/unit-testing-rust-smart-contracts-on-near-blockchain/",
      "bio": "Build a Cargo unit test for transfer in Rust contract",
      "objectives": [
        "01 Build a Cargo unit test to get total supply in Rust contract",
        "02 Build a unit test for counter Rust smart contract with Cargo",
        "03 Build unit tests for chatboard Rust smart contract with Cargo",
        "04 Build unit tests for fungible cryptocurrency token Rust smart contract with Cargo"
      ],
      "course_content": {
        "Introduction": [
          "00 Project Preview"
        ],
        "00b Mammoth Interactive Courses Introduction": [
          "00 About Mammoth Interactive",
          "01 How To Learn Online Effectively"
        ],
        "00c (Prerequisite) Blockchain and Smart Contracts Overview": [
          "00 Blockchain Introduction",
          "02 What is a Smart Contract",
          "03 What is the NEAR blockchain"
        ],
        "00d (Prerequisite) Command Line Fundamentals": [
          "01 Why All Developers Need To Know The Command Line",
          "02 Install Linux Command Line On Windows",
          "03 What Are Linux And Unix Terminals",
          "01 Build Your First Command In The Command Line",
          "02 Navigate Directories In The Command Line",
          "03 Build And Edit A New File In The Command Line",
          "04 Move Files In The Command Line"
        ],
        "00e (Prerequisite) Install Node and npm": [
          "00 What Is Node JS",
          "01 Install Node And NPM On Mac Or Windows",
          "02 How to Install Node and NPM on Windows"
        ],
        "00e1 (Prerequisite) Build a Hello World NEAR smart contract with Rust": [
          "00 What is Rust",
          "01 Set Up NEAR Smart Contract Project with Rust",
          "02 Build a Hello World Rust smart contract"
        ],
        "00e2 (Prerequisite) Rust programming fundamentals for NEAR smart contracts": [
          "01 Rust String vs str explained",
          "02 What is a Rust struct with attributes",
          "03 What is Rust Default trait",
          "04 What is mut in Rust"
        ],
        "00f Install curl (for Mac or Linux Unix Terminals only)": [
          "01 Install curl"
        ],
        "00g (Prerequisite) Install Rust and Cargo": [
          "00 Install Rust and Cargo on Mac (Bash and ZShell) or Windows"
        ],
        "Build simple unit tests for greeting Rust smart contract with Cargo": [
          "01 Test a greeting Rust contract"
        ]
      },
      "requirements": [
        "No experience required",
        "No cryptocurrency required",
        "No paid software required",
        "Code editor (free)"
      ],
      "description": "What is the NEAR blockchain?\nbuilt to be simple, secure and scalable.\nLow cost. High speed. Effortless scale.\n<0.01USD Transaction Cost\n18M+ Active Accounts\n400K Daily Transactions\n~2.4s Time to Finality\nContracts, DAOs, dapps, funding\nLayer 1 blockchain\nnot dependent on other chains.\nuses a unique scaling mechanism\nNightshade sharding\nScales infinitely\nresists short-term usage spikes\nProof of stake\nMore efficient than Bitcoin and Ethereum\nweb-based wallet\nno need for users to install programs or browser extensions\nmakes it especially easy to onboard new users (e.g. through named accounts)\nCertified carbon neutral\nconsumes in a year the same energy bitcoin consumes in 3 minutes\nInteroperable with Ethereum\nusing Rainbow Bridge\nYour Instructor\nAlexandra Kropova is a software developer with extensive experience in smart contract and decentralized app development. She has helped produce courses for Mammoth Interactive since 2016, including many blockchain and Web3 courses.\nMammoth Interactive is a leading online course provider in everything from learning to code to becoming a YouTube star. Mammoth Interactive courses have been featured on Harvard’s edX, Business Insider and more.\nOver 11 years, Mammoth Interactive has built a global student community with 1.1 million courses sold. Mammoth Interactive has released over 250 courses and 2,500 hours of video content.\nFounder and CEO John Bura has been programming since 1997 and teaching since 2002. John has created top-selling applications for iOS, Xbox and more. John also runs SaaS company Devonian Apps, building efficiency-minded software for technology workers like you.\nJoin 1.3+ million students in high-quality courses featured at Harvard\nLifetime access that never expires\nProject-based curriculum to superboost your portfolio\nGraduation certificate for every course\nAbsolute beginner-friendly\n90% off today\nUse any computer\nSatisfaction guarantee\nGet all source code\nPopular bundle by Mammoth students\nPerfected over years of training\nReviews from the Mammoth Community\n\"This is AMAZING I just learned how to code without breaking a sweat, this is really easy and fun!\" -Shalonda Lewis\n\"This course so far is by far amazing! The instructor is very encouraging and up beat.\" -Moiz Saqib\n\"It was informative and definitely covered the basics. Easy to understand and to follow.\" -Colin Mooney",
      "target_audience": [
        "Anyone interested in building smart contracts for the NEAR blockchain",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "Тестирование ПО с Нуля до Специалиста. Теория+Практика+Тесты",
      "url": "https://www.udemy.com/course/qatesting/",
      "bio": "Практический и теоретический курс по профессии Тестировщик ПО.",
      "objectives": [
        "Вся базовая теория: типы тестирования, техники тест-дизайна, жизненный разработки и тестирования программного продукта",
        "Тестовые и практические занятия для проверки усвоенного материала. Тестовые и практические задания с обратной связью от Преподавателя",
        "Методологии разработки ПО: Водопадная модель, V-образная модель, Agile: SCRUM, Kanban.",
        "Тестирование WEB-приложений",
        "Создание тестовой документации: баг-репортов, тест-кейсов и чек-листов. Работа с требованиями. Работа в багтрекинговой системе JIRA",
        "Работа с базами данных и языком запросов SQL",
        "Клиент-серверная архитектура",
        "Работа в POSTMAN и тестирование API",
        "Тестирование с помощью Jmeter",
        "Нагрузочное тестирование",
        "Работа в системе контроля версии кода Git",
        "Работа в командной строке",
        "Особенности тестирования мобильных приложений",
        "Создание резюме для тестировщика",
        "Разбор реальных вакансий на позицию тестировщика"
      ],
      "course_content": {
        "Приветствие!": [
          "Обязательно прочти"
        ],
        "Базовый блок: Основные участники процесса разработки ПО. Что такое тестирование.": [
          "Что такое тестирование? Как стать тестировщиком? Виды тестировщиков.",
          "Этапы разработки и тестирования ПО. Основные роли в IT",
          "Что такое QA и QС. Уровни должностей в IT. Пути развития для Тестировщика.",
          "Основные термины блока"
        ],
        "Классификация и принципы тестирования. Техника тест-дизайна": [
          "Основные принципы тестирования",
          "Функциональное тестирование",
          "Нефункциональное тестирование",
          "Модульное, интеграционное, системное и приемочное тестирование",
          "Статическое и Динамическое тестирование. Альфа- и Бетта- тестирование.",
          "Тестирование нового функционала. Регрессионное тестирование. Re-test.",
          "Позитивное и негативное тестирование",
          "Тестирование с помощью техник тест-дизайна",
          "Классификация тестирования"
        ],
        "Методологии разработки ПО. Установка и работа в баг-трекинговой системе JIRA": [
          "Методологии разработки ПО : водопадная, V-образная, Agile модель",
          "Установка и работа в баг-трекинговой системе JIRA",
          "Практическое задание в баг-трекинговой системе JIRA"
        ],
        "Тестовая документация": [
          "Работа с требованиями для тестировщика.",
          "Учимся составляться Чек-лист",
          "Учимся составлять Тест-кейс",
          "Учимся составлять Тестовый набор",
          "Составление тестовой документации",
          "Баг-репорт. Поиск багов в интернете",
          "Когда нужно оформлять баг?",
          "Приложения для хранения тестовой документации"
        ],
        "Работа с базами данных и SQL запросами": [
          "Что такое базы данных и их классификация",
          "Установка ПО для написания SQL запросов и работе с базами данных",
          "Создание и заполнение таблиц в базе данных. Часть 1",
          "Создание и заполнение таблиц в базе данных. Часть 2",
          "Создание и заполнение таблиц в базе данных. Часть 3",
          "Просмотр взаимосвязи таблиц между собой",
          "Основные SQL запросы в базы данных для тестировщика. Часть 1",
          "Основные SQL запросы в базы данных для тестировщика. Часть 2",
          "Создание таблицы и SQL запросов к ней",
          "Объединение таблиц",
          "Изменение и удаление данных в базе данных"
        ],
        "Клиент-серверная архитектура. HTTP методы. API": [
          "Структура Клиент-серверной архитектуры",
          "Что такое URL, IP, DNS сервер, Маска подсети, MAC адрес, Cash, Cookies",
          "HTTP протокол и его основные методы. Статус-кода",
          "SOAP протокол. Написание сообщение на языке XML",
          "REST- архитектура. Написание сообщений в формате JSON",
          "Тестирование браузера с помощью DevTools - инструмент для web-разработки",
          "Вопросы по блоку \"Клиент-серверная архитектура\""
        ],
        "Тестирование API с помощью Postman": [
          "Что такое API. Установка Postman",
          "Знакомство с интерфейсом Postman",
          "ВАЖНОЕ ОБЪЯВЛЕНИЕ!",
          "Тестирование API. Тестируем Google Maps API. Метод POST + GET",
          "Тестирование API. Тестируем Google Maps API. Метод PUT",
          "Тестирование API. Тестируем Google Maps API. Метод DELETE",
          "Позитивное и негативное тестирование API",
          "Тестирование API. Пример №2.",
          "Тестирование категорий API из примера №2"
        ],
        "Работа с командной строкой Windows": [
          "Работа с приложениями и получение конфигурации вашего ПК через командную строку.",
          "Работа с файлами и директориями в командной строке"
        ],
        "Нагрузочное тестирование": [
          "Введение в Нагрузочное тестирование. Цели нагрузочного тестирования.",
          "Когда необходимо проводить нагрузочное тестирование",
          "Этапы нагрузочного тестирования",
          "Методика нагрузочного тестирования"
        ]
      },
      "requirements": [
        "Курс подойдет для людей даже без опыта в IT сфере!",
        "Достаточно будет базовых пользовательских навыков: умения устанавливать программы, владение офисным пакетом вашей операционной системы для написания документов и составления таблиц (MS Word, MS Excel, Open Office или Google Docs)",
        "Персональный компьютер с возможностью выходить в Интернет",
        "Видео курса можно просматривать как с мобильного устройства, так и с компьютера. Для выполнения практических заданий вам понадобится компьютер",
        "Желание развиваться в Тестировании и IT",
        "Способность к самостоятельному обучению"
      ],
      "description": "ВНИМАНИЕ!!! В данном курсе абсолютно НЕТ ВОДЫ и ненужной информации. Если Вы любите бесполезные, скучные и нудные видео от которых хочется спать - то Вам не подойдет данный курс. Цель автора курса - научить Вас тестированию и в самое ближайшее время вывести на рынок для успешного прохождения собеседования и устройства на работу !\nДанный курс предназначен для тех кто хочет освоить такую популярную, востребованную и оплачиваемую профессию как - Тестировщик ПО (QA Engineer) и БЫСТРО выйти на рынок и начать поиск первой работы! Так же он подойдет для тех кто уже работает тестировщиком или в сфере IT и планирует сменить направление.\nОн подойдет как тем, кто только делает первые шаги в мир тестирования, хочет лучше понять эту деятельность и готовится к первым собеседованиям, так и тем, кто имеет некий опыт, но чувствует, что полезно получить знания по тестированию в структурированном понятном виде.\nДанный курс включает в себя теоретические и практические занятия по следующим темам:\n- экскурс по основным профессиям в IT;\n- экскурс по этапам разработки программного продукта;\n- уровни должностей и пути развития тестировщика;\n- основные виды тестирования;\n- основы и классификация тестирования;\n- принципы тестирования;\n- тестирование WEB-продукта;\n- методологии разработки программного обеспечения;\n- техники тест-дизайна;\n- работа с Требованиями для тестировщика;\n- составление и работа с чек-листами на практике;\n- составление и работа с тест-кейсами на практике;\n- составление и работа с баг-репортами на практике;\n- составление и работа с  тестовыми наборами;\n- работа в системе JIRA и т.д;\n- работа с инструментом разработчика DevTools;\n- работа с базами данных и и изучение языка запросов SQL;\n- создание таблиц с помощью языка запросов SQL;\n- главные запросы в базы данных;\n- клиент-сервисная архитектура;\n- НТТР и HTTPS протоколы;\n- что такое cache и cookie;\n- основные методы HTTP;\n- SOAP протокол;\n- REST архитектура;\n- тестирование API с помощью Postman;\n- нагрузочное тестирование;\n- тестирование с помощью Jmeter;\n- работа и практика в системе контроля версии кода Git;\n- регистрация и работа в GitHub;\n- работа в командной строке;\n- особенности тестирования мобильных приложений;\n- тестовые и практические задания по блокам, для проверки усвоенного материала;\n- составление привлекательного резюме для Тестировщика;\n- разбор реального резюме Тестировщика без опыта работы;\n- разбор реальных вакансий на позицию Тестировщика;\n- ошибки при прохождении резюме;\n- советы для тестировщика;\n\n\nКурс постоянно обновляется дополнительными теоретическим и практическим материалом, тестовыми и практическими заданиями. Надеюсь, что материалы из него помогут вам изменить свою жизнь и стать хорошими тестировщиками!!!\nПо прохождению курса вы получите огромный багаж практических и теоретических знаний, а так же вы получите Сертификат об окончании курса!\nНеобходимо учитывать, что для успешного прохождения курса необходимо самостоятельное обучение и весь материал, который вы в нем найдете - это структурированное и сжатое представление материал, который будет присутствовать на собеседованиях и в практике тестировщика.\nОбязательно выполняйте все практические занятия и тестовые задания, а так же настоятельно рекомендуется конспектировать видео, для дальнейшего повторения и подготовки к собеседованиям.\nПри должном терпении и усилиях, которые вы приложите при обучении незамедлительно дадут вам хорошую теоретическую и практическую базу для прохождения собеседования и будущей работе по профессии.\nПо любым вопросам и пожеланиям  обращайтесь, пожалуйста, в личные сообщения и я буду рад помочь ответить на них.\nЕсли вы вдруг обнаружите в моих видео орфографические ошибки в слайдах, заранее прошу за них прощение) Все мы люди)\nУспехов в начинаниях. Дорогу осилит идущий!",
      "target_audience": [
        "Планируешь сменить профессию и начать свою карьеру в IT!",
        "Задумался о том: как стать тестировщиком?",
        "Встал перед выбором учиться на платных курсах или освоить профессию самостоятельно",
        "Ищешь качественный материал для обучению по профессии QA Engineer",
        "Работаешь тестировщиком и решил прокачать свои скилы"
      ]
    },
    {
      "title": "Mastering Integration Testing: From Basics to Execution",
      "url": "https://www.udemy.com/course/integration-testing-from-basics-to-execution/",
      "bio": "Unlock the Power of Seamless Software Integration with Comprehensive Testing Strategies",
      "objectives": [
        "Basics of Integration Testing: Understand the role and significance of integration testing in software development.",
        "Integration Testing Approaches: Explore Big Bang, Top-Down, Bottom-Up, and Hybrid methods.",
        "Setting Up a Testing Environment: Learn to configure tools and frameworks for effective integration testing.",
        "Designing Test Cases: Develop skills to create comprehensive test cases focusing on component interaction.",
        "Executing Tests: Master techniques to execute, identify issues, and analyze test results."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Software Development: Familiarity with software development concepts is recommended.",
        "Understanding of Testing Principles: Prior experience with unit and system testing is helpful but not mandatory.",
        "Computer with Internet Access: Necessary for accessing course materials and practicing integration testing techniques.",
        "Willingness to Learn: A strong desire to improve testing skills and understand the integration process is essential."
      ],
      "description": "In the fast-paced world of software development, ensuring that individual components work together seamlessly is crucial for delivering high-quality applications. Integration Testing plays a pivotal role in this process, bridging the gap between unit testing and system testing to validate that all components function as expected when combined.\nThis course, Mastering Integration Testing: From Basics to Execution, offers you a complete guide to understanding and implementing integration testing effectively. Whether you’re a developer, tester, or QA professional, this course will equip you with the knowledge and practical skills needed to excel in integration testing, ensuring that your software products meet the highest standards of quality.\nWhat You Will Learn:\nIntroduction to Integration Testing: Grasp the fundamentals of integration testing and understand its importance in the software development lifecycle.\nUnderstanding Integration Testing Approaches: Explore various integration testing approaches, including Big Bang, Top-Down, Bottom-Up, and Hybrid methods, and learn when and how to apply each.\nSetting Up an Integration Testing Environment: Learn how to set up a robust testing environment using the latest tools and frameworks, along with best practices to maximize effectiveness.\nDesigning and Writing Integration Test Cases: Gain the skills to design and write test cases that thoroughly examine interfaces, data flow, and component interaction.\nExecuting and Analyzing Integration Tests: Master the execution of integration tests, identify common issues, and learn how to analyze results to ensure the proper functioning of integrated components.\nWho Should Enroll:\nSoftware Developers looking to enhance their testing skills and ensure their components work flawlessly with others.\nQA Engineers aiming to deepen their knowledge in integration testing and improve their ability to identify and resolve integration issues.\nTesters and Test Managers who want to implement more effective integration testing strategies in their projects.\nStudents and Enthusiasts eager to learn about integration testing and its application in real-world software development.\nCourse Requirements:\nBasic knowledge of software development and testing principles.\nFamiliarity with unit testing and system testing concepts is beneficial but not mandatory.\nWhy This Course?\nComprehensive Curriculum: Covers everything from the basics of integration testing to advanced execution strategies.\nHands-On Learning: Practical examples and exercises to help you apply integration testing techniques in real projects.\nExpert Guidance: Learn from industry professionals with years of experience in software testing and quality assurance.\nFlexible Learning: Study at your own pace with lifetime access to course materials and resources.\nJoin Now and Elevate Your Testing Skills!\nDon’t miss the opportunity to master integration testing and contribute to the delivery of reliable, high-quality software. Enroll today and take the next step in your software testing journey.\n\n\nEnroll in Mastering Integration Testing: From Basics to Execution today and start building the skills that will set you apart in the world of software development!\nFAQs:\nQ: Do I need prior experience in testing to take this course? A: While some familiarity with software development and testing concepts is beneficial, this course is designed to be accessible to beginners as well.\nQ: Will I have access to course materials after completion? A: Yes! You will have lifetime access to all course materials, allowing you to revisit and review the content whenever you need.\nQ: What if I have questions during the course? A: Our instructors are here to help! You can reach out to them through the course platform with any questions or concerns you have.",
      "target_audience": [
        "Software Developers: Looking to ensure their components integrate seamlessly with others.",
        "QA Engineers: Aiming to deepen their expertise in integration testing and improve quality assurance processes.",
        "Testers and Test Managers: Interested in implementing more effective integration testing strategies.",
        "Students and Enthusiasts: Eager to learn about integration testing and its application in real-world software projects.",
        "Project Managers: Seeking to understand integration testing to better oversee software development projects."
      ]
    },
    {
      "title": "Selenium Java Multi-Threading Framework Design & Development",
      "url": "https://www.udemy.com/course/selenium-java-multi-threading-framework-design-development/",
      "bio": "Execute selenium tests in parallel using Java Multi-Threading framework with Enhanced Reporting",
      "objectives": [
        "Java Selenium Multi-threading framework design and development",
        "Synchronization Techniques",
        "Enhanced Reporting",
        "Scenario based Test case development",
        "Test data design in Multi-Threading environment",
        "Soft and Hard Assertions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course",
          "Introduction to parallel testing",
          "Understanding ThreadLocal Class",
          "Implementing parallel Test Execution",
          "Getting Started with framework design",
          "Implementing Test Reporting",
          "Synchronization",
          "WebElement Operations",
          "Assertions",
          "Page Classes",
          "Page Classes Continued...",
          "Test case development",
          "Test data design",
          "ScreenShot",
          "Page wise reporting"
        ]
      },
      "requirements": [
        "Java Basics",
        "Selenium Basics",
        "TestNG Basics"
      ],
      "description": "Complete A to Z course for learning the Selenium Framework Design and Development in Multi-Threading environment to executes tests in PARALLEL\nAbout me : I have been working in IT-Software Testing industry from last 15 years and i have put all those experience and industry standard knowledge into this course. The course filled with industry standard testing approach, implementation and examples.\nThis course below topics and more\nFramework design and Development using Java Multi-Threading Concept\nSynchronization Techniques\nEnhanced Reporting\nScenario based Test case development\nTest data design in Multi-Threading environment\nSoft and Hard Assertions",
      "target_audience": [
        "Software Development Test Engineer",
        "Quality Assurance looking to learn Automation framework Development"
      ]
    },
    {
      "title": "Essentials of Software Testing and Quality Assurance",
      "url": "https://www.udemy.com/course/essentials-of-software-testing-and-quality-assurance/",
      "bio": "Essentials of STQA course is for BCA, MCA students",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Software Quality and SQA",
          "Fundamental of Software Testing",
          "Test Administration - Test Plan and Test Cases",
          "Core Techniques - White Box testing",
          "Core Techniques - Black Box testing",
          "Uses of Software Testing Types",
          "Defect Management Process",
          "Case Study",
          "Overview"
        ]
      },
      "requirements": [
        "As such basics of Software Engineering"
      ],
      "description": "This course have been developed looking at the world over requirement by the students. The area of Software Testing has acquired wider horizon and significance. This course has emphasis on a career in testing and value to practitioners. One needs to provide a programmatic and practical view of testing, together with the right balance of people, process and technology.\nA process of analyzing a software item is to detect the differences between existing and required conditions (that is defects/errors/bugs) and to evaluate the features of the software item. Testing is the process of evaluating a system or its component(s) with the intent to find whether it satisfies the specified requirements or not. Testing is executing a system in order to identify any gaps, errors, or missing requirements in contrary to the actual requirements. In the IT industry, large companies have a team with responsibilities to evaluate the developed software in context of the given requirements. Quality Assurance is helps organizations in instilling confidence in customers to buy their products or services. And in this course is focus on Quality Assurance concepts too.\nThis course is not only to help students to understand the testing concept but also help to understand the state-of-practice in software development process like work together in developing, testing and delivering products to a global customer base",
      "target_audience": [
        "Anyone who wish to learn the basics of Software Testing and Quality Assurance concepts",
        "Students pursuing Bachelors and Masters courses"
      ]
    },
    {
      "title": "Teste de Software Manual: Do Planejamento à Execução",
      "url": "https://www.udemy.com/course/teste-de-software-manual-do-planejamento-a-execucao/",
      "bio": "Adquira uma base sólida em testes de software e práticas ágeis",
      "objectives": [
        "7 Princípios do Teste de Software",
        "A mentalidade e o papel de um QA (Analista de Qualidade) em um time ágil de desenvolvimento.",
        "Diferentes metodologias ágeis utilizadas em projetos de desenvolvimento de software.",
        "Como aplicar as técnicas de teste em cenários reais e em diferentes contextos de desenvolvimento.",
        "Como colaborar efetivamente com desenvolvedores e outros membros do time ágil.",
        "Práticas para melhorar a eficiência do processo de teste e a qualidade do software entregue.",
        "Aprenda sobre operadores lógicos e como eles ajudam na criação de validações",
        "Aprenda como utilizar o hack de Storytelling para analisar projetos de forma rápida e efetiva",
        "Aprenda a escrever seus testes com Gherking indo do básico ao avançado",
        "Aprenda a planejar e executar testes com excel",
        "Aprenda a abrir, gerenciar e controlar defeitos"
      ],
      "course_content": {
        "7 Principios do Teste de Software": [
          "Apresentação",
          "Teste identificar a presença de defeitos",
          "Teste exaustivo é impossível",
          "Testes devem iniciar o quanto antes",
          "Agrupamento de defeitos",
          "Paradoxo do Pesticida",
          "Teste, dependendo do contexto",
          "Ilusão de ausência de defeitos"
        ],
        "Metodologias ágeis": [
          "Apresentação",
          "Lean",
          "Kanban",
          "Extreming Programing",
          "Scrum"
        ],
        "Teste de Software no Ágil": [
          "Apresentação",
          "Modelo Tradicional",
          "Manifesto Agíl",
          "Tradicional vs Agíl",
          "Testador agíl uma nova era",
          "Estratégia de teste no ágil",
          "Processo de teste no ágil",
          "O testador ágil",
          "Automação no ágil",
          "Integração Continua"
        ],
        "Estratégia e tipos de teste": [
          "Apresentação",
          "Estratégias de Teste de Software",
          "Testes funcionais, não funcionais e manutenção",
          "Testes Funcionais",
          "Testes não funcionais",
          "Testes de manutenção"
        ],
        "Padrões e antipadroes": [
          "Pirâmide de Teste",
          "Cupcake, anti padrão Pirâmide de Teste",
          "IceScream, anti padrão Pirâmide de Teste",
          "Quadrante de Teste Ágil"
        ],
        "Operadores Lógicos": [
          "Apresentação",
          "Porque Aprender Operadores Lógicos",
          "Operadores Atribuição",
          "Operadores Aritméticos",
          "Operadores Condicionais",
          "Operadores Relacionais",
          "Operadores Lógicos"
        ],
        "Arquitetura de Sistemas": [
          "Apresentação",
          "Arquitetura de sistema em 3 camadas",
          "Requisição HTTP",
          "Arquivo JSON",
          "Arquivo XML",
          "API Rest",
          "API GraphQL"
        ],
        "Upstream: Aprenda como produto são criados": [
          "Apresentação",
          "upstream e downstream",
          "user story",
          "o que é regra de negócio",
          "critérios de aceite",
          "prioridade",
          "arvore de negocio"
        ],
        "Prática | Upstream": [
          "Prática | Apresentação de projeto e escolha do template",
          "Prática | analise inicial",
          "Prática | proposta de desafio"
        ],
        "Gherking do básico ao Avançado": [
          "Apresentação",
          "O que é gherking",
          "Keywords básica",
          "Keyword intermediaria",
          "Keywords avançadas",
          "Prática de Gherking"
        ]
      },
      "requirements": [
        "Nenhum pré requisito é necessário para este curso"
      ],
      "description": "Bem-vindo ao nosso curso \"Teste de Software Manual: Do Planejamento à Execução\" - um lugar onde você mergulhará em um mundo emocionante de qualidade e eficiência!\nQueremos compartilhar com você os 7 princípios fundamentais do teste de software e mostrar como eles são cruciais para garantir um produto de qualidade. Entenda o papel de um QA em um time ágil e como colaborar harmoniosamente com desenvolvedores e colegas do time.\nVamos explorar diversas metodologias ágeis que são usadas em projetos de desenvolvimento de software, dando a você as ferramentas certas para aplicar as técnicas de teste em diferentes contextos de desenvolvimento.\nAlém disso, vamos revelar os segredos por trás dos operadores lógicos e como eles podem ser poderosos aliados para criar validações efetivas. E que tal aprender o hack de Storytelling para analisar projetos de forma rápida e eficiente? Sim, isso também está no pacote!\nVocê não só aprenderá a escrever testes com Gherkin, indo do básico ao avançado, mas também a planejar e executar testes com excelência. E para completar, vamos ensinar como abrir, gerenciar e controlar defeitos para manter o projeto nos trilhos.\nEntão, se você está pronto para impulsionar sua carreira no universo do teste de software e se tornar um membro valorizado em qualquer equipe ágil, junte-se a nós agora mesmo! Estamos ansiosos para embarcar nesta jornada empolgante com você!",
      "target_audience": [
        "Estudantes de tecnologia: Alunos que estão cursando faculdades ou cursos técnicos na área de tecnologia, engenharia de software ou áreas afins, interessados em aprender os princípios e práticas essenciais de teste de software.",
        "Profissionais em início de carreira: Pessoas que estão começando suas carreiras na área de testes de software e desejam adquirir uma base sólida de conhecimentos para impulsionar seu crescimento profissional.",
        "Desenvolvedores e QA em transição: Profissionais de desenvolvimento de software que estão buscando migrar para a área de teste de software ou assumir funções relacionadas à garantia de qualidade.",
        "Analistas de Teste em busca de aprimoramento: Analistas de Teste que desejam aprofundar seus conhecimentos e habilidades em testes de software, incluindo a exploração de novas técnicas e práticas.",
        "Gerentes de Projetos e Líderes de Equipe: Profissionais responsáveis por liderar equipes de desenvolvimento de software e que desejam compreender melhor o processo de teste e suas práticas.",
        "Qualquer pessoa interessada em teste de software: Qualquer pessoa que tenha interesse em aprender sobre os fundamentos do teste de software, independentemente de sua formação ou área de atuação."
      ]
    },
    {
      "title": "Mastering Jest Testing with TypeScript and Node.js",
      "url": "https://www.udemy.com/course/mastering-jest-testing-with-typescript-and-nodejs/",
      "bio": "Build solid testing skills with Jest, TypeScript, and Node - from setup to mocks, spies, and production error handling",
      "objectives": [
        "Set up and configure Jest for a TypeScript-based Node.js project",
        "Write unit and integration tests using Jest’s core methods and matchers",
        "Use test doubles such as mocks, stubs, fakes, and spies effectively",
        "Implement and test robust error handling for real-world applications"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript and TypeScript. You should be comfortable with functions, variables, and basic types)",
        "Familiarity with Node.js and using the terminal/command line",
        "A code editor like VS Code and Node.js installed on your machine",
        "No prior testing experience is required — we'll start from the ground up!"
      ],
      "description": "This course is your complete guide to mastering testing in modern Node.js applications using Jest and TypeScript. Whether you're testing utility functions or handling complex service errors, this course walks you through everything with practical examples and real-world patterns.\nWe begin with setting up a Node.js project from scratch, configuring TypeScript and Jest, and writing your first test. You’ll learn the structure of test files, naming conventions, and how to run and debug specific tests. We'll use the __tests__ folder and also explore organizing tests next to modules.\nYou’ll work with core Jest methods and patterns:\nTest Structuring: describe(), it(), test()\nAssertions & Matchers: expect(), .toBe(), .toEqual(), .toHaveLength(), .toBeTruthy(), .toBeFalsy()\nTesting Concepts: System Under Test (SUT), Arrange-Act-Assert (AAA)\nLifecycle Hooks: beforeEach(), afterEach(), beforeAll(), afterAll()\nWe’ll write tests for:\nUtility functions: add(), subtract(), isEven(), createUser(), createJwtToken()\nClass methods: Calculator.add(), subtract(), isPositive()\nThen you'll dive into test doubles:\nDummy, Stub, Fake, Mock, and Spy\nUse of jest.fn(), jest.mock(), jest.spyOn(), mockReturnValue(), mockResolvedValue(), mockImplementation()\nMock and spy reset methods: jest.clearAllMocks(), jest.resetAllMocks(), jest.restoreAllMocks()\nAdvanced error handling includes:\nDeclarative style: expect(...).rejects.toThrow()\nImperative style: try/catch, fail('Should have thrown an error')\nEnterprise-level practices using:\nCustomError.throwError(), AppCodes, HttpCodes, CustomLogger\nYou’ll test real-world scenarios like:\nMocking services (UserRepository, NewsletterService)\nValidating error responses and logging\nTesting invalid inputs and API failure cases\nBy the end, you’ll confidently write robust, clean, and well-structured tests for any Node.js TypeScript project.",
      "target_audience": [
        "This course is perfect for JavaScript or TypeScript developers who want to learn how to write high-quality, automated tests using Jest in Node.js projects. Whether you're a beginner to testing or a developer who’s written a few tests but never felt confident with mocking, spying, or handling real-world errors — this course is for you."
      ]
    },
    {
      "title": "Web automation using Selenium RC from Scratch",
      "url": "https://www.udemy.com/course/web-automation-using-selenium-rc-from-scratch/",
      "bio": "This course will help you in learning advanced techniques for testing web applications with Selenium RC API.",
      "objectives": [
        "By the end of this course you will give have great understanding Selenium",
        "How to use Selenium to test web based application",
        "This tutorial will give you great understanding Selenium, and after completing this tutorial, you will be at intermediate level of expertise from where you can take yourself to higher level of expertise."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Configuring Selenium RC in Eclipse",
          "Starting and Stopping Selenium Server",
          "Starting and Stopping Selenium Client",
          "Running Sample Selenium code using SeleneseTestBase"
        ],
        "Xpath": [
          "FireBug and Firepath",
          "Xpath and their usage with Selenium RC",
          "Xpath Function,Absolute and Relative Xpaths",
          "Xpath finding Links, Buttons, Input box, Radio buttons, Checkbox"
        ],
        "Selenium RC Functions": [
          "Handling TextBox,Hyperlink & Checkboxes",
          "Handling Button & Radio Button",
          "Xpath for dropdown list",
          "Checking if an element/object/text is present or not",
          "Reading title of page",
          "Slowing down the script execution speed",
          "Capturing Screenshot",
          "Closing brosers and killing sessions",
          "Automating CreateBug TestCase"
        ],
        "Handling Window": [
          "Extracting Window Name,Title with Selenium",
          "Handling popups, performing actions",
          "Handling JavaScript Prompt,Confirmation",
          "Handling JavaScript Alert",
          "Executing JavaScript"
        ],
        "Working with WebTables": [
          "Finding number of rows in Webtable",
          "Finding number of columns in Webtable",
          "Extracting Cell value"
        ],
        "Selenium RC Usage": [
          "Integration with TestNG",
          "Load Testing with TestNg & Selenium",
          "Running the Test Parallely in Firefox & IE",
          "Executing Selenium Script through Ant"
        ],
        "DataDriven Framework": [
          "Reading Data from config.properties file",
          "Apache POI - the Java API for Microsoft Documents",
          "Running the TestCase using DataDriven Frame Work"
        ],
        "Download": [
          "All Lecture Source Code for Download"
        ]
      },
      "requirements": [
        "The tutorials are designed for beginners with little or no automation experience. Everything is taught from scratch!",
        "Before proceeding with this tutorial, you should have a basic understanding of Java programming language, text editor and execution of programs, etc."
      ],
      "description": "Selenium Remote Control (RC) is a test tool that allows you to write automated web application UI tests in any programming language against any HTTP website using any mainstream JavaScript-enabled browser.\nSelenium Remote Control is great for testing complex AJAX-based web user interfaces under a Continuous Integration system. It is also an ideal solution for users of Selenium IDE who want to write tests in a more expressive programming language than the Selenese HTML table format.\nIn this training course, attendees will learn the following\n1. Selenium RC architecture\n2. How to start/stop Selenium client/server\n3. How to use Selenese TestBase class\nXpaths\n1. What are Xpaths\n2. How to construct absolute xpath as well as relative xpath\n3. Different Xpath functions\nSelenium RC\n1. Common Selenium RC functions\n2. click(), open(), waitForPageToLoad().\n3. Slowing down the execution speed\n4. Closing and killing the browser.\nWorking with Web Tables\n1. Finding number of rows and column in web table\n2. Extracting the value from table\n3. Handling dynamic web table\nWindow Handling\n1. Extracting windows IDs with selenium\n2. Tabbed browsing with selenium\n3. Handling Java Script popups\nMouse & Keyboard action\n1. Performing the mouse action such as mouseUp(), mouseDown() etc\n2. Performing the Keynoard action such as KeyPress(), KeyUp(), metaKeyDown() etc\nAnd source code shown as part of video lecture will be provided for download",
      "target_audience": [
        "This tutorial is designed for Software Professionals, who are willing to learn Selenium RC in simple and easy steps",
        "All the manual tester who are looking for the automation knowledge",
        "Developer/Automation Testers who are developing the automation framework for the web based application"
      ]
    },
    {
      "title": "How to use Actions class in Selenium WebDriver 4 with Java",
      "url": "https://www.udemy.com/course/how-to-use-actions-class-in-selenium-webdriver-4-with-java/",
      "bio": "Quickly learn how to perform mouse and keyboard interactions using Actions Class from Selenium WebDriver 4",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Scope of the course",
          "Pre Requisites",
          "Resources"
        ],
        "Mouse Interactions": [
          "Outline",
          "Drag And Drop, Pause, Left click, Double Click, Right Click(Context Click)",
          "Scroll to an Element, Move to an Element"
        ],
        "Keyboard Interactions": [
          "Outline",
          "keyUp, keyDown, sendkeys",
          "Reset Input State"
        ],
        "Self Assessment": [
          "Exercise - Use Actions class API to select multiple items in a multi select list",
          "Solution"
        ]
      },
      "requirements": [
        "Basic knowledge of Java and Selenium"
      ],
      "description": "Actions Class in Selenium WebDriver is a utility class that enables you to perform complex user interactions such as mouse and keyboard events. It allows you to simulate actions like double-clicking, right-clicking, holding down a key, etc. using the advanced user interaction API.\nYou can create a chain of actions using Actions Class. You can then call the perform() method to execute the series of actions.\nYou can perform keyboard interactions using Actions Class by using methods like keyDown(), keyUp(), and sendKeys(). These methods allow you to press, release, and send keystrokes to an element or the current mouse location.\nYou can perform mouse interactions using Actions Class by using methods like click(), clickAndHold(), contextClick(), doubleClick(), moveToElement(), and release(). These methods allow you to perform various mouse actions on an element or the current mouse location.\nYou can perform drag and drop using Actions Class by using the dragAndDrop() or dragAndDropBy() methods. These methods allow you to click and hold an element, move it to another element or a given offset, and release it.\nYou can self assess your understanding of Actions Class in Selenium WebDriver by taking online quizzes, practicing with sample code, or reading more tutorials and documentation.",
      "target_audience": [
        "This course is for the automation engineers, who have just started to learn “how to automate web applications using Selenium WebDriver with Java?”"
      ]
    },
    {
      "title": "Coded UI Testing with Visual Studio 2013",
      "url": "https://www.udemy.com/course/cuit-with-vs2013/",
      "bio": "Learn Coded UI testing from ground up and understand the basics much stronger than ever",
      "objectives": [
        "Start understanding different testing types of visual studio",
        "How to automate application with Coded UI testing record and playback",
        "How to automate application with Coded UI hand coding",
        "How to automate web application with Coded UI",
        "Mechanism used to identify controls in Coded UI Testing"
      ],
      "course_content": {
        "Coded UI Testing Introduction": [
          "Introduction to Visual Studio Testing (Part 1)",
          "Introduction to Visual Studio Testing (Part 2)",
          "Introduction to Coded UI Testing",
          "Coded UI Record and Playback",
          "Understanding UIMaps in Coded UI Testing",
          "Adding Assertions in Coded UI Testing",
          "Data Driven Testing with Coded UI",
          "Search and Filter properties in Coded UI",
          "GetProperty and SetProperty in Coded UI"
        ],
        "Hand coding Windows Application with Coded UI": [
          "Hand coding in Coded UI Testing (Part a)",
          "Hand coding in Coded UI Testing (Part b)",
          "Hand coding Coded UI Test with UITestControl",
          "Getting all controls of application using UITestControlCollection class",
          "Record and playback of Web Application with Coded UI"
        ],
        "Hand coding Web Application with Coded UI": [
          "Hand coding of Web Application with Coded UI",
          "Understanding why and how Parent-child relation works in Coded UI",
          "Creating custom reusable methods for controls",
          "Creating custom reusable methods for controls (Advanced)",
          "Working with existing browser, clearing cache and cookies in Coded UI"
        ],
        "Coded UI Testing features": [
          "Assertions in Coded UI Testing",
          "Exception/Error handing in Coded UI Testing",
          "Types of Test Attributes in Coded UI Testing",
          "Running multiple test in specific order in Coded UI using ordered test",
          "Using TestContext to identify the state of Test in CUIT",
          "Wait For Control in Coded UI Testing",
          "Cross Browser Testing with Coded UI Testing",
          "Data Driven Testing with Excel using CUIT (Part 1)",
          "Data Driven Testing with Excel using CUIT (Part 2)",
          "Executing JavaScript in Coded UI",
          "Creating HTML Report with Diagnostics"
        ]
      },
      "requirements": [
        "One should have good basic knowledge in C# is must",
        "Understanding in Selenium automation will help identification of controls"
      ],
      "description": "Coded UI video series is designed to cover all the nitty-gritty details one would ever need for automating their application with Visual studio Coded UI Testing.\nThis video series will start from Introduction through advanced level hand-coding of Coded UI Testing for all the technologies like MSAA, Web and UITestControl (Generic) by breaking down the auto-generated UIMap class file and creating custom class files which help to have more handle over the Coded UI controls and code execution. This course will cover some of the most important topics of CUIT like\nRecord and playback of CUIT\nHand coding CUIT for Windows application (MSAA)\nUnderstanding windows application\nWorking with Windows application\nAutomating which element to interact with\nHand coding CUIT for a Web application (Web)\nHand coding CUIT for generic applications (UITestControl)\nData-driven testing with CUIT\nAssertions with CUIT\nCross-browser testing with CUIT by using Selenium component to work with\nFirefox\nChrome\nInternet Explorer\nWorking with Diagnostics reports\nWorking with various UI Elements\nWorking with controls such as\nInput box\nText box\nCheck box\nOption button\nWriting custom controls to perform UI operation\nWorking with C# in better fashion with VIsual studio 2015\nWriting all the code in a reusable way to create a framework for test codes\nPerforming reporting\nAdding it with CI/CD pipeline\nFaster handling of error in coded UI test",
      "target_audience": [
        "This course is designed for both testers and developers",
        "As this course involves more coding, its best for automation test engineers"
      ]
    },
    {
      "title": "Appium Master Classes (Selenium 3.0)",
      "url": "https://www.udemy.com/course/appium-master-classes/",
      "bio": "A-Z Guide for mobile automation using appium",
      "objectives": [
        "After completion of this course, you will be mastered in Mobile Automation Testing for IOS and Android which in return gives you HIGH PAYING JOBS.",
        "After completion of this course, you will be able to automate (Native,Hybrid,Web) apps"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of java and selenium",
        "A computer with internet connection",
        "It would be good, if you have real Android & IOS device for executing the code"
      ],
      "description": "Welcome to Appium Master classes!!!!\nAppium is already started getting popular in the market for mobile automation testing.\nThe main reason why appium is popular in the market because it is an open source and free open discussion in communities to get quick solutions.\nThe highlight of Appium is that this supports both Web and mobile Platforms and works on both Android and IOS Platforms.\nIn present scenario Mobile market is growing / flourishing tremendously therefore there is a lot of demand for quality mobile application testers across the world.\nSo bringing a New Course \" APPIUM- Mobile Automation testing\" which is the most popular mobile application testing tool in the Current Market.\nThis course is specially designed for all those students, who wants to start testing carrier from scratch.\nI always provide real time examples to get proper understanding of automation steps.\nUnique features which makes this course different from other courses available in the market :-\n- Video recording of your test.- Capture the screen shot when test fails.- Best possible ways to do mobile screen mirror to laptop.- Run your test on multiple devices (Mobile) using selenium grid which support by appium.- For most of the sections, will provide text documents for off-line reading. - Install and test IOS application on windows using VM Ware.(You can save around 2000$, No need to buy Mac/Apple for mobile testing )",
      "target_audience": [
        "All those student how are intersted for mobile automation can take this course",
        "This Appium course is for Software Testers to get knowledge of automation with no prior automation experience"
      ]
    },
    {
      "title": "SDET QA Interview Mastery: From Nervous to Nailed It!",
      "url": "https://www.udemy.com/course/sdet-qa-interview-mastery-from-nervous-to-nailed-it/",
      "bio": "Find out inside information on CVs, technical tests and interview questions from The QA Director himself!",
      "objectives": [
        "Learn what we employers look for in CVs and how to stand out.",
        "Get inside information, tips and hints on our interview processes.",
        "Go through and practise actual employer technical tests.",
        "Learn about commonly asked cultural, behavioral and QA interview questions.",
        "All the content is provided by The QA Director himself"
      ],
      "course_content": {
        "Introduction & CVs": [
          "Introduction",
          "Introduction to SDET Interviews"
        ],
        "Technical Skills Assessment": [
          "Practise Technical Tests"
        ],
        "Interview Questions": [
          "Test Framework",
          "Cultural/Behavioral/QA Interview Questions"
        ]
      },
      "requirements": [
        "Have some basic C#/Java experience"
      ],
      "description": "Master the SDET Interview: From Nervous to Nailed It!\nFeeling anxious about your upcoming SDET interview? You're not alone! This comprehensive Udemy course is designed to transform you from interview jitters to confident success. We'll equip you with the knowledge, strategies, and practice you need to showcase your skills and land your dream SDET role.\nNo more scrambling to remember testing concepts or wondering what behavioral questions they'll throw your way. Our course dives deep into the complete SDET interview journey:\nDemystify the Process: Understand the different stages of an SDET interview, from phone screening to technical assessments. Learn what interviewers are looking for and how to prepare effectively.\nSharpen Your Technical Edge: Brush up on core software testing concepts, automation frameworks (Selenium), API testing fundamentals, and testing methodologies. We'll also guide you through common coding challenges faced in SDET interviews.\nMaster the Soft Skills: Communication is key! Learn how to effectively communicate test results, collaborate with developers, and showcase your problem-solving and analytical thinking skills. We'll explore Agile and DevOps principles to ensure you're interview-ready for any development environment.\nDominate the Mock Interview Arena: Practice makes perfect! We'll provide a comprehensive bank of common SDET interview questions, including both technical and behavioral scenarios. But it doesn't stop there! Our interactive mock interview sessions with personalized feedback will hone your responses and build your confidence.\nNegotiate Your Worth: Don't leave money on the table! This bonus section equips you with the knowledge to understand SDET salary ranges, prepare strong arguments for your value, and navigate salary negotiation with confidence.\nMore than just a course, this is your personalized SDET interview success toolkit. Downloadable cheat sheets provide quick reference for key concepts, and curated resources offer links to additional interview questions and answer templates.\nThis course is designed for aspiring and experienced SDETs who want to ace their next interview. Enroll today and transform your interview anxiety into interview mastery!",
      "target_audience": [
        "Senior Automation Test Engineers",
        "Junior Automation Test Engineers Looking to Move To Senior Positions",
        "QA engineers"
      ]
    },
    {
      "title": "Complete Java for Selenium & Appium",
      "url": "https://www.udemy.com/course/complete-java-for-selenium-appium/",
      "bio": "From Java from Beginner, and start your carrier with widely used programming language",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Java Basics": [
          "Install Java / Eclipse",
          "Java First Program",
          "Java DataTypes",
          "While & Do-While Loop",
          "For Loop",
          "Else If Statement",
          "Array Part 1",
          "Arrays Part 2",
          "Java Class and Objects Part 1",
          "Java Class and Objects Part 2",
          "Java Constructor",
          "For_Each Loop",
          "ArrayList",
          "HashMap",
          "Interfaces"
        ]
      },
      "requirements": [
        "A computer - Windows System with basic configuration",
        "Nothing else is needed, all will be coveemred in course how to download softwares and install thh"
      ],
      "description": "JAVA is a technology that allows Programmer for software design and written just once and run on a variety of real\n\ncomputers, Java can be used to create complete applications that may run on a single computer or be\ndistributed among servers and clients in a network.\nIf you’re new to programming and want to enter either of these fields, this course is a great place to get started.\nJava is pre-requesties also in Testing carrier.\nLearning popular web automation tool:SELENIUM and Mobile Automation tool:APPIUM requires Java.\nThis course is designed so it prepares you for learning these tools, it covers all conepts for Java\nAny developer/tester who want to start his carrier in IT industry, this course is recommended",
      "target_audience": [
        "Programmers / Automation Testers who want to start there carrier in IT industry",
        "Manual tester want to move for Automation Testing tools",
        "Anyone who wants to make a career in programming",
        "Beginners – if you’ve never coded before, you can learn Java step by step",
        "No previous programming experience is required"
      ]
    },
    {
      "title": "Learn Test Automation Fundamentals using Boozang",
      "url": "https://www.udemy.com/course/advanced-test-automation-using-boozang/",
      "bio": "Learn using interactive test scenarios to automate testing for any web application",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding of data and software",
        "Basic understanding of HTML",
        "Knowledge in Javascript is helpful but not required"
      ],
      "description": "This course teaches the fundamentals of Test Automation using the Boozang tool. The Lab has a number of common test automation problems and we will go though them one by one to teach you how to solve different test automation challenges. We will cover timing of elements, data handling, form fills, data provisioning, elements selectors, on-screen annotations, and how to incorporate Javascript into your tests.\nInstead of recording long end-to-end tests, the focus of this course is to create short, highly reusable, data-driven tests that can be stitched together to handle complex test automation end-to-end flows.\nThe user can sign up for a free trial on the Boozang homepage and follow along in the exercises. In the end of the course, the student will have enough knowledge to be able to create a test that can play a simple game. The Lab is Open Source and can be used for demos of the test automation platform of your choice.\nNormally, doing test automation in tools like Selenium requires programming and has a long learning curve.\nThe student should be able to complete the course in a couple of hours and be able to create automated tests for fairly complicated web sites or applications without any prior knowledge of programming or test automation tools.\nLet us know how we can improve this course at: udemy@boozang.com and let us know what we can do to make this better. Looking forward hearing from you!",
      "target_audience": [
        "Software developers and testers that want to learn about the Boozang platform",
        "Quality assurance engineers and Software testers",
        "Beginners who want to learn test automation"
      ]
    },
    {
      "title": "Software Testing with AI Copilot – Expert Certified",
      "url": "https://www.udemy.com/course/software-testing-with-ai-copilot-expert-certified/",
      "bio": "Master AI-Driven Test Automation: Self-Healing, RCA, API, and Visual Testing with ContextQA",
      "objectives": [
        "Master AI-driven test automation, including self-healing, RCA, and data-driven testing.",
        "Integrate and automate API, Slack, and JIRA workflows seamlessly.",
        "Create and manage test cases, plans, and environments effectively.",
        "Create and manage test cases, plans, and environments effectively."
      ],
      "course_content": {
        "Introduction": [
          "Instructor Message"
        ],
        "Setup / Getting Started with ContextQA": [
          "Getting Started – Sign Up & Sign In",
          "Sign Up with ContextQA",
          "Sign In with ContextQA"
        ],
        "Automate with AI Agent": [
          "Automate with AI for Seamless Test Case Management",
          "Automate with AI Agent (In-Sprint Automation)",
          "Clear Backlog Using Excel Upload",
          "Automate Backlogs using Excel"
        ],
        "Organize": [
          "Managing Test Suites for Sprint & Backlogs",
          "Test Suite In ContextQA"
        ],
        "Design": [
          "Happy Path Test Design with AI",
          "Designing More Test Case Using Test case Recommendation"
        ],
        "Test Plan": [
          "Parallel Execution on Multiple Nodes & Browsers",
          "Create and execute test plans effectively"
        ],
        "Reports": [
          "Monitor Test Execution & Track Results",
          "Generate and download detailed test reports"
        ],
        "Intelligence Insights – Identifying Gaps in User Activity": [
          "Gap Analysis for User Activity Coverage",
          "Bridging Gaps in User Activity Coverage"
        ],
        "AI Assertions – Intelligent Test Validations": [
          "Automate Test Assertions with AI",
          "AI Assertions With ContextQA"
        ],
        "Cross-Browser & Cross-Device Testing": [
          "Ensuring Seamless Performance Across Platforms",
          "Cross-Browser Testing With ContextQA",
          "Cross-Device Testing With ContextQA"
        ]
      },
      "requirements": [
        "Basic understanding of software testing concepts is recommended, but not mandatory.",
        "No programming experience needed—ContextQA's no-code platform handles the complexity.",
        "Familiarity with API and JIRA is beneficial but not required.",
        "A desire to learn AI-powered test automation and improve software quality."
      ],
      "description": "Transform Your Software Testing Skills with AI-Powered Automation Using ContextQA\n\n\nTraditional software testing methods are no longer sufficient to meet the demands of today’s fast-paced development cycles. This course equips you with the skills to master AI-driven test automation and become Expert Certified with ContextQA—a no-code platform that revolutionizes how QA teams automate, analyze, and maintain test cases.\n\n\nWhat You’ll Learn:\n\n\nGetting Started: Sign Up & Sign In seamlessly to start your automation journey.\nAutomate: Leverage AI for in-sprint automation and clear your testing backlog with Excel spreadsheet uploads.\nDesign: Create Happy Tests using AI to ensure flawless user experiences.\nOrganize: Manage Test Suites for Sprint-1 and Backlogs efficiently.\nTest Plan: Run tests on parallel nodes and multiple browsers for comprehensive coverage.\nExecute: Track execution status with detailed run results.\nReports: Download insightful reports in PDF format for informed decision-making.\nAI Assertions: Automate test validations with intelligent assertions to enhance accuracy.\nIntelligence Insights: Bridging Gaps in User Activity Coverage\nCross-Browser & Cross-Device Testing: Ensure seamless performance across multiple platforms.\nAccessibility & Performance Testing: Optimize usability, responsiveness, and loading speeds.\nCross-Environment Testing: Set up and manage multiple testing environments efficiently.\nAI-Powered Test Automation: Learn how AI agents assist in decision-making, auto-healing, and test case generation.\nRoot-Cause Analysis (RCA): Diagnose and debug issues faster using AI-powered root-cause analysis.\nData-Driven Testing: Master data-driven approaches for more accurate and flexible test scenarios.\nAPI and Visual Testing: Automate API tests and perform visual regression analysis with ease.\nSeamless Integrations: Integrate ContextQA with JIRA and Slack.\n\n\nWhy Enroll in This Course?\n\n\nNo-Code Automation: Eliminate the need for manual scripting with ContextQA’s intuitive interface.\nAI-Powered Insights: Identify critical test scenarios and automate decision-making.\nIndustry-Relevant Skills: Stay ahead in the market with expertise in AI-powered testing.\nCertification for Career Growth: Earn an Expert Certified credential to showcase your expertise.\n\n\nIn addition to gaining hands-on experience, this course offers practical knowledge through real-world scenarios, helping you apply AI-driven testing techniques effectively. Whether you are a QA professional or a developer, mastering ContextQA will give you a competitive edge in the evolving world of software testing.",
      "target_audience": [
        "QA professionals, test engineers, and developers seeking AI-driven test automation expertise.",
        "Engineering leaders aiming to improve testing efficiency and reduce regression cycles.",
        "Beginner to intermediate testers looking to master no-code automation with ContextQA.",
        "Project managers and team leads interested in integrating AI for faster software delivery."
      ]
    },
    {
      "title": "Automated testing using supertest and Jest",
      "url": "https://www.udemy.com/course/automated-testing-using-supertest-and-jest/",
      "bio": "Testing Express APIs with supertest and Jest",
      "objectives": [
        "Test APIs using supertest"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Overview",
          "Setup MongoDB on atlas",
          "Validate APIs using Postman"
        ],
        "API Testing using Supertest and Jest": [
          "Install Supertest and Jest",
          "Write our first test",
          "Test an API that requires an auth token",
          "BeforeAll function in Supertest",
          "Testing a http get API - Test to get user with token",
          "Testing a http POST API without auth token",
          "Testing HTTP Post API with auth token",
          "Testing HTTP Patch/Put API with auth token",
          "Testing HTTP DELETE API with auth token"
        ],
        "Bonus": [
          "Jest Configuration file",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of NodeJS and ExpressJS or and web frameworks"
      ],
      "description": "Brand new course that was created out of my personal experience looking for a detailed and short course on automated testing in ExpressJS applications. Preparing for interviews and solving recruitment tasks for your next job have never been easier as this course provides real world examples that will support the codes you have written and provide concise examples of how you can write test suites for you code to make it stand out. For any intermediate / senior backend developer role, its expected you have good coding practice including writing test cases for your code. Since most web applications are build off REST APIs, This course have been modelled around expressJS APIs that were built for an e-commerce application.\nThe primary goal of this  course is to help software developers set up test suites for their APIs. As said above, for this to be possible, we provide the code to the backend of an expressJS application. You will set up your own mongoDB database and connect the application to the database. Afterwards, we validated the APIs using postman. Thereafter, we use Supertest and Jest to test this APIs and create test suites. We also made sure we handle tests for APIs that need authorization tokens as this is the situation with real-world applications that you will be building or working on.\nOnce again, the course is concise and  provides you with the tools to write test suites for your application. it gives you opportunity to standout during recruitment processes and also provides you with the tools to impress your employers while write good code and maintain them",
      "target_audience": [
        "Javascript Developers, Node / ExpressJS Developers, Full stack Developers"
      ]
    },
    {
      "title": "Testes unitários em Java com JUnit e Mockito",
      "url": "https://www.udemy.com/course/testes-unitarios-java/",
      "bio": "Aprenda a construir testes unitários elegantes e robustos utilizando os frameworks JUnit e Mockito",
      "objectives": [
        "Compreender a importância dos testes unitários no processo de desenvolvimento de software",
        "Dominar os principais recursos dos frameworks JUnit e Mockito para construção de testes unitários",
        "Escrever testes unitários de forma elegante e consistente",
        "Melhorar a qualidade dos software construídos"
      ],
      "course_content": {},
      "requirements": [
        "Ter conhecimentos básicos de Java e OO"
      ],
      "description": "Este treinamento aborda os conhecimentos necessários e fundamentais para que você entre com segurança nesse interessante universo dos testes unitários.\nVocê vai aprender a usar os principais frameworks do mercado, JUnit e Mockito, mas além disso irá compreender todos os conceitos relacionados ao assunto.\nVocê vai entender como funciona a metodologia TDD (Test Driven Development), vai conhecer uma métrica importante relacionada a testes de software, Code coverage, além de um conjunto de boas práticas para implementação de testes unitários robustos e elegantes.\nSe já tem alguma experiência com testes unitários ou o assunto lhe é familiar, será uma ótima oportunidade de rever e consolidar conceitos importantes, além de absorver novos conhecimentos.",
      "target_audience": [
        "Desenvolvedores Java",
        "Desenvolvedores de outras linguagens OO"
      ]
    },
    {
      "title": "Master Automation in HP UFT with Web,Siebel & Mainframe apps",
      "url": "https://www.udemy.com/course/master-automation-in-hp-uft-with-websiebel-mainframe-apps/",
      "bio": "Hands-on training guide on creating advanced automation in HP UFT with web, siebel & mainframe/AS400 applications",
      "objectives": [
        "Create advanced automation scripts using HP UFT",
        "Automate web, Siebel & Mainframe applications with UFT"
      ],
      "course_content": {
        "Introduction": [
          "Getting started with HP UFT",
          "Getting first look at HP UFT",
          "Getting familiarized with menu options",
          "Key features in UFT 12.0 and 12.02"
        ],
        "Basics of UFT Automation": [
          "Recording first UFT script",
          "Understanding Object Spy",
          "Continue to build UFT script",
          "Using variables",
          "Understanding UFT results"
        ],
        "Secret Ingredients: Advanced Automation with UFT": [
          "Smart Identification",
          "Managing Object Repositories",
          "Checkpoints",
          "Using output values",
          "Parameterization",
          "Using conditional statements",
          "Recovery scenarios",
          "For Loops",
          "Descriptive Programming"
        ],
        "Hot Cake: Automation of Mainframe/AS400 & Siebel Applications": [
          "AS400/ Terminal Emulator Settings",
          "Writing Automation scripts for Terminal Emulator",
          "Automating Siebel Application with UFT"
        ]
      },
      "requirements": [
        "Basic knowledge of automation testing is preferred but not required",
        "If you already have basic knowledge of QTP you can use it throughout the course but not required (we will provide step-by-step instructions from scratch)"
      ],
      "description": "This is another award winning and advanced course from us and we are showcasing it on Udemy for the first time. If you want to become a master in AutomationTesting using HP Unified Functional Testing (UFT), look no further and dive into this course. Few of the key highlights of this new course include live Mainframe/AS400 application automation and Siebel application automation with UFT. It has been difficult for students to find a hands-on training on AS400 automation in QTP or UFT and we are here to make it easy for everyone for the first time. It has been the similar story for Siebel automation using qtp or UFT.\nUFT tutorial videos and UFT basics have made easy by QAEversity. HP Unified Functional Testing (UFT) does cost a fortune but it's still a market leader in the automation testing industry. Nowadays, many open source and low-cost automation tools came into play but QTP and UFT are still popular for their advanced features and controls. UFT provides a better control over our automation process and it came up with many advanced and useful features QTP did not have. It is suitable for both people with non-programming and programming backgrounds. UFT supports VB script for customization and better control which is easy to learn. However, it has been difficult to find a end-to-end UFT training solution for basic and advanced UFT features including. It is essential to have UFT skills to be able to gain competitive advantages in today's market. QAEversity is committed to provide a unique learning experience for delivering UFT training online throughout our award-winning UFT training videos. In this course, we cover all the important aspects of UFT starting from the very basics to the most advanced level concepts. This course treats every student as a freshman and explains each and every single step thoroughly. It can be a great source to brush up a specific topic or master the entire course. Our set of UFT training videos cover basic and advanced topics including, new features in UFT 12.0 and UFT 12.02, new features in UFT, VB scripting, checkpoints, output values, descriptive programming, object repositories, and last but not the least Mainframe/AS400 application automation and Siebel application automation using UFT.",
      "target_audience": [
        "This course is intended for beginner and intermediate level automation testers",
        "This course is not intended for advanced UFT professionals"
      ]
    },
    {
      "title": "Quality Assurance (QA) Class",
      "url": "https://www.udemy.com/course/quality-assurance/",
      "bio": "Quality Assurance on Web Applications",
      "objectives": [
        "Quality Assurance",
        "Software Testing",
        "Web Application Testing",
        "Creating Test Cases",
        "Opening Defects in Test Management Tool",
        "Reporting Defects in Test Management Tool"
      ],
      "course_content": {
        "Introduction on QA Class": [
          "Introduction (Various Types of Testing)",
          "Functional Testing",
          "Rally Tool (Part - I)",
          "Rally Tool (Part - II)",
          "Documentation",
          "Waterfall Methodology",
          "Agile Methodology Introduction",
          "QA Revision",
          "Introduction to QTP",
          "Introduction to Loadrunner"
        ]
      },
      "requirements": [
        "Anyone who wants to learn",
        "Beginner"
      ],
      "description": "Software quality assurance consists of means of monitoring the software engineering processes and methods used to ensure software quality. It encompasses on the entire software development process including processes such as requirements definition, software design, coding, source code control, code reviews, software configuration management, testing, release management, and product integration. It is organized into: goals, commitments, abilities, activities, measurements, and verification.\nIn this class below are the topics covered:\nLecture-1 Introduction on various types of Testing\nLecture-2 Introduction on various types of Testing (Continued) and Functional Testing of an web application\nLecture-3 Introduction of Test Management tool (Rally)\nLecture-4 Introduction of Test Management tool (Rally) (Continued)\nLecture-5 Discussion on various types of documents\nLecture-6 Discussion on various methodologies such as SDLC, STLC methodology and Bug Life Cycle\nLecture-7 Discussing on Agile Methodology\nLecture-8 Very quick review of all the above\nLecture-9 Introduction on Quick Test Professional (QTP) as a Tester point of view [Not too much coding]\nLecture-10 Introduction on Load Runner as Performance Testing",
      "target_audience": [
        "Anyone who wants to learn",
        "Beginner",
        "All Audience"
      ]
    },
    {
      "title": "Agile Tester certification exam model resolution (CTFL-AT)",
      "url": "https://www.udemy.com/course/istqb-agile-tester-certification-exam-model-resolution/",
      "bio": "The important thing is not the answers, but the explanations of how to get to them.",
      "objectives": [
        "Step by step on how to solve the exercises of the exam model",
        "The justification of the answers in the Syllabus will be found",
        "Tips will be taken to be better prepared when taking the exam",
        "Testing concepts in agile contexts will be reviewed"
      ],
      "course_content": {},
      "requirements": [
        "Although as part of the course context is given and some concepts are explained, it would be ideal if you have knowledge of the Agile tester Syllabus or have taken a testing course in agile contexts."
      ],
      "description": "More and more professionals have passed the Foundation Level certification and want to take the next step. On that path, many choose the Agile tester certification.\n\n\nThe theoretical contents and the exam model can be downloaded from the oficial site. However, there are the questions and the answers, but there is no clear explanation of how to get to them.\n\n\nIn this course we are going to solve together each of the 40 questions published in the exam model. We are going to take a long time to get to the results doing the step by step. In this way, not only the answer will be understood, but also the thought process that leads us to choose an answer as correct or to discard another as incorrect.\n\n\nKeep in mind that in this course the theoretical contents of the certification are not seen. That knowledge you already have to have acquired. Here what we learn is to solve the exercises and we refer to the syllabus so that you can identify in which part you can find the justification.\n\n\nOnce you have completed this course, if you understand how to answer the questions, you will feel more confident in taking and passing the certification.\n\n\nI hope you tell me soon how well you have done!",
      "target_audience": [
        "Professionals who are considering taking the Agile tester certification and want to know what the exam is like.",
        "Professionals who are preparing to take the Agile Tester certification and want to focus on practicing for the exam.",
        "Professionals who, having taken other courses or learned the theory self-taught, want to understand how the exam is solved"
      ]
    },
    {
      "title": "Basics of BDD for Beginners | Step-by-Step from scratch",
      "url": "https://www.udemy.com/course/basics-of-bdd-for-beginners-step-by-step-from-scratch/",
      "bio": "A complete BDD workflow, process and examples with Workshop",
      "objectives": [],
      "course_content": {
        "ABOUT INSTRUCTOR AND THE COURSE": [
          "About Raghav and this course ***Must Watch***"
        ],
        "INTRODUCTION": [
          "What is BDD | Examples | How BDD works | What is Cucumber",
          "How BDD started | TLD TDD BDD | Gherkin"
        ],
        "WORKSHOP | HOW BDD STARTS | DISCOVERY": [
          "Sample BDD workshop | Discovery | How BDD starts in an Organization"
        ],
        "BDD FORMULATION": [
          "Formulation process | Step-by-Step"
        ],
        "BDD WORKFLOW": [
          "A complete BDD workflow"
        ],
        "BDD vs TRADITIONAL PROCESS": [
          "Difference between Traditional Process & BDD"
        ],
        "BDD ROLES & RESPONSIBILITIES": [
          "BDD Roles & Responsibilities"
        ]
      },
      "requirements": [
        "No prior knowledge or experience is required, Everything will be taught from scratch and will go up Step by Step",
        "You do not need any technical or programming knowledge to take this course"
      ],
      "description": "This course is designed to teach the very basics of BDD process. A lot of times BDD is thought as using some tools like Cucumber. BDD is much more than that and is a complete process that needs to be implemented at Organization level.\nThis course teaches all the fundamentals of BDD step-by-step from very basics.\nIn this course you will learn:\nWhat is BDD\nHow BDD started\nHow TDD let to BDD\nA complete BDD workflow\nA sample Workshop\nRoles & Responsibilities",
      "target_audience": [
        "Anyone who wants to learn and understand BDD from scratch",
        "People who want to implement BDD and needs to know the What, Why, When & How of BDD"
      ]
    },
    {
      "title": "Karate Automation Testing | Short Course for Beginners",
      "url": "https://www.udemy.com/course/karate-automation-testing-short-course-for-beginners/",
      "bio": "learn Karate Step by Step from scratch with demo and examples",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "***** No prior specialized knowledge is required *****",
        "Every lecture will start from scratch and you do not need any prior knowledge",
        "There will be real world examples and demo"
      ],
      "description": "This short course is created for complete beginners.\nGet started with Karate step by step.\nIf you are a complete beginner on Karate, this course is for you. Very basic step-by-step videos to guide you from scratch.\nIn the sessions, we will learn\nIntroduction | What is Karate\nPrerequisite & Setup\nKarate project Setup\nFirst API Test\nGET POST PUT DELETE\nYou can start on this course without any prior knowledge, If you like to get some API basics, can take my other course on API Web Services\nKarate automation testing Step by Step from scratch\nHow to use Karate DSL for projects\nBasics and Features\nOverview and Structure of Karate project\n\n\n***** No prior specialized knowledge is required *****\nEvery lecture will start from scratch and you do not need any prior knowledge\nThere will be real-world examples and demo\n\nBy the end of this course, you will have complete hands-on knowledge with an In-depth understanding of all features\n\nEvery lecture will start from scratch and you do not need any prior knowledge\nThere will be real-world examples and demo\nDo not worry if you have never done programming, I will start from scratch and go up step-by-step with hands-on\nThis course is for:\nAnyone who wants to learn Karate\nBeginners on Karate\nAPI Automation Testing Beginners\nDo check the BONUS section to get more free videos on Karate and other Automation Testing topics\n\n\nNever Stop Learning\nRaghav\nLet's Get Started",
      "target_audience": [
        "Anyone who wants to learn Karate",
        "Beginners on Karate",
        "API Automation Testing Beginners"
      ]
    },
    {
      "title": "Programación para Testers: Todo lo que necesitas saber!",
      "url": "https://www.udemy.com/course/programacion-para-testers-todo-lo-que-necesitas-saber/",
      "bio": "La mejor manera para empezar a aprender Automation, acá mismo!",
      "objectives": [
        "Qué es un lenguaje de programación?",
        "Cuáles son los lenguajes más demandados en el mercado?",
        "Programación Orientada a Objetos y Automation Testing.",
        "Programación Orientada a Objetos - Encapsulamiento: Dónde se usa en Automation?",
        "Programación Orientada a Objetos - Herencia: Dónde se usa en Automation?",
        "Programación Orientada a Objetos - Abstracción: Dónde se usa en Automation?",
        "Programación Orientada a Objetos - Polimorfismo: Dónde se usa en Automation?",
        "Utilizar una herramienta de Source Control Management para trabajar con código de forma profesional en Testing.",
        "Crear un repositorio desde cero en GitHub.",
        "Crear un Branch para trabajar de forma ordenada.",
        "Conocer y utilizar de manera profesional las diferentes operaciones con git, como Add, Commit, Push, Fetch, Pull.",
        "Principios SOLID: Qué son y cómo nos sirven en Automation?",
        "Técnicas de Programación: Los condicionales.",
        "Técnicas de Programación: Los loops.",
        "Técnicas de Programación: Try/Catch"
      ],
      "course_content": {},
      "requirements": [
        "No hay ningún requisito necesario para empezar con este curso!"
      ],
      "description": "Automation Testing es mucho más que usar un par de herramientas. Es programar! Y para eso hacen falta algunos conocimientos claves que vas a tener que tener antes de empezar cualquier curso de Automation!\nPor eso es que en este curso vas a encontrar desde cuáles son los lenguajes de programación más populares dependiendo qué mercado busques, a las definiciones y demostraciones prácticas de qué es una clase, un método, variables, condicionales, loops, manejo de errores, versionado de software y mucho más!\n\n\nLa clase está compuesta de videos de una duración corta en su gran mayoría, con la excepción de los videos de Condicionales y Loops que requieren más demostración para explicar sus conceptos.\nUna vez terminado este curso, vas a tener los conocimientos necesarios para empezar con el pie derecho a aprender herramientas de Automation que requieran codificar y, además, estar preparado/preparada para trabajar en equipos profesionales usando Source Control Management.\nEste es, ni más ni menos, que tu comienzo en el viaje de aprender Automation Testing! Considero este curso el prerequisito para comenzar los demás cursos que pueden encontrar en mi perfil: Desde Automatización en ETL Datawarehouses, a E2E Testing con herramientas como Cypress y Playwright, el viaje que tenés por delante en esta hermosa disciplina es largo, pero satisfactorio.",
      "target_audience": [
        "Todo aquel que quiera comenzar su camino en Automation Testing desde cero."
      ]
    },
    {
      "title": "Xpath (xml path) locators in Automation especially Selenium",
      "url": "https://www.udemy.com/course/xpaths-in-selenium-webdriver/",
      "bio": "Construction of effective Xpath in different ways with examples for web automation tools like Selenium",
      "objectives": [],
      "course_content": {
        "Start Here": [
          "Xpath syntax and types",
          "Construction of Xpath using attributes and atrribute values",
          "Construction of xpath with multiple tags",
          "Construction of Xpath using wild characters * and .",
          "Construction of Xpath using wild card characters contd.,",
          "Construction of Xpath using index",
          "Construction of Xpath using operators",
          "Construction of Xpath using operators contd.,",
          "Construction of Xpath using methods 1",
          "Construction of Xpaths using methods 2",
          "Construction of Xpaths using methods 3",
          "Construction of Xpaths using methods 4",
          "Construction of Xpath using axis parent",
          "Construction of Xpath using axis 2",
          "Construction of Xpath using axis ancestor",
          "Construction of Xpath using axis 4",
          "Construction of Xpath using preceding sibling",
          "Construction of Xpath using axis 6",
          "Xpath Resources 1",
          "Xpath Resources 2"
        ]
      },
      "requirements": [
        "Any one who are willing to learn Automation Testing"
      ],
      "description": "This course talks about xpath like what is xpath, types of xpath, xpath operators, xpath indexing, xpath methods and xpath axis. This course is constructed in such a way that each and every topic is explained in detailed way. After taking this course you will be mastered in xpath and you will be in a position to locate any web element on the web page how challenging it may be. Xpath construction is utmost important in automation with any tools like Selenium,  WebDriver IO, Protractor, Cypress, Appium etc., Most of the automation tools the locators are main thing, once you master in locators then no point it is difficult to learn remaining things. Almost all tools require locators to work on the web pages, one of the finest locator every saw is xpath which is great locator to find web elements on the page.\nOnce you go through course either complete or partially, please don't forget to provide rating, thank you.&nbsp. I will also try to update few videos of the course to make it more understandable and easy to follow. The whole bunch of course definitely makes you comfort on locators xpath and this course no where available in others expect if they copied or tweaked mine.",
      "target_audience": [
        "Students who wants to learn automation testing, manual testers who wants to learn automation, professionals who wants to master in Xpath expressions",
        "Once you go through the course either complete or partial then please provide rating"
      ]
    },
    {
      "title": "Cypress, do Zero à Nuvem",
      "url": "https://www.udemy.com/course/testes-automatizados-com-cypress-basico/",
      "bio": "Aprenda como criar testes rápidos e confiáveis de forma simples e objetiva e rodá-los numa esteira de CI na nuvem",
      "objectives": [
        "Aprenda como criar testes confiáveis e rápidos de forma simples e objetiva.",
        "Aprenda como rodar testes automatizados escritos com Cypress em um pipeline de integração contínua no GitHub Actions",
        "Aprenda como interagir com os elementos mais comuns encontrados em aplicações web",
        "Aprenda como criar os mais diversos tipos de verificações de resultados esperados com Cypress",
        "Aprenda como integrar seus testes com a Cypress Cloud, o serviço de gestão de testes do Cypress na nuvem"
      ],
      "course_content": {
        "Introdução | Estrutura do curso | Pré-requisitos | Conhecendo a App | Setup": [
          "Introdução",
          "Estrutura do curso",
          "Pré-requisitos",
          "Conhecendo a aplicação em teste",
          "Configuração do projeto de testes automatizados com Cypress"
        ],
        "Seu primeiro teste escrito com Cypress": [
          "Seu primeiro teste escrito com Cypress",
          "Seu primeiro teste escrito com Cypress - resolução do exercício"
        ],
        "Localizando, digitando e clicando em elementos": [
          "Encontrando, digitando e clicando em elementos com Cypress",
          "Encontrando, digitando e clicando em elementos com Cypress - resolução exercício",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 1",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 2",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 3",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 4",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 5",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 6",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 7.1",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 7.2",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 7.3",
          "Encontrando, digitando e clicando em elementos com Cypress - exercício extra 8"
        ],
        "Selecionando opções em campos de seleção suspensa": [
          "Selecionando opções de campos de seleção suspensa",
          "Selecionando opções em campos de seleção suspensos com Cypress - resolução do ex",
          "Selecionando opções em campos de seleção suspensos com Cypress-exercício extra 1",
          "Selecionando opções em campos de seleção suspensos com Cypress-exercício extra 2"
        ],
        "Marcando inputs do tipo radio": [
          "Marcando campos do tipo de radio com Cypress",
          "Marcando campos do tipo de radio com Cypress - resolução do exercício",
          "Marcando campos do tipo de radio com Cypress - resolução do exercício extra"
        ],
        "Marcando e desmarcando campos do tipo caixa de seleção": [
          "Marcando e desmarcando campos do tipo caixa de seleção",
          "Marcando e desmarcando campos do tipo caixa de seleção - resolução do exercício",
          "Marcando e desmarcando campos do tipo caixa de seleção - exercício extra"
        ],
        "Fazendo upload de arquivos com Cypress": [
          "Fazendo upload de arquivos com Cypress",
          "Fazendo upload de arquivos com Cypress - resolução do exercício",
          "Fazendo upload de arquivos com Cypress - resolução do exercício extra 1",
          "Fazendo upload de arquivos com Cypress - resolução do exercício extra 2"
        ],
        "Lidando com links que abrem em outra aba do navegador": [
          "Lidando com links que abrem em outra aba do navegador",
          "Lidando com links que abrem em outra aba do navegador - resolução do exercício",
          "Lidando com links que abrem em outra aba do navegador - exercício extra 1",
          "Lidando com links que abrem em outra aba do navegador - exercício extra 2"
        ],
        "Simulando as dimensões de um dispositivo móvel com Cypress": [
          "Simulando as dimensões de um dispositivo móvel com Cypress",
          "Simulando as dimensões de um dispositivo móvel com Cypress - exercício",
          "Simulando as dimensões de um dispositivo móvel com Cypress - exercício extra"
        ],
        "Documentação do projeto de testes automatizados": [
          "Documentação de projeto de teste automatizado",
          "Documentação de projeto de teste automatizado - resolução do exercício"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de HTML e seletores CSS",
        "Conhecimentos básicos de JavaScript - ES6 é um plus",
        "Conhecimentos básicos de git e GitHub",
        "Conhecimentos básicos de linha de comando",
        "git, NodeJS (v20.13.1), npm (10.8.1) e uma IDE de desenvolvimento (sugiro o VSCode) instalados em seu computador",
        "Conta no GitHub"
      ],
      "description": "Aprenda como criar testes rápidos e confiáveis de forma simples e objetiva e executá-los em uma esteira de integração contínua na nuvem.\nDê o próximo passo para se tornar um especialista em testes automatizados com Cypress e expanda suas habilidades em automação de testes.\nO Cypress é um framework de código aberto que possibilita escrever testes automatizados de maneira fácil, rápida e confiável, tudo em JavaScript, e é exatamente isso que você aprenderá neste curso.\n\n\nDurante o curso, instalaremos o Cypress, faremos a configuração inicial para escrever testes e, em seguida, abordaremos diferentes formas de interagir com aplicações web, como visitar URLs, diferentes tipos de ações (digitar em campos, selecionar opções, clicar em botões , etc.), bem como adicionar as mais diversas verificações de resultados esperados (assertions.)\n\n\nAo final do curso, te ensino como executar os testes em uma esteira de integração contínua no GitHub Actions, além da integração com o Cypress Cloud.\n\n\nDepois de concluir o curso, você poderá colocar em prática tudo o que aprendeu em projetos web reais.\n\n\nAqui estão alguns dos principais benefícios de se inscrever neste curso:\n\n\n- Curso 100% atualizado com as necessidades do mercado\n- Fácil inicialização do projeto\n- Evolução rápida de aula para aula\n- Testes automatizados de interface gráfica de usuário rápidos e confiáveis\n- Testes automatizados independentes uns dos outros\n- Testes automatizados prontos para fazer parte do seu processo de integração contínua\n- Gerenciamento de testes, dados analíticos, test replay, etc.\n\n\nVenha aprender a utilizar esse framework moderno que está simplificando a vida dos profissionais de desenvolvimento de software e se diferenciar no mercado.",
      "target_audience": [
        "Testadores(as) de Software",
        "QAs",
        "Analistas de Teste",
        "Desenvolvedores(as) de Software",
        "Analistas de Sistema",
        "Estudantes de Desenvolvimento de Software",
        "Qualquer pessoa interessada em ingressar no mundo de automação de testes web em JavaScript"
      ]
    },
    {
      "title": "JMeter Mastery: Beginners to Advanced Performance Testing",
      "url": "https://www.udemy.com/course/jmeter-mastery-beginners-to-advanced-performance-testing/",
      "bio": "Master Apache JMeter for web, API, and database performance testing with real-world scenarios and advanced features.",
      "objectives": [
        "Fundamentals of performance testing using JMeter.",
        "Creating and managing test plans for web, API, and database testing.",
        "Advanced scripting, modularity, and integration with CI/CD tools like Jenkins.",
        "Using advanced controllers, custom logs, and graphs for in-depth analysis.",
        "Master-slave execution and reusable scripting for scalable testing."
      ],
      "course_content": {
        "JMeter 01 - Beginners": [
          "Introduction to Jmeter",
          "Installing Jmeter",
          "HTTP Request",
          "Adding Simple Controller",
          "View Results Tree",
          "Request Default",
          "Parametrization",
          "Correlation",
          "Features of JMeters",
          "API Testing Using JMeter",
          "Send Soap Action",
          "Using Random Data",
          "Function Helper Dialog",
          "Functions and Variables",
          "Functions and Variables Continue",
          "Non GUI Mode",
          "Non GUI Mode Continues",
          "FTP Sampler",
          "More on FTP Sampler",
          "Database Test Plan",
          "Database Test Plan Assertions",
          "Plugin Manager and Step by Step Debugger",
          "JMeter Properties File"
        ],
        "JMeter 02 - Intermediate": [
          "Dummy Sampler",
          "HTML Reports from command line",
          "HTML Reports from Standalone CSV",
          "HTTP Cache Headers",
          "Loop Controller",
          "Transaction Controller",
          "Creating Thread Group",
          "Pacing",
          "Cache Manager",
          "AJAX and JMeter",
          "More on JMeter",
          "JMeter and Jenkins Integration",
          "JMeter and Jenkins Integration Continues",
          "Using Java in Jmeter",
          "Putting Code in Jmeter",
          "Bean Shell Variable and Sampler",
          "Create Custom Log",
          "Custom Log Continue",
          "Flexible File Writer",
          "Generate Custom Graphs",
          "Batch File Execution",
          "JMeter Maven Integration",
          "Graph Generator Listener",
          "Graph Generator Listener Continues",
          "Viewing Results from Non Gui Test",
          "Send Emails with SMTP Sampler",
          "Read Email with Jmeter",
          "Synchronizing Timer",
          "How to Get Real time Results in Non GUI Run"
        ],
        "JMeter 03 - Advanced": [
          "Introduction to X Path",
          "Understand Customized X-Path",
          "Understand Customized X-Path Continues",
          "Class X-Path Extractor",
          "X-Path Assertion",
          "What is Google Geocode",
          "HTTP Header Manager",
          "JSON Extraction and Setup Teardown Threads",
          "Setup Teardown Threads",
          "IF Controller Theory",
          "IF Controller Practical",
          "Apache MQ Installation",
          "JMS Point to Point",
          "JMS Publisher Subscriber Model",
          "JUNIT Request",
          "JUNIT Request Continues",
          "HTML Unit",
          "WDS Web Driver Sampler",
          "Critical Section Controller",
          "Master Slave Mode Execution",
          "Master Slave Mode Execution Continues",
          "Create Modular and Reusable Scripts",
          "Module Controller",
          "Module Controller Run",
          "Include Controller",
          "Throughput Controller",
          "Runtime Controller",
          "Random Order Controller",
          "Switch Controller",
          "Single Page Applications"
        ],
        "Jmeter Course": [
          "Introduction to Course",
          "Introduction to Jmeter",
          "Installing Jmeter",
          "First Test Case on Jmeter",
          "Test Plan",
          "Thread Group",
          "Controller",
          "Listeners",
          "Funtion in Jmeter",
          "Course Conclusion"
        ]
      },
      "requirements": [
        "Basic understanding of web applications and APIs. Familiarity with software testing concepts is helpful but not mandatory. A computer with Java installed to run JMeter."
      ],
      "description": "Introduction\nApache JMeter is a powerful tool for performance and load testing of web applications, APIs, and databases. This course is designed to guide learners from the fundamentals of JMeter to advanced testing techniques, covering everything from installation and basic operations to complex scripting, customizations, and integration with CI/CD pipelines. By the end of the course, you will be equipped to handle performance testing challenges with confidence and expertise.\nSection 1: JMeter 01 - Beginners\nThis section lays the foundation for JMeter, introducing its installation and core features. You'll learn about HTTP requests, simple controllers, and viewing result trees. Key topics include parameterization, correlation, API testing, and handling random data. By the end of this section, you'll be comfortable creating basic test plans and understanding the essential components of JMeter.\nSection 2: JMeter 02 - Intermediate\nHere, you'll delve deeper into JMeter’s intermediate features. Learn to create HTML reports, manage cookies and caches, and use advanced controllers like loop and transaction controllers. This section covers integrating JMeter with Jenkins, writing custom logs, generating graphs, and leveraging Maven for project management. With hands-on examples, you'll gain the skills to execute more complex performance testing scenarios.\nSection 3: JMeter 03 - Advanced\nThis section focuses on advanced JMeter capabilities, including X-Path extractors, JSON extractions, and setting up teardown threads. You'll explore JMS models, modular scripting, throughput controllers, and master-slave execution modes. The section also covers using JMeter with Single Page Applications and creating reusable scripts, ensuring you can handle sophisticated testing needs.\nSection 4: JMeter Course Overview and Wrap-Up\nThe final section revisits the course's core concepts, reinforcing foundational knowledge and tying together advanced practices. Topics like thread groups, listeners, controllers, and functions in JMeter are reviewed. The course concludes with guidance on building robust test plans and applying JMeter effectively in various scenarios.\nConclusion\nThis course empowers you to utilize Apache JMeter for end-to-end performance and load testing. From simple tests to complex, real-world scenarios, you’ll gain the confidence to optimize application performance and ensure system reliability under load.",
      "target_audience": [
        "Software testers and QA professionals looking to expand their performance testing skills.",
        "Developers and DevOps engineers integrating JMeter into their workflows.",
        "Beginners aiming to learn performance testing from scratch.",
        "Professionals seeking to enhance their knowledge of advanced JMeter features."
      ]
    },
    {
      "title": "Introduction To Parallel Test Execution with Selenium",
      "url": "https://www.udemy.com/course/parallel-test-execution/",
      "bio": "Understand the basics of parallel test execution with Sauce Labs, Browser Stack, and locally. Using Selenium WebDriver",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Why is parallel test great",
          "Would you like to participate in a automation testing competition?"
        ],
        "How to run tests in parallel on your computer": [
          "how to install Nuget packages for Webdriver and NUnit",
          "how to install NUnit Test Adapter",
          "setting up our selenium tests",
          "debugging a problem and running our first test",
          "dont be afraid to fail or make mistakes",
          "setting up another local test",
          "setting up local tests to start running in parallel",
          "advantages and disadvantages of local parallel testing",
          "advantages or executing tests in the cloud",
          "What are you struggling with?"
        ],
        "How to run tests in parallel using Browser Stack": [
          "setting up a browser stack test",
          "Framework Reviews - Survey",
          "understanding the browser stack test and setting up env variables",
          "how to run the browser stack test",
          "creating other browser stack tests",
          "how to execute parallel tests in browserstack"
        ],
        "How to run tests in parallel using Sauce Labs": [
          "getting started with sauce labs",
          "how to run a selenium webdriver test in sauce labs",
          "how to run selenium tests in parallel using sauce labs",
          "conclusions",
          "BONUS LECTURE!!!",
          "Quiz"
        ]
      },
      "requirements": [
        "Basics of Selenium Webdriver",
        "Visual Studio",
        "C#"
      ],
      "description": "Is your automation test suite taking hours to run? Are you having issues with debugging and analyzing automated test failures? Can your automation framework record videos and capture screenshots?\nThis course is an introductory Selenium Webdriver course that is designed to take your automated software testing skills to the next level and solve all of the problems above. It covers just enough options to help you run your tests in parallel without overwhelming you with a bunch of minute details.\n\n\n\"The best tutorials I have ever seen, simply awesome. I take off my hat in front of you, you are an gorgeous professor, I am speechless to express how satisfied I am with these tutorials.\" -Lisbey\nThis is a course that briefly introduces you to the following topics:\n1. How to run Selenium Webdriver tests in parallel on your computer\n\n2. How to run Selenium Webdriver tests in parallel in Browser Stack's cloud\n3. How to run Selenium Webdriver tests in parallel in Sauce Lab's cloud\n4. Introduction to NUnit\n5. Understand the benefits of running your tests in parallel\n6. Understand the benefits of running your tests in the cloud\n7. Understand how to configure and use the RemoteWebdriver class\nThis is not a comprehensive coverage of all of these tools! Just enough to get you up and running fast.\n\n\"Great Video I have ever seen on YouTube. You are so so clear and honest in presenting the material. I had no idea how important it is to use QTP from different angle, that is via scripting. Great Work and Thank You so so so much!\" -Mohammed\n\n\"Excellent course. Before starting, I was unsure if I could learn this powerful technology, but by the end I was confidently writing scripts. I'm looking forward to taking Nikolay's other courses.\"  -James",
      "target_audience": [
        "QA Engineers interested in getting started with Sauce Lags",
        "This is a course for advanced Selenium Webdriver users",
        "Automation Engineers interested in getting started with BrowserStack",
        "Automation Engineers interested in running tests in parallel"
      ]
    },
    {
      "title": "JEST Framework Full Crash Course | Java Script Unit Testing",
      "url": "https://www.udemy.com/course/jest-framework-complete-course-all-matchers-with-examples/",
      "bio": "Unit or API testing with Jest | Expect & Matchers | Async Code | Watch Plugin | Mock Function | Jest CLI | Snapshot Test",
      "objectives": [
        "Complete knowledge of JEST framework",
        "Unit testing or API testing with Jest",
        "Asynchronous Code | Watch Plugin | Jest CLI | Snapshot Test",
        "All Matchers in Jest with examples",
        "To create Custom Matchers",
        "Mock Functions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Jest Framework Setup": [
          "Installation"
        ],
        "Start with simplest testing": [
          "First Unit Testcase",
          "First API Testcase with JSON and Mysql Database"
        ],
        "Expect & Matchers": [
          "Expect",
          "Matchers- ToBe, ToBeCloseTo",
          "Matchers- ToHaveBeenCalled...",
          "Matchers- ToHaveReturned...",
          "Matchers- ToHaveLength, ToHaveProperty",
          "Matchers- ToBeDefined, ToBeUndefined, ToBeFalsy, ToBeTruthy",
          "Matchers- ToBeNull, ToBeNaN, ToBeInstanceOf",
          "Matchers- ToContain, ToContainEqual, ToEqual, ToStrictEqual",
          "Matchers- ToMatch, ToMatchObject",
          "Matchers- ToThrow",
          "Modifiers - .not, .resolves, .rejects",
          "Asymmetric Matchers- expect.anything, expect.any",
          "Asymmetric Matchers- expect.closeTo",
          "Asymmetric Matchers- expect.arrayContaining, expect.objectContaining",
          "Asymmetric Matchers- expect.stringContaining, expect.stringMatching",
          "Extend Utilities: Custom Matchers"
        ],
        "Testing of Asynchronous Code": [
          "Testing of Asynchronous Code",
          "Assertion Count- expect.assertions, expect.hasAssertions"
        ],
        "Hooks": [
          "Hooks - Watch Plugins",
          "Setup & Teardown Hooks"
        ],
        "Jest Global Methods": [
          "Jest Global Methods"
        ],
        "Snapshot Testing with Jest": [
          "Snapshot Testing with Jest"
        ],
        "Mock Functions": [
          "Mock Functions"
        ],
        "Jest CLI Options": [
          "Jest CLI Options"
        ]
      },
      "requirements": [
        "Basic knowledge of java script is required"
      ],
      "description": "JEST has achieved remarkable popularity within the JavaScript ecosystem, standing out as a premier testing framework that developers turn to for various projects. Its rise in popularity can be attributed to several key factors:\nLike it has a User-Friendly Setup, Jest offers a straightforward and painless setup process, reducing the barrier for entry and making it accessible to developers of all levels.\nJest comes bundled with essential testing tools, such as an assertion library (matchers), mocking capabilities, and a test runner. This comprehensive package saves developers time and effort by eliminating the need to piece together multiple libraries.\nJest's intuitive API and descriptive syntax make it easy for developers to write expressive and readable tests. This helps teams maintain code quality and collaboratively contribute to the testing suite.\nBy enrolling this course, you can learn all about JEST in one place , below are the topics cover in this course:\n. Learn all about JEST Framework in Node Js and Visual Studio Code\n. Learn how to setup JEST Framework and start working\n. Learn Unit testing and API testing with Jest\n. Learn all In-built and custom Matchers and Extend utilities\n. Learn how to handle Asynchronous Code\n. Learn how to create new Watch Plugin and how to work on hooks\n. Learn about Setup and Tear Down hooks\n. Learn how to use assertion count\n. Learn about Mock Function\n. Learn Jest CLI\n. Learn about Jest Global Methods\n. Learn Snapshot Testing\nThank You!",
      "target_audience": [
        "Software Developers using Java script",
        "Senior Professional software automation testers",
        "Beginner Software Testers"
      ]
    },
    {
      "title": "Test Driven Development (TDD) en React JS (Jest, RTL, MSW).",
      "url": "https://www.udemy.com/course/tdd-react-js/",
      "bio": "Mejora tus habilidades en React usando TDD - Jest, React Testing Library, MSW, React Router, React Query, Hooks y más!",
      "objectives": [
        "Comprender los principios de Test Driven Development (TDD)",
        "Aplicar REALMENTE TDD en React JS moderno (incluyendo hooks) en tu día a día",
        "Aplicar fuertemente buenas prácticas - Código limpio y refactors en React JS",
        "Crear Unit e Integration testing con React Testing Library",
        "Hacer tests para formularios (validaciones, llamadas a api, etc)",
        "Tests de listados con filtros y paginados (llamada a api)",
        "Tests para inicio de sesión",
        "Tests para autorización y autorización en una app de React"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos de programación y desarrollo web (HTML5, CSS, Javascript)",
        "Conocimiento de ES6 es elemental",
        "Experiencia creando aplicaciones con React JS y Hooks (NO SE ENSEÑA REACT NI HOOKS DESDE CERO)",
        "Experiencia haciendo unit tests con jest en react"
      ],
      "description": "En este curso vamos a aplicar Test Driven Development (TDD) como técnica de desarrollo aplicando fuertemente el flujo normal de:\nCrear un test que falle (RED).\nHacer lo mínimo necesario para que pase el test (GREEN).\nAplicar code clean y otras buenas prácticas (REFACTOR).\nLos tipos de Tests que hacemos en este curso de manera intensa son:\nUnit Tests\nIntegration Tests\nLo aplicaremos en algunas de las necesidades más típicas de una aplicación:\nEn un formulario con llamada a una api.\nUn listado de datos con filtros y paginación consumiendo una api.\nManejo de autenticación y autorización.\nCrear un proyecto de User Management\n\n\nNota: este curso requiere que ya tengas experiencia con React y Jest. No tomes este curso si no tienes experiencia en estas tecnologías.\nEn este curso vamos a aplicar Test Driven Development (TDD) como técnica de desarrollo aplicando fuertemente el flujo normal de:\nCrear un test que falle (RED).\nHacer lo mínimo necesario para que pase el test (GREEN).\nAplicar code clean y otras buenas prácticas (REFACTOR).\nLos tipos de Tests que hacemos en este curso de manera intensa son:\nUnit Tests\nIntegration Tests\nLo aplicaremos en algunas de las necesidades más típicas de una aplicación:\nEn un formulario con llamada a una api.\nUn listado de datos con filtros y paginación consumiendo una api.\nManejo de autenticación y autorización.\nCrear un proyecto de User Management\n\n\nNota: este curso requiere que ya tengas experiencia con React y Jest. No tomes este curso si no tienes experiencia en estas tecnologías.",
      "target_audience": [
        "Desarrolladores de React principiantes con interés por subir a un nivel intermedio - avanzado."
      ]
    },
    {
      "title": "Master TDD JUnit4 JUnit5 Hamcrest Mockito Testing",
      "url": "https://www.udemy.com/course/java-software-testing/",
      "bio": "Java Software Testing: Test Driven Development, JUnit4, JUnit5, Hamcrest Testing, Mockito, Best Practices of testing",
      "objectives": [
        "Maven Basics",
        "Intellij IDEA",
        "Software Testing Basics",
        "Bad Unit Testing vs Good Unit Testing",
        "Test principles",
        "Debug Test",
        "Test coverage",
        "Test Driven Development",
        "JUnit4",
        "JUnit5",
        "Hamcrest Testing",
        "Mockito Testing"
      ],
      "course_content": {
        "Setup Development Environment": [
          "Setup Development Environment"
        ],
        "Software Testing Basics": [
          "First Unit Testing",
          "Debug Test",
          "Test Coverage",
          "Test Principles & Good Unit Testing",
          "TDD (Test Driven Development)"
        ],
        "JUnit4 Testing": [
          "JUnit4 Assertions",
          "JUnit4 Lifecycles",
          "JUnit4 Parameterized Test",
          "JUnit4 Test Rules"
        ],
        "JUnit5 Testing": [
          "JUnit5 Assertions",
          "JUnit5 Lifecycles",
          "RepeatedTest & Order of Test",
          "JUnit5 Parameterized Test",
          "JUnit5 TestInfo"
        ],
        "Hamcrest Testing": [
          "Hamcrest basic",
          "Hamcrest matcher assert",
          "Hamcrest custom matcher"
        ],
        "Mock Testing": [
          "Mockito mock class",
          "Mockito mock interface",
          "Mockito argument matchers",
          "Mockito thenAnswer"
        ],
        "Project Source Code": [
          "Project Source Code"
        ]
      },
      "requirements": [
        "Have basic understanding about Java",
        "Have heard about Maven",
        "Have used Intellij IDEA before"
      ],
      "description": "As everyone knows, testing is very important for software development. Writing good test code can improve the quality of the software application and make code changes much easier.\n- Software testing can also provide an objective, independent view of the software to allow the business to appreciate and understand the risks of software implementation.\n- Software testing can provide objective, independent information about the quality of software and risk of its failure to users\n\n\nThis course covers some common software testing techniques and will teach you with code examples. Not only TDD, JUnit, but also Hamcrest Testing, Mockito Testing. I will show you step by step how to write a unit test method and explain the raisons behind.\nKeep coding following each section, I believe you will be able to write good testing code throughout your development phase.\nSoftware Testing Basics\n- First Unit testing\n- Debug Test\n- Test coverage\n- Test Principles & Good Unit Testing\n- Test Driven Development\nJUnit4 Testing\n- JUnit4 Assertions\n- JUnit4 Lifecycles\n- JUnit4 Parameterized Test\n- JUnit4 Test Rules\nJUnit5 Testing\n- JUnit5 Assertions\n- JUnit5 Lifecycles\n- RepeatedTest & Order of Test\n- JUnit5 Parameterized Test\n- JUnit5 TestInfo\nHamcrest Testing\n- Hamcrest Basic\n- Hamcrest Matcher Assertions\n- Hamcrest Custom Matcher\nMock Testing\n- Mockito Mock Class\n- Mockito Mock Interface\n- Mockito Argument Matchers\n- Mockito  thenAnswer\n\n\nIf you are interested, join this course and enjoy ~\n\n\nFinally, you can download the project source code from attachment in the last section.",
      "target_audience": [
        "Students who want to make progress in software testing",
        "Students who want to know Intellij IDEA and Maven",
        "Students who want to know test driven development",
        "Students who want to learn unit testing with Junit4 and Junit5",
        "Students who want to learn hamcrest testing",
        "Students who want to learn mock mockito testing"
      ]
    },
    {
      "title": "Outsystems for \"Software Testers\"",
      "url": "https://www.udemy.com/course/learn-outsystems-application-testing/",
      "bio": "Learn the testing specific fundamentals of Outsystems application and become an Outsystems Tester.",
      "objectives": [
        "How to Test Outsystems based Web application",
        "How to test Outsystems mobile application",
        "Outsystems fundamentals that needs to be learnt as a tester",
        "Outsystems database as a Tester."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of manual testing."
      ],
      "description": "Introducing the \"Becoming an Outsystems Application Tester\" Course!\nAre you a Manual or Automation Tester looking to enhance your skills in a high-demand area? Are you a Support Engineer seeking to broaden your understanding of application testing, or a student eager to explore the world of Outsystems? Look no further - this comprehensive course is designed just for you!\nLed by Ankit Gangrade, a seasoned 7X certified Outsystems Architect and Trainer with a decade of software engineering experience, this course provides a unique perspective on testing Outsystems applications. Unlike traditional high-code applications, Outsystems presents distinct challenges and nuances in areas such as database operations, test data preparation, log monitoring, API testing, and mobile application testing.\nKey Learning Objectives:\nUnderstanding Outsystems Basics: Dive into the fundamentals of Outsystems, gaining a solid foundation in its architecture and development principles. Ankit Gangrade, with his extensive experience, will guide you through the intricacies of this low-code platform.\nDatabase CRUD Operations for Test Data Preparation: Learn the art of performing database CRUD operations specifically tailored for test data preparation in Outsystems applications. Discover efficient strategies to ensure the reliability and consistency of your test data.\nLog Monitoring and Performance Analysis: Explore the unique challenges of log monitoring in Outsystems. Ankit will share insights on effectively monitoring application logs and assessing performance to identify potential bottlenecks and areas for improvement.\nAPI Testing and Monitoring: Delve into the world of API testing with a focus on Outsystems applications. Gain hands-on experience in testing APIs, monitoring their performance, and troubleshooting issues that may arise during integration.\nMobile Application Testing and Build Generation: Uncover the intricacies of testing mobile applications developed on the Outsystems platform. Ankit will guide you through the testing process and demonstrate how to generate robust builds for mobile deployment.\nIntended Audience:\nManual and Automation Testers: Elevate your testing skills by gaining insights into the unique challenges posed by Outsystems applications.\nSupport Engineers: Enhance your ability to troubleshoot and support Outsystems applications with a specialized focus on testing methodologies.\nStudents: Explore a cutting-edge field and gain practical skills that will set you apart in the competitive world of software development.\nEmbark on this learning journey with Ankit Gangrade and acquire the skills needed to excel as an Outsystems Application Tester. Enroll now and take a step towards becoming a proficient tester in the dynamic landscape of low-code development!",
      "target_audience": [
        "Manual and Automation Testers",
        "L1, L2, and L3 Support Engineers.",
        "Student who want to learn Outsystems testing."
      ]
    },
    {
      "title": "Gherkin and Cucumber: BDD Testing for IOS, Android, and Web",
      "url": "https://www.udemy.com/course/gherkin-and-cucumber-bdd-testing-for-apps-and-websites/",
      "bio": "This course will teach you Gherkin and Cucumber to start automating your iOS, Android, and Website testing.",
      "objectives": [],
      "course_content": {
        "Introductions, Pre-Requisites, and Course Overview": [
          "Introduction",
          "How to write a reveiw",
          "Course Outline and Overview",
          "About the Instructor",
          "Pre-Requisites",
          "Section 1 Quiz",
          "How is this course set up?"
        ],
        "Comparison of Different Software Development Processes": [
          "Introduction",
          "Waterfall",
          "Agile",
          "Waterfall vs Agile",
          "Section 2 Quiz"
        ],
        "Testing and Development Techniques": [
          "Introduction",
          "TDD (Test-Driven Development)",
          "BDD (Behavior-Driven Development)",
          "Section 3 Quiz"
        ],
        "Setting up your system": [
          "Introduction",
          "Installing Atom Text Editor for Windows",
          "Installing Ruby on Windows",
          "RubyGems.org - Directory of Ruby Gems for install",
          "Other Gems and Software to Install",
          "Installing Ruby, Cucumber and Atom on OS X",
          "Section 4 Quiz"
        ],
        "Gherkin Overview": [
          "Introduction",
          "What is Gherkin?",
          "Gherkin and Cucumber Flowing Together.",
          "File and Folder Structure for Gherkin and Cucumber",
          "Multi-Language Support",
          "Language, Features, Scenarios, Steps, Given, When, Then",
          "And and But",
          "Background",
          "Scenario Outline",
          "Tags and Comments",
          "Section 5 Quiz"
        ],
        "Cucumber Steps In": [
          "Introduction",
          "Running Cucumber and Exceptions",
          "Writing Step Definitions",
          "Page files for Cucumber",
          "Displaying Results",
          "Section 6 Quiz"
        ],
        "Summary": [
          "Summary and Next Lectures.",
          "References"
        ]
      },
      "requirements": [
        "Windows/Mac/Linux users are welcomed. All free software needed will be explained in the class."
      ],
      "description": "This course is designed to get you up to speed as quickly as possible using gherkin and cucumber for behavior driven development (BDD). This course starts at the ground level and build your proficiency in using command-line tools to automate your iOS, android, and website testing. All of the materials needed are free and open source. you should come into this course with one of the following:\nWindows XP or Above\nOSX 10.7 and Above\nLinux (Debian or Ubuntu)\nThis course is starting at a beginners level with no experience needed. Other courses will be more advance and require previous lessons to fully comprehend and combine together.",
      "target_audience": [
        "No prior programming knowledge is needed.",
        "Website and Application developers that want to get started testing their creations"
      ]
    },
    {
      "title": "Microservices Contract Testing with Pact Java 2022",
      "url": "https://www.udemy.com/course/microservices-contract-testing-with-pact-java-2022/",
      "bio": "Complete guide to learn contract testing with live example",
      "objectives": [
        "Detailed understanding of microservices architecture",
        "Importance of Contract Testing in the Microservices Architecture",
        "Learn to build effective Contract Tests using Pact Testing tool to test the Inter communication between two Systems",
        "Understand writing Consumer Driven & Provider Tests to generate the Integration check of two services",
        "Deeper Understanding of Pact Contract Testing tool and its related Orchestrator tools like Pact flow to centrally manage Contract files"
      ],
      "course_content": {
        "Introduction": [
          "Contract Testing with Pact -Course Overview",
          "Monotlithic Vs Microservice Architecture",
          "Communication Between Microservices",
          "Why Integration testing is required for Microservices ?"
        ],
        "Why Contract Testing is Required?": [
          "What is Contract testing with Pact?"
        ],
        "Setting Microservice Example with Spring Boot": [
          "Java Installation",
          "Eclipse Installation",
          "Install MySQL and create DB",
          "Setup two microservice projects and code walk through"
        ],
        "Pact Setup and Writing test cases with Pact": [
          "Pact JVM Configuration",
          "Pact server configuration and mock response configration",
          "How to write unit test and generate contract file"
        ],
        "Setup Provider for Creating and Executing Contract Test": [
          "Configure pact provider",
          "Write provider test",
          "Add setup and tear down methods and execute provider test"
        ],
        "How to Catch Bugs with Contract Testing": [
          "Examples of contract testing bugs",
          "How to generate contract only on specific field"
        ],
        "End to End Contract Testing": [
          "Second scenario for contract testing",
          "Creating consumer side unit test with pact mock server",
          "Update and execute provider side unit test",
          "Pact server configuration for negative scenario"
        ],
        "Pact Orchestrator to Manage Pact File Globally": [
          "How to setup pactflow account",
          "how to publish contract file from consumer repo to pactflow server",
          "how to consume contract file for provider contract tests from pactflow server"
        ],
        "Quiz": [
          "Quick Quiz"
        ],
        "Bonus": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Basics of Java",
        "Spring boot (optional)"
      ],
      "description": "In the fast-paced world of software development, the adoption of microservices architecture has revolutionized how applications are built and deployed. As organizations embrace the benefits of microservices, ensuring seamless integration and maintaining quality becomes paramount. This is where Microservices Contract Testing with Java comes into play.\nMicroservices Contract Testing with Java is a powerful approach to validate and ensure the compatibility of services within a microservices ecosystem. By testing the contracts between services, it guarantees that the individual components work harmoniously together, minimizing the risk of integration failures and enhancing overall system reliability.\nWhy Microservices Contract Testing?\nIn a microservices architecture, services communicate with each other through well-defined contracts or APIs. These contracts establish the rules and expectations for interactions between services. However, as the number of services grows, managing and validating these contracts manually becomes increasingly challenging and error-prone. This is where automated contract testing shines.\nKey Benefits of Microservices Contract Testing with Java:\n1. Early Detection of Integration Issues: Contract testing allows you to identify compatibility problems between services at an early stage, even before deploying them to a testing environment. By catching integration issues sooner, you can address them before they escalate and impact other parts of the system.\n2. Independent Development and Deployment: Microservices contract testing enables teams to work independently on their services. By defining and testing contracts upfront, developers can ensure that their services integrate seamlessly with others, even if the teams are working on different timelines or using different technologies.\n3. Faster Development Cycles: With contract testing, developers can verify the compatibility of their services without relying on the availability of other services or waiting for full system integration. This speeds up development cycles and enables agile and iterative development practices.\n4. Improved Collaboration: Contract testing facilitates collaboration between different teams responsible for various microservices. By defining clear contracts and sharing them across teams, communication and coordination become more efficient, reducing misunderstandings and conflicts during integration.\n\n\n1. Increased System Resilience: By validating contracts and ensuring compatibility, contract testing enhances the overall reliability and resilience of the microservices architecture. It helps prevent cascading failures and allows for graceful degradation when a service is unavailable or undergoing maintenance.\nJava for Microservices Contract Testing:\nJava, a widely adopted and mature programming language, provides a robust ecosystem of tools and frameworks for microservices contract testing. Tools like Pact and Spring Cloud Contract enable developers to define, manage, and execute contract tests in a Java environment seamlessly. These tools offer features like consumer-driven contract testing, contract stubbing, and contract versioning, empowering teams to establish and maintain reliable contracts effortlessly.\nEmbrace Microservices Contract Testing:\nTo unlock the full potential of your microservices architecture, adopting Microservices Contract Testing with Java is crucial. By ensuring seamless integration, early detection of issues, and improved collaboration, contract testing empowers your teams to deliver high-quality services within a dynamic microservices ecosystem.\n\n***For More details, Please watch Preview lectures of this course to get detail understanding of how and Why Contract Testing****\n\nIn this course, We shall be using Pact Contract testing tool with Java to test the inter communication contract between Microservices\nWhat this Course offers?\nThis course helps you to understand all the concepts revolving around Contract testing first to make you realize the importance of having these tests in the Projects\nAnd then introduces the Contract testing tool called Pact and gets deep dive into writing Consumer & Provider driven Contract tests to test Microservices Inter communication.\nI will also show you different helper orchestrator tools available such as Pactflow to centrally manage Contract files across the Projects.\nOn course completion, You will have thorough understanding of how Microservices communication works internally and how can we test this communication using Pact Contract Testing tool.\n\n\nWhat you’ll learn\nUnderstand the differences between Monolithic and Microservices Architecture\nRealize the Importance and necessity of Contract Testing in the Microservices Architecture\nLearn to build effective Contract Tests using Pact Testing tool to test the Inter communication between two Systems\nUnderstand writing Consumer Driven & Provider Tests to generate the Integration check of two services\nDeeper Understanding of Pact Contract Testing tool and its related Orchestrator tools like Pact flow to centrally manage Contract files\nAre there any course requirements or prerequisites?\nBasic Java\nSpring Boot fundamentals ( Good to have but optional)\nWho this course is for:\nAutomation Testers\nQA\nDevelopers\nSoftware Engineers",
      "target_audience": [
        "Software Developers",
        "Software Testers",
        "Software Engineers"
      ]
    },
    {
      "title": "Guía Completa JUnit y Mockito incluye Spring Boot Test",
      "url": "https://www.udemy.com/course/curso-completo-junit-mockito-spring-boot-test/",
      "bio": "Aprende desde cero JUnit 5 y Mockito usando las mejores prácticas testing TDD, además incluye Unit Test con Spring Boot",
      "objectives": [
        "Aprenderás a escribir pruebas unitarias con JUnit 5 y Mockito",
        "Domina la clase Assertions de JUnit 5 y sus métodos para afirmaciones",
        "Domina el ciclo de vida del framework JUnit5 con las anotaciones @Aftereach @Beforeach @Afterall y @Beforall",
        "Aprenderás a escribir y ejecutar pruebas unitarias con el mejor IDE Intellij IDEA (versión free o community)",
        "Aprenderás pruebas unitarias en Java usando las mejores prácticas TDD y BDD",
        "Aprenderás a escribir pruebas unitarias reales usando Mock y Spy con el Framework Mockito",
        "Domina las Anotaciones de Mockito más importantes @Mock, @InjectMocks, @Spy y @Captor",
        "Aprenderás las mejores prácticas para escribir excelentes pruebas unitarias con Spring Boot Starter Test, JUnit 5 y Mockito",
        "Domina las Anotaciones de unit testing en Spring Boot más importantes @SpringBootTest, @WebMvcTest, @DataJpaTest y @MockBean",
        "Utilizarás todas las herramientas que forman parte de Spring Boot Starter Test: JUnit, Mockito, SpringBootTest, DataJpaTest, WebMvcTest, MockMvc, WebTestClient, Hamcrest, JsonPath y más",
        "Aprenderás a escribir pruebas de integración con DataJpaTest utilizando Base de Datos en memoria H2",
        "Aprenderás a escribir pruebas de integración con WebTestClient y TestRestTemplate para testear y consumir servicios web RESTful",
        "Aprenderás a consumir y testear los servicios web RESTful con Swagger"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "Instalación JDK (opcional)",
          "Instalación IntelliJ IDEA"
        ],
        "JUnit 5": [
          "Introducción pruebas unitarias",
          "Introducción JUnit 5",
          "Actualización creando proyecto Maven en Intellij",
          "Creando y configurando el proyecto con JUnit 5",
          "Escribiendo y ejecutando primeras pruebas unitarias con Assertions",
          "Escribiendo test para el saldo",
          "Test driven development TDD con JUnit",
          "TDD para debito y crédito",
          "Probando y afirmando excepciones con assertThrows en JUnit 5",
          "Añadiendo la clase Banco y la realcion con las cuentas",
          "Probando y afirmando las realciones entre Banco y Cuenta",
          "Usando el método assertAll",
          "Agregando mensajes de falla en los métodos assertions",
          "Usando anotaciones @DisplayName y @Disabled",
          "Ciclo de vida anotaciones @AfterEach y @BeforeEach",
          "Ciclo de vida anotaciones @AfterAll y @BeforeAll",
          "Test condicionales @EnabledOnOs, @EnabledOnJre, @EnabledIfSystemProperty etc.",
          "Ejecuciones de test condicionales con @EnabledIfEnvironmentVariable",
          "Ejecución de test condicional con Assumptions programáticamente",
          "Clases de test anidadas usando @Nested",
          "Repitiendo pruebas con @RepeatedTest",
          "Escribiendo pruebas parametrizadas con @ParameterizedTest",
          "Pruebas parametrizadas con @ParameterizedTest parte 2",
          "Pruebas parametrizadas con @ParameterizedTest parte 3",
          "Tagging tests con anotación @Tag",
          "Inyección de Dependencia & componentes testInfo y TestReporter",
          "Timeout en JUnit 5",
          "Maven surefire plugin",
          "Descargar Código Fuente"
        ],
        "Mockito": [
          "Introducción a Mockito",
          "Actualización creando proyecto Maven en Intellij IDEA [Recordando]",
          "Creando y configurando el proyecto con JUnit 5 y Mockito",
          "Implementando la clase Service",
          "Realizando primeras pruebas con mockito",
          "Agregando nuevas dependencias mock",
          "Probando nuevas dependencias mock",
          "Probando con verify",
          "Inyección de dependencia y anotaciones @Mock, @InjectMocks y @ExtendWith",
          "Realizando más pruebas del repositorio con el metodo guardar",
          "Test del id incremental en el método guardar usando Invocation Argument",
          "Comprobaciones de excepciones usando when y thenThrow",
          "Argument matchers",
          "Argument matchers parte 2",
          "Capturando argumentos de método con Argument capture",
          "Usando doThrow para comprobar excepciones en métodos void",
          "Usando doAnswer",
          "Usando doCallRealMethod para la llamada real a un método mock",
          "Implementando espías con Spy y doReturn",
          "Verificando el orden de las invocaciones de los mock",
          "Verificando el número de invocaciones de los mock",
          "Descargar Código Fuente"
        ],
        "Spring Boot: Test de Servicios (Mockito)": [
          "Introducción y creando el proyecto Spring",
          "Creando las clases del modelo",
          "Creando los repositorios",
          "Implementando la clase de servicio (Service)",
          "Escribiendo nuestros tests con JUnit y mockito",
          "Test verify",
          "Escribiendo tests assertThrow para afirmar que la excepción lanzada sea correcta",
          "Escribiendo tests con assertSame",
          "Uso de anotaciones de spring @MockBean y @Autowired",
          "Introducción a la inyección de dependencia en Spring (Opcional)",
          "Deshabilitando la traza del logs de Spring en el contexto test",
          "Descargar Código Fuente"
        ],
        "Spring Boot: Test de Repositorios (DataJpaTest)": [
          "Configurando el contexto de persistencia JPA y clases entities para test",
          "Introducción a Repositories en Spring Data JPA (Opcional)",
          "Modificando nuestros repositorios con Spring Data JPA",
          "Modificando nuestros repositorios con Spring Data JPA parte 2",
          "Escribiendo pruebas de integración con @DataJpaTest",
          "Escribiendo pruebas para el save",
          "Escribiendo pruebas para el update y el delete",
          "Descargar Código Fuente"
        ],
        "Spring Boot: Test de Controladores con MockMvc (WebMvcTest)": [
          "Creando controller",
          "Creando controller parte 2",
          "Configurando Swagger",
          "Probando los endpoints con Swagger UI",
          "Escribiendo pruebas unitarias para el controlador con @WebMvcTest y MockMvc",
          "Escribiendo pruebas para el controlador parte 2",
          "Ejecutando tests con Cobertura de código (Code Coverage)",
          "Escribiendo más pruebas con MockMvc para el listar",
          "Escribiendo más pruebas con MockMvc para el guardar",
          "Escribiendo más pruebas para el Service en el método findAll()",
          "Escribiendo más pruebas para el Service en el método save()",
          "Descargar Código Fuente"
        ],
        "Spring Boot: Test de integración de Servicios Rest con WebTestClient": [
          "Configuración y escribiendo las primeras pruebas de integración con WebClient",
          "Escribiendo las primeras pruebas de integración parte 2",
          "Escribiendo test de integración para el detalle",
          "Escribiendo test de integración para el listar",
          "Escribiendo test de integración para el guardar",
          "Escribiendo test de integración para el eliminar",
          "Escribiendo test de integración para el eliminar parte 2",
          "Descargar Código Fuente"
        ],
        "Spring Boot: Test de integración de Servicios Rest con TestRestTemplate": [
          "Configuración y escribiendo primeras pruebas de integración con TestRestTemplate",
          "Escribiendo primeras pruebas de integración parte 2",
          "Escribiendo test de integración para el detalle",
          "Escribiendo test de integración para el listar",
          "Escribiendo test de integración para el guardar",
          "Escribiendo test de integración para el eliminar",
          "Corriendo todos los tests",
          "Descargar Código Fuente"
        ],
        "Fin del curso y despedida": [
          "Despedida del curso y agradecimientos"
        ]
      },
      "requirements": [
        "Conocimientos de Java SE y programación orientada a objetos",
        "NO es requisito, mas bien recomendación tener algunos conocimientos de Spring Boot e Hibernate/JPA (Opcional) para las secciones de Spring Boot Test"
      ],
      "description": "En este curso aprenderás a escribir desde cero completas pruebas unitarias Java usando JUnit 5 y Mockito con las mejores prácticas TDD y BDD.\nEl curso es completamente funcional con versiones de Java 8 y 11, 12, 13, 14, 15, 16 y superiores.\nHay muchas formas de probar nuestro código, utilizando herramientas de depuración del IDE, o simplemente escribiendo algunas validaciones de nuestro código con sentencias de control e imprimir el resultado en consola o logs, si es una aplicación RESTful usando herramientas como Swagger o Postman, navegador, etc... estas alternativas son excelentes cuando estamos desarrollando nuestra aplicación e intentando depurar cualquier error lógico, pero cualquiera de estos estilos son algo limitado, porque se aplica el juicio humano para analizar el resultado. Por otra parte, nuestras pruebas deberían de tener algo de automatización, un sistema de reportes y sobre todo alguna forma de continuar probando nuestro código en el tiempo, no solo el ahora, sino probar el estado de nuestra aplicación en el futuro y es aquí donde entra el Framework JUnit 5 también conocido como Júpiter (el 5to planeta del sistema solar).\nJUnit 5 es un robusto framework java para escribir y ejecutar pruebas unitarias, un proceso de examen que nos permite verificar que una pieza de código cumple con las reglas de negocio y afirmar un comportamiento esperado, además de automatizar mas el proceso, es decir en una sola ejecución podemos realizar varias pruebas y para los distintos escenarios posibles, incluso repetir o parametrizar una prueba con diferentes parámetros de entradas de una sola vez, ejecuciones condicionales, manejo y confirmaciones de excepciones, uso extensivo de anotaciones y todas las bondades y características de Java 8 como es el API Stream, expresiones lambda, programación funcional y mucho más.\nTambién aprenderemos con detalle a escribir pruebas unitarias en Spring Boot 3, usando e integrando Mockito, JUnit5, MockMvc y pruebas de integración. Spring Boot es el framework más popular y robusto para desarrollar aplicaciones web y servicios RESTful, además cuenta con una completa integración con unit testing a través de Spring Boot Starter Test, que incluye el framework de JUnit 5 y Mockito, ambos framework de pruebas unitarias más populares y robustos de Java.\nFinalmente como complemento y anexo, aprenderemos a consumir y probar nuestros servicios web RESTful con Swagger.\n\n\n¿Porqué elegir nuestros cursos?\nAcceso 7 x 24 a nuestra Plataforma e-learning.\nSoporte online con profesor Java\nAl finalizar recibes un certificado digital\nSomos pioneros en brindarte este tipo de acceso para darte la libertad que necesitas para estudiar, donde quiera que te encuentres.\nExcelente relación calidad-precio.\nConocimiento aplicable a proyectos reales del mercado laboral.\nAtención rápida y satisfactoria a las dudas por parte del profesor.\nInteractividad del curso ya que contiene foros y comunicación para resolver dudas.\nTodos los materiales del curso están en español y al finalizar recibes un diploma UDEMY digital certificando tu aprobación con validez internacional y LinkedIn.\nSi quieres ser un profesional en las tecnologías de Java y avanzar al siguiente nivel, es casi obligatorio este curso, te invito a que te inscribas, nos vemos adentro.",
      "target_audience": [
        "Personas que quieran aprender a escribir pruebas unitarias desde cero con Junit 5 Framework",
        "Personas que quieran aprender a simular (mocking) unit tests con Mockito",
        "Desarolladores que dominan Java y quieran afianzar, actualizar y profundizar sus conocimientos con JUnit5 y Mockito",
        "Personas interesadas en el desarrollo backend que necesitan dominar Junit y Mockito",
        "Desarolladores que manejan Spring Boot y necesitas aprender JUnit5 y Mockito para servicios RESTful",
        "Personas que necesitan aprender pruebas unitarias desde cero sin Spring Boot",
        "Personas que necesitan aprender pruebas unitarias con Spring Boot"
      ]
    },
    {
      "title": "Testing REST API with JBehave",
      "url": "https://www.udemy.com/course/testing-rest-api-with-jbehave/",
      "bio": "Testing a REST API with Jbehave using Serenity, Maven, Jenkins, Gherkin syntax, acceptance Test, BDD keywords, steps",
      "objectives": [
        "The basic of JBehave",
        "Automated acceptance Testing with JBehave",
        "Test REST API with JBehave",
        "Integrate Jbehave in Jenkins",
        "And more..."
      ],
      "course_content": {
        "Getting started": [
          "Introduction",
          "Install Java",
          "Install IntelliJ",
          "Install Jbehave in IntelliJ"
        ],
        "Basic of Jbehave": [
          "Concept of Jbehave (Story, Scenarios, Steps)",
          "Write your first Jbehave Story",
          "Add Serenity Library to the Project",
          "Create the required Java Classes",
          "Map Steps to Java",
          "Run Stories",
          "View Reports"
        ],
        "Testing REST API": [
          "Testing the Status Code - Part 1",
          "Testing the Status Code - Part 2",
          "Testing the Media Type",
          "Testing the JSON Payload"
        ],
        "Integration of Jbehave with Jenkins": [
          "Install Jenkins",
          "Install a Plugin and Configure it",
          "View Serenity Reports in Jenkins"
        ]
      },
      "requirements": [
        "Basic of Java"
      ],
      "description": "In This course you'll learn first the basic of Jbehave:\nWhat is Jbehave?\nWhy we use it?\nWhat is Serenity?\nAfter that you'll learn how to create an acceptance Test with BDD\nWrite your first story\nMap the story steps to java methods\nRun your test\nView the Reports\nIn the third Section of this course, you'll be able to test REST API with Jbehave.\nTest the status code of a REST API\nTest The Media Type of a REST API\nTest The JSON Payload of a REST API\nAt the end of this course, you'll be able to integrate Jbehave into jenkins.\nInstall Jenkins\nInstall the HTML Publisher Plugin\nConfigure this plugin to see the Serenity Reports",
      "target_audience": [
        "Software Tester",
        "Java Software Developer",
        "Product Owner"
      ]
    },
    {
      "title": "Selenium with Java : Master Automation Testing +Frameworks",
      "url": "https://www.udemy.com/course/selenium-with-java-master-automation-testing-frameworks/",
      "bio": "TOP RATED (BEST SELLER) Master SELENIUM java course Selenium WebDriver with Java -Basics to Advanced + Frameworks",
      "objectives": [
        "***** At the end of this course, you will have detailed understanding of Web Automation Frameworks",
        "*** In-depth understanding of Selenium WebDriver CHALLENGES with real time examples",
        "Deeper understanding of Automation guidelines and code quality standards",
        "You will be in a position to pick any website over internet and can automate it with all the possible test cases",
        "Additional knowledge to understand Mobile Testing Database testing and Performance testing with Selenium",
        "You will be able to perform CROSS-BROWSER testing using SELENIUM GRID",
        "You will have complete understanding of TestNG Framework in Selenium",
        "You should be able to verify Data Integrity with the GUI of the application",
        "With all this knowledge gained, you should be easily able to clear Selenium Automation interviews"
      ],
      "course_content": {
        "Introduction to Selenium": [
          "Introduction to Selenium"
        ],
        "TestNG Framework in Selenium (theoretical)": [
          "Introduction to TestNG Framework in Selenium",
          "Features of TestNG Framework in Selenium",
          "TestNG with Annotations in Selenium( PART 1 )",
          "TestNG with Annotations in Selenium( PART 2 )",
          "Data Provider Annotation in Selenium",
          "Introduction to Assertions"
        ],
        "TestNG Framework in Selenium ( practical implementation ).": [
          "Installation of TestNG in Eclipse IDE",
          "Create TestNG Class in Selenium",
          "Create Test methods in Selenium",
          "Create Test methods using Priority in Selenium",
          "Create Test methods using enabled in Selenium",
          "Create Test methods with Data Provider , BeforeMethod & AfterMethod Annotation",
          "Soft Assertions in Selenium",
          "Hard Assertions in Selenium",
          "TestSuite (in TestNG )/ testing.xml",
          "Configuration of testing.xml file in selenium",
          "Packages and Parallel Execution of testing.xml in Selenium",
          "include and exclude of testing.xml in Selenium"
        ],
        "Web Driver Architecture in selenium ( theoretical implementation )": [
          "Introduction to Webdriver Architecture in Selenium",
          "Features of WebDriver Architecture in Selenium",
          "Introduction to Maven Project in Selenium",
          "Types of Maven Repository in Selenium",
          "Introduction to pom.xml of Maven in Selenium"
        ],
        "Web Driver Architecture in selenium ( Practical implementation )": [
          "Create Maven Project in Selenium",
          "Adding dependencies and plugins of Maven in Selenium",
          "Installing Drivers for Maven Project in Selenium",
          "Launching Chrome Driver in Selenium",
          "Launching Test Website in Selenium",
          "Maximize window and Closing window in Selenium"
        ],
        "Web Driver API architecture": [
          "Web Elements Locator Strategies in Selenium",
          "Web Element Locator by ID",
          "Code: Web Element Locator by ID",
          "Web Element Locator by Name",
          "Code: Web Element Locator by Name",
          "Web Element Locator by className",
          "Code: Web Element Locator by className",
          "Web Element Locator by linkText and partialLinkText",
          "Code: Web Element Locator by linkText and partialLinkText",
          "Web Element Locator by Tag Name",
          "Code: Web Element Locator by Tag Name",
          "Web Element Css Locator by ID",
          "Code: Web Element Css Locator by ID",
          "Web Element Css Locator by class",
          "Code: Web Element Css Locator by class",
          "Web Element Css Locator by attribute",
          "Code:Web Element Css Locator by attribute",
          "Web Element Css Locator by multiple attribute",
          "Code: Web Element Css Locator by multiple attribute",
          "Web Element Css Locator by partial string",
          "Code: Web Element Css Locator by partial string",
          "Web Element Css Locator for Child Elements"
        ],
        "Web Element Locator using XPath in selenium": [
          "Introduction to Xpath in Selenium",
          "Type of Xpath in Selenium",
          "Locating Web Element using XPath in Selenium",
          "Code: Locating Web Element using XPath in Selenium",
          "Technique Used to locate Web Element easily using Xpath in Selenium"
        ],
        "Web Driver Commands in Selenium": [
          "Web Driver Commands in Selenium",
          "Code: Web Driver Commands in Selenium",
          "Select Command in Selenium",
          "Wait Command in Selenium"
        ],
        "Automate Mouse and Keyboard Events": [
          "Introduction to Automate Mouse and Keyboard Events",
          "Actions Class of Web Driver API in Selenium",
          "Keyboard Events in Selenium",
          "Execution of all the mouse and keyboard Actions"
        ]
      },
      "requirements": [
        "NO AUTOMATION / CODING EXPERIENCE NEEDED, beginners will be easily able to follow this course",
        "Windows/MAC computer",
        "Java SDK, Eclipse, Firefox, Chrome, TestNG, Selenium IDE, Selenium WebDriver. All the required installation are ALREADY COVERED in the lectures and documentation has been uploaded to the course"
      ],
      "description": "This course includes a wide range of topics from Selenium WebDriver Basics and Advanced, Java Concepts, TestNG Framework, Automation Framework Design (Page Objects, Page Factory, Data Driven, Reading Excel Files), Best reporting tool - Advanced Reporting, Cross-Browser Testing with Selenium Grid 2.0, Maven Build Management, Git and GitHub, Continuous Integration with Jenkins, Git integration with Jenkins, Database Testing, Performance Testing, Behavior Driven Testing Using Cucumber, Sauce Labs Integration, Interview Preparation. All materials including code files.\nEvery QA Professional have a wish of learning trending Automation courses but somehow 90% of them are giving up their thoughts.\nIts not due to the lack of courses available in the Market, but its about finding the right Mentor who can guide,teach and understand student's pulse with their background education.\nFor Web Automation Testing :\n1.Selenium Tutorial - In Java and Python\n2. Protractor Tutorial - Java Script Automation for Angular\n3.Selenium- Frameworks\n4. Cucumber Framework Tutorial\nFor Mobile Automation Testing\n3. Appium Mobile Testing Tutorial\nFor API Automation Testing :\n4. SoapUI API Automation\n5. Rest API Automation\nSo what makes this course Unique in the Market?\nWe assume that students have no experience in automation / coding and start every topic from scratch and basics.\nExamples are taken from REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated.\nTopics includes:\nComplete Core java\nSelenium Webdriver- Major focus (7 hours+ content)\nLive Examples in Automating Web applications in all supported Browsers\nStrategy to handle Rich Web UI using Advanced WebDriver\nReal time challenges we face in WebDriver and solutions to handle it\nSelenium Grid\nLive projects on Selenium\nInterview questions discussion with solutions\nTestNG\nMaven",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career in test automation",
        "Quality Assurance Automation professionals willing to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "ISTQB Foundation Level: 500 Exam Questions & Answers",
      "url": "https://www.udemy.com/course/istqb-foundation-practice-questions/",
      "bio": "500 Practice Questions Based on the Latest ISTQB Foundation Syllabus v4.0",
      "objectives": [
        "Practice 500 exam-style questions aligned with ISTQB CTFL v4.0",
        "Understand key testing concepts through explained answers",
        "Identify common exam patterns and question traps",
        "Assess your readiness with module-based and mixed mock tests",
        "Strengthen your confidence for the official ISTQB Foundation exam",
        "Watch a full exam walkthrough with guided solutions",
        "Learn how the ISTQB exam works and what to expect"
      ],
      "course_content": {
        "Introduction": [
          "About instructor",
          "Information about ISTQB",
          "ISTQB Exam Overview"
        ],
        "Fundamentals of Testing": [
          "Quiz 1",
          "Quiz 2",
          "Quiz 3"
        ],
        "Testing Throughout the SDLC": [
          "Quiz 4",
          "Quiz 5",
          "Quiz 6"
        ],
        "Static Testing": [
          "Quiz 7",
          "Quiz 8",
          "Quiz 9"
        ],
        "Test Analysis and Design": [
          "Quiz 10",
          "Quiz 11",
          "Quiz 12",
          "Quiz 13"
        ],
        "Managing the Test Activities": [
          "Quiz 14",
          "Quiz 15",
          "Quiz 16",
          "Quiz 17"
        ],
        "Test Tools": [
          "Quiz 18",
          "Quiz 19"
        ],
        "Full Mock Exams": [
          "Sample Exam 1",
          "Sample Exam 2",
          "Sample Exam 3",
          "ISTQB CFTL 4.0 - Exam Answers",
          "Congratulations on Completing the Course!"
        ]
      },
      "requirements": [
        "Basic understanding of software development or IT terminology is helpful",
        "No prior testing experience required — course is beginner-friendly",
        "Motivation to pass the ISTQB Foundation Level exam"
      ],
      "description": "Welcome to the \"Exam Preparation: ISTQB Foundation Level (CTFL) v4.0 — 500 Practice Questions\" Course!\n\nThis course is your ultimate practice resource for mastering the fundamentals of software testing and preparing for the ISTQB Certified Tester Foundation Level (CTFL) exam — updated according to the latest v4.0 syllabus.\nWhether you're just beginning your testing career or aiming to refresh your knowledge with the most up-to-date version of the ISTQB syllabus, this course gives you 500 carefully designed multiple-choice questions with clear explanations — structured by module and exam objective.\n\n\nWhat You’ll Get:\n\n\n500 Practice Questions: Covering all areas of the ISTQB CTFL v4.0 syllabus — from testing fundamentals to test tools.\nDetailed Explanations: Every question includes a concise explanation to reinforce learning and eliminate confusion.\nModular Test Structure: Questions are grouped by syllabus module — perfect for progressive study and revision.\nMock Exams: Simulate the real exam experience with full-length tests mixing all topics.\nUpdated for Syllabus v4.0: All questions are aligned with the most recent ISTQB Foundation Level 4.0 syllabus published in 2023.\n\n\nTopics Covered:\n\n\nFundamentals of Testing\nTesting Throughout the Software Development Lifecycle\nStatic Testing\nTest Analysis and Design\nManaging the Test Activities\nTest Automation and Tools\n\n\nWho This Course Is For:\n\n\nAspiring Testers preparing for the ISTQB Foundation Level exam.\nJunior QA Professionals looking to validate their knowledge through practical exam-style questions.\nStudents or Career Changers wanting to break into software testing with ISTQB certification.\nAnyone Studying for CTFL v4.0 who wants to build confidence before the real exam.\n\n\nBy the end of this course, you’ll have practiced every key concept of the ISTQB Foundation Level syllabus with hundreds of targeted questions. Whether you're aiming to pass the exam or to solidify your software testing fundamentals, this course will give you the clarity and confidence you need.\nLet’s begin your journey to ISTQB certification success!",
      "target_audience": [
        "Anyone preparing for the ISTQB Foundation Level (CTFL) exam based on syllabus v4.0",
        "Aspiring software testers and QA professionals",
        "Students and career changers entering the testing field"
      ]
    },
    {
      "title": "How to Become a Software Tester / QA Engineer",
      "url": "https://www.udemy.com/course/how-to-become-a-software-tester-h/",
      "bio": "Plan for Software Testing/QA Career. TIPS for CV, Interviews & Freelance/Remote Software Testing Jobs. Testing Exercises",
      "objectives": [],
      "course_content": {
        "Testing Journey": [
          "Intro & My Testing Journey",
          "Steps for YOUR Testing Journey"
        ],
        "Testing is a Great Career and Always in Demand": [
          "Pursue 3 Technical Skills",
          "Soft Skills",
          "Let's Break it down",
          "Average Salary for Software Testers",
          "Software Testing - Always in Demand Skill",
          "Software Testers Play Various Roles"
        ],
        "Testing Career Path Step 1: Learning": [
          "Insight into Learning Software Testing",
          "Learning Resources (Course links)"
        ],
        "Testing Career Path Step 2: Skills": [
          "Showcasing Your Skills",
          "Ideal Skills for Your Testing CV"
        ],
        "Testing Career Path Step 3: Assignments, Interviews & Certifications": [
          "Assignments & Interviews",
          "Tips for Certifications"
        ],
        "ASSIGNMENTS: TESTING EXERCISES to learn Software Testing is more Fun!": [
          "ASSIGNMENT: Testing Exercise 1 (Find Bugs)",
          "ASSIGNMENT: Testing Exercise 2 (Find Bugs)",
          "ASSIGNMENT: Testing Exercise 3 (Find Bugs)"
        ],
        "Testing Career Path Step 4: Job Hunting": [
          "Job Hunting Targets",
          "Freelancing Portals",
          "Freelancing Resources (Links)",
          "Remote Jobs Resources (Links)",
          "Job Portals",
          "Job Hunting TIPS"
        ],
        "Testing Career Path Step 5: Continuous Learning & Earning": [
          "TIPS: Continuous Learning & Earning"
        ]
      },
      "requirements": [
        "You simply need to be determined and passionate to become an effective software tester"
      ],
      "description": "Firstly, if you are thinking of starting a career in IT/Software Testing/QA or Switching careers – Software Testing is certainly in high demand. So we recommend you the 5 steps as an ideal ‘Software Testing Career Path’.\nSecondly, the steps illustrated should guide you towards becoming a successful Tester/Test Engineer/QA. In addition, our hands on courses would help you achieve your dream career in Software Testing so you can become an effective software tester.\nMost importantly, our practical / project-based testing courses could help you land a Testing Job and become a Successful Software Tester/Test Engineer/QA.\nYou shall get various insights into:\nHow to become a Software Tester with no experience / entry level\nWhy Software Testing is a great career option and one of the highly paid IT jobs\nWhy is Software Testing a highly desirable position in the IT industry\nFinding Software Tester/QA Opportunities / job portals\nFreelance Software Testing/QA Jobs\n100% Remote Software Testing Jobs\nTesting Certifications - although sometimes considered optional, but it is a big plus on you CV\nEssential Testing Skills for your CV that helps you land interviews and a job\nPracticing and rehearsing for Testing Interviews\nWhere do you start to be a Tester? Pursuing hands-on, practical and projects-based Software Testing courses\nFocusing on Testing career path and progressing in the right direction - learn from each and every Software Testing adventure on your journey\nTesting ASSIGNMENTS/exercises to understand Software Testing is more fun",
      "target_audience": [
        "Those wishing to apply for entry level Testing jobs",
        "Anyone currently seeking to move into a Software Tester role",
        "Anyone thinking of Switching Careers"
      ]
    },
    {
      "title": "Todo sobre Testing y Debugging de Software Desde 0 a Experto",
      "url": "https://www.udemy.com/course/testing-debugging-software-completo-walter-coto-alvaro-chirou/",
      "bio": "Para desarrollar aplicaciones correctamente, debes ser capaz de localizar y corregir errores eficientemente. Apréndelo.",
      "objectives": [
        "Aprenderás toda la Teoría que hay sobre Testing",
        "Automatización con Selenium Web Driver y Python",
        "Hacer Testing sobre Udemy",
        "Aprenderás a Programar en Python para hacer Automatización",
        "La Base de HTML y CSS para realizar Automatización",
        "Conceptos Fundamentales del Software Testing",
        "Los pilares de Testing y la Importancia de la Automatización",
        "Módelos para Desarrollar Software y su Relación con el Testing",
        "El Proceso y las Fases para Realizar Testing",
        "Diseñar Test Case",
        "Todas las Técnicas que se pueden Implementar para Hacer Testing",
        "Técnicas Estáticas y Dinámicas para hacer Testing",
        "Automatizar con Python y Selenium",
        "Automatizar con Selectores Básicos de Selenium Web Driver",
        "Automatizar con XPATH",
        "Buenas Prácticas de la Automatización"
      ],
      "course_content": {
        "Sobre el curso": [
          "Recomendaciones para una mejor experiencia en el curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Parte 1 - Aprendemos el lenguaje Python": [
          "Consejos sobre como realizar esta formación profesional."
        ],
        "Parte 1: Entorno de Trabajo": [
          "Instalación de Jupyter",
          "Como usar jupyter y código del curso (IMPORTANTE VER ESTA CLASE)",
          "Instalar Python3",
          "Instalar Sublime Text",
          "Instalar Visual Studio Code",
          "Extensiones para Visual Studio Code",
          "Programar desde el IDLE",
          "Programar desde tu teléfono",
          "Ejecutar Archivos"
        ],
        "Parte 1: Primeros Pasos": [
          "Variables y Tipos de Datos (Teoría)",
          "Primer contacto con Python",
          "Cadenas (Teoría)",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Cadena de Caracteres (parte 1)",
          "Cadena de caracteres con variables operaciones (parte 2)",
          "índice de cadenas.",
          "Listas",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Ingresamos datos por teclado"
        ],
        "Parte 1: Operadores relacionales, lógicos y asignación. Expresiones Anidadas": [
          "Operadores Aritméticos y Jerarquía (Teoría)",
          "Operadores Lógicos y Relacionales (Teoría)",
          "Operadores Lógicos",
          "Operadores Relacionales",
          "Expresiones anidadas y operadores de asignación",
          "Ejercicio",
          "Resolución de Ejercicio"
        ],
        "Parte 1: Estructuras de control": [
          "If, Else y Elif (Teoría)",
          "If",
          "if else y elif",
          "Ejercicios",
          "Ejercicios",
          "Resolución de Ejercicios",
          "Resolución de Ejercicios",
          "Bucles (Teoría)",
          "While",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Práctica donde aplicamos todo lo aprendido",
          "For",
          "Ejercicios",
          "Resolución de Ejercicio"
        ],
        "Parte 1: Tuplas, Diccionarios, Conjuntos, Pilas y Colas": [
          "Listas, Tuplas y Diccionarios (Teoría)",
          "Tuplas",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Conjuntos",
          "Diccionario",
          "Ejercicios",
          "Resolución de Ejercicios",
          "Pilas",
          "Colas"
        ],
        "Parte 1: Entradas por Teclado y Salidas por Pantalla": [
          "Entradas por teclado",
          "Ejercicio",
          "Resolución de Ejercicio",
          "Resolución de Ejercicio",
          "Salida por pantalla",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Resolución de Ejercicio"
        ],
        "Parte 1: Funciones": [
          "Funciones (Teoría)",
          "Funciones",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Retorno y envío de valores",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Funciones argumentos parte 1",
          "Funciones argumentos parte 2",
          "Funciones argumentos parte 3",
          "Ejercicios",
          "Resolución de Ejercicio",
          "Funciones recursivas e integrada"
        ],
        "Parte 1: Errores y Excepciones": [
          "Errores",
          "Excepciones múltiples",
          "Excepciones múltiples e invocación de excepciones"
        ]
      },
      "requirements": [
        "Se recomienda tener un conocimiento Básico sobre el uso de las tecnologías de la información, es decir con el nivel de usuario que navega por internet y usa su sistema operativo, es suficiente para entender en su profundidad esta formación profesional.",
        "Computadora, puede ser con Windows, Linux o Mac.",
        "Es deseable que el tamaño de la pantalla sea por lo menos de 17'' (pulgadas) para poder ver con claridad lo que se presenta en pantalla."
      ],
      "description": "En esta formación profesional te enseñaremos absolutamente todo lo que necesitas saber para realizar Testing y Debugging de Software, desde 0.\nEl Testing es una de las partes más importantes del desarrollo, y hoy esto no se esta enseñando en profundidad ni siquiera en las Universidades.\nDado que el Testing vamos a utilizar Python, también te enseñaremos el lenguaje desde 0. Sumado a que utilizaremos Selenium y usaremos etiquetas HTML y CSS, también te brindaremos esos conocimientos.\nTodo el conocimiento va a estar a tu alcance y en base a lo que ya sepas, podrás continuar desde le nivel que te encuentres.\nPara desarrollar aplicaciones de forma profesional, hoy es clave saber detectar y corregir los errores de forma eficiente para evitar sorpresas y problemas en nuestro código.\nDe esta forma optimizaras tu tiempo al máximo y es un requisito indispensable en las empresas de software saber sobre Testing y Debugging.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nY junto a mi compañero Walter Coto donde con él hemos dado formaciones profesionales en conjunto también en la plataforma de Udemy, que tiene más de 400.000 estudiantes.\nTendrás acceso de por vida al curso, recibirás actualizaciones y respuestas a tus preguntas a través de la plataforma de Udemy.\nEmpieza a aprender ya mismo!\nNos vemos dentro!\nTus profesores: Álvaro Chirou y Walter Coto",
      "target_audience": [
        "Todo el que quiera aprender de Testing y Debugging de Software"
      ]
    },
    {
      "title": "ISTQB Certified Tester - Foundation Level 4.0 (CTFL) - Tests",
      "url": "https://www.udemy.com/course/istqb-certified-tester-foundation-level-40-ctfl-tests/",
      "bio": "NEW 6 Mock exams to prepare for the 2024 ISTQB Certified Tester Foundation Level (CTFL) v4.0 Exam with UNIQUE questions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the enhanced ISTQB Certified Tester - Foundation Level 4.0 (CTFL) - Tests course, meticulously crafted for the 2023 syllabus, and designed to thoroughly prepare you for the ISTQB Certified Tester Foundation Level (CTFL) v4.0 Exam. This course is distinguished by its exclusive focus on the new syllabus, with each of the six practice exams comprising 40 entirely new questions. These questions are tailored to reflect the most recent concepts and practices in the field of software testing, ensuring you're equipped with the latest knowledge for your ISTQB certification.\nWhat sets our course apart:\nCurrent and Relevant: Each question is meticulously aligned with the latest ISTQB Foundation Level syllabus, ensuring you're studying the most relevant and current material in the domains of software testing, ISTQB certification, and quality assurance. Additionally, there are no questions or answers related to the old syllabus, so you can be confident that all content is ENTIRELY aligned with the 2023 UPDATE.\nInnovative Question Design: Our course guarantees unique and original questions that are distinct from any existing exams or online resources. This approach ensures an engaging learning experience that challenges your understanding of ISTQB Foundation principles in new and complex scenarios. No repeating question!\nVisual Learning: Numerous questions include visual explanations to aid understanding, which are particularly beneficial for complex ISTQB concepts and enhance your learning experience in preparing for the ISTQB Certified Tester Foundation Level exam.\nReal Exam Simulation: Our practice exams are designed to closely mimic the format and difficulty of the actual ISTQB Foundation exam, providing a balanced and comprehensive preparation that builds confidence and ensures a deep understanding of ISTQB Foundation Level topics.\nClarity and Relevance: We focus on providing content that is not only up-to-date but also devoid of outdated or irrelevant information, reflecting the core objectives and structure of the ISTQB Foundation syllabus.\nThis course isn't just about passing the ISTQB exam; it's about enhancing your capabilities as a software tester and quality assurance professional. Through detailed explanations, rigorous practice, and a focus on the latest syllabus, you're not just preparing for an exam; you're laying a robust foundation for a career in software testing.\nKey Differences Between Practice Tests and Video Lecture Courses\nOur practice tests course provides several unique advantages over traditional video lectures:\nInteractive Realism: These tests simulate the ISTQB exam format, offering questions with multiple correct answers to better reflect the real test environment.\nVisual Explanations: Our practice tests include visual aids in explanations to help clarify complex concepts and ensure deeper understanding.\nDetailed Feedback: Our practice tests can accommodate more detailed explanations due to fewer character restrictions compared to the quizzes in video courses, offering you a richer understanding of each topic.\nThis course is designed to offer a comprehensive and effective preparation for your ISTQB certification, making you well-prepared to tackle real-world testing challenges.\nEnroll today to become a proficient, ISTQB-certified tester, ready to meet the demands of today's dynamic software industry with confidence and skill.\nLegal Disclaimer:\nThis course is not officially endorsed by ISTQB, nor should it be considered a representation of ISTQB's views or policies.",
      "target_audience": [
        "Beginners in Software Testing",
        "Experienced Testers: Professionals already working in the field of software testing who want to validate their skills and knowledge with a globally recognized certification.",
        "Software Developers: Developers who want to understand testing processes and techniques to improve the quality of their code and software products.",
        "Quality Assurance Professionals: QA analysts and managers who want to deepen their understanding of software testing within the broader context of quality assurance.",
        "Career Changers: Individuals looking to transition into a career in software testing and quality assurance.",
        "Students Studying Computer Science or Related Fields: Students who want to supplement their academic studies with practical skills and knowledge in software testing."
      ]
    },
    {
      "title": "Hands-On JUnit 5 for Beginners : Unit Testing in Just 2 Days",
      "url": "https://www.udemy.com/course/practical-junit-5-for-java-developers-junit-5-simplified/",
      "bio": "Unit Testing with JUnit 5 Made Easy for Java Developers [JUnit 5]",
      "objectives": [
        "Master the Basics of JUnit 5: Get started with JUnit 5 fundamentals, including setup, annotations, and structure of a basic unit test.",
        "Write Real-World Unit Tests: Build practical skills by writing unit tests for various Java applications.",
        "Practice Test-Driven Development (TDD): Apply TDD principles to create maintainable code by writing tests first.",
        "Use Assertions: Understand and apply JUnit assertions, such as assertEquals, assertThrows, and all commonly used assertion methods.",
        "Use Assertions and Test Lifecycle Annotations: Understand and apply lifecycle annotations like @BeforeEach, @AfterEach, @BeforeAll, @AfterAll, and many more.",
        "Use Assertions: Understand and apply JUnit assertions, such as assertEquals, assertThrows, and all commonly used assertion methods.",
        "Optimize Your Testing Skills for Software Development: Gain real-world skills to write high-quality tests, debug effectively, and improve software reliability.",
        "Integrate JUnit 5 with IDEs and Build Tools: Set up JUnit 5 with Eclipse and Maven for streamlined testing workflows.",
        "Handle Exceptions in Testing: Learn how to test for expected exceptions and validate error handling in Java applications."
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Java",
        "Knowledge of Java syntax, OOP concepts (like classes, objects, inheritance, and polymorphism), and basic Java programming is essential. Familiarity with Java 8+ features, such as lambdas, can also be beneficial.",
        "Familiarity with IDEs (Eclipse or IntelliJ IDEA )",
        "Willingness to Practice Writing Tests"
      ],
      "description": "Welcome to JUnit 5 for Java Developers: A Simplified Approach to Unit Testing!\nHear From Our Learners\n\n\n\"Amazing trainer! Every concept was thoroughly and comprehensively explained. Everything about unit testing is clear now. Thank you!\"\n– Birajdar Vishal Vijay, JUnit Course\nHyder has been one that good instructor, making difficult concepts easy. I watched this JUnit course and I was able to learn understand the logic and what is needed. I have also done Java classes with Hyder and I highly recommend his materials\n-Edy Molina, JUnit Course, Java Course\n\"I recently completed the JUnit course, and it exceeded my expectations. The instructor explains concepts clearly, with a perfect blend of theory and hands-on examples. Each topic is broken down in an easy-to-follow manner, and I appreciated the real-world examples that made the material more applicable to development. The course structure is logical, and each section builds naturally on the previous one. Highly recommended for anyone looking to strengthen their skills in test-driven development and Java testing!\"\n– Dilip Bharadwaj, JUnit Course\n\"Great course! The instructor does an excellent job explaining concepts clearly and at an ideal pace. I appreciated how practical and well-structured the lessons were. Highly recommend it to others!\"\n– siddique syed, JUnit Course\n\"This course is excellent. The mentor is outstanding, with clear explanations and no unnecessary details. Straight to the point, making it easy to understand and apply. Awesome!\"\n– Sukumar Tusam, JUnit Course\nThis comprehensive course is carefully crafted to help you master JUnit 5, from its core concepts to advanced features, enabling you to confidently write effective unit tests for your Java applications.\nUnit testing is a crucial skill for every Java developer, ensuring that your code works as expected and helping to maintain the stability of your applications over time. In this course, you'll learn not only how to write tests but also how to use unit testing to improve the design and quality of your code.\nThroughout the course, we will start with the fundamentals of JUnit 5, including basic assertions, annotations, and creating simple test cases. As you progress, we’ll dive into more advanced features, such as using assertions effectively, organizing tests with nested classes, and leveraging Test-Driven Development (TDD) practices. You’ll learn how to automate your testing process with Maven and integrate testing seamlessly into your development workflow.\nThis course includes clear examples, hands-on exercises, and practical tips that you can immediately apply to real-world scenarios. We’ll also cover essential tools and techniques, like JUnit 5 annotations, assertions, and how to set up and configure Maven for testing. You will also explore how to handle testing in real-world scenarios, such as testing for exceptions, performance testing, and using test fixtures to prepare your test environment.\n\n\nWhy This Course?\nBeginner-Friendly: No prior knowledge of JUnit 5 is required. You’ll start from the basics and gradually move to more advanced topics.\nPractical and Hands-On: This course focuses on practical implementation with real-world examples, so you can apply what you learn immediately.\nTest-Driven Development (TDD) Focus: Emphasis on writing tests first and improving your coding process through unit testing.\nClear and Concise Explanations: All topics are explained clearly, ensuring you understand each concept, no matter your experience level.\nComplete Course Structure: This course is divided into easy-to-understand sections, covering everything from the basics to advanced techniques.\nLet’s get started with JUnit 5 and take the first step toward writing better, more reliable code today!",
      "target_audience": [
        "If you are new to Java and want to learn how to write unit tests for your applications, this course is for you. You’ll start from scratch, learning the basics of JUnit 5 and how it fits into the Java development process.",
        "If you’re already a Java developer but want to sharpen your testing skills or transition from older testing frameworks like JUnit 4 or TestNG, this course will guide you through advanced JUnit 5 concepts and practices.",
        "If you've never written unit tests before and want to understand why testing is crucial for building robust software, this course will help you grasp unit testing fundamentals and how to implement them using JUnit 5.",
        "Learn to apply Test-Driven Development (TDD) practices with JUnit 5, regardless of your experience level. If you want to write clean, maintainable, and bug-free code, this course will teach you how to do that through writing tests first.",
        "If you’re already an experienced developer but need to strengthen your knowledge of modern Java testing and explore JUnit 5’s powerful new features, this course is the perfect opportunity to boost your skills."
      ]
    },
    {
      "title": "ISTQB Foundation Level CTFL V4.0 chapter wise exams for 2025",
      "url": "https://www.udemy.com/course/istqb-foundation-level-chapter-wise-updated-question/",
      "bio": "ISTQB Foundation Level (CTFL) v4 - Practice Test. Updated question as per latest Syllabus, boost your confidence",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "The ISTQB Foundation Level (CTFL) Practice Exam is a comprehensive and rigorous assessment tool designed to evaluate the knowledge and skills of individuals seeking certification in software testing. This exam is specifically tailored to the International Software Testing Qualifications Board (ISTQB) Foundation Level syllabus, which covers the fundamental principles and concepts of software testing, including testing techniques, test management, and test tools.\n\n\nThe CTFL Practice Exam is comprised of a series of multiple-choice questions that are designed to test the candidate's understanding of the ISTQB Foundation Level syllabus. The questions are carefully crafted to cover all the key topics and concepts, and are designed to be challenging and thought-provoking. The exam is timed, with a set amount of time allocated for each question, ensuring that candidates are able to demonstrate their knowledge and skills under pressure.\n\n\nThe CTFL Practice Exam is an invaluable resource for individuals seeking certification in software testing, as it provides a realistic and accurate representation of the actual ISTQB Foundation Level exam. By taking the practice exam, candidates can identify areas where they need to improve their knowledge and skills, and can focus their study efforts accordingly. Additionally, the practice exam provides candidates with a sense of what to expect on the actual exam, helping to reduce anxiety and increase confidence.\n\n\nOverall, the ISTQB Foundation Level (CTFL) Practice Exam is an essential tool for anyone seeking certification in software testing. Its comprehensive coverage of the ISTQB Foundation Level syllabus, challenging questions, and realistic exam format make it an invaluable resource for candidates looking to succeed in the field of software testing.\n\n\nThe practice tests provide an entire exam’s worth of questions, enabling you to confirm your mastery and providing you with the confidence you’ll need to take your final ISTQB Foundation Level Agile Extension certification exam.\n\n\nThe practice tests are timed, so you’ll know when you’re taking more time than the ISTQB allows, and at the end of the test, you’ll receive a personal breakdown of the questions you answered correctly and incorrectly to help you continually improve. You’ll also be able to see an explanation for each question at the end of the test to help you avoid making the same mistakes when taking the exam.\n\n\nYou can go back and retake the practice exam as many times as you wish. If you need to leave during the practice test, or decide that you want to work on something else, the feature will automatically pause the exam and the test’s timer. So, when you’re ready to return to the practice test you can resume where you left off!\n\n\nIt is recommended that you take practice tests when you are done with your certification exam preparation.\n\n\nIn this ISTQB Agile exam preparation course, you'll be challenged with 150 ISTQB Agile practice exam questions. These questions have been written to emulate the ISTQB Agile exam.\n\n\nThis course covers the following chapters:\nFundamentals of Testing: The basic principles of testing, testing terminology, and the fundamental test process.\nTesting throughout the Software Development Lifecycle: The different testing activities that can be carried out throughout the software development lifecycle and the benefits and drawbacks of each.\nStatic Techniques: Techniques that can be used to review documents and code without executing them.\nTest Design Techniques: Techniques for designing tests that can be executed to validate software functionality.\nTest Management: Techniques for managing the testing process, including planning, monitoring, and controlling.\nTools support for Testing: An overview of the different types of testing tools available and their benefits and drawbacks.\n\n\nThe exam is typically 60 minutes long, with 40 multiple-choice questions, and the passing score is 65%. The exam is available in several languages and can be taken online or at an authorized testing center. Upon passing the exam, candidates receive a certificate that is recognized internationally.\n\n\nPerhaps this is your first step toward the certification, or perhaps you are coming back for another round. We hope that you feel this exam challenges you, teaches you, and prepares you to pass the ISTQB Agile. If this is your first study guide, take a moment to relax. This could be the first step to a new high-paying job and an AMAZING career.\n\n\nPracticing for an exam like the ISTQB Agile can be a full-time job. In fact some exams are actually paid for by work because they are so intensive. Certification is not simple and takes immense work. It takes time, practice, and the right focus. We understand that because we have been in this industry for years and working in space full of less savory test prep sources.\n\n\nTechnology is ranked as the #1 source of U.S. jobs. Are you looking to kick start your career, improve your existing IT skills, or increase your chances of getting that IT job? Did you know 96% of HR managers use IT certifications as screening or hiring criteria during recruitment?*\n\n\nLegal Notice: This material is not accredited by the ISTQB.\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "150 Unique Questions",
        "Suitable for All Levels",
        "You'll have a clear understanding of which ISTQB (CTFL-AT) Agile Tester Foundation Level Certification exam domains you need to study.",
        "You'll feel confident taking the ISTQB (CTFL-AT) exam knowing these practice tests have prepared you for what you will see on the actual exam.",
        "You'll learn additional knowledge from the question explanations to prepare you to pass the ISTQB (CTFL-AT) Agile Tester Foundation Level Certification exam.",
        "Anyone studying for the ISTQB (CTFL-AT) Agile Tester Foundation Level Certification who wants to feel confident about being prepared for the exam.",
        "This practice paper will help you to figure out your weak areas and you can work on it to upgrade your knowledge.",
        "Have a fundamental understanding of the ISTQB (CTFL-AT) Agile Tester Foundation Level Certification",
        "Basic to Advance ISTQB (CTFL-AT) Agile Tester Foundation Level Step by Step.",
        "By taking this course, develop your ISTQB (CTFL-AT) Agile Tester Foundation Level",
        "You Will Be Able To Zero to Hero in ISTQB (CTFL-AT) Agile Tester Foundation Level",
        "Students who are preparing for ISTQB (CTFL-AT) Agile Tester Foundation Level",
        "You will be confident enough to take the ISTQB (CTFL-AT) Agile Tester Foundation Level Certification exam and pass the exam at First attempt",
        "Students who wish to sharpen their knowledge of ISTQB (CTFL-AT) Agile Tester Foundation Level",
        "Anyone who is looking to PASS the ISTQB (CTFL-AT) Agile Tester Foundation Level exam"
      ]
    },
    {
      "title": "Selenium with Python",
      "url": "https://www.udemy.com/course/selenium-python/",
      "bio": "Learn end to end selenium with python",
      "objectives": [
        "Automate web application end to end using selenium with python as a programming language"
      ],
      "course_content": {
        "Python as a Programming Language": [
          "Introduction to Python",
          "Conditional Statements and Loops in Python",
          "Strings, Lists and Dictionary",
          "Files, Regex and Exception Handling",
          "Object Oriented Programming with Python"
        ],
        "Basics of Selenium": [
          "Introduction to Selenium and IDE",
          "Concept of Locators"
        ],
        "Selenium Webdriver with Python": [
          "Setting Selenium webdriver for different browsers",
          "Pyunit, Synchronization and Parameterization",
          "Working with Table, Dropdown, Frame and Alerts",
          "Action Class, Working with MySQL, Selenium Grid"
        ],
        "Framework and its Components": [
          "Page Object Model",
          "Work with Logs, Excel and types of framework"
        ],
        "Behave - The BDD for Python": [
          "Introduction to BDD",
          "BDD with Selenium"
        ]
      },
      "requirements": [
        "Basics of manual testing"
      ],
      "description": "Learn end to end selenium with python. start with learning python as a programming language and then progress to learn selenium as a test automation tool\nbasics of python\ndata types\nif, while, for\nfile handling, regex\noops\nbasics of selenium\nselenium ide\nlocators\nparameterization and synchronization\nhandling different web elements\naction class\npage object model\nlogs\nexcel handling\nbdd behave\nall this is covered.",
      "target_audience": [
        "Manual Testers, Developers, Team Leads, Test Managers, Anyone interested in learning Selenium with Python"
      ]
    },
    {
      "title": "Automating Web/Mobile/API applications with TestProject",
      "url": "https://www.udemy.com/course/testproject/",
      "bio": "An community driven test automation tool to automate everything !",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing TestProject agent",
          "Top 5 distinguished features of TestProject"
        ],
        "Section 2 - Mobile automation testing for Android (Basic)": [
          "Introduction and configuration",
          "Testing Hybrid Ionic Mobile Application with TestProject",
          "Managing and working with element locators",
          "Managing elements and applications"
        ],
        "Section 3 - Mobile automation testing for iOS (Basic)": [
          "Introduction -> configuration -> quick run",
          "Testing application using Record and playback with TestProject on iPhone X",
          "Running iOS mobile app test from Windows 10"
        ],
        "Section 4 - Working with Test Data and handling test runs": [
          "Working with test data parameterization",
          "Data Driven testing with CSV",
          "Working with Jobs"
        ],
        "Section 5 - Testcase Design and execution": [
          "Working with Test case steps (detailed)",
          "Working with Test step types",
          "Calling Test within Test with TestProject for Mobile automation"
        ],
        "Testing web applications with TestProject (Basic)": [
          "Testing web applications with TestProject using record and playback",
          "Cross browser testing with Jobs"
        ],
        "Working with Addons and Page Object Model in TestProject": [
          "Working with Addons (Part 1)",
          "Creating custom Addons to click all menu items in menubar (Part 2)",
          "Testing custom Addons with runners and publishing Addon to TestProject",
          "Source code for custom Addons",
          "Coded Test in TestProject using Selenium Page Object Model (Part 1)",
          "Coded Test in TestProject using Selenium Page Object Model (Part 2)",
          "Source code for Page Object Model test"
        ],
        "Testproject vs Katalon": [
          "Testproject vs Katalon studio"
        ]
      },
      "requirements": [
        "Basic understanding on Web application automation with Selenium",
        "Basic understanding on mobile application automation with Appium/Xamarin",
        "Basic understanding of Java"
      ],
      "description": "Automating Web/Mobile/API applications with the TestProject course is designed to show the rich unified features TestProject has got.\nTestProject is a Web-based automation testing platform that is aimed to test applications such as\nWeb\nAndroid\niOS\nAPI\nIn all the platforms such as\nWindows 10\nMacOS\nLinux\nThe unique cross-platform power of TestProject differentiates itself from different automation toolsets available in the market.\nTestProject is the first-ever tool to support running iOS mobile application testing from Windows or Linux environment, thanks to the modern Web service workers and Web platform to make it happen.\nThis course curriculum is aimed to cover all the different testing platform support from complete basic though advanced. As that said, this course covers topics such as\nAutomation iOS applications\nAutomate iOS Native application with Simulator\nAutomation iOS Native application with real device like iPhone X\nAutomation Android applications\nAutomate Android Native application with Emulator\nAutomation Android Native application with real device like OnePlus phone\nAutomation Web applications (Cross-browser support)\nUnderstanding cross-browser testing with browsers like Chrome, Firefox, Safari\nUnderstanding how to automate application in these browser\nUnderstand how the code works\nUnderstanding the simple record and playback and running the test\nUnderstand the usage of test project in different scenarios\nUnderstanding the power of the TestProject toolset\nExtending TestProject with Addons\nExtending Testcases with Page Object Models\nHope you will like the course this course is ever-growing, meaning, it will be updated every now and then whenever there is a new release of feature in TestProject",
      "target_audience": [
        "Developer",
        "QA",
        "DevOps"
      ]
    },
    {
      "title": "600+ JUnit Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/junit-interview-questions/",
      "bio": "JUnit Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "JUnit Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the ultimate JUnit interview questions practice test course! Are you preparing for a job interview that requires expertise in unit testing with JUnit? Look no further! This comprehensive course is designed to help you ace your JUnit interview with confidence.\nWith six sections covering all aspects of JUnit, this practice test course provides a deep dive into the world of unit testing. Each section is carefully crafted to cover essential topics and subtopics that are commonly asked in JUnit interviews.\nSection 1: Introduction to JUnit Get started with an overview of JUnit, its purpose, features, and the evolution of this essential unit testing framework. Understand the architecture of JUnit and explore the various annotations and test fixtures it offers.\nSection 2: Writing and Executing Tests Learn the art of writing effective test cases using JUnit and understand how to organize them into test suites. Discover the power of parameterized tests and explore different ways to execute tests using IDEs and build tools.\nSection 3: Assertions and Matchers Master the art of making assertions in JUnit and understand the importance of using matchers for more flexible and readable tests. Dive deep into various assertion methods and learn how to use custom assertion messages effectively.\nSection 4: Test Fixtures and Setup Explore the concept of test fixtures and learn how to set up and tear down resources for your tests. Understand the lifecycle of tests in JUnit and discover best practices for handling exceptions in test setup.\nSection 5: Advanced Topics Take your unit testing skills to the next level with advanced topics such as mocking frameworks, integration testing, and testing web applications with JUnit. Learn how to integrate JUnit seamlessly into your continuous integration pipeline.\nSection 6: JUnit Best Practices and Tips Equip yourself with essential best practices and tips for writing maintainable and effective unit tests. Understand the importance of naming conventions, testing corner cases, and achieving optimal test coverage.\nEach section is accompanied by a series of meticulously crafted interview questions and practice tests, designed to challenge your understanding and reinforce your knowledge of JUnit. With over [insert number of questions] practice questions, you'll have ample opportunity to test your skills and identify areas for improvement.\nWhether you're a seasoned developer looking to brush up on your JUnit skills or a job seeker preparing for an upcoming interview, this course is your ultimate companion. Enroll now and take the first step towards mastering the art of unit testing with JUnit.",
      "target_audience": [
        "Software Developers: Developers who want to deepen their understanding of unit testing principles and practices, especially those working with Java-based applications.",
        "Quality Assurance Engineers: QA professionals seeking to improve their testing skills and learn how to write effective unit tests using JUnit to ensure the quality and reliability of software products.",
        "Computer Science Students: Students studying computer science or software engineering who want to gain practical experience with unit testing and prepare for interviews where JUnit knowledge is required.",
        "Job Seekers: Individuals preparing for job interviews that include assessments on unit testing with JUnit. This course provides comprehensive coverage of JUnit topics commonly asked in interviews.",
        "Software Testing Enthusiasts: Anyone interested in learning about unit testing and how to use JUnit effectively, regardless of their current job role or experience level."
      ]
    },
    {
      "title": "Automation Testing CRASH COURSE (HINDI LANGUAGE)",
      "url": "https://www.udemy.com/course/ruby-scripting-software-testers/",
      "bio": "Postman, SoapUI, JMeter, JSON, JAVA, PYTHON",
      "objectives": [
        "Tester will be ready to work in different automation tools",
        "Good understanding of programming, ready to work in automation project"
      ],
      "course_content": {
        "API TESTING - CRASH COURSE (HINDI)": [
          "API TESTING USING POSTMAN - CRASH COURSE (HINDI)",
          "API TESTING USING SOAPUI - CRASH COURSE (HINDI)",
          "API TESTING USING JMETER - CRASH COURSE (HINDI)"
        ],
        "Programming Course": [
          "JAVA FOR SOFTWARE TESTERS - CRASH COURSE (HINDI)"
        ],
        "Must Learn Courses for Every Tester": [
          "Unix/Linux Commands for Software Testers - CRASH COURSE(Hindi)",
          "BIG DATA TESTING (BASICS)- CRASH COURSE(Hindi)"
        ],
        "OOPS in Ruby": [
          "Ruby Inheritance",
          "Ruby Overriding"
        ],
        "Read and Write data": [
          "Read Data from file",
          "Write data to file",
          "Read data from excel",
          "Write data to excel"
        ]
      },
      "requirements": [
        "Setup machine with windows OS"
      ],
      "description": "Ruby is one of the most popular scripting language for developer as well as testers.\nOn testers point of view, we can use it in Selenium, Calabash etc.\nIf you’re new to programming and want to enter either of these automation tool, this course is a great place to get started.\nIn today's competitive environment, companies want tester with scripting knwoledge\nIn this course we prepare student for all automation challenges, it gives coverage of almost all basic and advance concepts of Groovy Scripting which are required to work on different automation tool.\nHere you will cover basic concepts like Class, Object, String, Loop and advance concepts like File Handling, working with Excel, Database connectivity etc\nAfter completing this course, you will be very much comfirtable to start automation and face automation interviews\nAlso you gonna get our instructor support to clear you queries asap.\nIts a continuous grooming course which will give you in depth knowledge of theory as well as practical concepts\nHere you will cover basic concepts like Class, Object, String, Loop and advance concepts like File Handling, working with Excel, Database connectivity etc\nAfter completing this course, you will be very much comfirtable to start automation and face automation interviews\nAlso you gonna get our instructor support to clear you queries asap.\nIts a continuous grooming course which will give you in depth knowledge of theory as well as practical concepts",
      "target_audience": [
        "Freshers looking opportunity in automation",
        "Manual testers want to jump into automation"
      ]
    },
    {
      "title": "Master XPath for Selenium: From Basics to Advanced",
      "url": "https://www.udemy.com/course/xpath-for-selenium/",
      "bio": "Learn Xpath to identify complex Elements in Selenium, Xpath regular expression and xpath axes topics covered in course",
      "objectives": [
        "Identifying Complex and Dynamic Elements In webpage Using Xpath",
        "Can Design Proper Xpath For Selenium",
        "Knowledge On Xpath Axes",
        "Helps Automation testers - Selenium testers to handle Web elements"
      ],
      "course_content": {
        "Introduction To Xpath": [
          "Introduction To Xpath",
          "Types Of Xpath"
        ],
        "Html Basics": [
          "Basics Of Html",
          "/ vs // (Single slash vs Double slash)"
        ],
        "Relative xpath": [
          "Introduction To Relative Xpath",
          "Example 1 : Relative Xpath",
          "Exampl2 : Relative Xpath with / (single slash )",
          "Example 3: Relative Xpath",
          "Example 4 : Relative Xpath"
        ],
        "Check Your Knowledge - Quiz 1": [
          "Quiz - 1"
        ],
        "Xpath Simple Task 1": [
          "Write Xpath"
        ],
        "Regular Expression In Xpath": [
          "Introduction To Regular Expression in Xpath",
          "How to Use Contains and Start with regular Expression",
          "Regular Expression- Text()",
          "And Operator in Regular Expression",
          "And Operator Regular Expression Task",
          "OR Operator Example In Regular expression",
          "OR Operator Example-2 In Regular expression",
          "OR - Operator Regular Expression Task"
        ],
        "Check Your Knowledge Quiz - 2 (Xpath Regular eXpression)": [
          "Quiz On - Regular Expressions"
        ],
        "Xpath Axes - Very important": [
          "Introduction To Xpath Axes",
          "Relation Between Elements",
          "Understanding Relation between elements using HTML",
          "Parent --> Child and Child --> Parent Relation",
          "Ancestor Example",
          "Decedents Example",
          "Sibling : Preceding Sibling",
          "Sibling - Following Sibling",
          "Sibling Task",
          "Ancestor - or - Self",
          "Decedent-or-self",
          "Preceding Axes - Example 1",
          "Preceding Axes - Example 2",
          "Preceding Axes - Example 3",
          "Following axes - Example 1",
          "Following axes - Example 2"
        ],
        "Check Yor Knowledge - Quiz 3 (Xpath axes)": [
          "Quiz 3 (Xpath axes)"
        ],
        "Working with web Tabels": [
          "Introduction To Web table and understanding tr / td tags",
          "Working with Web table using xpath Axes",
          "Hands-on working with web table _ commonly asked interview question"
        ]
      },
      "requirements": [
        "Good to have Basics idea of Selenium , HTML, XML , Not Mandatory"
      ],
      "description": "This course is designed just for you!\nIn this hands-on course, you’ll learn everything you need to know about XPath, starting from the basics and progressing to advanced concepts. Whether you’re a beginner or someone looking to strengthen your XPath skills for test automation with Selenium, this course will give you a solid foundation.\nWhat You'll Learn:\nFundamentals of XPath and how it works in Selenium\nWriting absolute and relative XPath expressions\nUsing XPath with regular expressions for flexible locators\nAdvanced concepts like XPath axes (ancestor, sibling, following, etc.)\nBest practices for creating robust and reliable XPath locators\nXPath expressions for even the most complex\nCourse Features:\nClear, concise, and practical explanations\nReal-time HTML examples and walkthroughs\nQuizzes to test your understanding after each major section\nAssignments to apply your knowledge in practical scenarios\nTips and tricks to debug and optimize XPath in real-world projects\nAre you struggling to write effective XPath expressions for Selenium automation ?\nDo you want to master XPath from the ground up, including powerful techniques like regular expressions and XPath axes?\nBy the end of this course, you'll be able to confidently write XPath expressions for even the most complex web elements in Selenium automation.\nMeet you in course",
      "target_audience": [
        "Selenium Testers ,",
        "To identify Complex , dynamic elements in selenium or Any Automation Testing Tool"
      ]
    },
    {
      "title": "Playwright Test Automation With JavaScript - Getting Started",
      "url": "https://www.udemy.com/course/playwright-test-automation-with-javascript-getting-started/",
      "bio": "Learn how to locate and interact with elements, how to make an assertions, and way more",
      "objectives": [
        "Install Playwright",
        "Locate Elements with Playwright",
        "Execute Actions on Elements with Playwright",
        "Perform Test Assertions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Playwright",
          "Writing Our First Test"
        ],
        "Locating Elements": [
          "Locating Elements-By CSS and By XPATH",
          "Locating Elements-By Role, By Label, By Placeholder, By Title",
          "Locating Elements-By Text, By Alt Text, By TestId",
          "Locating Elements-Filter By Text, By Another Element, Finding Multiple Elements",
          "Locating Elements-Locating By Multiple CSS and By Multiple XPATH values"
        ],
        "Interacting with Elements": [
          "Element Actions-Enter/Get Text,Click Element,Working with checkbox/radio button",
          "Element Actions-Selecting from Dropdown, Check if Element Is Visible or Checked",
          "Element Actions-Clear Text Field, Keyboard Key Press, Hover Over Element",
          "Element Actions-Drag and Drop"
        ],
        "Assertions": [
          "Assertions-Expect, Element To Have Text, Element To Have Attribute",
          "Assertions-Element is Visible, Element is Checked, Element has Value",
          "Assertions-Page To Have Title, Page to Have Url",
          "Assertions-Element To Have CSS Value, Element To Have Class, Count of Elements",
          "Assertions-Negating Assertions, Soft Assertions"
        ],
        "Waits": [
          "Waits-Autowaits",
          "Waits-Wait For Element State, Wait For Page To Have Url, Wait for Network Idle"
        ],
        "Annotations and Hooks": [
          "Test Annotations-Grouping Tests,Only Running Single Test, Skipping Test",
          "Test Annotations-Tagging a Test, Creating Our Own Annotations",
          "Hooks-Executing Custom Code Before/After All Tests, Before/After Each Test"
        ]
      },
      "requirements": [
        "No programming experience is required. Beginner Friendly course."
      ],
      "description": "Playwright is a test automation tool that becoming more and more popular each year. In this course you will learn how to start writing automated scripts with Playwright and JS. Learn how to locate and interact with elements, how to make an assertions, how to wait on different conditions, annotations and way more. This course is beginners friendly and no prior knowledge is required. Everything you need to get started with Playwright.\nWhy Playwright:\nCross-browser. Playwright supports all modern rendering engines including Chromium, WebKit, and Firefox.\nCross-platform. Test on Windows, Linux, and macOS, locally or on CI, headless or headed.\nAuto-wait. Playwright waits for elements to be actionable prior to performing actions. It also has a rich set of introspection events. The combination of the two eliminates the need for artificial timeouts - the primary cause of flaky tests.\nWeb-first assertions. Playwright assertions are created specifically for the dynamic web. Checks are automatically retried until the necessary conditions are met.\nTracing. Configure test retry strategy, capture execution trace, videos, screenshots to eliminate flakes.\nTest frames, pierce Shadow DOM. Playwright selectors pierce shadow DOM and allow entering frames seamlessly.\nBrowser contexts. Playwright creates a browser context for each test. Browser context is equivalent to a brand new browser profile. This delivers full test isolation with zero overhead. Creating a new browser context only takes a handful of milliseconds.\nLog in once. Save the authentication state of the context and reuse it in all the tests. This bypasses repetitive log-in operations in each test, yet delivers full isolation of independent tests.",
      "target_audience": [
        "Beginner Automation Engineers"
      ]
    },
    {
      "title": "XPath Tutorial from basic to advance level.",
      "url": "https://www.udemy.com/course/xpath-tutorial-from-basic-to-advance-level/",
      "bio": "The complete XPath course for Selenium.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic HTML understanding"
      ],
      "description": "~ Learn to write XPath from scratch and be an expert in XPath Writing~\nIn this XPath Tutorial series, we will learn all about XPath from basic to advance level with real time scenarios and it's importance in automation like with selenium etc. We will learn about the different XPath functions in very simple way which will be very easy to understand and will make you perfect in XPath writing. We will learn about how to write relative XPath with axes, without axes, SVG elements, shadow DOM, iframe and dynamic dropdown etc.",
      "target_audience": [
        "Test Automation engineer who want to create better and easier to maintain locators",
        "All selenium users.",
        "Test Automation engineer who want to learn XPath concepts from scratch with realtime scenarios."
      ]
    },
    {
      "title": "JUnit 5 - A Complete Practical Guide",
      "url": "https://www.udemy.com/course/junit-5-java-testing-framework/",
      "bio": "Become an Automation Test engineer and learn JUnit 5, one of the most popular unit-testing frameworks in Java ecosystem.",
      "objectives": [
        "Understand Unit Testing and JUnit 5: Explain the importance of unit testing in software development and distinguish JUnit 5 features from previous versions.",
        "Setup and Configure JUnit 5 in a Maven Project: Add and configure the JUnit 5 dependency in a Maven project, ensuring a seamless testing environment.",
        "Apply JUnit 5 Annotations Effectively: Use core JUnit 5 annotations (e.g., @Test, @BeforeEach, @AfterEach) to control test execution and setup.",
        "Implement Repeated Testing: Utilize the @RepeatedTest annotation to run tests multiple times and ensure code reliability under repetitive execution.",
        "Assert Correctness with JUnit 5 Assertions: Leverage various JUnit 5 assertion methods to validate expected outcomes in unit tests.",
        "Manage Test Execution Time: Implement timeout strategies using JUnit 5 timeout annotations to ensure that tests complete within acceptable limits.",
        "Test Exception Scenarios: Write tests to capture and validate expected exceptions, confirming that error handling works as intended.",
        "Utilize Parameterized Tests for Data-Driven Testing: Create parameterized tests in JUnit 5 to run the same test logic with different input data sets.",
        "Filter and Organize Tests Using Tagging: Use tagging and filtering to group tests and selectively execute subsets, optimizing the testing workflow.",
        "Integrate Unit Testing with Spring Boot: Apply unit and integration testing practices for Spring Boot repositories and components, including Hamcrest framework."
      ],
      "course_content": {
        "JUnit Introduction": [
          "JUnit Introduction"
        ],
        "Adding JUnit 5 Dependency in Maven Project": [
          "Adding JUnit 5 Dependency in Maven Project"
        ],
        "JUnit 5 Annotations": [
          "JUnit 5 Annotations - part 1",
          "JUnit 5 Annotations - part 2",
          "JUnit 5 Annotations - part 3"
        ],
        "JUnit 5 @RepeatedTest Annotation": [
          "JUnit 5 @RepeatedTest Annotation"
        ],
        "JUnit 5 Assertions": [
          "JUnit 5 Assertions - part 1",
          "JUnit 5 Assertions - part 2"
        ],
        "JUnit 5 Timeouts": [
          "JUnit 5 Timeouts"
        ],
        "JUnit 5 Expected Exceptions": [
          "JUnit 5 Expected Exceptions"
        ],
        "JUnit 5 Parameterized Tests": [
          "JUnit 5 Parameterized Tests"
        ],
        "JUnit 5 How to run Unit Test with Maven": [
          "JUnit 5 How to run Unit Test with Maven"
        ],
        "JUnit 5 Tagging and Filtering": [
          "JUnit 5 Tagging and Filtering"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the JUnit 5 course by Uplatz.\n\n\nJUnit is a popular unit-testing framework in the Java ecosystem. JUnit 5 added many new features based on the Java 8 version of the language. JUnit 5 is the most widely used testing framework for Java applications. For a very long time, JUnit has been doing its job perfectly.\nThis JUnit 5 course will help you learn how to understanding why unit tests are important, structure of good unit tests, dynamic and parameterized tests, extensions, code coverage, create and execute unit tests with JUnit 5, and many more topics. This JUnit course focuses on the usage of the framework.\n\n\nJUnit 5 consists of several different modules:\nJUnit Jupiter: JUnit Jupiter includes new programming and extension models for writing tests. It has all new JUnit annotations and TestEngine implementation to run tests written with these annotations.\nJUnit Platform: To be able to launch junit tests, IDEs, build tools or plugins need to include and extend platform APIs. It defines the TestEngine API for developing new testing frameworks that runs on the JUnit platform. It also provides a Console Launcher to launch the platform from the command line and build plugins for Gradle and Maven.\nJUnit Vintage: It provides support to run JUnit 3 and JUnit 4 written tests on the JUnit 5 platform. It’s there is backward compatibility.\n\n\nJUnit 5 - Course Syllabus\n\n\nJUnit Introduction\nAdding JUnit5 dependency in Maven project\nJUnit5 Annotations\nJUnit5 @RepeatedTest Annotation\nJUnit5 Assertions\nJUnit5 Timeouts\nJUnit5 Expected Exceptions\nJUnit5 Parameterized Tests\nJUnit5 How to run Unit Test with Maven\nJUnit5 Tagging and Filtering\nHamcrest Framework\nUnit Testing on Spring Boot Repository\nSpring Boot Integration Testing",
      "target_audience": [
        "DevOps Engineers",
        "Automation Test Engineers",
        "Java Developers - Docker/JUnit",
        "Java Testing Specialists",
        "Beginners & newbies aspiring for a career in Software Testing",
        "Anyone interested in Java testing frameworks",
        "Java Test Engineers",
        "Software Test Engineers",
        "QA Analysts",
        "Software Developers",
        "Cloud Engineers",
        "Java Software Engineers",
        "DevOps Testing Specialists"
      ]
    },
    {
      "title": "Contract Testing with Spring Cloud Contract",
      "url": "https://www.udemy.com/course/contract-testing-with-spring-cloud-contract/",
      "bio": "Learn how to use Spring Cloud Contract to create reliable integration tests with contract testing.",
      "objectives": [
        "Understand the different types of testing strategies that exist and how they complement each other",
        "Understand what is Contract Testing and its advantages",
        "Learn how to implement Contract Testing with Spring Cloud Contract",
        "Learn how to implement Contract Testing for HTTP communication"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Integration Services in Microservices",
          "Contract Testing"
        ],
        "Spring Cloud Contracts Basics": [
          "Introduction to Course's Project",
          "Spring Cloud Contracts in the Producer Side - Part I",
          "Spring Cloud Contracts in the Producer Side - Part II",
          "Spring Cloud Contracts in the Producer Side - Part III",
          "Spring Cloud Contracts in the Consumer Side - Part I",
          "Spring Cloud Contracts in the Consumer Side - Part II"
        ],
        "Spring Cloud Contracts Main Features": [
          "Query Parameters",
          "Dynamic Properties Basics",
          "Dynamic Properties - Optionals",
          "Dynamic Properties - Custom Methods",
          "Dynamic Properties - Matchers Section",
          "Dynamic Properties - Referencing Request from the Response"
        ],
        "Spring Cloud Contract Extra features": [
          "Spring Cloud Contracts extra features",
          "Using Github as Stub Storage",
          "Important Links"
        ],
        "Ending": [
          "Farewell"
        ]
      },
      "requirements": [
        "Mid level knowledge of java language",
        "Spring boot (Core and Testing)",
        "Unit testing (JUnit/Mockito)"
      ],
      "description": "Spring Cloud Contract is a powerful tool to do contract testing, if you have work with Pact, then you will quickly grasp Spring Cloud Contract. Using it you will be able to provide a lot of confidence to your team when making production releases and create solid integration tests avoiding any dependencies with other teams.\n\nBefore contract testing, devs had functional testing and mock servers as unique alternatives for integration test creation. This two have multiple advantages but even more disadvantages like:\nSlow tests.\nFalse positives.\nHuman error proneness.\nLate feedback.\nDependencies with other teams.\nOnce contract testing got into the landscape, it was able to remedy all these issues by permitting the two sides of the communication to agree on how the request and responses should look like through a contract. Nonetheless,  contract testing is not here to replace functional tests or unit tests but to support them.\nFor all these reasons this course will provide you with multiple lectures for you to learn:\nWhich strategies are used to test applications.\nWhat contract testing is and how can improve the quality of any project you work on.\nHow contract testing is implemented by Spring Cloud Contract.\nHow to use Spring Cloud Contract to make integration tests for HTTP communications.\nHow to share your contracts with the members that are to suppose to integrate.\nTo be able to harness this course completely, it's strongly recommended to have knowledge of Java language, basic Spring Boot and unit testing with Mockito and JUnit.\n\n\nIf you're interested in doing contract testing but for message-based communications, I recommend taking my other course after completing this one: Contract Testing and Messaging with Spring Cloud Contract",
      "target_audience": [
        "Java Devs who want to learn to do proper integration testing for HTTP communications"
      ]
    },
    {
      "title": "Selenium WebDriver with Python Crash Course",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-python-crash-course/",
      "bio": "Write Selenium WebDriver test automation code with Python scripting language, with examples and exercises",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction To The Course",
          "Coupons and Intro to Full Course",
          "E-commerce Site for Practice",
          "Installing Toos - Python, IDE, Selenium",
          "HTML Refresher",
          "Running Scripts And PATH",
          "Finding Elements and Actions",
          "WebDriver Waits",
          "Test - Verify PyPI Link In Top Menu",
          "Test - Verify Search Works",
          "Test - Verify Invalid Coupon Fails",
          "Web Scraping - Get Product Prices",
          "Practice Project Ideas"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Python basics is required before writing Selenium script.",
        "Knowledge of software testing (manual) is helpful"
      ],
      "description": "In this short crash course you will learn how to write Selenium WebDriver code using the Python programing language. You will learn the core functionalities of Selenium WebDriver and how to apply them to writing automated web browser tests.\nAnyone looking to become QA Engineer or QA Automation engineer will benefit greatly from this course. If you are a manual tester and looking to transition to automation, or you are brand new to the field of software testing, you will find this course very beneficial.\nPython is one of the most popular languages to write automated web tests, and Selenium WebDriver is the most popular tool for that.\nJust like most programing languages writing Selenium scripts and automated tests is a matter of practice. This course will give you plenty of great ideas on how you can continue to practice even after completing the course.\nYou will setup everything you need to write tests on your machine whether it is a Windows or Mac machine.\nYou will practice writing tests on a real e-commerce site that you have created for you or you can create your own practice site using WordPress and WooCommerce following my instructions.\nAt the end of the course you will know what Selenium code looks like, how to write it, how to use it, and what you need to do to practice.\nIn addition best practices, tips, tricks are mentioned throughout the course.",
      "target_audience": [
        "Beginner QA Automation Engineers"
      ]
    },
    {
      "title": "Your Guide to Start Software Testing Career",
      "url": "https://www.udemy.com/course/your-guide-to-start-software-testing-career/",
      "bio": "Learn how to start a career in software testing",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important Definitions"
        ],
        "Quality & Testing": [
          "What is Quality ?",
          "What is Testing?",
          "Why we Test ?"
        ],
        "Testing as a career": [
          "Testing as a career",
          "How to be a tester?",
          "Skills of a good tester",
          "Facts & Myths about Testing",
          "Tools Each Tester Should Know"
        ],
        "CV & Interview": [
          "CV Tips",
          "Interview Tips"
        ]
      },
      "requirements": [
        "No Requirements"
      ],
      "description": "Have you ever wanted to know what is software testing? what is this career? how non-IT people can enroll in it? does it worth to be a software tester?\nIf any of the above questions crossed your mind someday, then this course is for you.\nIn this course, you'll learn\n-What is quality?\n- What is software testing?\n- Why we test?\n- What is Testing as a career?\n- How to start in software Testing?\n- What are the tools I should Know?\n- What are the Skills of a good software tester?\n- Tips for CV writing and",
      "target_audience": [
        "Anyone wants to build a career in software testing"
      ]
    },
    {
      "title": "Secure Software Requirements Secure Dev Series Course 2 of 8",
      "url": "https://www.udemy.com/course/secure-software-requirements-secure-dev-series-course-2-of-8/",
      "bio": "Understand the critical aspects of secure software development.",
      "objectives": [
        "What are the critical aspects of secure development",
        "Identify the correct software build requirements needed for a secure software program",
        "Understand some of the baseline CSSLP exam content",
        "Determine how to specify the proper software architecture to meet your software security requirements"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Instructor Information",
          "Course PreReqs",
          "Functional and Non Functional Requirements",
          "Identifying Security Requirements",
          "Policy Decompisition",
          "Data Classification",
          "Subject Object Matrix",
          "Use Case and MisUse Case Modeling",
          "Regulatory and Industry Requirements",
          "Legal Requirements",
          "Legal Requirements",
          "Security Requirements Traceability Matrix",
          "Course Review",
          "Course Review Questions",
          "Course Closeout"
        ]
      },
      "requirements": [
        "No Requirements"
      ],
      "description": "Course Overview\nIn this Course 2 of the Secure Development Series we cover what secure software requirements are and why software can meet all quality requirements and still be insecure.\nPlease note that this course is providing introductory concepts for beginners and is NOT a programming course or has any hands on.\nThis course specifically, Secure Software Requirements is meant to provide learners a foundational start in software design that is focused around security.  The course covers foundational concepts such as the functional and non functional requirements, Policy decomposition, data classifications, and misuse cases\nThe course continues on to cover  Regulatory and Industry as well as legal requirements to name a few lessons.\nThe course provides some review questions and also whiteboard discussions to provide insight into some important topics.\nLastly,  the course series covers(8 courses) about 65% or more of the exam objectives for the CSSLP exam when completing all eight courses!\nThere are many benefits of designing security early which we cover in this course.\n\n\nThis is a series of courses for learning about \"Secure Software Development Fundamentals\"\n\n\nCourse 1 - Secure Software Concepts\nCourse 2 - Secure Software Requirements\nCourse 3 - Secure Software Design\nCourse 4 - Defining Security Architectures\nCourse 5 - Secure Software Testing\nCourse 6 - Secure Software Acceptance\nCourse 7 - Software Deployment, Operations and Maintenance\nCourse 8 - Supply Chain and Software Acquisition\nWho should take this course (Target Audience)?\nYou are a developer or software engineer and want to understand\nYou want to learn IT security fundamentals focused on software development\n\n\nWhat are the Couse Pre Requirements?\nThere are no course pre-requirement\nWhat You'll Learn\nWhat are the critical aspects of secure development\nWhat is the CIA Triad, AAA and other security fundamentals\nIdentify the correct software build requirements needed for a secure software program\nDetermine how to specify the proper software architecture to meet your software security requirements\nUnderstand what the commonly accepted best practices are software acceptance\nDetermine the proper software acquisition and supply chain requirements for your software programs\nGet to know the proper software testing procedure for a secure software program.\n\n\nRequirements\nNo Requirements\nCourse Contents\nCourse Overview Instructor Intro Course Prereqs Course Overview Instructor Intro Course Prereqs Functional and Non Functional Requirements Identifying Security Requirements Policy Decompisition Data Classification Subject Object Matrix Use Case and MisUse Case Modeling Regulartory and Industry Requirements Legal Requirements Privacy Requirements Security Requirements Traceability Matrix Course Review Course Review Questions Course Closeout",
      "target_audience": [
        "You want to learn IT security fundamentals focused on software development",
        "You are a developer or software engineer and want to understand security focused development"
      ]
    },
    {
      "title": "The Complete Course of Playwright Automation",
      "url": "https://www.udemy.com/course/course-playwright/",
      "bio": "Learn Web Testing and Automation in a Professional way. Become an expert in Playwright typescript, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master Playwright, for Web Testing and Automation",
        "You will be able to build step by step your own Playwright scripts, understanding all the logic and ending with advanced practical examples and projects",
        "You will become familiar with the work environment, essential commands, and you will master all the phases of the scripting",
        "You will work with with selectors, navigate web pages, and use forms and input fields, interactive elements, etc.",
        "You will learn in a professional way how to implement pop-ups and alerts, work with iframes, debug playwright tests or Create custom page objects",
        "You will master the Handling flaky tests, the Paralell test execution with Playwright and the Playwright tests integration with CI/CD pipelines",
        "You will interacte with web Sockets, capture network traffic with Playwright and conduct Perfomance testing with Playwright, understanding their interpretation",
        "You will learn the Playwright integration with other testing tools",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises, and the practical projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to Playwright": [
          "Introduction to Playwright and its features",
          "Quiz",
          "Installing and Setting up the development environment",
          "Writing your first Playwright test script and Running test in different browser"
        ],
        "Basic Playwright Concepts": [
          "Understanding selectors and how to use them",
          "Navigating web pages with Playwright",
          "Interacting with forms and input fields",
          "Waiting for elements to appear or become interactable"
        ],
        "Advanced Playwright Concepts": [
          "Handling pop-ups and alerts",
          "Working with iframes",
          "Debugging Playwright tests",
          "Creating custom Page objects"
        ],
        "Writing Robust Tests": [
          "Best practices for organizing and writing tests",
          "Handling flaky tests",
          "Parallel test execution with Playwright",
          "Integrating Playwright tests with CI/CD pipelines"
        ],
        "Extra Advanced Playwright Topics": [
          "Interacting with web sockets",
          "Capturing network traffic with Playwright",
          "Performance testing with Playwright",
          "Integrating Playwright with other testing tools"
        ]
      },
      "requirements": [
        "Having basic notions of Playwright can help, but the course starts from scratch",
        "Download and install needed software and work environment (if you don't know how, don't worry, it's very easy, free and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a Microsoft Playwright professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that students, developers, automation testers, engineers... can learn Playwright from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as an Engineer, I have realized that nowadays mastering Microsoft Playwright is very necessary in web testing, web automation, or other development applications. Knowing how to use this language can give you many job opportunities and many economic benefits, especially in the world of the development.\nThe big problem has always been the complexity to perfectly understand Playwright automation requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith 7.5 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Playwright. The course will teach you Web Automation Testing in a practical way, from scratch, and step by step.\nWe will start with the installation needed software on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to Playwright and course dynamics\nDownload and Install the needed software and configuring it\nGeneral familiarization with the work environment and commands\nWriting your first Playwright test script and running tests in different browsers\nWorking with selectors, navigating web pages, and using forms and input fields, interactive elements, etc.\nImplementing pop-ups and alerts, working with iframes, debugging playwright tests or Creating custom page objects\nHandling flaky tests\nParalell test execution with Playwright\nIntegrating Playwright tests with CI/CD pipelines\nInteracting with web Sockets\nCapturing network traffic with Playwright\nPerfomance testing with Playwright\nIntegrating Playwright with other testing tools\nMastery and application of absolutely ALL the functionalities of Playwright\nPractical exercises, complete projects and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to build a wide variety of web automation testing projects quickly and make versatile and complete use of Playwright typescript. And if that were not enough, you will get lifetime access to any class and I will be here to help you.\nLearning Microsoft Playwright has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used Playwright before",
        "Developers, automation testers, engineers, students... who want to learn a new framework for Web Testing and Automation",
        "Intermediate or advanced Playwright users who want to improve their skills even more!"
      ]
    },
    {
      "title": "QA Concepts & GenAI- Practice Questions-Interview Prep",
      "url": "https://www.udemy.com/course/qa-concepts-practice-questions/",
      "bio": "Interview Preparation 2024",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "QA Concepts: Comprehensive Practice Tests\" is a course designed to challenge and enhance your understanding of Quality Assurance principles.\nThis course offers a series of practice tests covering a wide range of QA topics, from software testing methodologies to QA best practices.\nThe course is structured to cater to all levels of QA enthusiasts - from beginners who are just stepping into the field of software testing, to experienced QA professionals who are looking to reinforce their knowledge and stay updated with the latest trends and practices in the industry.\nWhether you're a beginner looking to start a career in software testing or an experienced QA professional seeking to validate your skills, these practice tests will help you prepare for real-world QA challenges.\nEach test is accompanied by detailed explanations to help you understand the concepts better. Join us in this course and take a step forward in your QA journey.\nEach practice test in this course is designed to simulate real-world QA scenarios and challenges, thereby helping you to prepare effectively for your career in QA. Furthermore, each test is accompanied by detailed explanations and insights to help you grasp the underlying concepts in a clear and concise manner.\n\n\nJoin us in \"QA Concepts: Comprehensive Practice Tests\" and take a significant leap forward in your QA journey. This course is more than just a learning tool, it's your companion in the exciting world of Quality Assurance.",
      "target_audience": [
        "Quality Engineers, Testers"
      ]
    },
    {
      "title": "Como Dominar a Qualidade do Software do Início ao Fim",
      "url": "https://www.udemy.com/course/qualidade-dosoftware-do-inicio-ao-fim/",
      "bio": "Entendendo a qualidade além do teste de software",
      "objectives": [
        "Compreensão do conceito de qualidade de software, abrangendo seus fundamentos, padrões e melhores práticas.",
        "Domínio de diversas técnicas de teste, incluindo teste funcional, teste de desempenho, teste de segurança, entre outros.",
        "Compreensão do funcionamento do fluxo de desenvolvimento de software e do papel do QA em cada etapa desse fluxo.",
        "Domínio do design de testes, incluindo a criação de planos abrangentes, casos de teste e gerenciamento de riscos."
      ],
      "course_content": {},
      "requirements": [
        "Nenhuma experiência prévia é necessária; no entanto, é importante estar aberto(a) a aprender novos conceitos e disposição para absorver o conteúdo."
      ],
      "description": "Neste curso abrangente de \"Qualidade além dos testes\", você será capacitado a dominar a garantia de qualidade do software desde o início do processo de desenvolvimento até o seu término. Você aprenderá os princípios fundamentais e as práticas avançadas para alcançar a excelência em qualidade, explorando uma variedade de pilares essenciais, incluindo design de teste, técnicas de teste, shift-left testing, TDD (Test-Driven Development), BDD (Behavior-Driven Development), ATDD (Acceptance Test-Driven Development) e como aproveitar o ChatGPT para impulsionar a qualidade do software.\nDurante o curso, você mergulhará no design de teste, aprendendo a criar planos abrangentes e estratégias eficazes para testar o software em diferentes cenários e requisitos. Você explorará técnicas avançadas de teste, incluindo testes funcionais, testes de desempenho, testes de segurança e muito mais, capacitando você a identificar e resolver possíveis falhas e melhorar a qualidade do software.\nAlém disso, o curso abordará o conceito de shift-left testing, que envolve a integração antecipada dos testes durante as fases iniciais do desenvolvimento. Você aprenderá a aplicar essa abordagem para detectar e corrigir problemas de forma mais eficiente, evitando retrabalhos e melhorando a qualidade do software desde o início.\nO curso também irá guiá-lo no aprendizado e aplicação de práticas de desenvolvimento orientadas por testes, como TDD, BDD e ATDD. Você entenderá como essas metodologias podem ajudar a criar software mais robusto, com maior clareza nos requisitos e garantindo que as funcionalidades desenvolvidas estejam alinhadas às expectativas dos usuários.\nAlém disso, você descobrirá como usar o ChatGPT, uma poderosa ferramenta de inteligência artificial, para aprimorar a qualidade do software. Você aprenderá a utilizar o ChatGPT para testar e validar diferentes aspectos do software, identificar possíveis problemas e receber insights valiosos para otimizar o processo de desenvolvimento.\nAo final do curso, você estará pronto(a) para aplicar seus conhecimentos e habilidades recém-adquiridos na área de garantia de qualidade de software. Prepare-se para se tornar um especialista em qualidade, capaz de garantir a entrega de software de alta qualidade, satisfação dos usuários e impulsionar o sucesso dos projetos.",
      "target_audience": [
        "Este curso é especialmente desenvolvido para pessoas que estão dando seus primeiros passos na área de Qualidade de Software (QA). Se você está interessado(a) em ingressar nesse campo empolgante, independentemente do seu histórico profissional ou conhecimento prévio, este curso é ideal para você. O curso é destinado a estudantes, recém-formados, profissionais em transição de carreira e qualquer pessoa que deseje adquirir habilidades fundamentais em QA. Se você é apaixonado(a) por tecnologia, busca entender como garantir a qualidade de um software e está disposto(a) a aprender e se desenvolver nessa área, então este curso foi feito sob medida para você. Nós entendemos que começar em uma nova área pode ser desafiador, mas este curso foi cuidadosamente projetado para orientar os iniciantes, fornecendo uma introdução abrangente e clara ao mundo do QA. Você aprenderá os conceitos essenciais, técnicas de teste, design de testes e compreenderá o papel do QA no fluxo de desenvolvimento de software. Independentemente de sua formação acadêmica ou experiência prévia, nossa abordagem passo a passo e recursos de aprendizagem interativos irão ajudá-lo(a) a adquirir as habilidades necessárias para iniciar sua jornada na área de QA. Estamos aqui para apoiá-lo(a) ao longo do curso, esclarecendo suas dúvidas e oferecendo orientação para que você possa aproveitar ao máximo esta oportunidade de aprendizado. Prepare-se para explorar o mundo emocionante da Garantia da Qualidade de Software e dar o primeiro passo em direção a uma carreira empolgante e repleta de possibilidades. Junte-se a nós neste curso e comece sua jornada rumo ao sucesso na área de QA!"
      ]
    },
    {
      "title": "Podstawy manualnego testowania oprogramowania",
      "url": "https://www.udemy.com/course/kurs-testowania-oprogramowania/",
      "bio": "Sprawdź czy testowanie jest dla Ciebie",
      "objectives": [
        "Podstawy testowania aplikacji internetowych",
        "Teorii testowania",
        "Tworzenia przypadków testowych",
        "Tworzenia raportu błędu",
        "Jak wyróżnić się na rynku pracy",
        "Podstaw architektury aplikacji"
      ],
      "course_content": {},
      "requirements": [
        "Komputer z dostępem do internetu"
      ],
      "description": "Kurs przeznaczony dla osób chcących rozpocząć swoją karierę w branży IT jako tester oprogramowania. W kursie największy nacisk kłądę na testowanie aplikacji internetowych. Co uzyskasz kończąc ten kurs?\nwiedzę niezbędną do rozpoczęcia swojej przygody jako tester oprogramowania\npraktyczne umiejętności testowania oprogramowania\nnauczysz się jak obsługiwać narzędzia niezbędne na tym stanowisku\nzapoznasz się z branżowymi pojęciami\ndowiesz się jak wygląda codzienna praca testera oprogramowania\npowiem Ci, jak i gdzie szukać swojej pierwszej pracy",
      "target_audience": [
        "Osoby zastanawiające się nad rozpoczęciem kariery w branży IT"
      ]
    },
    {
      "title": "API and Database Testing with Specflow and C#",
      "url": "https://www.udemy.com/course/api_db_testing/",
      "bio": "Understanding and building API and database testing from groundup",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Good understanding on C#",
        "Experience in working with automation framework (Since we will use one)",
        "Basic concepts on BDD and Specflow as we use them as well"
      ],
      "description": "Understanding API and database testing with Specflow and C# course is designed in such a way that one can learn\n· What are API and database testing\nUnderstanding what are API\nHow to test API\nHow to test Databases\n· Different tools available to perform API and database testing\no Will go through different tools available for API testing\n· Why did we choose Visual studio as the tool for API and database testing\no Understand Visual studio for API testing\no How Visual studio helps in developing better codes\n· Consuming a WCF API Web service using a Windows Console application from Visual Studio 2015\n· Writing simple code to test the Web service with and without using Specflow C#\no Understand the power of Visual studio and Specflow to write code in Specflow C#\no Power of Specflow of automation testing and writing code with Specflow\n· Connecting with Microsoft SQL database server to test data using simple queries\no Understand how to connect with SQL Server database via Visual studio code in C# language.\n· Database testing using Stored procedures and C#\n· Database testing using Mock stored procedure to test database data with API without user-defined data\n· Finally, this course, is simple yet focused on the topic and yet easy to complete in a couple of hours",
      "target_audience": [
        "This course is for both testers and developers",
        "Any manual test engineer with good knowledge in SQL can also learn this course"
      ]
    },
    {
      "title": "Complete TestNG Framework with 100% animated videos",
      "url": "https://www.udemy.com/course/testng-virtual-classroom/",
      "bio": "#1 2022 TOP LOVED & ENJOYED course on TESTNG. Awesome LEARNING EXPERIENCE by ANIMATED VIDEOS on TestNG FRAMEWORK",
      "objectives": [
        "Learn TestNG from scratch. This course assumes no prior experience in any automation framework.",
        "Learn how to test professionally by following industry standards.",
        "Acquire Unit and System automation concepts by learning TestNG in Detail.",
        "Learn by animated videos and illustrations. Retain maximum concepts by watching video once.",
        "TestNG",
        "Automation Testing",
        "Unit Testing framework",
        "TestNG annotations",
        "Parallel execution",
        "TestNG programmatic execution",
        "Test Management",
        "Create an end-to-end Test Automation suite in JAVA"
      ],
      "course_content": {},
      "requirements": [
        "Core-Java and Eclipse",
        "A computer with any OS",
        "Willingness to learn and build awesome software application."
      ],
      "description": "Description\n****In Depth course on TESTNG FRAMEWORK, beautifully crafted via ANIMATED VIDEOS.****\nTestNG is a Java open-source testing framework inspired by JUnit but introducing some new features that make it more flexible and easier to use. TestNG is a great tool for writing test cases and provides a vast number of functionalities. We cover many of these functionalities offered by TestNG, such as\nAnnotations\nParallel execution\nTest grouping\nTest Management via XML\nProgrammatic execution of test cases\nSuite creation and Concurrency handling\nTest Reporting with inbuilt TestNG reports\nFramework concept and customisation\n\n\n**** UNIQUE TEACHING METHODOLOGY - ALL ANIMATED VIDEOS. NO OTHER COURSE IN UDEMY USES THIS METHODOLOGY ***\n\n\n\n\n**** COVERS ALL CONCEPTS OF TESTNG FRAMEWORK WITH 2 HOURS and 5 MIN ****\n\n\n\n\nTEACHING MODEL - that your BRAIN will love !!!!\nWe prepared our content by focusing on \"how the human mind learns new skills.\" We consulted different psychologists and framed a new teaching model which can be applied at all levels and age group. This learning framework can be extended up to any level. Here is what you LOVE about this course:\nFeels like WATCHING A MOVIE - hurray !!!!\nNo more BORING PPTs and MONOTONOUS slides\nENJOYABLE DISCUSSIONS BETWEEN VIRTUAL CHARACTERS - STUDENT AND TEACHER\nQuick memorisation of all concepts just by watching once\n\n\n============================================\nCRACK THE AUTOMATION INTERVIEWS:\nAll animated videos are based on practical scenarios, which can be discussed with the interviewer\nIn-depth explanation with animated illustration which can be easily memorised\nMovie-like experience which enables longer retention period, hence can be recalled easily during interview\nCreative characters which you can resembles with real life scenario\n==============================================\n\n\nHow did we make learning easy?\n1. We created fully animated studio-recorded videos instead of boring un-professional videos.\n2. We run the entire course through a storyline, which is divided into multiple sessions. It simulates a movie like visualization.\n3. We explained a single scenario with numerous real-time examples. Thereby covering various applications of the same concept.\n4. Our \"NO-PPT\" rule helped us, illustrating each example more descriptively and interactively.\n\n\nBeware, our videos are addictive!!!!",
      "target_audience": [
        "Automation Tester",
        "Developers",
        "College students",
        "Programmers",
        "Managers",
        "Freshers",
        "Java developers",
        "SDET",
        "Automation Architects"
      ]
    },
    {
      "title": "Groovy | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/groovy-step-by-step-for-beginners/",
      "bio": "Learn Groovy from scratch",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic computers knowledge is enough"
      ],
      "description": "This course is created for complete beginners.\nGroovy | Step by Step for Beginners\nBasic step by step video tutorials to take you from scratch to a level where you will be having a good knowledge on groovy programming. This will help you work with groovy in development and automation testing frameworks.\nIn this course we will learn:\nWhat is Groovy\nHow to install Groovy | Windows & Mac\nIDE\nBasic Programming\nConditional Statements\nCollections\nException Handling\nFile I/O\nObject Oriented Programming with examples\nAnd much more...\nDo not worry if you have never worked with Groovy earlier. I will guide you from scratch.\nLet's Get Started...",
      "target_audience": [
        "Anyone who wants to learn Programming with Groovy",
        "Anyone who wants to use Groovy for development or automation testing frameworks"
      ]
    },
    {
      "title": "Learn Ansible Essentials Fast and Hands-On",
      "url": "https://www.udemy.com/course/learning-ansible-quick-and-practical/",
      "bio": "Learn Ansible Essentials, Automate Tasks and Study for the RHCE Exam",
      "objectives": [
        "Install Ansible Automation Engine",
        "Create Ansible Inventories and Config Files",
        "Create and run Ansible Playbooks",
        "Create and use Ansible roles",
        "Master essential Ansible Modules",
        "Study for the RHCE Certification"
      ],
      "course_content": {
        "Introduction and Lab Setup": [
          "Introduction and Lab setup"
        ],
        "Configuring Ansible and Creating Playbooks": [
          "Ansible Inventories",
          "Ansible Configuration Files",
          "Ansible Ad-Hoc Commands",
          "Ansible Playbooks"
        ],
        "Ansible Variables, Loops, Conditionals & Templates": [
          "Ansible Variables",
          "Ansible Loops",
          "Ansible Conditionals",
          "Ansible Templates"
        ],
        "Importing Playbooks and Tasks": [
          "Importing Playbooks & Task Files",
          "Targeting Specific Hosts Using Patterns"
        ],
        "Ansible Roles": [
          "Ansible Roles",
          "Ansible Galaxy"
        ],
        "System Administration Using Ansible": [
          "User Management",
          "Service Management",
          "Storage Management",
          "Network Management",
          "Patch Management",
          "Important Ansible Modules"
        ]
      },
      "requirements": [
        "Basic understanding of Linux is recommended",
        "Basic understanding of system administration is recommended"
      ],
      "description": "Learn Ansible and also pass your RHCE certification with this highly practical Ansible Course which includes a set of practice tasks to help you prepare and cement your knowledge\nAnsible is a popular choice for IT automation because it allows you to concisely specify where your system should be and achieve that state.\nIn this course you will learn foundational knowledge to quickly and reliably configure just about anything with Ansible.\nThis professional video course aims to help you master Ansible while tackling and learning multiple topics.\nThis is a focused course designed to rapidly get you up to speed on using Ansible automation engine in real life. As an IT professional, you'll develop a solid understanding of Ansible and will be able to apply it to daily automation and configuration management tasks.\nThis  course includes lots of examples and hands-on labs and aims at providing students with first-hand experience with course concepts. You can follow along the course by setting up your own lab environment.\nEach lecture introduces a new Ansible concept. Concepts are first explained, and then relevant examples are provided and finally put into practice using the lab environment\nBy the end of this course you'll be prepared to move beyond manually configuring applications, servers, networks, etc. Beyond writing confusing scripts. To spending your time on more valuable endeavors.\nThis course also serves a very good learning material to help you in passing your RHCE certification",
      "target_audience": [
        "Students who want to learn Ansible",
        "Learners interested in deepening their Ansible Knowledge",
        "Students wanting to take the RHCE certification",
        "IT administrators who want to automate their work",
        "Devops Engineers"
      ]
    },
    {
      "title": "Testowanie Oprogramowania w praktyce | Bootcamp",
      "url": "https://www.udemy.com/course/testowanie-oprogramowania-w-praktyce-bootcamp/",
      "bio": "Wszystko czego potrzebujesz, aby rozpocząć karierę jako tester oprogramowania. Praktyczna wiedza w pigułce.",
      "objectives": [
        "Teoria testowania oprogramowania",
        "Tworzenie przypadków testowych",
        "Tworzenie planu testów",
        "Raportowanie wykrytych defektów",
        "Znajomość programu PicPick",
        "Znajomość programu ShareX",
        "Umiejętność korzystania z devtoolsów",
        "Znajomość platformy Browserstack",
        "Testowanie funkcjonalne i wizualne aplikacji",
        "Umiejętność posługiwania się dokumentacją",
        "Korzystanie z narzędzia Jira",
        "Znajomość programu TestLink",
        "Znajomość programu Xray",
        "Testowanie REST API z programem Postman",
        "Podstawy języka SQL",
        "Testowanie wydajności z użyciem narzędzia Jmeter",
        "Korzystanie z komunikatora Slack",
        "Praktyczna wiedza z HTML i CSS",
        "Podstawowa znajomość języka JavaScript",
        "Automatyzacja testów z użyciem biblioteki Cypress",
        "Korzystanie z systemu kontroli wersji GIT",
        "Korzystanie z narzędzia Jenkins",
        "Podstawowa wiedza na temat Dockera",
        "Znajomość narzędzia Grafana",
        "Tworzenie testów jednostkowych",
        "Umiejętność stworzenia portfolio testera"
      ],
      "course_content": {
        "Wprowadzenie do kursu": [
          "Społeczność testerów - Facebook"
        ],
        "Teoria testowania oprogramowania": [
          "Co to jest testowanie?",
          "Techniki testowania",
          "Testowanie cyklu życia oprogramowania",
          "Testowanie statyczne",
          "Zarządzanie testami"
        ],
        "Tworzenie przypadków testowych": [
          "Wstęp teoretyczny - przypadki testowe",
          "Projektowanie przypadków testowych"
        ],
        "Tworzenie planów testów": [
          "Plan testów - Wstęp teoretyczny",
          "Tworzenie planu testów"
        ],
        "Raportowanie wykrytych defektów": [
          "Co powinno zawierać zgłoszenie z błędem",
          "Tworzenie raportów z błędów"
        ],
        "Narzędzie do robienia zrzutów": [
          "Wstęp do narzędzia PicPick",
          "Instalacja programu PicPick",
          "Omówienie programu PicPick"
        ],
        "Narzędzie do nagrywania ekranu": [
          "Wstęp do narzędzia ShareX",
          "Instalacja programu ShareX",
          "Omówienie programu ShareX"
        ],
        "Instalacja przeglądarek internetowych": [
          "Przeglądarki dostępne na rynku",
          "Instalacja przeglądarki Chrome",
          "Instalacja przeglądarki Firefox",
          "Instalacja przeglądarki Opera",
          "Instalacja przeglądarki Firefox Developer",
          "Instalacja przeglądarki Edge"
        ],
        "Wtyczki przydatne do testowania": [
          "Wtyczki do przeglądarki",
          "Wtyczka LambdaTest",
          "Wtyczka Resolution Test",
          "Wtyczka Bird Eats Bug",
          "Wtyczka Awesome Screenshot",
          "Wtyczka Clear Cache",
          "Wtyczka IE Tab",
          "Wtyczka Bug Magnet",
          "Wtyczka Page Ruler",
          "Wtyczka EditThisCookie"
        ],
        "Omawianie devtoolsów": [
          "Wstęp teoretyczny do devtoolsów",
          "Devtoolsy w praktyce"
        ]
      },
      "requirements": [
        "Nie musisz mieć żadnego doświadczenia, a jedynie chęci i trochę wolnego czasu"
      ],
      "description": "Testowanie Oprogramowania w Praktyce | Bootcamp dla początkujących\nChcesz zdobyć swoją pierwszą pracę jako tester oprogramowania?\nTen kurs został stworzony specjalnie dla osób początkujących, które chcą nauczyć się testowania od podstaw, zrozumieć realia branży IT i zbudować praktyczne umiejętności, które robią różnicę na rynku pracy.\n\n\nCo zawiera kurs?\n\nZaczynamy od fundamentów testowania – poznasz podstawowe pojęcia, typy i poziomy testów, techniki testowania oraz cały teoretyczny kontekst, którego znajomość jest niezbędna podczas rozmowy rekrutacyjnej i w pracy.\n\nNastępnie przechodzimy do praktyki:\nTworzenie przypadków testowych i planów testów\nPraca z narzędziami: TestLink, XRay, Jira\nRaportowanie błędów z priorytetami, załącznikami (z użyciem ShareX i PicPick)\nPraca na przykładowej aplikacji webowej\n\n\nW kolejnych modułach wprowadzam Cię do:\nTestowania REST API z użyciem Postmana\nAutomatyzacji testów w Cypress\nTestów wydajnościowych z wykorzystaniem JMetera\nPracy z CI/CD w Jenkinsie\nKontroli wersji (GIT)\nPodstaw Dockera i Grafany\n\n\nDodatkowo poznasz podstawy:\nJavaScript, HTML i CSS\nSQL i testów jednostkowych w React\nSlacka i pracy zespołowej\nTworzenia CV, które naprawdę się wyróżnia\n\n\nDlaczego ten kurs się wyróżnia?\n\n\nŁączy teorię ISTQB z praktyką narzędziową, której oczekują pracodawcy\nPokazuje realne scenariusze testerskie\nZawiera moduły z różnych obszarów QA: manualne testy, API, automatyzacja, wydajność, DevOps\nJest idealny dla osób, które nie chcą się uczyć z podręcznika, tylko z działania\n\n\nCzego się nauczysz?\nOto skrócona lista umiejętności, które zdobędziesz:\n\nTeoria testowania: poziomy, typy, techniki\nTworzenie przypadków i planów testowych\nPraca z Jira, TestLink, XRay\nRaportowanie defektów\nTestowanie aplikacji webowych (wizualne, funkcjonalne)\nDevTools, wtyczki przeglądarkowe, dokumentacja\nTestowanie API (Postman) i wydajności (JMeter)\nPodstawy języków: JavaScript, HTML, CSS, SQL\nAutomatyzacja testów: Cypress, GIT, Jenkins, Docker\nPodstawy testów jednostkowych (React)\nPraca zespołowa: Slack, CI/CD, Grafana\nTworzenie profesjonalnego CV i przygotowanie do rynku pracy\n\n\nDla kogo jest ten kurs?\n\n\nDla osób, które nie mają doświadczenia, ale chcą wejść do IT jako tester\nDla przyszłych junior QA, którzy chcą zbudować praktyczne portfolio\nDla tych, którzy wolą działać i testować, zamiast tylko czytać o testowaniu\n\n\nCo jeszcze znajdziesz w kursie?\n\n\nDostęp do sekcji pytań i odpowiedzi – możesz zadawać pytania w każdej chwili\nCertyfikat ukończenia kursu – gotowy do pobrania i dodania do CV lub LinkedIna\nMoje osobiste wsparcie – odpowiadam i pomagam, kiedy tego potrzebujesz\n\n\nJeśli jesteś początkujący i chcesz wejść w świat testowania oprogramowania, to ten kurs da Ci wszystko, czego potrzebujesz — teorię, praktykę, narzędzia i plan działania.\n\n\nZrób pierwszy krok w stronę nowej kariery.",
      "target_audience": [
        "Osoby, które chcą rozpocząć pracę jako tester oprogramowania",
        "Początkujący testerzy oprogramowania"
      ]
    },
    {
      "title": "ISTQB Certified Tester - Foundation Level Practice Tests",
      "url": "https://www.udemy.com/course/istqb-certified-tester-foundation-level-practice-tests/",
      "bio": "Pass the ISTQB Certified Tester - Foundation Level (CTFL) exam with 375 questions and detailed explanations",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Prepare to ace the ISTQB Certified Tester: Foundation Level (CTFL) exam with our practice test course designed to boost your confidence and expertise in software testing. This course includes five meticulously crafted practice exams, totaling 375 questions, each accompanied by detailed explanations to enhance your understanding of key concepts.\nIn this course, you will encounter a variety of question types to fully prepare you for the range of challenges you might face on the actual exam:\nMultiple Choice Questions: Test your knowledge with straightforward choices to affirm your understanding of the topics.\nFill in the Gap: These questions require precision and a deep understanding, ensuring you can articulate key concepts accurately.\nShort Scenarios: Apply your knowledge to specific situations, enhancing your problem-solving skills and practical understanding.\nThe questions cover a broad spectrum of topics essential for the ISTQB Certified Tester exam, including:\nTest Design Techniques\nTest Management\nSoftware Life Cycles\nStatic Testing\nTest Tools\nThese quizzes are designed to be an integral part of your exam preparation but are most effective when used in conjunction with other study materials. Enhance your learning experience by pairing this course with in-depth study guides and instructional videos to ensure a well-rounded understanding of the material.\nBy the end of this course, you'll have a solid grasp of the necessary concepts and the confidence to excel on your ISTQB Certification exam.",
      "target_audience": [
        "Aspiring Software Testers: Individuals beginning their careers in software testing who wish to gain a recognized certification to enhance their job prospects.",
        "Experienced Testers: Seasoned professionals looking to validate their skills with a formal certification and deepen their knowledge of modern testing methodologies.",
        "Quality Assurance Professionals: QA analysts and managers aiming to standardize their testing practices and understand industry-recognized testing frameworks.",
        "Software Developers: Developers interested in understanding testing to improve their coding quality and participate more effectively in the testing phases of projects.",
        "Project Managers: Managers overseeing IT projects who require a better grasp of testing practices to manage their teams and deliverables more effectively."
      ]
    },
    {
      "title": "Software Testing Interview Questions with Answers",
      "url": "https://www.udemy.com/course/software-testing-interview-questions-with-answers/",
      "bio": "Detailed Answers for different Software Testing Interview Questions",
      "objectives": [
        "Software Testing Interview Questions and Answers",
        "Manual Testing Interview Questions and Answers",
        "Different way of Learning Software Testing",
        "Gaining complete knowledge on Software Testing with the help of Interview Questions"
      ],
      "course_content": {
        "(Set # 1) 10 Questions and Answers": [
          "Why do you want to pursue your career in the field of Software Testing?",
          "Explain your habits that you think are right candidate for Software Testing?",
          "Why should we perform Software Testing? (Interview Question #3)",
          "What is Software Testing? (Interview Question #4)",
          "What features you check before you purchase a mobile?",
          "What do you mean by quality? (Software Testing Interview Question #6)",
          "What do you mean by performance? (Software Testing Interview Question #7)",
          "Can you write possible test cases for a Pencil?",
          "How do you test OTP Feature in Applications?",
          "What are the essentials of Software Testing?"
        ],
        "(Set # 2) 10 Questions and Answers": [
          "Tester need to know before testing Software Applications",
          "What are Desktop Applications? (Software Testing Interview Question #12)",
          "How to test Desktop Applications? (Software Testing Interview Question #13)",
          "What are Web Applications? (Software Testing Interview Question #14)",
          "How to test Web Applications? (Software Testing Interview Question #15)",
          "What are Anomalies in Software? (Software Testing Interview Question #16)",
          "What are the Types of Defects in Software Applications?",
          "How many different ways you can test Software?",
          "What is expected from testing team on testing a Software?",
          "What is Unit Testing? (Software Testing Interview Question #20)"
        ],
        "(Set # 3) 10 Questions and Answers": [
          "What is Sanity Testing? (Software Testing Interview Question #21)",
          "What is Smoke Testing? (Software Testing Interview Question #22)",
          "What is Exploratory Testing? (Software Testing Interview Question #23)",
          "What is Integration Testing? (Software Testing Interview Question #24)",
          "What is System Testing (Software Testing Interview Question #25)",
          "What is Interface Testing? (Software Testing Interview Question #26)",
          "What is Regression Testing? (Software Testing Interview Question #27)",
          "What is Alpha Testing? (Software Testing Interview Question #28)",
          "What is Beta Testing (Software Testing Interview Question #29)",
          "What is Performance Testing? (Software Testing Interview Question #30)"
        ],
        "(Set # 4) 10 Questions and Answers": [
          "What is Load Testing? (Software Testing Interview Question #31)",
          "What is Stress Testing? (Software Testing Interview Question #32)",
          "What is Security Testing (Software Testing Interview Question #33)",
          "What is Static Testing? (Software Testing Interview Question #34)",
          "What is Dynamic Testing? (Software Testing Interview Question #35)",
          "What is Compatibility Testing? (Software Testing Interview Question #36)",
          "What is Reliability Testing? (Software Testing Interview Question #37)",
          "What is Compliance Testing? (Software Testing Interview Question #38)",
          "What is Localization Testing? (Software Testing Interview Question #39)",
          "What are Test Cases? (Software Testing Interview Question #40)"
        ],
        "(Set # 5) 10 Questions and Answers": [
          "What columns are present in Test Case Template?",
          "What columns are important in Test Case?",
          "What Test Case Management Tools have you used?",
          "What is Use Case? (Software Testing Interview Question #44)",
          "Explain Main Elements of Use Case (Software Testing Interview Question #45)",
          "What is Test Scenario? (Software Testing Interview Question #46)",
          "What are Positive Test Cases? (Software Testing Interview Question #47)",
          "What are Negative Test Cases? (Software Testing Interview Question #48)",
          "What is Behavior Driven Development (BDD) ?",
          "What is Acceptance Testing? (Software Testing Interview Question #50)"
        ],
        "(Set # 6) 10 Questions and Answers": [
          "What is Vulnerability Testing? (Software Testing Interview Question #51)",
          "What is Black Box Testing? (Software Testing Interview Question #52)",
          "What is White Box Testing? (Software Testing Interview Question #53)",
          "What is Grey Box Testing? (Software Testing Interview Question #54)",
          "What are the different levels of Software Testing?",
          "Explain Integration Testing of modules in real life example?",
          "What is Top Down Integration Testing Approach?",
          "What are Stubs? (Software Testing Interview Question #58)",
          "What is Bottom Up Integration Testing Approach?",
          "What are Drivers? (Software Testing Interview Question #60)"
        ],
        "(Set # 7) 10 Questions and Answers": [
          "What is UI Testing or GUI Testing? (Software Testing Interview Question #61)",
          "What is Functional Testing? (Software Testing Interview Question #62)",
          "What is Non-Functional Testing? (Software Testing Interview Question #63)",
          "What is Requirements Traceability Matrix?",
          "What is the link between Requirements Traceability Matrix and Defects?",
          "What are the different techniques used in Test Design?",
          "Explain Equivalence Class Partition with example?",
          "Explain Boundary Value Analysis with example?",
          "Explain Decision Table with example? (Software Testing Interview Question #69)",
          "Can you explain Defect Life Cycle (Bug Life Cycle)?"
        ],
        "(Set # 8) 10 Questions and Answers": [
          "What is Defect Severity? (Software Testing Interview Question #71)",
          "What is Defect Priority? (Software Testing Interview Question #72)",
          "Difference between Quality Assurance & Quality Control?",
          "What is the difference between Inspections and Audits?",
          "What is Bug Taxonomy? (Software Testing Interview Question #75)",
          "What is Quality Assessment Measurement?",
          "What is Test Management? (Software Testing Interview Question #77)",
          "What is Test Maturity Model? (Software Testing Interview Question #78)",
          "What is Capability Maturity Model ? (Software Testing Interview Question #79)",
          "What is Forward Traceability Matrix? (Software Testing Interview Question #80)"
        ],
        "(Set # 9) 10 Questions and Answers": [
          "What is Spillover in Agile Scrum? (Software Testing Interview Question #81)",
          "What is DOR in Agile Scrum? (Software Testing Interview Question #82)",
          "What is DOD in Agile Scrum? (Software Testing Interview Question #83)",
          "What is Backward Traceability Matrix (Software Testing Interview Question #84)",
          "What is Bi-Directional Traceability Matrix?",
          "What is Software Testing Life Cycle? (Software Testing Interview Question #86)",
          "What is Requirement Specification Document?",
          "What are APIs? (Software Testing Interview Question #88)",
          "What is API Testing? (Software Testing Interview Question #89)",
          "What is WebServices Testing? (Software Testing Interview Question #90)"
        ],
        "(Set # 10) 10 Questions and Answers": [
          "What is the duration of the Sprint? (Software Testing Interview Question #91)",
          "What is Product Backlog Refinement? (Software Testing Interview Question #92)",
          "What are different SDLC Models? (Software Testing Interview Question #93)",
          "What is the difference between Agile and Scrum?",
          "What is Pesticide Paradox? (Software Testing Interview Question #95)",
          "What are different Agile Methodologies?",
          "What is Defect Clustering? (Software Testing Interview Question #97)",
          "What are Scrum Ceremonies? (Software Testing Interview Question #98)",
          "What is Acceptance Criteria? (Software Testing Interview Question #99)",
          "What is Sprint Goal? (Software Testing Interview Question #100)"
        ]
      },
      "requirements": [
        "Software Testing Basic Knowledge (Manual)"
      ],
      "description": "In this course, a good number of Software Testing Interview Questions are answered with detailed answers.\nThe below are few questions answered:\nWhy do you want to pursue your career in the field of Software Testing?\nPlease explain your nature, habits, or likes that you think you are the right candidate for the Software Testing?\nWhy should we perform Software Testing?\nWhat is Software Testing?\nWhat are the features you check before you purchase a mobile?\nWhat do you mean by quality?\nWhat do you mean by performance?\nCan you write possible test cases for a Pencil?\nHow do you test OTP (One Time Password) Feature in Applications?\nWhat are the essentials of Software Testing?\nWhat is required for tester to know before testing Software Applications?\nWhat are Desktop Applications?\nHow to test Desktop Applications?\nWhat are Web Applications?\nHow to test Web Applications?\nWhat are Anomalies in Software?\nWhat are the Types of Defects in Software Applications\nHow many different ways you can test Software?\nWhat is expected from the testing team on testing a Software Application?\nWhat is Unit Testing?\nWhat is Sanity Testing?\nWhat is Smoke Testing?\nWhat is Exploratory Testing?\nWhat is Integration Testing?\nWhat is System Testing?\nWhat is Interface Testing?\nWhat is Regression Testing?\nWhat is Alpha Testing?\nWhat is Beta Testing?\nWhat is Performance Testing?\nWhat is Load Testing?\nWhat is Stress Testing?\nWhat is Security Testing?\nWhat is Static Testing?\nWhat is Dynamic Testing?\nWhat is Compatibility Testing?\nWhat is Reliability Testing?\nWhat is Compliance Testing?\nWhat is Localization Testing?\nWhat are Test Cases?\nWhat columns are present in Test Case Template?\nWhat columns are important in Test Case?\nWhat Test Case Management Tools have you used?\nWhat is Use Case?\nExplain Main Elements of Use Case\nWhat is Test Scenario?\nWhat are Positive Test Cases?\nWhat are Negative Test Cases?\nWhat is Behavior Driven Development (BDD) ?\nWhat is Acceptance Testing?\nWhat is Vulnerability Testing?\nWhat is Black Box Testing?\nWhat is White Box Testing?\nWhat is Grey Box Testing?\nWhat are the different levels of Software Testing?\nExplain Integration Testing of modules in real life example?\nWhat is Top Down Integration Testing Approach?\nWhat are Stubs?\nWhat is Bottom Up Integration Testing Approach?\nWhat are Drivers?\nWhat is UI Testing or GUI Testing?\nWhat is Functional Testing?\nWhat is Non-Functional Testing?\nWhat is Requirements Traceability Matrix?\nWhat is the link between Requirements Traceability Matrix and Defects?\nWhat are the different techniques used in Test Design?\nExplain Equivalence Class Partition with example?\nExplain Boundary Value Analysis with example?\nExplain Decision Table with example?\nCan you explain Defect Life Cycle (Bug Life Cycle)?\nWhat is Defect Severity?\nWhat is Defect Priority?\nWhat is the difference between Quality Assurance and Quality Control?\nWhat is the difference between Inspections and Audits?\nWhat is Bug Taxonomy?\nWhat is Quality Assessment Measurement?\nWhat is Test Management?\nWhat is Test Maturity Model?\nWhat is Capability Maturity Model ?\nWhat is Forward Traceability Matrix?\nWhat is Spillover in Agile Scrum?\nWhat is DOR in Agile Scrum?\nWhat is DOD in Agile Scrum?\nWhat is Backward Traceability Matrix?\nWhat is Bi-Directional Traceability Matrix?\nWhat is Software Testing Life Cycle?\nWhat is Requirement Specification Document?\nWhat are APIs?\nWhat is API Testing?\nWhat is Webservices Testing?\nWhat is the duration of the Sprint?\nWhat is Product Backlog Refinement?\nWhat are different SDLC Models?\nWhat is the difference between Agile and Scrum?\nWhat is Pesticide Paradox?\nWhat are different Agile Methodologies?\nWhat is Defect Clustering?\nWhat are Scrum Ceremonies?\nWhat is Acceptance Criteria?\nWhat is Sprint Goal?\nWhat is Product Vision in Scrum?\nWhat is Sprint Zero?\nWhat is Spike in Agile Scrum?\nWhat is Velocity in Agile Scrum?\nWhat is Burn-down Chart?\nWhat is the difference between Regression Testing and Retesting?\nWhat is the difference between Sanity Testing and Retesting?\nWhat is a difference between Debugging and Unit Testing?\nWhat are the other names for White Box Testing?\nWhat are the other names for Black Box Testing?\nWhat are the different types of White Box Testing?\nWhat will happen if a Defect is found in Production?\nWhat is the difference between Integration Testing and System Testing?\nWhat is Hotfix?\nWhat are the various contents of Test Plan?\nWhat is Prototyping?\nWhat are the different types of Prototypes?\nWhat are the different SDLC Phases?\nWhat kind of reviews are conducted during SDLC?\nWhat is Walkthrough?\nWhat are Inspections?\nWhat are Code Reviews?\nWhat is Pair Programming?\nWhat are Technical Reviews?\nWhat are Software Testing Metrics?\nWhat is Defect Density?\nWhat is Defect Leakage?\nWhat is Defect Removal Efficiency?\nDo you know the formulas used for calculating different Software Testing Metrics?\nWhat is the role of Metrics in Software Testing?\nWhat is Manual Testing?\nWhat are key challenges while testing a Software Application?\nWhat is Automation Testing?\nWhat is the advantage of using any Bug Tracking Tool?\nWhat is Positive Testing?\nExplain about Usability Testing?\nWhat is Negative Testing?\nWhat are different defect attributes?\nWhat is Retesting?\nExplain V Model?\nWhat is Ad-hoc Testing?\nWhat is Buddy Testing?\nWhat is Pair Testing?\nWhat is the difference between Buddy Testing and Pair Testing?\nWhat is Confirmation Testing?\nWhat is the difference between HLD and LLD?\nWhat is Monkey Testing?\nWhat is Gorilla Testing?\nWhat is Fuzz Testing?\nWhat is the difference between Authentication and Authorization?\nAnd many more questions answered.",
      "target_audience": [
        "For the ones who are preparing for and attending Software Testing Interviews"
      ]
    },
    {
      "title": "CYPRESS AUTOMATION : From Scratch To Advanced Frameworks",
      "url": "https://www.udemy.com/course/cypress-automation-from-scratch-to-advanced-frameworks/",
      "bio": "Learn Cypress Step‑by‑Step — Automate UI & API Tests, Build Data‑Driven Frameworks, and Apply POM Patterns",
      "objectives": [
        "Install and configure Cypress step-by-step, enable IntelliSense in VS Code, and run your first automated test to see Cypress in action",
        "Master Cypress locators and core commands (click, type, clear, scroll, double-click, .find()) to interact reliably with any web element",
        "Handle complex UI scenarios: checkboxes, radio buttons, dropdowns, alerts, popups, iframes, file uploads, form inputs, clearing text and scrolling",
        "Organize stable tests using beforeEach/afterEach hooks, set a base URL for cleaner tests, and implement data-driven testing with fixtures and random test data",
        "Automate real-world workflows like login and signup, record user actions, and build a real-time project that ties everything together",
        "Perform API testing (GET, POST, PUT, DELETE), mock network responses with intercept, and validate integrated UI + API flows",
        "Build scalable frameworks with reusable custom commands, Page Object Model (POM), and automatic retry for flaky tests",
        "Integrate with CI/CD (Jenkins) run tests in headless mode, and generate HTML reports, screenshots and video recordings for reliable debugging and team reporting"
      ],
      "course_content": {
        "Getting Started & First Test": [
          "How to Install and Configure Cypress",
          "Cypress Sample Test Suite",
          "First Test in Cypress",
          "Quiz-Check your knowledge"
        ],
        "Locators & Core Commands (with VSCode Setup)": [
          "Enable IntelliSense in VS Code",
          "How to Locate Web Element in Cypress",
          "Cypress Click Command Explained",
          "Typing in Input Fields"
        ],
        "Advanced Locators & DOM Commands": [
          "Locating Web Elements (Advanced)",
          "Using beforeEach / afterEach Hooks",
          "The .find() Command"
        ],
        "Form Controls & Data Handling (UI)": [
          "Handling Dropdowns",
          "Data Driven Testing (Fixtures)",
          "Handling Checkboxes",
          "Setup Base URL"
        ],
        "Recording Actions, Alerts & Screenshots": [
          "Record User Actions & Generate Tests",
          "Clicking Radio Buttons",
          "Handling JavaScript Alerts",
          "Capture Screenshots on Failures"
        ],
        "Forms, Workflows & Advanced UI Actions": [
          "Login Automation (moved here )",
          "Automate Signup Form",
          "Clearing Text from Input Fields",
          "Double Click Action",
          "Scroll Elements"
        ],
        "File Uploads, Videos & Reports": [
          "File Upload Made Easy",
          "Cypress Video Recording",
          "Generate HTML Reports",
          "Generate Random Emails"
        ],
        "Real-Time Project & API Testing": [
          "Real‑Time Project (Beginners)",
          "API Testing: GET & POST (Part 1)",
          "API Testing: PUT & DELETE (Part 2)",
          "Browser Navigation (Back/Forward)"
        ],
        "Framework Patterns & Reliable Test Execution": [
          "Page Object Model (POM) Part 1",
          "Data Driven Testing with Fixtures (Advanced)",
          "Retry Failed Tests Automatically",
          "Running Tests in Headless Mode"
        ],
        "Reusability, Complex Scenarios & Framework Wrap-up": [
          "Handling IFrames",
          "Reusable Custom Commands",
          "Record & Generate Tests Automatically",
          "Page Object Model (POM) Part 2",
          "Basics & Core Cypress"
        ]
      },
      "requirements": [
        "Internet connection to install Cypress and required packages.",
        "No prior Cypress or automation testing experience needed — this course starts from scratch.",
        "A computer with Windows, macOS, or Linux installed.",
        "Basic understanding of JavaScript (helpful, but not mandatory — everything is explained step by step)."
      ],
      "description": "Cypress is one of the fastest-growing test automation tools in the world today. With its modern architecture, developer-friendly syntax, and powerful features, Cypress makes it easy to write reliable end-to-end, UI, and API tests — all from scratch.\nThis course takes you on a complete step-by-step journey. Starting as a beginner, you’ll gradually build the skills to design and implement robust test frameworks in Cypress. Every concept is explained clearly with practical, real-time examples — no skipped steps, no assumptions.\n\n\nWhat You Will Learn\nInstalling and setting up Cypress from scratch\nWriting and executing your first automated tests\nWorking with Cypress locators & commands (click, type, clear, scroll, double-click)\nHandling UI elements: checkboxes, radio buttons, dropdowns, alerts, and iframes\nOrganizing tests with hooks (beforeEach, afterEach)\nAutomating real-world workflows (login, signup, forms)\nCapturing screenshots & video recordings for debugging\nGenerating HTML reports and working with test artifacts\nData-driven testing with fixtures and test data\nBuilding maintainable frameworks using the Page Object Model (POM)\nCreating reusable custom commands\nRunning tests in headless mode and retrying failed tests automatically\nPerforming API testing (GET, POST, PUT, DELETE)\nApplying everything in a real-time automation project\n\n\nWhy Learn Cypress?\nUnlike older Selenium-based tools, Cypress runs directly in the browser, giving you native access to the DOM, fast execution, and powerful debugging features. It handles UI interactions, API requests, and network traffic in one framework — making it a one-stop solution for front-end automation.\nKey benefits include:\nAutomatic waiting (no need for explicit sleeps)\nBuilt-in screenshots and video recordings of test runs\nEasy debugging with detailed error messages\nUnified support for UI and API testing\n\n\nBy the End of This Course, You Will Be Able To:\nAutomate both UI and API flows confidently\nDesign test structures with the Page Object Model\nImplement data-driven tests using fixtures\nCapture reports, screenshots, and recordings for test evidence\nBuild a mini Cypress framework for real-world projects\nStrengthen your portfolio for automation testing interviews\nThis course is built from scratch, so no prior Cypress knowledge is required. A basic understanding of JavaScript is helpful, but every concept is explained step-by-step with examples.\n\n\nJoin today and master Cypress end-to-end with real-world projects, frameworks, and hands-on practices!",
      "target_audience": [
        "Automation Engineers",
        "Software Engineers",
        "Software developers",
        "Anyone preparing for Automation Testing Interviews and real-world projects.",
        "SDET (Software Development Engineers in Test) aiming to strengthen their automation toolkit."
      ]
    },
    {
      "title": "TestOps - Continuous Testing in DevOps with Jenkins, Python",
      "url": "https://www.udemy.com/course/testops-continuous-testing/",
      "bio": "Seamless DevOps Testing: Harnessing Jenkins, Python Pytest, and Git for Quality Assurance and Development Teams",
      "objectives": [
        "Understand the principles of Continuous Testing and TestOps, including its significance in agile and DevOps",
        "Integrate testing activities into the continuous integration and continuous delivery (CI/CD) pipeline",
        "Utilize testing tools and frameworks suitable for continuous testing",
        "In-depth knowledge about Automated Testing in a Agile and DevOps team",
        "Detailed usage of tools and techniques - like Python, Pytest, Jenkins, Git, GitHub"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "DevOps pipeline",
          "TestOps - Continuous Testing",
          "Tools, technologies",
          "Test Automation, Types of Tests",
          "Jenkins for Continuous Testing"
        ],
        "Test Automation Framework": [
          "Section Intro",
          "Why Python",
          "About Pytest and Why Pytest",
          "About Pycharm: Install/Configuration",
          "Create Automation Project",
          "Install Python packages",
          "Quiz",
          "First Test & Pytest Rules",
          "API Server For Testing",
          "Config Files and confiparser(1/2)",
          "Config Files and confiparser(2/2)",
          "Run/Execute Tests",
          "Quiz",
          "Write Utils",
          "Write API Tests(1/2)",
          "Write API Tests(2/2)"
        ],
        "Jenkins on windows": [
          "Jenkins Intro",
          "Jenkins Installation(Win)",
          "Jenkins Basics - console walkthru(1/3)",
          "Jenkins Basics - console walkthru(2/3)",
          "Jenkins Basics - console walkthru(3/3)",
          "Jenkins Basics - Job types",
          "Freestyle Job Jenkins(Windows)",
          "Quiz",
          "Jenkins Basics - plugins(1/2)",
          "Jenkins Basics - plugins(2/2)",
          "Jenkins Basics - Job triggers",
          "Jenkins Basics - Job trigger example",
          "Jenkins Basics - Execute concurrent & Build Executors",
          "Quiz",
          "Execute Test in Development Env(1/2)",
          "Execute Test in Development Env(2/2)"
        ],
        "Git GitHub/Bitbucket Basics": [
          "Git Basics",
          "Github Desktop",
          "Quiz",
          "Push code to GitHub",
          "Notes On Repo",
          "Jenkins With GitHub",
          "Quiz"
        ],
        "Jenkins on Linux": [
          "Jenkins Installation Linux(1/2)",
          "Jenkins Installation Linux(2/2)",
          "Freestyle Job Jenkins(Linux)(1/2)",
          "Freestyle Job Jenkins(Linux)(2/2)",
          "Pyenv & Venv",
          "Install Pyenv(1/2)",
          "Install Pyenv(2/2)",
          "Freestyle APITests Job(1/4)",
          "Freestyle APITests Job(2/4)",
          "Freestyle APITests Job(3/4)",
          "Freestyle APITests Job(4/4)",
          "Jenkins Credentials Intro",
          "Jenkins-GitHub Integration"
        ],
        "Jenkins - Pipelines": [
          "Jenkins Pipeline Intro",
          "Jenkins Pipeline Job(1/2)",
          "Jenkins Pipeline Job(2/2)",
          "Jenkins Declarative Pipelines",
          "Pipeline APITests Job(1/3)",
          "Pipeline APITests Job(2/3)",
          "Pipeline APITests Job(3/3)"
        ],
        "CI/CD & Continous Testing": [
          "What is CI/CD",
          "What is Continous Testing",
          "Pipeline as code Intro",
          "Pipeline as code(1/2)",
          "Pipeline as code(2/2)"
        ],
        "Continous Testing/Continous Monitoring": [
          "Section Intro",
          "Pipeline Job Chaining",
          "Freestyle Job chaining",
          "Job chaining- Build After",
          "Continuous Monitoring",
          "Test result analysis and visualization",
          "Test Reporting"
        ],
        "Bonus Section - Thanks": [
          "Linux Installation on VirtualBox",
          "Thanks"
        ]
      },
      "requirements": [
        "No prior experience or knowledge required in DevOps or TestOps, you will learn everything in this coure",
        "Test Automation and Testing concepts will be helpful"
      ],
      "description": "Welcome!\nContinuous Testing with Jenkins, Python Pytest, and Git is a comprehensive course designed to equip learners with the skills and knowledge to implement continuous testing practices in their software development projects. In today's fast-paced software industry, the demand for rapid and reliable software delivery is at an all-time high. Continuous testing is a critical component of the DevOps culture, ensuring that code changes are continuously validated and integrated into the development CI/CD pipeline.\nThe course then delves into the core tools that form the backbone of continuous testing: Python Pytest for Test Automation, Git GitHub for Code Repository and Jenkins as CI/CD Server.\nPython Pytest, a popular testing framework, will be explored in-depth. Participants will discover how to write and execute test cases using Pytest, leverage fixtures, and generate informative test reports. The course covers best practices for organizing test suites and handling test data effectively.\nThe integration of Git, a version control system, into the continuous testing process will also be demonstrated. Learners will learn how to manage test scripts and test data in Git repositories, enabling versioning and collaboration among team members.\nJenkins is a powerful and widely used automation server that enables seamless integration of testing into the CI/CD pipeline. Learners will learn how to set up Jenkins and configure it to execute automated tests on each code commit, ensuring continuous feedback and early detection of defects.\nPractical hands-on exercises and real-world projects will allow participants to apply their knowledge and skills in real-life scenarios. They will build a continuous testing pipeline from scratch, integrating Jenkins, Python Pytest, and Git effectively.\nBy the end of the course, participants will be adept at setting up a robust and automated continuous testing framework, capable of detecting and addressing defects early in the development process. They will be equipped with the expertise to contribute to the success of agile and DevOps-driven software development projects.\nContinuous Testing with Jenkins, Python Pytest, and Git is an essential course for software testers, developers, QA engineers, and DevOps practitioners seeking to elevate the quality of their software releases, accelerate development cycles, and stay ahead in the dynamic world of modern software development.\nThis course is carefully designed to equip you with the knowledge and skills needed to take your test automation expertise to the next level.\nSign up now and let's embark on this exciting journey together!\nThank You!\nTags: Test Automation Framework, Pytest Automation, Jenkins for Test Automation, CI/CD Testing",
      "target_audience": [
        "Testers who want to enhance their skills in continuous testing and understand how to integrate testing activities within the CI/CD pipeline",
        "Automation engineers seeking to optimize their test automation strategies",
        "Developers who want to learn how to collaborate with testers and integrate testing into their continuous integration workflow.",
        "DevOps practitioners interested in expanding their knowledge of continuous testing as an integral part of the DevOps culture",
        "Agile team members, including Scrum Masters and Product Owners, who want to understand how continuous testing contributes to agile software development",
        "Project managers who aim to optimize testing processes and improve the overall software quality through continuous testing practices.",
        "IT managers and leaders responsible for implementing continuous testing strategies within their organizations.",
        "Anyone who wants to learn about continuous testing, its benefits, and how it fits into the broader context of continuous integration and continuous delivery"
      ]
    },
    {
      "title": "Testes Exploratórios",
      "url": "https://www.udemy.com/course/testes-exploratorios/",
      "bio": "Conheça os benefícios e diversas técnicas para incrementar o seu repertório e trazer mais segurança para sua aplicação",
      "objectives": [
        "Como organizar uma sessão de testes exploratórios",
        "Conhecer diversas técnicas e pontos de vista distintos para testar a sua aplicação",
        "Como criar um relatório de execução das explorações",
        "Como reportar erros de forma eficiente"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Automatizado Vs Manual",
          "Roteiros Vs Exploratórios",
          "Automação é nossa amiga",
          "Gerenciamento de massa de dados",
          "Quando parar?",
          "Por onde começar?",
          "Planejamento de testes"
        ],
        "Estratégias iniciais": [
          "Freestyle",
          "Baseado em Cenários",
          "Baseado em Feedback",
          "Baseado em Técnicas",
          "Classe de Equivalência",
          "Valor Limite",
          "Transição de estados",
          "Tabela de decisão",
          "Array Ortogonal"
        ],
        "Personas": [
          "Personas",
          "Persona #1",
          "Persona #2",
          "Persona #3",
          "Persona #4",
          "Persona #5",
          "Persona #6"
        ],
        "Soap Opera Scenarios": [
          "Soap Opera Testing",
          "O Poder da Matemática"
        ],
        "Turismo": [
          "Tours",
          "Business District",
          "Historic District",
          "Entertainment District",
          "Tourism District",
          "Hotel District"
        ],
        "Outras Estratégias": [
          "Shoe Test",
          "Null, Zero, Vazio",
          "Get one, take one",
          "Bookmark",
          "Sabotage",
          "Ferramentas de Desenvolvedor",
          "Requisições",
          "Responsividade e Acessibilidade",
          "Segurança",
          "Banco de dados #1",
          "Banco de dados #2",
          "Resumão"
        ],
        "Preparando uma execução": [
          "Ferramentas",
          "Plugin",
          "Organizando uma sessão",
          "Template para relatório de execução"
        ],
        "Fazendo uma Execução": [
          "Conhecendo as rotas",
          "Execução #1",
          "Execução #2",
          "Relatório de execução"
        ],
        "Gerenciando erros": [
          "Como reportar um erro",
          "Reportando os erros",
          "Senta que lá vem história",
          "Quando corrigir um erro?",
          "Como corrigir um erro?"
        ],
        "Conclusão": [
          "Até a próxima!",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "O curso não possui pré-requisitos.",
        "Qualquer pessoa será muito Bem-Vinda!"
      ],
      "description": "Seja muito bem vindo(a) ao curso de Testes Exploratórios.\nNeste curso, você irá aprender a importância deste tipo testes e o valor que ele irá agregar na qualidade do seu produto. Iremos entender os pontos fortes e fracos desta estratégia e a necessidade de termos estes testes mesmo já tendo uma bateria de testes automatizados com uma boa cobertura.\nDurante o curso, irei contar algumas histórias e experiências pessoais, iremos conhecer diversas estratégias como: classes de equivalência, valores limites, tabelas de decisão... além de outras metodologias como personas, Soap Opera, o paralelo entre turismo e o mundo dos testes criado pelo Whittaker e muito mais.\nAlém das estratégias, também vamos conhecer o ciclo de vida dos testes exploratórios, como levantar cenários para futuras execuções, como organizar estas rotas criadas, algumas ferramentas que poderão nos ajudar nestas atividades. Teremos ainda uma sessão prática de exploração utilizando diversas técnicas que aprendemos em uma aplicação real. Em seguida, o resultado desta exploração será detalhado em um relatório de execução e erros reportados. Falando em erros, também teremos uma sessão inteira sobre como reportar um erro, boas práticas e outras discussões sobre quando e como podemos corrigir um bug.\nEntão é isso, espero poder te encontrar nas próximas aulas. Até lá! ;)",
      "target_audience": [
        "Testadores que desejam trazer mais estabilidade para suas aplicações através de sessões de testes exploratórios",
        "Testadores que desejam ampliar seu horizonte de técnicas para executar testes"
      ]
    },
    {
      "title": "Tests unitarios con JUnit 5 y Mockito en Spring Boot",
      "url": "https://www.udemy.com/course/test-unitario-con-junit-y-mockito-en-spring-boot-java-8/",
      "bio": "Aprende a testear APIs reales con Java 8, Spring Boot 2, JUnit y Mockito. Aplica pruebas en una API con arqui hexagonal",
      "objectives": [
        "Dominar los fundamentos del testing en Java con JUnit 5 y Mockito.",
        "Crear tests unitarios en controladores y servicios de un proyecto real con Spring Boot.",
        "Consigue un coverage de un 100 %",
        "Usar mocks correctamente para aislar dependencias y alcanzar alta cobertura de código.",
        "Crea test para cualquier método y clase de tu proyecto Spring boot",
        "Incrementa tus ingresos, como desarrollador backend dominando Junit y Mockito",
        "Superar revisiones de calidad (como SonarQube) con tests bien estructurados.",
        "Aplicar pruebas en una arquitectura hexagonal con buenas prácticas de la industria.",
        "Mejorar tu perfil profesional y destacar como desarrollador backend."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "¡¡ Notas Importantes !!",
          "Objetivos del curso",
          "Recomendaciones para el curso"
        ],
        "Tipos de Pruebas en la programación": [
          "Tipos de prueba en el desarrollo web",
          "Test unitario",
          "Pruebas unitarias",
          "¡¡ Notas Importantes !!",
          "Descargar e instalar jdk-8 de Java y Spring Tool Suit 4"
        ],
        "Spring Boot y sus dependencias de Junit y Mockito": [
          "Actualización importante en la pagina de Spring Initializer",
          "Creando nuestro primer proyecto Spring Booot desde la pagina de Spring",
          "¿Diferencias entre Maven y Spring Boot?",
          "Dependencias de Junit y Mockito",
          "Instalando el Plugin de Coverage en nuestro IDE",
          "Errores frecuentes al realizar test unitarios.",
          "Maven"
        ],
        "Test Unitario con el Framework Junit": [
          "¿Que es Junit?",
          "Nuestro primer test unitario con Junit",
          "Introducción a las anotaciones @Before y @After",
          "Test unitario con Junit",
          "Creando un Controlador Real para poder testearlo",
          "Testeando un Controlador o endpoind con Junit",
          "Testeando nuestro Controlador al 100% de Coverage",
          "Revisando mas anotaciones en Junit",
          "Test con Junit",
          "Anotaciones para ejecutar tests de error con Junit"
        ],
        "Test Unitario con el Framework Mockito": [
          "¿Que es Mockito?",
          "¿Para que necesitamos Mockito?",
          "Metodos de Mockito para simular Servicios o clases externas a nuestra clase test",
          "Crear y testear nuestro primero ejemplo con Mockito",
          "Ejecutar y revisar Coverage de nuestro primer ejemplo con Mockito",
          "Ejercicio practico con Junit con Mockito",
          "Metodos de Mockito para simular Servicios (métodos) que terminan en error",
          "Test unitario con Mockito"
        ],
        "Diferencias entre Junit y Mockito en el testing": [
          "¿Las grandes diferencias que hay entre Junit y Mockito?",
          "Recomendaciones para los proyectos a testear desde este punto",
          "Testeando una API con Junit y Mockito",
          "Revisando nuestro Primer proyecto real a testear con Junit y Mockito",
          "Testeando nuestro primer metodo del proyecto",
          "Testeando el segundo metodo de nuestra clase BookController - Cuando existe",
          "Testeando el segundo metodo de nuestra clase BookController -NotFount",
          "Testeando el tercer metodo de nuestra clase BookController - createBook",
          "Testeando el ultimo metodo de nuestra clase BookController - deleteBook"
        ],
        "----- Test Unitario en proyectos reales -----": [
          "A partir de aquí pondremos en practica todo lo aprendido de Junit y Mockito"
        ],
        "P1 - Test unitario de una Api de Reserva de Restaurantes": [
          "Entendiendo la API para crear test unitario",
          "Debugeando para entender la API a realizar el Test Unitario",
          "Test unitario de controlador de Restaurantes",
          "Creando el test del metodo buscar restaurantes por el id",
          "Mockeando nuestro Servicio de restaurante que trae un restaurante por id",
          "Test unitario de Controlador de traer todos los Restaurantes",
          "Test Unitario de nuestro Servicio de traer Restaurante por Id",
          "Revisando el Coverage y Testeando toda la funcionalidad del Servicio",
          "Test Unitario del Servicio que trae todo los Restaurantes",
          "Test Unitario del Controlador de Reservas (Mockear el servicio)",
          "Test Unitario del Controlador de Reservas (Crear y testear el metodo)",
          "Test unitario del Servicio de Reservas (Inicio)",
          "Test unitario del Servicio de Reservas Mockear dependencias",
          "Test unitario del Servicio de Reservas Mockear Dependencias y revisar Coverage",
          "Probando el primer caso de prueba error en el Metodo CreateReservation",
          "Probando el segundo caso de prueba error en el Metodo CreateReservation",
          "Probando el tercer caso de prueba error en el Metodo CreateReservation",
          "Probando el ultimo caso de prueba error de reservation - Internal server error",
          "Test Unitario del Controlador de Cancelar reserva",
          "Test Unitario de nuestro Servicio de Cancelar Reserva",
          "Test unitario del caso de prueba error en el Metodo Cancel reservation"
        ],
        "Despedida y review para mejorar en las próximas secciones": [
          "Despedida"
        ]
      },
      "requirements": [
        "Tener conceptos básicos en Java y SpringBoot",
        "Saber programar en Java, y tener muchas ganas de crecer y tener un código robusto",
        "Ganas de aprender y querer dar un salto en tu carrera como profesional."
      ],
      "description": "Una de las habilidades más valoradas hoy en el desarrollo backend es saber realizar pruebas unitarias profesionales. Este curso te enseña paso a paso cómo escribir y ejecutar tests con JUnit 5 y Mockito, trabajando sobre una API real de reservas de restaurante desarrollada con Java 8 y Spring Boot 2.\nTodo lo que aprenderás está basado en experiencia real en empresas multinacionales, aplicando testing en entornos de producción, revisiones de código y buenas prácticas del mundo laboral.\n\n\nNo aprenderás solo la teoría: te enfrentarás a situaciones reales, donde el código necesita ser testeado, validado y mantenido.\n\n\nEn este curso trabajarás con arquitectura hexagonal, utilizando mocks para aislar dependencias, tests en controladores y servicios, y lograrás una cobertura de código sólida que cumple con herramientas de calidad como SonarQube. Verás cómo estructurar tus pruebas para mantener un código robusto, escalable y fácil de mantener.\nTodo está explicado de forma clara y progresiva, apoyado con diagramas y explicaciones visuales. Si eres desarrollador backend y quieres mejorar la calidad de tu código, este curso es exactamente lo que necesitas. Está diseñado tanto para estudiantes como para profesionales que desean dar un salto real en su carrera como programador Java con Spring Boot 2.",
      "target_audience": [
        "A estudiantes de programación, ingenieros de software y desarrolladores backend que quieran aprender a escribir pruebas unitarias reales y efectivas en Java con Spring Boot.",
        "A programadores que desean llevar su código al siguiente nivel aplicando testing profesional con JUnit 5 y Mockito.",
        "A quienes ya trabajan en proyectos con Spring Boot y necesitan mejorar la calidad del software aplicando buenas prácticas de pruebas.",
        "A cualquier persona que quiera prepararse para trabajar en equipos profesionales donde el testing y la cobertura de código son requisitos esenciales."
      ]
    },
    {
      "title": "Teste de performance com K6",
      "url": "https://www.udemy.com/course/teste-de-performance-com-k6/",
      "bio": "Aprenda como criar testes de performance rápidos e poderosos de forma simples e executados em ambientes de cloud AWS",
      "objectives": [
        "Criação de testes de performance modernos.",
        "Entendimento sobre os diferentes tipos de testes de performance.",
        "Ciclo de vida de testes de performance.",
        "Leitura de dados de fontes externa com k6.",
        "Conceito de limites para testes de performance.",
        "Executar testes de performance utilizando AWS.",
        "Conceito de métricas para testes de performance.",
        "Thresholds.",
        "Geração de relatório personalizado.",
        "Github Actions"
      ],
      "course_content": {
        "Introdução": [
          "Introdução ao k6",
          "Instalando a ferramenta"
        ],
        "Entendendo os tipos de teste performance": [
          "Introdução",
          "Smoke test",
          "Load test",
          "Stress e Spike test",
          "Soak test",
          "Breakpoint test",
          "Vamos colocar em prática o que aprendemos até agora:"
        ],
        "Conceitos importantes": [
          "Introdução",
          "Ciclo de vida de um testes com K6",
          "Realizando Requisições HTTP",
          "Realizando Checks",
          "Entendendo o conceito de métricas - parte 1",
          "Entendendo o conceito de métricas - parte 2",
          "Thresholds",
          "Utilizando modulo",
          "Conhecendo groups",
          "Conhecendo tags",
          "Utilizando variaveis de ambiente",
          "Entendendo scenarios - parte 1",
          "Entendendo scenarios - parte 2",
          "Entendendo scenarios - parte 3"
        ],
        "Mão na massa": [
          "Construindo teste de carga - parte 1",
          "Construindo teste de carga - parte 2",
          "Construindo teste de carga - parte 3",
          "Construindo teste de carga - parte 4",
          "Contruindo teste de carga - parte 6"
        ],
        "Conteúdo adicional": [
          "Gerando relatório de saída com K6",
          "Gerando dashboard de saida com k6",
          "Execução em ambiente de cloud: Grafana Cloud K6",
          "Execução em ambiente de cloud: AWS",
          "Executando K6 com Github Actions",
          "Teste de performance em aplicações web - parte 1",
          "Teste de performance em aplicações web - parte 2",
          "Teste de performance em aplicações web - parte 3"
        ],
        "Conclusão": [
          "Parabéns"
        ]
      },
      "requirements": [
        "Conhecimento básico de javascript.",
        "Não é necessário ter experiência com a realização de testes de performance."
      ],
      "description": "O K6 é um ferramenta para testes de performance open source que faz parte da grafana labs e que vem crescendo bastante na comunidade de testes e desenvolvimento.\nEntre os pontos que tornam um K6 um diferencial em relação a outras ferramentas:\nSua simplicidade, tendo uma baixa curva de aprendizagem.\nOs scripts de testes de performance com K6 são escritos em javascript, uma linguagem simples e bastante popular no mercado.\nAlto desempenho da ferramenta, pois o k6 é escrito em Go.\nSua documentação da ferramenta, apesar de uma ferramenta recente no mercado, o k6 possui um documento excelente.\nNesse curso juntamos a teoria com a prática, abordando diversos conceitos como:\nOs diferentes tipos de testes de performance\nEntendimentos sobre conceitos de Métricas, Checks e Thresholds entre outros tópicos\nCiclo de vida de testes de performance com K6\nGeração de relatório.\nExecução em Cloud utilizando AWS.\nExecução em Cloud utilizando K6 cloud.\nTambém realizaremos uma serie de aulas praticas onde construiremos nossos scripts de testes de performance baseado em uma aplicação real para testes.\nDe o próximo passo na sua carreira e venha aprender como utilizar essa ferramenta moderna que esta simplificando a vida de profissionais de TI e mudando a forma como realizamos testes de peformance.",
      "target_audience": [
        "Testadores, QAs, SREs, Devs, QA Engineer, Analistas de teste, QA Analyst"
      ]
    },
    {
      "title": "Accessibility (A11Y) Testing for Web & Mobile Hands-On Guide",
      "url": "https://www.udemy.com/course/accessibility-a11y-testing-for-web-mobile-hands-on-guide/",
      "bio": "Start A11Y testing using keyboard navigation, NVDA, VoiceOver, TalkBack and more, compliant with accessibility standards",
      "objectives": [
        "Understand the fundamentals of accessibility testing, including its purpose, key principles, and why it's essential for creating inclusive digital products",
        "Learn how to use NVDA to test web accessibility on Windows, focusing on how screen readers interpret content and identify compatibility issues",
        "Understand how to use VoiceOver on macOS for testing accessibility, including gestures and navigation commands on Apple devices",
        "Gain experience testing mobile accessibility on iOS devices using VoiceOver, focusing on touch gestures and mobile-specific navigation",
        "Discover how to use TalkBack on Android for testing accessibility, including gesture navigation and feedback interpretation on Android devices",
        "Master testing keyboard navigation to ensure focus order, tab functionality, and overall keyboard operability for web interfaces",
        "Use tools like WAVE to evaluate color contrast on web pages, ensuring visual elements meet accessibility standards for users with visual impairments"
      ],
      "course_content": {
        "Accessibility Testing (A11Y)": [
          "Accessibility (A11Y) Testing - Intro",
          "What Is Accessibility (A11Y) Testing? Why It Matters More Than Ever in 2025",
          "Keyboard Navigation & Focus Order in A11Y Testing | Accessibility Basics",
          "Screen Reader Compatibility Testing Explained | A11Y Guide",
          "NVDA Screen Reader Tutorial: How to Use It for Accessibility Testing",
          "How to Use VoiceOver on Mac for Accessibility Testing",
          "VoiceOver Accessibility Testing on iOS Mobile Devices",
          "TalkBack Accessibility Testing on Android Devices",
          "Accesibility - Color Contrast & Visual Impairments -WEB AIM/Wave Tools"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone! Welcome to the Accessibility Testing course, where you’ll learn how to test for truly inclusive digital experiences by mastering the fundamentals of accessibility testing.\nThe course will be useful for:\n1. Software testers of all levels - from beginners learning the basics to experienced professionals looking to deepen their expertise in accessibility testing.\n2. Testers seeking to expand their skills in testing web and mobile apps for accessibility.\n3. Testers are ready to explore key tools like keyboard navigation, screen readers (NVDA, VoiceOver, TalkBack), and color contrast analyzers for evaluating accessibility on various platforms.\n4. Anyone interested in accessibility, whether you're a developer, designer, or just passionate about inclusive design, this course will help you apply accessibility testing in real-world scenarios.\nIn this practical, hands-on course, you’ll dive into the crucial field of accessibility testing - learning how to make your web and mobile digital products inclusive for everyone, especially people with disabilities. Whether you're a QA engineer, developer, product designer, or part of any other role in the software development lifecycle, this course is designed to equip you with essential knowledge and actionable skills to ensure your products meet accessibility standards.\n\nHere's what you'll learn:\n001 - Accessibility (A11Y) Testing – Intro\n002 - Why Accessibility Matters More Than Ever in 2025\n003 - Keyboard Navigation & Focus Order in A11Y Testing | Accessibility Basics\n004 - Screen Reader Compatibility Testing Explained | A11Y Guide\n005 - NVDA Screen Reader Tutorial: How to Use It for Accessibility Testing\n006 - How to Use VoiceOver on Mac for Accessibility Testing\n007 - How to Use VoiceOver on iOS Mobile for Accessibility Testing\n008 - How to Use TalkBack on Android for Accessibility Testing\n009 - Using the WAVE Tool for Color Contrast Checking\nThese lessons are packed with real-world, practical examples, showing how accessibility issues manifest in actual web and mobile applications. You'll not only learn the theory, but also gain the hands-on skills needed to apply accessibility testing in real scenarios.\nSo, are you ready to boost your testing expertise and become a champion of digital inclusivity?\nEnroll now and start testing for a more accessible and inclusive web and mobile experience.\nPrepare a cup of coffee (or your favorite drink), and enjoy the course!\nHope to see you in the first lecture!",
      "target_audience": [
        "Software testers of all levels - from beginners learning the basics to experienced professionals looking to deepen their expertise in accessibility testing",
        "Testers seeking to expand their skills in testing web and mobile apps for accessibility",
        "Testers are ready to explore key tools like keyboard navigation, screen readers (NVDA, VoiceOver, TalkBack), and color contrast analyzers for evaluating accessibility on various platforms",
        "Anyone interested in accessibility — whether you're a developer, designer, or just passionate about inclusive design - this course will help you apply accessibility testing in real-world scenarios"
      ]
    },
    {
      "title": "ChatGPT QA/SDET: Automate Test Cases, Plans, RCA, Bugs, Code",
      "url": "https://www.udemy.com/course/chatgpt-qasdet-automate-test-cases-plans-rca-bugs-code/",
      "bio": "Streamline QA tasks with AI-powered ChatGPT: Test Case Generation, Test Plans, RCA, Jira, Bug Reports, Automation Code",
      "objectives": [
        "Utilize ChatGPT to write comprehensive test cases and test plans based on PRD",
        "Create Jira bug reports and user stories efficiently using ChatGPT",
        "Generate detailed release notes and RCA reports with ChatGPT",
        "Automate QA documentation processes with ChatGPT tools",
        "Automation Code generation using ChatGPT"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Generate Test Cases based on Product Requirement Document Using ChatGPT",
          "Bug and Story details Generation using ChatGPT",
          "Test Plans, Release Notes, and RCA documents generation using ChatGPT",
          "Automation Code Generation using ChatGPT",
          "Documentation for all ChatGPT Requests made in Entire Course"
        ]
      },
      "requirements": [
        "No prior experience with ChatGPT needed; all necessary skills will be taught",
        "Basic understanding of QA life cycle"
      ],
      "description": "Course Title: \"Automate QA Tasks: ChatGPT for Test Cases, Plans, RCA, Automation Code and Bug Reports\"\nCourse Description:\nIntroduction to AI in QA Tasks:\nExplore how ChatGPT revolutionizes QA documentation processes.\nUnderstand the benefits of AI in improving efficiency and accuracy.\nGenerating Test Cases and Plans:\nLearn to use ChatGPT to generate detailed and structured test cases.\nDevelop comprehensive test plans with AI assistance.\nRoot Cause Analysis (RCA) and Bug Reports:\nDiscover how to create RCA reports efficiently using ChatGPT.\nCraft precise bug reports for Jira and other project management tools.\nGenerating Automation Code using ChatGPT:\nLearn how to leverage ChatGPT to automate the generation of test automation code.\nBenefits of Using ChatGPT:\nSave time by automating repetitive tasks in QA documentation.\nEnhance productivity by focusing on critical QA activities.\nTarget Audience:\nIdeal for QA engineers, SDET professionals, and product managers.\nNo prior AI experience necessary; suitable for beginners and intermediates.\nPractical Applications:\nImplement AI-driven solutions in real-world QA/SDET workflows.\nGain essential skills to integrate ChatGPT seamlessly into your QA practices.\nConclusion:\nMaster the art of efficient QA documentation with ChatGPT.\nStay competitive in the rapidly evolving tech industry by harnessing AI capabilities effectively.\nJoin us to streamline your QA processes and elevate your documentation standards with ChatGPT! Learn how AI can transform your QA practices and empower your team to achieve greater efficiency and accuracy in documentation tasks.",
      "target_audience": [
        "QA engineers and testers looking to streamline their documentation process",
        "SDET professionals aiming to enhance their productivity with AI tools",
        "Product Managers, Project managers and team leads seeking to automate repetitive QA tasks",
        "Beginner to expert professionals curious about integrating AI in QA practices"
      ]
    },
    {
      "title": "How can I become a QA Lead ? Software Testing, Jira & QA",
      "url": "https://www.udemy.com/course/from-tester-to-qa-lead-software-testing-jira-qa-mastery/",
      "bio": "MasterClass Software Testing with Jira & Agile -Be a QA Lead 2025",
      "objectives": [
        "MasterClass Software Testing with Jira & Agile -Be a QA Lead",
        "Straight to the point. 2025 BEST job oriented Software Manual Testing course on real time Projects + Interview questions",
        "Become a Game QA Lead: Master Testing, Leadership, and Project Management Skills",
        "Understand the role and responsibilities of a QA Lead in game development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who i am",
          "Introduction to Leadership"
        ],
        "Soft Skills for QA Lead": [
          "Communication Skills",
          "Communication II",
          "Key Strategies for People Management Skills"
        ],
        "Skills to become a QA Lead": [
          "Essential Skills QA Lead Should have",
          "Essential Skills QA Lead Part II",
          "Software testing strategies for QA Lead",
          "Test Automation for QA Lead",
          "Test Automation Strategies Part II"
        ],
        "Risk Analysis for QA Lead": [
          "Risk base testing for QA Lead",
          "Reporting and Monitoring"
        ],
        "Team Management Best Practices": [
          "How to manage team",
          "How to manage conflicts",
          "How to develop high performance QA Team",
          "Defect Management for QA Lead",
          "Test Environment Identification for QA Lead",
          "Continous Improvement QA Lead"
        ],
        "Jira Project Management Tool Live Examples": [
          "JIRA For QA Lead",
          "JIRA Basics",
          "JIRA Vervion information",
          "What are Issue Types in JIRA",
          "Issue & Projects Part II",
          "JIRA Interface",
          "How to create tickets in JIRA",
          "How to create User Story",
          "Multiple Epic with Multiple User Stories",
          "How to start sprint",
          "How to execute scrum board with JIRA"
        ],
        "Tips & Tricks for QA Lead": [
          "QA Lead Tips"
        ],
        "Automation Testing": [
          "itroduction to playwright",
          "playwright features",
          "Microsoft playwright features II",
          "Advantages of Microsoft Playwright",
          "Disadvatages of Playwright",
          "Top Tools Comparisions which helps QA Lead to evaluate",
          "Automation Engineer Responsibilites"
        ],
        "Hands on with Microsoft Playwright Automation": [
          "Getting Started with Microsoft Playwright",
          "How to install Microsoft Playwright",
          "Project folder structure",
          "How to run Script with Microsoft Playwright",
          "Core Concepts Microsoft Playwright",
          "Microsoft Playwright Actions",
          "How to locate web elements",
          "Microsoft Playwright Documentation tips for locators",
          "how to run playwright script in specific browser",
          "Drop Down Values",
          "Login screen script",
          "How to pick date",
          "POM Implementation",
          "Page Objects Identification",
          "Home objects",
          "Feedback Objects",
          "payment objects",
          "Currecy Exchage objects"
        ],
        "Microsoft Playwright Tips & Tricks": [
          "Tips and tricks",
          "Additional Tips",
          "How to apply Assertions",
          "How to find locators I",
          "How to search records in table"
        ]
      },
      "requirements": [
        "Basic understanding of game development and testing processes"
      ],
      "description": "Gain 8+ Years Real time experience as a ( Team/QA Lead) level by just following through this course\n\" One Single Course to Master everything in Software World. \" Learn on Agile Scrum Practices, Software Development Life cycle, QA Process, Software Testing methodologies , and Project management tools like Jira, Bugzilla etc.\nAre you struggling to know what happens in Software World to deliver the Project ?\nDo you want to gain the Project Lead level skills with out any prior real time experience ?\nIf YES this course is right choice for you\nI will also be your Life time mentor in giving you right directions for your Project needs\nHow this Course is Organized?\nBelow are the topics we will focus on section wise. And there is very much depth discussion on each topic below\n\n\nUnderstand how Software Projects is handling in Agile Environments\nWe shall be using Jira (Project tracking tool) to demonstrate the process\nHow Software Testing is handled in traditional software development life cycle.\nGet familiar with different types of Testing available and their usage in real time projects\nThorough Understanding of Jira and Bugzilla tool for Project Management\nHow to write Edge Test cases with out of box thinking and understand the process of Defect life cycle\nSQL Basics\n\n\nAnd below are the keywords which you will come across and learn in this course\nSoftware Testing\nAgile Scrum\nAgile Kanban\nSDLC\nWater fall model\nOut of box thinking in designing Testcases\nTest plan\nTesting types and their usage\nReal time project demonstration End to end on Jira tool\nBugzilla\nDefect Life cycle\nTest Plan Design\nScrum Master skills\nSQL\nTest Driven and Behavioral Driven development\n\n\nWish you All the Best !",
      "target_audience": [
        "Any one who are looking to start carrier in Software Testing People who do not have any experience in Software Industry but want to get in by showing Real experience People who need to master in Project/Test management tools like JIRA and Bugzilla Fresher Graduates who are looking for Job in IT field For Manual Testers, Scrum Masters and Project Lead who need to implement Best Practises of Current Software Industry"
      ]
    },
    {
      "title": "All about Software Testing & ISTQB exam in workshop /webinar",
      "url": "https://www.udemy.com/course/software-testing-workshop-webinar/",
      "bio": "live zoom workshop on Manual Software Testing and ISTQB",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction of Workshop",
          "MST Workshop Part 1",
          "MST Workshop Part 2",
          "MST Workshop Part 3",
          "MST Workshop Part 4",
          "MST Full Workshop"
        ]
      },
      "requirements": [
        "basic knowledge of computer"
      ],
      "description": "Manual Software Testing live zoom Workshop that covers the ISTQB exam in detail and all about manual software testing and automation testing with students' questions and answers. It is always said, “The most important part of the movie is the trailer”. I am sure most of you agree with this. So, in this movie of the Manual Testing workshop that we will be going through, let me take you through the trailer. I mean, let us look at the course outline in detail, what we will be covering in the manual testing workshop. In the manual testing course, we will be looking at:\nIntroduction to software testing?\n• What is software testing and\nWhy is testing important?\n• Terminologies used in Software Testing\n• Key Concepts- static, dynamic,\n• Roles and how you grow in the organization\nCauses of defects\n• QC and QA\n· 7 principles of testing\nFundamental test process followed in the organization\nThink and write effective test cases as per industry standards.\nType of Testing: (21 types of testing)\nTesting levels\n\n• Unit testing\n• Integration testing\n• Component interface testing\n• System testing\nProcess models used in software companies\n•Traditional waterfall development model\n•Agile or Extreme development model\n•V-Model\nA sample testing cycle\nQA role in Agile Scrum using JIRA- Real-time project\nAPI Testing through the Postman Tool\nMobile App Testing\nPractical hands-on writing test cases for web-based applications\nPractical hands-on on writing test cases for mobile-based application\nPractical hands-on writing test cases for desktop-based applications.\nHighlights:\nThink and write test cases as per the industry standards, MAIN IDEA: GET YOU INDUSTRY READY",
      "target_audience": [
        "People who do not have any experience & having experience in Software Industry but want to get in by showing Real experience."
      ]
    },
    {
      "title": "ISTQB Foundation Level v4.0 Practice Tests w/Simulated PBQs",
      "url": "https://www.udemy.com/course/istqb-foundation-level-ctfl-v40-practice-exam-simulated-pbq/",
      "bio": "ISTQB Certified Tester Foundation Level (CTFL) v4.0 Practice Exam / Test. Best for Self-Study and Self Assessment",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ISTQB Certified Tester Foundation Level (CTFL) v4.0 is a comprehensive certification program designed for individuals who want to establish a strong foundation in software testing. This certification is recognized globally and is highly regarded in the industry. It covers essential testing concepts, techniques, and methodologies, ensuring that testers have the necessary skills to excel in their roles.\n\n\nWith the ISTQB Foundation Level CTFL v4.0 certification, you will gain a deep understanding of the fundamental principles of software testing, including test design, test management, and test execution. You will learn how to identify and prioritize test cases, effectively communicate with stakeholders, and analyze test results. This certification also emphasizes the importance of quality assurance and the role of testing in the software development lifecycle.\n\n\nISTQB Foundation Level CTFL v4.0 certification is suitable for both beginners and experienced professionals in the field of software testing. It provides a solid foundation for those who are new to testing, while also offering valuable insights and best practices for seasoned testers. By obtaining this certification, you will enhance your credibility and marketability, opening up new career opportunities in the software testing domain.\n\n\nISTQB Foundation Level CTFL v4.0 certification program is based on a comprehensive syllabus that covers all the essential topics required for a successful career in software testing. It is delivered through a combination of self-study materials, instructor-led training, and practical exercises. The certification exam is rigorous and tests your knowledge and understanding of the concepts covered in the syllabus.\n\n\nThis practice exam is carefully crafted to mimic the format and difficulty level of the actual CTFL exam. It consists of multiple-choice questions that test your knowledge and understanding of software testing principles, techniques, and best practices. Each question is designed to challenge your critical thinking skills and assess your ability to apply your knowledge in real-world scenarios. With a wide range of questions covering various topics, you'll have ample opportunity to practice and reinforce your understanding of the CTFL syllabus.\n\n\nISTQB Certified Tester Foundation Level (CTFL) exam details:\nExam Name : Certified Tester Foundation Level (CTFL)\nExam Code : CTFL\nPrice : 100 USD\nDuration : 75 minutes\nNumber of Questions : 40\nPassing Score : Pass / Fail\nFormat : Multiple Choice, Multiple Answer, True/False\n\n\nISTQB Certified Tester Foundation Level (CTFL) Exam guide:\nFundamentals of Testing\nWhat is Testing?\nWhy is Testing Necessary?\nTesting Principles\nTest Activities, Testware, and Test Roles\nEssential Skills and Good Practices in Tetsing\n\n\nTesting Throughout the Software Development Lifecycle\nTesting in the Context of an SDLC\nTest Levels and Test Types\nMaintenance Testing\n\n\nStatic Testing\nStatic Testing Basics\nFeedback and Review Process\n\n\nTest Analysis and Design\nTest Techniques Overview\nBlack-box Test Techniques\nWhite-box Test Techniques\nExperience-based Test Techniques\nCollaboration-based Test Approaches\n\n\nManaging the Test Activities\nTest Planning\nRisk Management\nTest Monitoring, Test Control and\nTest Completion\nConfiguration Management\nDefect Management\n\n\nTest Tools\nTool Support for Testing\nBenefits and Risks of Test Automation\n\n\nThis practice exam is an invaluable tool for both self-study and classroom training. It can be used by individuals preparing for the CTFL exam independently or by trainers to supplement their teaching materials. The comprehensive coverage, realistic exam simulation, and detailed explanations make it an essential resource for anyone aiming to achieve the ISTQB Certified Tester Foundation Level (CTFL) v4.0 certification.\n\n\nIn summary, the ISTQB Certified Tester Foundation Level (CTFL) v4.0 Certification Practice Exam is a must-have resource for anyone preparing for the CTFL exam. With its realistic format, comprehensive coverage of the syllabus, and detailed explanations, this practice exam will boost your confidence and ensure that you are well-prepared to pass the CTFL exam with flying colors.\n\n\nLegal Notice: This material is not accredited by the ISTQB.",
      "target_audience": [
        "Anyone studying for the ISTQB Certified Tester Foundation Level (CTFL) Certification who wants to feel confident about being prepared for the exam.",
        "Prepare for the ISTQB Certified Tester Foundation Level (CTFL) Exam.",
        "Students preparing for the ISTQB Certified Tester Foundation Level (CTFL) exam who want to pass with confidence.",
        "Anyone who is keen to take their career and salary to the next level with an ISTQB Certified Tester Foundation Level (CTFL) certification",
        "Students who want to test their skills in exam simulation, assessing their ISTQB Certified Tester Foundation Level (CTFL) exam."
      ]
    },
    {
      "title": "Free POSTMAN and SOAP UI Web Services Fundamentals",
      "url": "https://www.udemy.com/course/free-postman-and-soap-ui-web-services-fundamentals/",
      "bio": "You will acquire absolute confidence with POSTMAN and SOAP UI Web Services",
      "objectives": [],
      "course_content": {
        "Introduction to Web Services with POSTMAN and SOAP UI course": [
          "Introduction",
          "Web Services Fundamentals course overview"
        ],
        "Web Services Fundamentals Tutorial": [
          "Web Services Fundamentals"
        ],
        "POSTMAN for Application Programming Interface": [
          "Functional API testing with POSTMAN"
        ],
        "Functional testing of publicly available web services with SOAP UI": [
          "SOAP UI for testing public web services"
        ]
      },
      "requirements": [
        "No experience is necessary - you will practically learn everything you need in this course",
        "All you need is your positive attitude, willingness to learn and some time for self-improvement"
      ],
      "description": "These present times, working in the IT (software) industry, the basic Web Services fundamentals understanding with applied knowledge is required  and became practically mandatory.\n\n\nThere are two important parts of Web Services: public (SOAP protocol) and REST (knows as RESTfull) for testing API's (Application Programming Interface).\n\n\nRESTfull API Web Services are tested using very popular open-source (free) tool POSTMAN.\nOrganization's publicly open available Web Services are tested using very popular open-source (free) tool SOAP UI.\n\n\nWeb Services knowledge and practical application, is recommended to IT full-stack Developers, Quality Assurance Analysts, Quality Assurance Engineers, User Acceptance, general Quality Management, Project Managers, Business Analysts and interested project stakeholders.\n\n\nAlso these days, Web Services are required for any start-up beginner to understand functional testing in depth in order to continue with career.\n\n\nWhile working in IT software industry in Quality Assurance or Acceptance Engineering roles, it will be only matter of time, when you will be assigned to prime and manage a variety of different projects, where practical Web Services will be a MUST.\n\n\nAt last, Web Services apply to both functional and regression testing activities.\n\n\nOriginally, this course is a part of bigger large scale one, and is created for any student beginner level having no experience, who desires to acquire professional programming knowledge.\nAll my other free and commercial courses under my Instructor profile.\nSuch courses are specifically designed for any student level from \"no experience\" to \"experienced\", anyone who desires to establish well-weighted-all-round 360* practical professional applicable",
      "target_audience": [
        "Any person who wants to understand and be ready for Web Services with POSTMAN and SOAP UI testing activities",
        "Already employed professionals within IT Industry, when time limit is essential, to implement Web Services for functional testing"
      ]
    },
    {
      "title": "Software Testing - Freelance, Crowd-sourced and Bug Bounties",
      "url": "https://www.udemy.com/course/software-testing-freelance-crowdsourced-and-bug-bounties/",
      "bio": "18 amazing work-from-home job Ideas doing software testing",
      "objectives": [
        "Learn 18 opportunities for freelance, crowd sourced and bug bounty software testing",
        "Be able to decide on which freelance opportunity is suitable for you.",
        "Start your journey in freelance software testing and earn extra side income.",
        "Compare and contrast the different online freelancing opportunities.",
        "Generate income by working from home"
      ],
      "course_content": {
        "STARTING": [
          "Introduction",
          "What's in this Course?",
          "Your Instructor",
          "Evolution of Software Testing",
          "Who is this for?",
          "How does it Work?"
        ],
        "18 FREELANCE, CROWD-SOURCED, BUG BOUNTY OPPORTUNITIES": [
          "Opportunity #1",
          "Opportunity #2",
          "Opportunity #3",
          "Opportunity #4",
          "Opportunity #5",
          "Opportunity #6",
          "Opportunity #7",
          "Opportunity #8",
          "Opportunity #9",
          "Opportunity #10",
          "Opportunity #11",
          "Opportunity #12",
          "Opportunity #13",
          "Opportunity #14",
          "Opportunity #15",
          "Opportunity #16",
          "Opportunity #17",
          "Opportunity #18"
        ],
        "CLOSING": [
          "Which one to sign up for?",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic software testing only.",
        "Security testing and security vulnerability testing, advantageous."
      ],
      "description": "Students' review comments:\n\"Well researched and concise. Great information for beginners level to advance level testers.\"\n\"It has opened my eyes to the opportunities offered on-line for alternative employment - gigs.\"\n\n\nCourse Description:\nIn this software testing course, get introduced to 18 amazing platforms that support freelance, crowd-sourced and bug bounty software testing, where you can work from home. Learn which ones are suitable for you. Start earning extra income on the side, or even grow this to be a full time business.\nThis course reveals 18 amazing work from home job ideas for software testers. Each of the 18 ideas, is in individual lectures, where I navigate around the platform to show you important features and explain how to register, how to get the projects, how much they pay and how to get paid. Will also end each lecture with a summary. Not to be missed is the guidance on which platform to sign up for, and the very special bonus lecture.\n\nThis course is suitable for anyone wanting to earn extra income from software testing freelance work, including people in-between jobs, stay-at-home parents and computer software enthusiasts, and those wanting to start a successful entrepreneurial journey by freelancing.\nThe contents of this course is accurate at time of publishing. Do refer to the individual platforms for more up to date information.",
      "target_audience": [
        "Software developers, software testers, computer software enthusiasts.",
        "Those in-between jobs, stay-at-home parents, freelancers,",
        "Those wanting to freelance in software testing.",
        "Those considering freelancing as a business or new income stream.",
        "Those wanting to make money from home."
      ]
    },
    {
      "title": "Hands-on technical aspects of software testing for beginners",
      "url": "https://www.udemy.com/course/software-testing-from-a-practical-perspective/",
      "bio": "Dive into the Ins & Outs of software testing: Test Analysis, Test Design & Test Execution with Jira XRay & Confluence",
      "objectives": [
        "Perform & manage complete test activities from analysis to test execution & reporting mock projects with Jira X-Ray most popular defect & test management tool.",
        "Structured approach to requirement traceability, test analysis, test design, test data prep, test execution & test reporting with or without test tools.",
        "Extract functional & non-functional aspects from requirements or use cases and set preconditions to prepare for the software test life cycle (STLC).",
        "You will be able to perform Test Analyst, Test Designer, Test Executor roles and gain the Know-how to find bugs early before the commencement of the test cycle.",
        "Perform X-Ray complete test cycle in Jira Agile mock project environment from story to test set, test plan, test execution to defects reporting.",
        "Create and manage Jira Epics, Stories, Tasks & confluence in a mock Agile Scrum project environment.",
        "Manage Jira Agile projects from creation to Scrum Backlog building & prioritizing. (Bonus section: XRAY new features)",
        "Create search filters & reuse them to create project Scrum Boards. Create Jira release versions & components to link to tests & to report.",
        "Use Confluence as a collaboration tool to create project space, How to Article, Know-How pages and project requirements documentation.",
        "Create Jira project Dashboard and Generate X-Ray test overage, traceability and other reports. Compare Selenium vs Katalon plug-ins.",
        "Be able to test any software, web application, system or mobile devices and generate revenue from a software testing career or remote work.",
        "You will get software testing career development & support to hit the ground running as a Software Test Professional, the most demanding job in 2019.",
        "Install & Configure MSSQL server 2017 & MSSQL Studio 2018. Familiarize yourself with RDBM's D . 3) Retrieve data from tables by writing simple TSQL queries.",
        "The Bonus: Xray new features - Jira & Bitbucket integration - Web browser test automation and unit testing demos using Java & Selenium.",
        "Software Test Automation Frameworks - Newly added",
        "August 2023 update: Overview - Test Management Phases",
        "August 2023 update: Software environments, DevOps and CI/CD",
        "August 2023 update: Test Data Management and Test Data Generation",
        "September 2023 update: Data Science & Data Analytics tools ( Anaconda, Jupyter Notebook, Neural Network and Deep learning packages)",
        "Manipulating data with numpy and pandas libraries.",
        "Case Study: Real-World Integration & Verification Strategies for Industrial Applications"
      ],
      "course_content": {
        "What Does The Course Cover?": [
          "Welcome to the course",
          "The course landscape",
          "Issue: Inconsistent audio volume"
        ],
        "Real workplace scenarios": [
          "Scenario 1: Your first day on the job",
          "Scenario 2: Meet your test manager",
          "Soft-Skills"
        ],
        "Overall Test Management Process": [
          "Know Your Organization",
          "Functional & Non-Functional Requirement",
          "The Software Test Life Cycle (STLC) & Who Does What?",
          "Software Testing & Why is it necessary?",
          "Intro to Requirements & Test Cases",
          "How to Analyze Requirements and Define Test Cases",
          "Challenge #1: Traceability - Create a Test Case Template",
          "Create a Test Case for the ATM Withdraw Transaction",
          "Create a test data and data set",
          "Linking Test Cases to Requirements and Defects",
          "Put it All Together - Manual Test Case Execution",
          "Challenge #2 Compile End of Test Report",
          "The software Testing department at the start-up firm",
          "Recap - Test Management Phases"
        ],
        "Using Jira, X-Ray & Confluence": [
          "What is XRAY?",
          "How Jira, X-Ray & Confluence support Testing",
          "Introduction to JQL",
          "Udemy User Story to test.",
          "Jira Test Steps"
        ],
        "Implementing & leading Jira Agile projects": [
          "Changing the SD Framework from Waterfall to Agile",
          "Why Agile?",
          "Implementing a Jira Agile project",
          "Start Build Project Backlog",
          "Use Scrum backlog to priotorize issues",
          "Create a filter & Reuse to Create Scrum Board",
          "Create Versions and Components",
          "Create a project Dashboard",
          "Use Confulence as a collaboration tool",
          "Generate X-Ray Test Reports",
          "Create a Jira Project",
          "Create and manage your Jira Agile project",
          "Development Frameworks",
          "Jira Agile terminology"
        ],
        "Other Software Testing Jobs": [
          "Other Software Testing jobs in demand",
          "Useful software tools to know",
          "Sotware Testing Abbreviations."
        ],
        "So you want to be a Software Tester?": [
          "Self-Education & Certification",
          "Job Hunt & CV Update",
          "Interview Questions & Screening",
          "How to start as a software tester in the UK",
          "What would be your next salary",
          "Interview Part I: BasicTest",
          "Interview Part II: Technical Test"
        ],
        "The Future of Jobs in an AI World": [
          "How artificial intelligence is transforming the job market"
        ],
        "Challenge No 3: Manual or Automated testing": [
          "Challenge Introduction",
          "Selenium vs Katalon Demo",
          "Manual vs Automated Conclusions",
          "Selenium Web Browsers Testing - Demo",
          "Submit Automated test tool proposal"
        ],
        "Software Test Automation Frameworks": [
          "Introduction",
          "Type of Test Automation frameworks",
          "My Answer & my approach",
          "What, Why and How do we automate the test process?",
          "Brief introduction to BDD framework"
        ]
      },
      "requirements": [
        "A computer with internet connection is required."
      ],
      "description": "If you are a beginner or a non-software tester, then you have made an excellent choice in choosing this course.\nThis course will walk you through real-life workplace simulated scenarios, which have been driven by my real-life workplace experiences.\nSimulated scenarios, mock projects, personae, challenges & quizzes used in this course will drift you away, form the traditional learning methods, to place your learning engagement at the highest.\nThis course has been specifically designed for beginners and non-testers who seek to become software test professionals.\nKey features of the course:\nIntroduce software testing to beginners and non-testers\nPersonal skills & career development\nPractical aspects of software testing at workplace\nPractical learning of software testing by doing\nManual approach to build principles of software testing\nImplement software testing using popular tools: Jira, X-Ray & Confluence\nGain familiarity with technical testing: (Relational databases) - (Brand new section)\nGain familiarity with test automation frameworks - (Brand new section)\n\n\nThis course is presented in 11 sections:\nWhat does the course cover - The course Landscape\nReal Workplace Scenarios\nOverall Test Management Process\nUsing Jira, X-Ray & Confluence\nImplementing & leading Jira Agile projects\nOther Software testing jobs\nSo you want to be a Software Tester?\nChallenge: Manual vs Automated testing\nRelational database testing - (Brand new section - In progress)\nThe Extras: Section contains the latest features, functionality and demos\nBonus: Recommendation: ISTQB Training, Certification Exams & (XRAY new features update)\nBy the end of this course you will be able to perform the following software testing roles:\nSoftware Test Analyst\nSoftware Test Designer\nSoftware Test Executor\nWhat will you lean:\nIdentify soft and hard skills needed to be a Software Test Professional\nMake decisions to develop missing skills needed to do the job\nLearn how to monitor your progress\nGain insight into software testing market demand\nLearn how to employ your skills at workplace\nGain familiarity with typical IT organization structure and departments\nGain familiarity with people roles and responsibilities at workplace\nAppreciate how important is to be proactive and a team player\nCope and adapt with awkward situations at workplace\nTurn awkward situations at workplace to your advantage\nBe determined, proactive and use your own initiative all the way through\nDevelop and sharpen your skills to cope with unforeseen circumstances at workplace\nLearn how to multi-task to cope with unusual situations\nObserve minor details around you and at workplace\nBe proactive to develop own knowledge, capabilities and self-motivation\nGain insight into other software testing jobs\nFamiliarize yourself with other software tools and applications\nGain insight into how to get software testing jobs\nHow to start as a software tester in the UK\nHow to start your own LTD or Umbrella company in the UK\nHow to prepare yourself for job interview questions\nSoftware requirements: Functional & Non-Functional:\nLearn the difference between functional & non-Functional software requirement specifications\nAnalyze software requirement specifications\nExtract functional requirements\nLearn that software requirement can be modeled as Use Cases\nGain familiarity with Unified Modelling Language\nTest Phases, STLC, Test Case Design and Test Data:\nThe important phases of Software Test Life Cycle\nSoftware Test Life Cycle phases, test types and what each phase involves\nHow test is organized within the overall project plan\nHow to organize your test efforts\nCreate, set preconditions and prepare test data for test cases\nLink test cases to requirements\nUse structured test design approach to find bugs early\nKnow the success of software product relies on its quality\nLearn why software testing considered necessary to the quality\nHow to link user events, actions or flows to preconditions\nThe difference between dummy and real client data\nHow test data can uniquely identify a future defect\nThe difference between valid and invalid inputs\nHow to define and create test case template\nThe minimum data columns required for a test template\nHow to come up with a new test template\nHow a test template can measure software traceability & test coverage\nHow test template can aid test reporting\nHow to differentiate between defects and correct behavior\nHow to write positive test case scenarios\nHow to write negative test case scenarios\nHow to challenge application or system under test\nHow to raise defects during test cycles\nManual Test Case Execution, Manual vs Automated testing:\nHow to manually execute test steps\nHow to create a report template using Excel or Word applications\nHow to compile end of test report\nCompare Manual vs Automated testing plug-ins & tools\nJira, X-Ray & Confluence:\n(NB: This tool is closely related to the course and you will need to sign-up)\nCreate and Delete projects\nCreate user stories\nCreate tests & link to user stories\nCreate project releases versions & components\nLink tests to software versions & components\nEdit and change existing components\nCreate or import manual test steps from CSV file format\nCreate test preconditions\nThe difference between epic, story and tasks\nCreate issues, bugs, tasks and epics\nConfluence collaboration tool basics\nCreate How-to articles confluence pages\nCreate Confluence project workspace\nExecute Jira tests\nImplement Agile projects\nEdit and view issue details\nCreate and save filters\nCreate scrum boards\nCreate project dashboards\nUse default project board\nUse gadgets to customize project dashboard\nEdit filters and share with project team or group\nMake filter columns visible or invisible\nBuild project backlog\nPrioritize Scrum backlog issues\nIdentify sprint workload activities\nUse active sprints to organize & monitor issues\nEstimate story efforts in hours, days or weeks\nReport on current sprint status\nGenerate X-Ray test coverage, traceability & other reports\nExport X-Ray reports to CSV file format\nExport Test Cases to CSV file format\nSoftware Development frameworks: Agile & Waterfall:\nThe difference between Agile and Waterfall development frameworks\nThe quality attributes of Agile framework\nFamiliarize yourself with rapid development, continuous release integration & delivery\nGain familiarity with software testing in Agile environment\nOptional - Data Science & Data Analytics tools (Install Anaconda, Jupyter Notebook, Neural Network and Deep learning packages)\nNew Lecture (Work in Progress) Dive into System Integration, Verification, and Testing & Test Tools\nThis course has Assignments, Challenges, 2 Practice Tests and Quizzes\nWhat do you get when you buy this course?\nLifetime access to the course video lectures downloads and updates\nFull support from the instructor all aspects of software testing & testing career\nPlease note: 30-day money back guarantee, you've nothing to lose.\nEnroll now and start learning, your future software testing career depends on what you do today.",
      "target_audience": [
        "This course is designed for non-testers, beginners or anyone who is interested to start a new career in the software testing field to become a software tester.",
        "No IT background is necessary."
      ]
    },
    {
      "title": "Selenium Automation with Java",
      "url": "https://www.udemy.com/course/selenium-automation-with-java/",
      "bio": "Testing with Java",
      "objectives": [
        "Build Automaiton Framework using Java/Selenium"
      ],
      "course_content": {
        "Selenium Automation with Java": [
          "Java Foundation",
          "Lecture 2",
          "Lecture 3",
          "Lecture 4",
          "Lecture 5",
          "Lecture 6",
          "Lecture 7",
          "Lecture 8",
          "Lecture 9",
          "Lecture 10"
        ],
        "Java Intermediate": [
          "Lecture 1",
          "Lecture 2",
          "Lecture 3",
          "Lecture 4"
        ],
        "Framework with Java": [
          "Lecture 1",
          "Lecture 2",
          "Lecture 3.1",
          "Lecture 3.2",
          "Lecture 4",
          "Lecture 5",
          "Lecture 6",
          "Lecture 7",
          "Lecture 8",
          "Lecture 9",
          "Lecture 10",
          "Lecture 11",
          "Lecture 12"
        ],
        "Framework with TestNG": [
          "Lecture 1",
          "Lecture 2",
          "Lecture 3",
          "Lecture 4",
          "Lecture 5",
          "Lecture 6",
          "Lecture 7",
          "Lecture 8",
          "Lecture 9",
          "Lecture 10",
          "Lecture 11",
          "Lecture 12",
          "Lecture 13",
          "Lecture 14",
          "Lecture 15"
        ]
      },
      "requirements": [
        "This course is for those who wanted to start a carrier in testing and want to understand how automation works in testing world.",
        "My course doesn't have any prerequisite as I will start teaching from scrath - installing and writing basic code through to creating frameworks from scratch",
        "This course is suitable for all levels from beginners to advanced level manual/automation testers"
      ],
      "description": "This course can be taken by testers from all levels. The way I have defined the course is by teaching basics of Java and then through to intermediate level of Java programming. I have also attached all the files so that you can reference to my code if you are stuck at some point.\nOnce you are familiar with Java coding, then I started by teaching basics of selenium and then moving to a framework where we pick a random site and then start writing some manual scenarios(which usually a manual tester does) followed by automating the same scenario using Java,  recording results back in an excel sheet and generating reports of test results and mailing them to any audience.\nMy frameworks also build on different approaches -\n1. Using Test NG with Data Driven from excel\n2. Using Java with Hybrid(Keyword + Data Driven) from excel",
      "target_audience": [
        "Anyone interested in entering automation testing world or gaining understanding on how automation works and takes over from manual testing"
      ]
    },
    {
      "title": "Software Test Automation and Quality Metrics",
      "url": "https://www.udemy.com/course/software-test-automation-and-quality-metrics-pna/",
      "bio": "Learn Test Automation",
      "objectives": [
        "Students will learn Software Test Automation and Skills needed for Automation.",
        "Students will learn various quality metrics.",
        "Students will learn Quality Function Deployment and Cost of Quality.",
        "Students will learn Taguchi Quality Loss Function, Six-Sigma, TQM."
      ],
      "course_content": {},
      "requirements": [
        "Software Testing Basics"
      ],
      "description": "To learn this course, learners must know the basics of software testing and the levels & techniques of software testing. In this course, learners will learn the Six-Sigma model of Testing Software System Security after that Total Quality Management which is Complexity Metrics & Models will be studied in this course. Learners will also learn the Quality Management Metrics and Defect Removal Effectiveness. After that, the learner will learn the Failure Mode and Effects Analysis (FMEA) in software testing. Software Test Automation, Skills Needed for Automation will be an important part of software testing will be studied in this course later on. Then learners will learn the Quality Function Deployment, Taguchi Quality Loss Function, Cost of Quality after software testing will be studied in this course. To summarize this course, learners will learn Software Test Automation and Skills needed for Automation, various quality metrics, Quality Function Deployment and Cost of Quality, Taguchi Quality Loss Function, Six-Sigma, Total Quality Management in this course. After successful completion of this course, learners will be able to explore the test automation concepts, tools, and estimation of cost, schedule based on standard metrics. This course is useful for the software testers as well as the quality team.",
      "target_audience": [
        "Passionate Software Testers"
      ]
    },
    {
      "title": "Quarkus - Simple REST API and Unit Tests with JUnit 5",
      "url": "https://www.udemy.com/course/quarkus-rest-api-and-unit-tests/",
      "bio": "Java and Quarkus Framework with JUnit 5",
      "objectives": [
        "Learn about how to create a simple REST API with Java and Quarkus Framework",
        "How to use Quarkus with JUnit 5 to test the endpoints REST and Service layer",
        "Learn about using @TestTransaction annotation in tests with databases",
        "Fundamentals and importance of Tests in Software Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Software Requirements for this Course",
          "Introduction and init REST API app"
        ],
        "Testing the REST endpoints with Postman": [
          "Finish and Testing REST Endpoints"
        ],
        "Testing Controller Layer with Quarkus and JUnit 5": [
          "Testing First Controller Class",
          "Testing Second Controller Class"
        ],
        "Testing Service Layer and DB Transaction": [
          "Testing First Service Class",
          "Testing Second Service Class with Database Transaction",
          "Next Steps with Quarkus"
        ]
      },
      "requirements": [
        "Basic Java Knowledge, basic API knowledge"
      ],
      "description": "Enhance your knowledge of the Java Ecosystem - Discover the Quarku Framework Features\n\n\nA quick and objective course, straight to the point!\n\n\nIn this course you will learn in an objective and practical way how to create a simple REST API that uses GET and POST methods and you will also learn how to create Unit Tests for your Controller and Service layer classes.\n\nLet's use as an example the creation of a Company Entity with some sample data, for this we will make use of JPA/Hibernate annotations that are inserted in the context of the Quarkus Framework.\nIn the following steps, we will separate the REST API into controller and service layers, respecting the MVC model (Model View Controller) and finally, we will use Postman to make requests to this REST API.\n\nThen, we move on to the unit testing phase using the updated version of JUnit, the most widely used Testing Framework in the Java world.\nIn this phase we will create unit tests that validate the paths of our endpoints and the responses received.\n\nFinally, let's create unit tests for our Service layer. Here we test data processing and business rules and also create a test that simulates data persistence in the database.\n\nTopics:\n\n\nUnderstanding the importance of Unit Testing;\n\n\nCreating a simple REST API with Java + Quarkus Framework;\n\n\nTesting the API with Postman;\n\n\nCreating unit tests for REST API endpoints;\n\n\nCreating unit tests for Service classes;\n\n\nCreating tests that validate data in the database.",
      "target_audience": [
        "Java Developers of all levels"
      ]
    },
    {
      "title": "Automation Testing Preparation Practice Tests",
      "url": "https://www.udemy.com/course/automation-testing-preparation-practice-tests/",
      "bio": "Best Quality Practice Tests of Automation Testing",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Automation testing is a software testing technique that utilizes automated tools and scripts to perform tests on software applications, reducing the need for human intervention. This method ensures that tests are executed faster, with higher accuracy and consistency, compared to manual testing. Automated tests can be repeated multiple times without variation, making them ideal for regression testing, where repeated execution of test cases is required to ensure that new changes haven't introduced any bugs. Additionally, automation testing allows for testing at scale, enabling the execution of thousands of complex test cases across various environments and configurations, which would be impractical to do manually.\nOne of the primary benefits of automation testing is its ability to enhance the efficiency and coverage of the testing process. By automating repetitive and time-consuming tasks, testers can focus on more complex test scenarios and exploratory testing, which often require human intuition and creativity. Automated testing tools can perform functional, performance, and load testing, among other types, providing comprehensive feedback on the application’s behavior under different conditions. This thorough approach helps in identifying defects early in the development cycle, reducing the cost and effort required to fix them later.\nMoreover, automation testing contributes significantly to continuous integration and continuous delivery (CI/CD) practices. In CI/CD pipelines, automated tests are integrated into the build process, ensuring that code changes are validated continuously as they are made. This practice leads to faster release cycles, higher quality software, and greater reliability. Automated tests provide quick feedback to developers, allowing them to address issues promptly and maintain the stability of the codebase. As a result, automation testing not only improves the quality and performance of software products but also enhances the overall development workflow, fostering a culture of rapid, reliable, and repeatable software delivery.",
      "target_audience": [
        "Want Practice Tests of Automation Testing"
      ]
    },
    {
      "title": "Testes end-to-end com Cypress",
      "url": "https://www.udemy.com/course/testes-end-to-end-com-cypress/",
      "bio": "Aprenda como criar testes e2e e executá-los em um workflow de integração contínua",
      "objectives": [
        "Como analisar estaticamente o código de teste para garantir o uso de convenções definidas pela comunidade",
        "Como criar testes e2e para diferentes funcionalidades de uma aplicação web, tais como Sign up, Login, CRUD, etc.",
        "Como testar recebimento de e-mails",
        "Como testar upload de arquivos",
        "Como interagir com componentes renderizados dentro de iFrames",
        "Como interceptar requisições para tornar os testes mais robustos",
        "Como proteger dados sensíveis",
        "Como testar a responsividade da aplicação simulando seu uso em um dispositivo móvel",
        "Como armazenar a sessão do usuário no cache para otimizar o processo de autenticação",
        "Como criar e documentar comandos customizados",
        "Como configurar um workflow de integração contínua com múltiplas fases e paralelização",
        "Como integrar os testes com o Cypress Cloud",
        "Como categorizar os testes e executá-los por suas tags",
        "Como documentar um projeto de testes e2e"
      ],
      "course_content": {
        "Boas-vindas | Estrutura do curso | Pré-requisitos | Conhecendo a App | Setup": [
          "Boas-vindas!",
          "Estrutura do curso",
          "Pré-requisitos",
          "Conhecendo a aplicação em teste",
          "Setup do projeto"
        ],
        "Análise estática de código com o ESLint": [
          "Análise estática de código",
          "Exercício - ESLint",
          "Exercício extra 1 - eslint-plugin-cypress",
          "Exercícios extra 2 e 3 - npm scripts e VSCode ESLint Plugin"
        ],
        "Signup": [
          "Testando a funcionalidade de sign up",
          "Exercício - Testando o fluxo de Sign Up",
          "Exercício extra - Movendo a lógica do Sign up para um comando customizado"
        ],
        "Login": [
          "Testando a funcionalidade de Login",
          "Exercício - Testando o fluxo de Login",
          "Exercício extra 1 - protegendo dados sensíveis ainda mais",
          "Exercício extra 2 - Movendo a lógica de login para um comando customizado",
          "Exercício extra 3 - cy.session"
        ],
        "CRUD": [
          "Testando a funcionalidade de CRUD",
          "Exercício - Testando o CRUD",
          "Exercício extra 1 - selectFile",
          "Exercício extra 2 - movendo a lógica do CRUD para comandos customizados"
        ],
        "iFrame": [
          "Testando um formulário de cartão de crédito renderizado dentro de um iFrame",
          "Exercício - Testando o preenchimento do formulário de cartão de crédito"
        ],
        "Logout": [
          "Testando a funcionalidade de Logout",
          "Exercício - Testando a funcionalidade de Logout",
          "Exercício extra - Testando no viewport de um dispositivo móvel"
        ],
        "Integração Contínua": [
          "Integração contínua",
          "Exercício - GitHub Actions",
          "Exercício extra 1 - Cypress Cloud",
          "Exercício extra 2 - @cypress/grep",
          "Exercício extra 3 - Simulando falhas nas fases de lint e testes"
        ],
        "Documentação": [
          "Documentando o projeto",
          "Exercício - Documentando o projeto e os comandos customizados"
        ],
        "Conteúdos Talking About Testing": [
          "Conteúdos de Cypress da Talking About Testing"
        ]
      },
      "requirements": [
        "git versão 2.34.1 ou mais recente",
        "Nodejs versão v18.15.0 ou mais recente",
        "npm versão 9.5.0 ou mais recente",
        "Visual Studio Code (recomendado) versão 1.78.0 ou mais recente, ou qualquer outra IDE de sua preferência",
        "Conhecimentos básicos de JavaScript",
        "Conhecimentos básicos de seletores CSS",
        "Conhecimentos prévios de automação de testes com Cypress"
      ],
      "description": "Se você já conhece o básico de Cypress, dê o próximo passo para aprender como testar aplicações web modernas de ponta-a-ponta, garantindo a cobertura de cenários de \"caminho feliz\" para todas as funcionalidades, e tudo isso rodando em um workflow de integração contínua otimizado para que você tenha feedback o mais rápido possível a cada mudança.\nDurante o curso você irá aprender:\nComo fazer o setup de um projeto Cypress\nComo analisar estaticamente o código de teste para garantir o uso de convenções definidas pela comunidade\nComo criar testes e2e para diferentes funcionalidades de uma aplicação web, tais como Sign up, Login, CRUD, etc.\nComo testar recebimento de e-mails\nComo testar upload de arquivos\nComo interagir com componentes renderizados dentro de iFrames\nComo interceptar requisições para tornar os testes mais robustos\nComo proteger dados sensíveis\nComo testar a responsividade da aplicação simulando seu uso em um dispositivo móvel\nComo armazenar a sessão do usuário no cache para otimizar o processo de autenticação\nComo criar e documentar comandos customizados\nComo configurar um workflow de integração contínua com múltiplas fases e paralelização\nComo integrar os testes com o Cypress Cloud\nComo categorizar os testes e executá-los por suas tags\nComo documentar um projeto de testes e2e\nAo completar o curso de testes end-to-end com Cypress, você poderá colocar todos os conhecimentos adquiridos em prática em projetos reais e em maior escala, para o desenvolvimento de software de forma sustentável, onde os testes serão robustos, legíveis e de fácil manutenção, trazendo confiança de que quando estão passando, tudo está ok e a nova versão pode ser liberada em produção.\nJunto-se a Escola Talking About Testing e se destaque em sua carreira!",
      "target_audience": [
        "Alunos dos cursos básico, intermediário, avançado, boas práticas e testes de regressão visual com Cypress e Percy da Escola TAT",
        "Testadores e QAs que querem dar um próximo passo em sua carreira com automação de testes",
        "Profissionais com experiência em JavaScript que querem aprender um framework de testes automatizados moderno e cada vez mais requisitado no mercado",
        "Desenvolvedores(as) de aplicações web sem QAs dedicados(as) em seus times",
        "Estudantes de tecnologia da informação, sistemas de informação e ciência da computação"
      ]
    },
    {
      "title": "Mastering Automation Testing with Selenium and C#",
      "url": "https://www.udemy.com/course/mastering-automation-testing-with-selenium-and-c/",
      "bio": "Unlock the power of automation testing with Selenium and C# in this course.",
      "objectives": [
        "Introduction to automation testing using Selenium and CSharp. Comparison between manual and automation testing.",
        "Basics of CSharp programming language. Understanding Selenium WebDriver and its introduction.",
        "Exploring different locators in Selenium. Practical methods for handling various elements like radio buttons, checkboxes, dropdowns, and date pickers.",
        "Dealing with popups and windows in Selenium. Hands-on experience with IWebElement in Selenium.",
        "Comprehensive coverage of essential automation testing concepts and techniques."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course"
        ],
        "Getting Started": [
          "Introduction to Automation Testing",
          "Manual Vs Automation Testing",
          "CSharp Basics"
        ],
        "Selenium Webdriver Basics": [
          "Introduction to Selenium",
          "Locators in Selenium",
          "Locators in Selenium Continued",
          "IWebElement in Selenium - Basic Methods",
          "Handling Different Elements - Radio and Checkbox",
          "Handling Different Elements - Dropdown",
          "Handling Different Elements - DatePicker",
          "Handling Popups Windows",
          "Handling Popups Windows Continued"
        ]
      },
      "requirements": [
        "Basic understanding of software testing concepts. Familiarity with manual testing processes. Fundamental knowledge of programming concepts, especially in CSharp. A basic understanding of web technologies and how web applications function.",
        "Prerequisites for this course include a basic understanding of software testing concepts, familiarity with manual testing processes, and a foundational knowledge of programming, particularly in CSharp. Additionally, participants should be acquainted with fundamental web development concepts and have a basic understanding of HTML and CSS. Prior exposure to testing tools or frameworks could be beneficial but is not mandatory."
      ],
      "description": "Introduction:\nUncover the core objectives, key topics, and the significance of the material covered. Get ready to embark on a journey through automation testing, starting with fundamental concepts and progressing to practical applications. By the end of this course, learners to take their newfound understanding of automation testing and apply it in real-world scenarios. This course equips you with the tools and knowledge necessary for effective automation testing, setting you on a path toward excellence in software testing.\nSection 1: Introduction\nIn Lecture 1, get a comprehensive introduction to the course, setting the stage for an exploration into automation testing. Understand the key concepts and objectives that will be covered, providing a roadmap for learners.\nSection 2: Getting Started\nLectures 2 and 3 delve into the fundamentals of automation testing. Understand the distinctions between manual and automation testing in Lecture 3, highlighting the advantages and disadvantages of each approach. In Lecture 4, dive into the basics of CSharp programming, a fundamental skill for automation testing.\nSection 3: Selenium Webdriver Basics\nIn Lectures 5-13, focus on Selenium, a powerful tool for web automation. Explore essential concepts like locators in Selenium, including a detailed exploration in Lectures 6 and 7. Learn about IWebElement in Selenium and its basic methods in Lecture 8. Lectures 9-12 provide practical insights into handling different elements such as radio buttons, checkboxes, dropdowns, date pickers, and pop-up windows, ensuring a thorough understanding of Selenium Webdriver basics.\nThis course offers a structured and practical approach to automation testing, catering to both beginners and experienced testers. From foundational concepts to hands-on Selenium usage, learners will gain the skills needed for efficient and effective software testing. The course's approach combines theoretical knowledge with hands-on practice, ensuring participants gain a holistic understanding of automation testing using Selenium and C#. With a well-structured curriculum, this course is ideal for individuals aiming to become proficient in automated testing and enhance their software testing capabilities. Master automation testing with Selenium and C# through this course covering essential concepts and practical techniques",
      "target_audience": [
        "Software testers and quality assurance professionals seeking to enhance their testing skills. Individuals interested in transitioning from manual to automation testing. Programmers and developers looking to integrate automation testing into their skill set. Anyone aiming to understand Selenium WebDriver and CSharp for web application testing.",
        "The target market for this course encompasses aspiring software testers, quality assurance professionals, and individuals seeking to enhance their skills in automation testing. It is tailored for those with a foundational understanding of testing concepts, some programming knowledge in CSharp, and a keen interest in transitioning from manual to automation testing. This course is suitable for beginners looking to embark on a career in automation testing, as well as experienced testers aiming to deepen their expertise in Selenium WebDriver and automation techniques."
      ]
    },
    {
      "title": "Getting Started With Software Testing Context and Basics",
      "url": "https://www.udemy.com/course/getting-started-with-software-testing-context-and-basics/",
      "bio": "Get the grip of the context and need of learning in software testing basics from some of worst technology failures.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Quiz"
        ],
        "Context": [
          "Context : What and Why?",
          "Quiz"
        ],
        "Some Worst Failures": [
          "Some Non-Software Failures",
          "Some Software Failures"
        ],
        "Critical Element To Prevent Failures": [
          "Critical Element To Prevent Failures and Context as driver"
        ],
        "Some Basics of Practical Software Testing": [
          "Some Basics of Practical Software Testing - Part-1",
          "Some Basics of Practical Software Testing - Part-2"
        ],
        "Who should know about Software Testing?": [
          "Who should know about Software Testing?"
        ],
        "Future Endeavors and Successes and moving forward": [
          "Future Endeavors and Successes and moving forward"
        ],
        "Additional Items": [
          "Software Testing Course (marketing of it)"
        ],
        "Sample Session of Software Testing Course": [
          "Session#1"
        ]
      },
      "requirements": [
        "Working knowledge or usage of computers"
      ],
      "description": "Think about some of worst failures like Titanic and Challenger. Think about software glitches that caused failures of Ariane 5, banking, air traffic, missiles etc. It is important to understand why it happened and how such things can impact us and cause havoc and immense loss and damage. How it can be prevented by us in future to achieve successful endeavors. Given this, build the context for us for further learning and innovation. As software is getting in each every walk of our life and all human endeavors, it becomes so critical that they do not fail and perform well. This course will help build the context for further learning in software testing. Based on this context and software testing basics, you can get started with another next course, \"Software Testing Course\", from me at Udemy.\nThis course is for around one and half hours and has 7 video lectures on software testing basics. You can complete this course in one go or take one lecture per day and can complete learning the software testing basics within a week. If you have any queries while you are covering different lectures, then, do feel free to write them to me through the 'questions' section and I will periodically answer back. Get started with the software testing basics today.\n</p>",
      "target_audience": [
        "All those interested in software testing"
      ]
    },
    {
      "title": "Software Testing Life Cycle",
      "url": "https://www.udemy.com/course/software-testing-life-cycle/",
      "bio": "Learn STLC Phases in Detail",
      "objectives": [
        "Software Testing Life Cycle Overview",
        "Software Testing Life Cycle Phases",
        "Test Plan Creation",
        "Test case and Bug Report Creation"
      ],
      "course_content": {
        "Software Testing Life Cycle": [
          "Software Testing Life Cycle Promo",
          "What is STLC ?",
          "STLC Phases"
        ],
        "Software Testing Life Cycle - Test Plan Phase": [
          "What is Test Plan?",
          "Test Plan Creation"
        ],
        "Software Testing Life Cycle - Test Design Techniques Phase": [
          "Test Design Techniques",
          "Types of Test Design Techniques",
          "Black Box Testing Techniques",
          "White Box Testing Techniques",
          "Experience Based Testing Techniques"
        ],
        "Software Testing Life Cycle - Test Case & Bug Report Creation Phase": [
          "What is Test Scenario",
          "What is Test Case ?",
          "How to Write Test Cases & Bug Report"
        ],
        "Software Testing Life Cycle - Summary": [
          "Software Testing Life Cycle - Test Analysis & Summary"
        ]
      },
      "requirements": [
        "No programming experience needed."
      ],
      "description": "STLC stands for Software Testing Life Cycle. The Software Testing Life Cycle (STLC) is a set of actions performed during the testing phase to ensure that the software quality is met. Software Testing Life Cycle includes verification and validation.\nVerification is the process confirming that -software meets its specification, done through inspections and walkthroughs.\nValidation is the process confirming that it meets the user’s requirements. It is the actual testing.\nThere are nine phases in Software Testing Life Cycle. There are\nProject Initiation\nSystem Study\nTest Plan Creation\nTest Case Design Techniques\nCreation and Execution of Test Case\nReporting Defects\nRegression Test\nAnalysis\nSummary Reports\nProject will be initiated by the Project Manager. The requirement of the projects will be discussed with the Team Members during the System study phase.\nTest Plan will be created by the Test Lead which explains the process needs to be followed during the Testing Phase\nA test plan is a systematic approach to testing a system that is software. The plan typically contains a detailed understanding of what the eventual testing workflow will be.\nA test case is a specific procedure of testing a particular requirement. It will include Identification of specific requirement tested, Test case success/failure criteria, Specific steps to execute test and Test Data.",
      "target_audience": [
        "Beginners who are interested in learning in Software Testing"
      ]
    },
    {
      "title": "Manual Testing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/manual-testing-interview-questions/",
      "bio": "Manual Testing Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Manual Testing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nEmbark on a comprehensive journey through the realms of manual testing with our meticulously crafted practice tests. Designed to simulate real-world interview scenarios, this course offers an in-depth exploration of the Software Development Life Cycle (SDLC) and Testing Methodologies, ensuring you’re well-versed in various models like Waterfall, Agile, V-Model, Spiral, Iterative, and Incremental.\nDive into the intricacies of Test Planning and Documentation, mastering the art of creating strategic test plans, designing detailed test cases, and maintaining traceability matrices. Our practice tests will guide you through the nuances of Test Execution and Reporting, enhancing your skills in defect reporting, test status updates, and mastering test metrics.\nOur functional testing section delves into essential techniques like Unit Testing, Integration Testing, System Testing, and more, while our non-functional testing segment covers critical areas such as Performance Testing and Security Testing.\n\n\nSection 1: Software Development Life Cycle (SDLC) and Testing Methodologies Unlock the secrets of successful software development with our comprehensive coverage of SDLC models. From the structured approach of the Waterfall Model to the flexibility of Agile Methodology, our practice tests encompass every nuance. Grasp the verification and validation processes in the V-Model, navigate through the risk-driven Spiral Model, and adapt to change with the Iterative and Incremental Models. Each model is accompanied by relevant interview questions, ensuring you’re well-prepared for any discussion.\n\n\nSection 2: Test Planning and Documentation Step into the world of strategic planning with our in-depth look at Test Strategy formulation and Test Plan development. Learn how to design impactful Test Cases and scenarios that ensure comprehensive coverage. Our practice tests will challenge you to create effective Test Estimations and maintain a robust Traceability Matrix, all while providing you with a plethora of interview questions that cover these critical documentation skills.\n\n\nSection 3: Test Execution and Reporting Experience the dynamics of test execution through our practice tests that cover everything from initial test runs to detailed Defect Reporting. Learn how to communicate effectively with Test Status Reporting, analyze results with Test Metrics, and summarize findings in a professional Test Summary Report. Our interview questions will test your ability to handle real-world scenarios, making you adept at managing the entire testing process.\n\n\nSection 4: Functional Testing Delve into the core of functional testing with our targeted practice tests on Unit Testing, where you’ll dissect individual components, and Integration Testing, where you’ll ensure seamless interaction between modules. Elevate your skills in System Testing and prepare for user sign-off with rigorous User Acceptance Testing (UAT) exercises. Our practice tests also cover quick checks like Smoke Testing and focused evaluations like Sanity Testing, complemented by interview questions designed to assess your practical knowledge.\n\n\nSection 5: Non-Functional Testing Broaden your testing expertise beyond functionality with our specialized section on non-functional testing. Tackle performance bottlenecks with our Performance Testing practice tests, manage load challenges with Load Testing, and push systems to their limits with Stress Testing exercises. Enhance user experience through Usability Testing, fortify security measures with our Security Testing scenarios, and ensure compatibility across platforms with our comprehensive interview questions.\n\n\nSection 6: Defect Management Master the art of defect management as we guide you through the entire Defect Life Cycle, from detection to resolution. Understand the critical differences between defect severity and priority, get hands-on experience with various Defect Tracking Tools, conduct thorough Root Cause Analysis, participate in strategic Defect Triage meetings, and define clear Defect Closure Criteria. Our practice tests are replete with interview questions that challenge your ability to manage defects effectively.\n\n\nBy enrolling in this course, you’re not just preparing for interviews; you’re setting yourself up for a successful career in manual testing. Each section is packed with carefully curated interview questions, ensuring that every aspect of manual testing is demystified.\nDon’t miss this opportunity to stand out from the crowd. Enroll now in our manual testing interview questions practice test course, where success is not just learned but achieved!",
      "target_audience": [
        "If you are new to manual testing and want to build a strong foundation, this course is perfect for you. It covers all the essential concepts and methodologies needed to start a successful career in manual testing.",
        "If you are an experienced manual tester looking to refresh your knowledge and prepare for interviews, this course will help you stay up-to-date with the latest testing practices and interview questions.",
        "QA professionals seeking to enhance their testing skills and ensure comprehensive software quality can benefit from this course. It provides detailed practice questions and explanations to deepen your understanding of manual testing.",
        "Developers and software engineers who want to gain insights into the testing process and improve their collaboration with QA teams will find this course valuable.",
        "Students and recent graduates aiming to enter the software testing field can use this course to prepare for job interviews and build their testing knowledge.",
        "Professionals from other fields looking to transition into software testing will find this course helpful in acquiring the necessary skills and knowledge for a successful career change."
      ]
    },
    {
      "title": "Dominando Postman em 10 passos",
      "url": "https://www.udemy.com/course/dominando-postman-em-10-passos/",
      "bio": "Teste serviços, monitore e crie documentações com Postman em 10 passos",
      "objectives": [
        "Criar testes para Api Restfull",
        "Criar documentação completa para api em node, jquery, php e etc",
        "Agendar execução de testes e monitorar os serviços da Api",
        "Entenderão como funciona o processamento em background de milhares de sites",
        "Como salvar e exportar os serviços",
        "Como configurar variáveis de ambiente no postman"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Grupo de Estudo",
          "Passo 1 - Montando nosso ambiente",
          "Passo 2 - Entendendo como funciona os processo em background dos sites e apps",
          "Passo 3 - Conhecendo como funciona uma Api Restfull em C#",
          "Passo 4 - Testando requisições GET, POST, PUT e DELETE",
          "Passo 5 - Organizando e configurando nossos Environments (Ambientes)",
          "Passo 6 - Trabalhando com APIS seguras",
          "Passo 7 - Criando testes unitários para as requisições",
          "Passo 8 - Rodando todos os testes de uma vez",
          "Passo 9 - Gerando nossa documentação",
          "Passo 10 - Exportando nossos serviços"
        ]
      },
      "requirements": [
        "Conhecer o básico de Apis Restfull",
        "Você deve ter conhecimento básico de programação, especialmente Javascript",
        "Você deve saber como acessar dados JSON usando o Javascript"
      ],
      "description": "Postman é uma ótima ferramenta para testar, monitorar e gerar documentações para APIs.\n\nSe você é novo com o Postman, este curso irá ajudá-lo a dominar esta ferramenta facilitando muito seu dia a dia na hora de testar suas APIs.\n\nEu dividi esse curso em 10 passos primordiais para que você tenha um entendimento adequado de como utilizar está poderosa ferramenta.",
      "target_audience": [
        "Desenvolvedores de software",
        "Testadores de software",
        "DevOps",
        "Qualquer pessoa que queira testar serviços, criar documentação e monitorar os serviços."
      ]
    }
  ]
}