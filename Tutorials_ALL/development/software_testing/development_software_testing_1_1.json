{
  "courses": [
    {
      "title": "Generative AI for QA:Selenium Automation Github Copilot 2025",
      "url": "https://www.udemy.com/course/github-copilot-selenium-automation-quality-analyst-beginner-expert/",
      "bio": "Generative AI for Testers - Master Frontend, API, Database Testing - Vibe Coding GenAI Tools: Amazon Q, GitHub Copilot",
      "objectives": [
        "Introduction to GitHub Copilot: Understand the basic features and functionalities of GitHub Copilot to provide real-time code suggestions.",
        "Basic and Advanced Web Component Automation: Covers automation of both basic and advanced web components using Selenium.",
        "API Testing: Efficiently automate API testing using GitHub Copilot, ensuring reliable and robust backend services.",
        "Performance Testing: Use Selenium to perform automated performance testing, including load and stress tests to evaluate application responsiveness.",
        "Accessibility Testing: Implement automated tests to ensure web applications meet accessibility standards.",
        "Cross-Browser Testing: Automate tests across multiple browsers to ensure consistent functionality and performance."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML, CSS, and JavaScript.",
        "Installation of a text editor or integrated development environment (IDE) such as Visual Studio Code."
      ],
      "description": "Master Selenium WebDriver, API Testing, Database Testing with Generative AI & GenAI tools: GitHub Copilot, Amazon Q, Vibe Coding. Transform your QA career with AI-powered test automation that boosts productivity by 10x and makes you a highly sought-after automation expert.\n\n\nThis comprehensive program integrates cutting-edge Generative AI, GenAI, and Vibe Coding throughout every lesson. You'll master revolutionary AI-assisted development techniques used by top tech companies.\n\n\nCourse Curriculum\nSection 1: Introduction & GitHub Copilot Fundamentals\nCourse agenda and learning roadmap\nIntroduction to modern AI-powered testing\nExploring key features of GitHub Copilot for QA professionals\nSetting up your AI-assisted testing environment\nSection 2: Environment Setup & IDE Configuration\nSigning up for GitHub Copilot (AI pair programming setup)\nSetup inside Visual Studio Code with Copilot integration\nOptional IntelliJ setup for advanced users\nConfiguring your AI-powered development workspace\nSection 3: Application Setup & Form Handling\nBuild a new application for \"The Internet Herokuapp\" testing\nLogin form validations with AI assistance\nForm automation using GitHub Copilot suggestions\nReal-world web application testing scenarios\nSection 4: Basic Selenium Interactions (AI-Enhanced)\nDropdown handling with intelligent element selection\nCheckbox automation using AI-generated test patterns\nMouse hover actions and advanced user interactions\nAlerts and popups management with Copilot assistance\nFrames and windows handling techniques\nData tables automation and validation\nSection 5: Data-Driven Testing with GenAI\nData-driven testing fundamentals with AI optimization\nJSON data handling for API and web testing\nCSV data integration for comprehensive test scenarios\nAI-powered test data generation and management\nSection 6: Validation & Debugging\nScreenshot automation and visual validation\nConsole logs analysis with AI-assisted debugging\nSmart error detection and resolution techniques\nAI-powered test maintenance and optimization\nSection 7: Advanced Selenium Interactions\nDrag and drop automation with precise control\nScroll bar interactions and page navigation\nDynamic loading and Ajax element handling\nComplex user interaction scenarios\nSection 8: File Operations\nFile upload automation with various file types\nFile download validation and verification\nDocument handling in automated testing workflows\nSection 9: Performance Testing Integration\nPerformance testing using Artillery framework\nLoad testing integration with Selenium automation\nPerformance validation and reporting\nSection 10: API Testing Mastery\nAPI testing using Axios Client for comprehensive backend validation\nRESTful API automation and testing strategies\nIntegration between UI and API testing\nSection 11: GitHub Copilot - Spring Boot Java Application (Optional)\nQuick start scaffolding a Java application using Copilot\nSorting, filtering, and pagination with AI assistance\nExcel export functionality using Copilot suggestions\nUnit testing with AI-generated test cases\nSwagger API documentation with GitHub Copilot\nCode simplification techniques using AI assistance\nSection 12: Database Testing with GitHub Copilot (Optional)\nSQLTools setup in Visual Studio for database management\nOracle Client/Driver installation and configuration\nDatabase connection establishment with AI guidance\nCreating products table with intelligent schema design\nSyntax error resolution using AI-powered debugging\nTest data generation with Mockaroo integration\nCSV data loading via SQL*Loader automation\nFunction creation and terminal error resolution\nSection 13: Amazon Q Integration\nAmazon Q installation on Visual Studio (Free Tier)\nBuilding chat applications using Amazon Q AI features\nAWS Services integration for enhanced testing capabilities\nTroubleshooting with AWS Resources using Amazon Q assistance\nSection 14: Advanced AI Techniques\nGitHub Copilot Context optimization for better code suggestions\nPrompt Engineering for QA-specific AI interactions\nBest practices for AI-assisted test automation\nPerfect For\nManual QA Testers - Transition to AI-powered automation\nSelenium Beginners - Start with modern AI-assisted approach\nIntermediate QA Engineers - Enhance productivity with GenAI tools\nSoftware Developers - Add AI-powered testing to your skillset\nQA Team Leads - Implement cutting-edge automation strategies\nCareer Changers - Enter the high-demand AI-powered QA field",
      "target_audience": [
        "Beginner QA Engineers: Individuals new to quality assurance and test automation who want to learn how to use Selenium and GitHub Copilot to automate web application testing.",
        "Intermediate QA Professionals: QAs with some experience in manual or automated testing looking to enhance their skills, efficiency, and knowledge of advanced web component automation, accessibility, performance testing, and cross-browser testing.",
        "Experienced QA Experts: Seasoned professionals seeking to boost their productivity and explore the integration of GitHub Copilot to streamline and enhance their existing automation processes.",
        "Software Developers: Developers who want to incorporate automated testing into their workflow to ensure their web applications are robust and error-free.",
        "Tech Enthusiasts: Individuals passionate about learning new technologies and tools to stay up-to-date with the latest advancements in software testing."
      ]
    },
    {
      "title": "Selenium Webdriver with Java & TestNG Testing Framework",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-testng-testing-framework/",
      "bio": "Automation Testing using Selenium & TestNG",
      "objectives": [
        "Students will learn Selenium with Java coding skills in writing best optimized code for Automating test-cases.",
        "Students will learn how to use TestNG framework for testing. All basic concepts related to TestNG are covered in this course.",
        "Students will be able to create testcases based on the project they work on.",
        "Students will learn core Java concepts required for Selenium. Wherever basic Java concepts are needed, they are explained in simple words.",
        "By the end of the course, Students will be able to develop an awesome Test Automation framework.",
        "Students can clear any Interview and can Lead Entire Selenium Automation Project from Design Stage.",
        "Students will learn how to use ChatGPT for Development",
        "Students will evaluate themselves by solving Quizzes.",
        "Top Interview Questions and their answers are also provided at the end of the course to help students to prepare for interviews."
      ],
      "course_content": {
        "Introduction": [
          "I Welcome You All to the Course",
          "How To Hide Projects in Eclipse Package Explorer",
          "How To Add Maven Plugin in Eclipse | How To Add m2eclipse Plugin in Eclipse",
          "How To Add Dependencies in Maven Project in Eclipse",
          "Selenium Launch Chrome, Firefox, Edge Browser",
          "Basic Selenium Questions"
        ],
        "Locators in Selenium": [
          "Selenium Locators Tutorial Part 1",
          "Selenium Locators Tutorial Part 2"
        ],
        "Handling Dropdowns, Checkboxes, Radio Buttons in Selenium": [
          "How To Handle Static Dropdown in Selenium",
          "How To Handle Checkbox in Selenium Webdriver Java | How To Print List",
          "How To Handle Auto Suggestion Dropdown in Selenium",
          "How To Handle Multiple Radio Button in Selenium Webdriver",
          "Locators in Selenium"
        ],
        "Handling Frames in Selenium": [
          "Selenium Webdriver Handling iframes",
          "How To Handle Javascript Alert in Selenium Webdriver using Java"
        ],
        "Quiz on \"Java Concepts Required for Selenium\" Part 1": [
          "Quiz on \"Java Concepts Required for Selenium\" Part 1"
        ],
        "Eclipse Features": [
          "Eclipse Align Code Shortcut",
          "How To Debug in Eclipse using Breakpoints"
        ],
        "Quiz on \"Java Concepts Required for Selenium\" Part 2": [
          "Quiz on \"Java Concepts Required for Selenium\" Part 2"
        ],
        "Synchronization in Selenium Webdriver": [
          "How To Achieve Synchronization in Selenium Webdriver",
          "Implicit Wait in Selenium Webdriver",
          "Explicit Wait in Selenium Webdriver Java",
          "Fluent Wait in Selenium Webdriver Java with Example",
          "Waits in Selenium"
        ],
        "Actions Class": [
          "Selenium Mouse Actions Hover, Click, Double Click, Right Click",
          "Selenium Drag and Drop Java Code Example",
          "Selenium Keyboard Actions",
          "Handling Browser and Web Elements"
        ],
        "Browser Options": [
          "How To Handle Insecure Connection / Untrusted Certificate Error in Selenium",
          "Selenium Add Extension To Chrome Browser At Runtime",
          "How To Set Proxy in Selenium Webdriver Java",
          "How To Set Download Path in Chrome using Selenium Java",
          "How To Set Download Path in Firefox using Selenium Java"
        ]
      },
      "requirements": [
        "Core Java Concepts"
      ],
      "description": "This course will help all those who want to master in automation testing. It will help beginners to learn Selenium with Java coding skills in writing best optimized code for Automating test-cases. In this course, you will find everything about 1. Selenium Webdriver (Java) with examples 2. Eclipse Techniques 3. TestNG Framework 4. Core Java 5. How to write testcases and automate them using Selenium and TestNG framework. Students will learn how to use TestNG framework for testing. All basic concepts related to TestNG are covered in this course. Students will be able to create testcases based on the project they work on. Students will learn core Java concepts required for Selenium. Wherever basic Java concepts are needed, they are explained in simple words. By the end of the course, Students will be able to develop an awesome Test Automation framework. Students you can clear any Interview and can Lead Entire Selenium Automation Project from Design Stage.\n\n\nTopics covered in this course\n1. How To Hide Projects in Eclipse Package Explorer\n2. How To Add Maven Plugin in Eclipse | How To Add m2eclipse Plugin in Eclipse\n3. How To Add Dependencies in Maven Project in Eclipse | Add Selenium Dependency in pom.xml Eclipse\n4. How To Launch Browser Using Selenium Webdriver | Selenium Launch Chrome, Firefox, Edge Browser\n5. Selenium Locators Tutorial Part 1 | Selenium Locators with Examples | id, name, class name, link text\n6. Selenium Locators Tutorial Part 2 | Selenium Locators with Examples | css selector xpath in Selenium\n7. How To Handle Static Dropdown in Selenium | Static Dropdown in Selenium Webdriver using Java\n8. Selenium Checkbox Select | How To Handle Checkbox in Selenium Webdriver Java | How To Print List\n9. How To Handle Auto Suggestion Dropdown in Selenium | Auto Suggest Drop List in Selenium Webdriver\n10. How To Handle Multiple Radio Button in Selenium Webdriver | Selenium Radio Button Java\n11. Selenium Webdriver Handling iframes | How To Switch Frame in Selenium Webdriver using Java\n12. How To Handle Javascript Alert in Selenium Webdriver using Java | Selenium Javascript Alert Ok\n13. Eclipse Align Code Shortcut | How To Align Code in Eclipse | Eclipse Indentation Shortcut\n14. How To Debug in Eclipse using Breakpoints | Debugging in Eclipse Java Selenium Code Step by Step\n15. How To Achieve Synchronization in Selenium Webdriver | Implicit Wait | Explicit wait | Fluent Wait\n16. Implicit Wait in Selenium Webdriver | Selenium Implicit Wait Java Example | implicitlywait Selenium\n17. Explicit Wait in Selenium Webdriver Java | Selenium Explicit Wait | Implicit Wait vs WebDriverWait\n18. Fluent Wait in Selenium Webdriver Java with Example | Fluent Wait vs Implicit Wait vs Explicit Wait\n19. Selenium Mouse Actions Hover, Click, Double Click, Right Click | Mouse Actions in Selenium Webdriver\n20. Selenium Drag and Drop Java Code Example | Mouse Actions in Selenium Webdriver\n21. Selenium Keyboard Actions | Selenium Keyboard and Mouse Events | Selenium Keys Down Example\n22. How To Handle Insecure Connection / Untrusted Certificate Error in Selenium on Chrome, Firefox, Edge\n23. Selenium Add Extension To Chrome Browser At Runtime | Add Extension in Browser in Selenium Webdriver\n24. How To Set Proxy in Selenium Webdriver Java | Selenium Proxy Authentication | Selenium Proxy Setting\n25. How To Set Download Path in Chrome using Selenium Java\n26. How To Set Download Path in Firefox using Selenium Java\n27. How To Exit From Frame in Selenium | How To Switch To Default Frame in Selenium Webdriver\n28. How To Count Number of Frames in Selenium WebDriver Java\n29. How To Take Screenshot in Selenium Webdriver using Java | Selenium Screenshot Java\n30. How To Take Partial Screenshot in Selenium | Selenium 4 Features\n31. How To Scroll Down in Selenium Webdriver Java | How To Scroll Webpage in Selenium\n32. How To Scroll Table Vertically and Horizontally in Selenium Webdriver Java |Scroll Inside WebElement\n33. How To Install TestNG in Eclipse using Eclipse Marketplace | Install TestNG in Eclipse for Selenium\n34. First TestNG Program in Eclipse | How To Run Multiple Test Cases in TestNG without Java Compiler\n35. How To Run Test Cases in TestNG from xml File | Basic Structure of testng.xml file in TestNG\n36. How To Control Execution of Test Cases in TestNG from testng.xml File | Prioritizing the Testcases37\n37. TestNG Include and Exclude Methods | How to Include and Exclude Test Cases in TestNG in testng.xml\n38. TestNG Regular Expression REGEX | Include and Exclude Test Methods with & without Regular Expression\n39. Run TestNG Testcases At Packages Level | How To Add Packages To testng.xml File in TestNG Framework\n40. TestNG Annotations in Selenium | Before and After Method, Class, Test, Suite\n41. TestNG Groups in Selenium | TestNG Grouping Test Cases with Example | TestNG Group Execution\n42. TestNG Helper Attributes | dependsOnMethods, enabled, timeOut\n43. TestNG Priority Example | How To Set Priority for Test Cases in TestNG Framework\n44. TestNG Assertions Tutorial | TestNG Assertions in Selenium | TestNG Assert Test Pass and Fail\n45. Selenium TestNG Real Time Project | Selenium Maven TestNG Automation Testing Real Time Mini Project\n46. TestNG Parameters Annotation | Parameterizing from TestNG xml file | TestNG Parameterization\n47. DataProvider Annotation in TestNG | TestNG Data Provider Annotation\n48. TestNG Listeners in Selenium Webdriver with Example | ITestListener Interface Methods TestNG Example\n49. TestNG Soft Assertions with Example | TestNG Soft Assert | SoftAssert Class and assertAll() Method\n50. TestNG How To Do Parallel Testing | Selenium Parallel Testing TestNG | Running Tests Parallel\n51. TestNG Report Generation in Selenium | TestNG Reports in Selenium | How To Generate Report in TestNG\n52. How To Switch Windows in Selenium Java | How To Handle Window in Selenium Webdriver\n53. How to use Excel for getting data in Selenium Webdriver Java | Read Excel File Using Apache POI Java\n54. How to Read Data from Properties File in Selenium Webdriver | Read Data from Properties File in Java\n55. Selenium Page Object Model Framework Java | Selenium Page Object Model and Page Factory Part 1\n56. Selenium Page Factory Model in Java with Example | Selenium Page Object Model & Page Factory Part 2\n57. Selenium Close vs Quit | What is the difference between driver.close() & driver.quit() in WebDriver?\n58. How To Get Css Property Value in Selenium Webdriver Java | getCssValue() Command Selenium WebDriver\n59. Selenium File Upload | Selenium File Upload by sendKeys() | Selenium WebDriver Java\n60. Absolute vs Relative Xpath in Selenium Webdriver\n61. Selenium Enter Text without sendKeys | How to type in a textbox without using sendKeys()?\n62. Selenium Select Dropdown Value | Selenium Select Class | Selenium Webdriver Select Dropdown Java\n63. Selenium How To Search in Scrollable Web Table | Handle / Scroll Down WebTable in Selenium Webdriver\n64. Selenium Authentication Popup | How To Handle Login popup Window using Selenium Webdriver\n65. Selenium Broken Links | How To Find Broken Links in Selenium Webdriver Java",
      "target_audience": [
        "Beginner to Automation Testing"
      ]
    },
    {
      "title": "Kick off your gaming QA career: basics of testing for games",
      "url": "https://www.udemy.com/course/kick-off-your-gaming-qa-career-basics-of-qa-for-games/",
      "bio": "Number 1 course about professional testing of games and software! Step by step guide on how to master games QA",
      "objectives": [
        "Step by step guide on how to do manual testing for games",
        "how gaming studio really works and where QA fits in bigger picture",
        "How to write great test cases that are easy to use and maintain",
        "How to create excellent bug reports that won't be ignored",
        "How to use JIRA and other bugs databases for testers",
        "QA methodology and introduction to games QA management",
        "Different types of testing, why we need them and when should we use them",
        "How to make decisions on what to test and when",
        "How to organize testing for different gaming platforms",
        "how to get QA job in gaming industry"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to QA",
          "Introduction to QA mini test!",
          "Games QA basics",
          "Games QA basics mini test!",
          "Types of testing",
          "Types of testing mini test!",
          "Test cases",
          "Let's create test cases!",
          "Platforms and operating systems",
          "Platforms mini test!"
        ],
        "Testing strategy and execution": [
          "Bug reporting flow",
          "Bug flow mini test!",
          "Let's practice bug flow!",
          "Bug reporting",
          "Let's write our first bug!",
          "Bug reporting",
          "QA methodology",
          "QA methodology quiz!",
          "Testing approach",
          "Testing approach quiz!",
          "QA and live OPS",
          "QA and live ops mini quiz!"
        ],
        "Working in QA": [
          "What makes a good tester",
          "Team and QA",
          "Test management"
        ]
      },
      "requirements": [
        "Working computer with internet connection",
        "Smart mobile phone that can download games"
      ],
      "description": "There is so much more to testing games than just playing them! QA career is considered entryway to the gaming industry and if you are interested in joining this lucrative and fascinating industry, testing job might be just the right start. In this course, you will gain necessary skills for QA job and learn:\n- basics of quality assurance (testing)\n- how to manually test games\n- what is a bug and how to report them\n- how to select and use testing tools for manual testing\n- how to write excellent test cases that will yield bugs for a long time\n- what is a testing strategy and how to pick the right one\n- basics of testing methodology.\nMany lessons will also apply to general software testing. At the end of the course, you will have skills to start and improve your QA career in games, and a deeper understanding of what is QA and why it is necessary for any modern software development. Besides testing, you will also learn more about the gaming industry in general, how gaming studios work and basics of agile methodologies.\nThis course is aimed at people who are interested in starting their QA career in the gaming industry, but it's beneficial for anybody already working in QA, considering changing careers to QA, or requires a deeper insight into how manual testing is done (for example producers, product owners, project managers).\nThis course can be taken without prior experience in the gaming and tech industry, but a general understanding of technology and software is beneficial. You don't need to invest into any special tools or software for this course, as we will be focusing our practice on free-to-play games and software that has limited free usage.",
      "target_audience": [
        "People interested in entering gaming industry",
        "People switching career to QA",
        "Game industry professionals (Producers, Project Managers, Developers, Product Managers...) looking to find out more about QA",
        "Testing professionals interested in the gaming industry"
      ]
    },
    {
      "title": "Master API Testing and Automation using TypeScript",
      "url": "https://www.udemy.com/course/master-api-test-automation/",
      "bio": "Build a comprehensive REST API Test Automation Framework using SuperTest and Javascript (TypeScript).",
      "objectives": [
        "Learn API Testing Fundamentals",
        "Utilize Swagger and Postman for API Testing",
        "Write API Tests using TypeScript",
        "Implement Negative Testing",
        "Setup & Optimize Test Automation Framework",
        "Handle File Uploads & Authentication",
        "Build Beautiful Reports",
        "Integration with Jenkins"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "Join the Community",
          "Source Code Access (MUST READ)"
        ],
        "Project Overview": [
          "Company/Job Overview",
          "Swagger Walkthrough",
          "Tech Stack Decision"
        ],
        "Setup and Installation": [
          "Section Overview",
          "NodeJS Setup",
          "Basic Setup - Exercise",
          "Basic Setup - Implementation",
          "TypeScript Setup - Exercise",
          "TypeScript - Implementation"
        ],
        "API Basics": [
          "Brushing up API Fundamentals",
          "Quiz 1 - API Basics",
          "Quiz Answers in Detail"
        ],
        "Proof of Concept (POC)": [
          "Section Overview",
          "URL Update - MUST READ!!",
          "GET Request - Overview",
          "GET Request - Implementation",
          "GET Query Param - Overview",
          "GET Query Param - Implementation",
          "POST Request - Overview",
          "POST Request - Implemenatation",
          "PUT Request - Overview",
          "PUT Request - Implementation",
          "PATCH Request - Overview",
          "PATCH Request - Implementation",
          "DELETE Request - Overview",
          "DELETE Request - Implementation",
          "Leave a Review"
        ],
        "Brands Tests": [
          "Section Overview",
          "GET /brands - Exercise",
          "GET /brands - Solution",
          "GET /brand/:id - Exercise",
          "GET /brand/:id - Solution",
          "POST /brand - Exercise",
          "POST /brand - Solution",
          "PUT & DELETE /brand/:id - Exercise",
          "Quick Note: POST vs PUT",
          "PUT & DELETE /brand/:id - Solution"
        ],
        "Quiz - API Tests": [
          "Quiz 2 - Understand Code Blocks",
          "Quiz Answers in Detail"
        ],
        "Organize Brands Tests": [
          "Section Overview",
          "Fix POST /brand",
          "Fix GET /brand/:id",
          "Fix PUT & DELETE /brand/:id - Exercise",
          "Fix PUT & DELETE /brand/:id - Solution"
        ],
        "Negative Testing": [
          "Section Overview",
          "Schema Validation Tests",
          "Business Login Validation Tests",
          "Exercise - Negative Tests",
          "Solution - Negative Tests"
        ],
        "Hooks": [
          "Section Overview",
          "Before All Hook - GET /brand/:id",
          "Before All Hook - POST /brand/:id",
          "Exercise - Before All Hook",
          "Solution - Before All Hook",
          "After All Hook"
        ]
      },
      "requirements": [
        "Basic familiarity with API Testing",
        "Basic familiarity with Javascript or programming",
        "High level understanding of Test Automation"
      ],
      "description": "In today’s digital landscape, APIs are integral, serving as the connectors that enable different software systems to communicate and interact. They’re essential for the smooth functioning of everything from web applications to mobile apps. However, ensuring these APIs work correctly and efficiently is a critical task – and that’s precisely where API testing steps in.\nAPI testing is crucial to ensure that these vital interactions happen smoothly and securely. But let’s face it, manual API testing can be a real challenge. It’s time-consuming, prone to human error, and struggles to keep up with the rapid pace of development and deployment in today’s agile environments.\nThat’s where API Test Automation shines. It allows teams to test APIs quickly, accurately, and efficiently, giving them the confidence to deploy their apps knowing that they’ll work as expected. And the best part? You can be the one to provide this invaluable service to your team.\nThis course, “Mastering API Test Automation using TypeScript“, is designed to equip you with the skills and knowledge you need to become an expert in API Test Automation. We’ll start with the basics and work our way up to advanced techniques, with plenty of hands-on experience along the way.\nHere’s what you’ll learn:\nProject overview and tech stack familiarization\nSetup and installation of necessary tools and frameworks\nProof of concept using different HTTP methods\nBuilding and improving API tests on a real project\nScaling tests by implementing a testing framework\nImplementing authentication in the test framework\nAdvanced topics like file uploads, utility files, reports, and CI integration with Jenkins\nBest practices and tips for successful API test automation\nBy the end of this course, you’ll be able to confidently build scalable API test automation solutions, making you an invaluable asset to your team and paving the way for success in your career. So why wait?\nEnroll now and let’s start this exciting journey together!",
      "target_audience": [
        "QA Engineers interested in learning API Test Automation",
        "Web Automation Engineers looking to get full stack experience with API Test Automation",
        "SDETs looking to expand their skills with API Testing & Automation"
      ]
    },
    {
      "title": "Rest API Automation With Rest Assured - Novice To Ninja",
      "url": "https://www.udemy.com/course/rest-api-automation/",
      "bio": "Join the \"Most Popular\" Rest API Automation Course With Basics To Advanced Level Framework Implementation From Scratch",
      "objectives": [
        "***** At the end of this course, you will have detailed understanding of REST API Automation Frameworks",
        "You will be able to EXPLAIN, DESIGN and IMPLEMENT structured AUTOMATION FRAMEWORKS using RestAssured Libraries",
        "*** In-depth understanding of REST API Automation using RestAssured with real time examples",
        "Thorough understanding of REST testing tools like POSTMAN, Advanced REST Client",
        "Write efficient and less redundant code using RestAssured Specifications",
        "***** We have 10 dedicated INSTRUCTORS to help you with queries within 24 HOURS, resume preparation",
        "You will be able to run complete Test Suite using TestNG and Maven",
        "You will have complete understanding of TestNG Framework",
        "***** You will have excellent command on Build Management using MAVEN",
        "You will be able to create REPORTS using TestNG",
        "***** You should be able to lead any Selenium Automation Project from scratch on your own",
        "With all this knowledge gained, you should be easily able to clear Selenium Automation interviews"
      ],
      "course_content": {
        "Introduction": [
          "Course Outcome - *** MUST WATCH ***",
          "Instructor Introduction",
          "How To Reach Me Anytime? *** MUST WATCH ***"
        ],
        "Java Setup and Installation": [
          "Java Overview And Version Selection",
          "Java Install And Setup - Mac",
          "Java Install And Setup - Windows",
          "Install Eclipse - Windows",
          "Eclipse Installation - Mac"
        ],
        "12 Hours Of Java And TestNG Content": [
          "7 Hours Of Java Content",
          "5 Hours of TestNG Content"
        ],
        "RestAPI Introduction": [
          "RestAPI Architecture - Part 1",
          "RestAPI Architecture - Part 2",
          "What Are Endpoints",
          "GET-POST-PUT-DELETE Requests",
          "Understanding Headers",
          "What To Verify In RestAPI Testing",
          "Twitter API Documentation",
          "Rest API Information Text File"
        ],
        "Rest Client Setup": [
          "Postman REST Client Installation",
          "Advanced Rest Client Setup",
          "Rest Easy Client - Setup"
        ],
        "RestAPI Testing Using Postman Client": [
          "Understanding Google Maps API Documentation",
          "How to get Google API Key",
          "GET Request Postman Client - Practical Example",
          "POST Request Postman Client - Practical Example",
          "Delete Request Postman Client - Practical Example",
          "POST-GET-DELETE Complete Workflow - Practical Example",
          "Understanding WADL Documentation"
        ],
        "RestAssured Setup": [
          "RestAssured Setup - Part 1",
          "RestAssured Setup - Part 2",
          "Build Path Clean Up"
        ],
        "RestAPI Automation Overview": [
          "Get Request - Practical Example",
          "How to get response body",
          "Understanding JSON Hierarchy",
          "How To Validate Response Body",
          "POST Request - Practical Example",
          "POST Request with Java Object Serialization",
          "Query Parameters Vs Path Parameters"
        ],
        "OAuth Real World Twitter APIs Example": [
          "Understanding Twitter APIs OAuth",
          "How To Generate Twitter Access Tokens",
          "Twitter GET-POST Request Using Postman",
          "OAuth Environment Setup",
          "Twitter POST Request - Practical Example"
        ],
        "Validating JSON Response": [
          "How to extract JSON response - Part 1",
          "How to extract JSON response - Part 2"
        ]
      },
      "requirements": [
        "***** NO AUTOMATION / CODING EXPERIENCE NEEDED, beginners will be easily able to follow this course",
        "Java, TestNG, Maven concepts are covered in the course, no experience needed",
        "***** CODE FILES / ALL MATERIAL FOR EVERY LECTURE AVAILABLE TO DOWNLOAD",
        "You have multiple ways to reach out - Q&A section and Email, TeamViewer, Skype",
        "Windows/MAC computer"
      ],
      "description": "REST Assured is powerful set of APIs to automate Restful APIs/Restful Webservices (just like Selenium WebDriver for Web Application). Almost all web applications use Rest APIs to communicate with back-end and it has gained a lot of popularity in the modern day application architecture.\nIt is very important for QA/Automation engineers to understand how to automate Rest API tests. Automating Rest APIs tests is very crucial for projects because Rest API tests are quick to run and more stable unlike web automation.\n90% of the IT industry is now moving towards Rest API Automation ---- So  What are you waiting for ???\n********************* Why this course? *********************\n------> No other course covers topics covered in this course with such great depth of detail. All materials including code files.\n\n------> We start from Beginners level and go through Advanced FRAMEWORK level. This is a single course for\neverything you need to know related to Rest API Manual testing and Automation.\n***** One stop place to become an Expert in Rest API Automation Framework from scratch *****\n\n***** One and Only course on internet with real time APIs with Framework Implementation like Twitter and Google Maps examples *****\n\n------> Basics To Advanced Level With Rest Assured, Postman, Java, TestNG, Framework Implementation From Scratch\nGet awesome Support, on demand desktop session on Team Viewer and Skype.\n********************* WHAT MAKES THIS COURSE BEST? *****************************\nWe assume that students have no experience in automation/coding and start every topic from scratch and basics.\nExamples are taken from TESTING REAL TIME HOSTED Rest APIs to understand how different components can be automated, that will give you idea of industry level framework and give you confidence.\nNO PRIOR CODING OR AUTOMATION EXPERIENCE NEEDED, this course covers all the necessary topics.\nGet more than 25 hours of unique content with real example code files provided to refer and learn with examples.\n*******************************************************************************************************\nAre you looking to step into Rest API Automation industry with the latest technologies in market?\nAre you keen to learn Rest API Automation using RestAssured with java and other latest framework technologies?\nInterested in learning how Rest APIs are automated in projects?\nWe start with how to code in Java and then move towards learning Postman Client, RestAssured, TestNG, Maven.\nTopics Include:\nUnderstand and use POSTMAN to send requests (using GET, POST, PUT, DELETE operations)\nIntroduction to REST Assured, which is a popular open source library used for API test automation.\nLearn how to write tests for GET, POST, PUT and DELETE operations using Real Time hosted Rest APIs like Google's and Twitter's Real Time hosted Rest APIs\nUnderstand and use JSONPath, XML Path to assert and extract response\nUnderstand how to write efficient and less redundant code using Request Specification, Response Specification, Logging\nAdding multiple assertions to a single test\nLearn Authentication using OAuth on Twitter's Real Time hosted Rest APIs",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career on test automation",
        "Quality Assurance Automation professionals to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "Advanced framework development with Coded UI Test 2015/2017",
      "url": "https://www.udemy.com/course/framework-development-with-cuit/",
      "bio": "Learn the first ever advanced framework development in Coded UI like never before",
      "objectives": [
        "Understand Coded UI testing like never before",
        "Implement Page Object Model pattern in Coded UI",
        "Understand and work with CUITe framework",
        "Implement custom specflow plugin for Coded UI",
        "Writing BDD code for Coded UI testing"
      ],
      "course_content": {
        "Introduction to Visual Studio Test and Coded UI": [
          "Introduction to Course",
          "Introduction to Visual studio test",
          "Introduction to Coded UI Test"
        ],
        "Understanding and building Windows App automation with Coded UI Test": [
          "Record and Playback with Coded UI Testing",
          "Breaking down UIMap.Designer.cs",
          "Simple Hand coding with Coded UI",
          "Simple Hand coding with Coded UI (Contd)",
          "Hand coding with C# Generics",
          "Hand coding with C# Generics (Contd)",
          "Hand coding with C# Generic (Extensions)",
          "Page Object Model in CUIT",
          "Page Object Model in CUIT (Contd)",
          "Page Navigation of POM in Coded UI",
          "Summary"
        ],
        "Understanding and building Web App automation with Coded UI Test": [
          "Introduction",
          "Understanding recorded codes via UIMaps",
          "Hand coding with Coded UI Test",
          "Refactoring Hand code and integrating with existing infrastructure",
          "Implementing Page Object Model for Web with Coded UI",
          "Implementing Page Object Model for Web with Coded UI (Contd)",
          "Implementing Page Navigation with Coded UI",
          "Cross Browser Testing using Coded UI",
          "Summary"
        ],
        "Understanding and working with Coded UI Test Enhanced (CUITe)": [
          "Introduction",
          "Installing and getting started with CUITe",
          "Writing simple code with CUITe (Contd)",
          "Working with Data Grid controls with CUITe",
          "Screen Object Models with CUITe for Windows application",
          "Page Object Models with CUITe for Web application (Part 1)",
          "Page Object Models with CUITe for Web application (Part 2)",
          "Similarities and Summary"
        ],
        "Putting it all together with helpers and config libraries": [
          "Introduction",
          "Log Libraries",
          "Database and Excel libraries",
          "Using libraries in test",
          "Configuration development"
        ],
        "BDD with Specflow + Coded UI Testing": [
          "Introduction",
          "Writing Specflow + Coded UI custom plugin",
          "Specflow scenario without using custom plugin",
          "Specflow scenario with custom plugin",
          "Specflow scenario for web application with CUITe and custom plugin",
          "Summary"
        ],
        "Installing EmployeeApp v1.0 in IIS": [
          "Deploying EmployeeApp v1.0 in IIS"
        ],
        "Running Window Application of EmployeeApp v1.0": [
          "Installing and Running Employee App"
        ],
        "Season 2 - Upgrade course to support VS 2017 and latest version of everything": [
          "Upgrade project to support VS 2017 and latest Nuget packages",
          "Upgrade Custom Specflow plugin for Coded UI Test to Specflow 2.4.x",
          "Upgrade project to C# 7.1",
          "Source code for Custom Specflow plugin",
          "Complete source code"
        ],
        "Automating Windows 10 apps with Windows Application Driver - Selenium like tool": [
          "Introduction to Windows application driver",
          "Writing simple code with Windows Application driver",
          "Identifying elements with Inspect",
          "Page Object Model in Windows Application Driver",
          "Page Object Model in Windows Application Driver (Contd)",
          "Complete source code",
          "Specflow + Windows App Driver",
          "Specflow + Windows App Driver (Contd)",
          "Complete source code until Specflow",
          "Working with Nested elements in WinAppDriver"
        ]
      },
      "requirements": [
        "C#",
        "Understanding on any Automation testing tool (Selenium preferably)"
      ],
      "description": "Advanced framework development with Coded UI Test 2015/2017 course is designed in such a way that anyone who takes this course will understand the ins and outs of Visual studio Coded UI like never before. Coded UI  testing is always known for its complexity in coding among many testers and developers, but at the end of this course one will know that the theory is totally wrong !!!\nIn this course one will not only learn the framework development with Coded UI testing, in addition to that one will learn\nCoded UI best practices\nCoding standards\nWrite the first ever Page Object Model pattern in Coded UI testing\nFirst ever video course on CUITe framework\nWriting custom plugin for Specflow in coded UI\nIntegrating custom specflow plugin for BDD\nUpgraded 2017 visual studio support\nAutomating WinForm, Win32, UWP and WPF app with Windows application driver\nBy the way, I have been working with Coded UI from Visual studio 2010  since its launch (close to 8 years now)\nI worked with many different companies and have handson experience to work with Coded UI and really got thrilled while working it, Without any doubt I can say the only testing tool which can compete with Selenium should be this Coded UI testing tool of Visual Studio.\nAs the trademark of ExecuteAutomation courses in Udemy, we will never ever deviate from the topics said in this course\nThe course includes all the materials along with some of the lectures we will discuss, hence one must have all the source code required.\nFinally, the course is for those, who are very serious about automation testing framework development from ground up.",
      "target_audience": [
        "This course is for QA/Dev/Dev ops",
        "Business analyst who thinks CUIT is best suit for their project",
        "Who has good understanding of automation testing and C#"
      ]
    },
    {
      "title": "WebServices/Rest API Testing with SoapUI +Real time Projects",
      "url": "https://www.udemy.com/course/webservices-testing-with-soap-ui/",
      "bio": "\"Most Popular #1 SoapUI Test automation Course - \"70,000+ students learning together with great collaboration\"",
      "objectives": [
        "At the end of this Course you will get complete knowledge on Web services,API and their functionality",
        "You will learn How to test Webservices and REST API using SoapUI",
        "You will be able to develop robust Automation scripts for all the API tests using SoapUI features",
        "You will learn new language called groovy to automate webservices with SoapUI inbuilt methods",
        "You will be able to develop robust automation Framework forAPI's testcases",
        "You will understand the importance and procedure of Mocking the webservices",
        "You will learn basic sql concepts and procedure for database testing using SoapUI",
        "Will get clear picture on Security Testing using SoapUI",
        "You will understand how to generate neat reports for execution results"
      ],
      "course_content": {
        "Introduction to Webservices": [
          "Course FAQ's (Must Watch)",
          "What are Webservices?Understand with Live example",
          "Explaining Types of Webservices..-Soap and REST",
          "What is WSDL? Importance of it in Webservices",
          "DIfferences between WSDL and Soap Protocol"
        ],
        "Exploring Soap UI Tool Basic Features": [
          "Important Player Tips for Best learning Experience",
          "SoapUI Installation/Documentation",
          "Important Note",
          "Calculator WebService Example",
          "Creating Testsuites and testcases",
          "Local Webservice installation for practise",
          "Explaining Practice Web Service operations in detail with Demo"
        ],
        "Webservices Testing(Manual) with SoapUI Free Version": [
          "Basic Assertions for Test validations",
          "Advanced Assertions for validating responses",
          "Get Social with Rahul Shetty",
          "Strategy to use Xpath assertions in Tests",
          "Properties Access-Data driven Strategy",
          "Accessing properties from Testcase,Suite and project level",
          "How to send values from response to another request-Property Transfer",
          "End to end exercises"
        ],
        "Webservices Automation Testing in SoapUI Free version": [
          "Introduction to Groovy Script Test step",
          "Importance of TestRunner and Context variable",
          "testRunner methods for get and set Property()",
          "Accessing and updating the properties through Groovy methods",
          "Parsing the Xml requests and responses with XML Holder API",
          "Triggering the Soap Requests through Groovy code",
          "Practise Exercises- Automate the services",
          "Validating the service responses with Assertions"
        ],
        "REST API testing(Manual) with SoapUI Free version": [
          "Detailed Rest API Fundamentals from Scratch",
          "Quick explanation of Rest API's for Practicing in this course",
          "Add and Get Place API calls Example using SoapUI",
          "Update & Delete Place API's Demo for testing in SoapUI",
          "Code Google Add/Delete Place download"
        ],
        "REST API Automation Testing with SoapUI Free version": [
          "Create Rest Test Suite & Test cases for Maps API testing",
          "Introduction to Script Assertion window with MessageExchange Variables",
          "End to end Rest API Automation example with all valid assertions in SOapUI",
          "code download"
        ],
        "Rest API Json Assertions and Validations": [
          "Flicker API Introduction",
          "Json Path extraction from responses",
          "Json Assertions on parsed responses",
          "Advance example on Json Assertions"
        ],
        "End to End Framework Design": [
          "Framework Design Plan",
          "Understand Preparing API Tests from the functional Documents",
          "API Document download",
          "Building Rest API project in SoapUI",
          "create Testcases from the defined API",
          "End to End Testing on Library API",
          "API xml's download",
          "Install Eclipse and Java for API Automation testing",
          "Creation of Java API project for Framework setup",
          "WSDL Project concepts for Java tests set up",
          "TestNG Integration to the Java API Tests",
          "Note",
          "Different combinations of Tests for WSDL API",
          "Defining Testng.xml file for one single Trigger point to all tests",
          "TestNG commands",
          "Commands to trigger TestNG Java API Tests",
          "HTML Reports and Jenkins Installation",
          "Integrating the framework with Jenkins",
          "Code download"
        ],
        "Interview Questions Module": [
          "Interview Questions - Part 1",
          "Interview Questions -Part 2",
          "Interview Questions - Part 3",
          "Interview Questions - Part 4",
          "Top 25 Rest API Interview Questions with explanations",
          "Interview Questions download"
        ],
        "Old Videos with Groovy Basics- Worth watch !!": [
          "REST API samples from SoapUI official site",
          "Using Script Assertions window methods",
          "MessageExchange, Context variables usage",
          "Declaring Namespaces for effective xpath identification",
          "End to end examples on REST API -1",
          "End to end examples on REST API -2",
          "Code xml download"
        ]
      },
      "requirements": [
        "******You need NOT have Webservices Testing experience to start this course********* Even non Programming candidates can follow this course comfortably",
        "Though these are online Lectures., you will have Life Time instructor support, you can post your Queries in discussion board or can contact me directly, Will respond in less than 12 hours",
        "All Installation setup including SoapUI setup knowledge is taken care as part of course",
        "Join in our SoapUI Training community with (6500+ Students) Learning Together which you will not see in any other SoapUI online course on Udemy.",
        "Specialized Trainers who can help in answering students queries in part of your Course Journey"
      ],
      "description": "Lectures Last updated on Oct 5th with Soap/Rest Hybrid Framework +TestNg +Jenkins\n\nCourse is designed in such a way that the user can start the things from the very scratch with out any prior knowledge on  Soap Web services and REST API\n\nIncludes :17+ hours Lectures on API testing (Manual+Automation) with 7 real time projects  +Framework design+GroovyScripting+SoapUI Pro+API load testing+SoapUI Database testing + life time Trainer support\nOn course completion You will be Mastered in REST API/Webservices Testing and can implement Successfully it in your work place or will surely land on High Paying Job\n\nSo what makes this course Unique in the Market?\nWe assume that students have no experience in API Testing and start every topic from scratch and basics.\nThis Course explains\n·What are the Webservices and API's\n·How to Test the Webservices using Soap UI\nManual Testing of Services and API's using SoapUI tool\nGroovy Scripting Basics\n·How to Automate the Webservices Testcases in Soap UI with Groovy\n·Differences btween Soap UI and Soap UI Pro\n·Soap UI Pro Features\nWhat are Rest API\nManual Testing of REST API's using SoapUI tool\nAutomation of Rest API's using SoapUI Groovy and Script Assertions\nSoapUI Framework development from scratch using TestNG, Jenkins and Java API\n·Security Testing with Soap UI\n·DataBase Testing with Soap UI\nSoap UI Integration with Eclipse\nBy the End of this Course you will  understand the webservice and API specifications and write all kind of effective Manual and Automation testcases (Functional/Security/Data Base Testcases) for services in Soap ui by using all the available features  on Tool",
      "target_audience": [
        "This Course is best Suited for",
        "Manual Testers who want to Learn Webservices Testing",
        "Functional Automation Testers to extend their scripting on webservices",
        "Penetration Testers to understand Security flaws",
        "Any Graduate who want to kick start their carrier into testing"
      ]
    },
    {
      "title": "Mastering Functional Testing with Generative AI",
      "url": "https://www.udemy.com/course/mastering-functional-testing-with-generative-ai/",
      "bio": "From Basics to Brilliance: Transform Your Testing Approach with Generative AI for Unmatched Precision and Performance",
      "objectives": [
        "Grasp the fundamental concepts and revolutionary impact of AI in software development, particularly in functional testing.",
        "Gain a comprehensive understanding of how AI integrates within the software testing lifecycle, including its principles and applications.",
        "Develop the ability to leverage AI for efficient test design, requirement review, and test case generation.",
        "Master the use of AI algorithms to streamline test planning and enhance reporting processes.",
        "Master Regression Testing with AI: Learn to employ AI for automated and meticulous regression testing, overcoming common challenges in retesting.",
        "Gain proficiency in the use of AI tools and platforms, fostering a collaborative and productive testing environment.",
        "Apply AI tools to improve the efficiency and effectiveness of testing practices.",
        "Acquire skills to deliver software with superior quality and reduced time-to-market by utilizing AI in testing.",
        "Understand how AI integration in software testing provides a competitive advantage in the rapidly evolving software landscape.",
        "Equip yourself with the knowledge and skills to excel in a career involving AI-powered software testing, setting the stage for professional growth."
      ],
      "course_content": {
        "Introduction to AI-Assisted Functional Testing": [
          "Introduction to the course",
          "Introducing Gen AI",
          "Learning to Interact with AI Assistant",
          "A Brief Refresher - Functional Testing",
          "Using Gen AI in Functional Testing"
        ],
        "Fundamentals of AI-Assisted Functional Testing": [
          "AI-Assisted Software Testing Life Cycle",
          "AI-Assisted Requirement Review",
          "AI-Assisted Test strategy",
          "Test Case Generation with Gen AI",
          "Gen AI’s Assistance in Test Planning",
          "Gen AI’s Assistance in Test Reporting",
          "Gen AI’s Assistance in Regression Testing",
          "Further Exploration"
        ],
        "Other Possibilities": [
          "Limitations & Hacks",
          "Challenges & Way forward"
        ],
        "UI Testing and Test Automation": [
          "Gen AI's Assistance in UI Testing",
          "Gen AI's Assistance in Test Automation"
        ],
        "Quiz": [
          "Questions"
        ],
        "Downloads": [
          "Prompts Guide"
        ],
        "Test Your Skills": [
          "Practice Tests & Challenge",
          "Practice for UI testing"
        ]
      },
      "requirements": [
        "Fundamental understanding of software testing concepts and familiarity with Generative AI chatbots such as chatGPT are recommended prerequisites for participants in this course."
      ],
      "description": "Embracing AI in Functional Testing: Elevate Your Testing Efficacy\n\n\nIn today's rapidly evolving software landscape, harnessing the power of AI opens new horizons for effective and efficient functional testing. By the end of this course, you'll confidently wield AI as a valuable asset in your testing arsenal. This course empowers you to transcend traditional methods and leverage AI's potential to:\n\n\nHere's what you'll gain:\n\n\nA deep understanding of AI-powered testing:\nWe'll explore its principles, benefits, and integration within the software testing life-cycle.\n\n\nPractical skills for every step of the process:\nLearn to leverage AI for test design, requirement review, test case generation, test planning, reporting, and even regression testing.\n\n\nConfidence in interacting with AI tools:\nMaster different platforms and methodologies to collaborate effectively with your new AI co-pilot.\n\n\nA competitive edge in the job market: Become an in-demand professional equipped with the future-proof skill of AI-powered testing.\n\nEnroll in this course to not only stay at the forefront of software testing trends but also to elevate your testing prowess through the integration of AI, making you an invaluable asset in the world of quality assurance.\n\nAre you ready to become an AI-powered testing champion and propel your career to new heights? Join us, and let's unlock the transformative power of this innovative technology!",
      "target_audience": [
        "Software Testers: Elevate your testing game to the next level by wielding AI as your new superpower.",
        "QA Professionals: Streamline your processes, enhance efficiency, and deliver exceptional software with the power of AI by your side.",
        "Developers: Learn how AI-powered testing can benefit your development cycle, leading to higher quality software and faster time-to-market.",
        "Testing Managers: Lead your team into the future of testing by equipping them with the skills and knowledge to leverage AI effectively.",
        "Anyone Passionate about Technology: Dive into the world of AI and explore its potential to revolutionize the software testing landscape.",
        "Individuals Seeking Career Advancement: Gain a competitive edge and boost your employability by mastering this in-demand skill.",
        "Those Curious about AI and its Applications: Expand your horizons and unlock the possibilities of AI within the exciting realm of software testing.",
        "Lifelong Learners: Continuously refine your skills and stay ahead of the curve by mastering this cutting-edge technology.",
        "Remember: This course is for anyone eager to embrace the future of software testing and explore the transformative power of AI."
      ]
    },
    {
      "title": "Mastering Linux for Software Testing: Must for QA Success",
      "url": "https://www.udemy.com/course/unixfortesters/",
      "bio": "Linux for QA Professionals | Essential Linux Skills Every Software Tester must have | Achieve QA Excellence with Linux",
      "objectives": [
        "Detail knowledge of Unix & Linux commands and its implementation while working as Tester/QA",
        "Will be able to perform back end testing activities like fetching and verifying logs",
        "Will get decent understanding of Shell scripting & its implementation in testing tasks/activities",
        "Ready to Face Backend testing interviews",
        "Detailed understanding of each and every important command and how we can use them in Realtime projects",
        "Ready to perform Backend Testing Activities in Domains like Tetecom, Big Data"
      ],
      "course_content": {
        "Introduction to Unix (Linux)| Why as Tester we should Learn ? :Environment Setup": [
          "Why as Tester/QA to learn Unix/Linux Commands ? Practical areas to use it as QA",
          "Documentation : Basics Concepts + Setup",
          "Course Roadmap : Must for everyone to view",
          "Use online environment for practice(In case you don't have practice environment)",
          "Documentation : Setup Environment for Practice",
          "Setup Practice Environment on Windows Machine (Suggestive for better practicing)"
        ],
        "Let's Start Practical Session with very basic Unix /Linux Commands": [
          "Start working with Basic Commands : Current Directory, Clear Terminal & Help",
          "Working with Directories - Create Directory, Move in & Move out to Directories",
          "Working with Directories - Create Multiple Directories, Delete Directory",
          "Different option to create files : Blank File, File with Content, Insert Data",
          "Listing files and Folders : Hidden Files, List Format and Sorted Order",
          "All uses of CAT command : Must for Practical Implementation & Interviews",
          "It's time for the QUIZ : Basic Commands"
        ],
        "Check content of File(Log Files) : Must Learning Concepts/practical for Tester": [
          "Documentation : Sample Data to be used for Practicing with me",
          "Setup Sample Data to be used for Practicing with me",
          "Check complete file content : CAT Command",
          "Check file content : Top few lines - Head Command",
          "Check file content : bottom few lines - Tail Command",
          "Check file content : with Paging - More Command",
          "Check file content : with Paging - Less Command",
          "Check file content : with VIM editor",
          "Commonly Asked Question : Get few lines from middle of the File"
        ],
        "Search Data in a File : This Section is also MUST for Realtime Work + Interviews": [
          "What is Grep Command | Search data in 1 file by giving Search String",
          "Search data in more than 1 file : Giving Search String, Practical Implementation",
          "Search data in all files of current directory : Practical Implementation",
          "Search data by ignoring case : Must to be use which checking Log files",
          "Search Data : Display Line number in front of each display line",
          "Search Data : Display File Name (When we are searching content in multiple file)",
          "Search Data : With exact word (Not as a Substring of other Words)",
          "Search Data : By ignoring given text (Reverse of Simple Search)",
          "Search Data : Display only count of matches",
          "Search Data : Display surrounding lines by giving Search String",
          "Search Multiple Content in a Single Command",
          "Search Multiple data with EGREP command (Advance Search Operation)",
          "IMPORTANT------- Task for Students ----- : Search Lines having text",
          "IMPORTANT------- Task for Students ----- : Search Count",
          "IMPORTANT------- Task for Students ----- : Search specific count only"
        ],
        "Cut & Copy Files and Folder |Taking Files and Folders from one location to Other": [
          "Copy file from one location to another location - Part 1",
          "Copy file from one location to another location - Part 2",
          "Cut(Move) file from one location to another locations",
          "Rename File and Folder",
          "It's time to QUIZ : Check Your Knowledge"
        ],
        "Command Operators : Passing Date between 2 or more commands or Files": [
          "Save command results to a File ( > & >> Operator)",
          "Get data from a File ( < Operator)",
          "Pass result of one command to another ( | Operator)",
          "Change File Permission",
          "Check Your Knowledge"
        ],
        "File Comparison : Cmp, Comm and Diff command": [
          "File Comparison - CMP command : Print Only Different Bytes",
          "File Comparison - Comm command : Display common and Different content",
          "File Comparison - Diff command : Display only different lines"
        ],
        "Search Files and Folder on current location or complete system": [
          "Search File on current location or in Current Hierarchy",
          "Search file in the Complete File System",
          "Basic System Commands : Calendar , Date and Banner"
        ],
        "Process File data using CUT Command : Fetch columns from delimiter file": [
          "Fetch one or few characters from each line of file",
          "Fetch one or few column from each line of file",
          "Fetch one or few column other than given column",
          "Fetch column by skipping incorrect data"
        ],
        "Stream Editor to perform File Operations (SED)": [
          "What is SED | Where to use SED commands",
          "SED : Display Specific Line from complete file",
          "SED : Display Last Line and Range of Lines out of total file",
          "SED : Skip lines in result (Display all lines other than given condition)"
        ]
      },
      "requirements": [
        "Basic understand of Manual Testing Concepts and Implementation",
        "Good to have understanding of Log Files & Other files generating on Unix or Linux Server Machine"
      ],
      "description": "This is a Must to Learn course for Every Software Tester(Be it Manual or Automation), Nowadays in every job profile, you will find it mandatory to have skills to work in Unix or Linux Environment.\nThis course is specially designed for SOFTWARE TESTING/QA professionals, This will take you from basic level to advance in decent pace videos for following Job Roles & opportunities.\nLinux Software Testing\nLinux QA Engineer\nLinux Quality Assurance Testing\nLinux Test Automation\nLinux System Testing\nLinux for Software Testers\nSoftware Testing on Linux\nLinux Manual Testing\nLinux Automated Testing\nThis course will help you in\nTesting-Related Skills\nFunctional Testing in Unix/Linux\nRegression Testing on Unix/Linux\nLoad and Performance Testing on Linux Servers\nUnix/Linux Integration Testing\nTest Case Development for Unix/Linux Applications\nAPI Testing on Unix/Linux Systems\nUnit Testing with Linux/Unix\nEnd-to-End Testing on Unix/Linux Platforms\nExploratory Testing on Unix/Linux\nAutomation and Scripting\nShell Scripting for Automation\nBash Scripting for Test Automation\nCron Jobs for Test Scheduling\nPython/Bash for Test Automation on Unix/Linux\nAutomating Unix/Linux Tests with Selenium\nCommand Line Interface (CLI) Testing\nScripting for Log Analysis\nTroubleshooting and Analysis\nLog Analysis on Linux/Unix Systems\nTroubleshooting Unix/Linux Environments\nRoot Cause Analysis (RCA) in Unix/Linux\nMonitoring System Health on Linux Servers\nNetwork and System Diagnostics on Linux\nUnix/Linux File System and Permissions Testing\nDevelopment and Deployment Skills\nContinuous Integration/Continuous Deployment (CI/CD) with Linux\nJenkins Pipelines for Unix/Linux Testing\nUnix/Linux Development Environment Setup\nUnix/Linux Application Deployment\nConfiguration Management on Linux Servers\nDatabase and Data Management\nSQL Queries on Unix/Linux\nDatabase Testing with MySQL/PostgreSQL on Unix\nData Validation on Unix/Linux Systems\nMongoDB, MySQL, PostgreSQL, Oracle on Linux\nSecurity and Compliance Testing\nUnix/Linux Security Testing\nVulnerability Assessment on Linux Servers\nCompliance Testing on Unix/Linux Systems\nSSH, SSL/TLS for Secure Testing\nUser Authentication and Access Control Testing on Unix/Linux\nTechnical\nLinux Command Line Testing\nBash Scripting for Testing\nShell Scripting for Test Automation\nLinux Server Testing\nCLI Testing for Linux\nFunctional Testing on Linux\nRegression Testing on Linux\nLinux Environment Configuration",
      "target_audience": [
        "This is specially meant for software testers who are not familiar or having only basic knowledge of Unix/ Linux.",
        "Software Testing & QA Professionals (Be it Manual or Automation Tester)",
        "Freshers looking opportunity in Software Testing",
        "QA profession looking to start work in domains like Finance, Telecom, Big Data etc"
      ]
    },
    {
      "title": "Test-first - Drive Clean Code with Automated Unit Tests",
      "url": "https://www.udemy.com/course/test-first-programming/",
      "bio": "Master the Art of Test-driven Development (TDD) and learn how the Top 1% of Developers create software.",
      "objectives": [
        "Solve complex coding problems step-by-step with Test-first Programming (TDD)",
        "How to write tests before writing any production code with a simple 3-step technique",
        "How to get started with the first test in seconds – even if you haven't understood all details of the problem yet",
        "The secret to uncovering missing test cases so that you will always know what to do next",
        "Turn lousy tests into maintainable test cases that tell a story",
        "Sound like a test native by using Matchers in the most elegant way",
        "3 things that will make you faster at writing Unit Tests",
        "50 Refactoring Patterns you can use on a daily basis to keep your code clean",
        "A technique you can use to check if you've tested enough – or too little",
        "How to fix bugs with Test-first Programming and Test-driven Debugging",
        "30 reasons why most developers hate writing tests – and how to avoid these common TDD anti-patterns",
        "Manage test data with the Bring Your Own principle",
        "Structure test code into The 4 Phases of a Test",
        "Eliminate code duplication with Test Lifecycle Hooks",
        "Get more out of your testing library with the Watch Mode",
        "(bonus) 9 Practice Challenges with solutions to help you reinforce and fine-tune your new skills",
        "(bonus) A Brief History of TDD",
        "(bonus) Why writing tests at the end sucks",
        "(bonus) The inconvenient truth about Code Coverage that nobody talks about",
        "(bonus) Use Test-first Programming to impress managers and your peers",
        "(bonus) How to approach Coding Challenges with confidence",
        "(bonus) Too DRY – When the Don't Repeat Yourself principle goes wrong",
        "(bonus) Why in computing Equal is not the Same"
      ],
      "course_content": {
        "Get started": [
          "Welcome to Test-first",
          "3,000 Bugs",
          "Why did you join Test-first?",
          "A Quick Tour",
          "Section Overview",
          "Test-first Programming",
          "System Check",
          "System Check – Tools, links and commands"
        ],
        "Drive the Code": [
          "Overview",
          "Red-Green-Refactor",
          "Test Hello - Round 1",
          "Test Hello - Round 2",
          "Test Hello - Bonus",
          "Benefits of Red-Green-Refactor",
          "The 3 Rules of TDD",
          "Cheat Sheet - Test-first Setup",
          "Practice Challenge: Dog Age"
        ],
        "Ease into that first Test": [
          "Overview",
          "Average word length",
          "Average word length - The 1st Test",
          "The 1st test is the simplest",
          "The 1st test is the fastest",
          "The 1st test is about the What",
          "Tell the time",
          "Tell the time - The 1st Test",
          "Cheat Sheet - The 1st Test",
          "Cheat Sheet - Keyboard Shortcuts",
          "Cheat Sheet - Basic Shell Commands",
          "Practice Challenge: Name"
        ],
        "Uncover hidden Test Cases": [
          "Overview",
          "ZOMBIES",
          "ZOMBIES in Action",
          "Uncovering Leap Years",
          "Leap Years Uncovered",
          "When to apply ZOMBIES",
          "Cheat Sheet - ZOMBIES",
          "Practice Challenge: Average"
        ],
        "Make a good Case": [
          "Overview",
          "Making a good Case",
          "Equivalence Partitioning",
          "Partitioning Passwords",
          "Passwords Partitioned",
          "Cheat Sheet - Equivalence Partitioning",
          "Practice Challenge: Words"
        ],
        "Sound like a Test Native": [
          "Overview",
          "Matchers",
          "Expecting Numbers",
          "Expecting Strings",
          "Expecting Objects",
          "Expecting Arrays",
          "Expecting Errors",
          "Expecting Truthiness / Falseness",
          "Expecting Absence / Presence",
          "Expecting the Opposite",
          "Extending Matchers",
          "Menu - Matchers",
          "Practice Challenge: In Common"
        ],
        "Refactor like a Senior": [
          "Overview",
          "Refactoring is built-in",
          "Refactoring in Action - Midnight",
          "Refactoring in Action - Morning Hours",
          "Refactoring in Action - From AM to PM",
          "Refactoring in Action - Minutiae",
          "Refactoring in Action - Time is Over",
          "How to get better at Refactoring",
          "Menu - Refactorings",
          "Practice Challenge: Give Change"
        ],
        "Get more out of Test-first": [
          "Overview",
          "Organizing Tests",
          "Bring Your Own",
          "The 4 Phases of a Test",
          "Watch Mode",
          "Test-driven Debugging",
          "Test Lifecycle Hooks",
          "Wrapping Up",
          "Cheat Sheet - Jest",
          "Practice Challenge: Caesar Salad"
        ],
        "Succeed with Test-first": [
          "Overview",
          "Bug-fixing",
          "There are no Bugs",
          "Test-first falls with Anti-patterns",
          "Anti-patterns in Action",
          "Coverage Chasing",
          "Menu - Anti-patterns",
          "Practice Challenge: Net Promoter Score"
        ],
        "Master the Coding Exercise": [
          "Overview",
          "Benefits of using Test-first for Coding Exercises",
          "Ease into the Problem",
          "An Algorithm Emerges",
          "Performance Optimization",
          "When to avoid using Test-first for Coding Exercises",
          "Practice Challenge: Brace Yourself"
        ]
      },
      "requirements": [
        "You WILL need basic programming skills. What you'll learn in this program is independent of any programming language. But you should be able to read simple code written in a C-family language. In this program, we will be using basic JavaScript. If you're familiar with C, C++, Java, Python, Swift, Objective-C, PHP, Ruby, or any similar language, you will be fine.",
        "You WON'T need previous testing experience. In fact, many developers with some testing experience will have to \"unlearn\" bad habits. So if you don't know anything about testing, you will have an advantage.",
        "You WILL need a macOS, Linux, or Windows computer to code along and for the exercises. We'll set up the development environment together at the beginning of the course.",
        "You WILL need a decent internet connection to watch the course videos and download the libraries and tools we will use in this course."
      ],
      "description": "Master the Art of Test-first Programming (TDD) and learn how to drive Clean Code development with Automated Unit Tests.\n\nDOES THIS SOUND FAMILIAR:\nBecoming a developer can be very painful in the beginning. And being a more experienced software engineer can still be a frustrating experience (so keep on reading – even if you already have some previous testing experience).\n\n\nBeing confronted with a new programming problem is scary. Some of us even start to panic a bit when we think about our last encounter.\n\n\n\"I don't want to feel like this ever again.\"\n\n\nInitially, we have no clue how to start. There are so many details and edge cases to juggle around. So we write a for-loop here and an if-statement there.\nWas there not this Array function? We've used it only once in our training, so we open up the documentation and give it a read. No, not this one. Maybe this one...\nWhen we finally get back to our main problem, we realize that we have totally lost track. We struggle to make sense of the code we wrote just a few minutes ago.\nSo we try to pass a callback here and write another if-statement there...\n\n\n\"NOTHING F***ING WORKS!!!\"\n\n\nAfter being stuck for hours, we realize there is no way around it: We have to ask the more experienced software engineer for help... again...\nThe colleague looks at our code for a few seconds. Then he takes his glasses off, puts the index fingers to his temple, closes his eyes, and sighs.\n\n\nI could hear my OWN code turn on me and whisper: \"JUNIOR!!\"\n\n\nFrom the perspective of the experienced software engineer the whole situation looks a bit different:\nWe are actually just tired.\nWe've just finished this User Story that has been dragging on for weeks. Yesterday, we finally managed to weed out all the bugs (that we knew of), but then the damn feature somehow stopped working altogether. We've spent the whole morning trying to figure out why.\nBut we are not surprised; the codebase of this project is a big mess. Rewriting the whole thing would be nice. But that's never going to happen. Multiple times we asked for a Refactoring Sprint, but just last week, the Product Owner postponed it indefinitely.\nAnyway, it's only lunchtime, and we feel completely drained already. But we have to pull through. It's Friday, and we have to ship the new feature tonight.\nAfter helping this Junior, we will have to fix all the broken tests for our new feature. And the continuous integration pipeline will probably nag us again anyway. We will likely have to add a few more tests here and there.\nAnd we will certainly not re-open this annoying and endless discussion about code coverage again.\n\n\n\"I f***ing hate writing tests!\"\n\n\nWHY WRITING TESTS AT THE END IS SO PAINFUL\nMost developers write tests AFTER they are done implementing the solution. They write tests last rather than first.\nI've been a Test-last Programmer myself for many years, and I know that writing tests at the end is an excruciating process.\nBy the way, trying to learn how to write tests by writing them at the end is even worse.\nYes, you can pick it up on the job, as most developers do. But:\n\n\nLearning how to write tests by writing them at the end is actually the hardest possible way there is.\n\n\nIt's like trying to run a 42 km marathon without any prior training and preparation – it's possible, but you will either give up long before reaching the finish line or wish you were dead most of the way.\n\n\nHere are 3 reasons why writing tests at the end is so painful:\n\n\n1) The code is simply not testable\nThe code is usually not written with testability in mind and is untestable without rewriting it first.\nOne reason is that Test-last Developers have no system that encourages them to improve the solution along the way - before it grows too complex.\nAnd having to work in a codebase where most files have hundreds of lines of code is really exhausting. Sometimes it seems like seniority is defined by: \"how long it takes before you run out of battery.\" Can you make it until lunchtime already?\n\n\n2) Writing tests at the end is not fun\nIt's not very encouraging having to add tests when you're actually done with the task. You've solved the problem the hard way already – without the safety net preventing you from breaking things that worked already.\nThe last thing you want to do now is to write a bunch of tests. You know that your code works. You tested it manually already. You remember well because you had to restart the app multiple times. Each time you had to wait a minute, and you had to click through to the button that triggered the functionality you were working on.\nI've never heard a test-last developer say on a Friday night: \"Don't wait for me; I'll join you later. I will just finish writing these tests.\"\n\n\n3) They simply don't know how to write good tests\nMost developers have never learned how to distinguish a good from a bad test.\nOften, I see lousy tests that don't provide any helpful information once they start to fail. These tests have poor names, or they test too many things at once.\nMany tests are written with the goal of covering as many lines of code as possible – the result: Tests that are tightly coupled to the implementation. Changing or cleaning up the code breaks the tests – even if the algorithm is still valid.\nHaving to fix hundreds of tests after making some transparent code changes is annoying – another chore. Refactoring is further discouraged. Over time, the codebase deteriorates into a nightmare.\n\nBut what if I told you that there is a killer skill you can start learning today?\n\n\nA skill that - once mastered - can make all the above problems go away...\n\n\nImagine you and your teammates standing in a row, facing your manager.\nThe manager says: \"I have a super challenging problem to crack for one of you. Volunteers, step forward!\"\nBefore you know it, all your teammates take a step back. These weasels just volunteered you.\nBut no problem. You stay super cool. You even smile a bit.\nYou sit down at your desk, you read the requirements, and within a few seconds, you're writing your first line of code.\nWith every minute that passes, your algorithm matures into a solution, and you are confident it can handle all the edge cases.\nYou lean back to inspect the result. Yes, that is beautiful, self-explanatory code. You can almost hear how it speaks to you.\nYou call your colleague over for a code review. He looks at your code for a few seconds and drops his jaw. Then, he turns his face to you, smiles, and asks: \"Can you show me how you did that?\"\n\n\nThere is, in fact, such a killer skill.\n\n\nIt's called...\n\n\nTest-first Programming\n\n\nTest-first Programming (a.k.a. Test-driven Development or TDD) is a counter-intuitive but fun practice that lets you solve any coding problem step-by-step with clean, elegant code.\n\n\nAt its core, the practice boils down to these 3 simple steps:\n\n\nWrite a simple test\nMake that test pass\nClean up the code\n\n\nWash, rinse, repeat.\n\n\n\"How do you eat an elephant? One bite at a time!\"\n\n\nA SAFETY NET OF TESTS\n\n\nMost developers approach programming like free solo rock climbers – they code without any safety equipment.\n\n\nI think that's funny because:\n\n\nMost mountaineers approach climbing like Test-first Programmers – they don't climb without safety equipment.\n\n\nWhen a free solo climber slips while climbing up the 3,000 feet tall wall of El Capitan in Yosemite National Park, that's it. No more climbing. No more anything.\nThe majority of professional mountaineers, however, use ropes and create anchors along the way.\nWhen they slip, they don't usually fall to their death. Instead, they only fall a few feet until the last anchor catches them.\nWriting tests as you navigate your way toward a solution is a bit like climbing a mountain with ropes and anchors.\n\n\nA mountaineer climbs a mountain step-by-step and installs anchors along the way.\nA Test-first Programmer solves a problem step-by-step and writes tests along the way.\n\n\nWhen a mountaineer faces a difficult stretch of wall, they can be confident that the system of rope and anchors will catch them.\nWhen a Test-first Programmer faces a difficult requirement or some code that needs to be refactored first, they can be confident that the safety net of tests prevents them from breaking things that worked already.\n\n\nA mountaineer sometimes gets tired. Or they miscalculate a move, lose grip, and slip. No problem. They get caught by the closest anchor. Then they rest, reflect, and try it again.\nA Test-first Programmer sometimes doesn't see that changing this one statement doesn't work for one edge case. The corresponding test starts to fail. So the Test-first Programmer reverts the last change, reflects, and tries it differently.\n\n\nWith Test-first Programming, you can even pause solving the problem at any point in time. Then, when you come back the next day, you have a set of tests that tell you exactly where you left off.\nAnd as long as the tests pass, you can be confident that your solution works as expected. No more slipping back.\n\n\n\"TDD is like having a ratchet that lets you save your progress, take a break, and make sure you never slip backwards. That way you don't have to be smart all the time.\" ― Harry Percival\n\n\nIntroducing...\n\n\nTEST-FIRST\n\n\nA one-of-a-kind online program that gives you the complete system to driving Clean Code development with Automated Unit Tests.\n\n\nIn this self-paced online course, you will learn Test-first Programming – a high-in-demand development approach that is so much more than just writing tests.\nTest-first is full of actionable advice, techniques, and tips that will get you started in seconds and make you write code that works. You will learn how to approach complex problems confidently and refactor your code into clean, elegant solutions.\nNo more getting stuck for hours. No more guessing around what to do next. Your peers and managers will appreciate the high quality of your work.\n\n\nHERE'S A SELECTION OF WHAT YOU CAN EXPECT\nThe complete system to solve any coding problem step-by-step\nA technique to get started in seconds – even if you haven't understood all details of the problem yet\nHow to turn lousy tests into maintainable test cases that tell a story\n50 Refactoring Patterns you can use on a daily basis to keep your code clean\nWatch me refactor a complex algorithm step-by-step and learn to apply the methods in your everyday life\nThe secret to uncovering missing test cases so that you will always know what to do next\nHow to use Test-first Programming to impress managers and your peers\n9 Practice Challenges with solutions to help you reinforce and fine-tune your new skills\nAnd so much more…\n\n\nWITH TEST-FIRST, YOU WILL LEARN HOW TO...\nApproach problems with confidence\nRequirements can be confusing. By approaching complex problems test-first, you will be able to uncover a solution step-by-step. Instead of being scared of working on new stuff, you'll be excited to pick up a new challenge.\nGet started in seconds\nToo many requirements can be overwhelming, and we often struggle with finding the right starting point. In this program, you will learn how to get started within seconds, even if some of the requirements are still unclear to you.\nAlways know what to do next\nSometimes we get side-tracked or lost. With Test-first Programming, you will get stuck less often. I will show you a system you can use to uncover the next steps. You will stay on track, and you will altogether get to the solution faster.\nCreate code that works\nWriting a test first makes you think harder about the problem you are solving. This significantly reduces the chance of introducing new bugs. You'll also build a safety net of tests that will protect you from breaking things.\nWrite clean, elegant code\nTest-first Programming is not just about writing tests. It's about creating elegant solutions to your problem. Refactoring your code into a self-explaining clean solution is built into the system.\nImpress management and peers\nTesting skills are in high demand, and your fellow developers will appreciate the high quality of your work and even ask you for support when it comes to writing tests.\n\n\nHOW TEST-FIRST IS DIFFERENT FROM OTHER TDD COURSES\nMost developers struggle with or have given up asking the following common questions:\nWhat test should I write first?\nHave I missed something?\nIs that a good test case?\nWhat should I test next?\nIs that actually good code?\nAnd most courses on test automation do not provide answers to these questions. The result is that developers give up on writing tests.\nAnd even if they write tests after implementing a feature - they will end up with a less elegant solution. Over time, the codebase will become a nightmare, and developers will not enjoy coding as much as they used to.\nIn this program, I provide answers to all the questions above so that you can actually enjoy writing tests, be more productive and, as a result, be more satisfied at work.\n\n\nIT'S NOT JUST ABOUT WRITING TESTS\nOur primary goal as developers is to solve problems for actual end-users.\nAnd with a Test-first approach, we can divide these problems into smaller ones and tackle these easier problems one by one.\nBut Test-first Programming is not just about solving problems and writing tests.\nEvery minute we spend on writing code also comes with 10 to 100 minutes spent on reading code ― reading code of other developers and code we've written ourselves in the past.\nOur secondary goal must therefore be to write clean and maintainable code.\n\n\n\"Code is read 10-100x more often than it is written.\"\n\n\nFor instance, having to dig through files with hundreds of lines of code slows us down – and it is super tiring. But refactoring our code regularly will save a lot of time in the future when something needs to be changed or fixed.\nAnd here's the good news:\nTest-first has Refactoring built-in\nTest-first Programmers refactor all the time. It is not an afterthought. That's why in this program, you will not only learn how to write tests but also how to clean up your solutions.\nIf refactoring has always been somewhat intangible for you, you'll love this course. I'll cover 50 Refactoring Patterns and Clean Code Principles, and I'll show you how to apply them.\n\n\nHOW DOES TEST-FIRST WORK?\nTest-first is an online course that will allow you to master Test-first Programming in your own time and on your terms.\nYou don't need to be a senior developer to master Test-first Programming. Everyone can learn it!\nI've actually seen junior developers producing better solutions in less time with a Test-first approach than senior developers trying to solve the same problem free-style without writing tests along the way.\n\n\n\"I'm not a great programmer; I'm just a good programmer with great habits.\" ― Kent Beck\n\n\nThe curriculum of Test-first is structured into 10 sections – each taking you a step closer to becoming a Test-first programmer:\n\n\nSection 1: Get started\nIn the first section, we will ensure you have everything you need. We will set up your code editor and the runtime environment.\nSection 2: Drive the Code\nOnce everything is set up, we will shine a light on how to write tests before writing any production code. Learn about fundamentals like the Red-Green-Refactor Loop and the 3 Rules of TDD.\nSection 3: Ease into that first Test\nEspecially the first test is tough for most people new to Test-first Programming. Learn how to turn the first test into a no-brainer and finish it within less than 5 minutes.\nSection 4: Uncover hidden Test Cases\nOnce the first test is written, we often struggle with the question: \"What to test next?\" In this section, we will get some unexpected help from ZOMBIES. They will help us identify missing test cases.\nSection 5: Make a good Case\nIn the next section, we will learn how to distinguish lousy test cases from good test cases. Then we will use Equivalence Partitioning to figure out whether we have tested enough.\nSection 6: Sound like a Test Native\nTests are about expressing expectations. If your vocabulary is limited, you will sound like a fool. Learn how to use Matchers right and start sounding more like a pro.\nSection 7: Refactor like a Senior\nRefactoring is built into Test-first Programming. This section will explore a few clean code principles and refactoring patterns that will help you write better code.\nSection 8: Get more out of Test-first\nIn this section, we will explore more advanced test framework features that will make your test-driven life easier.\nSection 9: Succeed with Test-first\nIt takes only 5 minutes to understand the 3 rules of TDD. Yet, most developers who try Test-first Programming give up after a while. Here, we will learn how to avoid most of the common anti-patterns and succeed with Test-first.\nSection 10: Master the Coding Exercise\nHave you ever considered using Test-first Programming for Coding Exercises? You should! Learn in this last section how to get the most out of doing Coding Exercises.\n\n\nTHE JOURNEY IS THE REWARD\nTest-first Programming is an incremental process and impossible to master by just studying the final code. This program comes with over 6 hours of carefully edited videos that will allow you to follow every step of the test-driven thought process.\nIn Section 2 – Drive the Code, you will find a little sneak peek. You can watch the lecture \"Test Hello – Round 2\" right now.\n\n\nAND THAT'S NOT ALL!\nEvery section also comes with the following:\nCheat Sheets\nI've created handy cheat sheets for you to download. Use them as a quick reference while you are taking your first steps as a test-driven developer.\nMenus\nSometimes you have many options – and when you need to pick one, none comes to your mind. Take refactoring patterns, for instance. There are just so many things you can refactor. With the Menus I've added, you can see all your options at one glance, pick one, and dive right into a more detailed description with helpful examples.\nPractice Challenges\nTest-first Programming is a rewarding skill that requires practice. That's why I've added tons of coding exercises for you to reinforce the techniques learned in this program.\n\n\nHERE'S WHAT PEOPLE WHO HAVE BEEN THROUGH THE BETA PROGRAM SAY:\n\"I finally managed to secure a position as a web developer. Later, I found out that I got the job because they were impressed by my testing skills. They wanted ME – a junior developer – to show THEM how to get started with writing tests.\" — Dominika\n\"I consider the ZOMBIES technique my biggest takeaway from David's course. After applying TDD in my work, I could feel more safe and secure that any changes I make are not breaking existing functionality in my application and this feeling is a huge win.\" — Judit\n\"I've done multiple online courses to teach me how to write test first, but most of them just cover Red-Green-Refactor, and I continued to struggle with writing tests at work. This course gave me not only an answer as to what to test first & how, but it also opened my eyes with regards to why writing tests last sucks so much. Hands down the best TDD course you can find online.\" — Eric\n\n\nIS TEST-FIRST RIGHT FOR YOU?\n\n\nThis course IS for software engineers of all levels with and without previous testing experience. The motivation for taking this course, however, will be different depending on your individual situation:\n\n\nTest-first IS for you if...\nYou're struggling with solving coding problems\nSuccessful developers do not cook up working solutions in their brains. No, they solve problems systematically - one step after another.\nTest-first is a system that was invented for precisely that purpose. And everyone with some basic programming experience can learn it.\nLearn how to divide a problem into smaller chunks and solve these more digestible problems one at a time.\nYou're uncertain if your code changes are any good or free of bugs\nAre you 100% sure that your code works? Can it handle all the important edge cases? Is your code clean and maintainable? Are you confident that you didn't break anything?\nIf your answer to any of these questions is not a clear YES!, you will benefit from learning Test-first Programming.\nYou'll learn how to build a safety net that will give you confidence that things work as expected and protect you from breaking things. And you'll learn how to refactor your code into simple, self-explanatory solutions.\nYou planned to get into writing tests anyway\nThat's perfect. Test-first is actually the best way of learning how to write tests. You can start fresh and not have to unlearn bad habits. You are like a raw diamond that waits to be cut and polished.\nTrying to test existing code that is not written with testability in mind is actually the worst-case scenario a developer can face. It's super hard. Learning to write tests by writing them first is much easier.\nYou're already struggling with writing tests\nDo I need to test that? What should I test first? What should I test next? Is that a good test? Have I tested enough?\nMany developers hate writing tests. But writing tests can actually be fun - if you learn to do it right. Most of the problems developers have with writing tests originate from writing the tests after finishing the feature.\nWrite tests first, and everyday obstacles around testing will simply disappear.\nYou already tried writing tests first and gave up\nMost developers who gave up Test-first Programming never learned to do it properly. Usually, it is bad habits and anti-patterns that need to be blamed.\nGive Test-driven development another chance and learn how to do it right. Learn how to write testable code. Learn which tests are required and which aren't. Learn how to write good tests that make refactoring easier rather than harder. No more discussions about code coverage. No more: \"I still need to add these missing tests.\"\n\n\nTest-first is NOT for you if...\nYou're looking for an overnight solution\nTest-first is a combination of techniques that require practice. You will not master Test-first Programming by just watching the videos. That's why I've added tons of practice challenges. I recommend you invest at least 2 hours per week (more if you can).\nYou struggle to understand the code block below\nWhat you'll learn in this program is independent of any programming language. But you should be able to read simple code written in a C-family language. In this program, we will be using basic JavaScript. You will be fine if you're familiar with C, C++, Java, Python, Swift, Objective-C, PHP, Ruby, or any similar language.\nYou're simply looking for a tutorial on how to use test framework X or Y\nThis program is not about a specific library or framework. Yes, you will learn how to use many of the features that come with most test frameworks. But that's more like a side-effect of learning how to write tests first.\nTest-first Programming is a development approach that goes way beyond just writing tests. It's about writing clean, maintainable code that works. The incremental process involves continuous refactoring as well as deliberately applying software engineering principles.\n\n\nWHAT TYPE OF PROGRAMMER DO YOU WANT TO BE?\nIn the end, it boils down to the question of who you want to be...\n\n\nA Free Solo Programmer who writes more code than necessary, treats refactoring as an afterthought, and loses precious time debugging silly mistakes?\nOr a Test-first Programmer who solves complex problems efficiently step-by-step and continuously refactors the solution into Clean Code?\n\n\nAre you ready to take your coding skills to the next level?\n\n\nTHEN JOIN TEST-FIRST NOW\n\n\nFREQUENTLY ASKED QUESTIONS (FAQ)\nI just started off as a developer. Is this course right for me?\nYes. Learning Test-first Programming becomes, in fact, harder the more experience you gain without it. With a traditional approach, we tend to think too complicated. But once you've rewired your brain with a test-first mindset, you will appreciate how simple software engineering can be.\nI have not found a job yet. Should I join this course and learn Test-first Programming?\nYes. And mention your new skill on your CV. I also recommend approaching coding exercises test-first (there's a whole section about how to do just that). Test automation skills are in high demand. Some of my students could secure a job because they had testing skills, and other candidates didn't.\nDo I need to know how to write tests before joining this course?\nNo. Writing tests is one thing you will learn in this course.\nIs there a difference between Test-first Programming and Test-driven Development (TDD)?\nThat depends on who you ask. The term Test-driven Development or TDD is a bit overloaded and often refers to writing automated tests in general (not necessarily first). Test-first Programming, however, is always about writing the test first.\nDo I need to know any particular programming language?\nNo. The techniques I will teach you in this course are independent of any programming language.\nBut you'll need to bring some basic understanding of procedural programming. You should, for example, be familiar with concepts like functions, arguments, return values, variables, if/else statements, and loops.\nWe will use JavaScript, a language of the C-family. So if you're familiar with C, C++, Java, Python, Swift, Objective-C, PHP, Ruby, or any similar language, you will be good to go.\nDo I need to know any frontend, backend, or testing frameworks?\nNo. The concepts you are going to learn are independent of any frameworks. We will learn Test-first Programming using Jest, but there is no need for you to know it already.\nAre there any hardware or software requirements?\nYes. You'll need a computer with an up-to-date operating system capable of running your preferred code editor — everything else we will set up together at the beginning of the course.\nHow is Test-first different from other courses on the market?\nI am not aware of any course that goes beyond the basics. Many developers give up Test-first Programming after a while because they do not fully comprehend how it actually works. They skip necessary steps, repeat common mistakes, and fall back into bad habits. I have observed dozens of test anti-patterns, and I've covered all of them in this course so that you can succeed.\nI don't have time. How do I know this is going to work for me?\nThis course is self-paced, and you'll have unlimited access. I recommend you invest at least two hours per week into learning Test-first Programming. You will almost certainly not master Test-first Programming by just watching the videos. That's why I've added 9 practice challenges for you to fine-tune your new skill.\nI already write tests, but not test-first. Is this course right for me?\nIf writing tests is painful or cumbersome for you, yes. Writing tests after you finish the implementation is usually more challenging. This is because the code has not been refactored continuously and is often not testable without adjustments.\nOur project's code coverage is pretty good. Is this course right for me?\nIf writing tests is painful or cumbersome for you, yes. Test-first is not about code coverage. It's primarily about writing cleaner, more maintainable code that works.\nI am not sure if my team would enjoy writing tests first. Should I join anyway?\nYes, you'll undoubtedly benefit from a system that makes solving coding problems easier. And discovering solutions test-first is less stressful and can actually be more fun.\nMy team/manager is against writing tests. Should I join anyway?\nYes! And once you have mastered it, tell them how it changed your life as a developer. ALL successful software companies use test automation to stay competitive long-term.\nI tried writing tests first and gave up. Why should it be different this time?\nMost developers who tried Test-first Programming and gave up could not follow 3 simple rules or fell back into old habits. It's a matter of discipline and awareness of the common red flags. That's why I cover 30 common test anti-patterns in my course.\nI hate writing tests. Why should that change?\nBecause chances are good that you're currently doing it the hard way. Writing tests at the end is one of the hardest things imaginable. The code is not written with testability in mind and needs to be adjusted first. Writing tests first leads to simpler, cleaner code that is much easier to work with.\nI heard that TDD slows you down. Why should I learn it then?\nThat's not true. With Test-first, you will actually be able to ship more features. There are plenty of reasons for that. You'll work, for instance, on a much cleaner codebase all the time. Another reason is that you will have to spend less time fixing bugs.\nWill this course teach me how to write Unit Tests?\nYes. And you will learn how to tell a lousy Unit Test from a good one.\nHow long does this course take?\nThere's no time limit. You'll get full access to all sections and practice challenges on day one. It really depends on how much time you're willing to invest per week. Let's say you can invest one hour a day; then, it will take you at least two weeks to work through all the material.\n\n\nHERE ARE A FEW MORE RESULTS FROM TEST-FIRST BETA STUDENTS:\n\"My biggest win from this course was that I got a solid understanding, a blueprint if you will, of how I can build applications in the future. Also I am now able to better answer questions about testing and clean code in interviews.\" — Alexis\n\"Thanks to David I now know exactly what to test and when I have tested enough. I've learned to work my way from simple test cases to difficult ones, which helped me get much faster.\" — Alina\n\"I used to find writing tests daunting. But now it's not so scary anymore. During code reviews, I can even make useful suggestions on how to improve the tests written by our senior team members.\" — Veronica\n\n\n9 OUT OF 10 JOBS REQUIRE YOU TO BRING TESTING SKILLS\nAll successful software companies expect their developers to write automated tests. It's just not sustainable to have expensive developers test the app manually all the time – or worse, to let end-users beta-test the product.\nA safety net of hundreds or thousands of automated tests can be executed quickly at any time. This is essential for any team that does not want to lose momentum when shipping features:\nAnd Test-first Programmers are even better off than Test-last Programmers who write the tests for a feature after the feature is finished. The reason is that Test-first Programmers refactor continuously while implementing the feature.\nThe result: Less code, cleaner code, better tests, fewer bugs. And this, in turn, allows Test-first Programmers to ship more features over time.\n\n\nNO MORE CHOKING\nRemember, Test-first Programming is not just about tests. It's primarily a technique to solve problems step-by-step.\nAs a Test-first Programmer, you don't have to \"swallow\" the whole problem in one piece (and potentially choke on it). Instead, you can \"chew\" your way to a working solution one bite at a time.\nAnd you will have to spend less time debugging. Thanks to the safety net of tests, you'll immediately notice when you're about to break something. Should you ever take a wrong step, you can just undo whatever you did in the last couple of minutes and try a different approach.\n\n\nJOIN TEST-FIRST NOW",
      "target_audience": [
        "This course IS for SOFTWARE ENGINEERS of ALL LEVELS with AND without previous testing experience. The motivation for taking this course, however, will be different depending on your individual situation:",
        "This course IS for you if you're struggling with solving coding problems. Successful developers do not cook up working solutions in their brains. No, they solve problems systematically – one step after another. Test-first is a system that was invented for precisely that purpose. And everyone with some basic programming experience can learn it. Learn how to divide a problem into smaller chunks and solve these more digestible problems one at a time.",
        "This course IS for you if you already tried writing tests first and gave up. Most developers who gave up Test-first Programming never learned to do it properly. Usually, it is bad habits and anti-patterns that need to be blamed. Give Test-driven development another chance and learn how to do it right. Learn how to write testable code. Learn which tests are required and which aren't. Learn how to write good tests that make refactoring easier rather than harder. No more discussions about code coverage. No more: \"I still need to add these missing tests.\"",
        "This course IS for you if you're uncertain if your code changes are any good or free of bugs. Are you 100% sure that your code works? Can it handle all the important edge cases? Is your code clean and maintainable? Are you confident that you didn't break anything? If your answer to any of these questions is not a clear YES!, you will benefit from learning Test-first Programming. You'll learn how to build a safety net that will give you confidence that things work as expected and protect you from breaking things. And you'll learn how to refactor your code into simple, self-explanatory solutions.",
        "This course IS for you if you're already struggling with writing tests. Do I need to test that? What should I test first? What should I test next? Is that a good test? Have I tested enough? Many developers hate writing tests. But writing tests can actually be fun – if you learn to do it right. Most of the problems developers have with writing tests originate from writing the tests after finishing the feature. Write tests first, and everyday obstacles around testing will simply disappear.",
        "This course IS for you if you plan to get into writing tests anyway. That's perfect. Test-first is actually the best way of learning how to write tests. You can start fresh, and you will not have to unlearn bad habits. You are like a raw diamond that waits to be cut and polished. Trying to test existing code that is not written with testability in mind is actually the worst-case scenario a developer can face. It's super hard. Learning to write tests by writing them first is much easier.",
        "This course IS for you if your job is no longer fun. Perhaps you have to work with a terrible codebase. Code files have hundreds of lines of code. Basic clean code principles are violated everywhere. You are afraid of breaking things by accident. Adding even simple features has become an energy-draining task. New bugs pop up all the time, and you are dreading the next release date already. Despite not accomplishing much, you feel stressed... If that sounds familiar, then Test-first Programming is for you. Creating a safety net of tests and refactoring the code is built right into the process, not an afterthought. The code will always be clean, and adding new features will be easy and fun again.",
        "This course is NOT for you if you're looking for an overnight solution. Test-first is a combination of techniques that require practice. You will not master Test-first Programming by just watching the videos. That's why I've added tons of practice challenges. I recommend you invest at least 2 hours per week (more if you can).",
        "This course is NOT for you if you're simply looking for a tutorial on how to use test framework X or Y. This program is not about a specific library or framework. Yes, you will learn how to use Jest and the many features that come with most test frameworks. But that's more like a side-effect of learning how to write tests first. Test-first Programming is a development approach that goes way beyond just writing tests. It's about writing clean, maintainable code that works. The incremental process involves continuous refactoring as well as deliberately applying software engineering principles."
      ]
    },
    {
      "title": "React Testing Library with Jest / Vitest",
      "url": "https://www.udemy.com/course/react-testing-library/",
      "bio": "Learn best practices for testing your apps with Jest / Vitest and React Testing Library. All code written via TDD!",
      "objectives": [
        "Testing simple and complex React applications with React Testing Library",
        "React Testing best Practices: how to test behavior instead of implementation",
        "Making the most of Jest watch mode, including running only one file or test at a time",
        "Common errors returned by Testing Library and how to correct them",
        "Test-Driven Development: writing tests alongside production code, to ensure thorough test coverage"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to React Testing Library and Jest / Vitest",
          "Link to course GitHub repo",
          "First Test with Testing Library",
          "Jest and Jest-DOM Assertions",
          "Jest and Vitest: How Tests Work",
          "TDD: Test Driven Development",
          "React Testing Library Philosophy",
          "Functional Testing vs Unit Testing",
          "TDD (Test Driven Development) vs BDD (Behavior Driven Development)",
          "Testing Library and Accessibility",
          "RESOURCE: Where to find code if you'd rather not write React for this course"
        ],
        "Simple App: Color Button": [
          "Overall Course Plan",
          "Start Color Button App",
          "`logRoles` method for debugging roles",
          "Test Behavior when Clicking Button",
          "OPTIONAL React Code: Click Button to Change Color",
          "Manual Acceptance Testing",
          "Test Initial Condition of Button and Checkbox",
          "Introduction to Code Quizzes",
          "Code Quiz! Confirm Button Disable on Checkbox Check",
          "Code Quiz Solution: Confirm Button Disable on Checkbox Check",
          "Code Quiz! Disabled Button Turns Gray",
          "Unit Testing Functions",
          "Code Quiz! Update Tests for New Color Names",
          "When to Unit Test",
          "Review: Simple App"
        ],
        "ESLint with Testing Library, plus Prettier": [
          "ESLint and Prettier",
          "ESLint for Testing Library, Jest-DOM and Vitest",
          "Configuring ESLint and Prettier in VSCode"
        ],
        "Sundaes On Demand: Form Review and Popover": [
          "Introduction to Sundaes on Demand",
          "WARNING: VSCode may look different!",
          "Code Organization and Introduction to SummaryForm",
          "Code Quiz: Checkbox Enables Button",
          "OPTIONAL React Code: SummaryForm Checkbox and Button",
          "React Bootstrap Popover and Testing Library userEvent",
          "Replace `fireEvent` with `userEvent`",
          "Screen Query Methods",
          "Testing Element is Not on Page: Popover Tests",
          "OPTIONAL React Code: Popover",
          "Review: Summary Form"
        ],
        "Simulating Server Response with Mock Service Worker": [
          "OrderEntry Server Data Introduction",
          "Introduction to Mock Service Worker and Handlers",
          "Why not mock axios using Jest / Vitest?",
          "Setting up the Mock Service Worker Server",
          "Tests with Mock Service Worker: Scoop Options",
          "TROUBLESHOOTING: \"ReferenceError: Response is not defined\"",
          "OPTIONAL React Code: Options and ScoopOption Components",
          "Using `await findBy` to Find Elements that Populate Asynchronously",
          "Code Quiz! Topping Options from Server",
          "Error Server Response Planning",
          "Simulating Server Error Response in Tests",
          "OPTIONAL React Code: Alert Banner for Options Server Error",
          "Tools for Debugging Tests",
          "OPTIONAL: Why doesn't \"name\" work with the role \"alert\"?",
          "Review: Server Error Response and Test Debugging Tools"
        ],
        "Testing Components Wrapped in a Provider": [
          "Intro to Tests for Total and Subtotals",
          "Entering Text Input: Subtotal Tests",
          "OPTIONAL React Code: OrderDetails Context",
          "OPTIONAL React Code: Use Context to Display Scoops Subtotal",
          "Adding Context to Test Setup",
          "Creating Custom Render to Wrap in Provider By Default",
          "Review: Scoops Subtotal with Context",
          "Code Quiz! Toppings Subtotal",
          "OPTIONAL React Code: Toppings Checkboxes",
          "Note on expected warning in the next lecture",
          "Code Quiz! Grand Total",
          "OPTIONAL: \"Not wrapped in act()...\" Warning",
          "OPTIONAL: Why is the explicit unmount needed",
          "Manual Acceptance Testing"
        ],
        "Final Exam: Order Phases": [
          "Introduction to Final Exam: Order Phases",
          "Tips for the new MSW Handler",
          "Debugging Tips",
          "OPTIONAL React Hints for Order Phase Coding",
          "NOTE: outdated code in the next lecture",
          "Final Exam Solution",
          "OPTIONAL React Code: Order Phases",
          "Review: Final Exam, and Introduction to Optional Practice",
          "Common Mistakes with React Testing Library"
        ],
        "Optional Extra Practice": [
          "Standard Questions for New Tests and Introduction to Exercises",
          "Conditional Toppings Section on Summary Page",
          "UPDATE: Next lecture references `jest.fn()`",
          "Disable Order Button if No Scoops Ordered",
          "Red Input Box for Invalid Scoop Count",
          "No Scoops Subtotal Update for Invalid Scoop Count",
          "Server Error on Order Confirmation Page",
          "Congratulations and Thank You!"
        ],
        "Bonus": [
          "Coupons!"
        ]
      },
      "requirements": [
        "Experience with JavaScript",
        "Basic experience with React",
        "Familiarity with React hooks and context (these are explained briefly in optional React portions of the course; however previous experience would be helpful)"
      ],
      "description": "Major course updates in November 2023!\nProjects are written in Vite, a lightweight and lightning-fast base for React apps\nProjects use Vitest, a test framework that's much faster than Jest\nNote: Vitest code syntax is identical to Jest; all code presented in the course works with both Vitest and Jest.\nThe course presents Mock Service Worker v2 syntax, which was released in October 2023.\n\n\nReact Testing Library has become an extremely popular option for testing React, and with good reason! This detailed, comprehensive course provides a solid foundation for React app tests.\n\nBest Practices\nReact Testing Library is famously opinionated about testing best practices, and is written to encourage these best practices. This course teaches:\ntesting behavior over testing implementation\ntests that interact with your app the way a user would\nfinding elements by accessibility handles, to make sure your code is accessible as possible\nBroad range of testing examples\nThe course apps start very with very simple examples (clicking a button to change its color) and work up to progressively more complicated testing concepts, such as:\ntesting asynchronous page changes\nsimulating data from a server using Mock Service Worker\napplying a context provider to a component when rendering\nThe course builds up to complex concepts gradually, in a way designed to support your learning and ensure your success.\nPractice your new skills\nYou will also have plenty of opportunities to practice what you’ve learned. The course provides \"code quizzes\" while building the course projects, where you can apply what you learned and then watch a video to see the solution. The (optional) final section provides even more exercises to complete the second app and reinforce concepts from the course.\nOptional React lectures\nAny significant React code covered in the course is isolated into separate lectures. Students have a choice: those who want to reinforce their React skills (or learn new ones!) can watch those lectures, while students who feel confident in their React skills can skip them.\nSupportive Instructor\nThe instructor has a proven track record of responding to course Q&A in a helpful and supportive way. She loves to engage with students, answer questions about course concepts, and help debug students' code for the course projects.",
      "target_audience": [
        "React coders who want to learn how to write functional tests for their apps",
        "React application engineers who want confidence that writing code doesn't break existing behavior (tests, for the win!)"
      ]
    },
    {
      "title": "Build Automated workflows & connect your apps to each other",
      "url": "https://www.udemy.com/course/zapier-imacros-build-automated-workflows-connect-your-app-automate-web/",
      "bio": "Fast, scalable, professional web automation, Master the fundamentals of browser automation using Zapier.",
      "objectives": [
        "What is automated workflows",
        "How automated workflows can save your time",
        "How automated workflows can save your effort",
        "How automated workflows can save your money",
        "How to create automated workflows",
        "Maximize your productivity with multi-step Automation tasks",
        "Find data in your apps with search actions",
        "Filters: Set conditions for your Automation tasks",
        "Harness the power of Automation using built-in apps",
        "Explore your Task history and troubleshoot Automation"
      ],
      "course_content": {
        "Introduction and Getting Started": [
          "Introduction",
          "Identifying Manual Tasks That Could Be Automated",
          "What is Zapier",
          "Some Examples of Automated Tasks",
          "Introduction to Automation with Zapier",
          "Exploring Automation with Zapier"
        ],
        "Automation Terms": [
          "Terms you need to know",
          "Understanding Key Automation Terms"
        ],
        "Sign Up": [
          "Sign Up to Automate Apps",
          "Setting Up Your Zapier Account"
        ],
        "Apps Connection": [
          "Connect Your Apps before You Automate",
          "Understanding Key Automation Terms"
        ],
        "Automation Templates": [
          "How to use Automation Templates",
          "Using Automation Templates for Faster Setup"
        ],
        "Custom Automation": [
          "How to Automate a customized web task",
          "Building Custom WorkflowsBuilding Custom Workflows"
        ],
        "iMacros Browser Automation": [
          "What is iMacros",
          "What can you do with iMacros",
          "Download and Install iMacros",
          "Introduction to iMacros for Automation",
          "iMacros User Interface Explained",
          "First Simple Automation",
          "Important Functions",
          "iMacros User Interface and Basic Automation",
          "Instagram Mass Follower Automation",
          "Extract Images",
          "Automating Web Tasks with iMacros"
        ],
        "Practice Test": [
          "Automation with Zapier and iMacros Practice Test"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "More about us": [
          "Educational Engineering Team - Who we are?"
        ]
      },
      "requirements": [
        "Internet Connection"
      ],
      "description": "Why you should Automate?\nAutomated workflows are a more efficient way to complete tasks, offering the ability to easily prioritize tasks and delegate work. They can reduce errors, save time and money, and be monitored remotely, increasing accountability and mitigating mistakes. Automation provides higher quality standards, time savings, increased productivity, accuracy, and efficiency for team members.\nWhat You Will Learn\nFast, Readable Automation: Learn the quickest and most effective way to repeat tasks.\nMaster Browser Automation: Use Zapier to automate workflows and connect apps, increasing your technical value and preparing you for new challenges.\nBulletproof Approach to Automation Fundamentals: Understand valuable industry practices and how to implement them effectively.\nCourse Highlights\nEasy-to-Watch Video Lessons: Engaging and informative content to help you master automation.\nPractical Activities: Hands-on exercises to solidify your understanding.\nDownloadable Resources: Access valuable materials to aid your learning journey.\nPremium Instructor Support: Get help and guidance from experienced instructors.\nLifetime Access to Course Updates: Stay up-to-date with the latest automation techniques.\nExclusive Student Community: Join a network of learners to share insights and support each other.\n100% Money-Back Guarantee: If you are unsatisfied with the course, get a full refund within 30 days.\nWhy You Should Enroll\nZapier is one of the most popular automation tools, and the demand for it is only increasing. Browser automation is in high demand as software testing costs rise and the software industry grows. Unfortunately, engineers interested in automation often lack concrete guidance on how to be successful. This course fills that gap, focusing on practical implementation and valuable industry practices.\nEnroll today and gain instant access to:\nEasy-to-watch video lessons\nPractical activities\nDownloadable resources\nPremium instructor support\nLifetime access to course updates\nExclusive student community\nOur Promise\nYour satisfaction is our top priority. If for any reason you're not completely satisfied, we offer a 30-day money-back guarantee. We continuously seek feedback and strive to enhance the course content. If you have any suggestions, we're all ears!\nWhat Are You Waiting For?\nJoin us now on this journey. Click \"Enroll Now\" and learn something new today!\nUser Testimonials and Social Proof\n\"This course provided a clear and practical guide to automation with Zapier. Highly recommended!\" - Emily R.\n\"The hands-on activities and instructor support made learning automation easy and effective.\" - David S.\nAn Author Bio Showing Off Credentials\nProTech Academy\nTeam of Skilled Professionals Sharing Knowledge with the World\nProTech Academy is a leading provider of online courses in the tech industry, with over 10 Years of Experience in teaching and practical projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact, step-by-step blueprint on how to master both simple and complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp concepts easily and apply this learning immediately to your life and projects.\nProTech Academy has been in the tech education business since 2013. We have been part of many projects. Over the years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2024, we have already taught over 200,000 students and counting.\nCurrently, we have more than 50+ courses on Udemy.\nEducator and Author of \"ProTech Academy\".\nProTech Academy is a team of educators, tech enthusiasts, and professionals. We create online video courses to share our knowledge and help you succeed in the tech industry.\nAs a team of expert educators, our mission is to explore new trends and technology and help educate the world and make it a better place.\nProTech Academy offers educational courses, Bootcamps, articles, lessons, and online support for tech enthusiasts, programmers, developers, and students.\nOur team also works as freelance consultants, helping many students in their projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nOur core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 10 years of teaching experience, we have developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nOur passion for technology and automation has guided our personal development and our work through ProTech Academy.\nOur online courses have helped over 200,000 people from around the world to be better and to make a great career in the industry.\nProTech Academy offers Courses on\nWeb Automation\nProgramming Languages\nSoftware Testing\nData Science\nCloud Computing\nCybersecurity\nA Single Powerful CTA\nEnroll now and start your journey to mastering automated workflows and app integration today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nFundamentals of browser automation using Zapier\nCreating fast and readable automation workflows\nImplementing practical automation solutions\nWho Is This Course For\nAnyone interested in creating practical automation workflows\nBeginners with no prior experience in automation\nTech enthusiasts and professionals looking to enhance their skills\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Anyone looking to automate a web task to save his time",
        "Anyone using social media, websites, blogger, wordpress, instagram or other apps in his work and look to save time, effort and money"
      ]
    },
    {
      "title": "Mobile App Testing: Key Instruments and Practices",
      "url": "https://www.udemy.com/course/mobile-app-testing-basics/",
      "bio": "Learn the most essential skills to kickstart your mobile testing career!",
      "objectives": [
        "Basic terminology",
        "Choose devices for testing",
        "Work with emulators and simulators",
        "Work with mobile device farms and crowdtesting platforms",
        "Release alpha and beta versions of the app",
        "Create a strategy of mobile application testing"
      ],
      "course_content": {
        "Mobile App Testing Basics": [
          "Basic Terminology",
          "Basic terminology quiz",
          "Choosing a device",
          "Choosing a correct device for testing",
          "Mobile testing features",
          "Emulators and Simulators",
          "Emulators and Simulators Quiz",
          "Mobile Device Farms"
        ],
        "Android Mobile Applications Testing": [
          "Android: Introduction",
          "Android Studio Installation",
          "Emulator creation",
          "Emulator Functions",
          "Android Debug Bridge installation",
          "App installation",
          "Logs, Screenshots and Video Capture",
          "Traffic Sniffing 1: Configuring Charles",
          "Traffic Sniffing 2: SSL Certificates",
          "Traffic Sniffing 3: Mobile App Traffic",
          "Working with GPS tracks"
        ],
        "Mobile Testing Cycle Organization": [
          "Mobile App Testing Cycle",
          "Testing Strategy Stage",
          "Testing strategy",
          "Design Stage",
          "Development Stage",
          "Development quiz",
          "Deployment Stage",
          "Deployment quiz",
          "Mobile App Monitoring",
          "A/B Mobile Testing",
          "A/B testing quiz"
        ]
      },
      "requirements": [
        "No special knowledge is required: this course is suited for a complete novice in mobile app testing.",
        "Windows 7/8/10 (64-bit), Mac OS El Capitan or later, Ubuntu 14.04 or later. Basically, you need to have 64 bit system.",
        "4 GB RAM or more. You will not be able to launch emulators with less than 4 GB RAM",
        "4 GB HDD/SSD space to install IDE and emulators",
        "Nice to have: an Android phone with Android OS 5.1 or later"
      ],
      "description": "In modern world business is paying more and more attention to mobile technology. The mobile devices market is growing several times faster than the PC market, allowing to realize new opportunities for development and promotion of the most innovative business ideas. With all this demand for mobile applications testers is also increasing. Mobile software development is a new and fast growing industry, so developers and testers have to solve not only the typical IT problems, but also to overcome ones emerging in the process, yet unexplored difficulties. The fact that the tools for development and testing are under development themselves adds one more layer of difficulty.\nThis training aims to help you overcome the difficulties encountered when testing mobile applications. The course is designed both for beginners who intend to work in the mobile testing and for already working mobile testers who want to improve their skills.\nDuring the training you will learn how to work with mobile testing tools: phones, emulators, proxy, IDE. Particular emphasis is placed on work with the Android platform as the most widespread mobile operating system at the moment. Also, you will learn to use more advanced technology: statistics collection, mobile application testing strategy construction, the use of third-party services and organization of various types of testing. The training is designed not only for the acquisition of theoretical knowledge, but also on its refinement, allowing to learn in practice how to apply the skills of mobile applications tester.\nPlease note, although this training is complete, I will add more information on Android, iOS and Mobile Web testing later. So if you buy it now, you will get new information for free!",
      "target_audience": [
        "QA Specialists with no Mobile testing experience.",
        "Mobile Testers, that would like to improve their knowledge."
      ]
    },
    {
      "title": "Learn Robot Framework (Selenium) from Industry Expert|22+hr",
      "url": "https://www.udemy.com/course/robot-python/",
      "bio": "Allure Reporting |Data Driven Framework| Python Coverage | Pycharm | Desktop & API Application coverage | GITHUB|Jenkins",
      "objectives": [
        "Able to perform End to End automation of Web Application using Robot Framework & Python",
        "Basic to Expert level knowledge of Python programming with Interview Questions",
        "Ready to write user defined keywords using Python Programming",
        "Ready to Automation Window/Desktop based, API and Angular JS application",
        "Able to Write Automation Framework from scratch",
        "Ready to face automation testing interviews of Robot Framework"
      ],
      "course_content": {},
      "requirements": [
        "Person should have basic knowledge of Windows Environment",
        "Good to have programming basics",
        "Basic understanding of Manual Testing basic also need of automation"
      ],
      "description": "Robot Framework is a generic test automation framework for acceptance testing and acceptance test-driven development (ATDD). It has easy-to-use tabular test data syntax and it utilizes the keyword-driven testing approach.\nIts testing capabilities can be extended by test libraries implemented either with Python or Java, and users can create new higher-level keywords from existing ones using the same syntax that is used for creating test cases.\nWe are going to cover,\n1. Basic environment setup\n2. Automation test cases in different browser\n3. Waits\n4. Architecture\n5. Resource Files\n6. User defined keywords\n7. Code Management\n8. Integration with Jenkins\n9. Data Driven Framework\n10. Python Programming\nRobot Framework is a generic test automation framework for acceptance testing and acceptance test-driven development (ATDD). It has easy-to-use tabular test data syntax and it utilizes the keyword-driven testing approach.\nIts testing capabilities can be extended by test libraries implemented either with Python or Java, and users can create new higher-level keywords from existing ones using the same syntax that is used for creating test cases.\nWe are going to cover,\n1. Basic environment setup\n2. Automation test cases in different browser\n3. Waits\n4. Architecture\n5. Resource Files\n6. User defined keywords\n7. Code Management\n8. Integration with Jenkins\n9. Data Driven Framework\nRobot Framework is a generic test automation framework for acceptance testing and acceptance test-driven development (ATDD). It has easy-to-use tabular test data syntax and it utilizes the keyword-driven testing approach.\nIts testing capabilities can be extended by test libraries implemented either with Python or Java, and users can create new higher-level keywords from existing ones using the same syntax that is used for creating test cases.\nWe are going to cover,\n1. Basic environment setup\n2. Automation test cases in different browser\n3. Waits\n4. Architecture\n5. Resource Files\n6. User defined keywords\n7. Code Management\n8. Integration with Jenkins\n9. Data Driven Framework",
      "target_audience": [
        "Manual testers looking opportunity in Python automation",
        "Automation testers looking to integrate Robot framework with their existing framework"
      ]
    },
    {
      "title": "API (WebServices) Performance Testing-Loadrunner(SOAP &REST)",
      "url": "https://www.udemy.com/course/webservices-performance-testing-using-loadrunner-soap-restful/",
      "bio": "(30 Day Money Back Guarantee) - Extensive, Exhaustive and Hands-on Training with Query Support.",
      "objectives": [
        "Students reported that they were able to troubleshoot the issues faced in the real projects after taking this class",
        "As most of the companies (& Interviewers) are expecting Performance Testers to have knowledge on multiple Protocols; this course will give wonderful opportunity to get very good working knowledge on Web Services Protocol using loadrunner",
        "By end of the course you will learn to develop a VuGen Scripts for SOAP & RESTful WebServices and be ready to handle any performance testing project using LoadRunner tool",
        "Even if you are using any other performance testing tool, this course will provide you core guidelines for utilizing it for maximum benefits in less time."
      ],
      "course_content": {
        "Introduction to Web Services": [
          "What is Web Service?",
          "Web Services Demo",
          "Purpose of Web Services",
          "Interoperability of Web Services",
          "Web Applications where Web Services are used.",
          "Handout / Course Material for the course",
          "Types of Web Services",
          "Introduction to SOAP WS",
          "What is SOAP Protocol?",
          "UDDI",
          "Introduction to RESTful Web Services",
          "Difference Between SOAP WS and RESTful WS"
        ],
        "SOAP Web Services": [
          "Introduction to SOAPUI Tool",
          "Installation of SOAPUI Tool",
          "Using SOAPUI Tool"
        ],
        "Different Ways of Creating VuGen Scripts for SOAP WS": [
          "Different Ways of Creating Script Via VuGen"
        ],
        "Creating SOAP WS scripts Using HTTP/HTML Protocol": [
          "Create Script Using Web_custom_Request",
          "Web_custom_Request - Fix Compilation Errors",
          "Web_custom_Request - Fix Execution Errors",
          "Web_custom_Request - Execution",
          "Creating VuGen Script Via Recording"
        ],
        "SOAP VuGen Scripts - Enhancements": [
          "Transaction Points",
          "CheckPoints -Introduction",
          "Insert CheckPoints",
          "Execute Script after inserting CheckPoints",
          "CheckPoints - Misc Information",
          "ErrorHandling 1",
          "ErrorHandling 2"
        ],
        "SOAP VuGen Scripts -Parameterization - Further Enhancements": [
          "Why Parameterization?",
          "What is Parameterization?",
          "Implementing Parameterization?",
          "Script Execution",
          "Where can we implement Parameterization"
        ],
        "SOAP VuGen Scripts -Correlation- Further Enhancements": [
          "Sample SOAP Used for Correlation Demonstration",
          "Why Correlation?",
          "Implementing Correlation",
          "Script Execution with Correlation",
          "Final Script with all the enhancements - Part1",
          "Final Script with all the enhancements - Part2",
          "Correlation to Capture any Value",
          "Correlation to Capture Multiple Values",
          "Explore Correlation arguments"
        ],
        "Creating SOAP WS scripts Via Web Services Protocol": [
          "All Recording Options for SOAP using Web Services Protocol",
          "Sample Projects Walk-thru",
          "Creating VuGen script using \"Import WSDL\"",
          "Execute Script",
          "Installation of WSE2 & WSE3 Patches",
          "Output Arguments 1",
          "Output Arguments 2",
          "Output Arguments 3"
        ],
        "WebServices Protocol -- Misc Enhancements": [
          "Enhancements -Inserting Transactions",
          "Enhancements -Parametrization",
          "Enhancements -ThinkTime"
        ],
        "WebServices Protocol -- Enhancements - Error Handling": [
          "LR_XML_FIND LR Function",
          "Error_Handling using LR_XML_FIND",
          "Parameterization & LR_XML_FIND"
        ]
      },
      "requirements": [
        "Prior Knowledge of LoadRunner - Basic Level",
        "Any Basic scripting language knowledge"
      ],
      "description": "Welcome to \"Isha Training Solutions\"\nFirst of all, I would like to thank all Udemy Students for making my first 2 courses highly successful\nPerformance testing Using LoadRunner (Basics + advanced)\nSAP Performance Testing Using Loadrunner (SAP GUI Scripting)\nWe, at Isha, continue to strive hard to create new courses for Performance Testers.  As part of this efforts, we have come up with a new course \" WebServices Performance Testing Using Loadrunner 12.50 (SOAP &REST)\".\nAt the end of this course, you not only can confidently handle interviews but also handle Performance Testing projects pertaining to SOAP and RESTful Web services .\nLearn all the basics and advanced concepts with Hands-on examples. All the intricacies and challenges typically faced by performance testers, while scripting, is covered as part of this course.\nThis course focuses on scripting part using VuGen.\n\n\n****************************************************************************************\nMy other courses on Udemy\nApache Jmeter - Basics to Intermediate level\nAdvance LoadRunner Scripting for HTTP/HTML Protocol\nLoadrunner 12.50 SAPGUI Protocol scripting\nPerformance Testing using LoadRunner 12.50\n****************************************************************************************\nI am able to Record, Replay back, Add transactions & Add Check Points, then why should I take this course?\nThis course is much deeper than just record and playback.\nStudents reported that they were able to troubleshoot the issues by themselves after attending the course.\nAlso, reported that the course helped them to break the interviews confidently.\nLots of C functions, LR functions, conversions etc...will be discussed.\n\n\n***************************************************************************************",
      "target_audience": [
        "Anyone who has basic knowledge on loadrunner",
        "Anyone who has worked with LoadRunner Tool before",
        "Anyone who wants to get a good hands-on knowledge on Web Services Protocol (using LoadRunner)",
        "Anyone who wants to master Web Services protocol using LoadRunner",
        "Anyone who has worked with LoadRunner Tool before"
      ]
    },
    {
      "title": "API TESTING MASTERCLASS -2025 using POSTMAN | NEWMAN |JMETER",
      "url": "https://www.udemy.com/course/rest-api-performance/",
      "bio": "Be an API Testing Expert using Postman(Manual & Automation) with Newman, Reporting, JavaScript, DataDriven Framework",
      "objectives": [
        "Detailed knowledge of API Testing using POSTMAN and its realtime implementation while working as an API Tester",
        "Ready to face API Manual & Automation testing interviews & also answer scenario based questions",
        "Detailed understanding of REST API concepts, Methods & Operations (GET, POST, PUT, DELETE, PATCH) & JSON Format",
        "Detailed understanding of advance concepts like Collections, Environment, Mocking, Monitoring & Newman",
        "Good understanding of JavaScript programming to handle different scenario"
      ],
      "course_content": {
        "Postman Introduction | Basics of API Testing": [
          "Course Outline & Complete Information -> Must for everyone",
          "Introduction to Postman (One of most popular tool for REST API testing)",
          "Postman Setup : Step by Step Setup Instructions",
          "Postman window walkthrough",
          "Setup Sample API Application for Practice",
          "QUIZ"
        ],
        "Introduction & Types of WebServices | Pre-Requisites of API Testing": [
          "Introduction about this Section",
          "Introduction to WebService with Examples",
          "Some common examples of WebService",
          "Different type of WebService : Soap and Rest",
          "Rest API : common Methods - GET, POST, PUT, DELETE",
          "Pre-requisites before starting API Testing",
          "Basic JSON understanding : How to write and Understand JSON file",
          "JSON Path basics : To Fetch and Validate JSON keys-values",
          "JSON path advance : To Fetch and Validate JSON keys-values",
          "Its Time for QUIZ : Check Your Knowledge"
        ],
        "PROJECT - 1 : Manual Testing of REST API using POSTMAN": [
          "Basic GET request : Fetch data from application",
          "Basic POST request : Insert New data to Application",
          "Basic PUT request : Update Data of Application",
          "Basic DELETE request : Delete application Data",
          "End to End test case with verifications"
        ],
        "Apply Validation : Validate data coming in Response": [
          "Add Verification : Status Code, Body Data & Response time",
          "Validate Header Content",
          "Validate Data using JSON Path",
          "Add Student Address : Check Complex JSON",
          "Add Student Address : Check Complex JSON",
          "Its Time for QUIZ : Check Your Knowledge"
        ],
        "Advance Postman Concepts : Collections | Environment | Global": [
          "What is collections & How to Implement Collection",
          "Save Request to Collections",
          "Common operation on Collection",
          "Collection Documentation",
          "Run Collection using Collection Runner"
        ],
        "Move to API Automation : Environment | Request Chaining | Globals": [
          "What is Environment | Why to use Environment",
          "How to Setup Environment and Use environment data in testcases",
          "Execute Cases to Different Environment",
          "Share Collection with Environment File",
          "Set and Get environment data using Programming",
          "Request Chaining : Pass data from Response to Next Request",
          "Setup Global and use in testcase (Set Configuration Data)"
        ],
        "Collections | Environment | Global": [
          "End to End test case with verifications",
          "Work with Collections",
          "Collections | Environment | Global",
          "Setup Global and use in testcase"
        ],
        "Use Postman API : Write JavaScript Coding in Postman": [
          "Start coding in Postman : Simple print data to Console",
          "Condition Handling : If - else conditions",
          "Looping : Execute code multiple time - For Loop",
          "Postman API : request object - Fetch Data, URL and Method of Request",
          "Postman API : responseBody object - Fetch Response Body, Parse Json Data",
          "Postman API : responseTime and responseCode",
          "Work on environment variable by coding",
          "Work on global variable by coding",
          "SOAP WebService Testing using Postman"
        ],
        "Authorization : Authenticate User before processing the Request": [
          "Basic Authorization : Pass username and password with request",
          "oAuth Authorization : Use Authorization token to get access"
        ],
        "Postman Advance Features": [
          "Setup & Use Monitors : For Monitoring Health checkup of our API",
          "Service Mocking : Use Mocking to Keep on working in case of Downtime"
        ]
      },
      "requirements": [
        "Basic understand of Manual Testing Concepts and Implementation",
        "Basic understand of Writing TestCases and Test Scenario.",
        "Basic understanding of Requirement Documents, How to read and understand requirements"
      ],
      "description": "POSTMAN is one of the most popular tool used by software development & testing teams in many companies. It is a very handy tool used by Developers/Testers when building or Testing RESTful web services\n\nIn this course, you will learn many functionalities of the POSTMAN tool with practical examples. Below are some of the highlights of this course.\n\nBASICS OF API TESTING AND AUTOMATION\n\n\nLearn how to send  REST Requests using POSTMAN\nWhat is API, Different Between SOAP and REST API\nDifferent CRUD Operation and Its Implementation\nGET | POST | PUT | DELETE\nBasic understanding of Micro Services\nPerform data driven testing\nOrganize requests using Collections\nAuthentication approaches (BASIC,OAUTH)\nHow to Handle Header & Pre-requisite\nREALTIME SCENARIO\nEnd to End Student Student Enrollment\nRequest Chaining\nFinal execution with report generation and analysis\nRun API tests in Jenkins\nCode Management using GIT\nScenario implementation on RealTime API Application\nEnd to End Scenario building and once click execution\nCollection Execution from command prompt\n\n\nADVANCE CONCEPTS\nScripting in POSTMAN using JavaScript\nCollections\nImport & Export for Sharing\nEnvironment & Global\nIntegrate POSTMAN with NEWMAN\nAdvance Reporting\nService Mocking\nService Monitoring\nCode Management\nCollection Runner\nChecking Logs\nWrite Basic to Advance Java Script\nAssertions\nRequest Channing\nAPI Testing using JMeter\nConvert Postman Script to JMeter\n\n\n\n\nAPI TESTING USING JMETER\nJMeter introduction and Setup\nBasic components of JMeter\nPerform API Operations using JMeter\nValidating Response data\nRequest Chaining\nExecute Test Cases with Multiple Data\nRealtime Scenario\nInterview Questions",
      "target_audience": [
        "Developers, SDET's, Devops, IT Professionals working on API",
        "Manual testers/QA/Testing Professionals looking to automate Restful API Testing",
        "Professionals/Automation Testers looking to test RestAPI application/WebServices"
      ]
    },
    {
      "title": "ISTQB Advanced Test Automation Engineer - 2025",
      "url": "https://www.udemy.com/course/istqb-advanced-test-automation/",
      "bio": "Master advanced automation techniques and excel as an ISTQB® Certified Test Automation Engineer",
      "objectives": [
        "Participate in creating a strategy for incorporating automated testing into the testing workflow",
        "Assess tools and technologies to determine the ideal automation solution for each project and organization",
        "Establish a framework and methodology for constructing a test automation architecture (TAA)",
        "Design and develop tailored test automation solutions that align with business requirements",
        "Support the shift from manual to automated testing methodologies",
        "Generate automated test reports and gather relevant metrics",
        "Oversee and enhance testing assets to ensure maintainability and adaptability to changing (test) systems"
      ],
      "course_content": {
        "Introduction and Objectives for Test Automation V2.0": [
          "Introduction and Objectives for Test Automation",
          "Explain the Advantages and Disadvantages of Test Automation",
          "Explain How Test Automation is Applied Across Different SDLC Models",
          "Select Suitable Test Automation Tools For a Given System Under Test",
          "Introduction and Objectives for Test Automation Q&A",
          "V2: Introduction and Objectives for Test Automation",
          "Before Booking The Exam"
        ],
        "Preparing for Test Automation V2.0": [
          "Preparing for Test Automation Introduction",
          "Describe the Configuration Needs of an Infrastructure that Enable Implementation",
          "Explain How Test Automation is Leveraged within Different Environments",
          "Analyze System Under Test to Determine the Appropriate Test Automation Solution",
          "Illustrate the Technical Findings of a Tool Evaluation",
          "Preparing for Test Automation Q&A",
          "V2: Preparing for Test Automation"
        ],
        "Test Automation Architecture V2.0": [
          "Test Automation Architecture Introduction",
          "Explain the Major Capabilities in a Test Automation Architecture",
          "Explain How to Design a Test Automation Solution",
          "Apply Layering of Test Automation Frameworks",
          "Apply Different Approaches for Automating Test Cases",
          "Object-Oriented Programming Principles",
          "Solid Principles",
          "Design Patterns",
          "Test Automation Architecture Q&A"
        ],
        "Implementing Test Automation V2.0": [
          "Implementing Test Automation Introduction",
          "Apply Guidelines that Support Effective Test Automation Pilot/Deploy Activities",
          "Analyze Deployment Risks and Plan Mitigation Strategies for Test Automation",
          "Explain Which Factors Support/Affect Test Automation Solution Maintainability",
          "Implementing Test Automation Q&A",
          "V2: Implementing Test Automation"
        ],
        "Implementation and Deployment Strategies for Test Automation V2.0": [
          "Implementation and Deployment Strategies for Test Automation Introduction",
          "Apply Test Automation at Different Test Levels within Pipelines",
          "Explain Configuration Management for Testware",
          "Explain Test Automation Dependencies for an API Infrastructure",
          "Implementation and Deployment Strategies for Test Automation Q&A"
        ],
        "Test Automation Reporting and Metrics V2.0": [
          "Test Automation Reporting and Metrics Introduction",
          "Apply Data Collection Methods from the Test Automation Solution and the System",
          "Analyze Data from the Test Automation Solution and the System Under Test",
          "Explain How a Test Progress Report is Constructed and Published",
          "Test Automation Reporting and Metrics Q&A"
        ],
        "Verifying the Test Automation Solution V2.0": [
          "Verifying the Test Automation Solution Introduction",
          "Plan to Verify the Test Automation Environment Including Test Tool Setup",
          "Explain the Correct Behavior for a Given Automated Test Script and/or Test Suite",
          "Identify Where Test Automation Produces Unexpected Results",
          "Explain How Static Analysis Can Aid Test Automation Code Quality",
          "Verifying the Test Automation Solution Q&A"
        ],
        "Continuous Improvement V2.0": [
          "Continuous Improvement Introduction",
          "Discover Opportunities for Improving Test Cases Through Data Collection&Analysis",
          "Analyze the Technical Aspects of a Deployed Test Automation Solution",
          "Restructure the Automated Testware to Align with System Under Test Updates",
          "Summarize Opportunities for Use of Test Automation Tools",
          "Continuous Improvement Q&A"
        ],
        "Booking the Exam": [
          "Booking the Exam"
        ],
        "Introduction and Objectives for Test Automation V1.0": [
          "Purpose of Test Automation",
          "Success Factors in Test Automation",
          "Introduction and Objectives for Test Automation Questions",
          "Quiz: Introduction and Objectives for Test Automation"
        ]
      },
      "requirements": [
        "No experience needed. You will learn everything you need to know."
      ],
      "description": "This course is designed for students who want to earn the ISTQB® Advanced Test Automation Engineer Certification V2.0 or enhance their knowledge of test automation strategies. Students will delve into the methodologies, techniques, and tools vital for advanced automation in software testing.\n\n\nBenefits of Advanced Test Automation Engineer Certification:\nAs an ISTQB® Certified Advanced Test Automation Engineer, you will be able to:\nParticipate in creating a strategy to incorporate automated testing into the overall testing process.\nEvaluate automation tools and technologies to determine the best fit for each project and organization.\nDevelop a strategy and method for constructing a test automation architecture (TAA).\nDesign and create new or adapt existing test automation solutions to meet business requirements.\nFacilitate the shift from manual testing to an automated approach.\nEstablish automated processes for test reporting and the collection of metrics.\nOversee and improve testing assets to ensure maintainability and adaptability to changing test systems.\n\n\nWhy you should take this course:\nThis course covers all the topics in the Advanced Test Automation Engineer syllabus, including:\nThe Objectives for Test Automation\nHow to Prepare for Test Automation\nUnderstand the Generic Test Automation Architecture\nLearn Test Automation Reporting and Metrics\nUnderstand how to transition from manual to automated testing\nUnderstand how to verify the Test Automation Solution\nLearn how to apply Continuous Improvement to Test Automation\n\n\nThis course blends theory, practical examples, and practice questions to ensure you understand how to apply the concepts learned. Additionally, the lessons include real-life scenarios from the instructor's years of experience in test automation. After completing this course, you can take the ISTQB Advanced Test Automation Engineer exam and earn your certification.\n\n\nEnroll now and start your journey to becoming an ISTQB® Certified Advanced Test Automation Engineer!\n\n\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "This course is for anyone who wants to enhance their test automation skills or earn the Certified Tester Test Automation Engineer (CT-TAE) certification."
      ]
    },
    {
      "title": "Advanced Automation Testing of Modern Apps with C# .NET",
      "url": "https://www.udemy.com/course/modern-dotnet-testing/",
      "bio": "Learn modern ways to automate application with C# .NET using Selenium, XUnit, Dependency Injections, Docker and more !",
      "objectives": [
        "Understand building robust automation testing practices",
        "Undertanding Dependency Injection to build test automation framework",
        "Understanding the purpose of running Test project as docker container",
        "Better way to run parallel and cross-browser testing of applications"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Selenium",
        "Basics of C# programing language",
        "Basics of Docker"
      ],
      "description": "This course Advanced Automation Testing of Modern Apps with C# .NET is a Master course that helps you not just automate the application, but to make you understand the in-depth concepts of automating the application in a modern way using modern tools and practices in the .NET world.\nIn this course, you will learn to automate ASP Netcore Web API and WebUI projects using tools such as\nSelenium\nXUnit\nAutoFixture\nFluent Assertion\nSpecflow\nAutofac\nXunit.DependencyInjection\nWebApplicationFactory (Integration Testing)\nThe Application Under Test (AUT) will be running inside a Docker Container, hence the automation challenges to automate an application running as a microservices within containers will be discussed part of this course almost from the first section.\nThe course is divided into the following sections\nUI Testing - Developing Foundational Framework with DI\nThis section helps one to understand developing selenium code in an industry-standard way by following the best practices using Dependency injection as the foundation.\nUI Testing - Building Blocks for Test Project\nThis section helps to write the building block code for testing the application using Patterns and techniques such as\nPage Object Model of Selenium\nInsisting the focus on Separation of Concern\nConfigurations\nIWebElement Extension methods\nUI Testing - Writing Effective Tests\nThis section is all about writing the best possible way to write effective coding using tools such as\nAutoFixture\nFluentAssertions\nSpecflow\nDatabase Testing with ORM\nThis section helps to test applications using Database with Entity framework as ORM\nIntegration Testing - The best testing ever!\nThis section focus on testing application components and test how they communicate with each other. This can be achieved using service isolation and testing the specific component without lot of ceremonies to test the application such as setting infrastructure like\nDatabase\nUI\n3rd party services\nWe will also understand the power of ASP.NET's own Test Server and how to bootstrap an application while testing them.\nApart from the above topics and sections, the course also features crash courses which help to learn the course more in-depth such as\nApplication development using ASP Net Core WebAPI and Web UI\nSpecflow Basics\nXUnit\nAutoFixture\nAt the end of this course, one will have all the knowledge required to bring the best of the breed automation practices to work with full confidence.",
      "target_audience": [
        "QA",
        "BA",
        "DevOps",
        "Developers",
        "Test Engineers"
      ]
    },
    {
      "title": "Practical Software Testing 2025-Manual+JIRA+API+DB+Selenium",
      "url": "https://www.udemy.com/course/selenium-cucumber-integration/",
      "bio": "Practical Manual Testing | Bug Reporting and Task Management with JIRA | Database Testing | Selenium with Python",
      "objectives": [
        "Basic to Expert level Python Programming for Automation",
        "Automate Realtime Web Application using Selenium and Python",
        "Ready to Develop Data Driven and BDD Framework using Selenium Python",
        "Ready to face experienced level Automation Interview Questions",
        "Able to show experience in Selenium & Python with frameworks"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Manual Testing Concepts",
        "Basic understanding of Automation & Need of Automation Testing"
      ],
      "description": "This course is specially designed by keeping manual tester/ freshers in focus, here we give coverage starting from Manual Testing Concepts to Database Testing, API Testing & Selenium WebDriver Basics to Advanced level and also gives detailed outlook of Python Programming.\n\n\nHigh Level Agenda of the course:\n- Detail of Manual Testing\n- Bug  Tracking and Task Management using JIRA\n- Database Testing & API Testing\n- Basic to Expert level Python Programming Concepts\n- Test Execution/ Reporting/ Execution Control using readymade Pytest Framework\n- Manual Testing Interview Preparation with programming coverage\n- Detailed Python Programming for each and every concept with programming exercise\n\n\n\n\nEnd to End Automation Frameworks\n-   Detailed Data Driven Framework using Excel\n-   End to End Implementation of BDD(Behavior Driver Development) framework with Behave\n\n\nCourse is designed in such a way that the user does not required to have any prior understanding of python scripting\n\nLow Level Course Coverage\nBasic Python Programming (Condition Handling, Looping, String Handling, File Handling, Json Handling)\nAdvance Python Programming (WebScrapping, Working with JSON, Config File Handling,  OOPS Conepts)\nStep by Step Installation\nPycharm Editor & Pytest Framework\nRecord and Play (Selenium IDE)\nElement locators (Detailed understanding and Practical Approach to write Element Locators)\n·Webdriver API\nData driven Framework\nBDD framework with Behave with Page Object Model Design Pattern\nHTML Reporting\nEnd to End Frameworks: Data Driven, BDD Framework\nCI/ CD implementation using GIT and Jenkins Integration\nSelenium python - Real time project implementation\nSelenium with python - Complete End to End Code\npython with selenium : Best Practices\npython with selenium : Architecture & Framework Design\npython selenium webdriver  : Realtime Practices\n\n\nBy the End of this Course you will able to understand best automation practice and write all kind of automation testcases using Selenium\nThis course is very useful for professional who are working in Manual and Automation Testing.\n\n\nBDD Concepts and Framework Implementation\nBehave is one of the most popular BDD Library.\nTo the testers point of view, we can use this library to implement BDD approach with Selenium, Calabash, Watir etc.\nIn this course we prepare student for all BDD automation challenges, it gives coverage of almost all basic and advance concepts of Gherkin Scripting",
      "target_audience": [
        "Automation tester looking to design automation framework from scratch",
        "Manual tester looking opportunity in Selenium Automation with Python",
        "Automation Testers looking to learn BDD | Data Driven Frameworks step by step",
        "Freshers looking to start Career in Web Automation"
      ]
    },
    {
      "title": "Automated Software Testing with Python",
      "url": "https://www.udemy.com/course/automated-software-testing-with-python/",
      "bio": "Learn about automated software testing with Python, BDD, Selenium WebDriver, and Postman, focusing on web applications",
      "objectives": [
        "Everything you need to know about automated software testing with Python (and how to enjoy testing, too!)",
        "Avoid common pitfalls and implement best practices when writing automated tests",
        "Write complete system tests using Python and tools like Postman",
        "Automate your application testing by setting up a continuous integration pipeline using Travis CI",
        "Browser-based acceptance testing using Behave and Selenium WebDriver"
      ],
      "course_content": {
        "Welcome!": [
          "How to take this course",
          "Installing Python and PyCharm on Windows",
          "Installing Python and PyCharm on macOS"
        ],
        "A Full Python Refresher": [
          "Introduction to this section",
          "Access the code for this section here",
          "Variables in Python",
          "Variables (Python 3.10)",
          "Solution to coding exercise: Variables",
          "String formatting in Python",
          "Getting user input",
          "Writing our first Python app",
          "Lists, tuples, and sets",
          "Advanced set operations",
          "Lists, tuples, and sets (Python 3.10)",
          "Solution to coding exercise: lists, tuples, sets",
          "Booleans in Python",
          "If statements",
          "The 'in' keyword in Python",
          "If statements with the 'in' keyword",
          "Loops in Python",
          "Flow control—loops and ifs (Python 3.10)",
          "Solution to coding exercise: flow control",
          "List comprehensions in Python",
          "Dictionaries",
          "Destructuring variables",
          "Functions in Python",
          "Function arguments and parameters",
          "Default parameter values",
          "Functions returning values",
          "Functions (Python 3.10)",
          "Solution to coding exercise: Functions",
          "Lambda functions in Python",
          "Dictionary comprehensions",
          "Dictionaries and students (Python 3.10)",
          "Solution to coding exercise: dictionaries",
          "Unpacking arguments",
          "Unpacking keyword arguments",
          "Object-Oriented Programming in Python",
          "Magic methods: __str__ and __repr__",
          "Classes and objects (Python 3.10)",
          "Solution to coding exercise: classes and objects",
          "@classmethod and @staticmethod",
          "@classmethod and @staticmethod (Python 3.10)",
          "Solution to coding exercise: @classmethod and @staticmethod",
          "Class inheritance",
          "Class composition",
          "Type hinting in Python 3.5+",
          "Imports in Python",
          "Relative imports in Python",
          "Errors in Python",
          "Custom error classes",
          "First-class functions",
          "Simple decorators in Python",
          "The 'at' syntax for decorators",
          "Decorating functions with parameters",
          "Decorators with parameters",
          "Mutability in Python",
          "Mutable default parameters (and why they're a bad idea)",
          "Conclusion of this section"
        ],
        "Your first automated software test": [
          "Introduction to this section",
          "Access the code for this section here",
          "Setting up our project",
          "Important: the naming of test files",
          "Writing our first test",
          "Testing dictionary equivalence",
          "Writing blog tests and PyCharm run configurations",
          "The __repr__ method, and intro to TDD",
          "Integration tests and finishing the blog",
          "Mocking, patching, and system tests",
          "Patching the input method and returning values",
          "Taking our patching further",
          "The last few patches!",
          "The TestCase setUp method",
          "Conclusion of this section"
        ],
        "Testing a Flask Endpoint": [
          "Introduction to this section",
          "Access the code for this section here",
          "Setting our project up",
          "Creating our Flask app",
          "Our first System test",
          "Refactoring our System Tests",
          "Conclusion of this section"
        ],
        "REST API Testing, Part I": [
          "Introduction to this section",
          "Access the code for this section here",
          "A look at a REST API with Flask",
          "Unit testing a REST API",
          "Setting up our generic BaseTest",
          "Integration testing a REST API",
          "Conclusion of this section"
        ],
        "REST API Testing, Part II": [
          "Introduction to this section",
          "Access the code for this section here",
          "Setting up our project",
          "Testing foreign key constraints with Python",
          "Unit testing models and SQLAlchemy mappers",
          "Finishing our Store tests",
          "Conclusion of this section"
        ],
        "System testing a REST API": [
          "Introduction to this section",
          "Access the code for this section here",
          "Setting project up and creating User model",
          "Change to the next lecture's code",
          "Allowing users to log in",
          "Writing our User tests",
          "The setUpClass method in the BaseTest",
          "Testing user registration",
          "Finalising user System tests",
          "Writing Store System tests",
          "Writing our Item System tests and testing authentication",
          "Conclusion of this section"
        ],
        "System testing with Postman and Newman": [
          "Introduction to this section",
          "Access the code and Postman files here",
          "Introduction to Postman",
          "Our first Posman tests",
          "Setting and clearing environment variables in Postman",
          "Running a test folder in Postman",
          "Advanced PyCharm run configurations",
          "Installing Node and Newman",
          "Multirun in PyCharm—Running app and tests together",
          "Conclusion of this section"
        ],
        "Continuous Integration with Travis CI": [
          "Introduction to this section",
          "The code for this section",
          "Installing Git",
          "What is a Git repository?",
          "A local Git workflow",
          "GitHub and remote repositories",
          "Adding our project to GitHub",
          "What is Travis CI?",
          "Adding our repository to Travis",
          "The Travis config file and running tests",
          "Adding our test badge to the Readme",
          "Conclusion of this section"
        ],
        "Acceptance testing and browser automation with Selenium": [
          "Introduction to this section",
          "What is acceptance testing?",
          "Introduction to our project",
          "Our first acceptance test step",
          "Getting the Chrome webdriver",
          "Verifying everything works",
          "Finishing our first test",
          "Re-using steps with the regular expression matcher",
          "Our first content test",
          "Page locators and models",
          "The blog page",
          "Using pages in navigation",
          "Don't over-generalise tests!",
          "Waits and timeouts with Selenium",
          "Debugging acceptance tests in PyCharm",
          "Our final complex scenario",
          "Filling in forms with Selenium",
          "Access the final code of this section here",
          "Conclusion of this section"
        ]
      },
      "requirements": [
        "We'll give you a complete Python refresher, but some previous knowledge of programming will be helpful",
        "Some knowledge of how web applications work",
        "Understanding of REST APIs will be helpful, but not required"
      ],
      "description": "Welcome to the most comprehensive course on Automated Software Testing with Python on Udemy.\nTesting automation doesn't have to be painful. Software testing is an essential skill for any developer, and I'm here to help you truly understand all types of test automation with Python.\nI'm Jose, a software engineer and founder of Teclado. The focus of this course is on testing for the web—we'll be working with REST APIs and web applications, and technologies such as unittest, Postman, and Selenium WebDriver.\nFear not though, after going through this course, you'll be able to take your new testing knowledge and apply it to any project, even non-web projects!\nWhat will you work with?\nThis course is jam-packed with all the latest technologies for you to use professionally and in personal projects:\nThe unittest library, Python's standard automated software testing library;\nMocking and patching, two essential tools to reduce dependencies when testing;\nunit, integration, system, and acceptance testing—all types of testing to have you fully covered;\nPostman for easy collaboration and testing while developing;\nSelenium WebDriver for automated browser tests;\nGit and Travis for continuous integration of your project.\nFundamental Software Testing Skills\nWe will cover every fundamental software testing skill that you need to know in order to get a job testing or to apply these skills in your existing projects.\nFrom things like mocking and patching using the unittest library, which reduce dependencies and turn complex tests to simple ones; to looking at all types of testing: simple unit tests to large system tests and even customer acceptance tests.\nThe Testing Pyramid\nThe Testing Pyramid says you should have a lot of unit tests, slightly fewer integration tests, even fewer system tests, and as few acceptance tests as possible.\nThroughout the course we work on this concept, making sure that we have full coverage of every component of our system with unit tests. Then we test the dependencies using integration tests. Finally, we cover the entire system and its assumptions using system tests. Of course, we'll also look at what acceptance testing is, how we come up with acceptance tests, and some of the best ways to write acceptance tests for a web application using Behavior-Driven Development and Selenium WebDriver.\nAutomated Browser Testing with Selenium WebDriver\nSelenium WebDriver is extremely powerful, particularly when coupled with the efficient and tried-and-tested approach recommended in this course. We'll design our acceptance tests professionally—just the way you'd do at a software testing job. We'll use page models, locators, and step definitions to structure the automated tests in a reusable way. The customers will be able to come up with acceptance tests that you can easily translate to code.\nWe'll also learn about implicit and explicit waits with Selenium WebDriver and Python, a key concept to speed up the runtime of your acceptance tests.\nContinuous Integration\nWe also cover how you can take automated testing much further in your projects.\nBy implementing a Continuous Integration pipeline that runs your tests whenever you make any changes, you'll have much higher quality in your projects and not let any pesky bugs pass you by. We'll look at putting our projects in GitHub and liking the CI pipeline with them.\nI'm really excited to guide you through this course!\nJoin me in this automated testing journey. I'll see you on the inside!",
      "target_audience": [
        "Advanced students who want to learn about testing their Python applications to build more complete solutions",
        "Professionals wanting to learn more about automated software testing in their workplace",
        "Automated software testers and software developers"
      ]
    },
    {
      "title": "Mobile Automation: Appium Cucumber for Android&iOS + Jenkins",
      "url": "https://www.udemy.com/course/test-automation-with-appium-cucumber-and-ruby/",
      "bio": "Automate Android native application using Cucumber, Appium and Ruby + Bonus iOS Setup!",
      "objectives": [
        "Know how to use Appium framework with Android os",
        "Know how to automate any Android application using Appium",
        "Know how to use Cucumber framework for any testing project including Selenium",
        "Know how to work with Android real devices and emulators",
        "Know how to use Appium inspector and Uiautomatorviewer to identify elements in application",
        "Know how to install all required tools to begin test automation",
        "Able to Implement scalable framework using Cucumber and Ruby",
        "Know how to use Appium gestures: swipe, scroll, tap",
        "Know how to setup Jenkins server",
        "Bonus: Setup project for iOS app with basic elements"
      ],
      "course_content": {
        "Introduction": [
          "Introduction, Course Overview and Prerequisites",
          "Application overview"
        ],
        "Environment installation": [
          "About environment installation",
          "Mac: How to install Xcode",
          "Mac: How to install Android SDK",
          "Mac: How to install Appium Lib and Cucumber",
          "Mac: How to install Java SDK",
          "Mac & Windows: How to setup Android simulator in Android Studio",
          "Mac: How to install Appium",
          "Mac: Install RubyMine IDE",
          "Windows: How to install Java SDK",
          "Windows: How to install Android SDK",
          "Windows: How to install Ruby",
          "Windows: How to install Appium Lib and Cucumber",
          "Gem isntallation.",
          "Windows: How to install Appium",
          "Windows: Install RubyMine IDE",
          "How to configure Android real device for test execution",
          "Device or Simulator.",
          "How to install application on Android real device or simulator",
          "App installation.",
          "Why do we need all of these tools?"
        ],
        "Introduction to Cucumber": [
          "What is Cucumber and why we need it?",
          "Create Cucumber folders structure",
          "Naming convention",
          "Create first Cucumber scenario",
          "What is the required keyword to create new test in Cucumber?",
          "Cucumber step prefixes",
          "Adding second cucumber scenario",
          "Step definitions",
          "Adding arguments to steps",
          "Modify step definitions to accept multiple keywords",
          "Create Cucumber scenario outline",
          "Learn what is Cucumber tags",
          "Tagging test scenarios.",
          "Learn what is Cucumber hooks",
          "Before hook.",
          "Cucumber framework overview"
        ],
        "Introduction to Appium": [
          "Configure framework for Appium",
          "Appium capabilities.",
          "Learn what is UIAutomatorviewer",
          "Elements inspector.",
          "Create first Appium test",
          "Locators",
          "Create second appium test",
          "Appium command.",
          "Create new test scenario: 'Add conversion to Favorite list'",
          "Generate new step definitions",
          "Create test scenario: 'Add new custom conversion'",
          "Appium command.",
          "Create test scenario: 'Search existing conversion'",
          "Appium command.",
          "Learn how to add assertions to tests",
          "Create assertions.",
          "Learn how to locate multiple elements",
          "Arrays in Ruby.",
          "Appium command.",
          "Learn how to locate element inside container",
          "Element locators.",
          "Automate application screen keyboard",
          "Improve our code to type any values on screen keyboard",
          "Ruby questions.",
          "Learn how to verify element status (enabled or disabled)",
          "Improving test 'Add to Favorite list'",
          "Learn how to select value from Unit picker",
          "Learn how to use scroll method",
          "Appium command.",
          "Moving common code to method",
          "Appium command.",
          "Improve method 'Find in list'",
          "Appium command.",
          "Create test scenario: 'Reverse picker values'",
          "Element locators.",
          "Learn what is Cucumber profiles",
          "Cucumber profiles.",
          "Add screenshots to report file",
          "Screenshots.",
          "Create test scenario: 'History list'",
          "Ruby command.",
          "Learn how to use gestures",
          "Gestures",
          "Learn how to debug tests using Pry gem",
          "Debugging"
        ],
        "Jenkins Server": [
          "How to install Jenkins server",
          "How to launch Cucumber/Appium tests on Jenkins"
        ],
        "Bonus lectures": [
          "How to start automation with your own application",
          "How to start iOS test automation (bonus application attached)",
          "Tap on element using element coordinates"
        ]
      },
      "requirements": [
        "Programming knowledge is not required",
        "Windows and Mac user are welcome"
      ],
      "description": "Want to start writing automated tests?\nIn this course you will create your own project from beginning, including installation of all required tools, creating framework structure and learning what is Appium and how to use it.\nPrior knowledge of Ruby programming language is not required.\nCourse including 55+ video lectures with 100% hands-on material.\nYou'll learn hottest tools on a market: Cucumber, Appium and Ruby.\n\n\nAlso you'll be able to integrate your tests with Jenkins server!\n\nIn the end of this course you'll be able to automate similar projects by yourself\n\n\nBonus Lectures:\n- How to setup project for your Android App.\n- How to start iOS test automation (iOS app provided)",
      "target_audience": [
        "Planning to start test Automation? Start with hottest tool on a market - Appium",
        "This course is designed for anyone who even does not have experience with QA process"
      ]
    },
    {
      "title": "Selenium WebDriver with C# for Beginners + Live Testing Site",
      "url": "https://www.udemy.com/course/seleniumqa/",
      "bio": "Selenium is the most popular tool to test websites! Join me and hundreds of students to learn Selenium Webdriver!",
      "objectives": [
        "Write tests in PLAIN ENGLISH",
        "Work with ID, Name, CSSPath and XPath Selectors and know when to use each one of them in Selenium",
        "Work with Input boxes, Check boxes, Radio buttons, Alert boxes and more",
        "Work with Page Object Model and implement it correctly",
        "Create a Healthy Selenium Automation Framework",
        "Running Tests on Mobile Devices with Selenium and Appium",
        "Parallel Testing with Selenium and NUnit3",
        "Using Different Browsers - Chrome, Opera, Internet Explorer, Firefox",
        "Taking Screenshots with Selenium",
        "Using PhantomJS Driver and Selenium (we have a project here to download all posts from a website!)",
        "Working with Element Properties (Size, Location, Stylings, e.g. change colors or make elements disappear)",
        "Executing Javascript through C# with Selenium",
        "Working with Browser Properties (Size, Location, New Tabs/Windows, Tabs/Windows Handles)",
        "Generating beautiful HTML Reports for our Test Results with Selenium and NUnit3"
      ],
      "course_content": {
        "Introduction to Selenium WebDriver": [
          "Introduction to the course and an answer to \"Why C#?\"",
          "Installing Visual Studio",
          "Getting Started - Setup Selenium WebDriver and your Development Environment"
        ],
        "Element Selectors in Selenium WebDriver": [
          "Name",
          "ID",
          "Class Name",
          "CSS and X Path",
          "How to Handle NoSuchElement Exception in Selenium WebDriver",
          "Selectors Source Code",
          "How do you handle NoSuchElementException?",
          "How to chose the right Selector?",
          "Which selector you should use and why?"
        ],
        "Handling Special Elements with Selenium WebDriver": [
          "Text Input Field",
          "Check Box",
          "Radio Button",
          "Drop Down Menu",
          "Alert Box",
          "Special Elements Source Code",
          "Special Elements quick Quizz"
        ],
        "Testing Philosophy": [
          "Test Case & Test Scenario - What are these?",
          "Assertion - Think wisely!",
          "Mindmaps and Automated Testing?",
          "Testing and Philosophy? What?"
        ],
        "Selenium WebDriver Automation Framework Structure": [
          "What is Automation Framework?",
          "Page Object Model (POM)",
          "PageFactory Becoming Obsolete?",
          "Configuration - Ask me anything!",
          "Navigation - How and where do you need to go?",
          "Actions - What do you have to do in order to get there?",
          "Setup NUnit Test Runner - And run your tests!",
          "Structure your Framework - the Right Way! (And a little test debugging!)",
          "Fix your Driver and Actions class if you have this error",
          "Download Framework SourceCode",
          "Let's see if you really understood what this Framework lets you accomplish",
          "What are the keywords Public/Void/Static/Get/Set really about - Part 1 Static",
          "What are the keywords Public/Void/Static/Get/Set really about - Part 2 Void",
          "What are the keywords Public/Void/Static/Get/Set really about - Part 3 Public",
          "What are the keywords Public/Void/Static/Get/Set really about - Part 4 Get/Set"
        ],
        "Taking Screenshots and Generating Beautiful HTML Reports with Selenium and Nunit": [
          "How to take a Screenshot with Selenium WebDriver and Save it",
          "Generate a Report with NUnit and Run Tests with Console Runner",
          "Convert The Report Into a Beautiful HTML Report"
        ],
        "Parallel Test Execution with Selenium and C#": [
          "Enable Parallelization and Basic Settings",
          "Refactor The Framework to Run Parallel Tests",
          "Parallel Test Execution - Source Code"
        ],
        "Userlike Actions, Executing Javascript and Working with Elements": [
          "Get the Location and the Size of an Element",
          "Execute JavaScript with C# and Modify the Stylings of an Element",
          "Perform Userlike Actions - Check Hover Effect",
          "Drag and Drop Elements"
        ],
        "Running Tests on Different Drivers and Working With Drivers in Selenium": [
          "Use Different Drivers - Internet Explorer, Firefox, Opera",
          "Control the Location and Size of a Driver",
          "Switch Between Multiple Tabs or Windows in a Driver",
          "Open and Close a New Tab or a New Window in a Driver",
          "If you have trouble opening a new tab with the code from the lecture, read this"
        ],
        "Selenium PhantomJS (Headless Browser) with a Scraper Project": [
          "Setup PhantomJS and Extract a Sitemap From a Website",
          "Use String Formatting to Extract Links From The Sitemap",
          "Extract Content From a Website - Post Titles and Content",
          "Save The Extracted Content In Text Files"
        ]
      },
      "requirements": [
        "Visual Studio Installed (the course has included tutorial if you don't know how to install it)",
        "Have basic coding knowledge - Variables, Simple If Statements, Simple For loops",
        "Basic Knowledge in C# (Not a necessity but it will help you!)",
        "Desire to learn how to use Selenium WebDriver"
      ],
      "description": "Selenium Webdriver is a free automation testing tool for web applications. It is able to work with different browsers like Chrome, Firefox, IE, Opera and simulate human like behavior. Selenium is able to interact with all the different elements in a webpage. It can click on them, input text, extract text and much more. By covering all the different functionalities on your website with Selenium tests, you will be able to quickly catch new and reappearing old bugs. This will save your team time and money.\n\nIn this Selenium course you will also find a 24/7 LIVE Website which you can use to test everything that you are learning in the course!\n\nThis course is perfect for people who are beginners in the subject or manual testers that want to move on to automated testing.\nThe Selenium Webdriver with C# course is available to you at any time and you have 30-Day MoneyBack Guarantee by Udemy! No questions asked!\nIn this course we will focus on Graphic User Interface and Functionality Testing and we will learn how to work with the various element selectors and special elements like:\nID, Name, CSS, Xpath and Class Selectors\nTextbox, Check box, Radio buttons, Drop down Menus\nJavaScript Alert Boxes\nWe will also have a few theory lectures about Selenium and testing in general in which I will explain:\nWhen you should use either of these selectors;\nWhat is a Test Case/Scenario\nHow you can use Mindmaps in testing\nThen we will start creating our Automation Framework with Selenium! When you learn how to create a Framework by the end of the course, you will be able to write your Selenium WebDriver tests in Plain English!\nThis course also includes lectures on:\nRunning Tests on Mobile Devices with Selenium and Appium\nParallel Testing with Selenium and NUnit3 (running multiple tests at the same time)\nGenerating beautiful HTML Reports for our Test Results with Selenium and NUnit3\nUsing Different Browsers - Chrome, Opera, Internet Explorer, Firefox\nTaking Screenshots with Selenium\nUsing PhantomJS Driver and Selenium (we have a project here to download all posts from a website!)\nWorking with Element Properties (Size, Location, Stylings, e.g. change colors or make elements disappear)\nExecuting Javascript through C# with Selenium\nWorking with Browser Properties (Size, Location, New Tabs/Windows, Tabs/Windows Handles)\nTake this course and join hundreds of satisfied students!\nWhat are they saying about the course:\nJoanna Badiola (5 Stars):\n\"The course is very clear and can be easily understood even with minor knowledge in programming.\"\nJose Ignacio Calvo Torel (5 Stars):\n\"Short but great and detailed course!\"\nCassessa (5 Stars):\n\"Normally I am not so easily impressed. But this I give it a 5! Really Great!\"\nAlexander Mosenko (5 Stars):\n\"This training course gives a solid foundation needed to start learning Selenium Webdriver with C#. Also, the instructor provides a good support on students' questions.\"\n\nMr. Javier Acha (5 Stars):\n\"This training course gives a solid foundation needed to start learning Selenium Webdriver with C#. Also, the instructor provides a good support on students' questions.\"\n\nEd (5 Stars):\n\"This course is plain, easy to understand. You will not waste your time learning any useless lectures.\"\n\nJoin us!",
      "target_audience": [
        "Manual Testers who want to learn how to work with Selenium WebDriver",
        "QA Interns",
        "QA Professionals with no Selenium experience",
        "Freelancers that want to make bugfree websites"
      ]
    },
    {
      "title": "Selenium PYTHON : (Basic, Advance, Framework)",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-python-basic-advance-framework/",
      "bio": "Selenium Python WebDriver Test Automation Framework - Reporting, DataDriven , Hybrid , POM Framework",
      "objectives": [
        "Zero Prior Knowledge of WebDriver, Java & Automation Testing required. We will start from very Basics",
        "By the end of the course, You will be able to develop an awesome Test Automation framework",
        "Expertise to become Lead SDET / Automation Architect",
        "Last but not least\" you can clear any Interview and can Lead Entire Selenium Automation Project from Design Stage.",
        "You will improve your Selenium with Python coding skills in writing best optimised code for Automating test-cases."
      ],
      "course_content": {
        "Selenium Python Course Introduction": [
          "Introduction and Road Map",
          "Start With Selenium Python"
        ],
        "Python Introduction and Basics | Selenium Python": [
          "Install Python on Mac - Windows",
          "Install Python IDE for Code Writing",
          "Create First Python Script and Execute",
          "Naming Convention in Python",
          "Download Complete Course Code Base"
        ],
        "Python Variables and DataTypes | Selenium Python": [
          "Python Syntactical Errors",
          "Variable in Python",
          "Data Types in Python",
          "Typecasting in Python"
        ],
        "Python Decision Making & Functions | Selenium Python": [
          "Python Decision Making Statements I",
          "Python Decision Making Statements II",
          "Python Loops - For, While",
          "Python Breaks and Continue",
          "Python Functions",
          "Returning Results from a Function",
          "Python Local and Global Variable",
          "Handle Date and Time in Python"
        ],
        "Python Data Structures and Strings | Selenium Python": [
          "Python String",
          "Python String Methods",
          "Lists in Python",
          "Methods in Python List",
          "Tuples in Python",
          "Sets in Python",
          "Dictionaries in Python"
        ],
        "Python Object Oriented Programming | Selenium Python": [
          "Python Classes and Objects",
          "Instance Variables in Python",
          "Class Variables in Python",
          "Instance Methods in Python",
          "Class Methods in Python",
          "Static Methods in Python",
          "Inheritance in Python",
          "Inheritance in Python II",
          "Types of Inheritance in Python",
          "Encapsulation in Python",
          "Concept of Getter and Setter in Python Encapsulation",
          "Polymorphism in Python",
          "Abstract Classes in Python"
        ],
        "Python Exception Handling | Selenium Python": [
          "Exception in Python",
          "Exception Handling in Python"
        ],
        "Python File Handling | Selenium Python": [
          "Create File in Python",
          "Read File in Python",
          "Write in File in Python"
        ],
        "Reading Writing Excel File in Python | Selenium Python": [
          "Reading Excel File in Python I",
          "Reading Excel File in Python II",
          "Writing Excel File in Python",
          "Create Common Function Class for Excel Reading Writing",
          "Create Common Function Class for Excel Reading Writing II",
          "Working with Configuration Files in Python"
        ],
        "JSON Data Handling Using Python | Selenium Python": [
          "Python JSON Encoding",
          "Python JSON Parsing",
          "Validate JSON Data using Python"
        ]
      },
      "requirements": [
        "******You need NOT have Python coding experience to start this course********* Even non Programming candidates can follow this course comfortably",
        "Theoretical Material,Code dump are available for download",
        "Windows/MAC computer"
      ],
      "description": "Selenium Python Training course videos will help you learn Python, Pytest, WebDriver, and Frameworks. The objective of the course is that you should be able to work on Selenium using Python to an expert level, which can help you clear interviews/work on projects.\nWe have covered various projects and frameworks, which will give you industry-level experience.\n\nOn course completion, you will be a master in Selenium Automation Testing with Python and can successfully implement it in your workplace or will surely land High high-paying job\n\nExamples are taken from REAL-TIME HOSTED WEB APPLICATIONS to understand how different components can be automated.\nTopics include:\n\nPython Basics\nPython Modules, Variables, and Data Types\nPython Decision-Making & Functions\nPython Data Structures and Strings\nPython Object-Oriented Programming\nInheritance & its types\nPython Encapsulation\nDecorators & Generators\nPython Exception Handling\nOpenpyxl and reading Excel files\nWriting into an Excel file\nWhat is Pytest | Installing Pytest\nGrouping & Parameterizing test cases\nFixtures & Dependency\nPytest Allure Reports\nCustomizing Allure Report\nProject Structure with Python is reusable with any project\nWhat Is Selenium Webdriver? Components of Selenium Webdriver\nDownloading Selenium in Eclipse/PyCharm\nLaunching Browsers with Selenium\nHandling Browser Notifications, Proxy Settings, Logs, and SSL Errors\nIdentification of Objects in Selenium Python WebDriver\nUsing XPaths with Selenium Python\nUsing CSS Selectors with Selenium WebDriver\nWaiting Strategies, WebElement Features, and Exceptions in Selenium\nMultiple Object Extraction\nTaking Screenshots, Managing CheckBoxes, Radio Buttons, Dropdowns with Selenium\nMultiple Window Handing With Selenium\nManaging Frames and Javascript Alerts\nAction Class and Performing Complex User Actions\nManaging Web tables\nHandling Ajax Auto Suggests, JSE & AutoIT\nUploading and Downloading Files With Selenium\nManaging Website Cookies\nParallel execution with Selenium Grid\nJenkins and Git Implementation\nData Driven Framework - LIVE PROJECT\nHybrid Framework - LIVE PROJECT\nPage Object Model - LIVE PROJECT\nAll the Best! Happy Testing :)",
      "target_audience": [
        "Engineering Students, Manual QA Engineers, Industry QA Professionals, Automation Testing Professionals"
      ]
    },
    {
      "title": "Learn Web Automation Testing Using Selenium",
      "url": "https://www.udemy.com/course/learn-web-automation-testing-using-selenium/",
      "bio": "Learn Professional Web Testing Using Selenium and Associated Technologies",
      "objectives": [
        "Create test scripts in Selenium",
        "Learn about Selenium IDE and Webdriver",
        "Learn to automate browsers and create exploratory tests",
        "Learn Jenkins and log4j"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course"
        ],
        "Introduction to Selenium": [
          "Selenium Basics",
          "Selenium IDE",
          "Web testing using selenium"
        ],
        "Selenium Web Elements": [
          "Xpaths in Automation testing",
          "Firebug",
          "Working with Eclipse",
          "Understanding the code",
          "Final Coding"
        ],
        "Selenium - Navigation in Webdriver": [
          "Webdriver",
          "Best practices",
          "Handling Inputs",
          "Element Resizing"
        ],
        "Selenium - Advance Scripting": [
          "Testing Form Elements",
          "More Element Testing",
          "JavaScript Popup",
          "Synchronisation in Selenium webdriver"
        ],
        "Selenium - TestNG": [
          "Intro to TestNG framework",
          "TestNg Install",
          "Apache POI",
          "Output"
        ],
        "Selenium - Database Testing": [
          "Introduction to database testing",
          "Testing Database App",
          "Selenium Grid Server",
          "Jenkins"
        ],
        "Apache Log4J": [
          "Using Log4J"
        ],
        "Keywords Driven Framework": [
          "Introduction",
          "Scripting basics",
          "Tools QA",
          "Basic Cucumber",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic software testing concepts should be known to the student"
      ],
      "description": "Selenium is the most popular web browser automation tool and is an essential skill for both web developers, testers and quality professionals. Selenium automates browsers and if you can use selenium to create powerful scripts to run across systems and environments. You can also create powerful scripts for exploratory testing.\nOur Course in Selenium covers the following\nSelenium Web Testing Basics - Learn to setup the system and learn about the web automation testing fundamentals.\nSelenium Web Elements - Learn how to use web elements in selenium web driver to quickly create powerful scripts.\nSelenium Automation Features - Learn all about the automation features required for generating robust test suites.\nAdvance Features - Learn advance techniques and selenium use with Eclipse.\nTestNG - We also cover TestNg as part of this course. Learn to use this powerful framework in quick and easy steps\nLog4J and Other frameworks - Learn powerful testing frameworks like Log4J and Jenkins along with Selenium to complete your automation testing knowhow.\nThe course covers the latest tools and professional use cases and will be helpful for anyone wants to automate web app testing. Join us and starting creating powerful test scripts for your web projects.",
      "target_audience": [
        "Web developers who want to learn automation testing",
        "Manual testers who want to learn web automation"
      ]
    },
    {
      "title": "Mobile Application Automation : Calabash - Ruby - Cucumber",
      "url": "https://www.udemy.com/course/ready-api/",
      "bio": "With detail cucumber and ruby scripting",
      "objectives": [
        "Ready to automate mobile application using ruby, cucumber, calabash"
      ],
      "course_content": {
        "Ruby Setup": [
          "Introduction & Setup ruby environment",
          "Eclipse and Ruby Plugin setup"
        ],
        "Ruby Basic Programming": [
          "Programming Kickoff",
          "Ruby Gem",
          "Ruby Programming on Notepad",
          "Ruby Interactive Environment",
          "Ruby Start and End block",
          "Class",
          "Methods in detail",
          "Constructor",
          "Condition Handling",
          "Condition Handling - Logical OR/AND",
          "While Loop",
          "For Loop",
          "Array",
          "For Each Loop",
          "Hashes",
          "String Handling",
          "Local Variables",
          "Global Variable",
          "Class Variable",
          "Instance Variable",
          "Exception Handling",
          "Modules"
        ],
        "OOPS in Ruby": [
          "Inheritance",
          "Overriding"
        ],
        "Read / Write Data": [
          "Read Data from File",
          "Write Data to File",
          "Read Data from Excel",
          "Write Data to Excel"
        ],
        "BDD with Cucumber": [
          "What is TDD",
          "What is BDD",
          "Difference between BDD and TDD",
          "BDD Tool : Cucumber Basics"
        ],
        "Feature File : Gherkin Language": [
          "Feature Keyword",
          "Scenario Keyword",
          "Given Step",
          "When and Then Step",
          "Background Step",
          "Step Argument",
          "Step Outline",
          "Comments and Tags"
        ],
        "Step Definitions": [
          "Install Cucumber Gem",
          "What is Step definition",
          "Step Definition File",
          "Data Passed from Step Definition"
        ],
        "Hooks": [
          "What is Hooks",
          "Before Hook",
          "After Hook",
          "Cucumber - Run Tagged Scenario",
          "Tagged Hooks",
          "Multiple Tagged Hooks- Logical OR",
          "Multiple Tagged Hooks- Logical AND"
        ],
        "Setup Environment for Calabash Automation - Android": [
          "ADT Installation on Eclipse",
          "Setup Android SDK",
          "Configure Environment Variables",
          "View Mobile Screen on Windows : Droid at Screen",
          "Install Calabash-Android"
        ],
        "Android Debug Bridge (ADB)": [
          "What is ADB",
          "ADB Commands"
        ]
      },
      "requirements": [
        "Windows machine"
      ],
      "description": "Calabash helps automate and test any iOS or Android app, native or hybrid, from the UI level down. Xamarin provides both the automation framework as well as the device cloud, so you can enjoy perfect integration and continuous improvements to Calabash in response to customer needs.\nWith Xamarin Test Cloud, you can select devices based on form factor, manufacturer, operating system, or even popularity in your target market. We’re adding over 100 devices every month, and if there’s a specific device you need, we’re taking requests.\nWhile Calabash is completely free, Xamarin, the company that developed and maintains Calabash, provides a number of commercial products and services centered around Calabash and quality assurance for mobile.\nXamarin Test Cloud is a cloud-based mobile testing lab which lets you execute Calabash tests on over 1,000 real mobile devices in the cloud.",
      "target_audience": [
        "Freshers looking opportunity in Testing",
        "Manual Tester want to start career in automation testing"
      ]
    },
    {
      "title": "SDET Interview Prepration",
      "url": "https://www.udemy.com/course/sdet-interview-preparation/",
      "bio": "Ace SDET Interviews Fast with Real-World Projects",
      "objectives": [
        "Prepare for SDET Interview while creating an awesome automation framework",
        "Learn how to write clean test scripts",
        "Build real world test automation framework that you can showcase in your resume",
        "Learn How to use Java OOP correctly in your Test Automation Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Building a console based application in java": [
          "Building a console based appln in java"
        ],
        "Test Automation Framework Creation": [
          "Test Automation Framework Creation Part 01",
          "Test Automation Framework Creation Part 02",
          "Test Automation Creation Framework Part 03",
          "Test Automation Creation Framework Part 04",
          "Test Automation Creation Framework Part 05",
          "Test Automation Creation Framework Part 06",
          "Test Automation Framework Creation Part 07"
        ],
        "Outro": [
          "It was fun till it lasted!"
        ]
      },
      "requirements": [
        "Basic Java Knowledge will help"
      ],
      "description": "Are you preparing for an SDET interview and feeling overwhelmed by the sheer volume of topics to master? Our SDET Interview Mastery Course is here to fast-track your success! This self-paced, beginner-friendly course is specifically designed for manual testers transitioning to automation and for anyone looking to solidify their fundamentals.\nThrough real-world projects and hands-on learning, you will:\nRevise Core Java Concepts: Build a Java console application while mastering Object-Oriented Programming (OOP).\nUnderstand Test Automation Basics: Learn the principles and best practices of automation testing.\nMaster Selenium WebDriver: Gain expertise in web automation with real-world examples.\nWork on Real-World Projects: Apply your knowledge to project assignments that simulate industry scenarios.\nThis is the Latest Interview Question which one of my student from SDET Master Class had faced! So I thought it would be helpful for people preparing for Automation Testing interviews!\nNow In this course we will revise Java and create and automation framework and integrate it with GitHub actions and archive the test reports in the GitHub pages\nWhether you are new to automation or looking to strengthen your SDET skills, this course provides lifetime access to high-quality materials, empowering you to revisit and sharpen your expertise anytime.\nTake the first step toward a thriving SDET career by combining theory, practical implementation, and project-based learning. Enroll now and be interview-ready in no time!",
      "target_audience": [
        "Manual Testers Learning Automation Testing",
        "Automation Engineer Preparing for Interview"
      ]
    },
    {
      "title": "Learn HiL Testing from Scratch (Hardware in the Loop)",
      "url": "https://www.udemy.com/course/learn-hil-testing-from-scratch-hardware-in-the-loop/",
      "bio": "Understand all the concepts behind HIL Environment",
      "objectives": [
        "Hardware in the Loop for Automotive",
        "For Testers & Developers"
      ],
      "course_content": {},
      "requirements": [
        "Interest to Learn"
      ],
      "description": "In this course learners can learn completely about HIL Testing (Hardware In the Loop) & capable of handling HIL Environment independently by knowing risks and measures while working.\nEach part described gives a clarity to learners from the scratch. The complete playlist has created sequentially to make techies to understand each and every concepts with clear explanation. At the end of this course learners can gain more confident on handling HIL Environment while testing.\nHIL Testing or HIL Simulation is not like other topics, you should have live hands on experience to attain knowledge and gain exposure but only working is not sufficient to excel in you career. In this course we brought you to understand A-Z concepts in HIL. One who learns this can easily adapt him/her for HIL Environment and utilize their knowledge in workplace from this course.",
      "target_audience": [
        "Automotive Professions"
      ]
    },
    {
      "title": "Web Application Automation - Selenium - Ruby - Cucumber",
      "url": "https://www.udemy.com/course/selenium-with-ruby/",
      "bio": "With Cucumber Integration",
      "objectives": [
        "Complete understanding of basic to expert Ruby concepts with practical implementation",
        "Complete understanding of basic to advance cucumber with practical implementation",
        "Can automation any realtime application and also can design framework from scratch"
      ],
      "course_content": {},
      "requirements": [
        "No programming or coding experience required",
        "Machine with Windows OS"
      ],
      "description": "This course includes Selenium WebDriver Basics and Advanced, Ruby Concepts, Cucumber Framework, Automation Framework Design (Page Objects, Data Driven, Reading Excel Files)\nParallel execution with Selenium Grid 2.0, Code management with Git integration\n\nThis course will take you from basic to expert level step by step, we are covering all Ruby concepts which are required for daily selenium activities and also for preparing selenium interview\nRuby Basics: Variables, If-Then-Else, For loop, While loop, Arrays, Classes, Inheritance, Objects, Constructors, Methods, Working with Excel file and database\nSelenium WebDriver Basics: Commonly used methods and locator types, Id, Name, Class Name, Link Text, Partial Link Text, Xpath, Css Selector\n\nAjax Handling,  Multi window handling, Actions class,  Implicit wait, Explicit wait. After completing the the course you will be able to write automated tests using selenium and java",
      "target_audience": [
        "Software QA and Testers who want to start career in automation",
        "Anyone who is interested in learning software test automation"
      ]
    },
    {
      "title": "Selenium with Python Frameworks : Data Driven & BDD",
      "url": "https://www.udemy.com/course/robot-framework-python/",
      "bio": "Data Driven Framework using Pytest | BDD Framework using Behave",
      "objectives": [
        "Basic to advance understanding of Robot Framework and Python",
        "Ready to face interview questions in Python & Robot"
      ],
      "course_content": {
        "Setup Instructions on Windows Machine": [
          "Setup Python on Windows Machine",
          "Setup Pycharm: Editor for Python Programming",
          "Package Installation Manager : PIP"
        ],
        "PyTest : Unit Testing Framework for Python": [
          "PyTest Introduction",
          "Write Test Case in Pytest format",
          "Skip Test Cases | Execute test cases conditionally",
          "Grouping Test Cases",
          "Fixtures",
          "Assertions",
          "Write End to End Test Case in PyTest format"
        ],
        "Formatted Project Structure": [
          "***** NOTE ******",
          "Create Project Structure",
          "Create Base Files",
          "Create & Read data from Config File",
          "Manage Element Locators in Config File",
          "Page Object Model & Its Advantages",
          "Implement POM"
        ],
        "Data Driven Testing Framework": [
          "Data Driven Testing with static data",
          "Data Driven Testing with excel data source"
        ],
        "Understand Gherkin": [
          "BDD Basics",
          "Common Files to be created in BDD",
          "Start Writing Feature File",
          "Gherkin: Feature Keyword",
          "Gherkin: Scenario Keyword (Test Cases)",
          "Given Keyword",
          "Gherkin: When & Then Step",
          "Gherkin: Background Step",
          "Gherkin: Scenario Outline",
          "Gherkin: Comments & Doc String",
          "Tags & Control Execution using Tags"
        ],
        "BDD Framework": [
          "Create Project Structure",
          "Create Feature File",
          "Step definition file",
          "Tags & Control Execution using Tags",
          "Environment File",
          "Generate Report in BDD framework"
        ],
        "Work with Excel {Required for Data Driven}": [
          "Install Module | Move to Sheet Level",
          "Read one Cell Data",
          "Read All Rows & Cells Data",
          "Write Data to Excel"
        ],
        "Work with JSON {Required for Data Driven}": [
          "JSON Basic Understanding",
          "JSON Path Basics",
          "JSON Path Advance",
          "Work with JSON",
          "Fetch & Validate JSON Response"
        ]
      },
      "requirements": [
        "Basic understanding of Manual Testing",
        "Basic understanding of Windows Operating System"
      ],
      "description": "Selenium is an open-source web-based automation tool. Python language is used with Selenium for testing. It has far less verbose and easy to use than any other programming language.\nData Driven Framework is one of the popular Automation Testing Framework in the current market. Data Driven automated testing is a method in which the test data set is created in the excel sheet, and is then imported into automation testing tools to feed to the software under test.\nData Driven allow to execute our test cases with different sets of test data, data can be fetched from CSV, EXCEL, Database or any other source.\nBDD Framework\nbehavior-driven development (BDD) is a software development process that emerged from test-driven development (TDD).Behavior-driven development combines the general techniques and principles of TDD with ideas from domain-driven design and object-oriented analysis and design to provide software development and management teams with shared tools and a shared process to collaborate on software development.",
      "target_audience": [
        "Manual Testers looking opportunity in Automation Testing",
        "Selenium Automation Testers looking for ATDD testing using Robot"
      ]
    },
    {
      "title": "Web Automation-Selenium-Ruby|E-2-E Cucumber integration-15hr",
      "url": "https://www.udemy.com/course/selenium-ruby/",
      "bio": "Detailed ruby programming | Bdd with cucumber | Test Unit and Its usage | Automation Framework |",
      "objectives": [
        "** Ready to automate any web application using Selenium and Ruby ***",
        "** Detailed understanding of Ruby Programming concepts ***",
        "** Ready to implement knowledge in realtime projects ***",
        "** Ready to face Selenium-Ruby Interview questions ***"
      ],
      "course_content": {
        "Course Introduction & Setup": [
          "Course Agenda",
          "Ruby Course Introduction",
          "Setup Ruby Environment",
          "** Course Architecture : Must for Everyone **",
          "Ruby Interactive Environment",
          "Ruby Gems",
          "First Ruby Program",
          "Print Data | Get Input and Comments",
          "***** Time For Practice : Task 1 *****",
          "BEGING and END block"
        ],
        "Jump into detailed Programming": [
          "Class and Objects",
          "Working with Methods - Part 1",
          "Working with Methods - Part 2",
          "Working with Methods - Part 3",
          "Instance and Class Method",
          "***** Time For Practice : Task 2 *****",
          "***** Time For Practice : Task 3 *****",
          "What is Constructor",
          "Constructor with argument",
          "Why & where to use constructors"
        ],
        "Condition Handling": [
          "Condition Handling | If - else",
          "Condition Handling | If - elsif - else",
          "Condition Handling | Nested If",
          "Condition Handling | with Conditional OR",
          "Condition Handling | with Conditional AND",
          "***** Time For Practice : Task 4 *****",
          "***** Time For Practice : Task 5 *****",
          "***** Time For Practice : Task 6 *****",
          "***** Time For Practice : Task 7 *****",
          "***** Time For Practice : Task 8 *****"
        ],
        "Different types of Variables": [
          "Variable Types",
          "Local Variable",
          "Instance Variable",
          "Class Variable",
          "Global Variable"
        ],
        "Looping": [
          "For Loop Basics",
          "For Loop - break keyword",
          "For Loop - Next keyword",
          "For Loop - Redo keyword",
          "***** Time For Practice : Task 9 *****",
          "***** Time For Practice : Task 10 *****",
          "***** Time For Practice : Task 11 *****",
          "***** Time For Practice : Task 12 *****",
          "***** Time For Practice : Task 13 *****",
          "While Loop",
          "Until Loop",
          "Each Loop",
          "***** Time For Practice : Task 14 *****",
          "Programming : Display triangle - Part1",
          "Programming : Display triangle - Part2",
          "***** Time For Practice : Task 15 *****",
          "***** Time For Practice : Task 16 *****",
          "***** Time For Practice : Task 17 *****",
          "***** Time For Practice : Task 18 *****"
        ],
        "Arrays": [
          "Array Basics",
          "Create Array | Insert | Fetch",
          "Common methods of Array Class - Part1",
          "Common methods of Array Class - Part-2",
          "Each Loop with Array",
          "***** Time For Practice : Task 19 *****",
          "***** Time For Practice : Task 20 *****",
          "***** Time For Practice : Task 21 *****",
          "***** Time For Practice : Task 22 *****",
          "***** Time For Practice : Task 23 *****",
          "***** Time For Practice : Task 24 *****"
        ],
        "String Handling": [
          "What is String",
          "String Functions - Part-1",
          "String Functions - Part-2",
          "String Functions - Part-3",
          "String Functions - Part-4",
          "***** Time For Practice : Task 25 *****",
          "***** Time For Practice : Task 26 *****",
          "***** Time For Practice : Task 27 *****",
          "***** Time For Practice : Task 28 *****",
          "***** Time For Practice : Task 29 *****",
          "***** Time For Practice : Task 30 *****",
          "***** Time For Practice : Task 31 *****",
          "***** Time For Practice : Task 32 *****",
          "***** Time For Practice : Task 33 *****",
          "***** Time For Practice : Task 34 *****",
          "***** Time For Practice : Task 35 *****"
        ],
        "Working with Hash": [
          "What is Hash",
          "Different approaches to create hash",
          "Common methods of Hash class",
          "Hash: Using symbol as key",
          "Each Loop with Hash",
          "***** Time For Practice : Task 36 *****",
          "***** Time For Practice : Task 37 *****"
        ],
        "File Handling": [
          "Reading data from file",
          "Write data to File",
          "Read and Write Data",
          "***** Time For Practice : Task 38 *****",
          "***** Time For Practice : Task 39 *****",
          "***** Time For Practice : Task 40 *****",
          "***** Time For Practice : Task 41 *****",
          "***** Time For Practice : Task 42 *****",
          "***** Time For Practice : Task 43 *****"
        ],
        "Modules": [
          "What is Module",
          "Module Methods",
          "Class inside module",
          "Sub modules",
          "***** Time For Practice : Task 44 *****"
        ]
      },
      "requirements": [
        "Should have basic understanding of Manual Testing",
        "Should have basic understanding of Notepad++"
      ],
      "description": "Ruby is one of the most popular scripting language for developer as well as testers, and selenium is the most popular tool for web automation.\nThis course is designed for newbies who are not much familiar to any programming and automation\nHere we are going to cover\n- almost all basic and advance concepts of Ruby Scripting which are required to work on different automation tool.\n\nHere you will cover\n1.  Basic concepts like Class, Object, String, Loop and advance concepts like File Handling, working with Excel, Database connectivity etc\n2.  Selenium web driver basics and advance convepts\n3.  End to End BDD framework with Selenium, Cucumber and Ruby\nAfter completing this course, you will be very much comfortable to start automation and face automation interviews",
      "target_audience": [
        "Manual testers looking opportunity in Automation Testing",
        "Automation testers want to Switch in Selenium with Ruby Programming"
      ]
    },
    {
      "title": "Rest api testing using Postman tool",
      "url": "https://www.udemy.com/course/api-postman/",
      "bio": "With detail understanding of json",
      "objectives": [
        "Ready to automate complex Rest API",
        "Ready to work as API tester"
      ],
      "course_content": {
        "Introduction to Web Services": [
          "What is WebService",
          "WebService Example"
        ],
        "Rest Services": [
          "Different type of Services : Soap and Rest",
          "Difference between Soap and Rest Services",
          "Advantage of Rest services or Soap services",
          "Different methods in Rest Services",
          "Basic understanding of JSON"
        ],
        "Setup and Understand Postman environment": [
          "Setup Postman on Windows machine",
          "Basic understanding of Postman Window",
          "Endpoint and Resource",
          "Sample Rest API For Practice - GET Request"
        ],
        "Jump into REST Api testing": [
          "First Test Case : GET Request",
          "Rest API with Parameters",
          "What is Rest API with Parameters",
          "Test Case : GET Request : Parameters"
        ],
        "Validate Response": [
          "Validate Status Code",
          "Validate Response Time"
        ],
        "Rest API Testing": [
          "Sample Rest API Project For Practice",
          "Test Case : Post Request",
          "Test Case : Put Request",
          "Test Case : Delete Request",
          "Test Case : Patch Request"
        ]
      },
      "requirements": [
        "Basic understanding of Web Application/ Web Services",
        "Basic knowledge of Internet/ Browser"
      ],
      "description": "A powerful GUI platform to make your API development faster & easier, from building API requests through testing, documentation and sharing.\nThis Course explains\n·What are the Webservices\n·How to Test the Rest API using Postman\n·Differences btween Soap and Rest Services\n\n·Postman Features\n·What are Rest API\n·Testing Resting API\nThis course will take you from basic to advance concepts of Postman tool, it will give regular exercise so that individual can practice while learning",
      "target_audience": [
        "Software Testers looking to automate REST Api",
        "Developers want to unit test Rest API"
      ]
    },
    {
      "title": "Complete Selenium Ruby Automation Engineer Bootcamp",
      "url": "https://www.udemy.com/course/complete-automation-engineer-bootcamp/",
      "bio": "Complete Automation Engineer Training from Scratch. Go From Zero to Hero. Enhance your Career as an Automation Engineer",
      "objectives": [
        "Learn Ruby Programming Language",
        "Learn about History of Selenium.",
        "Learn about Selenium IDE",
        "Learn about Selenium RC",
        "Learn about Selenium WebDriver",
        "Learn to automate web application in Firefox",
        "Learn to automate web application in Chrome",
        "Learn to automate web application in Safari",
        "Learn to automate web application in Internet Explorer",
        "Learn about different Selenium locators such as XPaths and CSS",
        "Create Automated Scripts for various web applications",
        "Learn about Data Driven Framework",
        "Create Data Driven Automation Framework Using Excel",
        "Create Data Driven Automation Framework Using YAML",
        "Learn about ATDD",
        "Create ATDD Framework Using Cucumber",
        "Create ATDD Cucumber Framework with parameterization",
        "Learn about Ruby Gemfile to install dependent gems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "Tips for Learning this Course",
          "Java Installation for Mac"
        ],
        "Software Setup": [
          "Bash Profile Set up for Mac",
          "Java Installation for Windows",
          "Ruby Installation for Mac",
          "Ruby Installation for Windows",
          "Rubymine Installation for Mac",
          "Rubymine Installation for Windows",
          "Eclipse(Rubymine Alternative) Installation for Mac",
          "Eclipse(Rubymine Alternative) Installation for Windows"
        ],
        "Ruby Essentials (Beginner Level)": [
          "What is String?",
          "String Methods",
          "More String Methods",
          "Integer in Ruby",
          "Integer Methods",
          "Conditional Execution - If & Else",
          "If & Else Continued..",
          "Conditional Execution - Case",
          "String Interpolation",
          "String and Conditional Expressions Quiz",
          "Array in Ruby",
          "Looping - for/while/until",
          "Looping Continued",
          "Advanced Looping",
          "Looping Quiz",
          "Hashes",
          "More Hashes",
          "Hashes Quiz",
          "Ruby Methods",
          "Ruby Methods Continued",
          "Ruby Methods With Default Value",
          "What are Ruby Classes?",
          "Ruby Classes Continued",
          "Arrays and Classes Quiz",
          "Regular Expressions",
          "Regular Expressions Continued",
          "Ruby Variables Types",
          "Ruby Variables Types Continued",
          "Ruby as an OOP(Object Oriented Programming) language",
          "Ruby OOP - Encapsulation",
          "Ruby OOP - Inheritance",
          "Ruby OOP -Inheritance Continued",
          "Ruby OOP - Polymorphism",
          "Ruby Modules",
          "Ruby Modules Continued",
          "File IO",
          "File Loading",
          "Advanced Classes and Inheritance"
        ],
        "Automation Basics": [
          "Intro to WebApplication",
          "WebApplication Architecture",
          "Testing in SDLC",
          "Test Scenarios, Test Case & Test Script",
          "Types of Testing",
          "Automation Testing",
          "Automation Basics Quiz"
        ],
        "Selenium Basics": [
          "Introduction & Brief History of Selenium",
          "Selenium IDE",
          "Selenium IDE Demo",
          "Selenium RC & Selenium WebDriver",
          "Difference Between Selenium WebDriver & Selenium RC",
          "Selenium Basics Quiz"
        ],
        "Selenium WebDriver Hands On": [
          "Selenium WebDriver Installation In Mac",
          "Selenium WebDriver Installation in PC(Windows)",
          "Automation Testcase",
          "Selenium Test Automation in Firefox",
          "Selenium Test Automation in Firefox Continued",
          "Selenium Test Automation in Chrome",
          "Selenium Test Automation in Safari",
          "Selenium Test Automation in Internet Explorer",
          "Selenium Webdriver HandsOnQuiz"
        ],
        "Selenium Element Locators": [
          "XPath Element Locator",
          "Firefox Addons for Selenium",
          "CSS Element Locator",
          "Selenium Element Locators Quiz"
        ],
        "Intermediate Selenium WebDriver": [
          "Selenium Wait - Implicit Wait",
          "Selenium Wait - Explicit Wait",
          "Selenium Automation - Headers & Images",
          "Selenium Automation - Checkboxes & Dropdowns",
          "Selenium Automation - Calendar",
          "Selenium Automation - Calendar Continued",
          "Selenium Automation - Alerts/Popups",
          "Selenium Automation - IFrames/Frames",
          "Selenium Automation - Multiple Windows",
          "Selenium Automation - Capture Screenshot",
          "Intermediate Selenium WebDriver Quiz"
        ],
        "Data Driven Framework": [
          "Simple-spreadsheet Gem Installation in Windows (Mac Users Skip)",
          "Excel Data Driven Framework - Simple Spreadsheet Gem",
          "Excel Data Driven Framework Continued",
          "YAML as a Data Source",
          "YAML Data Driven Framework part 1",
          "YAML Data Driven framework part 2",
          "YAML Data Driven Framework part 3",
          "Data Driven Framework Quiz"
        ],
        "ATDD (Acceptance Test Data Driven) Framework": [
          "Intro to ATDD",
          "Cucumber Framework for ATDD",
          "Cucumber Gem Installation in Windows",
          "Cucumber Framework",
          "Cucumber Parameterization part 1",
          "Cucumber Parameterization part 2",
          "Cucumber Parameterization part 3",
          "Advanced Cucumber Parameterization",
          "Cucumber Terminal Commands",
          "Bundler Installation in Mac",
          "Bundler Installation in PC(Windows)",
          "Gemfile",
          "ATDD Quiz"
        ]
      },
      "requirements": [
        "You should be able to use PC or Mac at beginner level"
      ],
      "description": "Hi! Welcome to the Automation Engineer Bootcamp, the one and only course you need to learn automation from scratch. There are a lot of tutorials for web development but only few for the Automation skills. Among them, this course is without a doubt the most comprehensive and complete on the market due to following reasons.\nThis is the one and only course taught by professional Automation Engineer with more than 8 years of experience.\nYou do NOT need any prior programming knowledge. Most of my students who are enrolled tend to be outside of programming background but eventually work to end up as Automation Engineer in fortune 500 companies.\n90% of my bootcamp students go on to get full-time automation engineer jobs. Most of them are complete beginners when I start working with them.\nEverything I cover is up-to-date and relevant to today's developer industry meaning it covers the latest Selenium 3.0 which just was released on the market recently. This course does not cut any corners.\nThis is the only complete beginner full-stack automation engineer course that covers Ruby, Selenium, Cucumber and ATDD.\nYou will be able to learn everything step by step which means that you don't have to rewind the video back and forth to grasp the concept.\nThe course is constantly updated with new content, projects, and modules. Think of it as a subscription to a never-ending supply of developer training.\n\n\nWhen you're learning technology that is very new and seems to scare you to enhance your career in technology, this course works as a stepping stone as I would explain you the programming knowledge in practical way such that it will encourage to learn more about programming language and definitely excite you to be an Automation Engineer.\nThis is a course designed for the complete beginner, yet it covers some of the most exciting and relevant topics in the industry.\n\n\nCourse Curriculum have been divided into 11 sections starting with basics of Ruby Programming Language and eventually gaining speed with Selenium WebDriver Automation tool and finally closing with design of Automation Framework with Cucumber which is commonly used in the Automation Industry.\nSection 1: Introduction to QA\nWhat is QA?\nImportance of Testing in Software Industry.\nSection 2: Software Setup\nJava Installation for Mac\nBash Profile Set up for Mac\nJava Installation for Windows\nRuby Installation for Mac\nRuby Installation for Windows\nRubymine installation for Mac\nRubymine Installation for Windows\nSection 3: Ruby Essentials\nWhat is String?\nString Methods\nMore String Methods\nInteger Methods\nConditional Execution - If & else\nIf & Else continued\nConditional Execution - Case\nString Interpolation\nArray in Ruby\nLooping - for/while/until\nLooping Continued\nAdvanced Looping\nHashes\nMore Hashes\nRuby Methods\nRuby Methods Continued\nRuby Methods With Default Value\nWhat are Ruby Classes?\nRuby Classes Continued\nRegular Expressions\nRegular Expressions Continued\nRuby Variables Types\nRuby Variables Types Continued.\nRuby as an OOP\nRuby OOP - Encapsulation\nRuby OOP - Inheritance\nRuby OOP - Inheritance Continued\nRuby OOP - Polymorphism\nRuby Modules\nRuby Modules Continued\nFile IO\nFile Loading\nSection 4: Automation Basics\nIntro to WebApplication\nWebApplication Architecture\nWhat is Testing?\nTypes of Testing\nAutomation Testing\nSection 5: Selenium Basics\nIntroduction & Brief History of Selenium\nSelenium IDE\nSelenium IDE Demo\nSelenium RC & Selenium WebDriver\nDifference between Selenium RC & Selenium WebDriver\nSection 6:  Selenium WebDriver Hands On\nSelenium WebDriver Installation in Mac\nSelenium WebDriver Installation in PC(Windows)\n\nAutomation Testcase\nSelenium Test Automation in Firefox\nSelenium Test Automation in Firefox Continued\n\nSelenium Test Automation in Chrome\n\nSelenium Test Automation in Safari\n\nSelenium Test Automation in Internet Explorer\nSection 7: Selenium Element Locators\nXPath Element Locator\nFirefox Addons for Selenium\nCSS Element Locator\nSection 8: Intermediate Selenium WebDriver\nSelenium Wait - Implicit wait\nSelenium Wait - Explicit wait\nSelenium Automation - Headers & Images\nSelenium Automation - Checkboxes & Dropdowns\nSelenium Automation - Calendar\n\nSelenium Automation - Calendar Continued\n\nSelenium Automation - Alerts/Popups\n\nSelenium Automation - IFrames/Frames\nSelenium Automation - Multiple Windows\n\nSelenium Automation - Capture Screenshot\n\nSection 9: Data Driven Framework\nExcel Data Driven Framework - Simple Spreadsheet Gem\nSimple Spreadsheet Gem Installation in Windows\n\nExcel Data Driven Framework Continued\nYAML as a Data Source\nYAML Data Driven Framework\nYAML Data Driven Framework Continued\nSection 10: ATDD(Acceptance Test Driven Development) Framework\nIntro to ATDD\nCucumber for ATDD\nCucumber Gem Installation in Windows\nCucumber Framework part 1\nCucumber Framework part 2\nCucumber Parameterization part 1\nCucumber Parameterization part 2\nCucumber Parameterization part 3\nAdvanced Cucumber Parameterization\nCucumber Terminal Commands\nBunder Installation in Mac\nBundler Installation in PC (Windows)\nGemfile\nSection 11: Conclusion\nHelpful Resources\nFinal Words\n\n\nThroughout the course, If you have any questions, please feel free to contact me. I got into this Automation Engineer field because I was exhausted doing manual testing and love the challenge of automation as well as love teaching and working with people and helping students learn. Sign up today and see how fun, exciting, and rewarding automation industry can be.\nWho is the target audience?\nThis course is for anyone who wants to learn about automation, regardless of previous experience or prior programming language.\nIt's perfect for complete beginners with zero experience.\nIt's absolutely perfect for manual testers who would like to enhance their career in Automation Field.\nIt's also great for anyone who does have some experience in a few of the technologies(like Ruby, Testing) but not all.\nIf you want to take ONE COURSE to learn everything you need to know about Automation, sign off on this course.",
      "target_audience": [
        "Anyone who wants to learn automation from scratch.",
        "Anyone who wants to enhance their career to be Automation Engineer.",
        "Manual testers who wants to upgrade their career to become Automation Engineers."
      ]
    },
    {
      "title": "Manual S/W Testing+JIRA+ Test Rail + Azure DevOps+Playwright",
      "url": "https://www.udemy.com/course/manual-software-testing-testmanagementtools-agile/",
      "bio": "Manual Testing, Interview Preparation, Test management Tools JIRA+ TESTRAIL, SQL, Azure DevOps, Playwright framework",
      "objectives": [
        "Test Management & Project Management Tools like Test Rail, JIRA , Azure DevOps and Confluence tools from Scratch with all Manual Software Testing Concepts.",
        "Manual Software Testing Concepts from Project Initiation to Delivery SDLC,STLC,Bug life cycle & types, TestPlan/Cases, Reporting, Test Closure, Test Deliverable",
        "Best course for Interview Preparation for QA Professionals",
        "Quick Learning of Manual Software Testing, Learn all concepts in short time duration.",
        "In Depth understanding of Software testing levels/ Testing Types/ Testing Techniques/ Testing Strategies",
        "Clear understanding of Agile Model and all Agile Terminologies",
        "Basic knowledge of Database Testing & sql queries",
        "QA vs QC",
        "Web Accessibility Testing basics."
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Topics Covered in this Course"
        ],
        "Basics of Software Testing -- <Theory Part 1>": [
          "What is Software Testing?",
          "Hierarchy of Software Testing Team",
          "Software Tester's Need and Responsibilities",
          "Need vs Requirement",
          "Types Of Software",
          "7 Principles of Testing",
          "Software Testing Techniques",
          "Software Testing Strategies"
        ],
        "Software Development & Testing Life Cycles -- <Theory Part 2>": [
          "Software Development Life Cycle- SDLC",
          "Waterfall Model",
          "Prototype Model",
          "Spiral Model",
          "Agile Model",
          "Software Testing Life Cycle- STLC",
          "Quiz Time!"
        ],
        "Different Levels & Types of Software Testing -- <Theory Part 3>": [
          "Levels of Software Testing",
          "Types of System Testing",
          "Smoke vs Sanity Testing",
          "Types of Acceptance Testing - Alpha, Beta, Gamma",
          "Regression Testing vs Retesting",
          "Types of Integration Testing",
          "A/B Testing, Bucket Testing, Split Testing",
          "Manual vs Automation vs Performance Testing & Free Playwright framework",
          "Types of Performance Testing",
          "Types of Non Functional Testing",
          "Web Accessibility Testing",
          "Web Application Testing",
          "Verification and Validation",
          "QA vs QC",
          "Walkthrough, Inspection, Review",
          "Authorization vs Authentication",
          "Backend Testing for Testers",
          "Quiz Time!"
        ],
        "Documents during Software Testing Life Cycle -- <Theory Part 4>": [
          "Test Plan",
          "Test Scenarios",
          "Positive vs Negative Scenarios",
          "Test Cases",
          "RTM - Requirement Traceability Matrix",
          "Software Testing Status Report",
          "Requirement and UseCase documents",
          "Quiz Time!"
        ],
        "All Concepts of BUG/ Defect/ Error -- <Theory Part 5>": [
          "Error vs Bug vs Defect vs Failure",
          "Bug Reporting",
          "Bug LIfe Cycle",
          "Bug Leakage, Hot Fix, Defect Age, ErrorSeeding",
          "Latent Defects, Masked Defects, Cascade Defects",
          "Severity vs Priority of Bug",
          "80-20 rule",
          "Quiz Time!"
        ],
        "Software Testing Closure & Deliverables -- <Theory Part 6>": [
          "Test Closure",
          "Test Deliverables"
        ],
        "Other Useful Terms -- <Theory Part 7>": [
          "Test Coverage and Code Coverage",
          "Build vs Patch vs Update",
          "POC - Proof Of Concept"
        ],
        "Major Challenges for Software Testers & Important Tips": [
          "Major Challenges & Important Tips for Software Testers",
          "Important tips to write a effective BUG with Examples"
        ],
        "Practice Part | Live Examples and Hand-On Exercises": [
          "Live Example: How to Report a Bug in Azure DevOps & JIRA",
          "Live Example: How To Write TestCases and Test Scenarios",
          "Live Example: Agile Process",
          "Live Example: Database testing using MySQL Database"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Learn Software Manual Testing, QA, QC, Software Testing Interview Preparation, Database Testing, Basic SQL queries,\nGet free downloadable playwright framework as a bonus.\nLearn all types of Software Testing Types which can occur during the whole software development life cycle i.e. Smoke testing, sanity testing, Ad hoc testing, functional testing, Regression testing, System testing, Compatibility testing, monkey / Gorilla testing, AB testing, UAT testing, Performance testing like Stress testing, load testing, volume testing and lot more...\nLearn about the bug /defect life cycle from where it opens and where it ends.\nBe a Test Lead, or Test Manager by learning this course.\nKnow all Test closure activities\nLearn Test Management Tools like JIRA, Test Rail, Confluence with Demo in real tool.\nLearn Azure DevOps tool which includes test case writing, execution, Agile activities, Documentation, Filters, test reports, User story writing, creating bugs, tracking the bug status.\nLearn AGILE with a live example. Also learn other project models like the Waterfall Model, Prototype Model, Spiral Model, V- model.\nLearn the basics of Web Accessibility testing.\nManual Testing, Interview Preparation, Test management Tools JIRA+ TESTRAIL+Confluence, Basic SQL, Microsoft Azure DevOps\nLearn all Test reports and metrics.\nLearn Requirement traceability matrix.\nManual Software Testing, JIRA, Test Rail, AGILE, Azure DevOps\nDifference between Manual testing and Automation testing and Performance testing.\nManual testing vs Automation testing vs Performance testing.\nAzure DevOps Fundamentals for Beginners.",
      "target_audience": [
        "Beginner Software Testers",
        "Senior Professional software testers",
        "Test Lead",
        "Test Manager",
        "Developers, Program Manager who wants to learn about the SDLC and different project models like Agile, Waterfall, Prototype model",
        "Software team working on Agile model",
        "Business analyst who wants to learn about Jira, Confluence and Azure DevOps tools to write the user stories /Epics/ Requirements/ Documents"
      ]
    },
    {
      "title": "Selenium WebDriver: A Step by Step Guide to Test Automation",
      "url": "https://www.udemy.com/course/selenium-webdriver-test-automation/",
      "bio": "Master Automation Testing via Selenium WebDriver, TestNG, Selenium Testing Framework, Robot framework, Cucumber & Java",
      "objectives": [
        "Create a Selenium Webdriver Automation framework from Scratch using Java",
        "Master Selenium Webdriver Practically",
        "Run WebDriver Commands and Locators",
        "Learn Basic to Advanced TestNG",
        "Use IFrames, AutoIT and Desired Capabilities",
        "Work with Robot Class in Selenium",
        "Use JavaScriptExecutor, Parameterization, Headless Automation, Screenshot in Selenium",
        "Handle Excel, SSL Certificate, AJAX in Selenium",
        "Work with Maven",
        "Implement Page Object and Page Factory Model",
        "Run Frameworks in Selenium",
        "Work with Cucumber",
        "Live Project"
      ],
      "course_content": {
        "Download PPTs": [
          "PPTs of all Lectures"
        ],
        "Selenium IDE": [
          "Introduction to Selenium",
          "First Selenium IDE Script",
          "Selenium IDE Commands",
          "Limitations of Selenium IDE"
        ],
        "Introduction to Webdriver": [
          "Inroduction to Webdriver",
          "Webdriver Vs Selenium RC",
          "Install Webdriver",
          "First Web Driver Script",
          "Selenium Code on Chrome Browser",
          "Selenium Code on Firefox Browser",
          "Selenium IE Code"
        ],
        "Webdriver Commands and Locators": [
          "GUI Elements",
          "Form Elements Part1",
          "Form Elements Part 2",
          "X Paths in Selenium",
          "Drop Down",
          "Keyboard and Mouse Events",
          "Working with Links",
          "Working with Tables",
          "Upload and Download",
          "Alert and PopUp",
          "Waits in Selenium"
        ],
        "Example of Webdriver Commands and Locators": [
          "Is Enabled And Is Displayed",
          "Handling Drop Downs",
          "Navigation Handling",
          "Window Handling",
          "Check Box Selected Or Not",
          "Form Handling"
        ],
        "Basics of TestNG": [
          "Introduction to TestNG",
          "TestNG Installation"
        ],
        "Advanced TestNG": [
          "TestNG Annotations",
          "TestNG Priority",
          "Listerners in TestNG",
          "Multiple Test Suites in TestNG",
          "Multi Browser Testing"
        ],
        "Examples on TestNG": [
          "TestNG Annotations Demo",
          "TestNG without Priority",
          "Listerners in TestNG",
          "Multi Browser",
          "Test NG Priority"
        ],
        "IFrames, AutoIT and Desired Capabilities": [
          "IFrames",
          "AutoIT Part1",
          "AutoIT Part2",
          "Desired Capabilities"
        ],
        "Using Robot Class in Selenium": [
          "Using Robot Class",
          "Robot Class Demo"
        ]
      },
      "requirements": [
        "PC / Laptop with Internet",
        "No previous knowledge about automation is required"
      ],
      "description": "The Software Testing industry is expected to grow sky rise at 11 percent of CAGR in next 3 years. The average salary of Selenium Automation Engineer as per Indeed Salary Data is $94000\nSelenium WebDriver Automation Testing is a lucrative and stable career with high financial gains.\nThis course is designed by the Industry experts and undoubtedly is one of the best on Selenium WebDriver.  With a step by step approach, even a beginner, with no experience in automation testing can easily master Selenium WebDrive and can work for any organisation\nSelenium is the most desired automation testing tool as it Supports different Browsers, OS and programming languages\nThis Selenium WebDriver Training and Certification will help you in master all the concepts of Selenium from scratch. This Selenium Certification Training is the gateway to your successful Automation testing career.\nAt the end of the course you will be able to\nMaster Selenium WebDriver & Selenium IDE\nRun WebDriver Commands and Locators\nLearn Basic to Advanced TestNG\nUse IFrames, AutoIT and Desired Capabilities\nWork with Robot Class in Selenium\nUse JavaScriptExecutor, Parameterization, Headless Automation, Screenshot in Selenium\nHandle Excel, SSL Certificate, AJAX in Selenium\nWork with Maven\nImplement Page Object and Page Factory Model\nRun Frameworks in Selenium\nWork with Cucumber\nLive Project\n30 DAYS MONEY-BACK GUARANTEE\n\nGet Lifetime access and 30 Days Money Back Guarantee by Purchasing this course now.\nTaking action and buying this course now is better than doing nothing!\nJoin in, As for learning Selenium WebDriver,  this course is the authority and equally important you will get a certification of completion that validates your skills.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "QA Professionals/Manual Testers looking to upgrade to Test Automation for a Successful Career",
        "Freshers/Beginners who want to learn Selenium Webdriver to get a good Job"
      ]
    },
    {
      "title": "Automation Testing Masterclass - Selenium, Cucumber and More",
      "url": "https://www.udemy.com/course/automation-testing-masterclass/",
      "bio": "Become an automation expert by learning Java, Selenium, Cucumber, Junit, Docker and other technologies!",
      "objectives": [
        "Everything about automation testing.",
        "Automation testing using Selenium WebDriver.",
        "Usage of unit test libraries such as Junit and TestNG.",
        "Making use of BDD through Cucumber.",
        "Make use CI/CD pipelines with Gitlab in running your tests.",
        "Become a full stack Software Development Engineer in Test"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "BONUS: Java for Beginners": [
          "Installing the JDK",
          "Choosing an IDE",
          "Installing Intellij IDEA Community Edition",
          "Creating the First Java Project",
          "Variables",
          "Primitive Data Types",
          "Reference Data Types",
          "Java Basics Assessment",
          "Arrays",
          "Operators",
          "If Statements",
          "For Loops",
          "For Loops Coding Exercise",
          "Explaining the Solution for the For Loops Coding Exercise",
          "While Loops",
          "Strings",
          "Working with User Input",
          "Switch Case Statements",
          "Objects and Classes",
          "Methods",
          "If Statements Coding Exercise",
          "Java Coding Exercise",
          "Explaining the \"if\" statements and the Java coding exercise",
          "Method Parameters",
          "Constructors",
          "First JAVA Practice Test",
          "Getters and Setters",
          "Access Modifiers",
          "Static Keyword",
          "Static keyword exercise",
          "Static Keyword Coding Exercise Explanation",
          "Abstract Classes",
          "Final Keyword",
          "Interfaces",
          "Polymorphism",
          "Collections",
          "Generics and Lists",
          "Generics Exercise Preparation",
          "Generics Exercise",
          "Generics Exercise Solution Explanation",
          "Sets",
          "Maps",
          "Maps Coding Exercise",
          "Maps Coding Exercise Explanation",
          "Equals",
          "The toString() Method",
          "The toString() Coding Exercise",
          "The toString() Coding Exercise Solution Explanation",
          "Handling Exceptions",
          "Working with Files",
          "Exercise: File Management",
          "File Management Exercise Explanation",
          "Anonymous Inner Classes",
          "Inner Classes",
          "Enums",
          "Object Oriented Programming Assignment",
          "Rectangle Area Calculation"
        ],
        "BONUS: Design Patterns in Java": [
          "Introduction to the Design Patterns",
          "The Builder Pattern Problem Statement",
          "How to Implement the Builder Pattern",
          "The Builder Pattern Quiz",
          "Introduction to the Factory Pattern",
          "Factory Pattern Demo",
          "The Factory Pattern Quiz",
          "Introduction to the Abstract Factory Pattern",
          "The Abstract Factory Pattern Quiz",
          "Introduction to the Singleton Pattern",
          "Singleton Pattern Demo",
          "Introduction to the Prototype Pattern",
          "Prototype Pattern Demo",
          "The Object Pool Pattern",
          "Implementing the Object Pool Pattern",
          "Quiz about the Creational Patterns",
          "The Structural Patterns",
          "Introduction to the Adapter Pattern",
          "Implementing the Adapter Pattern",
          "Introduction to the Bridge Pattern",
          "Implementing the Bridge Pattern.mp4",
          "The Filter Pattern",
          "Introduction to the Composite Pattern",
          "Implementing the Composite Pattern",
          "Introduction to the Decorator Pattern",
          "Implementing the Decorator Pattern",
          "Introduction to the Facade Pattern",
          "Implementing the Facade Pattern",
          "Introduction to the Flyweight Pattern",
          "Implementing the Flyweight Pattern",
          "The Flyweight Pattern Exercise",
          "Introduction to the Proxy Pattern",
          "Implementing the Proxy Pattern",
          "Quiz about the Structural Patterns",
          "The Behavioural Design Patterns",
          "Introduction to the Chain of Responsibility Pattern",
          "Implementing the Chain of Responsibility Pattern",
          "Introduction to the Command Pattern",
          "Implementing the Command Pattern",
          "Introduction to the Interpreter Pattern",
          "Implementing the Interpreter Pattern",
          "Introduction to the Iterator Pattern",
          "Implementing the Iterator Pattern",
          "Introduction to the Mediator Pattern",
          "Implementing the Mediator Pattern",
          "Introduction to the Memento Pattern",
          "Implementing the Memento Pattern",
          "Introduction to the Observer Pattern",
          "Implementing the Observer Pattern",
          "Introduction to the State Pattern",
          "Implementing the State Pattern",
          "Introduction to the Strategy Pattern",
          "Implementing the Strategy Pattern",
          "The Strategy Pattern Exercise",
          "Introduction to the Template Method Pattern",
          "Implementing the Template Method Pattern",
          "Introduction to the Visitor Pattern",
          "Implementing the Visitor Pattern",
          "Quiz about the Behavioural Patterns",
          "SOLID Principles"
        ],
        "Learning about Selenium Webdriver": [
          "Getting Started with Selenium Webdriver",
          "Locators",
          "Relative Locators in Selenium 4",
          "Getting Text from a WebPage",
          "Clicking on a WebPage",
          "Send Text to a WebPage",
          "Working with Tables",
          "Types of Waits",
          "Handling Exceptions",
          "Using the JavascriptExecutor",
          "Alerts in Selenium",
          "Working with iFrames",
          "Bonus: How to Handle Select in Selenium WebDriver",
          "Bonus: Performing Special Actions",
          "Selenium Quiz",
          "Selenium Assignment"
        ],
        "Designing a New Automation Framework": [
          "Introduction",
          "Page Object Model",
          "Managing the Framework's Driver",
          "Getting Values Dynamically from Files",
          "Small Refactoring of the Code",
          "Adding the Website's Pages - Part 1",
          "Adding the Website's Pages - Part 2",
          "Adding the Website's Pages - Part 3",
          "Adding the Website's Pages - Part 4",
          "Adding the Website's Pages - Part 5",
          "UPDATE: The target product has been moved",
          "Refactoring Ideas for the Website Pages",
          "Adding Password Encoding Capability",
          "Adding Test Cases in Junit - Part 1",
          "Adding Test Cases in Junit - Part 2",
          "Adding Test Cases in Junit - Part 3",
          "Assertions in Junit",
          "Bonus: AssertThat() Explained",
          "BONUS: Using Parameterized Tests in Junit",
          "JUnit vs TestNG -Which one to pick?",
          "JUnit Quiz",
          "Capturing Screenshots with Selenium Webdriver",
          "Adding SpringFramework Support",
          "Adding BDD Tests with Cucumber - Part 1",
          "Adding BDD Tests with Cucumber - Part 2",
          "Adding Reporting Capabilities Using ExtentReports",
          "Adding Logging Capabilities Using Log4j",
          "Adding Full Logging Capabilities Assignment",
          "Adding the Code to GIT",
          "Launching Our Own GitLab Runner for Executing the Pipelines",
          "Running Tests in a GitLab Pipeline",
          "Running Tests in Parallel Using Selenium Grid",
          "Running the Automated Tests Using Docker Containers in AWS Cloud",
          "Software Developer Engineer in Test"
        ],
        "BONUS: Backend Testing": [
          "Introduction to API Testing",
          "Introduction to HTTP",
          "Analyzing HTTP Requests in the Browser",
          "Working with Postman",
          "Types of API's",
          "Introduction to Swagger and API Documentation",
          "Automating REST Calls Using RestAssured",
          "Automating API Calls Using Core Java"
        ],
        "Nailing the QA Interview": [
          "Introduction",
          "Introduction to Algorithms and Data Structures",
          "Explaining the Big O Notation",
          "Big O Notation Interview Questions",
          "Bubble Sort",
          "Insertion Sort",
          "Merge Sort",
          "Shell Sort",
          "Binary Search Trees",
          "Binary Insertion Trees",
          "Generic Algorithms",
          "The Tower of Hanoi Coding Challenge",
          "Most Common Interview Questions About Java - Part 1",
          "Most Common Interview Questions About Java - Part 2",
          "Most Common Interview Questions About Java - Part 3",
          "Front End Testing Interview Questions - Part 1",
          "Front End Testing Interview Questions - Part 2",
          "Front End Testing Interview Questions - Part 3",
          "Back end Testing Interview Questions",
          "ISTQB Interview Questions",
          "Testing Pyramid-related Questions",
          "Conclusions and What's Next"
        ]
      },
      "requirements": [
        "This course will be using JAVA. However. knowledge of any OOP language would be an advantage, but not necessary, since we cover the basics of Java in an entire section."
      ],
      "description": "This course covers everything you need to know about automation testing.\n\nStarting by learning the basic concepts of Java, followed by learning how to test Web Applications using Selenium Webdriver, and then diving into the topic of unit testing, using Cucumber, TestNG and Junit. Following this video series should give you a very good understanding on what automation testing really means.\nThe objective of this course is to make you proficient in working with tools used by automation engineers. If your goal is to get a job as an automation engineer, this course would not just give you a solid preparation for the interview, but it will also provide the necessary knowledge in order to thrive at your new job.\nThe course has the following structure:\nWe learn Java together, as well as Object Oriented Programming principles. If you are already familiar with Java, you can skip this part.\nWe dive into the subject of design patterns, with the objective of learning how to manage complex, repeatable situations in our code. This will give us the expertise on how to design our code for scalable, memory efficient automation frameworks.\nWe then learn about Selenium, what it is and how to use it in testing Web Applications.\nThe last part concentrates on how to develop your own automation framework, using the newest technologies available for automation engineers.\nBy following this structure, as a beginner, you will be confident enough to apply for automation engineer jobs, having the knowledge of all the libraries we cover in this course. As a more experienced person, you will be ready to tackle topics such as creation of a new automation framework from scratch, using the design principles and the full potential of the technologies covered here.\nAs a general recommendation, in order to speed up the learning process, study the corresponding code snippets attached to each video. Start experimenting with it, by removing/adding stuff and see what happens. This will not only consolidate your knowledge, but it will help you understand deeply what the studied concept is about. There's nothing better than stumbling upon issues, investigate and troubleshoot them yourself!\nI wish you a pleasant journey throughout the videos, and I hope you appreciate the content!",
      "target_audience": [
        "Beginner and advanced automation testers, as well as tech-savvy people that wish to get an automation tester job."
      ]
    },
    {
      "title": "REST API WebService Automation Testing-ReadyAPI-SoapuiNG PRO",
      "url": "https://www.udemy.com/course/rest-api-webservice-automation-testing-soapuing-pro-readyapi/",
      "bio": "REST API WebService Automation and Manual testing using soapui- soapuiNG Pro ReadyAPI + 2 REST API WebService 4 practice",
      "objectives": [
        "REST API Webservice testing using Manual and Automation testing using ReadyAPI and Soapui",
        "Develop advanced Automation test case using groovy script to test REST API Webservice",
        "Crack REST API Webservice Job interviews",
        "Learn couchbase Database interaction with API Web-Service",
        "2 REST API Webservice projects connected to MySQL and Couchbase DB for learning",
        "Configuring the Environments in Ready API SoapUI NG PRO",
        "Building Mock Services using ServiceV Module withing ReadyAPI tool"
      ],
      "course_content": {
        "Understanding API and Webservices": [
          "Course Overview",
          "What is API",
          "What is WebService",
          "How WebService and Website are connected",
          "How WebService works",
          "How API and Web-service differs",
          "What you need - to learn API Webservice Automation testing"
        ],
        "Groovy Scripting": [
          "Installing soap-ui free version",
          "Getting started with groovy scripting",
          "Quick understanding of groovy Operators",
          "groovy Strings",
          "Conditional Structures",
          "Looping",
          "Collections",
          "Functions",
          "Closures"
        ],
        "Understanding REST": [
          "Introduction to REST",
          "What is JSON (JavaScript Object Notation)",
          "API Webservice Environment Set up",
          "Setting up MySQL DB",
          "Running REST API Webservice",
          "REST Request-Response",
          "Understanding REST endpoint",
          "Understanding REST Resource",
          "In-Depth understanding of REST HTTP status codes",
          "Query paramerter",
          "path parameter- GET",
          "PUT method",
          "DELETE method",
          "Adding order resource",
          "Adding REST resource",
          "Adding product resource"
        ],
        "Understanding NoSQL Couchbase DB": [
          "Setting up Coubase DB",
          "Getting started with Couchbase",
          "Configuring couchbase 5.0.1",
          "Look-up table concept in Couchbase"
        ],
        "REST API Automation testing": [
          "Installing Ready API Soap UI NG pro",
          "Test Case creation",
          "Data-Driven test case design",
          "DataSource from Database",
          "DataSource from Excel",
          "DataSource from Directory-DataGen-JDBC",
          "Properties and Property Transfer",
          "Data Sink",
          "Whats need to be tested in API Web-Service testing",
          "Assertions",
          "Idempotent Methods",
          "Environments",
          "Design JSON Path Expression",
          "Assertions : JSON Path",
          "Assertion: Regular Expression Design",
          "Assertion Test Step",
          "More Automation Test Steps"
        ],
        "Groovy Script Automation": [
          "Assertions using groovy scripts",
          "JSON response parsing using Json Slurper",
          "Set-Up and Tear-down scripts",
          "Smoke Test Case framework Design",
          "Self-Management Scripts",
          "Regression Test Case framework Design",
          "Project Sharing : Composite project concept",
          "Script Debugging",
          "Swagger"
        ],
        "Advanced Automation": [
          "Events: Request-Response logging",
          "Custom HTML Test Report generation",
          "Automating online Real API"
        ],
        "Mock Service - Service V module in ReadyAPI": [
          "What is Mock Service",
          "Understanding the need of Mock Services",
          "Building simple Mock Service",
          "Building Mock Service continued...",
          "Response Dispatch Settings : Sequence, Random, QueryMatch",
          "Response Dispatch Settings : Groovy Script, Parameter",
          "Data-Driven Response",
          "Introduction to Routing in Mock Service",
          "Request Routing Configuration"
        ]
      },
      "requirements": [
        "You should be having knowledge on testing concepts",
        "No previous programming knowledge required"
      ],
      "description": "Complete A to Z course for learning the REST API Web-Service Automation testing from basics to advanced concepts.\n\n**ONLY COURSE IN UDEMY PROVIDES OFFLINE REST API WEB-SERVICE CONNECTED TO DATABASE FOR LEARNING PURPOSE. HELPS IN BETTER UNDERSTANDING OF API & DB CONNECTIVITY\n**Hand Written explanation for best understanding.\n\n\nAbout me : I have been working in IT-Software Testing industry from last 15 years and i have put all those experience and industry standard knowledge into this course. The course filled with industry standard testing approach, implementation and examples.\nWelcome to REST API Web-Service Automation tutorial.\nCurrently API is a booming technology it exists everywhere like Social media, Mobile platform, cloud computing etc,.\nNow its a good opportunity to make promising career in API testing.\nThis course below topics and more\nWhat are the API & Webservices\nHow to Test the Webservices using Soap UI and ReadyAPI\nAdvanced Groovy Scripting Concepts\nUnderstanding Couchbase Database interaction with REST API\nHow to Automate the Webservices Testcases in Soap UI with Groovy\nDifferences btween Soap UI and SoapUING Pro and ReadyAPI\nSoap UI NG Pro and ReadyAPI Features\nWhat is Rest API\nTesting RESTful API\nDesigning JSON path expression\nCustom HTML report generation for test case execution\nDesigning smoke and Regression test case framework\nSwagger\nMock Service using dedicated ServiceV pro module.\n\nThis comprehensive course cover.\n\nREST API web-service manual testing using popular soap ui tool And Automation testing using next generation SOAPUI NG PRO Ready API.\n\nThis course even covers groovy scripting from basics to advanced coding, which is mandatory to design and develop industry standard automation scripts.\nThe SPECIAL thing about this course is, you will get two industry standard downloadable REST API web-service connected to different database which can be executed on your own system without need of internet. You will know how API web-service interacts with back-end database.\n\nThis course even covers Couch-base database used by REST API Web-service\nThis course covers building Mock Services using ServiceV module within ReadyAPI tool\nYou don't need to depend on free online API Web services available on internet for learning purpose.\nThis course is for someone who want make good career in API testing.\nYou don't need to have previous programming skills as course cover from basics.\nYou will learn to develop customized HTML test report after test execution.\nI value your time, So course is medium paced and on-to the point without much dragging to avoid boredom.\n\n\nBy the end of this course:\nYou will know how to design and develop test case to test API web-service both Manual and automation\ntesting methodologies.\nYou will be able to confidently and independently write advanced groovy script to develop robust automation\nscripts.\nYou will be having REST API web-service knowledge equivalent to industry standard experienced tester.\nYou will able to attend API Web-service automation testing job interview and successfully pass through to secure job\n\n\nTake a look at the course description to get detailed information about course coverage.\nEnroll now and will see you inside\nHappy Learning\nSubhash Chandra",
      "target_audience": [
        "Someone who wants to make career in API Webservice testing",
        "Somone who wants to upgrade to Automation testing"
      ]
    },
    {
      "title": "Performance Testing for Beginners",
      "url": "https://www.udemy.com/course/performance-testing-for-beginners/",
      "bio": "Learn more about performance testing before you actually start learning any performance testing tool as it form the core",
      "objectives": [
        "An introduction about performance testing and engineering",
        "Types of Web Performance Tests",
        "How to gather the requirements from clients and stakeholders before starting a project",
        "Key point to consider while drafting the Test Approach",
        "Industry standard Performance Testing terminologies",
        "Performance Counters that needs to be monitored",
        "What is Workload modeling and why is it important?",
        "Key considerations before selecting the test scenarios for scripting",
        "Performance Test Planning",
        "Basics of Performance Test Scripting",
        "Performance Test Execution",
        "Metrics Collections",
        "Result Analysis",
        "Report Creation"
      ],
      "course_content": {
        "Performance Testing for Beginners": [
          "01 - Performance Testing for Beginners - Part 1",
          "02 - Performance Testing for Beginners - Part 2",
          "03 - Performance Testing for Beginners - Part 3",
          "04 - Performance Testing for Beginners - Part 4",
          "05 - Performance Testing for Beginners - Part 5",
          "06 - Performance Testing for Beginners - Part 6"
        ]
      },
      "requirements": [
        "N/A"
      ],
      "description": "Introduction - What is performance testing and why is it needed?\nWhat are the different types of Performance Tests?\nWhat is requirements gathering and how do we gather them?\nWhat is performance test approach and what are the key considerations to keep in mind before drafting one?\nPerformance Testing terminologies\nWhat are the performance counters that we need to take care of while executing test runs?\nWhat is workload modelling and why is it important?\nWhat are the different types of workload models?\nHow to select the business scenarios for including them in our test execution?\nWhat is performance test planning?\nMore details about performance test execution\nPerformance testing scripting - key considerations\nImportant things to take care in performance test execution\nWhat are the different metrics that we check and how do we monitor them?\nHow to do the performance test results analysis?\nHow to create the performance test report?\nAnd more...",
      "target_audience": [
        "Beginner Performance Testers",
        "Beginner Performance Engineers",
        "Testing students willing to learn automation",
        "Manual testers seeking to learn automation",
        "Project Managers who are responsible for performance testing an application"
      ]
    },
    {
      "title": "Learn Protractor(Angular Testing) from scratch +Framework",
      "url": "https://www.udemy.com/course/protractor-tutorial/",
      "bio": "Step by Step tutorial to understand Protractor using Javascript&Typescript +Framework development(Cucumber,Jasmine)",
      "objectives": [
        "By end of this course, You will get complete knowledge on Protractor API to automate any Angular/NonAngular Apps",
        "In-depth knowledge of JavaScript with Asynchronous Promise concepts",
        "You will gain the ability to design Protractor framework from scratch using jasmine Unit testing techniques",
        "Understand the Nodejs principles and package json in depth for CI integration",
        "Includes a Practice Website to play around with all available Protractor functions to automate",
        "Crack any Protractor Interview on Single shot!"
      ],
      "course_content": {
        "Introduction": [
          "Understand the importance of Protractor",
          "UPDATE - Typescript Addition to this course***Must watch Lecture***",
          "Why Node.js? Install Node",
          "Install Protractor with Webdriver plugin",
          "Install commands List"
        ],
        "Getting started with Protractor": [
          "Important Note",
          "Install Javascript Eclipse Tool for Protractor tests",
          "Introduction to Jasmine and its terminologies",
          "Code download",
          "Importance of Configuration file in protractor framework",
          "File reference",
          "Creating Protractor TestRunner file to run the scripts",
          "Install Angular JS plugin and convert to intern project"
        ],
        "Setting up Protractor Tests in Visual studio and Webstorm": [
          "Install Visual studio and run protractor Test",
          "Install Webstorm and run protractor Test"
        ],
        "Deeper Understanding of Protractor Promises and its working mechanism": [
          "Important Player Tips for Best learning Experience:",
          "Javascript Asynchronus and its problem with Protractor",
          "Importance of Promises and how its solves Asynchronous issue",
          "Links to read more on promises",
          "Understand how protractor inbuilt takes care of promise",
          "Project code download"
        ],
        "JavaScript Basics": [
          "Basics of Javascript",
          "JS conditional statements -If else",
          "Javascript loops - for with example",
          "Javascript while and do while -example",
          "code download",
          "Understand JS functions and its usage",
          "Importance of Javascript arrays with example",
          "Javascript String functions with examples",
          "Code download",
          "Important Note"
        ],
        "Getting Started with Protractor Tests": [
          "Understand Global variables of Protractor",
          "Usage of Protractor locators - 1",
          "Usage of Protractor locators - 2",
          "Jasmine assertions to validate Protractor tests",
          "Code download",
          "Running Protractor tests on Firefox and Internet Explorer",
          "Browser configuration file",
          "Running Protractor tests on Non Angualr Sites"
        ],
        "Deep dive into Protractor Core API": [
          "Web applications to Practise Protractor Automation",
          "Importance of chain locators with example",
          "Chain locators to identify Child elements-Example",
          "Code download",
          "Getting the list of Elements with All method in Protractor",
          "Practise exercises on All and chain locators",
          "Code download",
          "Handling list of dropdown options with example",
          "Code download"
        ],
        "Handling Mouseactions, Windows, Alerts with Protractor": [
          "Actions and its importance in the Angular UI",
          "Examples of handling Autocomplete dropdowns with Actions",
          "Handling child windows with Protractor",
          "Examples on validating child windows with Switch Mechanism",
          "Code download",
          "Handling Java Alerts with Protractor",
          "Code download"
        ],
        "Frames and Synchronization practical usage": [
          "What are Frames? Methods to handle in protrator",
          "Handling synchronization with Protractor",
          "Code download"
        ],
        "Real time project in building Protractor tests": [
          "Demo project walkthrough",
          "Submission of Forms with various Protractor locators",
          "Validating Angular error messages - example",
          "Handling dynamic sections with Protractor",
          "Practise Exercises on selecting items to cart-",
          "String functions to extract count of cart items",
          "Code download"
        ]
      },
      "requirements": [
        "No prior experience required on any language. Everything including Tool setup instructions are taken care in the course.",
        "Theoretical Material,Code dump and Interview Guide are available for download",
        "You will have Life Time instructor support to get solved all your queries and we will get back with solutions in less than 12 hours"
      ],
      "description": "Course Last Updated- March 3rd- [Protractor Cucumber BDD Framework]\n\"Welcome to The only online course in the World which covers end to end Automation using Protractor API from Complete Scratch to Framework level using  Javascript Jasmine & Typescript Cucumber. \"\nWhy Protractor?\nProtractor turns out be the Hottest Automation testing tool in the market with sudden increase in demand of of Javascript Frameworks like Angular, React for Front End UI development.\nProtractor is developed by Angular core team and takes clear edge over all other testing tools for Angular Apps automation in terms of stability, reliabity ,Performance and Code complexity.\nAnd I Bet! On course Completion You can clear any interview or develop Protractor framework on your own.\nAs a bonus apart from protractor, You will learn lots  of new  technologies in this course such as Javascript,Typescript, Node, jasmine,  etc.\nBelow is the course Content we Cover:\nIntroduction to protractor\nNode.js basics with setup instructions\nProtractor Setup and installation\nJavascript Basics\nProtractor API Overeview\nDifferent locator strategies available in Protractor\nUnderstanding Javascript Asynchronous promises\nWorking with Angular UI Elements with Protractor\nUnderstanding the configuration file\n20+ Practise exercises on UI Automation using Protractor\nWorking with non Angular Apps using protractor\njasmine Unit testing framework basics\nOptimizing protractor tests for Framework development\nPage object mechanism in JS frameworks\nData driven and parameterzation using Jasmine Framework\nClient reports generation and config methods for Robust framework\nIndepth understanding of Pacakage.json file and npm commands\nIntegrating the Protractor framework with CI Jenkins tool\nIntroduction to Git Hub\nWish you all the Best! See you all in the course :)",
      "target_audience": [
        "Any Software Proffesional"
      ]
    },
    {
      "title": "Automated Software Testing with Puppeteer",
      "url": "https://www.udemy.com/course/automated-headless-browser-testing-with-puppeteer/",
      "bio": "Learn a great alternative to Cypress and Playwright with Google's Puppeteer + Headless Chrome Framework (7000+ Students)",
      "objectives": [
        "Master Fast and Reliable Automated Testing with Puppeteer and Headless Chrome",
        "Learn Great Alternative to Playwright and Cypress or Selenium frameworks",
        "Put your skills into practice with real-world end-to-end testing examples and challenging exercises",
        "Build a robust automation framework using the best practices of the Page Objects Model",
        "Learn how to use Puppeteer for REST API testing and web scraping, and expand your automation capabilities beyond web UI testing",
        "Integrate your automation tests with CI/CD pipelines using Jenkins, and streamline your testing process for faster and more efficient releases",
        "Discover how to perform visual regression testing with Puppeteer and ensure your web applications look and perform as intended across different browsers",
        "Get exclusive access to professional tips, tricks, and best practices from industry experts, and stay ahead of the curve with the latest automation techniques",
        "Learn how to integrate Puppeteer with popular BDD frameworks like Cucumber and CodeceptJS, and take your test automation to the next level",
        "Discover why Puppeteer is the next generation framework that surpasses Selenium and Cypress in terms of speed, reliability, and ease of use"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Why Puppeteer?",
          "Project Setup & Launch"
        ],
        "Mastering the Puppeteer Basics": [
          "Browser Management",
          "Browser Actions",
          "Test Hooks",
          "Assertions",
          "Tagging",
          "Debugger",
          "Selectors",
          "Handle Multimedia",
          "Device Emulations",
          "File Uploads",
          "Mochawesome Reporter",
          "Test Scripts",
          "Custom Functions",
          "E2E Testing Example",
          "Page Objects Design Pattern",
          "Puppeteer Docs Overview",
          "Puppeteer Fundamentals Quiz"
        ],
        "Visual Regression Testing": [
          "Project Setup",
          "Prettier Setup",
          "Node Scripts for Visual Testing",
          "Jest Config Setup for Visual Testing",
          "Implement Visual Regression Test",
          "Single Element Snapshot",
          "Responsive Visual Tests",
          "Exclude Dynamic Content from Snapshots",
          "Source Code",
          "Percy - Introduction",
          "Percy - Create Project",
          "Percy - Integration with Puppeteer"
        ],
        "Automation Framework using Jest and Puppeteer": [
          "Project setup",
          "Configuration setup",
          "Babel config source code",
          "Create Base Page",
          "Framework part 1",
          "Framework part 2",
          "Framework part 3",
          "Framework part 4",
          "End-to-End Tests: part 1",
          "End-to-End Tests: part 2",
          "Framework Improvement tips",
          "Source Code"
        ],
        "Advanced Builder Pattern Framework": [
          "Project setup",
          "Babel Setup",
          "Lets test our project setup and configuration",
          "Implementing Mocha-Steps library",
          "Framework Core: Create Builder Class part 1",
          "Framework Core: Create Builder Class part 2",
          "Framework Core: Create Builder Class part 3",
          "Extending Puppeteer Page with Custom Functions",
          "Extending Puppeteer Page with Custom Functions part 2",
          "Finish Builder Class",
          "Builder Class source code",
          "End-to-End Testing using Builder Class",
          "More about End-To-End tests",
          "Lets make some classes with Page Objects Model",
          "Source Code"
        ],
        "BDD with Cucumber & Reporting": [
          "Introduction to BDD and Cucumber",
          "Setup Cucumber + Test Scripts",
          "Cucumber Feature files",
          "Cucumber Step Definitions",
          "Cucumber World Constructor",
          "Execute Feature Scenarios",
          "Cucumber HTML Reporter",
          "Source Code"
        ],
        "BDD with CodeceptJS": [
          "Setup Puppeteer with CodeceptJS Project",
          "Prettier Setup",
          "Codecept Configuration",
          "Launch Browser",
          "Implicit and Explicit Waits",
          "Multiple Scenarios",
          "Screenshots",
          "Elements Visibility",
          "Assertions"
        ],
        "Continuous Integration": [
          "What is CI / CD",
          "Jenkins vs Circle vs Travis",
          "Project Setup",
          "Prettier Setup",
          "Node Scripts",
          "Create Smoke Test",
          "Create End-to-End Test",
          "Setup Jenkins Build for Puppeteer Project",
          "Parameterized Build with Jenkins",
          "Jenkins Overview",
          "Bonus: Jenkins Server Script"
        ],
        "Tips and Tricks": [
          "Section Introduction",
          "Generate Full Page Screenshot",
          "Generate Full Page PDF",
          "Emulating Devices",
          "Faking Geolocations",
          "Accessibility Test",
          "Measuring Website Performance Data",
          "Puppeteer with Firefox!",
          "Using Incognito Browser",
          "Use ES6, Babel with Puppeteer",
          "ES6 classes with Puppeteer",
          "mocha-steps library",
          "jest-puppeteer library"
        ],
        "Beyond Testing: Web Scraping with Puppeteer": [
          "Project setup",
          "Linting setup",
          "Simple configuration",
          "Node Scripts for scraper",
          "Browser setup for web scraper",
          "Make Scraper Undetectable",
          "Data mining from the website",
          "Create date & time utility",
          "Store data to local files",
          "Source Code"
        ]
      },
      "requirements": [
        "To take this course, participants should have basic programming knowledge. Knowledge of Javascript is a great advantage",
        "Participants are required to have NodeJS installed",
        "Should also have access to a text editor, with VS Code being recommended"
      ],
      "description": "Want to become a true expert in web automation and testing? Discover the full potential of Puppeteer—Google’s powerful non-Selenium browser automation framework—in this hands-on, project-based course designed to take you from beginner to advanced automation engineer.\nThis comprehensive and practical course is perfect for anyone looking to gain real-world experience in web automation using modern tools. From the very start, you'll jump straight into coding exercises that guide you through building and testing web applications using Puppeteer's intuitive and robust API.\nYou’ll start by learning installation, setup, and configuration of Puppeteer, then dive deep into advanced topics like element interaction, automation flows, and working with asynchronous browser behavior. You'll practice through real-world end-to-end testing examples, gaining experience you can immediately apply in professional projects.\nA standout feature of this course is the implementation of the Builder Pattern framework, a professional and elegant approach to automation that allows you to build your own robust test framework using Puppeteer with Jest. This structured method will boost your confidence in creating scalable, readable, and maintainable test suites.\nBut we don’t stop there. You’ll also learn how to apply the widely-used Page Object Design Pattern—an essential for clean automation architecture. Explore Behavior-Driven Development (BDD) by integrating Puppeteer with Cucumber or CodeceptJS, and bring a visual edge to your testing with visual regression testing using either Percy or jest-image-snapshot.\nTo reinforce your learning and simulate real-world environments, this course includes two live projects where you’ll put your skills to the test. You’ll also receive interview preparation tips to help you confidently step into automation roles and showcase your new abilities to potential employers.\nWorried about getting stuck? Don’t be. Our vibrant Q&A section is always active, filled with support from the instructor and fellow students. You’ll find expert advice, troubleshooting help, and bonus insights that keep you moving forward.\nWhether you’re a QA professional, a developer expanding your toolset, or a beginner looking to enter the world of test automation, this course gives you everything you need to master Puppeteer and stand out in the industry.\nDon’t wait—enroll today and start your journey to automation success with Puppeteer!",
      "target_audience": [
        "Any developer who wants to start writing fast and reliable automated tests",
        "Any javascript developer with absolutely no experience testing applications",
        "Advanced programmers willing to become testing masters",
        "Anyone who wants to learn about Selenium alternatives",
        "Manual QA / Testers"
      ]
    },
    {
      "title": "Learn Pytest in 100 Minutes :Unit Testing Framework 4 Python",
      "url": "https://www.udemy.com/course/big-data-testing/",
      "bio": "Pytest basic functionality | Setup & Tear Down | Fixtures | Assertions | Grouping and Reporting",
      "objectives": [
        "Detailed understanding of Pytest and all of its features & practical implementation",
        "Ready to write functional or API Automation testcases using Pytest",
        "Ready to implement Pytest Framework in Different Python Automation",
        "Ready to face Pytest related interview Questions",
        "Use pytest for different automation, practical implementation and reporting"
      ],
      "course_content": {
        "Setup & Introduction": [
          "Course Roadmap : Must for everyone",
          "Python Setup on Windows Machine",
          "Setup Python Editor : Pycharm",
          "Setup PIP : Package Manager for Python",
          "Introduction to Pytest : Unit Testing Framework for Python"
        ],
        "Write testcases in Pytest": [
          "Write Test Case in Pytest format",
          "Write Multiple Test Cases and Execute testcases together",
          "Write Multiple Test Cases in a File : Check Execution Options",
          "Skip Test Cases | Execute test cases conditionally",
          "Grouping Test Cases : Tagging and Execute using tags",
          "Assertions : Compare Actual Result with Expected Result",
          "Fixtures : Execute Code Before and After Test Case",
          "Reporting in Pytest"
        ]
      },
      "requirements": [
        "Should have basic understanding of Software Testing",
        "Should have basic understanding of Unit Testing & Automation",
        "Should have basic understand of Python Programming",
        "Should have basic understanding of Functional or API automation using Python"
      ],
      "description": "PYTEST makes it easy to write small tests, yet scales to support complex functional testing for applications and libraries.\npytest is a mature full-featured Python testing tool that helps you write better programs.\nThis course is a crash course which will make you job ready with practical exposed in quick time.\nFeatures\nDetailed info on failing assert statements\nAuto-discovery of test modules and functions\nModular fixtures for managing small or parametrized long-lived test resources\nCan run unittest (including trial) and nose test suites out of the box\nRich plugin architecture, with over 315+ external plugins and thriving community\nCourse Coverage\n1.   Step by Step Installation Instructions\n2.   Introduction and Advantages of  Pytest.\n3.   How to write testcases using Pytest.\n4.   Adding Assertions to Test Cases.\n5.   Grouping of Test Cases using Tags\n6.   Standard format of Pytest formatted testcases\n7.   Reporting in Test Cases\n8.   Execution of groups using Tags\n9.  Realtime implementation of Pytest in Web Automation framework using Selenium & Python.\n10. Reporting integration with Pytest to generate advance level reporting.\n11.  Compare expected and actual result of testcases to define failed testcases.\n12. Realtime interview question (Theoretical and Practical implementation\n13. Setup related libraries, importance of libraries and its use.\nFeatures\nAuto-discovery of test  functions and modules\nModular fixtures for managing small or parametrized long-lived test resources\nRich plugin/ library architecture, with over hundreds external plugins and thriving community",
      "target_audience": [
        "Manual testers looking opportunity in Automation Testing with Python",
        "Automation testers looking to Work on Python Automation",
        "Automation tester wants to implement Pytest in any existing framework",
        "Testers looking to learn Selenium Python or any automation using Python programing"
      ]
    },
    {
      "title": "BDD in C# - using Specflow (Cucumber) to develop a REST API and automate software testing",
      "url": "https://www.udemy.com/course/bdd-in-c-using-specflow-cucumber-to-develop-a-rest-api/",
      "bio": "Learn how to develop software in Behaviour Driven Development (BDD) using Specflow - part of the Cucumber software family of tools for software testing automation.",
      "objectives": [
        "Develop software in BDD (Behaviour Driven Development) using Cucumber software",
        "Use SpecFlow to develop software applications",
        "Collaborate with other team members ( developers, stakeholders, testers, etc.) through SpecFlow to to create a better product",
        "Develop a working REST API using SpecFlow following the BDD process"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "BDD": [
          "What is BDD?"
        ],
        "Specflow - Introduction": [
          "What is Specflow?",
          "Specflow Installation and Setup"
        ],
        "Specflow - Features": [
          "Features in Depth"
        ],
        "SpecFlow in action - Coding the REST API using BDD": [
          "Introduction to the REST API",
          "Creating our first feature file",
          "Implementing the first feature",
          "More advanced SpecFlow - creating a second feature",
          "Implementing the second feature using some new SpecFlow functionality",
          "SpecFlow Hooks, Tags and Scope",
          "Adding the third feature: your turn !"
        ]
      },
      "requirements": [
        "Basic knowledge of an object oriented language ( ideally C# ) is required to fully understand some areas of this course"
      ],
      "description": "In this course you will learn about Behaviour Driven Development in C# and how this can be done using Specflow, which is the .Net implementation of Cucumber.\nWe will be going Specflow's core features in detail including:\nInstallation\nScenarios\nFeatures\nTags\nHooks\nScenario Outlines\nScoped bindings\nStep Definitions\nRunning tests\nand many more..\nThe course starts off with both video tutorials explaining the Behaviour Driven Development process and an introduction to SpecFlow,followed by practical coding sessions where we will be developing a REST API together using SpecFlow and BDD to make sure that we are able to apply what we have learnt.\nI'm also available to answer any queries you may have regarding any course material which you didn't understand or would like further detail on.",
      "target_audience": [
        "Developers & Software testers who would like to learn how to use SpecFlow and Gherkin language",
        "Testers and QAs who would like to understand better how SpecFlow should form part of the BDD cycle",
        "Project Managers and stakeholders who want to understand how BDD and Specflow can be used in their projects"
      ]
    },
    {
      "title": "Java Design Patterns & Devops to build Selenium Framework",
      "url": "https://www.udemy.com/course/selenium-design-patterns-framework-design/",
      "bio": "Learn Industry Standard Automation Framework with Top Coding Design Patterns & Seamless Integration to Latest tech tools",
      "objectives": [
        "Understand the Java Design Patterns to build Top class Selenium Automation Framework",
        "Learn how to Connect Test Automation Frameworks with Artifactory Management tools like JFROG",
        "Implement Continiuos Integration Best Practices with Git Hub Web Hook Plugin with Jenkins Trigger Mechanism",
        "Implement Design Practices such as Single Responsibility Design Pattern , Strategy Design Pattern, Factory Design Pattern",
        "Importance of Execute around Design Pattern in Selenium Coding",
        "Implementing Hash Map Mechanism for Data Drive Testing which constitutes many data inputs",
        "Connecting Core Automation Framework with Child Test Frameworks with Maven Dependencies"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Benefits of this course Learning for Automation Jobs",
          "Setting up the IntelliJ and create Maven Project",
          "Where to download Code Files"
        ],
        "Single Responsibility Principle (SRP) Pattern for Selenium Framework - Part 1": [
          "Introduction to SRP Design Patten and its advantages",
          "Breaking the Page object pattern into Multiple Sub components",
          "Building Abstract Classes to define reusable methods",
          "Create Custom FindElements to narrow down the execution search"
        ],
        "Single Responsibility Principle (SRP) Pattern for Selenium Framework - Part 2": [
          "Define Selenium Tests which utilizes Single responsibility design pattern - 1",
          "Define Selenium Tests which utilizes Single responsibility design pattern - 2",
          "Effective reuse of Single Responsibility Design pattern for other Components",
          "Review SRP Design Pattern principles which are implemented"
        ],
        "Strategy Design Pattern Implementation for Framework Design": [
          "Introduction to Strategy Design Pattern and its advantages",
          "Create Interfaces to implement Strategy Design Pattern",
          "Get and Set Flight Booking Strategy at run time with Interface return type",
          "Running the code with multiple Strategy Types based on context defined",
          "Implement Algorithm for Flight Check Availability Method for all strategies",
          "Inheriting Abstract Components and implementing Interface for Page object class"
        ],
        "Factory design pattern Implementation for Framework Design": [
          "Importance of Factory Design Pattern and its advantages"
        ],
        "Execute Around Pattern Implementation for Selenium TestCases": [
          "What is Execute Around Pattern and its advantanges",
          "Practical Usage of Execute Pattern to minimize the reusable code - 1",
          "Implementation of HashMap into Framework to make code more generic and reuse"
        ],
        "Parameterization of Tests with the help of HashMap JSON Integration": [
          "Parameterizing tests with HashMap DataProvider Integration to run Iteratively",
          "End to End Test Execution with Parameterizing the Tests with Design Patterns",
          "Driving the data from External Json files to Hash Map Arrays -1",
          "Driving the data from External Json files to Hash Map Arrays -2",
          "Build DataReader Utility and complete End to End execution"
        ],
        "Best Practices in Framework Design to isolate Core Framework from Test Framework": [
          "Common Problems in Maintaining Framework when working with Multiple Teams",
          "Creating Jar for Core Automation Framework to reuse this in other Repo's",
          "Working on Test Project with Core Framework Maven Dependencies import to POM.xml"
        ],
        "Jfrrog Artifactory Management tool to deploy the Framework Jar": [
          "Importance of Jfrog Artifactory Management tool",
          "Integrating Jfrog Architecture Configuration to Core Framework",
          "Deploying the Framework Artifact into Jfrog with Maven deploy command",
          "Accessing the Artifactory into Child Automation Framework Projects with Jfrog"
        ],
        "Continuous Integration with GitHub Web hook to Jenkin Trigger jobs": [
          "Avoid Manual deployments with CI Trigger Mechanisms- Intro",
          "Setting up GitHub repository and Jenkins Job for Project Deployment",
          "Create Public Jenkins url as Web hook to Github for Automatic Job trigger"
        ]
      },
      "requirements": [
        "Basics of Java",
        "Selenium"
      ],
      "description": "Your Struggle ends here in designing Top Notch Enterprise level Selenium Frameworks with all the Proven Best Coding Standards.\nThis course will explain most important Java Design Patterns which will be very suitable for Test Frameworks design and guide you from scratch with step by step Implementation of the Framework solution with all Proven Best Practices.\nYou will also learn Advance Maintenance methods on how to Integrate your Framework with Artifactory Management tools like JFROG with Maven Snapshot Jars and build Continuous Integration Solution with Git Hub Web Hooks\nOn Successful course completion, You can confidently Claim yourself as Test Architect/ Expert in Frameworks Design as per the Latest Standards of 2022\n\n· What are Design Patterns?\nIn software engineering, a software design pattern is a general, reusable solution to a commonly occurring problem within a given context in software design.\n\nDesign Patterns discussed in this Course for Automation Framework Design:\nSingle Responsibility Design Pattern (SRP)\nStrategy Design Pattern\nFactory Design Pattern\nExecute around Design Pattern\nScreenplay Design Pattern\n\n\n· Best Practices you will learn from this course:\nConnecting Core Automation Framework with Child Test Frameworks with Maven Dependencies\nUnderstand how to create Snapshot of one Project and include it in another Project\nImportance of Jfrog Artifactory Management tool in Test Automation Frameworks for code centralization\nCreating Git Hub Web Hooks to implement Continuous Integration for every code commit to Artifactory/ Git\nImplementing Hash Map Mechanism for Data Drive Testing which constitutes many data inputs",
      "target_audience": [
        "QA Engineers, QA Architects, Java developers,Automation Enginners"
      ]
    },
    {
      "title": "End To End Software Testing (Manual)",
      "url": "https://www.udemy.com/course/end-to-end-software-testing-manual/",
      "bio": "Learning Software Testing with Practical Example...",
      "objectives": [
        "SDLC(Software Development Life Cycle)",
        "Jira for Project Management or issue tracking",
        "TestRail for Test management",
        "Postman for API testing",
        "MYSQL for DataBase testing",
        "JMeter for Performance testing",
        "Mobile app testing (Android and IOS)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "High Level Overview of SDLC",
          "Jira Tutorial for Beginners",
          "APIs for Beginners",
          "Agile-Backlog Grooming or Refinement story",
          "Agile-Sprint Planing",
          "Integrate TestRail With Jira",
          "Test Execution and Create a bug",
          "Create A Smoke Test Suite in TestRail",
          "MySql_Part1_Download and Create a connection",
          "MySql_Part2_Retrive And Delete Data from database",
          "MySql_Part3_ joining_2_tables",
          "Deployment_QA_To_UAT_Environment",
          "Create and Close BUG in UAT Environment",
          "How to Install JMeter",
          "Jmeter_Part2_How To Install Java and Set Path on mac",
          "Jmeter_Part3_Test MYSQL Server Using JMeter",
          "Mobile App TestingPart1",
          "Mobile App TestingPart2.mp4"
        ]
      },
      "requirements": [
        "No Programming experience needed!",
        "PC with 16GB memory is mandatory"
      ],
      "description": "Hi all, Welcome to End To End Software Testing Tutorial!\nThis course is designed with practical work environment for beginner who has never been working in Software Testing before. This course will help you to understand how software is develop and how to deliver to the customer. This is not a theoretical course, but instead we will learn step by step, practically, by writing and execute test cases based on user requirement in JIRA and \"TestRail\".You will learn how to work in Agile \"environment\".You will learn how to perform Smoke and Regression test in different environment(qa, uat and Prod). You will learn how to perform Performance testing using \"JMeter\". You will learn how to perform API testing using \"Postman”. You will learn how to perform Mobile App(Androind).We have used aws live server to host our website and database.\nSome of topics are highlighted below, we will go through all of this and more:\n* SDLC (Software Development Life Cycle)\n* Jira for Project Management or issue tracking\n* TestRail for Test management\n* Postman for API testing\n* MYSQL for Database testing\n* JMeter for Performance testing\n* Mobile app testing (Android and IOS)\nI like to Say Thank you and see you in this course!!!",
      "target_audience": [
        "This courser is for beginners"
      ]
    },
    {
      "title": "Testing Spring Boot: Beginner to Guru",
      "url": "https://www.udemy.com/course/testing-spring-boot-beginner-to-guru/",
      "bio": "Become an Expert Testing Java and Spring Boot Applications using JUnit 5, Mockito, Spring Boot, and More!",
      "objectives": [
        "Learn Important Concepts behind Test Driven Development",
        "Understand different types of testing - Unit, Integration, Functional",
        "Master the JUnit 5 Testing API",
        "Easily integrate Mockito with JUnit 5 Tests",
        "Migrate JUnit 4 tests to JUnit 5",
        "Test Spring Framework Applications with JUnit 5 and Mockito",
        "Write Unit Tests with Spring MVC Test",
        "Learn to use testing features of Spring Boot"
      ],
      "course_content": {
        "Introduction": [
          "Meet Your Instructor",
          "Introduction to Testing Spring Boot - Beginner to Guru",
          "Getting the Most out of your Testing Spring Boot Course",
          "Is Your IDE Free Like a Puppy?",
          "IntelliJ 120 Day Trial",
          "Slack Community Exclusive to Testing Spring Boot Course!",
          "GitHub Workflow"
        ],
        "Introduction to Testing Software": [
          "Introduction",
          "Introduction to Testing Software",
          "JUnit Test Example",
          "Common Testing Frameworks for Java",
          "Beyond Testing with CI and CD",
          "Conclusion"
        ],
        "Test Driven Development By Example": [
          "Introduction",
          "TDD By Example Kent Beck",
          "Development Requirements and Base Project",
          "Multi-Currency Money",
          "Degenerate Objects",
          "Equality for All",
          "Privacy",
          "Franc-ly Speaking",
          "Equality for All, Redux",
          "Apples and Oranges",
          "Makin' Objects",
          "Times We're Livin' In",
          "Interesting Times",
          "The Root of All Evil",
          "Addition, Finally",
          "Make It",
          "Change",
          "Mixed Currencies",
          "Abstraction, Finally",
          "Viewing Test Coverage from IntelliJ",
          "Conclusion"
        ],
        "Getting Started with JUnit 5": [
          "Introduction to Getting Started with JUnit 5",
          "Introduction to JUnit 5",
          "JUnit Maven Project Setup",
          "JUnit Hello World Test",
          "Initializing Properties with JUnit 5 @BeforeEach",
          "JUnit 5 Test Instance Lifecycle Demo",
          "Running JUnit 5 Tests from Command Line with Maven",
          "JUnit Gradle Project Setup",
          "Running JUnit 5 Tests from Command Line with Gradle",
          "Conclusion of Getting Started with JUnit 5"
        ],
        "Testing Java with JUnit 5": [
          "Introduction to Testing Java with JUnit 5",
          "Java Test Project Code Review",
          "Overview of JUnit Assertions",
          "JUnit Assertions",
          "JUnit Grouped Assertions",
          "JUnit Dependent Assertions",
          "Skipping JUnit Tests",
          "JUnit Test Display Names",
          "Testing Expected Exceptions",
          "Testing Timeouts",
          "JUnit Assumptions",
          "Conditional JUnit Test Execution",
          "Using AssertJ with JUnit",
          "Using Hamcrest with JUnit",
          "Assignment - Write JUnit Test for Vet Controller List Vets",
          "Assignment Review - Write JUnit Test for Vet Controller List Vets",
          "Conclusion"
        ],
        "Advanced JUnit Testing": [
          "Introduction to Advanced JUnit Testing",
          "Tagging and Filtering JUnit Tests",
          "JUnit Nested Tests",
          "JUnit Test Interfaces",
          "Using JUnit Default Test Methods",
          "Repeating Tests with JUnit 5",
          "JUnit Test Dependency Injection",
          "Assignment - JUnit Dependency Injection",
          "Assignment Review",
          "JUnit Parameterized Tests - Value Source",
          "JUnit Parameterized Test - Display Name",
          "JUnit Parameterized Tests - ENUM Source",
          "JUnit Parameterized Tests - CSV Source",
          "JUnit Parameterized Tests - CSV File Source",
          "JUnit Parameterized Tests - Method Provider",
          "JUnit Parameterized Tests - Custom Provider",
          "Unit Tests vs Integration Tests",
          "JUnit Extensions",
          "Conclusion"
        ],
        "Test Execution": [
          "Introduction",
          "Running Tests from IDE",
          "Maven Surefire Plugin",
          "Maven Failsafe Plugin",
          "Maven SurefireTest Reporting",
          "Executing JUnit Test with Tags in Maven",
          "Running Tests from CI Builds With Maven",
          "CircleCI Build Badge",
          "Gradle Project Overview",
          "Running JUnit Tests from Gradle",
          "Integration Tests With Gradle",
          "Gradle JUnit Test Reports",
          "Conclusion"
        ],
        "JUnit 4 to JUnit 5 Migration Guide": [
          "Introduction",
          "JUnit 4 Example Project",
          "Differences Between JUnit 4 and JUnit 5",
          "JUnit 5 Maven Dependencies and Configuration",
          "Converting JUnit 4 Tests to JUnit 5",
          "Removing JUnit 4",
          "Conclusion"
        ],
        "Getting Started with Mockito": [
          "Introduction",
          "Introduction to Mockito",
          "Maven Dependencies for Mockito",
          "Creating Mockito Mocks Inline",
          "Creating Mockito Mocks with Annotations",
          "JUnit Mockito Extension",
          "Injecting Mocks with Mockito",
          "Verify Interactions With Mockito Mocks",
          "Assignment - Write Mockito Tests for Vet Service",
          "Assignment Review",
          "Returning values from Mockito Mocks",
          "Argument Matchers",
          "Assignment - Complete Tests for Visit Service",
          "Assignment Review",
          "Conclusion"
        ],
        "Behavior Driven Mockito": [
          "Introduction",
          "Introduction to Behavior Driven Development",
          "BDD Mockito",
          "BDD Verification in Mockito",
          "Refactoring Speciality Service to BDD",
          "Assignment - BDD Visit Service",
          "Assignment Review",
          "Conclusion"
        ]
      },
      "requirements": [
        "Java Programing",
        "Spring Framework",
        "Spring Boot",
        "Basic SQL Skills",
        "IntelliJ or Eclipse"
      ],
      "description": "In modern software development having proper automated test coverage is considered a best practice. In this course you will learn how to test Java and Spring Boot applications using highly popular open source tools.\nYou will see in the first section of this course, the software testing ecosystem is very diverse. JUnit and Mockito are two of the leading testing libraries for Java. JUnit provides the test execution context, while Mockito give you power mocking capabilities. Together these libraries can be used to write unit tests, integration tests, and functional tests. You will also learn why having proper test coverage is critical to supporting other popular agile practices such as Continuous Integration and Continuous Deployment (aka CI/CD).\nAgile teams all over the world consider Test Driven Development (TDD) a critical technique for producing quality software. This course begins by using JUnit 5 to demonstrate how to use TDD to create a simple Java application, then again using TDD to evolve the application to a higher level of quality and functionality.\nNext, the course takes you into a deep dive of the features and functionality of JUnit 5. You will learn how to write JUnit 5 unit tests for a Java web application.\nThe primary focus of this course is on the JUnit 5 release. There are some very notable differences between JUnit 4 and JUnit 5. This course contains a dedicated section showing you how to migrate your JUnit 4 tests to JUnit 5.\nAs your testing needs become more complex, you will need to mock dependent objects.\nNot sure what a mock is? It's effectively a test double. An object created for unit testing.\nMockito is the most popular mocking library used by Java developers.\nIf you are writing Spring Framework applications, you're likely to be injecting dependent objects into your classes. You will learn how to use the robust mocking capabilities of Mockito to mock dependent objects in your unit tests.\nThe first 11 sections of the course focus heavily on unit testing with JUnit 5 and Mockito. This is to help you establish a strong unit testing foundation before we start testing Spring Boot applications.\nYou will have no doubts when it comes to testing Java classes using JUnit 5 and Mockito.\nThe Spring Framework itself has some very robust testing capabilities.\nWe start learning to test the Spring Framework by adding the Spring Framework Testing context to our tests.\nThis allows us to leverage the Spring Framework's Dependency Injection capabilities right in our tests.\nProperly testing Spring MVC controllers can always be a little tricky. You need to test all the things you are expecting the Spring Framework to handle for you around calls to your controllers.\nThis is where Spring MVC Test steps in. You will see how you can use Spring MVC Test with JUnit 5 and Mockito to properly test your Spring MVC Controllers.\nThe course continues showing you how to use Spring Boot test splices to bring up a minimal Spring Boot configuration for the testing of a Spring MVC RESTful controller.\nAnother powerful Spring project is Spring MVC REST Docs. This is a project which allows you to generate API documentation from your Spring Mock MVC tests.\nInside this course you will learn:\nJUnit 5\nAssertJ\nHamcrest Matchers\nMockito 2\nTest Driven Development (TDD)\nBehavior Driven Development (BDD) with Mockito\nMigrating to JUnit 5 from JUnit 4\nRunning JUnit 5 tests from Maven\nRunning JUnit 5 tests from Gradle\nUse CircleCI with Maven for Continuous Integration Testing\nSpring MVC Test\nJsonPath\nWiremock\nSpring MVC REST Docs\nCourse Extra - IntelliJ IDEA Ultimate\nStudents enrolling in the course can receive a free 120 day trial license to IntelliJ IDEA Ultimate! Get hands on experience using the Java IDE preferred by Spring Framework professionals!\nCourse Extra - Access to a Private Slack Community\nYou're not just enrolling in a course --> You are joining a community learning about testing Spring.\nWith your enrollment to the course, you can access an exclusive Slack community. Get help from the instructor and other Spring Framework Gurus from around the world - in real time! This community is only available to students enrolled in this course.\nThis is a very active Slack community with over 1,000 Spring Framework Gurus!\nThis is the largest online community of people learning Spring in the world.\nWith your enrollment, you can join this community of awesome gurus!\nSource Code Access\nAll course source code is available in GitHub. When you enroll, refer to the lesson resources for links to GitHub.\nClosed Captioning / Subtitles\nClosed captioning in English is available for all course videos!\nPDF Downloads\nAll keynote presentations are available for you to download as PDFs.\nLifetime Access\nWhen you purchase this course, you will receive lifetime access! You can login anytime from anywhere to access the course content.\nNo Risk - Money Back Guarantee\nYou can buy this course with no risk. If you are unhappy with the course, for any reason, you can get a complete refund. The course has a 30 day Money Back Guarantee.\n\nEnroll today and start learning about the latest tools and best practices for testing your Spring Boot applications!",
      "target_audience": [
        "Spring Framework Developers",
        "Java Developers who wish to create quality software",
        "Beginner Java developers seeking marketable skills"
      ]
    },
    {
      "title": "Software Testing Masterclass (2025) - From Novice to Expert",
      "url": "https://www.udemy.com/course/software-testing-masterclass-from-novice-to-expert/",
      "bio": "Learn software testing and become QA Engineer/Agile Tester, Mobile/Backend/Web/QA testing, JIRA, TestRail and much more!",
      "objectives": [
        "Learn the core testing skills needed to apply for Software Testing positions in just 7 hours.",
        "Be able to demonstrate your understanding of software testing to future employers.",
        "Test tooling, JIRA, Xray, Confluence, TestRail, Charles Proxy, Postman, gitHub and Miro which will help you to be a great software tester.",
        "Discover the freelancing opportunities and start earning money from testing!",
        "Engage with the testing community and learn all the hot topics in the IT industry."
      ],
      "course_content": {
        "Introduction": [
          "Why This Course?",
          "Course Roadmap"
        ],
        "Course Setup and Introduction to Software Testing": [
          "Section Introduction",
          "Working with Subtitles",
          "Software Testing Overview"
        ],
        "Basics of Software Testing": [
          "Section Introduction",
          "The Role of Testing in Software Development",
          "Software Development Life Cycle",
          "Testing Activities",
          "Bug Reporting - Principles and Best Practices",
          "Bug Reporting Practice",
          "Bug Life Cycle - Tracking and Managing Defects",
          "Bug Reporting Assignment - Find a bug on the live website!",
          "Software Requirement Specifications",
          "Test Case and Checklists",
          "Test Case and Checklists - Hands-on Practice",
          "Types of testing: Black-box and White-box",
          "Testing Mindset",
          "Your First Task as a Junior Test Engineer",
          "Basics of Software Testing",
          "Software Testing Newsletter and Blogs"
        ],
        "Advanced Testing Concepts": [
          "Section Overview",
          "Equivalence Partition and Boundary Value Analysis",
          "Decision Table and State Transition Testing",
          "Use Case Testing",
          "State Transition Testing Practice",
          "Black Box Testing Practice",
          "Negative Testing",
          "Smoke, Sanity and Regression Testing",
          "Smoke, Sanity and Regression Testing Practice Test",
          "Experienced Based Testing",
          "Risk Based Testing",
          "Risk Based Testing Practice",
          "Static and Dynamic Testing",
          "Test Planning and Estimation",
          "Development and Testing Environments",
          "Advanced Testing Concepts Practice",
          "Interview for a Mid-Level QA Role",
          "Advance Testing Concepts",
          "Introduction to Freelancing Opportunities"
        ],
        "Hands-On Tutorial on Test Case Design and Execution with Xray + Jira": [
          "Introduction to Xray and Jira",
          "Jira Walkthrough - Create your first jira project",
          "Xray Walkthrough - Enable Xray on your project",
          "Test Cases and Test Sets (Xray)",
          "Creation of a Test Plan (Xray)",
          "Test Execution and Analysing the Results (Xray)",
          "BDD and Automation"
        ],
        "Backend, Web and Mobile Testing": [
          "Section Introduction",
          "Backend Testing",
          "API Testing",
          "API Testing with Postman",
          "Web Application Testing",
          "Web Application Inspect",
          "Web Application Testing Practice",
          "Mobile Testing Strategy",
          "Mobile Application Testing",
          "Mobile Testing Practice",
          "Explaining Your Test Plan to the Product Owner",
          "Backend, Web and Mobile Testing Practice",
          "Software Testing Q&A",
          "Extra resources: Testing Articles & Blogs"
        ],
        "Software Testing Tools": [
          "Section Introduction",
          "GitHub for Bug Reporting",
          "Confluence for Documentation",
          "TestMonitor for Test Management (Test Preparation)",
          "TestMonitor for Test Management (Test Execution)",
          "TestRail for Test Management",
          "Miro for Collaboration",
          "Charles Proxy for Debugging"
        ],
        "SQL For Software Testers": [
          "Introduction to SQL",
          "SQL Environment and Database Setup",
          "SQL Queries and Database Testing",
          "SQL Queries Online Exercise"
        ],
        "Start earning money immediately! Freelancing Opportunities": [
          "Section Introduction",
          "uTest Introduction",
          "uTest Projects and Bug Reporting",
          "Testlio.com - Earn per hour",
          "BugFinders.com - Earn per bug",
          "Other freelancing opportunities",
          "List of Software Test freelancing portals"
        ],
        "Deep Dive In Testing": [
          "Section Introduction",
          "Waterfall Model Process Management",
          "V - Model Process Management",
          "Agile Process Management",
          "Agile Testing",
          "Localisation Testing",
          "Accessibility Testing",
          "Usability Testing",
          "A-B Testing",
          "Test Automation"
        ]
      },
      "requirements": [
        "A computer with either Windows, Mac or Linux to install all the free software and tools needed.",
        "Mobile phone with either iOS or Android for the Mobile application testing section.",
        "Nothing else! It’s just you, your computer and your dedication!"
      ],
      "description": "Welcome to the Complete Software Testing Masterclass.\n\n\nLearn software testing with this course and become a successful software tester/agile Tester. Obtain the core Mobile Testing, Backend testing, Web testing, and Test Engineering skills, and learn JIRA, Xray, SQL, TestRail, TestGear, Confluence, Charles Proxy, and GitHub. By the end of this course, you will have enough knowledge to get a job as a software tester or start working as a freelancer! We will also explain many testing platforms where you can start earning money as a beta tester.\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Software Tester.\n\n\nThe course includes over hours and hours of 1080P (HD) video tutorials with high-quality sound. All the videos are hand-edited and unnecessary parts are removed. You will only learn \"what you need to learn\" to become successful!\n\n\nAll videos have hand-edited subtitles. We spent many hours correcting all the subtitles to help you to have a smooth learning experience.\n\n\nWhy should you take this course?\nThis is the best and most up-to-date software testing course on Udemy. We explain all the important testing methodologies in both Agile and modern ways, with supporting real-life examples. Most of the other testing courses are created by inexperienced people or someone who has very little understanding of testing. This course is created by a Lead QA Engineer, who has experience in 3 different countries and who is still actively working at one of the TOP companies in the Netherlands.\n\n\nSign up today, and look forward to:\nOver 8 hours of HD video content\nAll the knowledge you need to start your software testing career.\nStart practicing online and earn money immediately.\nLearn the latest IT industry topics and stay up to date.\n\n\nDon't just take my word for it, see what my past students had to say about the course:\n\"I really enjoyed this course. I did some mobile testing in the past but learn some new concepts like postman,xray, testrail, and testlodge. Ozan is a good teacher and this is a great course to take.\" - Merlin Hunter\n\"I am so glad I took the course, I just ended it and I feel really excited. I found the videos engaging and interesting which kept my attention focused until the end. Lessons are very well organised around key concepts that are communicated in a clear and effective way.\" - Juan Jose Hernandez Garrido\n\"Great course! It covers all the topics necessary for a good understanding of software testing with the perfect pace and in enough detail. And it is nice that the instructor is a very experienced person in this industry so he knows well what he is talking about. I think this course will be a good choice if you are considering to start a career in QA or want to increase your knowledge in software testing.\" - Ivan Koryshev\n\"The most comprehensive and practice-value oriented software testing training I've ever seen.\" - Viktor Samusenko\n\"It was a very good match for me, I enjoyed the techniques used in deploying the lecture. Good examples made it easier for me to understand. Thanks :) \" - Ayodele Lekan\n\"Course was extremely informative and the examples given really helped tie everything together!\" - Selma Sharaf\n\nThere’s no risk!\nThis course comes with a full 30-day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, you will receive a 100% refund.\n\n\nReady to get started?\nEnroll now by using the “Add to Cart” button on the right, and become a successful software tester! Or, start watching the preview feature, so you know you’re 100% certain this course is for you.\n\n\nSee you at the course!",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous testing experience.",
        "For intermediates looking to sharpen their skills to the expert level.",
        "Those looking to build software testing knowledge and get a job in the IT industry.",
        "Basically to anyone who wants to learn more testing!"
      ]
    },
    {
      "title": "Selenium WebDriver Test Automation Framework With Real Project",
      "url": "https://www.udemy.com/course/webdriver-test-automation-framework-step-by-step/",
      "bio": "Build Enterprise-Level Test Automation Framework with Real Web Gmail Project",
      "objectives": [
        "Build enterprise-level WebUI automation test framework with Selenium WebDriver, Maven, Git, Jenkins, JUnit Categories, Apache SureFIre Report, which will cover the whole test framework picture from test execution, test category, test report, page object design pattern, continuous integration and codes management.",
        "Manage the essentials of WebUI automation test scripts writing, which includes Locate WebElement, Interact with WebElement, and Synchronization",
        "Apply the right locators according to different situation, especially handle those WebElements that the id do not exist or will change every time the web pages loads."
      ],
      "course_content": {
        "Course Overview, Project Background and Framework Design": [
          "One-minute Course Quick Peek",
          "Introduction",
          "Real Project Business Requirement - Test Scenarios",
          "Real Project Business Requirement - Test Framework",
          "Test Framework Design",
          "Manual Walk Through the test scenarios"
        ],
        "Automation Test Framework Implementation": [
          "Prepare Necessary Tools in MacOS Environment",
          "Build First Automated Test",
          "Solve the challenge and complete first test scenario",
          "Using Version Control System - Git",
          "Complete Another Test Scenario - Send email and receive email - start",
          "Complete Another Test Scenario - Send email and receive email - find patterns",
          "Complete Another Test Scenario - Send email and receive email - Challenge",
          "Complete Another Test Scenario - Send email and receive email - Congratulations!"
        ],
        "Refactoring Test Framework with Page Object Design Pattern": [
          "Commit code updates before continue next step",
          "Refactoring First Test Case with Page Object Design Pattern",
          "Refactoring Second Test Case with Page Object Design Pattern",
          "Refactoring WebUtil to enhance code re-used - Part 1",
          "Refactoring WebUtil to enhance code re-used - Part 2"
        ],
        "Test Category, Test Report and Further Studies": [
          "Use JUnit Category and Maven Profile to Run Test Groups",
          "Use Apache SureFire Report to generate HTML test report",
          "Continuous Integration with Jenkins",
          "Congratulations and Further Studies to help you advance your career!"
        ],
        "Bonus": [
          "Test Result Analysis and Test Scripts maintenance",
          "Cross-Browser Testing Setup with Chrome as Example",
          "XPath and CssSelectors Simplified Cheat Sheet",
          "XPath and CssSelectors Usage Examples"
        ],
        "Preparing Tools in Windows Environment - added based on students feedback": [
          "Tools Installation List in Windows Environment",
          "Install Java",
          "Install IntelliJ",
          "Install Maven",
          "Install Git, and Download the source code from BitBucket",
          "Install Firefox38 for newly released Selenium 2.46.0",
          "Run Sample Tests in Windows Environment using maven"
        ],
        "Get to know Selenium Grid": [
          "The simplest form of using Selenium Grid"
        ],
        "Source Code": [
          "Code Update on Nov 21, 2015",
          "Username and Password for Code Repo hosted in BitBucket",
          "Set Git to use your own repo"
        ],
        "Interview Questions": [
          "Interview Questions"
        ],
        "Other Lectures based on students feedback": [
          "How to interact with JavaScript Select Dropdown options",
          "How to group and prioritize tests with testNG and Maven",
          "Can I get the presentations?",
          "Is CSS Selector faster than XPATH?",
          "How to take screenshot on test failure?"
        ]
      },
      "requirements": [
        "The demo in this course is based on in MacOS environment. But all the tools we used are also available in Windows and Linux."
      ],
      "description": "Course Description\nThis course provides you a step-by-step guide on how to integrate Selenium WebDriver, Maven, Git, JUnit Categories, Apache SureFIre Report together, to build an enterprise-level WebUI automation test framework, based on my 10+ years of QA experience.\nLearn and master how to build automation framework with real project examples!\nManage dependencies using Maven\nManage code with Git\nRefactor with Page Object\nCategorize tests according to priority\nGenerate easy-to-read test report\nContent and Overview\nI designed this course from an email related Web UI automation project.\nStarting from business requirements requested by QA Manager, I show you how to design the test framework and integrate state-of-the-art tools together to achieve the business requirements. I will walk you through the setup of these tools step by step.\nThen as a QA Engineer, I will first manual test the test scenarios and write down the test steps. I will work with you together to turn these manual test steps into automated steps. Along the way, you will encounter challenges and solve them.\nIn order to make the test framework easy to maintain and expansible, you will refactor the codes with Page Object design pattern. You will find how to re-use the codes professionally and effectively.\nFinally, you will assemble the missing components, such as Test Category and Test report, by utilizing popular open source tools.\nWhat am I going to get from this course?\nLearn how to design and build up test framework from scratch\nKnow how to use the essential tools used by professional QA Engineer\nOver 30 lectures and 4 hours of content\nSource Code in this course\nLectures and Source Code continuously updated",
      "target_audience": [
        "This course is for you if you want to learn in detail how to design and choose the right tools to build enterprise-level automation framework, including test execution, test categorize, test report and test scripts management",
        "This course is ideal for Junior QA with some automation experience and want to become more familiar with industry best practices, so that they can advance their career to next level",
        "This course is ideal for QA who want to implement WebUI based project, especially web email related, as the real project background is gmail WebUI automation"
      ]
    },
    {
      "title": "Test Estimation: Basic & Advanced for IT/Test Professionals",
      "url": "https://www.udemy.com/course/test-estimation/",
      "bio": "A Simple and Very Effective technique to derive Testing Estimates, along with the Template for complete understanding.",
      "objectives": [
        "Master the Test Estimation technique and get that Edge in the Testing world.",
        "Learn the Importance and Benefits of Test Estimations.",
        "Understand Risk Based testing.",
        "Test Estimation step (when to begin) in the Software/Testing Life Cycle.",
        "Perform Risk Ranking of the software requirements for better estimations and other benefits.",
        "Implement the Tips & Tricks and become more confident.",
        "Multiple benefits of the Test Estimation template.",
        "Utilise Test Estimation template in your projects.",
        "Understand different stages in the SDLC and STLC.",
        "Overview of other Estimation techniques",
        "Customizing the template as per the Project requirements.",
        "Follow the continuous journey of the Improvement circle."
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "What is Test Estimation?": [
          "Software Test Estimation"
        ],
        "Test Estimation Benefits": [
          "Benefits"
        ],
        "When to Begin Test Estimation process?": [
          "Software Development Life Cycle",
          "Software Testing Life Cycle",
          "Assisting Factors"
        ],
        "Test Estimation Techniques": [
          "Estimation Techniques",
          "Risk Based Model",
          "Standard Test Activities in a Project",
          "Estimation Template",
          "Estimation Template (Excel)",
          "Estimation Template (Excel) continued...",
          "Estimation Template (Excel) continued..."
        ],
        "Continuous Learning/Optimizing": [
          "Learning"
        ],
        "Helpful Tips": [
          "Tips",
          "Thank You"
        ]
      },
      "requirements": [
        "High level understanding of the software Testing activities would be advantageous.",
        "It's a self sufficient course and even provides high level information on the related topics.",
        "No need of any material/software to understand the course."
      ],
      "description": "Learn the basics behind Software Test Estimation, how to do it effectively and Tips along with the Test Estimation template with example.\nMaster the Test Estimation technique and get that Confidence into your Professional career.\nTest Estimation definition and need.\nBenefits of Test Estimation.\nLearn - 'When to begin the Test Estimation process' in the Testing Life Cycle.\nOverview on the Software and Testing life cycles.\nFind out the various factors to be considered for the estimation process.\nKnow briefly about the Standard Estimation Techniques.\nMaster the Risk Based Test Estimation model/technique with a template.\nKnow about - Risk Ranking requirements activity.\nFind out the advanced journey of the estimation model and modifying the template as per your project.\nRecognize the need for optimizing the estimation process.\nLearn Tips, Best practices for Test Estimation.\nEverything about the Testing Estimates - Get that Edge\nIn my Professional career, I've seen many Testing professionals struggling to do Test Estimates and always having that uncomfortable feeling. I've specifically designed this course to bridge that gap, considering it's a very important activity for planning Project and Testing schedules. It could play a crucial role in the success or failure of Testing or Project as a whole. I'm also sharing a Test Estimation template to make learning more effective.\nTesting resources are more in demand than ever and companies are looking for skilled resources actively. This course will add to your skill-set and can definitely give you an edge over others in your professional career.\nContent and Overview\nSuitable for Testing Professionals, Project Managers and for those who are planning to begin their Testing career path. The course contents are simple to understand and students can straightaway start to implement the best practices and Test Estimation template in their respective projects. It talks about the definition, need, benefits of doing estimates, factors to consider and most importantly when to do this activity (for how long?) in the software development life cycle. Additionally, Software and Testing Life Cycles are discussed in brief for complete understanding.\nThe standard estimation techniques are briefly discussed and then Risk Based Test Estimation model is discussed in detail. An advanced model is also explained which gives more insight and takes your knowledge to an expert level.\nStudents completing the course will have the knowledge to create Test Estimates with lots of confidence and can really add a testing value to their projects.",
      "target_audience": [
        "Testing Professionals who want to learn and enhance their Test Estimation skills.",
        "Project Managers/ IT Professionals who are trying to understand the Testing world and Estimation Process.",
        "Anyone who wants to understand the Test Estimation process in a simplified and effective way."
      ]
    },
    {
      "title": "Master Test Management with HP ALM tutorials /Quality Center",
      "url": "https://www.udemy.com/course/master-test-management-with-hp-alm-tutorials-seal-qa-jobs/",
      "bio": "Hands-on learning guide on test management using HP Application Lifecycle Management (ALM)",
      "objectives": [
        "Manage testing process with HP ALM",
        "Organize and run requirements & test cases with ALM"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of software testing is preferred but not required",
        "If you already have basic understanding of test management process you can use it throughout the course but not required (We will provide step-by-step instructions from scratch)"
      ],
      "description": "Here's your chance to Master Test Management with HP ALM or previously knowned as Quality Center. Probably you are working as a QA tester or planning to get into the industry. You may have used HP Quality Center and this is your time to enhance your test management skills with ALM. It has been difficult to find the proper ALM training. QAEversity has brought you a quality package of ALM training including all the important modules of ALM such as Requirement, Test Lab and Test Set modules. HP ALM tutorial have made easy with QAEversity's award-winning instructors. This course addresses all aspects of ALM from the very basic to the most advanced level concepts. HP Application Lifecycle Management is the newest version of test management tool from HP family. ALM connection in QTP or UFT is also possible with this powerful tool. You can perform requirement management with ALM as well. Are you ready to add some hands-on ALM skills into your resume and seal your next QA job? Let's dig in and get started with these hands-on HP ALM tutorials.",
      "target_audience": [
        "This course is intended for beginner and advanced level QA testers new to ALM",
        "This course is not intended for individuals who have already played admin roles in HP ALM"
      ]
    },
    {
      "title": "Master Generative AI for Software Testing: Manual to Auto",
      "url": "https://www.udemy.com/course/master-generative-ai-for-software-testing-manual-to-auto/",
      "bio": "Master Generative AI for Testing: Python, Playwright, and Behave BDD Frameworks for Manual and Automation Testers",
      "objectives": [
        "Use Generative AI tools like ChatGPT and OpenAI API to create, analyze, and refine test plans, cases, and BDD scenarios dynamically.",
        "Master Python essentials: variables, functions, file handling, and libraries like Requests for effective automation testing.",
        "Build AI-enhanced frameworks using Behave BDD for API and Playwright for UI testing, focusing on dynamic and efficient test creation.",
        "Optimize automation tests with AI: refine BDD steps, generate test reports, automate cleanup, and integrate advanced features.",
        "Configure Jenkins CI pipelines to execute automated UI and API tests, generate reports, and streamline test workflows seamlessly.",
        "Ensure test data privacy: anonymize sensitive data, use environment variables, and follow ethical AI best practices with ChatGPT.",
        "Gain hands-on experience with real-world projects: automate Contact Us, Login APIs, and Goal Tracker API using practical exercises.",
        "Learn advanced testing techniques like custom test runners, targeted execution with tags, and detailed reporting using Allure."
      ],
      "course_content": {},
      "requirements": [
        "No Prior Python Knowledge Required: The course covers Python basics step-by-step, making it beginner-friendly.",
        "Basic Understanding of Software Testing: Familiarity with concepts like test cases and manual testing will help you follow along more effectively.",
        "OpenAI API Key (Recommended for Hands-On Practice): To implement AI-powered features practically/programmatically (e.g., generating test cases), you’ll need an OpenAI API key. OpenAI offers free credits for new accounts, but existing users may need to add minimal funds (~$5). Watching specific lectures without practical implementation is also an option.",
        "Some Programming Knowledge (Optional): While not required, basic familiarity with programming concepts can help you progress faster.",
        "Curiosity and Enthusiasm: A willingness to explore generative AI and automation testing will help you get the most out of this course.",
        "Ask Questions in the Q&A Section: If something isn’t clear or doesn’t work, guidance and support are always available."
      ],
      "description": "Why Generative AI in Software Testing?\nGenerative AI is transforming the software testing landscape by enabling dynamic test case generation, optimizing test execution, and improving coverage. Tools like OpenAI’s API and GPT4All empower testers to:\nReduce manual effort.\nUncover edge cases faster.\nEnhance both manual and automated testing workflows.\n\n\nWhy Python, Behave BDD, and AI-Driven Tools?\nPython: A versatile, beginner-friendly programming language widely used for automation.\nBehave BDD: A Python-based Behavior-Driven Development tool that uses the same Gherkin syntax as Cucumber BDD, simplifying test case creation and ensuring scenarios are clear for all stakeholders.\nAI Tools: Leverage OpenAI’s API (ChatGPT) and offline tools like GPT4All to dynamically create, optimize, and refine test scenarios, reducing manual effort and improving test coverage.\nTogether, these tools allow testers to:\nAutomate UI and API tests with AI, Python, Behave BDD, and Playwright.\nDynamically generate and refine test cases using AI tools like ChatGPT and OpenAI APIs.\nIntegrate into Jenkins CI pipelines for scalability and continuous test execution.\n\n\nWhy This Course?\nThis course is practical, easy-to-follow, and designed for manual testers and automation testers looking to upgrade their skills. Whether you’re new to automation or experienced in testing, you’ll gain hands-on experience with AI-powered testing.\n(Note: To fully implement AI features programmatically, an OpenAI API key is recommended. OpenAI provides free credits for new accounts, but existing users may need to add minimal funds (~$5). Watching specific lectures without practical implementation is also an option.)\nThe course includes Before and After code examples, attached to the relevant lecture resources, to help you understand concepts step-by-step and implement them seamlessly.\n\n\nWhat Will You Learn?\nGenerative AI for Test Case Creation\nUse ChatGPT (free or paid version) to generate test plans and test cases outside of code.\nUse OpenAI APIs to dynamically generate test cases and suggest step definition code within the framework (API key and minimal credits required for hands-on implementation).\nExplore tools like GPT4All for offline AI-powered testing.\nQuickly create optimized, AI-powered test scenarios.\nMastering Python Fundamentals for Testing\nPython basics: Variables, data structures, functions, and file handling.\nWork with JSON data and external libraries like Requests for API testing.\nBuilding AI-Enhanced Automation Frameworks\nBehavior-Driven Development (BDD): Simplify test requirements using Gherkin and Behave.\nAutomate UI Testing with Playwright and Behave (BDD).\nAutomate API Testing using Python and Behave (BDD).\nAdvanced Features for Automation\nUse Generative AI to refine BDD scenarios and step definitions.\nLeverage OpenAI API to analyze step definition files and recommend optimized code solutions.\nImplement tags, custom runners, and generate detailed test reports with Allure.\nCI/CD Integration: Learn how to run tests continuously using Jenkins CI pipelines.\nData Privacy and Security in AI Testing\nProtect sensitive data when using AI tools like OpenAI APIs.\nFollow best practices for anonymizing data and managing credentials securely.\nAdditional Features\nReal-World Projects: Automate tests for a Contact Us Page, Login Page, and a Goal Tracker API.\nPractical Exercises: Step-by-step recordings with before-and-after downloadable code examples.\nAI-Powered Optimizations: Generate, analyze, and refine test scripts dynamically.\nReporting: Generate detailed reports and attach screenshots for better test visibility.\n\n\nReady to Master AI-Driven Software Testing?\nBy the end of this course, you’ll have the skills to:\nIntegrate Generative AI into manual and automated testing workflows.\nBuild scalable and dynamic automation frameworks using Python, Behave BDD, Playwright, and Jenkins CI.\nLeverage AI tools to optimize and streamline testing processes effectively.\n\n\nLet’s revolutionize software testing with Generative AI together!",
      "target_audience": [
        "Manual Testers looking to streamline test case creation and enhance their skills using AI tools like ChatGPT and OpenAI API.",
        "Automation Testers wanting to build AI-enhanced frameworks for UI (Playwright) and API (Behave + Requests) testing with Python.",
        "QA Professionals aiming to integrate generative AI into their workflows for faster test case generation and smarter test execution.",
        "Beginners transitioning into automation testing with Python, Behave BDD, and Jenkins, with step-by-step, real-world examples.",
        "SDETs and Automation Engineers seeking to optimize and scale test automation using AI-powered tools, Jenkins CI, and dynamic reporting.",
        "Tech Enthusiasts eager to learn how to leverage AI tools like ChatGPT and GPT4All to create, analyze, and automate test scenarios.",
        "QA Managers and Leads interested in adopting AI-driven testing practices to improve productivity, test coverage, and efficiency."
      ]
    },
    {
      "title": "SDET: Java Lambda & Streams Masterclass [Selenium WebDriver]",
      "url": "https://www.udemy.com/course/java-8-and-beyond-for-testers/",
      "bio": "Learn Java Functional Programming - Lambda, Stream API with Selenium WebDriver From Scratch",
      "objectives": [
        "Master Modern Java: Stay ahead of the curve by learning the latest functional programming techniques.",
        "Revolutionize Test Automation: Leverage Java's functional paradigm to write more concise, expressive, and maintainable test code.",
        "Enhance Efficiency: Discover how the Stream API can significantly boost the performance of your test automation scripts.",
        "Acquire In-Demand Skills: Become a highly sought-after SDET professional with a deep understanding of Java's functional capabilities.",
        "Hands-On Learning: Benefit from numerous practical assignments to solidify your knowledge and apply concepts to real-world scenarios.",
        "Expert Guidance: Learn from a seasoned instructor who specializes in Java functional programming for test automation.",
        "Tailored for SDETs: The course is specifically designed to address the unique needs and challenges of software testing professionals.",
        "Career Advancement: Gain the skills necessary to advance your career and secure high-paying roles in the software testing industry."
      ],
      "course_content": {},
      "requirements": [
        "Java Basics",
        "Selenium Basics"
      ],
      "description": "Unlock the power of Java for Test Automation! In the dynamic world of software testing, Java remains a cornerstone, and the demand for skilled Software Development Engineer in Test (SDET) professionals is soaring. This specialized course focuses on the heart of Java's versatility Functional programming and the Stream API. Equip yourself with the expertise needed to excel in test automation with Selenium WebDriver while harnessing the full potential of Java's functional paradigm.\nWhat You'll Learn:\nFoundations of Java:\nGrasp the essentials: JDK vs. JRE, primitive and reference types\nJava Functional Programming:\nDive deep into Java's functional side, exploring lambda expressions, functional interfaces, and method references.\nMaster the principles of higher-order functions and the elegance of functional programming\nStream API Mastery:\nNavigate the Stream API for streamlined data processing and efficient manipulation of collections.\nExplore intermediate and terminal operations, emphasizing laziness, reusability, and parallel processing.\nPractical Assignments:\nApply your knowledge through real-world assignments, emphasizing functional programming techniques and leveraging the Stream API for effective testing scenarios.\nAdvanced Concepts:\nDelve into advanced topics such as Rules Engine with Predicates, Optional class, and collectors.\nEmbrace Java various new features.\nEffective Testing Techniques:\nLearn to use lambdas for Behavior-Driven Development (BDD) projects.\nExplore the importance of page objects and test classes enriched with lambda expressions.\nWhy Enroll: This course is tailored for those who want to go beyond traditional testing methods. Embrace Java's functional paradigm and Stream API to revolutionize your test automation approach. Through live coding sessions and practical assignments, become a proficient SDET with in-demand skills that set you apart in today's competitive industry.\nA lots of ASSIGNMENTS\nPrerequisites: Basic understanding of programming concepts and an eagerness to enhance your testing skills.",
      "target_audience": [
        "Anybody who wants to learn Java 8 and beyond"
      ]
    },
    {
      "title": "API Testing Package:Postman(Functional)- Jmeter(Performance)",
      "url": "https://www.udemy.com/course/api-testing-package/",
      "bio": "Functional Testing using Postman, SoapUI and Performance Testing using Jmeter",
      "objectives": [
        "You will be able to test functionality and performance of real time services",
        "Ready to face API testing interviews"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of software development or Software Testing",
        "Basic understanding of Microsoft Windows"
      ],
      "description": "What is an API?\nAPI stands for Application Programming Interface, which specifies how one component should interact with the other. It consists of a set of routines, protocols and tools for building the software applications.\nWhat is an API Testing?\nThe API Testing is performed for the system, which has a collection of API that ought to be tested. During Testing, a test of following things is looked at.\nExploring boundary conditions and ensuring that the test harness varies parameters of the API calls in ways that verify functionality and expose failures.\nGenerating more value added parameter combinations to verify the calls with two or more parameters.\nVerifying the behaviour of the API which is considering the external environment conditions such as files, peripheral devices, and so forth.\nVerifying the Sequence of API calls and check if the API's produce useful results from successive calls.\nThis course provide API testing coverage by using Following tools\n- Functional Testing using Postman\n\n- Pefromance Testing using Jmeter",
      "target_audience": [
        "Manual Testers looking opportunity in API automation testing",
        "Freshers, Looking opportunity in Software Testing"
      ]
    },
    {
      "title": "Jira Agile Project Management for Beginners-Bonus Confluence",
      "url": "https://www.udemy.com/course/learning-jira-and-agile-project-management-101-for-beginners/",
      "bio": "Master Jira for Beginners Updated 2025: Agile Project Management with Scrum/Kanban + Confluence Whiteboards & Databases",
      "objectives": [
        "Understand Agile and the Scrum Framework in plain English.",
        "Set up and run a project in Jira Software: backlog, sprints, and issues.",
        "You will be the star of your team keeping track of all your projects!",
        "Explore real-world Jira examples you can follow step by step.",
        "Learn how to use Confluence: navigation, spaces, pages, macros, and settings.",
        "Discover Basecamp project management (free version) and how it compares to Jira.",
        "Get productive fast with hands-on practice instead of theory overload."
      ],
      "course_content": {
        "Introduction": [
          "Course Overview Jira Software/Scrum/Confluence/Basecamp",
          "WHATCH ME: Important information for a great learning experience!",
          "Jira Quick Tip",
          "Downloadable Resources"
        ],
        "What is Agile?": [
          "Problems Agile Solves",
          "Agile Manifesto",
          "12 Agile Principles",
          "Why Use Agile",
          "Knowledge Check.- Agile Project Management"
        ],
        "Jira/Agile Terminology": [
          "Jira Terminology",
          "Different Types of Agile Project Management",
          "Other Agile Terms and Examples",
          "Estimating",
          "Knowledge Check - Jira Terms"
        ],
        "Scrum Basics- Agile Project Management Methodology": [
          "Scrum Tracking",
          "Scrum Roles and Team Norms",
          "Sprint Planning",
          "User Stories",
          "Define Success",
          "The Scrum Guide",
          "Knowledge Check - Scrum Basics"
        ],
        "Jira Software - Agile methodology": [
          "Team Project vs Company Project",
          "Signing up for a Free instance. of JIra",
          "Updated Interface 2025",
          "Jira Navigation 2025 Overview",
          "Jira updates show and tell 2025",
          "Creating and Epic 2025",
          "Creating User Story/Issue on a Scrum Board 2025",
          "Practice Activity - Creating an Epic in Jira",
          "Creating a Board in Jira",
          "Knowledge Check - Create a Scrum Project Board and Issues in the backlog",
          "Creating a Backlog in JIra on a Scrum Board",
          "Knowledge Check - Creating a Backlog in Jira",
          "Creating Sprint in Jira on a Scrum Board",
          "Knowledge Check - Creating a Sprint",
          "Team Velocity",
          "Ex - Jira/Scrum full lifecycle New - 2025",
          "Ex - Jira/Scrum Full Lifecycle Old",
          "Knowledge Check - Create your entire scrum project from start to finish",
          "Knowledge Check - Scrum/Jira Review"
        ],
        "Jira Administration": [
          "Jira User Aministration",
          "JQL - Jira Query Language Overview",
          "Jira Company Managed Projects Administration",
          "Jira Workflows",
          "Jira Schemes",
          "Custom Fields in Jira",
          "Jira - Create a new issue type",
          "Jira Group",
          "Knowledge Check - Jira Admin"
        ],
        "Jira- Other tools - Project Management, Onboarding etc": [
          "Jira - Role of a Project Manager",
          "Jira - Project Templates",
          "Jira RoadMaps Overview",
          "Jira Kanban Ex #1",
          "Jira - Kanban Ex #2",
          "Project Management Template",
          "Jira Onboarding Template",
          "Jira - Process Management",
          "Jira - Bug Tracking",
          "Jira - Your Work, Filters and Dashboards",
          "Jira Agile Personal Task Board - Passive Income Ideas Example",
          "Jira Personal To List",
          "Knowledge Check - Use a template to create a project"
        ],
        "Agile SAFe -": [
          "Agile SAFe -"
        ],
        "Confluence - Team Collaboration": [
          "Free Confluence what we will cover",
          "Sign up for a Free Instance of Confluence"
        ],
        "Confluence Navigation and Collaboration": [
          "Navigation",
          "Profile and Collaboration"
        ]
      },
      "requirements": [
        "Understanding of web based tools like Amazon, Gmail",
        "Ability to sign up for a free trial and create a demo account If you would like to follow along",
        "Jira experience or issue tracking systems is not required."
      ],
      "description": "Course Title\nLearning Jira and Agile Project Management 101 for Beginners – 2025\nCourse Description\nAre you new to project management, Agile, or Jira? This course is designed to take absolute beginners and get you running real projects in just a few hours.\nYou’ll learn Agile project management principles, how to run a Scrum project in Jira, organize documentation with Confluence, and even explore Basecamp as an additional (and free) project management tool.\nUnlike other courses that dive too deep into Jira administration, this beginner-friendly course focuses only on what you need to get started fast. You’ll follow along with real-world examples, hands-on practice, and step-by-step walkthroughs—all using free tools.\nBy the end of this course, you’ll be ready to confidently run projects using Agile and Jira—skills that are in high demand in 2025 and beyond.\nWhat You’ll Learn\nUnderstand Agile and the Scrum Framework in plain English.\nSet up and run a project in Jira Software: backlog, sprints, and issues.\nExplore real-world Jira examples you can follow step by step.\nLearn how to use Confluence: navigation, spaces, pages, macros, and settings.\nDiscover Basecamp project management (free version) and how it compares to Jira.\nGet productive fast with hands-on practice instead of theory overload.\n\n\nWho This Course is For\nThis course is perfect for:\nBeginners who want to understand Agile and Jira without overwhelm.\nNew project managers learning to run their first Scrum project.\nProfessionals transitioning into Agile environments.\nStudents or career changers looking to boost their resumes with Jira and Agile.\nAnyone curious about how modern teams manage projects effectively.\nWhat You’ll Get\nLifetime access to all course lessons and resources.\nStep-by-step video walkthroughs using FREE software.\nReal-world examples and exercises you can follow along with.\nPractical skills to apply immediately at work, school, or in your own projects",
      "target_audience": [
        "Beginners who want to understand Agile and Jira without overwhelm.",
        "New project managers learning to run their first Scrum project.",
        "Professionals transitioning into Agile environments.",
        "Students or career changers looking to boost their resumes with Jira and Agile.",
        "Anyone curious about how modern teams manage projects effectively."
      ]
    },
    {
      "title": "SDET: Test Automation Framework [ Java + Spring Boot ]",
      "url": "https://www.udemy.com/course/test-automation-framework/",
      "bio": "Spring Boot Test Automation: Enhanced Framework with Selenium - Unleash the Power!",
      "objectives": [
        "Master Spring Boot for Test Automation: Learn how to leverage Spring Boot's powerful features to streamline your test automation framework.",
        "Create Robust and Scalable Frameworks: Build efficient and maintainable test automation frameworks with Spring Boot.",
        "Improve Test Efficiency: Automate repetitive tasks and reduce manual effort with Spring Boot's dependency injection and other features.",
        "Enhance Test Coverage: Implement parallel test execution, data-driven testing, and localization testing to ensure comprehensive coverage.",
        "Write Clean and Maintainable Code: Use Spring Boot's conventions and best practices to write well-structured and readable test code.",
        "Stay Ahead of the Curve: Learn in-demand skills that are highly sought after in the software testing industry.",
        "Hands-On Learning: Benefit from practical exercises and coding examples.",
        "Automatic window/frame switching using Aspect oriented programming (AOP)",
        "Expert Guidance: Learn from a seasoned instructor who specializes in Spring Boot test automation.",
        "Comprehensive Coverage: Explore a wide range of Spring Boot features for test automation.",
        "Real-World Examples: Discover how Spring Boot is applied to practical test automation scenarios.",
        "Step-by-Step Explanations: Understand the concepts behind Spring Boot and its application in test automation."
      ],
      "course_content": {
        "Introduction": [
          "Let's Develop A Simple MicroService",
          "Coverage, Prerequisites & Assumptions"
        ],
        "Resources For Reference": [
          "Course Material & Source Code"
        ],
        "Spring Boot Basics": [
          "Dependency Injection - Introduction",
          "Spring Initializer - Project Setup",
          "Exploring Our Project",
          "Dependency Injection Without Spring Boot",
          "Dependency Injection With Spring Boot",
          "Dependency Injection Using Setter Methods",
          "Field Injection",
          "Don't Forget @Component",
          "Value Injection - Introduction",
          "Value Injection - Demo",
          "Value Injection With Default Values",
          "Value Injection Using Setter Methods",
          "Dependency Injection - Constructor vs Setter vs Field",
          "How To Autowire Objects From External Libraries - Part 1",
          "How To Autowire Objects From External Libraries - Part 2",
          "@Bean vs @Component",
          "Can I Autowire All?",
          "Spring Bean Lifecycle - Overview",
          "javax to jakarta",
          "Spring Bean Lifecycle - Demo",
          "Inversion Of Control",
          "Summary",
          "Quiz",
          "Assignment",
          "Assignment Hint"
        ],
        "Spring Boot - Integrating With Selenium": [
          "Integrating With Selenium - Introduction",
          "Adding Selenium Maven Dependencies",
          "Maven Dependencies",
          "ChromeDriver Bean",
          "Note: WebDriverWait Update",
          "Creating Base Class",
          "Google Page - Search Component - Part 1",
          "Google Page - Search Component - Part 2",
          "Note: Locator Change",
          "Google Page - Search Result",
          "Google Page Object",
          "Google Test Class",
          "ScreenShotUtil - Spring Component - Part -1",
          "ScreenShotUtil - Spring Component - Part -2",
          "Lazy Bean",
          "Unique Bean Issue",
          "Injecting Unique Bean - @Primary",
          "Injecting Unique Bean - ConditionalOnProperty",
          "Injecting Unique Bean - ConditionalOnMissingBean",
          "Injecting Unique Bean - ConditionalOnExpression - Part 1",
          "Injecting Unique Bean - ConditionalOnExpression - Part 2",
          "Injecting Unique Bean - @Qualifier",
          "WebDriver - Who Is Going To Manage?",
          "[Optional] - WebDriverFactory",
          "Spring Profile - Introduction",
          "Executing Tests In Dev / QA / STG / PRD Environments Using Spring Profile",
          "Running Selenium Grid",
          "Executing Tests In Local / Remote Grid Using Spring Profile - Part 1",
          "Executing Tests In Local / Remote Grid Using Spring Profile - Part 2",
          "Refactoring!",
          "Summary",
          "Assignment 1",
          "Quiz"
        ],
        "Spring Boot - Bean Scope & Parallel Testing": [
          "Bean Scope Introduction",
          "Parallel Testing Issue",
          "[Optional] - TestNG Suite",
          "[Optional] - JUnit users",
          "Understanding Bean Scope Issue With Simple Demo",
          "Bean Scope - Singleton vs Prototype",
          "Custom Annotations",
          "WebDriver Bean Scope With Prototype",
          "Creating Custom Scope For WebDriver",
          "Browser Scope - Demo",
          "Bean Scope Issue With ScreenShotUtil",
          "Spring Application Context - Overview",
          "Spring Application Context - Demo",
          "WebDriverFactory Using Application Context",
          "@Component Beans using Application Context",
          "Refactoring",
          "WebDriverWait Bean Scope",
          "Summary"
        ],
        "Spring Boot - Files & Properties": [
          "Introduction",
          "Accessing Resources From Local Disk",
          "Accessing Resources From External URL",
          "Downloading Resources",
          "Quick Note On AWS S3 Resources",
          "ResourceLoader For Dynamic Resources",
          "PropertiesLoaderUtils For Dynamic Properties",
          "Spring Boot - @PropertySource",
          "Google Flight Application - Test Requirement - Part - 1",
          "Google Flight Application - Test Requirement - Part - 2",
          "Note: Locator Change",
          "Google Flight Application - Page Object",
          "Localization - Language Properties For Flight Application",
          "Google Flight Application - Test Class",
          "Google Flight Test - Demo",
          "Google Flight Test - Localization Testing Via Command Line",
          "Spring Boot - @TestPropertySource - Part - 1",
          "Spring Boot - @TestPropertySource - Part - 2",
          "Summary"
        ],
        "Spring Boot - Aspect Oriented Programming": [
          "Cross Cutting Concern - Introduction",
          "Our Business Requirement",
          "WindowSwitchService - Implementation",
          "Main Page Object Creation",
          "Page Object Creation For Additional Windows",
          "Window Switch - Test Class Creation",
          "Window Switch Test - Chrome vs Firefox",
          "Custom @Window For Aspect Oriented Programming",
          "@Aspect - Window Switch Aspect",
          "Aspect Oriented Programming - Final Demo - Part 1 - With Firefox",
          "Aspect Oriented Programming - Final Demo - Part 2 - With Chrome",
          "Aspect Oriented Programming - Terminologies - [Optional]",
          "Aspect Oriented Programming - Assignment - [Optional]",
          "Aspect Oriented Programming - Assignment Solution - [Optional]",
          "Summary"
        ],
        "Spring Data JPA - Data Driven Testing": [
          "Spring Data Introduction",
          "Spring Data In Test Automation",
          "Spring Data - Terminologies",
          "Our Business Requirement",
          "[NOTE] - Entity / Package name changed",
          "Maven Dependency & Project Setup With H2",
          "Entity Class Creation",
          "Repository Interface",
          "Page Object Creation For Visa Registration Page",
          "Additional Property",
          "User Repository - Demo",
          "Visa Test - Demo - Part 1",
          "Visa Test - Demo - Part 2",
          "Data Driven Testing - Query By First Name Starting With",
          "Data Driven Testing - Query By DOB Range",
          "Parameterizing Data Provider",
          "Summary",
          "[Optional] - Spring Data JPA Courses"
        ],
        "Spring Boot - Logging": [
          "Logging Introduction",
          "Logging With Log Levels In Page Objects And Test Classes",
          "Log Level Demo",
          "Writing Into A Log File",
          "Summary"
        ],
        "Spring Boot - Integrating With Cucumber BDD": [
          "Introduction",
          "Behavior Driven Development - Overview - [Optional]",
          "Maven Dependency & Intellij Plugins",
          "Maven Dependencies",
          "Latest Version of Cucumber",
          "Cucumber Feature File For Google Test",
          "Steps Definition Creation For Google Test - Part 1",
          "Steps Definition Creation For Google Test - Part 2",
          "Google Search Feature - Demo",
          "Feature File Creation For Visa Registration Page",
          "Step Definition Creation For Visa Registration Test",
          "Spring Boot - Multiple Step Definitions Issue",
          "Cucumber Runner Creation",
          "Cucumber Runner For JUnit",
          "Quick Note On @TestPropertySource",
          "Note: Method Name Change",
          "Attaching Screenshots For Failed Tests",
          "Running Tests In Parallel",
          "Limiting Thread Counts For Scenarios",
          "JUnit",
          "Cucumber Tags",
          "Quitting WebDriver After Scenario",
          "Running Features Via Command Line - With Browser Option",
          "Running Features Via Command Line - With Tags",
          "Running Features Via Command Line - With Grid",
          "Running Features Via Command Line - Filtering Tags",
          "Quick Note On Data JPA With Cucumber",
          "Summary"
        ]
      },
      "requirements": [
        "Java 8 knowledge",
        "Basics of Selenium"
      ],
      "description": "Unlock the potential of Spring Boot in your Test Automation Framework and achieve more with less code. In this course, you'll harness Spring Boot's power to create a robust test automation framework for functional tests using Selenium and Cucumber.\nKey Learning Points:\nDependency Injection: Automate object creation in Page Objects and test classes effortlessly with Spring's support.\nWebDriver Manager: Seamlessly manage web driver life cycles using Spring Boot.\nPage Objects & Page Fragments: Create reusable page components and inject them into Page Objects.\nParallel Test Execution: Implement multi-threading, web driver management, and parallel test execution with clear thread-specific scope.\nTest Execution in Multiple Environments: Manage environment-specific properties like URLs and user credentials via property files.\nLocalization Testing: Validate language keywords for applications supporting multiple languages with Spring Boot.\nData Driven Testing using Spring Data JPA: Execute tests by reading data from spreadsheets with ease using Spring Data JPA.\nCucumber Feature Files: Embrace Behavior-Driven Development (BDD) by writing Cucumber feature files to drive tests.\nHandling External Resources: Access external resources such as properties and files within the framework.\nAutomatic Window/Frame Switching: Effortlessly switch between windows/frames using annotations like @Window.\nAspect-Oriented Programming (AOP): Automatically capture screenshots in your tests using AOP.\nLocal vs. Remote Grid: Execute tests locally or on remote Selenium grids by easily switching Spring profiles.\nAnd much more to supercharge your test automation capabilities!",
      "target_audience": [
        "Anybody who has interests in Test Automation",
        "Sr SDET / Lead / Principal / Architect SDET",
        "Spring Boot Developers who want to learn Test Automation",
        "Test Automation Framework design"
      ]
    },
    {
      "title": "Proficient Automation Tester by Leveraging Docker with CI&CD",
      "url": "https://www.udemy.com/course/proficient-automation-tester-by-leveraging-docker-with-cicd/",
      "bio": "Create and implement a complete E2E project using Selenium, Java, report, logs, POM, Docker, GitHub Actions, Jenkins etc",
      "objectives": [
        "Become a SDET professional by learning and implementing top and trending skills",
        "You will learn creating a Test Automation Framework using Java and Selenium from scratch",
        "You will will learn using TestNG and Maven Parallel Execution across multiple platforms",
        "You will learn using Docker and how to integrate Selenium Grid for standalone and grid setup",
        "You will learn to implement and use Docker compose with YAML files setup from scratch",
        "You will learn and implement GitHub actions for test automation framework execution and generating recording custom reports",
        "Jenkins and CI/CD pipeline setup execution"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Pre-Requisites",
          "Application Overview"
        ],
        "Automation Framework Setup and Execution": [
          "Setup Intellij for new automation project",
          "Maven POM.xml setup with dependencies and commands usage",
          "Maven project setup"
        ],
        "Automation Framework Setup": [
          "Setup of Page Objects",
          "Setup of AppConstants and Driver Class",
          "Debugging the error",
          "Execution of framework with Page Route tests"
        ],
        "TestNG and xml file setup": [
          "Creating a new TestNG xml file and executing",
          "Parameterize TestNG xml file",
          "Execution using Maven and TestNG xml",
          "Resolving WebDriver Error and Execution"
        ],
        "Setup of Parallel Reporting and Logging mechanism for Automation Frameworks": [
          "Implementing custom Extent report for parallel execution",
          "Implementing Logging for Automation Frameworks"
        ],
        "Understanding Docker and Its working": [
          "Docker Overview",
          "Download Docker and Setup Docker Compose",
          "Automation execution using Docker container chrome browser",
          "Running tests in firefox browser"
        ],
        "Docker Compose Setup and Execution": [
          "Docker compose setup",
          "What is selenium grid and how to use it?",
          "What is docker hub?",
          "Tests execution using selenium grid and docker compose"
        ],
        "GitHub actions usage and execution with custom job setup": [
          "Push your code to a GitHub repository",
          "Setup GitHub actions",
          "Tests execution using GitHub actions",
          "Running tests using GitHub actions with setup",
          "Custom Job setup using GitHub"
        ],
        "Jenkins and CI/CD": [
          "Jenkins setup",
          "Access jenkins locally and setup of plugins",
          "Jenkins overview",
          "Setup plugins and install maven for Jenkins",
          "CI/CD job execution"
        ],
        "Download Project code and resources": [
          "Click on the link and download the resources"
        ]
      },
      "requirements": [
        "Candidates needs to have basic understanding of JAVA",
        "Candidates needs to have basic understanding of selenium"
      ],
      "description": "Software testers and Automation. testers need to upgrade their skills prominently as jobs are getting more demanding. This course is designed as per the industry standard and requirements for the job market.\n\n\nThis course will help you to learn and master trending skills such as Parallel testing using Selenium Grid and implementing it using Docker and Docker compose with GitHub actions and Jenkins with E2E CI/CD pipelines.\n\n\nPrimary Skills gained by enrolling into this course:\n\n\nEach Video contains step-by-step explanations for lots of concepts which are industry standard. He has more then 8+ years of experience with Automation Testing and creating CI/CD Pipelines.\n\n\nTopics Covered in course:-\n1) Selenium WebDriver\n2) JAVA\n3) Page Object Model\n4) Parallel Execution setup with TestNG and Maven\n5) Custom Maven Setup\n6) Custom Maven Command setup and execution\n7) Custom Reporting and Logging Mechanism\n8) Docker Setup with Standalone browser and execution\n9) Docker Setup with Selenium Grid and execution\n10) GitHub setup and GitHub Actions using Automation\n11) Setup GitHub Actions for Quick Executions inside Remote Machine\n12) Jenkins Docker Setup\n13) Jenkins Job Setup and Scheduling\n14) Code Refactoring and Debugging Skills Explained\n15) And Lots more..\n\n\nPre-Requisite for Course:\n1) Basic understanding of Selenium and Java is required\n2) We will jump into Advance Concepts Quickly",
      "target_audience": [
        "Candidates who are looking to get better salary packages",
        "Candidates who are looking to gain trending skills in SDET domain",
        "Candidates who want to have industry experience of project implementation",
        "Improve your debugging skills",
        "Learn Docker, GitHub Actions, Jenkins",
        "Create CI/CD pipelines",
        "Improve your overall knowledge of creating and implementing Automation Frameworks"
      ]
    },
    {
      "title": "BDD with Selenium Webdriver and Specflow using C#",
      "url": "https://www.udemy.com/course/bdd-with-selenium-webdriver-and-speckflow-using-c/",
      "bio": "Learn Behaviour Driven Development using the two most powerful tool, Webdriver and Specflow with C# as language binding!",
      "objectives": [
        "By the end of this course you will give have great understanding Selenium Webdriver using C#",
        "How to use Selenium Webdriver to test web based application and what are the advantages of Selenium Webdriver over Selenium RC",
        "This tutorial will give you great understanding of Selenium Webdriver, and after completing this tutorial, you will be at intermediate level of expertise from where you can take yourself to higher level of expertise. Also you will have great understanding of C#"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic of C# Programming": [
          "Creating Console Application",
          "DataTypes in C#",
          "Conditional & Control Statments",
          "Class Object & Methods",
          "Static Variables and Methods",
          "Inheritance",
          "Constructor Chaining & Overloading",
          "Method Overloadin and Base Keyword",
          "Abstract Class",
          "Interface",
          "Exception Handling",
          "Property",
          "Presentation Slide"
        ],
        "Visual Studio - MSTest": [
          "VS2019 - Alert",
          "MSTest Attribute Part - 1",
          "MSTest Attribute Part - 2",
          "Presentation Slide"
        ],
        "Web Component locator and Xpath": [
          "FireBug and Firepath",
          "Xpath and their usage",
          "Presentation Slide",
          "Xpath Function,Absolute and Relative Xpaths",
          "Presentation Slide",
          "Xpath finding Links, Buttons, Input box, Radio buttons, Checkbox",
          "Css Locator",
          "Presentation Slide"
        ],
        "Relative Xpath using Axes View": [
          "Descendant Axes View",
          "Following Axes View",
          "Ancestor Axes View",
          "Preceding Axes View",
          "Presentation Slide",
          "Ranorex Selocity"
        ],
        "Selenium Webdriver Concept & Project Setup": [
          "Setting Up Bugzilla",
          "Setting up Selenium Webdriver",
          "Framework Types",
          "Presentation Slide",
          "Framework Structure",
          "Reading the Configuration from App.config",
          "Setting up the BaseClass",
          "Presentation Slide",
          "Page Navigation Close & Quit",
          "ChromeOptions,InternetExploreOptions and FirefoxProfile Class",
          "Presentation Slide"
        ],
        "Handling Web Based Component": [
          "Identifying the Web Element",
          "Handling Web Elements Part - 1",
          "Handling Web Elements Part - 2",
          "Presentation Slide",
          "Handling Dropdown List",
          "Presentation Slide",
          "Taking ScreenShot with Webdriver",
          "Headless Browser - PhantomJS",
          "PhantomJsOption & PhantomJsDriverService Class",
          "Extracting all Web element from Webpage",
          "Presentation Slide"
        ],
        "Web Driver Waits": [
          "PageloadTimeout and Implicit Wait",
          "Dynamic Waits - WebDriverWait Class",
          "Dynamic Waits - Default Wait Class",
          "Dynamic Waits - ExpectedConditions Class",
          "Presentation Slide"
        ],
        "Webdriver Advance Features": [
          "Browser Actions",
          "Handling Multiple Browser Window",
          "Handling IFrame",
          "Presentation Slide",
          "Handling JavaScript Alert",
          "Handling Javascript Confirmation & Prompt Popup",
          "Presentation Slide",
          "Handling Mouse Action",
          "Handling Auto Suggest List",
          "Handling KeyBoard Actions",
          "JavaScriptExecutor",
          "Presentation Slide"
        ],
        "Page Object Model": [
          "POM - Introduction",
          "POM - PageFactory",
          "POM - Framework Design",
          "Presentation Slide"
        ]
      },
      "requirements": [
        "The tutorials are designed for beginners with little or no automation experience. Everything is taught from scratch!",
        "Before proceeding with this tutorial, you should have a basic understanding of Visual Studio with C#, text editor and execution of programs, etc."
      ],
      "description": "Selenium Webdriver is one of the most well-known testing frameworks. It is an open source project that allows testers and developers alike to develop functional tests to drive the browser. Selenium Webdriver can work on any browser that supports JavaScript, since Selenium has been built using\nJavaScript.\nThe course is not limited to following content. In future I will keep adding the new topics to this course.\n\nBasic of C# Programming\nIn this section, we are going to discuss about basic of C# programming language\n1. Creating the Console Application\n2. Data Types in C#\n3. Conditional & Control Statements\n4. Class & Objects\n5. Inheritance\n\nMsTest\nIn this section, we will discuss about MsTest attributes such as\n\n1. TestClass and TestMethod\n2. TestInitialize and TestCleanup\n3. ClassInitialize and ClassCleanup\nSo on...\n\nAnd source code shown as part of video lecture will be provided for download",
      "target_audience": [
        "This tutorial is designed for Software Professionals, who are willing to learn Selenium Webdriver in simple and easy steps",
        "All the manual tester who are looking for the automation knowledge",
        "Developer/Automation Testers who are migrating from Selenium RC to Selenium Webdriver"
      ]
    },
    {
      "title": "Learn API Automation Testing with Python & BDD Framework",
      "url": "https://www.udemy.com/course/python-sdet-rest-api-automation/",
      "bio": "Build Python automation Utilities to test Rest API’s with SQL DB Integration, Batch Jobs Automation,Web Scraping etc",
      "objectives": [
        "Get Complete knowledge on Back end automation with Python which is must to become Python SDET",
        "Understanding the API Automation from Scratch with Python Requests Library",
        "Knowledge on implementing Database readers to communicate with DB from Python code",
        "Establishing Connection with Linux Servers through Python Paramiko Library",
        "Implement BDD Automation Framework for Python API Testcases from Scratch",
        "Execute Batch Jobs in AWS Linux Servers and download the files to local using Python",
        "Integrate the Database resutls to API and build dynamic Json Payloads",
        "Knowledge on Web Scrapping to extract content from Web pages for Data science work"
      ],
      "course_content": {
        "What will you learn from this course? - MUST WATCH": [
          "FAQ's about the course",
          "Installing Python library, Pip Client and Pycharm Editor",
          "Important note for MAC Users",
          "Important Note before watching next section"
        ],
        "Learn Python Programming Basics from Scratch": [
          "Python hello world Program with Basics",
          "Datatypes in python and how to get the Type at run time",
          "List Datatype and its operations to manipulate",
          "Tuple and Dictionary Data types in Python with examples",
          "How to Create Dictionaries at run time and add data into it",
          "If else condition in python with working examples",
          "How loops work in Python and importance of code idendation",
          "Programming examples using for loop - 1",
          "Programming examples using While loop - 2",
          "What are functions? How to use them in Python",
          "OOPS Principles : Classes and objects in Python",
          "What is Constructor and its role in Object oriented programming",
          "Inheritance concepts with examples in Python",
          "Strings and its functions in python",
          "How to read text file content using Python",
          "Importance of readLine and readLines Methods in python",
          "Writing Data into File using Python",
          "Code Download",
          "Quiz - Test your Python Basic Knowledge!"
        ],
        "Read and Write to Json Files and parsing using Python Methods": [
          "Where to download the code files?",
          "How to Parse Json Strings in Python? - Example",
          "Parse content in Json file into Dictionary - Example",
          "Parsing complex Json with nested Structure and extract values",
          "Compare two Json Schemas using Python Dictionaries with example",
          "Section 3 Quiz - Test your knowledge!"
        ],
        "API Automation Testing with Python Requests Library": [
          "Install Python requests Library for API Automation",
          "Understanding Get http request calls and get response using Json method",
          "Validating response status codes and headers using response object",
          "Understand automating Post http request with Payload and headers",
          "End to end automation flow of API calls using Python"
        ],
        "Setting up Global Properties and OAuth Mechanism for API Testing": [
          "Setting global configurations using Python Config object",
          "Optimizing resources and payload from externally as reusable data",
          "Authenticating API's using Python Automation auth method- Example",
          "Section 3- 5 Code Download",
          "Section 4 and 5 Quiz - Test Your API Automation Knowledge!"
        ],
        "API Testing Request Library Miscellaneous Concepts": [
          "Importance of Session Managing in API Testing",
          "Send and Manage cookies for API request calls",
          "Time out and Redirection attributes in making request calls",
          "Sending Attachments through Post request call using Files Dictionary object",
          "Code Snippet download"
        ],
        "Build SQL Utility to interact with Database Tables from Python Code": [
          "Setting up MYSQL Instance to drive the data from Python Code",
          "Setup Database with the Example Table Data and start Connection",
          "SQL Queries download",
          "Executing Queries on to Database from Python Code",
          "Iterate over database table results set from Python and parse the results",
          "Create Connection utility and pass the SQL connection externally into test",
          "Section 7 Quiz"
        ],
        "Integrate Database utilities to API Test for End to end Automation": [
          "Integrate Database results into API Test Data to build functional flow",
          "Code Download"
        ],
        "BDD Framework Development for API Automation from Scratch": [
          "What are the BDD tools we use to Automate in Python Language",
          "Install Behave and download Python Professional edition",
          "Create Step Definition file with auto generated syntaxes and annotations",
          "Implement API Automation actual logic into step Definitions",
          "Implement Hooks for the scenarios by defining environment.py file",
          "Implement Parameterization to the Test Scenarios using Example outline Keywords",
          "Use Tagging mechanism to run selected tests in framework",
          "Best practices to write reusable step definitions code for API test Scenarios",
          "Integrate Tagging and hooks to build generalize BDD code for Python API Tests",
          "Generate Allure reports for Python API BDD Framework",
          "Complete Code Download"
        ],
        "Read and Write to CSV files with Parsing using Python methods": [
          "Parsing and reading the CSV files using Python csv package",
          "Building a logic to get the data from CSV based on conditional query",
          "Parsing and writing back to CSV files using Python csv package",
          "Where to download code files?",
          "Section 9 Quiz"
        ]
      },
      "requirements": [
        "None- Everything including Python basics are taught from Scratch in the course"
      ],
      "description": "***You will be mastered in Python Back End Automation even if you have never programmed before in Python***\nThis Python SDET course starts from scratch teaching Python Basics and then drive you through many important utilities of Python like API Testing, BDD API Automation Framework, Database Validations,  CSV Readers, Json Parsers, Batch Jobs execution from Linux Servers, SSH connection to upload and download files, Web scrapping for data science work etc\nAs Python SDET, One should aware of many modules of python to perform end to end backend/Server side automation and this course comes us one single package which explains all the modules from scratch.\nBy end of this course, You can confidently implement any Python Automation Jobs or clear any interview related to Python testing.\nBelow is the high level content this course covers :\nJson Parsers with Python modules\nRead and Write to Json files with Python\nAPI Automation using requests Library\nUnderstand Crud operations GET,POST, DELETE,PUT API operations automation\nParsing API responses with Python utilities\nDatabase interactions  with Python SQL Connector\nBDD Automation Framework development from Scratch\nRead the multiple result sets of database tables from Python\nIntegrating Database readers with API calls to build payload\nCSV Parser with Python modules\nRead and Write to CSV files with Python\nInteracting with AWS Linux Servers\nEstablishing SSH connection to Linux using Python Paramiko\nSending the commands and executing the jobs in Server through Python\nUploading and downloading the files of batch Jobs from Servers with paramiko\nIMportance of Web scrapping in Data science projects\nTechniques to apply web scrapping to extract content from web pages\n\n\nWish you all the Best with your new Python SDET Journey :)",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Freshers/Graduates who want to kick start their Career in IT World"
      ]
    },
    {
      "title": "Load Testing Using HP LoadRunner 12",
      "url": "https://www.udemy.com/course/loadrunner12/",
      "bio": "In this course we will use HP LoadRunner 12 to load test a web application.",
      "objectives": [
        "By end of the course you will learn to develop a workable strategy for load testing of an enterprise system",
        "Unit 1: Getting started with HP Loadrunner 12",
        "Unit 2: Working with VuGen tool",
        "Unit 3: Revising C programming language",
        "Unit 4: Customizing scripts with parameters",
        "Unit 5: Using corelation and check points",
        "Unit 6: Developing benchmark scripts",
        "Unit 7: Designing multi user scenarios"
      ],
      "course_content": {
        "Introduction": [
          "Agenda For this Chapter",
          "Overview of HP Loadrunner Tool Set",
          "HP Loadrunner 12 Installation",
          "Introducing Application Under Test",
          "Installing Base Tech Stack (Apache,MySQL,PHP)",
          "Setting Up Moodle With Seeded Database",
          "Download Database Dumps and Customized Moodle Software ( In Article Format)",
          "Download Database Dumps and Customized Moodle Software ( In PDF Format)"
        ],
        "Working With Virtual User Generator": [
          "Getting Started With Virtual User Generator",
          "Our First Recording",
          "HTMl VS URL Mode Recording",
          "Introducing correlation",
          "Replaying Scripts",
          "Measuring time using transaction",
          "Modularization of script",
          "Modularization of script followup",
          "Loadrunner Scripts Used in Chapter 2"
        ],
        "Primer on C Programming Language and LR APIs": [
          "Introduction To Chapter",
          "Data Types in C",
          "Control Structure in C",
          "Loop Structure in C",
          "Array in C",
          "Pointers in C",
          "Functions in C",
          "Header Files in c",
          "String Manipulation in C",
          "File Manipulation",
          "Loadrunner Scripts in Chapter 3"
        ],
        "Developing Generic Scripts Using Parameters": [
          "Chapter Introduction",
          "Why do we need to parameterize Script",
          "How Load runner Parameterization Helps",
          "Various Parameterization scenarios",
          "Exploring Parameterization Properties",
          "Parameter Types Options",
          "How To Read Parameter Values From an Excel File",
          "Manipulating Load runner Parameters part 1",
          "Manipulating Load runner Parameters part 2"
        ],
        "Extending Scripts Using Co-relation and Check Points": [
          "Why do we need to check contents of a response",
          "Using web reg find to register search string",
          "Text Check point Example",
          "Image Check Point Example",
          "Rendezvous in Load Runner",
          "Co relation",
          "How To Handle Dynamic drop down lists",
          "Capturing dynamic variables in a parameter part 1",
          "Capturing dynamic variables in a parameter part 2",
          "Capturing dynamic variables in a parameter part 3",
          "Creating Co Relation Libraries",
          "Debugging VuGen Scripts",
          "Loadrunner Scripts in Chapter 4 and 5"
        ],
        "Developing Benchmark Scripts": [
          "What is workload for our project",
          "Default Recording Of Browse Lesson",
          "Customizing Browse Lesson Script Part 1",
          "Customizing Browse Lesson Script Part 2",
          "Default recording of Quiz Submission",
          "Customizing Quiz Submission Script",
          "Creating Assignment Script",
          "Creating Discussion Script",
          "Creating glossary",
          "Creating master scripts part 1",
          "Creating master scripts part 2",
          "Benchmark Scripts in Chapter 6"
        ],
        "Designing Real Life Load Scenarios Using Controller": [
          "Why do we need controller",
          "Getting used to LR Controller",
          "Designing A basic scenario",
          "Designing A real world scenario",
          "Designing a group scenario",
          "Designing Percentage Mode Scenario",
          "Designing Goal Oriented Scenario",
          "Demonstration on Goal Oriented Scenario",
          "Creating Service Level Agreement",
          "Debugging scenario",
          "Adding Load Generators",
          "Introducing Amazon Web services",
          "What are prereqs for AWS based LG",
          "Demo Of LG Setu on AWS",
          "Setting of resource monitor",
          "Scripts , results and analysis of Chapter 7"
        ],
        "Making Sense of Test Results Using Analyzer": [
          "How Analysis Fits into Load testing scheme",
          "Average response time",
          "Percentile response time",
          "Getting Used To Load runner Analysis",
          "Generating Graphs",
          "How To find bottleneck",
          "Defining Service Level Agreement",
          "Correlation between different metrics",
          "Generating report"
        ],
        "Conclusion": [
          "Final Thoughts and Next Steps"
        ],
        "Frequently Asked Questions": [
          "How to create a Scenario With Distributed Load Generators",
          "How to Trouble Shoot XAMPP in windows",
          "Debugging Moodle Installation"
        ]
      },
      "requirements": [
        "Working Knowledge of Web Development",
        "Familiarity With a Programming Language"
      ],
      "description": "This course is designed to teach people in a workshop format how to plan and load test a enterprise web application. The objectives of this course is to make you understand the complete load testing life cycle: Creating scripts to simulate real life workflows, Developing multiuser workload scenario, Running tests on production quality hardware, Analyzing results . Working through a series of self paced video tutorials, you will learn to develop a workable strategy for load testing of an enterprise learning management system.",
      "target_audience": [
        "Quality Assurance Professionals",
        "Dev Ops Professional",
        "Developers",
        "System Integrator"
      ]
    },
    {
      "title": "WebDriverIO + Node.js -JavaScript UI Automation from Scratch",
      "url": "https://www.udemy.com/course/webdriverio-tutorial-nodejs-javascript/",
      "bio": "Top class tutorial on WebDriverIO ( Selenium JavaScript) Automation Testing from basics to Framework including JS Basics",
      "objectives": [
        "Understand Java Script Fundamentals from Scratch",
        "Learn WebDriverIO Testing tool to automate any Web Application with real time examples",
        "Develop Industry Standard WebDriverIO JavaScript Testing Framework from Scratch",
        "Indepth knowledge on JS Test frameworks like Mocha, Chai including Node js Basics",
        "You will improve your JavaScript coding skills in writing best optimized code for Automating testcases",
        "Includes a Practice Website to play around with all available WebDriverIO functions to automate",
        "\"Last but not least\" you can clear any Interview and can Lead Entire Automation Project from Design Stage"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to WebDriverIO and Course FAQ's",
          "Getting started with Node.js and npm installation",
          "Understand Package.json with VS Code installation"
        ],
        "JavaScript Fundamentals from Scratch for Automation - Part 1": [
          "Important Note",
          "Download Section 2, 3 JavaScript Fundamentals code",
          "Getting started with Hello World Program in VS Code",
          "Understanding Variables and Datatypes in JavaScript",
          "What are Loops and Conditional Statements in JavaScript",
          "Implementing For and While Loop in JavaScript",
          "Arrays and its methods in JavaScript with Detailed examples - Part 1",
          "Arrays and its methods in JavaScript with Detailed examples - Part 2",
          "JavaScript Array Stream Functions -( Filter , reduce, Map) - Part 1",
          "JavaScript Array Stream Functions -( Filter , reduce, Map) - Part 2",
          "Sorting JavaScript Arrays with optimized logic"
        ],
        "JavaScript Fundamentals from Scratch for Automation - Part 2": [
          "What are Functions in JavaScript? and its advantages",
          "Understanding var,let,const Keywords in JavaScript",
          "JavaScript String and its manipulation methods with examples - Part 1",
          "JavaScript String and its manipulation methods with examples - Part 2",
          "What are JavaScript objects ? And its importance in Programming",
          "Adding methods and functions to JavaScript object and access them",
          "Understand JavaScript OOPS Classes and its methods",
          "How to Import and Export classes to make it available in other class",
          "What is Inheritance and how to achieve this in JavaScript"
        ],
        "Setting up WebDriverIO Automation with all Softwares Installations": [
          "Generate WebDriverIo Spec file template and adjust VS Code settings",
          "Understand JavaScript Async mode /Promises and how to use async awaits"
        ],
        "Locators to Identify objects with Assertions in WebDriverIO": [
          "Introduction to WebDriverIO inbuild expect Statements for Assertion",
          "Different Locator techniques available in WebDriverIO to automate - 1",
          "Different Wait Mechanisms available in WebDriverIO Framework",
          "Understanding Assertions of validating Texts on browser with WebDriverIO",
          "code download"
        ],
        "Automate Checkboxes, Dropdowns, Pop ups with WebDriverIO": [
          "Where can i find code files?",
          "Build Happy path to sign into page with WebDriverIO",
          "Running Tests in Firefox , Microsoft Edge browsers using Selenium Standalone",
          "Radiobuttons handling with JavaScript Array logic in WebDriverIO",
          "Handling Web Pop ups with WebDriverIO Framework",
          "How to handle Static dropdowns using WebDriverIO",
          "Chai Assertion on selected radiobuttons, dropdown options with WebDriverIO"
        ],
        "Functional Real time validations with WebDriverIO Automation": [
          "Important Note before proceeding to next lectures",
          "Understand how to Automate Dropdowns with WebDriverIO",
          "Handling Checkboxes with WebDriverIO and Save Screenshots of the page",
          "Scrolling to invisble object with view mode using WebDriverIO",
          "Handling JavaScript related Alerts with WebDriverIO",
          "How to Apply Sort the Web tables using WebDriverIO",
          "Debugging WebDriverIO Code with Visual Studio editor",
          "Automate Search Table functionality with JavaScript Stream methods"
        ],
        "Handling Child Windows and Frames with WebDriverIO": [
          "How to handle multiple windows with WebDriver IO",
          "Understanding difference between SwitchWindow and NewWindow methods"
        ],
        "Automation of End to end Flow in ECommerce App using WebDriverIO": [
          "Important Note",
          "End to End Functional Automation Part -1",
          "End to End Functional Automation Part -2",
          "End to End Functional Automation Part -3",
          "End to End Functional Automation with Filter,Map, Reduce methods Part - 4",
          "End to End Functional Automation Part -5"
        ],
        "WebDriverIO + JS Framework Development from Scratch - Part 1": [
          "Introduction to WebDriverIo Framework - AGENDA",
          "Implementing Page object Design Patterns for Tests - Part 1",
          "Implementing Page object Design Patterns for Tests - Part 2",
          "Updating End to End Test with Page object Pattern Mechanism - Part 1",
          "Updating End to End Test with Page object Pattern Mechanism - Part 2",
          "Parameterize the Test Cases using Mocha Framework and Json Files - Part 1",
          "Parameterize the Test Cases using Mocha Framework and Json Files - Part 2"
        ]
      },
      "requirements": [
        "None. Everything including JavaScript Basics are taught from Scratch"
      ],
      "description": "What is WebDriverIO?\nWebdriverIO allows you to automate any application written with modern web frameworks such as React, Angular, Polymeror Vue.js as well as native mobile applications for Android and iOS.\nWebDriverIO built on Node.js engine and Uses JavaScript to code the Automation\nWebdriverIO uses Selenium under hood. All the great things about Selenium are available in WebDriverIO with additional advantage of exclusive assertions for Test Validations.\nHow is this Course Designed?\n· This course starts from Scratch by teaching all the Java Script Fundamentals needed for Test Automation\n· We will then drive into WebDriverIO Core topics and cover All the concepts to handle UI Automation with real time examples and quizzes\n· We shall also learn how to design Industry Standard WebDriver+Node.js Framework from Scratch with all best practices used.\nAdditionally this course also train students on  Node.js Basics , Mocha, Chai Testing Frameworks\n\n\nSo what makes this course Unique in the Market?\nWe assume that students have no experience in automation / coding and start every topic from scratch and basics.\nExamples are taken from REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated.\n\n\nBy end of this course, one can automate any Web Application using WebDriverIO JavaScript and can gain the ability to design JavaScript Test frameworks from scratch for the developed automation tests.",
      "target_audience": [
        "Software Testers",
        "QA Engineers",
        "Developers"
      ]
    },
    {
      "title": "Android UI tests with Espresso. Essentials.",
      "url": "https://www.udemy.com/course/android-espresso-essentials/",
      "bio": "Learn how to write Android UI tests using Espresso from scratch.",
      "objectives": [
        "Inspecting app UI and locating UI elements.",
        "Understanding ViewMatchers that are used to locate UI elements on the screen.",
        "How to perform an action or assertion using Espresso.",
        "Performing actions in ListView and RecyclerView.",
        "Recording tests with Espresso Test Recorder.",
        "Creating Espresso Domain Specific Language (DSL).",
        "Testing elements inside the WebView.",
        "Using test size annotations: @SmallTest, @MediumTest, @LargeTest.",
        "Running single and multiple tests."
      ],
      "course_content": {
        "Locating UI elements": [
          "Introduction",
          "Parsing application UI with Layout Inspector",
          "Layout Inspector assignment"
        ],
        "View Matchers": [
          "UI Properties View Matchers",
          "Assignment: UI Properties ViewMatchers",
          "User Properties View Matchers",
          "Assignment: User Properties ViewMatchers",
          "Input View Matchers",
          "Assignment: Input View Matchers",
          "Class ViewMatchers",
          "Assignment: Class ViewMatchers",
          "Hierarchy View Matchers",
          "Assignment: Hierarchy View Matchers",
          "Root View Matchers",
          "Assignment: Root View Matchers"
        ],
        "Hamcrest Matchers": [
          "Hamcrest Matchers",
          "Assignment: Hamcrest matchers"
        ],
        "View Actions": [
          "Espresso ViewActions",
          "Assignment - Espresso ViewActions"
        ],
        "View Assertions": [
          "Espresso ViewAssertions",
          "Assignment - ViewAssertions"
        ],
        "Lesson 6 - Prepare test device for UI tests": [
          "Set up android device for UI tests",
          "Assignment - Prepare test device for UI automation"
        ],
        "Data Interactions": [
          "Espresso DataInteractions",
          "Assignment - Data Interactions"
        ],
        "Performing actions on RecyclerView using RecyclerViewActions": [
          "RecyclerView Actions",
          "Assignment - RecyclerView actions"
        ],
        "Recording Espresso tests": [
          "Recording Espresso tests using Espresso Test Recorder",
          "Assignment - Espresso Test Recorder"
        ],
        "Creating Espresso Domain Specific Language (DSL)": [
          "Kotlin Espresso DSL"
        ]
      },
      "requirements": [
        "Basic to no Android test automation experience. Basic understanding of how Android application works. Ability to set up a project in Android Studio with the given source code."
      ],
      "description": "This course is an introduction for those who would like to learn how to write Android UI tests using Espresso for Android test automation framework from scratch.\nYou will learn Espresso for Android API, how it interacts with the application under test, how to parse application layout (i.e. View Hierarchy), how to locate views, and how to perform actions and assertions on multiple view types.\nIn addition to that, we will touch Espresso Test Recorder topic, you will understand how to set up a test device for test automation, how to run tests from the command line and from Android Studio IDE, and much more valuable content which would be not so easy to find online.\nAfter this course, you will understand what steps you need to take to start writing automated UI tests even if you don’t have Android development or test automation experience.\nWhy you should enroll in my course:\nI've been working with Espresso for Android since its initial release in October 2013 and have significant experience using it in Android UI automation.\nWho this course is for:\nEntry level Android Test Automation Engineers.\nQA engineers.\nAndroid developers who would like to learn about UI automation.\nRequirements:\nInstall Android Studio IDE.\nBasic understanding of Android test automation.",
      "target_audience": [
        "QA Engineers",
        "Test Automation Engineers",
        "Android Developers",
        "Test Engineers"
      ]
    },
    {
      "title": "New to AngularJS Automation.?Try Protractor-Best for Newbies",
      "url": "https://www.udemy.com/course/jquery-for-testers/",
      "bio": "Basic to advance Protractor with Javascript, Jasmine, Protractor, Reporting, End to End development and execution",
      "objectives": [
        "** Will be able to implement knowledge in realtime angular JS automation ***",
        "** Will have detailed understanding of JavaScript, how to write and execute ***",
        "** Ready to face Protractor interview questions ***",
        "** Ready to automate angular JS application from scratch ***"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction to Protractor",
          "Learning Path of Protractor"
        ],
        "Basic to advance javascript": [
          "JavaScript Introduction",
          "Why as a Tester need to learn JavaScript",
          "Setup Node.js Environment",
          "Write First Code in JavaScript",
          "Variables in JavaScript"
        ],
        "Jump into JavaScript Programming": [
          "Basic condition handing",
          "Condition handling - Multiple Conditions",
          "Condition handling - Nested",
          "Condition handling - Logical OR/ AND",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******"
        ],
        "Looping": [
          "For Loop",
          "While Loop",
          "Break",
          "Continue"
        ],
        "Functions": [
          "Functions - With no argument and no return value",
          "Functions - With argument and no return value",
          "Functions - With argument and return value",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******"
        ],
        "String Handling": [
          "String Handling - Part1",
          "String Handling - Part2",
          "String Handling - Part3",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******"
        ],
        "Working with Array": [
          "Create Array",
          "Looping to an array",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******"
        ],
        "Introduction of Jasmine": [
          "Introduction of Jasmine",
          "Setup Jasmine"
        ],
        "Jasmine Functionality": [
          "Create test suite : describe block",
          "Create test case : specs : it block",
          "Compare Values - Expect function",
          "Compare Values - Contains | Less Than | Greater Than",
          "***** Practice Exercise ******",
          "Compare Values - Null | toEqual"
        ],
        "More Jasmine Options(Functions)": [
          "beforeEach and afterEach functions",
          "This Keyword",
          "Nested Test Suites",
          "Disable Test Suite",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******",
          "***** Practice Exercise ******"
        ]
      },
      "requirements": [
        "Basic understanding of Software Manual Testing and Need of Autmation",
        "Basic understanding of Windows operating system"
      ],
      "description": "Protractor is an end-to-end test framework for Angular and AngularJS applications. Protractor runs tests against your application running in a real browser, interacting with it as a user would.\nProtractor is a Node.js program. To run, you will need to have Node.js installed. You will download Protractor package using npm, which comes with Node.js.\n\nCourse Coverage\n1.  End to End Environment Setup\n2.  Detailed understanding of JavaScript\n3.  Basic to Advance Element Locators\n4.  Real time scenario on live application\n5.  Wide course Coverage\n6.  Best practices to be follow\n7.  DataDriven Framework with JSON\n8.  Command line execution\n9.  Code Management\n10. HTML Reporting options",
      "target_audience": [
        "Testers working in Software Testing and looking for opportunity in Angular JS automation",
        "Automation tester want to test Angular JS application using Protractor"
      ]
    },
    {
      "title": "ISTQB Foundation Level Exam Preparation for Software Testing",
      "url": "https://www.udemy.com/course/istqb-foundation-level-exam-preparation/",
      "bio": "Your Complete Guide to ISTQB® Foundation Level Certification Success",
      "objectives": [
        "Solid foundations of testing",
        "Testing throughout the software development lifecycle",
        "Static testing",
        "Test analysis and design",
        "Managing test activities",
        "Test tools",
        "Principles of software quality assurance",
        "ISTQB® exam sample"
      ],
      "course_content": {},
      "requirements": [
        "You don't need to have any knowledge of software testing and ISTQB®."
      ],
      "description": "ISTQB Foundation Level Exam Preparation for Software Testing\nGet ready to pass the ISTQB® Foundation Level certification with confidence. This course offers a focused, practical, and structured approach to mastering the essential knowledge areas defined in the official syllabus.\n\n\nWhat You Will Learn\n\n\nFundamentals of Software Testing\nUnderstand the core principles, objectives, and terminology of testing in professional environments.\nTesting Throughout the Software Development Lifecycle\nLearn how testing fits into Agile, waterfall, and other development models.\nStatic Testing Techniques\nDiscover how to review documents and code to find defects early, without executing the software.\nTest Design Techniques\nApply various black-box, white-box, and experience-based techniques to design meaningful test cases.\nManaging Test Activities\nExplore planning, estimation, prioritization, and monitoring of testing efforts.\nTest Tools Overview\nUnderstand the role of tools in test management, automation, defect tracking, and more.\nSample ISTQB® Exam\nAssess your exam readiness with a realistic practice test that mirrors the format of the actual certification exam.\n\n\nWhy This Course?\n\n\nUp-to-Date and Aligned with the Latest Syllabus\nFully aligned with the ISTQB® Foundation Level v4.0.1 (latest available syllabus).\nPractical and Exam-Oriented\nEvery module is designed to prepare you for the types of questions you'll face on the actual exam.\nCreated by Industry Professionals\nDesigned by certified professionals with hands-on experience in software testing and exam preparation.\nFlexible Learning\nStudy at your own pace, access the course 24/7, and revisit materials whenever you need.\n\n\nImportant Note\nThis course is an independent preparation resource. It is not officially affiliated with ISTQB®. It is intended to support your learning and exam preparation by covering the key knowledge areas in a clear and accessible way.\n\n\nWho Is This Course For?\n\n\nAnyone preparing for the ISTQB® Foundation Level certification.\nNewcomers to software testing who want structured learning before taking the exam.\nExperienced testers who want to refresh their knowledge and formalize their skills.",
      "target_audience": [
        "Individuals preparing for the ISTQB® Foundation Level exam",
        "Software testers seeking to gain solid fundamentals in testing",
        "Quality assurance professionals aiming for ISTQB® certification",
        "Programmers interested in expanding their knowledge of software testing"
      ]
    },
    {
      "title": "Practical Java Unit Testing with JUnit 5 and JUnit 6",
      "url": "https://www.udemy.com/course/junit5-for-beginners/",
      "bio": "Learn practical Java Unit Testing with JUnit 5/6 in 1 hour. Includes IntelliJ IDEA license, exercises, and a cheatsheet.",
      "objectives": [
        "Write awesome unit tests in JUnit 5",
        "Create practical, real-world test scenarios",
        "Follow unit testing best practices",
        "Run unit tests in Eclipse (or IntelliJ IDEA)",
        "Learn basic Test Driven Development (TDD)"
      ],
      "course_content": {
        "First things first": [
          "Introduction",
          "Unit testing theory",
          "Getting ready for the course",
          "Choose Eclipse or IntelliJ IDEA (free license included)"
        ],
        "JUnit 5/6 – Basics": [
          "JUnit 6 is here!",
          "First unit test",
          "First unit test in IntelliJ IDEA",
          "Best practices",
          "Test exceptions",
          "Test with multiple assertions",
          "Test null values",
          "Test array equality",
          "@BeforeEach and @AfterEach",
          "@BeforeAll and @AfterAll"
        ],
        "JUnit 5/6 – More Advanced Concepts": [
          "Parameterized Tests – ValueSource",
          "Parameterized Tests – CsvSource",
          "Parameterized Tests – CsvFileSource",
          "Repeated tests",
          "Test performance",
          "Assumptions",
          "Correct package for assumptions",
          "Organise your code with @Nested",
          "Other annotations",
          "Summary",
          "JUnit 5 Cheat Sheet and Source Code",
          "Where to go next?",
          "Bonus Lecture",
          "LinkedIn: Show your new skills!"
        ],
        "Additional videos": [
          "JUnit 5/6 vs. JUnit 4",
          "Test-Driven Development (TDD)"
        ],
        "Exercises": [
          "JUnit 5/6 Quiz",
          "Write unit tests for RealEstateApp",
          "Write unit tests for RealEstateApp - solution"
        ]
      },
      "requirements": [
        "You are eager to learn unit testing! :)",
        "You have some experience with Java",
        "You have the free Eclipse IDE (or IntelliJ IDEA)"
      ],
      "description": "Note: All students of this course receive a 6-month license for IntelliJ IDEA Ultimate — the industry-leading Java IDE trusted by professionals worldwide.\n\n\nHello! My name's Adrian and I'm a professional Java Developer. You've just found the highest rated course about JUnit on Udemy! Here are some examples chosen from the hundreds of reviews :\n• \"superb and very compact, the course got me started in just two hours\"\n• \"excellent, well-explained, with real-word examples\"\n• \"perfect for beginners! I feel like: oh, it's so easy!\"\nAccording to statistics, nearly 80% of all Java developers write unit tests with JUnit, and my developing practice proves it. Unit testing is so important because it increases the quality of your code. It is a basic skill required by most employees, so for any Java Developer professional career, you have to master JUnit. You'll only learn the practical aspects of unit testing with JUnit 5 – the latest version of the most popular Java unit testing framework.\nI’ll introduce only the essential theory behind unit testing, and then dive straight into the code to get you started as quickly as possible. I’ll use an example of a simple, yet practical Java project to show you a variety of unit test types. You'll also learn the best practices and coding standards for unit tests based on my developing experience. You can get started in just a few hours. This course also comes with additional exercises and a one-page cheat sheet for a quick JUnit 5/6 reference.\n\n\nCOURSE ADVANTAGES\n• concise – my short video lectures focused on the most important info help you save time and learn maximally effectively\n• based on practice – instead of useless academic theory, you learn the best developing practices drawn from my work experience\n• reasonably priced – compared to stationary developer bootcamps, the course is much cheaper, so you save not only time but also money\n• available anywhere, anytime – the online form lets you run the course in the most convenient place (at home, work or in a café) and time (while commuting by metro or relaxing at home after work), so you can adjust it to your agenda\n• accessible on desktop, mobile and TV – you can display my lectures on the device of your choice, so you don’t have to stick to your PC\n• certificate of completion – after completing the course, you will receive a printable certificate that will make your resume more attractive\n\n\nIntro video music courtesy of Bensound",
      "target_audience": [
        "You know basic Java and want to learn unit testing from zero",
        "You want to prepare for your first Java job",
        "You want to increase the quality of your code",
        "You want to refresh your knowledge if you already know JUnit 4"
      ]
    },
    {
      "title": "SDET Java: Automation Testing from Scratch - Complete Guide",
      "url": "https://www.udemy.com/course/sdet-learnit/",
      "bio": "Practical guide to become Expert QA Automation Engineer (AQA) and SDET/Test Architect",
      "objectives": [
        "Automation Testing",
        "Learn the Java basics, including syntax and primitive data types",
        "Selenium Webdriver from Basics to Advanced Level",
        "Object-oriented programming",
        "Advanced software engineering techniques",
        "Learn best practices from true programmers",
        "Learn how to write scalable, readable and maintainable clean code",
        "You will learn source code of the tutor. All homework is completed with the Trainer",
        "Learn how to use integrated development environments to create Java programs (Eclipse and Idea)",
        "Debugging tools",
        "Eclipse IDE",
        "Intellij Idea",
        "SOLID principles",
        "Git",
        "Java Collections Framework",
        "Implementations of the List interface",
        "Map Interface and Implementations",
        "Set Interface and Implementations",
        "Best practices of using collections in Java",
        "Performance comparision of different collections",
        "Functional programming in Java",
        "Lambda functions",
        "Method references",
        "Clean Architecture Design",
        "GoF Patterns (Creational, Structural and Behavioral)",
        "Test-driven development",
        "BDD and ATTD",
        "Integration Testing",
        "JUnit 5",
        "Mockito",
        "Powermock",
        "Reflection API",
        "Optional class",
        "How to work with date and time in Java",
        "Modules in Java",
        "Migration to a modular application",
        "I18N & L10N (Internationalization and Localization with Java)",
        "Selenium basics",
        "Selenium in Java",
        "Selenium Waits",
        "Page Object concept",
        "Web Component concept",
        "Data Transfer Object concept",
        "Gradle basics"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Unlimited access to 'Learn IT' application for students",
          "Tips to Improve Your Course Taking Experience",
          "Additional Free Learning Materials to Use During the Course",
          "Why Java and why this course? What is JDK, JRE and JVM?",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Java Basics": [
          "About Latest Java Version",
          "JDK Installation",
          "First application: Hello World App",
          "Homework Solution: .bat file creation",
          "Integrated Development Environment, Eclipse Overview",
          "Comments in Java source code",
          "Quiz: Java Basics - Check yourself"
        ],
        "Primitive Data Types, Variables and Arrays": [
          "Primitive types and variablesa",
          "Number Systems",
          "Arrays",
          "Quiz: Primitive data types, variables and arrays - Check yourself"
        ],
        "Eclipse: Tips and Tricks": [
          "Packages: creation and package presentation in eclipse",
          "Plugins: how to install free plugins, eclipse marketplace, workspace styles",
          "Code Refactoring in Eclipse"
        ],
        "Operators and Operations with primitive types": [
          "Operators in Java",
          "Operations with integers and floating-point numbers, BigDecimal type",
          "Math class, NaN, Infinity",
          "Type of the expression in Java",
          "Compare primitive and reference types & Java Memory Model",
          "Read user input from console",
          "Simple console integer calculator",
          "Calculate Area of Triangle",
          "Calculate Circle Circumference",
          "Homework review: Operators and Operations",
          "Quiz: Operators and Operations with primitive types - Check yourself"
        ],
        "Strings in Java": [
          "String: object creation and main methods overview",
          "String comparison: How to compare Strings and what is String Pool",
          "Escape Sequences in Java",
          "String Formatting",
          "Regular expressions in Java",
          "Format floating-point number",
          "Split Words",
          "Homework review: String",
          "Quiz: Strings in Java - Check yourself"
        ],
        "Control Statements": [
          "'if - else' construction",
          "Admin and Guest mode for application",
          "Simple Number Calculator",
          "Homework review: 'if' statement",
          "'switch' construction",
          "User Activity Selector",
          "Homework review: 'switch' statement",
          "Quiz: Control Statements - Check yourself"
        ],
        "Miscellaneous": [
          "Random numbers generation"
        ],
        "Iteration Statements (Loops) in Java": [
          "'while' loop",
          "'do-while' loop",
          "'for' with condition loop",
          "'for each' loop",
          "Nested loops",
          "Jump Statements - Break and Continue",
          "Labels in Java",
          "Print digits from new line",
          "Pyramid in console",
          "Print matrix to console",
          "Homework review: Iteration Statements (Loops)",
          "Quiz: Iteration Statements (Loops) in Java - Check yourself"
        ],
        "Methods in Java": [
          "Methods in Java: Overview",
          "Parameter Passing Mechanism in Java",
          "Recursive methods",
          "Variable Length Arguments",
          "Find max int in array",
          "Draw empty rectangle",
          "Calculate Amount of Words",
          "Filter String array",
          "Rotate Matrix",
          "Extend Array",
          "Greatest Common Divisor",
          "Sum all digits in number",
          "String Processor",
          "Turn each first letter in a word to capital",
          "Convert decimal to Roman numbers and vice versa",
          "Homework review: Methods",
          "Quiz: Methods in Java - Check yourself"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "From this course, you can learn how to become Software Development Engineer in Test and get all the necessary practical skills.\nThere are a lot of other courses on this topic. So, why would you choose exactly this course?  Here are just a few reasons:\n\n- Coding examples\nTo learn to program is not enough just watching videos and reading books. You also need to have a lot of practice. In this training course, you will review multiple practical tasks and coding examples which will help you learn and understand Java better.\n\n- Open source code\nWe hide nothing from our students! Including the source code for the home task solutions and source code of examples that were shared during the lesson. Having the source code you can just copy and paste it to run it on your local computer to understand how things work better.\nYou are allowed to use all source code examples for learning purposes. This helps significantly to configure the environment and make tests work, especially in case students didn't work with any testing framework in the past.\n\n- Q&A support\nThe significant difference between the online and offline learning process is the instructor's availability. If you are in one room with a tutor he always can help you to get understand the specific concept or to help fix your code on your computer.\nIn this course, we are supporting students with answers to any questions flagged in the Q&A section. In case there will be recurring questions - separate video lessons will be created to show how to address the issue.\nSo with this course you are not just getting video materials, code exercises, source code, access to the free mobile application without limits (which is still pretty cool, huh? :) ), but you also get tutor support and answers to your questions along with this course.\n\n- Relevant knowledge\nAfter our team investigated other Java courses on Udemy we realized that most of them have nothing in common with real life. The information which is shared there is very old and significantly out of date. For example, the instructor teaches a framework which is not been used already for 15 years. Or instructors do stress on the programming design which is not used anymore at all!\nThe instructor of this course is a consultant in a top-rated IT outsourcing company and helps to bring cutting-edge solutions in IT for all his clients. Feel free to check the LinkedIn page of the instructor and check skills endorsement. More than 19 thousand people across all over the world (BTW most of them are from the top 100 companies of the world) evaluated the skills of Andrii Piatakha.\nWith this course, you can be sure that you will spend your time learning the right things from one of the best IT consultants in the world.\n\n- Free mobile App without limits for our students\nKnowing Java is one skill. Be able to pass interviews in the company - that is another skill :) Nowadays a lot of companies use tests to select candidates on the first level of interview. We developed applications to practice skills specifically for such purposes.\nIn this course, we will provide you link to download our FREE mobile app for android. (soon it will be also available for iOS platforms)\nThe instructor of this course comes up with hundreds of tests that are used to test the knowledge of candidates. With this application, you will be well-prepared for the interview.\nAlso, only for our students - there is no limit on attempts to pass certification. In the course, we will tell you how to set up a special bonus code that will remove restrictions for our students inside the app.\n\n- High concentration of useful material in each lesson\nSometimes you can notice that watching 5 minutes of our lesson is equivalent to watching another 30 minutes lesson.\nThis is because time spent for preparation for the lesson (script for the lesson, lesson structure) and video editing (to cut boring pieces of the lesson or time when the program loads) sometimes 10 times as much (sometimes even 20) as the final lesson duration after video editing.\nAlso, each topic is separated from another. In case some concept will be explained in the next lesson and you don't need to worry about understanding this in the scope of this lesson - the instructor will make an announcement when a specific topic will be covered.\nGo and try it yourself! We will appreciate your feedback.\n\n\n\n\nSo don't wait! Take a look at the lessons' preview if you still have doubts!\nBuy this course today, and you will get all updates for FREE!\nFor those who successfully passed this training course, or for students who were recognized for asking amazing questions, there is a special offer from the IT-Bulls company! The creator of this course is IT-Bulls company CEO and Founder. We are always in search of talents to run our amazing startups together with you. Probably you always dreamed about running your startup? In this course, you will be able to find the team who will teach you how to do that and (in particular cases) will be glad to help with implementation!\nHope you enjoy this course! And remember, we appreciate all your feedback! Your feedback will help us to become even better! Your feedback will help us to create to best Java course ever!\nSee you at the lessons! :)",
      "target_audience": [
        "Test Automation Engineers who want improve their skills to become SDET",
        "People who want to learn Automation Testing from scratch to advanced level"
      ]
    },
    {
      "title": "ISTQB Mobile Application Testing - Become a Mobile Tester",
      "url": "https://www.udemy.com/course/istqb-mobile-tester/",
      "bio": "All you need to become a certified Mobile Application Tester",
      "objectives": [
        "Types of Mobile Applications",
        "Types of Mobile Devices",
        "Testing for interaction with device hardware",
        "Test levels for Mobile Testing",
        "Simulators, Emulators, & Real Devices"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Chapter 1: Mobile World: Business and Technology Drivers": [
          "Mobile Analytics Data",
          "Business Models for Mobile Apps",
          "Mobile Device Types",
          "Types of Mobile Applications",
          "Mobile Application Architecture",
          "Challenges of Mobile Application Testing",
          "Risks in Mobile Application Testing",
          "Test Strategy for Mobile Apps",
          "Chapter 1: Mobile World: Business and Technology Drivers Quiz"
        ],
        "Chapter 1 Questions": [
          "Questions 1 to 5",
          "Questions 6 to 10"
        ],
        "Chapter 2: Mobile Application Test Types": [
          "Testing for Device Features",
          "Testing for Different Displays",
          "Testing for Device Temperature",
          "Testing for Device Input Sensors",
          "Testing Various Input Methods",
          "Testing for Screen Orientation Change",
          "Testing for Typical Interrupts",
          "Testing for Access Permissions to Device Features",
          "Testing for Power Consumption and State",
          "Testing for Notifications",
          "Testing for Quick-access Links & User Preferences",
          "Testing for Different Types of Apps",
          "Testing for Interoperability with Multiple Platforms & Operating System Versions",
          "Testing for Interoperability and Co-existence with other Apps on the Device",
          "Testing for Various Connectivity Methods",
          "Chapter 2: Mobile Application Test Types Quiz"
        ],
        "Chapter 3: Common Test Types and Test Process for Mobile Applications": [
          "Introduction",
          "Installability Testing",
          "Stress Testing",
          "Security Testing",
          "Performance Testing",
          "Usability Testing",
          "Database Testing",
          "Globalization, Localization, & Accessibility Testing",
          "Field Testing",
          "Application Store Approval & Post-release Testing",
          "Personas",
          "Mnemonics, Heuristics, & Tours",
          "Session-Based Test Management (SBTM)",
          "Mobile Test Process",
          "Test Approaches for Mobile Testing",
          "Chapter 3: Common Test Types and Test Process for Mobile Applications Quiz"
        ],
        "Chapter 4: Mobile Application Platforms, Tools and Environment": [
          "Development Platforms for Mobile Applications",
          "Common Development Platform Tools",
          "Emulators & Simulators",
          "Setting Up a Test Lab",
          "Chapter 4: Mobile Application Platforms, Tools and Environment Quiz"
        ],
        "Chapter 5: Automating the Test Execution": [
          "Automation Approaches",
          "Automation Methods",
          "Automation Tools Evaluation",
          "Approaches for Setting Up an Automation Test Lab",
          "Chapter 5: Automating the Test Execution Quiz"
        ],
        "Chapter Exams": [
          "Chapter 1 exam",
          "Chapter 2 exam",
          "Chapter 3 exam",
          "Chapter 1 & 2 & 3 exam",
          "Chapter 4 exam",
          "Chapter 5 exam"
        ]
      },
      "requirements": [
        "Hold the ISTQB Foundation Level Certificate",
        "Have experience in Manual Testing"
      ],
      "description": "This course is a complete explanation of the ISTQB Certified Mobile Application Tester Syllabus. Once you study the whole course you will be ready to apply for the exam.\nEach section in the syllabus is explained in a separate video which makes the learning process easier for the trainee.\nAll course content is updated to the latest version of the syllabus.\n\n\nAudience\nThe Foundation Level Mobile Application Testing qualification is aimed at people who have already achieved a Foundation point in their careers in software testing and wish to develop further their expertise in Mobile Application Testing.\n\n\nBusiness Outcomes\nCertified Mobile Application Testers who have passed the Foundation Level “Certified Mobile Application Testing” exam should be able to accomplish the following Business Objectives:\nUnderstand and review business and technology drivers for mobile apps in order to create a test strategy\nIdentify and understand the key challenges, risks and expectations associated with testing a mobile application\nApply test types and levels specific to mobile applications.\nApply common test types, such as those mentioned in ISTQB® Certified Tester Foundation Level syllabus 2018, in the mobile specific context.\nCarry out the activities required specifically for mobile application testing as part of the main activities of the ISTQB® test process.\nIdentify and use suitable environments and appropriate tools for mobile application testing.\nUnderstand methods and tools specifically to support mobile application test automation.",
      "target_audience": [
        "Software Testers",
        "QA Engineers",
        "Mobile Developers",
        "QA Analysts",
        "Test Engineers",
        "QA Managers"
      ]
    },
    {
      "title": "Rest API Testing using Robot Framework - Request Library",
      "url": "https://www.udemy.com/course/robot-framework-api-testing/",
      "bio": "Basic to advance understanding of API Testing | Robot Framework | Requests Module",
      "objectives": [
        "Basic to advance understanding of API Testing",
        "End to End Environment Setup for API Testing using Robot Keywords",
        "Most usable keywords which we can use while doing API Testing in Robot Framework"
      ],
      "course_content": {
        "Introduction to Robot Framework": [
          "Introduction to Robot Framework | Features in Robot Framework",
          "Advantages of Robot Framework",
          "Test Libraries : Build In Libraries & External Libraries"
        ],
        "Installation Roadmap | End to End Installation Process": [
          "Installation Roadmap",
          "Installation Step 1: Setup Python",
          "Installation Step 2: Setup PyCharm",
          "Installation Step 3: Setup Intellibot Plugin",
          "Installation Step 4: Configure PIP",
          "Installation Step 5: Setup Library using PIP",
          "Installation Step 6: Install JSON Library"
        ],
        "Basic understanding of API Testing(Skip if you know WebService/API Basics)": [
          "What is WebService",
          "WebService Example",
          "Advantage of WebService over WebBased Application",
          "Difference between API and WebService",
          "Different type of Services : SOAP & REST",
          "Rest API : common Methods - GET, POST, PUT, DELETE"
        ],
        "Basic Structure of Robot Framework": [
          "Different Files in Robot Framework",
          "Sections in Robot file",
          "Rules to be Followed in Robot TestCases",
          "Define and Use Variables"
        ],
        "Start Writing Test Cases | GET REQUEST : - Validate Status Code and Body Content": [
          "Write First Test Case - Get Request",
          "Get Request & Validate Status Code"
        ],
        "Basics of Json and JsonPath": [
          "Goal of this sections",
          "Basic Json Understanding",
          "Json Path Basics",
          "Json Path Advance"
        ],
        "Rest API Testing": [
          "Validate content using JSON Path",
          "GET Request with Parameters",
          "Delete Data | Delete Request",
          "Add new Data | Post Request",
          "Update Data | Put Request"
        ],
        "End to End Testing with Request Chaining- GET | POST | PUT | DELETE": [
          "End to End Scenario - Part 1",
          "End to End Scenario - Part 2"
        ],
        "User Defined Keywords": [
          "Write Keywords in TestCase File- Using Existing Keywords",
          "Write Keywords in Resource File- With Argument",
          "Write Keywords in Resource File- With Argument and Return Value",
          "Write Keywords in Resource File- Using Python Programming"
        ],
        "Robot Framework Advance Concepts": [
          "Reports in Robot Framework",
          "Work with TestSuites",
          "Documentation and Timeout",
          "Setup and TearDown",
          "Control Execution through Tags"
        ]
      },
      "requirements": [
        "Basic understanding of Windows environment",
        "Basic understanding of Python Programming"
      ],
      "description": "Robot Framework is a generic test automation framework for acceptance testing and acceptance test-driven development (ATDD). It has easy-to-use tabular test data syntax and it utilises the keyword-driven testing approach.\nIts testing capabilities can be extended by test libraries implemented either with Python or Java, and users can create new higher-level keywords from existing ones using the same syntax that is used for creating test cases.\n\n\nWe are going to cover,\n1.  Basic environment setup\n2.  API Testing Basics\n3.  Rest API and different methods\n4.  GET | POST | PUT | DELETE\n5.  Run with Dynamic Data\n6.  Json and Json Path\n7.  API Testing Fundamentals",
      "target_audience": [
        "Manual Testers looking opportunity in API Automation Testing",
        "Python automation testers looking to automate REST API using Robot Framework"
      ]
    },
    {
      "title": "Introduction to REST APIs for Absolute Beginners",
      "url": "https://www.udemy.com/course/api-with-postman-for-absolute-beginners/",
      "bio": "Learn how to use Postman to build REST & GraphQL requests",
      "objectives": [
        "Create GET, POST, PUT, DELETE requests",
        "Understand HTTP messages",
        "Understand GET vs POST request method",
        "Work with real-world APIs",
        "Use Postman"
      ],
      "course_content": {
        "Introduction to APIs": [
          "Brief history of APIs",
          "Why do we need APIs? An example RPC call",
          "Welcome to the course - please watch!"
        ],
        "Building HTTP requests with Postman": [
          "Section overview",
          "HTTP message structure",
          "HTTP request method (GET, POST, PUT, DELETE, ...)",
          "Introduction to Postman (tool for working with APIs)",
          "What are query parameters? ...",
          "What are path parameters? ...",
          "Query parameters and path parameters",
          "HTTP headers",
          "HTTP headers: Content-Type header",
          "HTTP headers: Authorization header",
          "HTTP headers: Cookie header (Cookies)",
          "HTTP body",
          "HTTP status code (200, 301, 401, 403, 404, ...)",
          "Conclusion"
        ],
        "Working with REST APIs in Postman": [
          "Section overview",
          "What is REST?",
          "What is a resource?",
          "Hands-on API Car fleet management",
          "What is JSON?",
          "API Documentation",
          "What is Swagger?",
          "How to create a GET request - Part I",
          "How to create a GET request - Part II",
          "Assignment - GET",
          "Assignment solution - GET",
          "Invalid JSON",
          "How to create a POST request",
          "Common errors",
          "Assignment POST",
          "Assignment solution - POST",
          "GET vs POST & What is a Cache",
          "How to create a PUT request",
          "POST vs PUT",
          "Assignment DELETE",
          "Assignment solution DELETE",
          "What is CRUD?",
          "Which HTTP verb to use"
        ],
        "How to upload a file through an API (Giphy)": [
          "Section overview",
          "What is Giphy?",
          "How to search for GIFs using the API",
          "How to get a GIF through the API",
          "How to create a GIF (optional)",
          "How to upload a file using Postman",
          "Assignment",
          "Assignment solution",
          "Postman collection for Giphy",
          "Clean-up"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "The possibility of installing new tools on your computer."
      ],
      "description": "To work with APIs we will use the Postman app! Postman allows you to quickly create a request with the required HTTP method and parameters, set the body, headers, submit the request and easily inspect the results.\nPostman can help if you are developing APIs as well! I have created this course for testing engineers and well for software developers. Postman can help you during the development of your API as well as after the API is completed, by running tests that make sure your API is still working as intended.\nPostman has over 10 million users worldwide and continues to grow. This course will introduce you to Postman and is suited for beginners. You will learn how to build API requests with Postman, how to inspect responses debug any issues.\nPostman has grown to be a complex tool that has many capabilities\nSo let’s look at what you are going to learn during the course:\nStart with simple requests\nAdvance towards more complex scenarios\nUpload files\nLearn about REST\nWork with real APIs\nLearn to deal with authentication/authorization\nSo after this course, you will have an overview of Postman and can later decide in which areas you want to learn more.\nExcited to learn about Postman? Sign-up up today!",
      "target_audience": [
        "Anyone who want to get started with APIs",
        "Beginner developers who want to use APIs in their projects",
        "QA engineers who want to learn how to use APIs"
      ]
    },
    {
      "title": "JIRA Test Management using ZEPHYR for TESTERS",
      "url": "https://www.udemy.com/course/jira-test-management-using-zephyr-for-testers/",
      "bio": "Test management in JIRA, Zephyr, Test Cases, Test Cycles, Regression Suites,Test Report, RTM, Dashboards, Best Practices",
      "objectives": [
        "Creating Release & Components",
        "Creating, maintening and executing Test cases using Zephyr",
        "Test execution cycle and RTM",
        "Test Reporting and Dashboarding"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About Instructor",
          "Agenda of the course",
          "Quick introduction of JIRA",
          "Advantages of using plugins for Test Management + Zephyr"
        ],
        "Demonstration": [
          "Register for JIRA",
          "Zephyr Installation",
          "Example Scenario",
          "Release & Components in JIRA",
          "Create Epic and Stories/Requirements using Zephyr",
          "Create Test Cases",
          "Importing Test cases from Excel file",
          "Bulk editing Test Cases",
          "Creating Test Cycles",
          "Test Execution & Defects",
          "Defect workflow & Finish Execution",
          "Generate RTM",
          "Creating Dashboards",
          "Confluence Integration"
        ],
        "Best Practices - Tips": [
          "Best Practices to maintain Test Cases in JIRA"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of JIRA"
      ],
      "description": "This course has been designed for testers with no knowledge of Test management in JIRA using Zephyr. We will cover each and every step on how to create, maintain, execute, generate reports and dashboarding in JIRA. We will also consider a scenario, while explain the activities and end of the course, we will discuss couple of really important best practices, one must follow to make our life easy. As this is not a JIRA course, I would expect the testers to have some basic understanding of JIRA, if not please feel free contact me, I will add new videos on JIRA.\nCourse Modules:\nAbout Me.\nAdvantages of JIRA Test plugin\nTest Management plugins in JIRA\nRegister for JIRA and install Zephyr plugin\nDemonstration of a scenario\nCreate new project\nAssign Test issue types\nCreate new Release & Components\nCreate Epic\nCreate Requirements(Stories) and link to Epic\nCreate Test Cases and link to Stories and Epic\nImporting existing tests from Excel file to JIRA\nCreate Scrum wall and bring Tests from backlog\nCreate Testing Cycles\nExecuting Tests step by step\nRaising defects for Failed tests and link to story and Epic\nDefect Lifecycle\nGenerate Dynamic Test Report\nGenerate Traceability Matrix\nGenerate Dashboards\nGenerate confluence page with JIRA filters\nBest Practices tips\nEnd of the course, you will be able to apply the learning in your professional life immediately ad I am confident that you will grow fast and efficient ?\nIf you like this course, please do not forget to provide genuine feedbacks, which will help others while choosing the course.",
      "target_audience": [
        "Any beginner to JIRA and Test team"
      ]
    },
    {
      "title": "Roadmap to become a Test Automation Engineer",
      "url": "https://www.udemy.com/course/road-map-to-become-test-automation-engineer/",
      "bio": "Define your path to learn test automation by following clear guidelines and steps given in this course.",
      "objectives": [
        "What is Software Test Automation?",
        "What skills a test automation professional should have?",
        "Where to start to develop skills to become a test automation developer?",
        "What tools you need if you're just getting started with test automation.",
        "Our main objective is to give you a clear direction that helps you in your journey to become test automation engineer."
      ],
      "course_content": {
        "What we are going to learn in this course?": [
          "Introduction",
          "Course Objective",
          "Test Automation FAQ's",
          "Course Structure"
        ],
        "Getting Started with Test Automation": [
          "What we’ll learn in this section?",
          "Benefits of Automated Testing",
          "Benefits of performing Automated Testing?",
          "Why you should learn Test Automation?",
          "What is Test Automation?",
          "What is Test Automation?",
          "What is Automated Test Script?",
          "Automated Test Scripts",
          "What you can do as an Automation Developer?",
          "What an automation developer can do?",
          "Lecture 11: Types of Automated Tests",
          "Lecture 12: Test Automation Pyramid",
          "Lecture 13: Inverted Pyramid",
          "Lecture 14: Automation Anti-Patterns",
          "Lecture 15: Automation Pyramid - Summary"
        ],
        "Action Plan for learning Test Automation": [
          "What we'll learn in this section?",
          "What automation technology to choose?",
          "What should be your action plan?",
          "Phase 1 - Choosing Programming Language",
          "Phase 1 - Choosing Programming Language & Automation Technology (Cont.)",
          "Phase 2 - Test Automation Strategy & Planning",
          "Phase 3 – Integration with build management tools",
          "Phase 4 – TDD, ATDD, BDD",
          "Phase 5 – Web Services",
          "Phase 6 – Mobile Application Automation",
          "Phase 7 – Performance & Scalability",
          "Roadmap to Learning Test Automation"
        ],
        "Web Basic Concepts": [
          "Web Basic Concepts – Must know for Automation Developer",
          "Other Must Know Concepts for Automation Developer",
          "Understanding Application Layers"
        ],
        "Automation Environment Setup": [
          "What we’ll learn in this section?",
          "Creating Folder Structure",
          "Installing Java",
          "Installing Eclipse IDE",
          "Installing Selenium",
          "Installing Browser Driver",
          "Writing and running first script",
          "Create a GitHub account"
        ],
        "Frequently Asked Questions": [
          "What we’ll learn in this section?",
          "Where should I start if I want to learn test automation?",
          "Is knowledge of programming a must? If so, how can I learn it?",
          "How can I assess whether or not I have the skills needed to learn Automation",
          "What should be my approach for learning (sequence of steps)?",
          "What should I do if I get stuck?",
          "How can I stay on target to achieve my goal of learning Automation?",
          "Are there some Websites to practice automation skills?",
          "Do companies hire for automation with experience only on manual testing?",
          "What trends in the Automation field affect someone just entering this career now",
          "How can I connect with other automation professionals?"
        ],
        "Recommended Resources": [
          "Recommended Books, Websites & Blogs",
          "Last but not least"
        ]
      },
      "requirements": [
        "Basic concepts about Software Testing",
        "Motivation and Passion to Learn Test Automation"
      ],
      "description": "If you are Software Testing Professionals & want to learn skills to be the one who can automate the boring, repetitive and time consuming software testing tasks then this course will provide you the road map to start your journey.\n\nDon’t get overwhelmed by the large number of information and automation technologies that are available in the market. Follow this course and define your clear path to become Automation developer/engineer.",
      "target_audience": [
        "Software Testing Professionals who want to learn skills to automate the boring, repetitive and time consuming software testing tasks",
        "Software developers who want to learn about Test Automation",
        "Managers of software projects",
        "Anyone curious about Test Automation terminologies and implementation"
      ]
    },
    {
      "title": "REST Assured API Automation,Allure Reports - An Introduction",
      "url": "https://www.udemy.com/course/rest-api-testing-with-rest-assuredpostman-part1/",
      "bio": "This course will help you get started with REST Assured & Allure Reports using Junit4",
      "objectives": [
        "Write REST Assured tests (GET, POST, PUT, PATCH, DELETE) using the 'given-when-then' method",
        "Response extraction using Jayway JsonPath",
        "Generate Fake Test Data",
        "Create collections & environments in POSTMAN",
        "Use POSTMAN to send different requests (GET, POST, PUT, PATCH, DELETE, OPTIONS & HEAD)",
        "Setup REST Assured Maven project in Eclipse"
      ],
      "course_content": {
        "Introduction to the course": [
          "About the Course"
        ],
        "Setting up the Student Sample Application": [
          "Starting \"Students\" Application",
          "IMPORTANT: For users using Java 17+",
          "Docker install Windows",
          "Docker. install Mac",
          "Launching Student app docker image",
          "Inspecting browser traffic using chrome developer tools"
        ],
        "Using POSTMAN to make (GET,POST,PUT,PATCH,DELETE,OPTIONS) requests": [
          "Installing Postman REST Client",
          "Organizing POSTMAN (creating collections, adding environments)",
          "GET Request (Getting information about resources)",
          "POST Request (Adding information)",
          "PUT Request (Updating information)",
          "PATCH Request (Updating selective information)",
          "DELETE Request (Deleting information)",
          "OPTIONS (Getting information on a particular resource)",
          "HEAD Method"
        ],
        "Installing pre-requisite softwares": [
          "Java installation on Mac OS",
          "Maven installation on Mac OS",
          "Eclipse Installation on Mac OS",
          "Java installation on Windows OS",
          "Maven installation on Windows OS",
          "Eclipse Installation on Windows OS"
        ],
        "Writing Tests with Rest Assured": [
          "Project setup using maven, junit, & rest-assured",
          "Popular test writing styles in Rest Assured",
          "Writing our first using Rest Assured",
          "Static import of Rest Assured methods",
          "Passing QueryParams in GET Request",
          "Passing Path Params in GET Request",
          "Reusability with RestAssured constants(port, baseURI ,basePath)",
          "POST request with payload as String",
          "POJO creation & Java object payload with Gson",
          "Creating Fake Test Data with Java Faker library",
          "Updating Student information with PUT request",
          "Update partial info (PATCH request)",
          "Delete a student using DELETE Request",
          "Code for download"
        ],
        "Extracting Response Data using Jayway JsonPath": [
          "Bestbuy API playground setup",
          "Brief overview on extracting information from response",
          "Extracting response information with Jayway JsonPath library-p1",
          "Extracting response information with Jayway JsonPath library-p2",
          "Jayway JsonPath Info",
          "Code for download."
        ],
        "Allure Reports": [
          "Introduction to allure reports",
          "Creating your first allure report",
          "Providing meaningful display names to your tests",
          "Attaching links to your reports",
          "Grouping tests as stories,epics & features",
          "Adding step information using @Step annotation",
          "Adding attachments to your reports",
          "Code for download"
        ],
        "Congratulations!!": [
          "Next Steps in your Journey!!"
        ]
      },
      "requirements": [
        "This course requires that the user has some basic programming knowledge in JAVA",
        "Basic understanding of RESTful Services"
      ],
      "description": "In the 21st century, almost all web applications use web services to communicate or interact with each other. Most modern day web services are built on Representational state transfer (REST) architecture; REST has gained a lot of popularity and it will continue to do the same due to its simplicity in comparison with other technologies.\nIt is very important for software QA engineers, automation engineers and software developers to understand the importance of REST testing and more importantly how to automate these tests. Automating Application Program Interface (API) tests is critical and crucial for most projects due to the fact that API tests are far more stable, reliable and fast.\nIn this course, you will be provided with the tools and techniques needed to be successful with REST API Automation using Rest Assured Library in Java & JUnit. We will be focusing on the important topics listed below:\nLearn how to create collections & environment variables in POSTMAN\nUnderstand and use POSTMAN to send requests (using GET, POST, PUT, PATCH, DELETE, OPTIONS and HEAD operations)\nIntroduction to REST Assured, which is a popular open source library used for API test automation\nLearn how to setup a REST Assured Maven project\nLearn to write tests for GET, POST, PUT, PATCH and DELETE requests using REST Assured\nLearn to use setup & configure Allure Reports\nProvide beautiful DisplayNames,Descriptions, link information in your reports\nAdd detailed test step information & attachment information in the reports\n\n\n****You will be provided with a Students Application, that you can run locally on your machine****\n****The course will introduce you to Bestbuy API playground(which contains ~50,000 products) application which can be run locally\n\nAll the code is available for download & instructor support will be provided to questions.",
      "target_audience": [
        "QA Engineers who want to learn how to write API automation",
        "Automation Engineers, SDETs who want to learn an additional Java Testing library for RESTful API's",
        "Software developers who would like to learn the art of API Test automation using REST Assured"
      ]
    },
    {
      "title": "Robot Framework Test Automation - Saucelabs Integration",
      "url": "https://www.udemy.com/course/robot-framework-saucelabs-integration/",
      "bio": "Run Robot Framework tests in the cloud on different OS, browser, or mobile device combinations!",
      "objectives": [
        "Convert your existing Robot Framework scripts to run on OS/browser combinations in the cloud",
        "Save lots of time & frustration when you no longer have to build & maintain your own test automation target computers",
        "Leverage Saucelabs' built-in screen recording feature to review any test after the fact",
        "Understand how to use the SauceConnect utility to test web applications that are hosted behind your company's firewall"
      ],
      "course_content": {
        "Introduction": [
          "About Me",
          "Introduction",
          "Demo of Robot Framework on Saucelabs",
          "Why Use Saucelabs?",
          "A Visual Overview of Saucelabs"
        ],
        "Configuring Robot Framework for Saucelabs": [
          "Overview",
          "Install Robot Framework libraries",
          "Create a Saucelabs account",
          "Explore the Saucelabs Platforms",
          "Explore the manual testing options on Saucelabs"
        ],
        "Creating & Running Saucelabs Capable Robot Framework Scripts": [
          "Overview of scripting approach",
          "Create & run a simple Robot Framework script on Saucelabs",
          "Add 2 simple variables to more easily switch Saucelabs platforms",
          "Retrofit & run a layered Robot Framework suite"
        ],
        "Advanced Triggering Options": [
          "Overview of triggering options",
          "Trigger from a batch file",
          "Trigger from Jenkins (continuous integration)"
        ],
        "Use SauceConnect to Test Apps Behind a Firewall!": [
          "Overview of SauceConnect",
          "How SauceConnect Works",
          "Installing the SauceConnect utility",
          "Run your scripts over SauceConnect"
        ]
      },
      "requirements": [
        "Please have a working knowledge of Robot Framework scripting prior to taking this course",
        "Please have a working installation of Robot Framework on your computer"
      ],
      "description": "If you're using Robot Framework for your Selenium Webdriver test automation and you need to test many different OS/browser combinations, this course is for you!\nInstead of building & maintaining your own computers to host your Robot Framework test automation, a few simple changes to your scripts will allow you to easily run your Robot Framework Selenium tests in parallel on several dozen configurations including many versions of Windows, MacOS, and Linux operating systems and their most popular web browsers.\nIn this 1+ hour course, I'll walk you through everything you need to know to convert your existing Robot Framework Selenium scripts to run on the SauceLabs browser cloud. I'm even including some working script examples so you can see it work even more quickly.\nBackground:\nRobot Framework is a pre-built test automation framework. By comparison... Robot Framework is much easier to learn than Selenium Webdriver (with Java, Python, C#, or PHP) because your scripts are written with English words instead of code.\nIf you're already an experienced user of Selenium Webdriver, Cucumber, or QTP/UFT, you'll quickly learn how elegant and capable Robot Framework is compared to those tools.\nBryan Lamb's Robot Framework courses are the fastest, easiest, and most effective way to learn Robot Framework!",
      "target_audience": [
        "Take this course If you currently use Robot Framework and want to speed up your test execution time by running on multiple OS/browser combinations in parallel"
      ]
    },
    {
      "title": "Selenium WebDriver Advanced - Industry Standard Framework",
      "url": "https://www.udemy.com/course/selenium-webdriver-advanced-framework/",
      "bio": "Join the only course to learn how to build a Ready To Use Industry Standard Selenium WebDriver Automation Framework",
      "objectives": [
        "***** At the end of this course, you will go away with READY TO USE Industry Standard Selenium WebDriver Framework",
        "***** You will have detailed understanding of Web Automation Frameworks",
        "You will be able to EXPLAIN, DESIGN and IMPLEMENT structured AUTOMATION FRAMEWORKS using Page Object/Factory Model",
        "***** In-depth understanding of Selenium WebDriver CHALLENGES with real time examples",
        "We have 10 dedicated INSTRUCTORS to help you with queries within 24 HOURS, resume preparation, Interview questions",
        "***** You will be able to understand and write efficient testing code",
        "You should be able to lead any Selenium Automation Project from scratch on your own",
        "***** With all this knowledge gained, you should be easily able to clear Selenium Automation interviews"
      ],
      "course_content": {
        "Introduction": [
          "Course Outcome",
          "Course Pre-requisites",
          "Instructor Introduction"
        ],
        "Framework Introduction": [
          "What is a Framework",
          "Page Object Model Explained"
        ],
        "Environment and Project Setup": [
          "IntelliJ Installation",
          "Project Setup Using Maven",
          "Where To Practice Framework Content? *** MUST WATCH ***",
          "Selenium 4 New Syntax"
        ],
        "Reasons Why Framework Is Needed": [
          "Understanding Test Scenario",
          "Test Class without Framework",
          "Problems of No Framework Test Case"
        ],
        "Page Object Concepts And First Test Class": [
          "What should a Page Object contain",
          "Real Test Scenario",
          "Implementing First Test Class",
          "Adding Test Method To Test Class"
        ],
        "Implementing First Page Class": [
          "First Page Class",
          "Exercise - Create Search and Results Page",
          "Exercise Solution",
          "Framework vs No Framework Test Class Comparison",
          "Code Refactoring"
        ],
        "Returning Page Objects": [
          "How to return Page Objects",
          "Exercise - Returning Page Objects",
          "Solution - Returning Page Objects"
        ],
        "How To Add Multiple Test Methods": [
          "Multiple Test Methods in a Test Class",
          "Adding More Page Classes",
          "Refactor Page Class",
          "How to Remove Test Dependency"
        ],
        "Adding Multiple Test Classes To Framework": [
          "How to add multiple Test Classes - Part 1",
          "How to add multiple Test Classes - Part 2",
          "How to run multiple test classes"
        ],
        "Introduction To Base Classes": [
          "Introduction to BaseTest Class",
          "One Browser Instance Per Test Class",
          "Introduction to BasePage Class"
        ]
      },
      "requirements": [
        "***** CODE FILES / ALL MATERIAL FOR EVERY LECTURE AVAILABLE TO DOWNLOAD",
        "Browsers (Firefox or Chrome)",
        "Windows/MAC computer",
        "This is an Advanced Course, you are expected to know these technologies -> Java, TestNG, Maven, Logging",
        "IntelliJ, Maven Project Setup for Selenium WebDriver, TestNG, Log4j2 are ALREADY COVERED in the lectures and documentation has been uploaded to the course"
      ],
      "description": "Course using the latest Selenium WebDriver 4 version - Updated for 2023\n*** Only Course which provides a READY TO USE Industry Standard Selenium WebDriver Framework\nYou take away a complete framework which you can directly use to automate any web application\n*** Most popular and most loved by students, best Selenium WebDriver course\nLife Time Access (Also best support you have ever received)\nNo false promises, straight point to point explanation with simple and easy to understand examples\nNo other course on Udemy covers framework implementation covered in this course with such great depth of detail\nJoin the group of more than 100,000 students already taking advantage of our multiple courses with positive feedback.\n\nIncludes:  65+ lectures of Complete Selenium WebDriver Framework Implementation with real time website + life time support (Also best support you have ever received)\nThis course includes a wide range of topics covering complete Selenium WebDriver Advanced Framework, Automation Framework Design (Page Objects, Data Driven, Reading Excel Files), Logging with Log4j2, Best reporting tool - Advanced Reporting. All materials and code files included\n\n** One stop place to become an Expert in Web Automation Framework from scratch **\nWe start from the scratch to build a complete Selenium WebDriver Automation Framework. This is a single course you need to learn how to build an Industry Standard Selenium WebDriver Framework\nYou will be introduced to some never seen before framework concepts which are unique to this course and are difficult to find anywhere else.\n\n\nWHAT MAKES THIS COURSE BEST IN CLASS?\nYou take away a READY TO USE Selenium WebDriver Framework. This is the only course which provides you a ready to use framework\nExamples are taken from TESTING REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated, that will give you idea of industry level framework and give you confidence.\nGet unique content with real example code files provided to refer and learn with examples.\nGet awesome Support, response within 24 hours.\n\nWhy should I take this course?\n\nIf you answer yes to any of these questions, you should take this course\nKnow Selenium WebDriver concepts, but need to know how to build a framework by putting together all the knowledge?\nAre you a Quality Assurance Automation professional willing to intensify their current test automation skill sets?\nAre you looking to step into automation industry with the latest technologies in market?\nInterested in learning how Selenium WebDriver is used in projects?\nAre you a Fresh Graduates who want to make a dream career in software engineering?\n\n\nTopics Include:\nFramework detailed explanation\nPage Object Model detailed explanation\nProject and Environment setup\nComparison between No Framework and Framework Test Classes\nReturning Page Objects\nWorking with multiple Test Classes and Test Methods\nIntroduction to BasePage and BaseTest Classes\nIntroduction to Util Class\nIntroduction to Custom Driver Concept (Unique to this course)\nIntroduction to WebDriver Factory Pattern\nIntroduction to CheckPoint Concept (Unique to this course)\nConstants Class Concept\nData Driven Testing (Unique to this course)\nLogging infrastructure with Log4j2",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career in test automation",
        "Quality Assurance Automation professionals willing to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "Mobile Application Manual Testing - Android Application",
      "url": "https://www.udemy.com/course/mobiletesting/",
      "bio": "Bug Tracking | Debugging | Realtime Process | Agile Methodology |",
      "objectives": [
        "Ready to test android application on real devices or emulators"
      ],
      "course_content": {
        "Indroduction": [
          "What is Mobile Application Testing",
          "Different types of Applications",
          "Difference between Real device & Emulators/Simulators"
        ],
        "Bug Reporting in JIRA(When Found any defect in Application)": [
          "Jira Dashboard and Update Profile",
          "Report new defect to JIRA",
          "Search defect in JIRA",
          "Defect life cycle in case of valid defect",
          "Defect life cycle in case developer rejected defect"
        ],
        "TestCase Writing for any application(Includiing mobile application)": [
          "Standard test case format",
          "Test Case Id",
          "Test Case Description",
          "Pre-requisite or Pre-Condition",
          "Test Case Steps",
          "Test Data",
          "Expected Result",
          "Actual Result and Status",
          "Comments",
          "Priority of Test Case",
          "Type of Test Case"
        ]
      },
      "requirements": [
        "Basic understanding of Mobile Devices are required",
        "Basic understanding of Windows Operating System and Installation Process"
      ],
      "description": "Mobile application testing is a process by which developer developed for hand held mobile devices is tested for its functionality, usability and consistency.Mobile application testing can be automated or manual type of testing. Mobile applications either come pre-installed or can be installed from mobile software distribution platforms. Mobile devices have witnessed a phenomenal growth in the past few years. A study conducted by the Yankee Group predicts the generation of $4.2 billion in revenue by 2013 through 7 billion U.S. smartphone app downloads.\nThis Course going to cover following testing approaches\n#1. Hardware testing:\nThe device including the internal processors, internal hardware, screen sizes, resolution, space or memory, camera, radio, Bluetooth, WIFI etc. This is sometimes referred to as, simple “Mobile Testing”.\n#2. Software or Application testing:\nThe applications that work on mobile devices and their functionality is tested. It is called the “Mobile Application Testing” to differentiate it from the earlier method. Even in the mobile applications, there are few basic differences that are important to understand:\na) Native apps: A native application is created for use on a platform like mobile and tablets.\nb) Mobile web apps are server-side apps to access website/s on mobile using different browsers like chrome, Firefox by connecting to a mobile network or wireless network like WIFI.\nc) Hybrid apps are combinations of native app and web app. They run on devices or offline and are written using web technologies like HTML5 and CSS.",
      "target_audience": [
        "Freshers looking opportunity in Mobile application testing",
        "Manual tester looking opportunity in Mobile app automation"
      ]
    },
    {
      "title": "Learn Rest API Automation Using Rest Assured",
      "url": "https://www.udemy.com/course/learn-rest-api-automation-using-rest-assured/",
      "bio": "Master Rest Assured for End-to-End API Automation Testing – From Basics to Framework Design",
      "objectives": [
        "REST API Automation - Basic to Advanced",
        "Become API Automation Engineer",
        "Rest Assured Project Implementation",
        "HTTP Methods",
        "JSON and JSON Path",
        "REST vs SOAP",
        "XML and JSON Schema Validation",
        "Postman",
        "Various Types of Logging in Rest Assured",
        "Working with Parameters",
        "Working with Headers and Cookies",
        "Implementing Basic and Digest Auth",
        "Using oAuth 1.0 and OAuth 2.0",
        "Learning Through Practice Exercises on Live API Services",
        "Response Aware Matcher",
        "Creating Mock WebService using WireMock",
        "Default Configuration Setup in RestAssured",
        "Validating Response Time",
        "XML Namespace Validation"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Core Java is required to perform hands-on exercise explained in this course"
      ],
      "description": "This course covers REST API Automation using Rest Assured in detail from basic to advanced levels. I believe in example-oriented teaching. So, you won’t find any PPTs during the sessions. But, you will find dozens of real time scenarios used to elaborate various API Automation concepts.\nFeel free to post your questions/feedback in the block provided under each session-video. I will make sure all of your queries are addressed. ‘Course Outline’ below will give you an idea about the depth and the overall coverage of this course. If you want to learn any other REST Assured concept - which is not already covered in this course - then feel free to let me know via Udemy messenger.\nCourse Outline:\nBasic concepts of APIs\nWhat is an API?\nPostman Basics\nAPI Methods\nHTTP Status Codes\nREST Vs SOAP\nWhat is Rest Assured?\nJSON and JSON Path\nJSON Schema\nGetting Started with Rest Assured\nRest Assured Setup Using Maven\nSimple Get Request\nValidate JSON Response\nValidate XML Response\nExtracting Response Data\nExtracting Single Value From Response\nVerifying Status Line\nPOST, PUT and DELETE\nPOST Using File\nPOST Using JSON Object\nPUT Operation\nDELETE Operation\nRest Assured Logging\nLog All\nLog Body and Headers\nLog Cookies and Status\nLog If Error\nLog If Validation Fails\nHandling Request Parameters\nQuery Parameters\nMultiple Query Parameters\nMulti-value Parameters\nPath Parameters\nForm Parameters\nWorking with Headers And Cookies\nWhat Are Headers?\nSending Request Headers\nSending Headers Using Objects\nSending Cookies\nSending Cookies Using Builder\nValidating Response Headers\nExtracting Response Headers\nExtracting Response Cookies\nAuthentication\nBasic and Digest Auth\noAuth 1.0\nTwitter oAuth Example\noAuth 2.0\nXML And JSON Schema Validation\nJSON Schema Validation\nXML DTD Schema Validation\nXML XSD Schema Validation\nWireMock: Creating Mock WebService using WireMock\nWireMock Setup\nWriting WireMock Stubs\nCreating Stub Mapping using File Body\nRecording Stub Mappings using WireMock Recorder\nMiscellaneous Operations\nSpecifying Request Port\nDefault Configuration Setup in RestAssured\nValidating Response Time\nXML Namespace Validation\nResponse Aware Matcher\nCourse Outline Ends\n\n\nThis course is designed for you if you are:\na QE Automation Engineer OR\na Selenium WebDriver automation aspirant OR\na manual testing professional willing to jump start your automation carrier OR\na QTP/UFT professional wanting to switch to API automation as per testing market demand OR\na QE Manager exploring better automation solutions for your project OR\na fresh grad looking to learn a quick new skill which has high demand in the job market OR\naspiring to learn coding and automation\nTo get the maximum benefit from the course, please take a look at following steps explaining 'How to take this course?'\nStep 1:  Schedule 30-45 minutes of your time daily for 5 days a week. 'Continuity' is the key.\nStep 2:  All sessions are divided in small videos of less than 20 minutes. Watch 2-3 videos daily.\nStep 3:  Hands-on exercise is very important. So, immediately try out the programs discussed in the session. Try them on your own. You can download these programs from lecture resources.\nStep 4: Assignments with answer keys are provided where-ever necessary. Complete the assignments before jumping on to the next sessions.\nStep 5:  If you come across any questions or issues, please feel free to contact me and I will make sure that your queries are resolved.\nWish you all a very happy learning.\nNote: All the course videos are in  QHD. For the best video streaming quality, please adjust the resolution from 'settings' at bottom right-hand corner of video player. Choose 1080p or 720p as per your network speed.",
      "target_audience": [
        "API automation aspirant",
        "QE Manager exploring better automation solutions for your project",
        "Fresh grads looking to learn a quick new skill which has high demand in the job market",
        "QE Testing Professionals",
        "Selenium Testers",
        "Automation Test Engineers",
        "QE Automation Engineers",
        "Automation Aspirants",
        "Manual Testing Professionals",
        "Software Testing Professionals",
        "API Automation Engineers"
      ]
    },
    {
      "title": "Selenium Java Test Framework & Best Practices - Masterclass",
      "url": "https://www.udemy.com/course/selenium-java-test-framework/",
      "bio": "Develop a POM Framework with Selenium 4 & TestNG using Industry Best Practices, Design Patterns & API Integration",
      "objectives": [
        "Develop Page Object Model frameworks from scratch for any Live website",
        "50+ Industry best practices to follow for framework development",
        "Learn to develop Readable, Maintainable and Scalable frameworks from scratch",
        "Bad practices to avoid during framework development",
        "Easily integrate APIs using REST Assured to skip login through UI [Selenium recommendation]",
        "Use APIs to setup test data [Selenium Recommendation]",
        "Learn how to easily write Atomic and Independent tests [Selenium Recommendation]",
        "Learn how to setup application state for tests [Selenium Recommendation]",
        "Learn to implement Parallel execution using TestNG, Maven and JUnit",
        "How to easily configure and drive automation frameworks using TestNG, JUnit and Maven",
        "Factory Design Pattern - Using Interface and Abstract class",
        "Singleton Design Pattern",
        "Learn how to follow the Single Responsibility Principle (SRP)",
        "Learn how to follow the Do Not Repeat Yourself (DRY) principle",
        "When and how to use OOP concepts in frameworks [Inheritance, Interface, Encapsulation, Polymorphism]",
        "Learn how to reuse Page Objects using Composition",
        "Learn about Fluent Interface and Builder design in Page Objects",
        "Manage test data as Java Objects using POJOs",
        "Synchronization [Wait] best practices",
        "How to easily handle Stale Element and Element Click Intercepted exceptions",
        "How to effectively use TestNG Data providers to drive test variations",
        "How to go about efficiently supporting multiple browsers and Environments",
        "Automated WebDriver management",
        "Learn Allure Reporting and generate feature rich reports",
        "Learn how to integrate the framework with GitHub",
        "Learn how to auto-trigger automation from Jenkins using GitHub Web Hooks, SCM Polling and Build Frequency"
      ],
      "course_content": {},
      "requirements": [
        "Just know how to automate basic tests using Selenium and you are good to go",
        "No prior framework development experience needed",
        "JAVA programming knowledge is not really required. I have got you covered with the necessary stuff."
      ],
      "description": "Course Updates:\nNov 2023: The course fully supports latest Selenium version 4.15.0, latest Java 21, and latest versions of all supporting libraries.\n*This course use Selenium 4.x.x for framework development*\n\n\nWhy this course?\nDo you want to learn how real automation frameworks are built using Selenium by following 50+ industry best practices?\nDid you learn Selenium in the past, but still figuring out how to go about developing a framework that is Readable,  Maintainable and Scalable?\nIs your team struggling with implementing automation frameworks that really works?\nDid you learn many bad automation practices in the past that simply doesn't work and want to unlearn all those practices?\nThen you are at the right place. This course is exactly what you were looking for!\nI'll take you through an exciting journey of developing Selenium automation framework from scratch using a dedicated live e-commerce practice website!\nI'll teach you 50+ industry best practices to follow while developing Selenium automation frameworks.\nI'll teach you about design patterns and how to efficiently use OOP concepts in the framework.\nI'll show you how to integrate APIs with the automation framework and use those to skip login through UI, to set the test data and to set the application state. All of these are Selenium recommended best practices.\nI'll show you how to follow Single Responsibility Principle (SRP) and Do Not Repeat Yourself principle (DRY) which are a must while developing the framework\nI'm VERY RESPONSIVE in the Q&A section. I respond to queries within 24 hours. If the time zone difference is not that huge, I can respond within 3-12 hours.\nWe will start with the bad practices first. This is what most of us do when we first start with developing automation frameworks.\nThen I'll make you unlearn all these bad practices step-by-step by implementing many of the industry best practices using LIVE coding. I'll not only explain you the \"what\", but also the \"why\" and \"how\" while explaining each and every concept.\nBy the end of this course, you are surely going to be confident enough to build Selenium automation frameworks from scratch for any live website. You are going to think like an automation lead, plan and design the automation framework, write optimized and clean code and follow good programming and automation practices.\n\n\nWhat topics are covered in this course?\nMANY. Here's the list:\nSetup the Maven project\nHow to automate tests using bad practices\nLet's talk bad practices\nImplement Page Object Model design\nCreate Data objects as Java Objects using POJOs\nSynchronization [Wait] techniques and best practices\nOptimizing tests\nImplement Page Factory and discuss the Pros and Cons\nAutomatic driver management using WebDriverManager\nConfigure and drive framework using Maven\nSupport multiple browsers\nConfigure and drive framework using TestNG\nConfigure and drive framework using Maven and TestNG both\nImplement Parallel execution using TestNG and Maven\nConfigure and drive framework using JUnit [specially for JUnit folks]\nParallel execution using JUnit [without ThreadLocal]\nImplement Singleton Design Pattern for Config properties\nHow to support multiple test environments\nDiscuss issues with writing end to end tests\nConvert to Atomic tests\nIntegrate APIs\nUse APIs to inject cookies to browser and skip login through UI\nUse APIs to set test data\nUse APIs to set application state\nRefactor tests to use APIs\nTestNG Data Provider\nReuse Page Objects using Composition\nComposition Vs Inheritance\nDifferent ways to handle Parallel execution issues\nFactory design pattern using Interface\nFactory design pattern using Abstract class\nHow to take screenshot\nHow to take full page screenshot using AShot\nWhen to use OOP concepts in automation frameworks\nAllure Reporting and generate feature rich reports\nIntegrate the framework with GitHub\nAuto-trigger automation from Jenkins using GitHub Web Hooks, SCM Polling and Build Frequency\n\n\nTechnology stack:\nSelenium\nJava\nTestNG\nJUnit\nMaven\nRest Assured\nJackson Data bind API\nAllure\nGitHub\nJenkins\n\n\nWhat else is included in the course?\nAll the code/notes used in the lectures are available for download\nYou will get my full support in the Q&A",
      "target_audience": [
        "Software engineers looking to learn how real automation frameworks are built from scratch",
        "Software engineers struggling with developing automation frameworks",
        "Teams struggling with developing automation frameworks that really works",
        "Software engineers looking to learn industry best practices for framework development",
        "Software engineers looking to transition to SDET role"
      ]
    },
    {
      "title": "Angular 2-8 Unit Testing With Jasmine & Karma Step By Step",
      "url": "https://www.udemy.com/course/angular-unit-testing-with-jasmine-karma/",
      "bio": "Learn the basics of Jasmine testing. Gain Angular testing / Javascript testing skills and automate tests today!",
      "objectives": [
        "How to write automated tests for your Angular apps by learning the basic functionality of Jasmine / Karma",
        "Advanced testing with Jasmine: Asynchronous testing, Marble testing, reactive forms, SpyOn method and more...",
        "Best practices of automation testing: Code coverage vs test coverage, No fragile tests, arrange act assert and more...",
        "Writing test cases for phones, routes etc. with demonstrations and exercises",
        "Integration Testing with Jasmine / Karma"
      ],
      "course_content": {
        "Basic info": [
          "Why automation testing",
          "Pre-requesites",
          "What is Jasmine / Karma?"
        ],
        "Fundamentals & best practices": [
          "Your First Test Suite",
          "Arrange Act Assert",
          "SetUp and TearDown",
          "Code Coverage Vs Test Coverage",
          "No Fragile Tests",
          "Unit Testing Vs Integration Testing"
        ],
        "Advanced Testing with Jasmine": [
          "Reactive Forms – Part 1",
          "Reactive Forms – Part 2",
          "Introduction to SpyOn Method",
          "Writing test Cases for directives",
          "Testing Router methods",
          "Asynchronous Testing",
          "Marble Testing"
        ],
        "Exercise": [
          "Exercise: Build CRUD functionality for users and write test case"
        ],
        "Conlusion": [
          "Conclusion",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is helpful"
      ],
      "description": "THE BEST DEDICATED COURSE FOR TEACHING JASMINE / KARMA TESTING USING ANGULAR VERSION 2-8\nThe primary goal of this course is to teach students the fundamental concepts of Angular unit testing using Jasmine & Karma.\nThe course is designed to help developers gain theoretical knowledge as well as practical skills on how to write automated tests for your Angular apps to further your career.\nEverything is covered step by step.\n\n\nYOU WILL LEARN:\nHow to write automated tests for your Angular apps by learning the basic functionality of Jasmine / Karma\nAdvanced testing techniques with Jasmine: Asynchronous testing, Marble testing, reactive forms, SpyOn method and more...\nThe best practices of automation testing like: Code coverage vs test coverage, No fragile tests, arrange act assert and more...\nPractical demonstration & exercises on how to write test cases for phones, routes etc.\nMuch more...\nThroughout the course, I will give you practical exercises for you to test out your new Jasmine testing skills.\nWhen you are finished with this course, you will have laid the foundation for your future automation testing job or promotion.\nI look forward to meeting you in the course forum where I'll be available to help you along the way and answer questions that you might have.\n\n\n\nWHAT IS JASMINE/KARMA/ANGULAR?\nJasmine is a behavior-driven development framework for testing JavaScript code. It does not depend on any other JavaScript frameworks. It does not require a DOM. And it has a clean, obvious syntax so that you can easily write tests.\nKarma is a test runner that fits all our needs in the angular framework.\nAngular is a TypeScript-based open-source web application framework led by the Angular Team at Google. It aims to simplify both the development and the testing of applications by providing a framework for client-side model–view–controller (MVC) and model–view–viewmodel (MVVM) architectures, along with components commonly used in rich Internet applications.\n\n\n\n\nTOP 3 BENEFITS OF LEARNING JASMINE TESTING?\n1: High demand. There is a high demand for skilled angular testing experts.\n2: A usable skill. In current times, automation plays a vital role in most development projects. Updating yourself with these testing methodologies is going to save hours of regression testing.\n3: Further your career. Software companies all around the world are actively seeking out, competent Angular / Jasmine code testers. There are not a lot of them, so the pay is good. If you learn automation testing, a promotion or a new job is a likely outcome.\n\n\n\n\nFREQUENTLY ASKED QUESTIONS\nIs Automation testing needed?\nWell, to be honest, in small scale startups I don’t think it isn’t going to add much value since your main priority will be application code.\nHowever, in large organizations, it is mandatory and is becoming so more and more.\nHow is this course different from other Angular courses?\nThis course focusses specifically on javascript testing using Jasmine. While other courses may be wide and shallow, in this course you will be sure to acquire practical unit testing skills with Jasmine once you are finished.\n\n\nGUARANTEE\nIf within 30 days of buying the course you decide that it's not for you, please get a refund. We only want happy students.\n\n\n\n\nARE YOU READY TO LEARN ANGULAR TESTING USING JASMINE & KARMA?\nPlease press the \"Take This Course\" button and start learning 2 minutes from now!",
      "target_audience": [
        "Developers, QA engineers and others who wants to write automated tests for their Angular apps and learn the basic functionality of Jasmine / Karma"
      ]
    },
    {
      "title": "Unit testing your Javascript with jasmine",
      "url": "https://www.udemy.com/course/unit-testing-your-javascript-with-jasmine/",
      "bio": "Learn how to unit test your JavaScript using the jasmine framework, from your first test to continuous integration.",
      "objectives": [
        "Write clean suites, specs and expectations.",
        "Isolate dependencies on units through test doubles (spies).",
        "Automate test runs through continuous integration from version control using a headless browser and a test runner.",
        "Set up jasmine as their unit testing framework from scratch.",
        "Configure setup and teardown for suites.",
        "Understand how matchers work in Jasmine.",
        "Write custom matchers and include them in your project.",
        "Consume third party matchers.",
        "Test asynchronous code.",
        "Run unit tests both from a web browser and from a terminal through a test runner.",
        "Generate code coverage reports.",
        "Improve dependency management through a package manager."
      ],
      "course_content": {
        "Course Intro": [
          "Course overview",
          "Why unit testing? why jasmine?",
          "Important javascript notes!",
          "Download exercise files",
          "Creating your first test",
          "Section summary",
          "Section notes"
        ],
        "Jasmine functions": [
          "Section intro",
          "Course project",
          "Let's build it!",
          "Programing the UI",
          "Improving errors",
          "Styling the UI (optional lecture)",
          "Setting up jasmine",
          "Suites",
          "Specs",
          "Expectations",
          "Disabled specs and disabled suites",
          "Section summary",
          "Section notes"
        ],
        "Matchers": [
          "Section intro",
          "What is a matcher",
          "toBe",
          "toEqual",
          "toBeTruthy, toBeFalsy",
          "Negating matchers",
          "toBeDefined, toBeUndefined",
          "toBeNull",
          "toContain",
          "toBeNaN",
          "toThrow, toThrowError",
          "toMatch",
          "Other matchers",
          "Match anything",
          "Custom matchers",
          "Update on third party matchers! Read before the next lecture.",
          "Third party matchers",
          "Section summary",
          "Section notes"
        ],
        "Organizing your specs": [
          "Section intro",
          "Recommendations to organize our specs",
          "Nesting suites",
          "Setup and teardown",
          "beforeEach, afterEach",
          "beforeAll, afterAll",
          "Jasmine and the [this] keyword",
          "Section summary",
          "Section notes"
        ],
        "Spying on your code (stubs / test doubles)": [
          "Section intro",
          "Jasmine spies",
          "Spying on functions",
          "toHaveBeenCalled",
          "toHaveBeenCalledWith",
          "toHaveBeenCalledTimes",
          "Spying on prototypes",
          "callThrough",
          "callFake",
          "returnValue",
          "returnValues",
          "Spy and throwError",
          "Using getters",
          "spyOnProperty",
          "Section summary",
          "Section notes"
        ],
        "Testing asynchronous code": [
          "Section intro",
          "Using promises",
          "The done callback",
          "Your turn! (spec exercise)",
          "showVersion() spec solution",
          "Async and await with specs",
          "Section summary",
          "Section notes"
        ],
        "Test reports and continuous integration (CI)": [
          "Section intro",
          "The package.json",
          "Installing dependencies",
          "Karma runner",
          "Headless browser",
          "Coverage reports",
          "Pushing to version control",
          "Connecting to CI system",
          "Configuring build",
          "Build badge",
          "Section summary",
          "Section notes"
        ],
        "Extras": [
          "What's next!",
          "Bonus!"
        ]
      },
      "requirements": [
        "Basic familiarity with HTML, JavaScript (and basic CSS for an optional lecture)",
        "NO knowledge of Jasmine or unit testing is required."
      ],
      "description": "Jasmine is a behavior-driven development framework for testing JavaScript code. It does not depend on any other JavaScript frameworks. It does not require a Document Object Model (DOM), and it has a clean, obvious syntax so that you can easily write tests.\n\n\nIf you want to stand out as a JavaScript developer, you need to learn how to unit test your code. Jasmine is a great way to do so.\n\n\nBy the end of watching this course, you'll be able to:\nUnderstand what unit testing is and why it is important in today's market.\nSet up jasmine from scratch.\nWrite clean and concise suites, specs, and specifications.\nUnderstand and use all of the out-of-the-box jasmine matchers, create your custom ones, and include them in your project.\nIsolate dependencies through test-doubles, known as spies in Jasmine, for true unit testing.\nUnit test asynchronous code.\nSetup test reports and continuous integration from version control to automate your test runs.\nApply best practices when structuring your tests.\n\n\nWith this course, you'll get downloadable source code, slides, and section notes.\n\n\nPREREQUISITES\nThis is a beginner and intermediate course.\nNo previous unit testing experience is needed, just basic familiarity with JavaScript, HTML, and CSS (just optional when building our course project).\nYou don't need previous experience with a testing framework at all. We've got you covered!\n---\nPromo video music license:\nAdventures by A Himitsu - Creative Commons — Attribution 3.0 Unported— CC BY 3.0   Music released by Argofox - Music provided by Audio Library",
      "target_audience": [
        "Beginner and intermediate front-end developers new to unit testing.",
        "Developers who want to improve theirs skills and take their careers to the next levels.",
        "Front-end developers who want to learn how to unit test their Javascript.",
        "Front-end developers who are familiar with unit testing with other frameworks but want to learn how to unit test with jasmine.",
        "Developers with knowledge on other javascript unit testing frameworks but new to jasmine."
      ]
    },
    {
      "title": "Testing Angular 4 (previously Angular 2) Apps with Jasmine",
      "url": "https://www.udemy.com/course/testing-angular-apps/",
      "bio": "Learn to write unit and integration tests for your Angular apps and deploy them with confidence",
      "objectives": [
        "Write clean and maintainable tests for your Angular apps",
        "Examine how much of your code is covered by tests",
        "Write tests for re-usable components",
        "Write tests for component templates",
        "Write tests for forms",
        "Write tests for confirmation boxes",
        "Write tests for the navigation",
        "Write tests for attribute directives",
        "Work with asynchronous operations",
        "Provide fake dependencies to components under test",
        "Use spies to track function calls or replace functions"
      ],
      "course_content": {
        "Introduction to Automated Testing": [
          "What is Automated Testing",
          "Types of Tests",
          "Asking Questions"
        ],
        "Unit Testing Angular Apps": [
          "Unit Testing Fundamentals",
          "Working with Strings and Arrays",
          "Setup and Tear Down",
          "Working with Forms",
          "Working with Event Emitters",
          "Working with Spies",
          "Interaction Testing",
          "Working with Confirmation Boxes",
          "Limitations of Unit Tests",
          "Code Coverage",
          "Exercises"
        ],
        "Integration Testing": [
          "Introduction",
          "The Setup Code",
          "Generating the Setup Code",
          "Testing Property and Class Bindings",
          "Testing Event Bindings",
          "Providing the Dependencies",
          "Getting the Dependencies",
          "Providing Stubs",
          "Testing the Navigation",
          "Dealing with Route Parameters",
          "Testing RouterOutlet Components",
          "Shallow Component Tests",
          "Testing Attribute Directives",
          "Dealing with Asynchronous Operations"
        ]
      },
      "requirements": [
        "Familiarity with the fundamentals of Angular (Angular 2+)"
      ],
      "description": "As your application grows in complexity, the cost of manual testing increases exponentially. Adding a new feature or fixing a bug may break several other places in the application, and covering all those edge cases with manual testing ends up being extremely painful and nearly impossible.\n\n\n\nAutomated testing is a practice that has been adopted by a lot of successful software development teams over the past decade. You simply write code to test your application, and then run those tests in an automated fashion.\n\n\nInitially, your development time increases a bit because you need to write extra code to test your production code. However, that is the cost that you pay only once. Once you have those tests in place, you can run several thousands of them in just a few seconds over and over. Compare that with the time required to manually test every bit of your application!\n\n\nWith automated testing, you spend less time fixing bugs and doing manual repetitive tests every time you add a new feature or fix a bug. Instead, you can spend your time doing more fun things.\n\n\nIn this course, Mosh, author of several best selling courses on Udemy, takes you from the ground and gives you a solid foundation to write automated tests for your Angular apps. Whether you're an absolute beginner or have some familiarity with automated testing, this course will give you all the necessary skills to write automated tests for your Angular apps.\n\n\nYou'll learn about:\n\nAutomated testing concepts and tools\nWhat to test and how\nWriting clean, maintainable and trustworthy tests that don't lie\nTracking how much of your code is covered by tests\nTesting re-usable components\nTesting templates\nTesting forms\nTesting confirmation boxes\nTesting navigation\nTesting attribute directives\nMocking dependencies\nWorking with asynchronous operations\n\n\nIf you've taken any of Mosh's courses before, you know what you get. High quality video and audio, outstanding delivery with no mocking around.\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture and if you feel like you haven't gained the confidence to write automated tests for your Angular apps, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 15 years of professional experience. He is the author of several best-selling courses on Udemy and Pluralsight with over 74,000 students in 172 countries. His students describe him as a passionate, pragmatic and motivational instructor.\n\n\nSo, do you want to write automated tests for your Angular apps?\nEnroll in the course now and you'll start writing your first test in 10 minutes!",
      "target_audience": [
        "Developers and QA engineers who want to write automated tests for their Angular apps"
      ]
    },
    {
      "title": "API / WebServices Manual + Automation Test A-Z for Beginners",
      "url": "https://www.udemy.com/course/api-webservices-automation-testing/",
      "bio": "Complete API Manual+Automation Testing : Using PostMan & RestAssured with easy explanation - Best course for Beginners",
      "objectives": [
        "- By the end of this course you will be able to implement API Automation in your Automation/Developments Projects *This is completely design for Beginner*.",
        "- You will be able to answer What, Why and when to use with easy explanation.",
        "- You will gain confidence with “Real time scenario” so that you can answer to anybody with confidence- This is Main focus.",
        "- Students can learn Manual API Testing using POSTMan",
        "- Play with JSON Request & Response with Live API Calls",
        "- Complete POJO Class Use with Live Examples",
        "- Get all the notes and Practical Example Covered in this Course",
        "- Basic of API Automation Using RestAssured",
        "- One can Practice Interview and MCQ via quizzes",
        "- Live + Online Query session if Required",
        "- Best Course for Beginners"
      ],
      "course_content": {
        "Introduction": [
          "Why This Course ? Must Watch till End",
          "Need Support !!",
          "Introduction Part -1",
          "Introduction Part -2",
          "Better Learning Experience - Must for new to Udemy | Optional who know",
          "How to Reach out to Instructor ?"
        ],
        "Very Basic API & WebService Introduction": [
          "What is an API ?",
          "Why we need API ?",
          "API & WebServices Real time Example on Live Application",
          "API Architecture Explanation",
          "Difference Between API & WebServices ?",
          "Practice Exercises and Quiz"
        ],
        "HTTP : REST and SOAP Basic Concepts": [
          "What is HTTP ?",
          "What is REST & SOAP with funny Examples ?",
          "Difference between REST & SOAP ?",
          "Practice Exercises and Quiz"
        ],
        "API Real time Examples with Explanation": [
          "Basic of Service, URI, URL & End Points",
          "Path & Query Parameter in API calls",
          "HTTP methods for RestAPI & CRUD Operation",
          "Real time API Call in Application",
          "Practice Exercises and Quiz"
        ],
        "Manual API Testing using PostMan": [
          "What is Manual API Testing?",
          "What is PostMan? How to do API Testing using it?",
          "PostMan Setup & Installation",
          "Download PostMan Native App",
          "Practice Exercises and Quiz"
        ],
        "API Testing using different Free Website for Practice": [
          "Free Website examples for API Testing - Practice Purpose",
          "GET method - API Testing",
          "GET method - Example",
          "POST method - API Testing",
          "PUT method - API Testing",
          "DELETE method - API Testing",
          "PATCH method - API Testing",
          "Practice Exercises and Quiz"
        ],
        "Understanding API Errors Code with Complete Practical Examples": [
          "What is Error & status code in API Testing?",
          "All Actual Response code - with explanation",
          "Frequently Used Errors code & Differences - VVI for Interview",
          "Practice Exercises and Quiz"
        ],
        "API Automation Basics": [
          "What is API Automation?",
          "Why do we need API automation?",
          "What is RestAssured?",
          "What is Rest API?"
        ],
        "Installation & Setup of RestAssured": [
          "Download & Install JAVA - on Windows",
          "Download & Install JAVA - on MAC",
          "Setup Maven in MAC",
          "Setup Maven in Windows",
          "Downloading all the Pre-Requisite tools/Library",
          "Setup all the Library in one Editor"
        ],
        "Getting Started with API Automation Testing": [
          "RestAssured Style - Getting Started",
          "Automation Basic GET method API",
          "Automating Path Parameter Examples",
          "Automating Query Parameter Examples",
          "Automating Basic POST method API",
          "Automating Basic PUT method API",
          "Automating Basic DELETE method API",
          "Automating Basic PATCH method API",
          "Practice Exercises and Quiz"
        ]
      },
      "requirements": [
        "*******You need NOT have any Prior API Testing experience to start this course*********",
        "******Anyone can follow this course comfortably******",
        "- Best Course for Beginners",
        "- Very very very easy explanation, anyone can understand and learn for sure !!"
      ],
      "description": "Course Overview: Master API Testing & Automation with Java!\nUpdated with the latest examples and trends to keep you up to date with the ever-evolving world of API testing!\nWhat is API Testing?\nAPI stands for Application Programming Interface, and it plays a pivotal role in modern software development. With businesses relying heavily on RESTful APIs and microservices, API testing has become an integral part of the testing cycle. This course helps you understand how to perform manual API testing and automate API testing effectively using Java and REST Assured.\n\n\nWhy is This Course Unique?\nThis course stands out because it focuses on real-time scenarios to ensure you understand what, why, and how API testing works in the industry. You’ll gain insights into when and why to choose specific testing approaches, making you job-ready.\nKey Features of This Course:\nManual API Testing: Understand the core concepts of API testing before jumping into automation.\nAPI Automation: Learn API automation using REST Assured and Java with real-world applications.\nLive Project: Work with a live web app to practice end-to-end API testing and automation.\nNo Prior Experience Required: Whether you're new to coding or API testing, this course covers everything you need to know from scratch.\nCore Java: A basic understanding of Core Java is beneficial but not mandatory. We provide a full Java refresher section in the course to make sure you are up to speed.\n\n\nWhat Will You Learn in This Course?\nBasic to Advanced API Testing Concepts: Start with manual testing and move towards automating API tests.\nLearn API Testing Tools: Get hands-on experience with Postman, SOAP UI, and REST Assured for automation.\nReal-World Examples: All examples are taken from industry-level scenarios to help you understand best practices in API automation.\nInterviews & Quizzes: Every section comes with interview questions and quizzes to help you prepare for your next job or interview.\nLive Project Exposure: Gain real-world exposure by automating APIs of a live application, just like in your future job.\nJob-Ready Skills: By the end of this course, you’ll be ready to implement API testing at your workplace or land a high-paying job in API automation testing.\nWe assume that students have no experience in API Testing and start every topic from basics level.\nNO PRIOR CODING/API EXPERIENCE NEEDED, this course covers all the necessary topics.\n\n\nWhy This Course is Your Best Choice\nReal-Time Learning: Learn API testing using real-life examples to understand how the industry works.\nComprehensive Coverage: Covers manual testing and API automation with Java and REST Assured.\nIndustry-Ready: Gain the skills and confidence needed to implement API testing at any organization.\nFlexible Learning: No prior experience required. We cover everything step-by-step, starting from the basics.\nLifetime Access: Watch and learn at your own pace, and revisit the material anytime to refresh your skills.\n\n\nMost students enroll from below categories:\nAPI Testing with Java\nManual API Testing\nAPI Automation with REST Assured\nPostman and SOAP UI for API Testing\nAPI Automation Testing Course\nAPI Testing Tutorial for Beginners\nReal-Time API Testing Projects\nREST API Testing with Java\nAPI Automation Interview Preparation\nLearn API Testing from Scratch\nJava API Testing for Automation\nBeginner to Advanced API Testing\nLive API Testing Projects\nAPI Test Automation with REST Assured\nQA Automation with REST APIs\nPostman API Testing Course\nAPI Testing Career Preparation\nJob-Ready API Automation Skills\nAPI Testing for SDETs\n\n\nEvery Sections has INTERVIEW QUESTIONS + Quiz- to practice/master the learning process.\nIt will be very helpful for your NEXT JOB/Interview.\n\n\nThis is life time supported course - Any time you can access these course via Mobile App or Web App\n\n\nAt the end of this course you can pick any Web Application API over internet and can automate it comfortably with all necessary validations.\n\n\nRegards,\nPankaj Gupta",
      "target_audience": [
        "* Manual testers, Non-programming aware testers interested in learning API/Automation",
        "* Freshers/Graduates/ Software Testers",
        "* Automation Tester & SDET",
        "* Any Developer who have to implement something using RestAssured",
        "* Anyone who wants to Understand Basic of API Automation Testing",
        "- Best Course for Beginners",
        "- One of the easiest course on Udemy for API Testing"
      ]
    },
    {
      "title": "Learn Data Structures & Algorithms for Interviews - PART 1",
      "url": "https://www.udemy.com/course/learn-data-structures-algorithms-java/",
      "bio": "Master Time Complexities, Recursion, Linked Lists, Stacks, Queues, Heaps, HashMaps, Arrays, Sort and Search Algorithms",
      "objectives": [
        "Learn popular Data Structures and Algorithms from Scratch using Java with simple and easy approach",
        "Improve your Problem solving Skills with many logical techniques and Practice exercises",
        "Become more confident and Ace coding Interviews from top tech companies",
        "Deeper understanding on Stacks, Queues, LinkedList, Hashes, Heaps, Arrays etc",
        "Learn various Search and Sort Algorithms with their time complexity estimation",
        "Learn and Implement Recursive Programming to solve the tricky Programming puzzles"
      ],
      "course_content": {
        "Introduction": [
          "How this Course is designed to master Data Structures & Algos?",
          "Important Note",
          "Prerequisites to install Java and eclipse editor for programming"
        ],
        "Recursion Programming": [
          "Where are Code files?",
          "What is Recursion? Rules of recursion to simplify the programs",
          "Algorithm - Get Sum of elements of Array using Recursion - Explained",
          "Generating Java recursion method from the designed Algorithm for Sum of elements",
          "Java Program for sum of elements",
          "Algorithm - Generate Factorial Series for any number with Recursion - explained",
          "Java Program to print Fibonacci Series using Recursion",
          "Algorithm - Generate Fibanocci Series using with Recursion - explained",
          "Java Program to print Fibonacci Series using Recursion"
        ],
        "LinkedList": [
          "Where are Code files?",
          "Introduction to LInked Lists and understanding their structures",
          "Algorithm - Add the Nodes at the end of Linked List Explained",
          "Java Program in representing the Node and defining the Linked List",
          "Algorithm - How to print all the values in the Linked List - Explain",
          "Assignment - Check if there is Node with value 6",
          "Java Program to Add Nodes and Print the values in the LinkedList",
          "Algorithm - How to Add the nodes in the beginning of the Linked List - Explained",
          "Algorithm - How to add Nodes at the Given Index as Input to the method",
          "Assignment - Java program to add the nodes in the beginning",
          "Java Program to add the Nodes at the given index - example",
          "Algorithm - How to delete the Nodes at the end of LInked List - explained",
          "Algorithm - removing the first Node from the Linked List - explained",
          "Algorithm- Delete Node at specified Index of LinkedList- Explained",
          "Assignment - Delete node at specified index",
          "Assignment - Remove the node which has even values",
          "Algorithm - Reversing the Linked List without changing head & tail",
          "Java Program to demonstrate Reverse LinkedList - Example"
        ],
        "Stacks": [
          "What is Stack data structure? and its main operations",
          "Implementation of Stack using Java Util Stack class and its methods",
          "Algorithm - How to reverse the Stack with temporary Stack",
          "Java Program to reverse the stack based on the discussed Algorithm",
          "Assignment - Insert the item in the Stack for given index",
          "Solution to the logic of inserting item in the Stack on any given index",
          "Algorithm - Find the minimum element from the Stack using temporary Stack",
          "Java Program logic to find out the minimum element from Stack",
          "Algorithm - Sort the given Stack in asc/desc order",
          "Java program logic to Sort the given stack using temporary Stack",
          "Assignment - Check if the String is balanced using Stack",
          "Solution - Java program to check if String is balanced using Stack"
        ],
        "Queues": [
          "Introduction to Queues data structure and its operations",
          "Implementing Queue Enqueue and Dequeue operations using Arrays",
          "Java code review of Array Queue implementation algorithm",
          "Assignment - Implement Queue Operations using Stack",
          "Java Code Algorithm in implementing Queues using Stacks",
          "InBuilt Queue Interface implementation Classes - ArrayDeqeue",
          "Assignment - Reverse the Queue elements",
          "Solution - Reversing the Queue using Stack Data structure",
          "What are Priority Queues and how it works internally to store data",
          "Assignment - Implementation of Priority queue enqueue method using Arrays"
        ],
        "Time complexity": [
          "Introduction to Time Complexity and what is constant time O(1)",
          "Understanding the time complexity between O(1) and O(n) for any program",
          "Sample Programs for estimating the time complexity in given logic",
          "Understand time complexities of O(n~2) O(logn) and O(n!)"
        ],
        "Sorting Algorithms": [
          "What is Bubble Sort and how to design the sort algorithm",
          "Java program to implement Bubble sort and its Time complexity",
          "Selection Sort and its design algorithm to sort the array",
          "Java program to implement Selection sort and its Time complexity",
          "Introduction to Merge sort and its Divide & Conquer Strategy",
          "Java program to implement Divide the Array into two parts with recursion",
          "Algorithm to implement Merge of two arrays with recursion",
          "End to end java code on implementing Merge Sort with O(nlogn) time complexity",
          "Quick Sort Lecture - Coming Soon"
        ],
        "Search Algorithms": [
          "What is Linear Search? Implement the Strategy with time complexity",
          "What is Binary Search? An algorithm to implement Binary search",
          "Algorithm to implement Binary Search with divide & Conquer recurssion",
          "Java program to implement the search with and with out recursion strategy",
          "Jump Search Algorithm with minimal time complexity - Explain",
          "Assignment Solution - Java program to implement Sqrt(n) time complexity search"
        ],
        "Binary Trees": [
          "What are Tree Data Structures and Importance of Binary trees",
          "What are Binary Search trees and how does it works on creation",
          "Assignment - Implement Binary Search Tree with the given list of elements",
          "Algorithm to implement binary Search tree as per the tree sort guidelines",
          "Java code on working with Binary Search tree implementation with examples",
          "Extracting the values from Search tree in sorted order (Inorder traversal)",
          "Finding the minimum element in the Binary Search tree with O(logn) complexity",
          "Implementing the Java code with example on extracting the minimum element",
          "How to get height of the Binary Search tree using recursion",
          "Java code in implementing the Binary Search tree height calculation",
          "How to Search for an element in the Binary Search tree with O(logn) complexity"
        ],
        "HashMaps": [
          "What is Map Data Structure and its operations to store Data",
          "Hash Map methods to store and retrieve the key value data",
          "How to determine Default Capacity and Load Factor for the Hash map",
          "How HashMap internally Store the Data? Importance of Hash function",
          "Importance of HashCode & generating Hash Value for the String",
          "What is HashMap Collision and how to resolve the Collision",
          "Commonly asked Interview Questions on HashMap DataStructure"
        ]
      },
      "requirements": [
        "No experience with data structures or algorithms needed",
        "Basic understanding of Java or any programming language"
      ],
      "description": "Your Search on Learning Data Structures & Algorithms ends here.  Ds & Algos are very easy if you know how exactly they work! And I am here to show its implementation process with  very easy approach using Whiteboard teaching so that you will master on all the essential concepts to clear the Interviews.\nThe examples I picked in this course will fine tune your thought process and enhance your logical thinking ability. With the approach of  Whiteboard teaching, You will have practical understanding of how Data structures Problems can be analyzed and solved!!\nThere are tons of Assignments & Interview Questions with solutions  all over the course for practice so that you can progress in the course confidently\nIn this course, I use Java to teach the concepts but you can apply these concepts in any programming language. Our focus is on data structures and algorithms, not programming languages and tools.\nBelow are the list of Data Structure topics you will master from this tutorial\n\n\n1. Recursion\n2. Linked List\n3. Stacks\n4. Queues\n5. Time Complexity\n6. Search Algorithms\n7. Sort Algorithms\n8. Binary Trees\n9. Arrays & Heaps\n10. Hash Map with its internal working process\n\n\n\n\nBy end of this course, you will gain enough confidence in solving the Data Structure puzzle questions and also gain the ability to write algorithms for any given problem",
      "target_audience": [
        "Software engineers",
        "College Graduates",
        "Computer Science Students"
      ]
    },
    {
      "title": "Software Automation Testing with JS/Playwright for Beginners",
      "url": "https://www.udemy.com/course/intro-to-manual-and-automation-software-testing-with-chatgpt/",
      "bio": "Learn JavaScript/Playwright automation testing for manual testers and automation newcomers with the help of GenAI",
      "objectives": [
        "Learn Playwright Automation for Beginners with the help of Generative AI",
        "Learn how a Manual QA Engineer can Automate work with the help of ChatGPT in a short period of time",
        "Learn how to create and run JavaScript/Playwright test script for Login, My Account, End-to-Eng purchase flow",
        "Learn how to build a simple framework with Playwright using Page Object Model",
        "Each video includes real-life examples, which helps to better understand the usage of AI(ChatGPT) on the real projects",
        "Learn how to use AI(ChatGPT) for Automation Software Testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "JavaScript/Playwright with help of ChatGPT": [
          "001 - How to set up the JavaScript/Playwright environment",
          "002 - How to set up a new project and install Playwright with npm init",
          "002.1 - JavaScript/Playwright test script configs and first launch",
          "Source codes for each lecture",
          "Troubleshooting - Understand the Logic, Not Just the Instructions",
          "003 - JavaScript/Playwright test case for website login with ChatGPT",
          "JavaScript Playwright test case for Login - Troubleshooting",
          "004 JS_Playwright test case for login Negative cases with Chat GPT",
          "005 - JavaScript/Playwright test cases for Adding address with ChatGPT",
          "3 JavaScript Playwright MyAccount - Troubleshooting",
          "006 - JavaScript/Playwright test case for End-to-Eng purchase flow",
          "JavaScript Playwright - End-to-Eng purchase flow - Troubleshooting",
          "007 - XPath Playwright Locators",
          "008 - JavaScript/Playwright End-to-End Purchase Flow: Optimization with XPath",
          "009 - Coming Soon",
          "010 - How to install GITHUB",
          "011 - How to push project to GITHUB",
          "012 - How To Pull Project from GitHub to Visual Studio Code",
          "013 - POM model intro + URL (Static Values)",
          "014 - POM - Consent Pop-up (Dynamic Interactions)",
          "015 - POM - XPath",
          "016 - POM - Test Data",
          "017 - Login - Code optimization with ChatGPT",
          "018 - My Account - Code Optimization"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone,\nThis course is about how a Manual Software Tester or a Tester who would like to start automation can do that with the help of Playwright and Generative AI.\n\nThe course will be useful for testers:\nAbsolute beginners in Software Testing\nAnyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT\nAnyone who wants to learn the basics of Playwright from scratch\nEvery Manual Software Tester who receives requests from the client for automation of the testing\nIn this course, you will learn how to write test scripts for specific test cases using GenAI as a starting point. However, this is just the first step. Understanding automation is essential; no AI can do the work for you. We will progress from poorly written code to optimized solutions to help you grasp how everything works. Ultimately, you'll be able to build a simple automation framework for your project using Playwright.\n\nOverview of Lectures:\n001 - How to Set Up the JavaScript/Playwright Environment\n002 - How to Set Up a New Project and Install Playwright with npm init\n002.1 - JavaScript/Playwright Test Script Configurations and First Launch\n003 - JS/Playwright Test Case for Website Login with ChatGPT\n004.2 - JS/Playwright Test Cases for Login Negative Scenarios with ChatGPT\n005 - JavaScript/Playwright Test Cases for Adding Address with ChatGPT\n006 - JavaScript/Playwright Test Case for End-to-End Purchase Flow\n007 - XPath Playwright Locators\n008 - JavaScript/Playwright End-to-End Purchase Flow: Optimization with XPath\n009 - Coming Soon\n010 - How to Install GitHub\n011 - How to Push Your Project to GitHub\n012 - How to Pull Your Project from GitHub to Visual Studio Code\n013 - Introduction to the POM Model + URL (Static Values)\n014 - POM - Consent Pop-up (Dynamic Interactions)\n015 - POM - XPath\n016 - POM - Test Data\n017 - Login - Code Optimization with ChatGPT\n018 - My Account - Code Optimization\n\n\nEach lecture in this course is practical. Therefore, to complete the course, we have created special components on our website and attached resources with code for each lecture where necessary. The final code will be available in the lecture materials, on our website, and GitHub.\nWe hope you will enjoy the course and feel free to write reviews and send topics that you would like to see,\nPrepare a cup of coffee or another favorite drink and enjoy the course!",
      "target_audience": [
        "Absolute beginners in Software Testing",
        "Anyone who wants to learn the basics of Playwright from scratch",
        "Experienced Software Testers who want to learn how to use ChatGPT for testing purposes",
        "Every Manual Software Tester who receives requests from the client for automation of the testing",
        "Anyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT"
      ]
    },
    {
      "title": "Manual Software Testing Interview (Q&A for QA)",
      "url": "https://www.udemy.com/course/top-10-software-testing-interview-questions-answers/",
      "bio": "Improve and deepen knowledge of software testing, manual testing, qa (quality assurance) and become a software tester",
      "objectives": [
        "Answers to the Top 100 Software Testing Theory Interview questions",
        "Each answer includes real-life practical example, which helps to better understand the theory",
        "Each answer includes a video for those who prefer visual content",
        "Each answer includes an article for those who to read and analyze thoughtfully"
      ],
      "course_content": {
        "What is Testing?": [
          "Intro to Software Testing Theory",
          "What is Software Testing?",
          "What is Software Testing?",
          "What are software testing objectives?",
          "What are software testing objectives?",
          "Why is Testing necessary and important?",
          "Why is Testing necessary and important?",
          "What is a bug?",
          "What is a bug?",
          "What is the Difference between Error, Bug, and Failure?",
          "What is the Difference between Error, Bug, and Failure?",
          "What are the 7 Testing principles?",
          "What are the 7 Testing principles?",
          "Principle 1. Testing shows the presence of defects, not their absence",
          "Principle 1. Testing shows the presence of defects, not their absence",
          "Principle 2. Exhaustive testing is impossible",
          "Principle 2. Exhaustive testing is impossible",
          "Principle 3. Early testing saves time and money",
          "Principle 3. Early testing saves time and money",
          "Principle 4. Defects cluster together",
          "Principle 4. Defects cluster together",
          "Principle 5. Beware of the pesticide paradox",
          "Principle 5. Beware of the pesticide paradox",
          "Principle 6. Testing is context dependent",
          "Principle 6. Testing is context dependent",
          "Principle 7. Absence-of-errors is a fallacy",
          "Principle 7. Absence-of-errors is a fallacy",
          "What is the difference between QA and QC and testing?",
          "What is the difference between QA and QC and testing?",
          "What is the importance of Manual testing and do we still need it?",
          "What is the importance of Manual testing and do we still need it?",
          "What is the difference between Verification and Validation?",
          "What is the difference between Verification and Validation?"
        ],
        "SDLC (Software Development Lifecycle)": [
          "What is SDLC? What software development methodologies do you know?",
          "What is SDLC? What software development methodologies do you know?",
          "What is the Waterfall Model?",
          "What is the Waterfall Model?",
          "What are Iterative and incremental development models?",
          "What are Iterative and incremental development models?",
          "What is Agile? What Is the Agile Manifesto?",
          "What is Agile? What Is the Agile Manifesto?",
          "What is Scrum?",
          "What is Scrum?",
          "What is Kanban?",
          "What is Kanban?",
          "What is the difference between Scrum and Kanban?",
          "What is the difference between Scrum and Kanban?"
        ],
        "STLC (Software Testing Life Cycle)": [
          "What is STLC?",
          "What stages of STLC do you know?",
          "What is STLC? What stages of STLC do you know?",
          "What are the Entry and Exit criteria?",
          "What are the Entry and Exit criteria?",
          "What is a Test Environment? Why is a test environment needed?",
          "What are the different test levels?"
        ],
        "Test Documentation": [
          "What is a Bug(Defect) report? What to include in a Bug report?",
          "What is a Defect/Bug Life Cycle?",
          "What is the difference between Priority and Severity?",
          "What is a Test Case? What to include in a Test Case?",
          "What is a Test Plan? What does the test plan consist of?"
        ],
        "Test Types": [
          "What types of testing do you know?",
          "What types of testing do you know?",
          "What is Functional Testing?",
          "What is Non-functional testing?",
          "What types of non-functional testing do you know?",
          "What is GUI testing?",
          "What is the difference between Localization and Internationalization testing?",
          "What is Change-related testing? What are the Change-related testing types?",
          "What is Confirmation testing (re-testing)?",
          "What is Regression testing?",
          "What is the difference between regression testing and re-testing?",
          "What is the difference between Smoke and Sanity Testing?",
          "What is the difference between Smoke and Sanity Testing?",
          "What is the difference between Positive testing and Negative testing?"
        ],
        "Test Design Techniques": [
          "What is the test design technique? What test design techniques do you know?",
          "What is test design technique? What test design techniques do you know?",
          "What do you understand by Black box, Gray box, and White box testing?",
          "What is Review and what type of It do you know?",
          "Please explain the Equivalence partitioning technique?",
          "Please explain the Equivalence partitioning technique?",
          "What is Boundary Values Analysis(BVA)?",
          "What is Decision Table testing?",
          "What is State Transition testing?",
          "What is the Use Case testing? Use Case vs Test Case?"
        ],
        "Coffee Break": [
          "Coffee Break"
        ],
        "Client-Server Model": [
          "Intro to Client-Server Model",
          "What is the Client-Server model, and how does it work?",
          "What is the Client-Server model, and how does it work?",
          "What are the core components of an HTTP request?",
          "What are the core components of an HTTP response?",
          "What tools for Capturing and Analyzing Network Traffic do you know?",
          "What tools for Capturing and Analyzing Network Traffic do you know?",
          "Wireshark Tutorial for Beginners"
        ],
        "Web Testing": [
          "Intro to Web Testing",
          "What is Web testing, and why is it important?",
          "What is the difference between Cache and Cookies?",
          "What is Cache?",
          "What are Cookies?",
          "What types of Websites and Web Applications do you know?",
          "What is E-Commerce?",
          "What Web testing tools do you know?",
          "What Web testing tools do you know?",
          "Chrome DevTools Tutorial for Beginners",
          "BrowserStack Tutorial for Beginners",
          "How to use ChatGPT for Software Testing?",
          "Top 3 Best AI Alternatives to CHATGPT for Software Testing",
          "Web Testing Checklist"
        ],
        "Mobile Testing": [
          "Intro to Mobile Testing",
          "What is mobile testing, and why is it important?",
          "What is mobile testing, and why is it important?",
          "What's the difference between Native vs. Web vs. Hybrid Apps?",
          "What's the difference between Native vs. Web vs. Hybrid Apps?",
          "What are the different types of Mobile Devices?",
          "What versions of Android and iOS are currently in use on the market",
          "Interrupt Testing in Mobile Application",
          "What the update/upgrade mobile testing is?",
          "Mobile App Installation and Uninstaltion testing tutorial",
          "What Mobile tools do you know?",
          "What Mobile tools do you know?",
          "Xcode Tutorial for Beginners",
          "Android Studio Tutorial for Beginners",
          "Mobile Testing Checklist"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone. This course is about preparing for an interview for a Software Tester, also known as a QA. In most interviews there are two parts, testing your soft skills and technical knowledge, this course is about the second part, the technical part.\nThe course will be useful for testers:\n1. Beginners in software testing, to deepen knowledge of software testing theory\n2. Experienced software testers who want to recall the basic knowledge of software testing theory\nThe main task of the course is to deepen your knowledge of software theory. To help you answer questions clearly and confidently at the interview, we did three things, each answer to the question includes\n1. Answer from official literature (standards, certifications, other documents)\n2. Answer based on analyzed articles on the Internet (we call it \"Human Language\")\n3. A real-life example to help you understand complex theoretical concepts\nThe course answers the following questions, which are divided into sections:\nTesting theory\nWhat is Testing?\nWhat are software testing objectives?\nWhy is Testing necessary and important?\nWhat is a bug?\nWhat is the Difference between Error, Bug, and Failure?\nWhat are the 7 Testing principles?\nPrinciple 1. Testing shows the presence of defects, not their absence\nPrinciple 2. Exhaustive testing is impossible\nPrinciple 3. Early testing saves time and money\nPrinciple 4. Defects cluster together\nPrinciple 5. Beware of the pesticide paradox\nPrinciple 6. Testing is context-dependent\nPrinciple 7. Absence-of-errors is a fallacy\nWhat is the difference between QA and QC and testing?\nWhat is the importance of Manual testing, and do we still need it?\nWhat is the difference between Verification and Validation?\nSDLC  (Software Development Lifecycle)\nWhat is SDLC? What software development methodologies do you know?\nWhat is the Waterfall Model?\nWhat are Iterative and incremental development models?\nWhat is Agile? What Is the Agile Manifesto?\nWhat is Scrum?\nWhat is Kanban?\nWhat is the difference between Scrum and Kanban?\nSTLC (Software Testing Life Cycle)\nWhat is STLC?\nWhat stages of STLC do you know?\nWhat are the Entry and Exit criteria?\nWhat is a Test Environment? Why is a test environment needed?\nWhat are the different test levels?\nTest Documentation\nWhat is a Bug(Defect) report? What to include in a Bug report?\nWhat is a Defect/Bug Life Cycle?\nWhat is the difference between Priority and Severity?\nWhat is a Test Case? What to include in a Test Case?\nWhat is a Test Plan? What does the test plan consist of?\nTest Types\nWhat types of testing do you know?\nWhat is Functional Testing?\nWhat is Non-functional testing?\nWhat types of non-functional testing do you know?\nWhat is GUI testing?\nWhat is the difference between Localization and Internationalization testing?\nWhat is Change-related testing? What are the Change-related testing types?\nWhat is Confirmation testing (re-testing)?\nWhat is Regression testing?\nWhat is the difference between regression testing and re-testing?\nWhat is the difference between Smoke and Sanity Testing?\nWhat is the difference between Positive testing and Negative testing?\nTest Design Techniques\nWhat is the test design technique? What test design techniques do you know?\nWhat do you understand by Black box, Gray box, and White box testing?\nWhat is Review and what type of It do you know?\nPlease explain the Equivalence partitioning technique?\nWhat is Boundary Values Analysis(BVA)?\nWhat is Decision Table testing?\nWhat is State Transition testing?\nWhat is the Use Case testing? Use Case VS Test Case?\nClient-Server Model\nWhat is the Client-Server model, and how does it work?\nWhat are the core components of an HTTP request?\nWhat tools for Capturing and Analyzing Network Traffic do you know?\nWireshark Tutorial for Beginners\nWeb Testing\nWhat is Web testing, and why is it important?\nWhat is the difference between Cache and Cookies?\nWhat is Cache?\nWhat are Cookies?\nWhat types of Websites and Web Applications do you know?\nWhat is E-Commerce?\nWhat Web testing tools do you know?\nChrome DevTools Tutorial for Beginners\nBrowserStack Tutorial for Beginners\nWeb Testing Checklist\nMobile Testing\nWhat is mobile testing, and why is it important?\nWhat's the difference between Native vs. Web vs. Hybrid Apps?\nWhat Mobile tools do you know?\nXcode Tutorial for Beginners\nAndroid Studio Tutorial for Beginners\nMobile Testing Checklist\nAPI testing\nWhat is API testing, and why is it important?\nWhat are the different types of APIs?\nWhat is an API?\nWhat is a REST API?\nWhat is REST?\nWhat is a REST API?\nHow does the REST API work?\nWhat API testing tools do you know?\nPostman Tutorial for Beginners\nJMeter Tutorial for Beginners\nAPI Testing Checklist\nWe hope you will enjoy the course and feel free to write reviews or send us the questions you were asked at the interview, we will prioritize and add them to the full version of the course.\nPrepare a cup of coffee or another favorite drink and enjoy the course!\nHope to see you in the first lecture!",
      "target_audience": [
        "Absolute beginners in Software Testing",
        "Experienced software testers who want to recall the basic knowledge of software testing theory",
        "Anyone who wants to take the first steps in the career of a Software tester (QA)",
        "Anyone who likes to watch videos about Software Theory or read articles on the same topic"
      ]
    },
    {
      "title": "Postman: The Complete Guide - REST API Testing",
      "url": "https://www.udemy.com/course/postman-the-complete-guide/",
      "bio": "Postman API testing for manual and automated tests. Automate with Newman, GitLab, Jenkins or any other CI tool.",
      "objectives": [
        "Create GET, POST, PUT, DELETE requests",
        "Understand GET vs POST request method",
        "Work with real-world APIs (Github API, Trello API)",
        "JavaScript basics for tests",
        "Write API tests in Postman",
        "Use data from Excel files (CSV) or JSON",
        "Use Postman variables to create workflows and scenarios",
        "Run API tests with Newman in Jenkins, GitLab CI or TeamCity",
        "Use OAuth2, API keys, tokens, JWT, basic auth",
        "Test file uploads",
        "Use mock servers",
        "Collaborate using Team Workspaces"
      ],
      "course_content": {
        "Introduction and first steps in Postman": [
          "Course overview",
          "Postman community",
          "About the course",
          "How to install Postman",
          "A quick introduction to APIs",
          "Introduction to Postman & APIs",
          "Your first Postman request",
          "Troubleshooting Postman errors",
          "Using Postman on the web",
          "A brief overview of HTTP",
          "The Postman Landscape",
          "First steps in Postman"
        ],
        "Creating REST API requests with Postman": [
          "Section overview",
          "Resources for this section",
          "Postman collections",
          "Storing configuration in collection variables",
          "Modifying collection variables",
          "Postman collections and variables",
          "GET request",
          "Visualizing responses in Postman",
          "Query parameters",
          "Misconceptions about API parameters",
          "Query parameters",
          "Assignment - Query parameters",
          "Guided Assignment - Step by step instructions",
          "Assignment - Query parameters - Solution",
          "Shortcuts in Postman",
          "Path variables",
          "Troubleshooting Path variables",
          "Query params vs Path variables",
          "Path variables",
          "The business processes and rules behind an API",
          "POST request",
          "Assignment - Check cart contents",
          "Guided Assignment - Step by step instructions",
          "Assignment - Check cart contents - Solution",
          "JSON format explained",
          "POST request with JSON",
          "Troubleshooting POST requests",
          "GET vs POST",
          "POST requests with JSON",
          "API Authentication",
          "Troubleshooting HTTP status codes",
          "Assignment - Place an order",
          "Guided Assignment - Step by step instructions - Place an order",
          "Troubleshooting - Place an order",
          "Assignment - Place an order - Solution",
          "Using random data in requests (random variables)",
          "Working with HTTP headers in Postman",
          "Common questions about HTTP headers",
          "Headers vs query vs params",
          "Exporting and Importing a Postman collection",
          "PATCH request method",
          "Assignment - PATCH request method",
          "Assignment - PATCH request method - Solution",
          "Using Postman variables to avoid duplication",
          "PATCH request method - continued",
          "PUT request method",
          "DELETE request method",
          "Assignment - Delete an order",
          "Guided Assignment - Step by step instructions",
          "Assignment - Delete an order - Solution",
          "GET, POST, PUT, PATCH … What is the difference?",
          "HEAD request method",
          "HTTP request methods quiz"
        ],
        "Practice section - Building REST API requests": [
          "Section overview",
          "Why learn to use real-world APIs?",
          "Troubleshooting",
          "Using the API documentation",
          "Using the API documentation - Assignment",
          "Guided Assignment - Using the API documentation",
          "Using API documentation - Assignment Solution",
          "Using identifiers when working with resources",
          "Troubleshooting - API call is returning HTML",
          "Assignment - Creating resources - Lists",
          "Guided Assignment - Creating resources - Lists",
          "Assignment - Creating resources - Lists - Solution",
          "Assignment - Creating resources - Cards",
          "Guided Assignment - Creating resources - Cards",
          "Assignment - Creating resources - Cards - Solution",
          "Assignment - Managing resources",
          "Guided Assignment - Managing resources",
          "Assignment - Managing resources - Solution",
          "Assignment - Deleting resources",
          "Guided Assignment - Deleting resources",
          "Assignment - Deleting resources - Solution",
          "Protect your API keys"
        ],
        "Introduction to API testing & JavaScript": [
          "Section overview",
          "A short history of JavaScript",
          "Your first Postman script",
          "Your first API test in Postman",
          "Defining JavaScript variables",
          "Using “let” to define JavaScript variables",
          "Conventions for naming JavaScript variables",
          "Working with JavaScript variables",
          "Constants in JavaScript",
          "Data Types in JavaScript",
          "Data Types in JavaScript",
          "Working with JavaScript variables",
          "Swap two variables in JavaScript",
          "Variables",
          "Mathematical operations",
          "Mathematical operations",
          "Code blocks and variable scopes",
          "Defining a function in JavaScript",
          "Returning values from functions",
          "Built-in JavaScript functions",
          "Generate a random email address",
          "Arrow functions",
          "Callback functions",
          "Callback functions in Postman",
          "Objects in JavaScript",
          "Object methods",
          "Object methods - using a property from the object",
          "Alternative syntax for defining and accessing object properties",
          "JavaScript objects and JSON",
          "Parsing JSON in Postman",
          "Writing assertions in Postman",
          "Storing a list of items - Arrays in JavaScript",
          "Navigating object properties and arrays",
          "Navigating complex data structures in Postman",
          "Navigating complex data structures",
          "Built-in methods when working with arrays",
          "Array methods",
          "Conclusion"
        ],
        "Writing basic API tests": [
          "Introduction",
          "Resources for this section",
          "Verifying the response status code",
          "Assignment - Adding status code tests",
          "Guided Assignment - Adding status code tests",
          "Assignment - Adding status code tests - Solution",
          "Testing the response body",
          "Asserting the data type of a property",
          "The Postman Cheat Sheet & Quick Reference Guide",
          "Refactoring tests",
          "Testing the API error handling",
          "Organizing requests and reusing tests",
          "Assignment - Reduce duplication in tests",
          "Guided Assignment - Reduce duplication in tests",
          "Assignment - Reduce duplication in tests - Solution",
          "Boundary testing",
          "Assignment - Boundary testing",
          "Assignment - Boundary testing",
          "Assignment - Boundary testing - Solution",
          "Documenting requests in Postman"
        ],
        "Using Postman variables in scripts": [
          "Section overview",
          "Setting Postman variables from scripts",
          "Request chaining (passing data from one request to the other)",
          "Troubleshooting setting collection variables from scripts",
          "Assignment - Set the cartId in a Postman variable",
          "Guided Assignment - Set the cartId in a Postman variable",
          "Assignment - Set the cartId in a Postman variable - Solution",
          "Assignment - Store all dynamic data in Postman variables",
          "Guided Assignment - Store all dynamic data in Postman variables",
          "Assignment - Store all dynamic data in Postman variables - Solution",
          "Getting Postman variables from scripts",
          "Assignment - Getting Postman variables from scripts",
          "Guided Assignment - Getting Postman variables from scripts",
          "Assignment - Getting Postman variables from scripts - Solution",
          "Working with Postman collection variables from scripts",
          "JavaScript: Comparing data types",
          "JavaScript: For loop statement",
          "for loop statement",
          "JavaScript: Iterating over arrays (for loop)",
          "Iterating over arrays (for loop)",
          "JavaScript: Conditionals - if statements",
          "Conditionals",
          "Searching for data in a response (for loop)",
          "Writing assertions against an array",
          "Iterating over arrays (forEach loop)",
          "Iterating over arrays (forEach loop)",
          "Filtering a list of items",
          "JavaScript: Finding data in an array with find",
          "Assignment - use find instead of forEach",
          "Guided Assignment - use find instead of forEach",
          "Assignment - use find instead of forEach - Solution",
          "Managing the data type in Postman variables",
          "Passing data from the pre-request script to the request/tests",
          "Where can you use Postman variables?",
          "Removing collection variables",
          "Recap: Using Postman variables in scripts"
        ],
        "Using Postman environments & environment variables": [
          "Test-driven development (TDD)",
          "Postman Environments & Environment variables",
          "Troubleshooting environment variables",
          "Using if statements to include or exclude tests",
          "Storing secrets in environments",
          "Exporting and importing environments",
          "Environment variables quiz",
          "Setting, getting and removing environment variables from scripts",
          "Getting variables in scripts according to the scope",
          "Migrating from collection variables to environment variables",
          "Global variables",
          "Setting, getting and removing global variables from scripts"
        ],
        "Practice section - Adding tests to an API": [
          "Section overview",
          "Resources for this section",
          "Troubleshooting",
          "Assignment - Add status code tests",
          "Guided Assignment - Add status code tests",
          "Assignment - Add status code tests - Solution",
          "Assignment - Use Postman variables",
          "Guided Assignment - Use Postman variables",
          "Assignment - Use Postman variables - Solution",
          "Assignment - Reducing manual work by using variables & scripts",
          "Guided Assignment - Reducing manual work by using variables & scripts",
          "Assignment - Reducing manual work by using variables - Solution",
          "JavaScript: Transforming an array with map()",
          "Working with complex data structures in Postman variables",
          "Assignment - Write tests for Create board request",
          "Guided Assignment - Write tests for Create board request",
          "Assignment - Write tests for Create board request - Solution",
          "Assignment - Dynamic board names",
          "Guided Assignment - Dynamic board names",
          "Assignment - Dynamic board names - Solution",
          "Assignment - Write tests for the TODO and DONE lists",
          "Guided Assignment - Write tests for the TODO and DONE lists",
          "Assignment - Write tests for the TODO and DONE lists - Solution",
          "Write tests for the Create card request",
          "Guided Assignment - Write tests for the Create card request",
          "Assignment - Write tests for the Create card request - Solution",
          "Assignment - Test the request Move card to DONE list",
          "Guided Assignment - Test the request Move card to DONE list",
          "Assignment - Test the request Move card to DONE list - Solution",
          "Clean-up work",
          "Resilient scripts & tests"
        ],
        "Advanced assertions": [
          "Ongoing course update",
          "Chai Assertion Library",
          "Assertions",
          "Chai Assertion Library",
          "Assertions on arrays",
          "Assertions on nested objects",
          "How to write assertions in Postman (objects, arrays, nested properties)",
          "Testing headers and cookies"
        ],
        "Postman Automation basics": [
          "Overview",
          "Running the collection manually",
          "Postman Collection Runner",
          "Collection runner usage limits",
          "Scheduled collection runs",
          "Running Postman collections as part of CI/CD",
          "Postman CLI (installation & basic usage)",
          "Newman CLI (installation & basic usage)",
          "Troubleshooting Node.js / npm / Newman Problems (for Windows)"
        ]
      },
      "requirements": [
        "Registering to a few reputable public APIs is required for you to be able to follow along with the course",
        "Basic programming and/or JavaScript knowledge is required (needed for writing tests)",
        "Basic HTTP knowledge required (address, message body, headers, cookies, ...)",
        "Basic knowledge about RESTful APIs and JSON",
        "Basic Jenkins experience, if an integration with Jenkins is desired",
        "Basic NodeJS/NPM experience (needed for test automation)",
        "Optional - Basic Docker experience (for Jenkins or Newman)",
        "A computer with Windows, macOS or Linux is required for viewing the lectures and installing Postman. Using a mobile phone/tablet is not recommended."
      ],
      "description": "Learn Postman with a Postman Supernova.\nRESTful APIs (or simply REST API) are everywhere nowadays, but at the same time, they are getting more complex to get started with: different HTTP methods (GET, POST, PUT, PATCH, DELETE), headers, cookies, dealing with file uploads or authentication with API keys, tokens, OAuth and so much more.\nThis is where the Postman App comes in! Postman allows you very quickly to create a request with the required HTTP method and parameters, submit the request and easily inspect the results.\nI have created this course for testing engineers as well as for software developers or other technical positions.  Postman can help you during the development of your API, as well as after the API is completed, by running tests that make sure your API is still working as intended.\nIn the first part of the course, we will start exploring the features of Postman and continue by writing API tests with the intention of integrating them into a CI server where the tests will run on a current basis.\nBut this is not the normal course you take part in. Because your needs may be different and because I hate leaving you wondering what to do next, the second part of the course will include user questions and answers to problems that were not yet covered in the course or that are more specific and may not interest everybody.\nSo let’s look at what you are going to learn:\n\n\nHTTP request methods (GET, POST, PUT, PATCH, DELETE)\nJSON format\nStart with simple requests and advance toward more complex scenarios\nLearn to deal with authentication/authorization mechanisms like Basic Auth, API Keys, or OAuth.\nStart writing API tests\nOrganize tests in collections and share them with your team\nRun API tests in Jenkins or any other CI server\nYou ask, I answer\nSo after this course, you will know how to use Postman as a pro.\nExcited to learn Postman? Join the course today.",
      "target_audience": [
        "This course is targeted towards testing engineers and developers."
      ]
    },
    {
      "title": "Cypress with Cucumber BDD - Automation Testing Bootcamp",
      "url": "https://www.udemy.com/course/cypress-with-cucumber-bdd-beginner-to-expert-in-9-hours/",
      "bio": "Learn how to create automated UI tests using Cypress with Behaviour Driven Development using Cucumber BDD",
      "objectives": [
        "Learn how to build advanced automation tests for any Web Application using Cypress & Cucumber BDD.",
        "Rapidly learn the importance of 'Behavior Driven Development' using Cucumber & Gherkin.",
        "Learn how to combine two in demand technologies; Cypress & Cucumber BDD (Latest Versions).",
        "Gain in depth knowledge of Cucumber’s Core Components; Scenario Outlines, Background Keyword, Tags and more.",
        "Know why and when to use specific Gherkin Keywords such as 'Feature', 'Given', 'When', 'And', 'Then' and more!",
        "Learn how to generate a Wide Range of Reports.",
        "Learn Principles such as DRY (Don’t Repeat yourself) and more.",
        "Learn Design Patterns such as POM (Page Object Modelling) & Custom Commands.",
        "Leverage Jenkins (CI), easily execute Test Scenario’s based on Tags and Custom Scripts.",
        "Leverage Jenkins to develop Sophisticated Reports and handle a multitude of run time options (Browser Selection etc)."
      ],
      "course_content": {
        "Cypress & Cucumber - Introduction": [
          "What is Cypress? & What is Cucumber BDD?",
          "Why learn Cypress & Cucumber BDD?",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)",
          "Want to delve deeper into the Cypress code?",
          "Cypress Chat"
        ],
        "Environment - Setup": [
          "NodeJS",
          "Visual Studio Code",
          "Git Bash",
          "Chrome & Firefox",
          "Java JDK"
        ],
        "Project - Setup": [
          "Please Read - [Important]",
          "Cypress Download & Setup",
          "VS Code - Extensions",
          "Important - Please Read",
          "Cucumber - Setup",
          "VS Code & Cucumber - Setup"
        ],
        "Cucumber Basics": [
          "What is Cucumber? & What is Gherkin?",
          "Test Creation - Positive Scenario - Part 1/4",
          "Test Creation - Positive Scenario - Part 2/4",
          "Test Creation - Positive Scenario - Part 3/4",
          "Test Creation - Positive Scenario - Part 4/4",
          "Test Creation - Negative Scenario",
          "Cucumber Expressions - Scenario Creation",
          "Cucumber Expressions - Mapping Step Definitions",
          "Cucumber Expressions - Implementing Step Definitions",
          "Cucumber Basics - Challenge"
        ],
        "Background & Scenario Outlines": [
          "Scenario Outlines",
          "Scenario Outlines - Creation",
          "Scenario Outlines - Mapping & Implementing Steps - Part 1/2",
          "Scenario Outlines - Mapping & Implementing Steps - Part 2/2",
          "Background Keyword",
          "Background Keyword - In Action"
        ],
        "The Real World Challenge": [
          "Challenge - Overview",
          "Feature File - Creation",
          "Documenting Scenario Requirements",
          "Mapping & Implementing Step Definitions - Part 1/2",
          "Mapping & Implementing Step Definitions - Part 2/2"
        ],
        "Tags & Organising Test Suites": [
          "What are Tags?",
          "Tags in Action!"
        ],
        "Custom Scripts": [
          "Custom Scripts - Part 1/2",
          "Custom Scripts - Part 2/2"
        ],
        "Reporting": [
          "Cucumber - HTML Reports",
          "Cucumber - JSON Reports",
          "Multiple Cucumber - HTML Reports",
          "Important - [Please Read]",
          "Reporting - Attaching Screenshots",
          "Reporting - Custom Scripts"
        ],
        "Advanced Concepts": [
          "Hooks & Base Steps - Part 1/2",
          "Hooks & Base Steps - Part 2/2",
          "Custom Commands",
          "Page Object Modelling - (POM) - Base Page",
          "POM – Sub Pages – Part 1/4",
          "POM – Sub Pages – Part 2/4",
          "POM - Sub Pages - Part 3/4",
          "POM - Sub Pages - Part 4/4"
        ]
      },
      "requirements": [
        "Some knowledge of programming would be beneficial (not critical).",
        "Some basic JS, HTML and CSS knowledge would also be useful (not critical)."
      ],
      "description": "This course uses the latest versions of Cypress (v11+) & Cucumber BDD [October 2022]\n\n\nWhy Cypress?\nCypress is a JavaScript End to End Testing Framework that is very popular and is rapidly growing in popularity due to its great features and ease of use.\n\n\nWhy Cucumber BDD?\nCucumber BDD (Behaviour-driven development) much like 'Cypress' is a technology which is growing in popularity by the day and is used by organisations across the globe. Cucumber BDD captures test requirements in a simplistic manner, making it easy not only for 'Non technical parties/people' to understand scenario's which have been automated, but also assists the process of building effective automation frameworks and tests.\n\n\nWhy this course?\nThis course is designed to be quick, effective, efficient and easy to follow. I have been teaching for several years on Udemy with over 6 highly successful courses to date. I have refined this course using proven teaching techniques. This course is carefully structured from start to finish and I provide downloadable code examples after each coding lecture.\n\n\nWhat does this course cover?\nYou will learn how to rapidly create simplistic and sophisticated Automated UI Tests using Cypress.\nLearn the importance of Cucumber BDD (Behaviour-driven development).\nLearn how to effectively and effortlessly capture test (Scenario) requirements using Cucumber BDD.\nGain knowledge of 'Gherkin', Cucumber's language parser.\nKnow why and when to use specific Gherkin Keywords such as 'Feature', 'Given', 'When', 'And', 'Then' and more!\nLearn the differences between 'Scenario's' & 'Scenario Outlines'.\nLearn how to simplify tests using specific Cucumber BDD Features such as the 'Background' keyword.\nGain the knowledge to insert and modify test data directly within Feature File(s).\nLearn how to correctly map Test Requirements to actions using Cucumber Step Definitions and Cypress.\nBecome familiar with 'Tags' and learn how we can target and execute specific tests (Scenario's).\nUnderstand the importance of Design Patterns such as Page Object Modelling (POM).\nLearn best practises such as DRY (Don't Repeat Yourself).\nLearn how to create Sophisticated Reports (HTML Reports, JSON Reports, Multi Reports) and more!\nLearn how to leverage 'Hooks' and 'Custom Commands'.\nLearn Continuous Integration using Jenkins and explain why this is very useful.\nBecome familiar with important add-ons for Jenkins.\nAbility to create visually appealing reports within Jenkins and attach images to those reports.\nLearn how to handle Extensible Choice Parameters (Selection Dropdown lists) via Jenkins.\nAnd much more!",
      "target_audience": [
        "Students completely new to Automation Testing & Cucumber BDD (Behavior-driven Development)",
        "Manual testers looking to enter the automation testing space.",
        "Anyone interested in automation testing and wanting to learn two upcoming technologies ‘Cypress’ & ‘Cucumber BDD’",
        "Automation Testers wanting to build tests from scratch using ‘Cypress’ & ‘Cucumber BDD’.",
        "Automation Testers familiar with Cypress wanting to combine ‘Cucumber BDD’ into their framework(s).",
        "Front end developers interested in automation testing using a language they will be familiar with.",
        "Intermediate and advanced students wanting to learn new concepts and techniques."
      ]
    },
    {
      "title": "The Complete Cypress v13 Course- Automation Testing Bootcamp",
      "url": "https://www.udemy.com/course/cypress-io-master-class/",
      "bio": "One of the most detailed Cypress courses available. Write Automated UI API test scripts using an e-commerce store.",
      "objectives": [
        "By the end of this course, you will be able to build simplistic to advanced automation tests for any Web Application using Cypress",
        "You will gain advanced knowledge to build both UI and API tests",
        "Learn XHR/API testing using Cypress for building smart Automation tests",
        "Complete understanding of Cypress components for generating test execution videos, screenshots & reports",
        "You will understand how to execute your tests in parallel using a CI system (Jenkins & Agents)",
        "You will learn advanced architectural concepts (Page Object Modelling and more)"
      ],
      "course_content": {
        "Cypress Introduction": [
          "What is Cypress?",
          "Why Learn Cypress?",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)",
          "How does Cypress Work?",
          "What are the Key Differences between Cypress and other Automation Tools?",
          "Want to delve deeper into Cypress’s Code?",
          "Cypress Demo",
          "Cypress Chat"
        ],
        "Future Course & Cypress Updates - [Important!]": [
          "Future Course & Cypress Updates - [Must Watch!]",
          "Cypress v9 vs v13+",
          "Migrating from Cypress v9 to v13+"
        ],
        "Environment Setup": [
          "Chrome & Firefox Browser Installation",
          "Prerequisites - [NodeJS Setup]",
          "NodeJs Setup",
          "Gitbash Setup",
          "VS Code Installation & Configuration"
        ],
        "Cypress Setup": [
          "Please Read - [Important]",
          "Cypress Installation & Setup",
          "NPM Installation & Update"
        ],
        "Cypress Overview": [
          "Opening Cypress for the First Time!",
          "Please Read - [Cypress Test Runner]",
          "Cypress Test Runner",
          "Cypress Project Structure"
        ],
        "Cypress Updates": [
          "Keeping Cypress Up to Date"
        ],
        "Cypress API": [
          "Cypress API - Overview"
        ],
        "Cypress Updates - (Change Logs)": [
          "Cypress Updates - (Change Logs)"
        ],
        "The Real Project Examples - (Practise Environments)": [
          "Systems Under Test"
        ],
        "Mocha": [
          "Mocha - Overview",
          "Please Read - [Important]",
          "Constructing our First Test using Mocha",
          "Visual Studio Code - Mocha Extension"
        ]
      },
      "requirements": [
        "Some knowledge of programming would be beneficial (not critical)",
        "Some basic JS, HTML and CSS knowledge would also be useful (not critical)"
      ],
      "description": "Why this course?\nUnlike some Cypress courses, this course give you the level of detail required to get you up and running writing advanced tests while ensuring you understand each topic well. No other Cypress course provides this level of detail.\nEach subject is covered in detail\nThe course is highly organised and structured\nYou will write tests against a dedicated e-commerce store (that I host myself)\nI use proven methods to ensure you retain information\n35+ hours of professional content\n400+ downloadable code examples is provided\nYou will gain real life experience to prepare you work work in this industry\nThe course is regularly updated so that it remains relevant\nI'm an Automation Lead with many years of experience in this industry\nI'm involved in the hiring/interview process and know what employers look for\n\n\nWhy Cypress?\nCypress is a JavaScript End to End Testing Framework that is popular and still growing in popularity due to the great features and how easy it is to write tests.\nKey Topics this course covers:\nFundamentals of Cypress io\nSetting up Cypress cleanly\nCreating a range of UI and API tests (beginner to advanced level)\nStatics gathering and analysis using the Cypress dashboard\nTriggering tests using a CI system (Jenkins)\nParallel test execution (in great detail)\nAdvanced API testing\nAdvanced reporting\nAnd much more (check out the course syllabus)\nKey Features of Cypress:\nEasy setup - Installing Cypress is simple. No dependencies, extra downloads, or changes to your code required.\nWrite tests - Write tests easily and quickly, and watch them execute in real time as you build your web application.\nRun tests - Debugging your tests in CI is as easy as running tests locally. With built in parallelization and load balancing.\nRecord tests - Record CI test data, screenshots and video - and view aggregated, next-level insights in your Dashboard.\nBenefits of Cypress:\nDeveloper friendly - Cypress has been made specifically for developers and QA engineers, to help them get more done.\nOpen source - Cypress benefits from our amazing open source community - and Cypresses tools are evolving better and faster than if we worked on them alone.\nBuilt from the ground up - Cypress is based on a completely new architecture. No more Selenium. Lots more power.\n\n\nWhat sets Cypress apart?\nTime travel - Cypress takes snapshots as your tests run. Simply hover over commands in the Command Log to see exactly what happened at each step.\nDebugging - Stop guessing why your tests are failing. Debug directly from familiar tools like Chrome DevTools. The readable errors and stack traces make debugging lightning fast.\nReal time reloads - Cypress automatically reloads whenever you make changes to your tests. See commands execute in real time in your app.\nAutomatic waiting - Never add waits or sleeps to your tests. Cypress automatically waits for commands and assertions before moving on. No more async hell.\n\n\nWhy enroll?\nThis course combines all of the BEST free knowledge that is out there in one place\nThis course is taught by a real automation test engineer that is an automation test lead at his place of employment\nThis course has been designed, refined and perfected to maximise the learning experience\nThis course perfects the teaching techniques by experience learned from the mentors previous courses\nBefore and after code examples provided on almost every coding lecture\nQuestions usually always answered in 24 hours\nCourse recorded using high quality recording software and microphone to give the best learning experience",
      "target_audience": [
        "Students completely new to automation testing",
        "Manual testers looking to enter the automation testing space",
        "Anyone interested in automation testing and wanting to learn one of the most popular frameworks out there",
        "Front end developers interested in automation testing using a language they will be familiar with",
        "Intermediate and advanced students wanting to learn new concepts and techniques"
      ]
    },
    {
      "title": "Performance Testing: Introduction to k6 for Beginners",
      "url": "https://www.udemy.com/course/k6-load-testing-performance-testing/",
      "bio": "Use k6 to write performance tests for your web apps and APIs by running load tests, stress tests and spike tests.",
      "objectives": [
        "Understand performance testing basics",
        "Write scripts with k6",
        "Create load tests, stress tests & spike tests",
        "Understand performance-related metrics",
        "Write checks/assertions",
        "Define threasholds"
      ],
      "course_content": {
        "Introduction & getting started with k6": [
          "A brief introduction to k6",
          "How to use this course",
          "[ACTION REQUIRED] Important change",
          "Installation & your first test with k6",
          "A word of caution",
          "Understanding basic performance testing concepts",
          "Specifying VUs and test duration",
          "Understanding test results & metrics"
        ],
        "Types of tests k6 can perform": [
          "Section overview",
          "Performance testing",
          "What is scalability: Basic scaling concepts",
          "Smoke testing",
          "Smoke testing with k6",
          "Smoke testing quiz",
          "Load testing",
          "Load testing with k6",
          "Load testing quiz",
          "Stress testing",
          "Stress testing with k6",
          "Stress testing",
          "Spike testing",
          "Spike testing with k6",
          "Spike testing quiz",
          "Breakpoint testing",
          "Breakpoint testing quiz",
          "Soak testing",
          "Soak testing quiz",
          "Conclusion"
        ],
        "Creating test scripts with k6": [
          "Making HTTP Requests with k6",
          "Writing assertions in k6",
          "Validating responses",
          "Setting thresholds",
          "Metric types and aggregation methods",
          "Defining a threshold for checks",
          "Custom metrics",
          "Custom metrics - A practical example",
          "Tags",
          "Custom tags",
          "Organizing requests in groups",
          "Defining thresholds for groups",
          "Understanding the group duration metric",
          "Revisiting the request duration metric",
          "The structure of a k6 test script",
          "Aborting the test execution"
        ],
        "Building HTTP requests for APIs": [
          "Section Overview",
          "A quick introduction to APIs",
          "What is HTTP?",
          "Important update",
          "Making a GET request",
          "JSON format explained",
          "Debugging HTTP requests and responses",
          "Parsing JSON",
          "Correlating requests",
          "Accessing response headers",
          "Making a POST request",
          "Assignment - Making a POST request",
          "Assignment - Making a POST request",
          "Assignment - Making a POST request - Solution",
          "Code refactoring",
          "Token-based API Authentication",
          "Assignment - Create a new resource using POST",
          "Assignment - Create a new resource using POST",
          "Assignment - Create a new resource using POST - Solution",
          "Assignment - Retrieve a resource after creation",
          "Assignment - Retrieve a resource after creation",
          "Assignment - Retrieve a resource after creation - Solution",
          "HTTP 301 redirects",
          "Making a PUT request",
          "Making a PATCH request",
          "Making a DELETE request"
        ],
        "Using parameters in k6 scripts": [
          "Using environment variables in scripts",
          "Random “think” time (sleep)",
          "Random string function",
          "Random item in an array function",
          "Using an external JSON file",
          "Using an external CSV file"
        ],
        "k6 Cloud - Running performance tests using the power of the cloud": [
          "Section Overview",
          "Setting up an Grafana account",
          "Your first test execution in the k6 cloud",
          "Running k6 locally and exporting the results to the cloud",
          "Specifying a Grafana project",
          "Inspecting the text execution report in k6",
          "Understanding best practice warnings"
        ],
        "k6 CLI (command line usage)": [
          "Section Overview",
          "Specifying VUs, duration & iterations",
          "Configure k6 to allow insecure requests",
          "Output in JSON format",
          "Exploring the official k6 documentation",
          "Local dashboard and HTML reports"
        ],
        "Integration with CI/CD Pipelines": [
          "Section overview",
          "k6 CLI & Exit codes",
          "Integrating k6 with Jenkins - Installing k6",
          "Running k6 tests in Jenkins (freestyle, Jenkinsfile, Docker)",
          "Using k6 cloud with Jenkins",
          "Integrating k6 with GitLab CI",
          "Running k6 test on other CI platforms"
        ],
        "Conclusion": [
          "Section overview",
          "A second look at the code and the test execution report",
          "Browser testing (k6 browser module)",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "The possibility of installing tools and software (K6 CLI, Visual Studio Code, Node.js, Docker Desktop)",
        "Grafana Cloud account (free tier)",
        "Basic JavaScript knowledge",
        "The total time it will take to complete the course will he higher than the indicated course duration."
      ],
      "description": "Please note that this course is not affiliated with, sponsored, or endorsed by k6 (Grafana Labs). Grafana Labs is not responsible for the content or delivery of this course. Any references made to k6 or Grafana Labs are purely for informational purposes and do not imply endorsement or affiliation with Grafana Labs.\n\n\nDive into the dynamic world of k6 performance testing, designed to transform beginners into proficient testers. This course emphasizes building confidence starting with the basics of JavaScript, the language that powers k6.\n\n\nHere is a brief overview of the course contents:\n\n\nGetting Started: Learn the ABCs of k6, including installation processes and how to set up your very first test. This foundational knowledge is akin to learning to ride a bike; once you've grasped the basics, advancing becomes substantially easier.\nIntroduction to Performance Testing: We shed light on the compelling world of performance testing, demystifying essential terms and unfolding the variety of tests executable using k6.\nAdvanced Techniques: Delve deeper into k6 intricacies such as validating responses, crafting assertions, and handling complex scenarios. Gain proficiency in using the K6 Command Line Interface (CLI) and explore the offerings of Grafana Cloud k6.\nIntegration with CI/CD: The course covers integrating k6 tests into renowned CI/CD servers like Jenkins, GitLab CI, and Circle CI. This segment prepares you to apply your k6 skills globally in real-world scenarios.\n\n\nWhy take this course?\nWhether your application operates through HTTP, web service, or gRPC, k6 serves as a versatile tool, efficiently assessing performance. The course makes the learning process less demanding and more engaging for learners at all levels.\n\n\nAre you ready to transform from a novice to a skilled tester? Join us on this insightful adventure into the world of k6 performance testing. Let’s embark on this learning journey together!",
      "target_audience": [
        "Software Developers",
        "Testers & QA Engineers",
        "Site Reliability Engineers (SREs)"
      ]
    },
    {
      "title": "Manual and automation API testing for Beginners with Postman",
      "url": "https://www.udemy.com/course/rest-api-testing-course-for-beginners/",
      "bio": "Get familiar with api testing and rest api and learn how manual api testing and automation api testing with postman",
      "objectives": [
        "Ready to perform Manual API testing",
        "Ready to perform Automated testing with Postman",
        "Detailed understanding of REST, REST architectural constraints, client-server architecture and HTTP request-response pair",
        "Basic knowledge about RESTful APIs and JSON",
        "Testing of the POST, GET, PUT, DELETE requests (CRUD operations)",
        "Basic knowledge of Postman features: Using variables, Using snippets, Using the Collection Runner, Scripting in Postman etc."
      ],
      "course_content": {},
      "requirements": [
        "No prior specialized knowledge is required",
        "No programming experience needed",
        "Desire to learn APIs",
        "Thirst for knowledge"
      ],
      "description": "This course is about \"API testing\". Both manual and automated API testing with Postman. And this course is for beginners and for people who want to recall basic knowledge and API testing skills. API testing is a complex topic, and I will try to make it as easy as possible, but it still will be a complex topic. It is also a controversial topic. No matter how many people you ask how to test the API, they all have their own approach and their own way of testing. In some things they are right, in some things they are wrong. And so, getting acquainted with different approaches and ways, we create our own unique approach and way. Which also is right, and wrong. In this course, you will find my way of sailing in this restless, boundless, and stormy ocean of API testing. I hope it will help you find your own way.\nIn this course, you will have 5 baby steps.\n1st - learn theory.\n2nd - learn what manual API testing looks like. I will imitate the user stories and real project experience so it will be easier to understand.\n3rd - improve your API testing skills with proper use of Postman features.\n4th - automated API testing with Postman.\n5th - examples of manual and automated API testing.\nHappy sailing!",
      "target_audience": [
        "Manual testers who need to learn how to test APIs ASAP",
        "People who can't imagine their life without REST APIs",
        "People who love coffee"
      ]
    },
    {
      "title": "SDET/Test Architect Essentials -Road to Full stack QA",
      "url": "https://www.udemy.com/course/sdettraining-testarchitect-fullstackqa/",
      "bio": "Advanced Tutorial to Learn essential skills needed to transform your career from QA Engineer to SDET/Test Architect",
      "objectives": [
        "Understand and Implement Docker to provide virtualization Environments for Automation Tests",
        "Build Json/Xml on fly from JDBC Query results with Jackson API and POJO implementation",
        "Build and execute Window batch Scripts for invoking Servers(Selenium/Protractor)",
        "Understand Jenkin pipelines scripting for CI/CD",
        "Complete knowledge on latest Java Streams and lambda expressions for Interview prep",
        "Parsing Json files into Java objects to feed into web Automation tests",
        "How to monitor server logs dynamically with java",
        "Integrating TestNG Data provider into excel for building robust Datadriven Automation",
        "Understanding GIT commands in depth versioncontrol"
      ],
      "course_content": {},
      "requirements": [
        "Very basic knowledge of Core java and (Selenium, TestNG)"
      ],
      "description": "Have a passion to take up your Automation career to next level? If Yes JOIN with me-\nThe one and only Best  \"Full Stack QA tutorial\" which touches up on technical challenges in every phase of Automation by providing smart solutions using latest technologies like Dockers, Jackson API, Jenkin Pipelines, Data Structures using Java Streams, Window batch Scripting, Database readers, GIt  and many more !!!!!!!!\nAfter Successful course completion, you should be able to apply for any Test Architect /SDET positions or lead the Challenging Automation projects from Scratch\nBelow are in detail Scenarios we are going to cover in this Tutorial\nDockerization, integrating Selenium Grid with Docker,\nBuilding Json/Xml from database results,\nParsing Json into Java objects with Jackson API,\nJenkins pipeline Scripting for CI/CD,\nDynamically monitoring Server Logs with Java,\nWindows Batch job scripting,\nDataprovider to Excel Integration,\nJava streams, Lambda expreesions,\nGIT version control system and many more,\n\n\nStudents Feedback _\nGourav\nA perfect and a wonderful course for becoming a full stack QA. Thank you Rahul Shetty for this wonderful course !!\n\n\nNitin S.\nA quick walkthrough of good concepts Docker, Grid, Jenkins and general utility programs. Good to have this course who just have started role as SDET and if you don't know the concepts of CI/CD pipeline.",
      "target_audience": [
        "Automation testers",
        "QA Engineers",
        "Software Engineers"
      ]
    },
    {
      "title": "Software Tester Course - Become an Effective Tester",
      "url": "https://www.udemy.com/course/software-tester-course-become-an-effective-tester/",
      "bio": "Project & Job based Tester/QA Engineer Course. Manual Software Testing, Agile with JIRA, SQL for Testers & Interviews.",
      "objectives": [
        "Software TESTER'S ROLE & RESPONSIBILITIES for performing & delivering day-to-day Testing activities effectively",
        "Demonstrate qualities essential for an AGILE TESTER & exposure to Agile Tooling - JIRA & Zephyr from Testing Project view point",
        "Grasp how to effectively prepare various Testing deliverables in a productive manner (via PROJECT BASED LEARNING)",
        "EXPERIENCE of Full Software Testing Project Lifecycle (from HANDS-ON PRACTICAL LEARNING perspective)",
        "INTERVIEW ASSIGNMENTS covering Test Analysis, Design, Implementation, Execution & Agile Testing",
        "Additional Content: SQL for Testers & Intro to Automation"
      ],
      "course_content": {},
      "requirements": [
        "All you need to learn from this course is a Laptop / PC and Internet connection - we will take care of the rest together!",
        "No prior IT experience needed - You will learn everything you need to know to work as a Software Tester/QA Engineer!",
        "Most importantly - You simply need to be determined and passionate, we will motivate you to 'Become an Effective Software Tester' !"
      ],
      "description": "Are you aspiring to break into IT / Software Testing / QA through an effective and professional course?\nThe key objective of this Software Tester Course is to learn Manual Testing and Agile Testing from a project perspective while using a job oriented approach. This would effectively help those aspiring to break into IT / Software Testing. This is an intense Software Testing Training Course, conducted to offer practical knowledge in Software Testing.\nLearn Test Panning, Test Analysis, Test Design, Test Implementation, Test Execution and Test Reporting in a professional way.\nLearn Software Tester's Key responsibilities:\nAnalyse Business requirements and Design specifications.\nDerive Test Conditions based on test analysis\nIdentify Test Data Requirements for Test Scenarios.\nDevelop detailed test cases based on business requirements and design specification.\nDefine test data by applying formal Test Case Design techniques.\nPrepare test traceability matrix to attain adequate test coverage.\nPeer review detailed test cases and log review comments.\nPerform functional test case execution as per test plan and approach defined.\nConduct Exploratory testing by applying session based test management technique.\nReport bugs and demonstrate effective bug hunting techniques.\nCommunicate status of testing tasks by collecting metrics & prepare test status report\nLearn Manual/QA/Agile Testing from a Testing Industry expert and from a project perspective while using a realistic & hands-on approach. Grasp how to effectively work on Testing projects aligning to industry standards and expectations.\nBecome competent in facing practical testing interviews.\nIn addition to that, SQL for Testers & Intro to Automation Testing are added additional content (sessions) for this realistic Software Tester Course!\nNote: This is NOT an automation testing course, however this helps in progressing to become an automation tester - since you would gain a robust exposure and solid understanding of project-based software testing.\nBecome an effective Software Tester, good luck!",
      "target_audience": [
        "Those wishing to Apply for Entry-level or Mid-level Software Testing jobs",
        "Well-suited for someone Switching Career (from Non-IT or IT background) and Aiming to Get into IT via Software Testing",
        "Most suitable for those who are seeking to Learn Manual & Agile Testing (from projects/practical perspective)",
        "Anyone aspiring to Gain Hands-on Exposure to Manual Testing Projects and Test Analyst/Engineer’s role & responsibilities",
        "Anyone currently seeking to move into a Testing Role or already in a Manual Testing role will benefit from attending this professional course",
        "Best suitable for Beginners to Advanced level users and who learn faster when demonstrated",
        "Automation Testers keen to learn Overall Testing process and where they Fit into in the process"
      ]
    },
    {
      "title": "Cucumber 7.0 BDD for Selenium & Appium with Live Projects",
      "url": "https://www.udemy.com/course/cucumber-tutorials/",
      "bio": "Learn and Master Cucumber BDD for Selenium and Appium with Live Projects - UPDATED 2022 to latest Cucumber version 7.4.1",
      "objectives": [
        "Master the BDD Framework with Cucumber",
        "Learn integrating Cucumber with Selenium and Appium for both Web and mobile tests"
      ],
      "course_content": {
        "Introduction to BDD": [
          "Introduction",
          "FIXING THE BLURRED VIDEO SCREEN",
          "Introduction to BDD"
        ],
        "Cucumber BDD Basics - Latest Lectures from version 7.4.1 (UPDATED 2022)": [
          "Installing the Cucumber plugin and creating the very first feature file",
          "Download the code",
          "Creating a Step definition file",
          "Creating a runner file",
          "Generating Cucumber Reports",
          "Generating Latest Extent reports",
          "Customizing Extent Reports",
          "Adding Multiple scenarios to a feature",
          "Parameterization using Scenario Outline",
          "Adding Multiple Features and Step Definitions",
          "Background"
        ],
        "Cucumber Options - Tags and Hooks": [
          "Cucumber Tags",
          "Cucumber Hooks",
          "Cucumber Hooks - BeforeAll, AfterAll, BeforeStep, AfterStep",
          "Cucumber Hooks - Defining Execution order",
          "Cucumber Hooks - Tagged hooks"
        ],
        "Cucumber DataTables": [
          "DataTable as a List",
          "DataTable as Map",
          "Parameterize DataTable as a Map"
        ],
        "ARTICLES on Latest CUCUMBER version": [
          "Important to watch this lecture before reading the articles",
          "BDD Introduction",
          "Setting up cucumber in eclipse",
          "Create feature and Step definition file",
          "Create runner file",
          "Cucumber Tags",
          "Background keyword in Cucumber",
          "Hooks in Cucumber",
          "DataTable (asLists) in Cucumber",
          "DataTable (asMaps) in Cucumber",
          "Data Driven Testing in Cucumber"
        ],
        "LATEST -Live Project - Cucumber with Page Object Model Integration with Selenium": [
          "Getting start with Page Objects",
          "Completing the Framework",
          "Download the project code"
        ],
        "Integrating Selenium WebDriver with Cucumber": [
          "Adding Selenium APIs",
          "Creating the feature file",
          "Creating automation steps",
          "Fixing sync issues and adding validations",
          "Adding screenshots in case of failure"
        ],
        "Live Project 1 - Cucumber with Page Object Model & Page Factories Framework": [
          "Download the updated framework code - latest 6.10 cucumber and latest Reporting",
          "Download the updated framework code - latest 4.8 cucumber and latest Reporting",
          "CucumberFramework - Part1 - Designing Architecture",
          "CucumberFramework - Part2 - Creating a feature file",
          "CucumberFramework - Part3 - Creating Step definition and defining base class",
          "CucumberFramework - Part4 - Creating Page Objects Actions and locators",
          "CucumberFramework - Part5 - Creating more business actions",
          "CucumberFramework - Part6 - Creating step definitions",
          "CucumberFramework - Part7 - Creating Cucumber runner hooks and generating extent",
          "CucumberFramework - Part8 - Adding more steps and integrating maven",
          "CucumberFramework - Part9 - Running Multiple features through Maven - Part 1",
          "CucumberFramework - Part10 - Running Multiple features through Maven part 2",
          "CucumberFramework - Part 11 - Integrating Jenkins and Interactive Reports",
          "Updated 18-Feb-2018 - Download the Framework Code with TestNG",
          "Download the Framework Code with JUnit"
        ],
        "Live Project 2 - Cucumber BDD with Parallel Execution on Grid using Page Objects": [
          "Part 1 - Introduction to Cucumber BDD Parallel execution",
          "Part 2 - Adding Features and Implementing Step Definitions",
          "Part 3 - Implementing the Parallel Test Plugin",
          "Part 4 - Implementing Thread local to support Parallel Testing",
          "Part 5 - Implementing Extent Reports and their support with Cucumber Scenarios",
          "Part 6 - Adding TestNG Runner to execute parallel Cucumber Features",
          "Part 7 - Implementing Cucumber with Page Objects",
          "Part 8 - Designing the Framework",
          "Part 9 - Running Parallel on Grid",
          "Framework Code"
        ],
        "APPIUM Lectures - Getting started with Appium - Basic Installation": [
          "Introduction to Appium",
          "Pre requisite",
          "Configure Java and set global environment variables",
          "Configuring Android Studio and creating a new Android Virtual Device",
          "Configuring Environment variables for Android ADB",
          "Configuring Real Android Device",
          "Installing the Latest Appium GUI",
          "Installing Node js and Appium NPM Package",
          "Configuring Maven and Download Appium dependencies",
          "Downloading Eclipse and Adding Dependencies",
          "Appium installation guide for Windows"
        ]
      },
      "requirements": [
        "Basics of Core Java and Selenium or Appium"
      ],
      "description": "Cucumber BDD for Selenium and Appium. Master the BDD world with Cucumber framework. In current market BDD frameworks are in lot of demand. Cucumber is one of the BDD framework that is available in different languages in which most of the popular languages are Java & Ruby\n\n\nUPDATED WITH LATEST CUCUMBER 7.4.1 VERSION ON JULY 2022\n\n\nThis course covers in depth of Cucumber BDD with framework designing and live project that will help you to master this API and hit the market.\n\n\nYou will really find this course one of the best Cucumber BDD course in the market and I will try to cover maximum related topics in the course\n\n\nAlso I will make sure to add all latest stuff related to Cucumber and keep on updating new lectures to the course. Not only this you will get my complete support in your queries and automation project\n\n\nLearn all major topics:\n\n\nCreating a feature file\nCreating Steps\nScenario Outline\nCucumber Options\nBasic Reporting\nExtent Reports plugin\nCreating Multiple Feature files and Step Definitions\nBackground\nHooks\nExecution Order in Hooks\nTags\nTagged Hooks\nDataTables asList\nDataTables asMap\nParameterize DataTable asMap\nParallel Feature and Scenario execution\nPage Object Model with Cucumber Integration\nAppium Basics on Real Mobile Device\n\n\nDuring the course you will get my full support in your queries through direct message and Q&A Forums",
      "target_audience": [
        "Students with already exposure to Selenium or Appium"
      ]
    },
    {
      "title": "Selenium WebDriver with C# for Beginners",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-c-sharp/",
      "bio": "Learn QA Automation Testing with C# and Selenium WebDriver. Become Developer in Test and Kick-start your Career in IT.",
      "objectives": [
        "QA Automation Best Practices",
        "Foundation of Quality Assurance and Automation",
        "Quality Assurance guidance for starting your first IT job",
        "How to write test cases",
        "Software Development Life Cycle",
        "Agile Methodology",
        "JIRA",
        "How to find bugs",
        "Manual Testing Basics (If you need it)",
        "Automation Testing",
        "How to start your career as QA Automation Engineer (Developer in Test)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "QA Manual Basics": [
          "What is Software Development Life Cycle",
          "Agile Methodology",
          "SCRUM Team Members and Responsibilities",
          "Different Types of Testing",
          "What is a BUG",
          "What is a Test Case",
          "How to Create Test Cases",
          "Black Box Testing",
          "White Box Testing",
          "Cross Browser Testing",
          "User Acceptance Testing",
          "JIRA - Bug Tracking Tool",
          "Regression Testing",
          "Exploratory Testing",
          "Volume vs Load Testing",
          "When Should You Automate",
          "Interview Questions - Preparing for Your First (Manual) QA Job",
          "QA Salary - How Much Money QA Makes",
          "Make Money Testing Websites"
        ],
        "C# or Java - Which One is Better": [
          "C# or Java - Which One is Better"
        ],
        "Introduction to Programming with C#": [
          "Introduction",
          "Installing Visual Studio - Your IDE",
          "Understand Basic Programming",
          "Variables",
          "Boolean - True or False",
          "Creating Simple Calculator",
          "Creating Simple Greeting Program",
          "If-else statements - Your First Code Logic",
          "Switch Statements",
          "For Loops",
          "While Loops",
          "Methods",
          "Arrays"
        ],
        "Selenium WebDriver with C# Automation Testing": [
          "Selenium Automation Introduction",
          "Install Visual Studio (If you haven't already)",
          "What is Selenium",
          "Create Your First Project and Install Selenium",
          "First Steps in Selenium Automation with C#",
          "Use NUnit for Your Testing Automation Framework",
          "Assert in Selenium - Get Page Title and Assert the Result",
          "Element Selectors - ID, ClassName, XPath - Create Amazon Automation Program",
          "Facebook Automation Program"
        ],
        "Thank You!": [
          "Thank You!"
        ]
      },
      "requirements": [
        "You don't need any experience to start with this course. Everything will be explained for complete beginners."
      ],
      "description": "This course is updated frequently with new lessons, projects and resources!\nNovember 2021 - NEW! Downloadable Resources Added - Performance Testing - Apache JMeter eBook.\nMay 2021 - NEW! Downloadable Resources Added - User Documentation for JIRA Software, JIRA Agile Basics, Regression Testing, Exploratory Testing, Beginner Guide To Software Testing (Automation Included).\nMay 2021 - NEW! Downloadable Resources Added - Black Box Testing, Black Box Testing Techniques, Testing the Software with Blinders on, Software Engineering - White Box Testing, Cross Browser Testing, User Acceptance Testing.\nMay 2021 - NEW! Downloadable Resources Added - Common Software Errors, Understanding Software Test Cases, How to Write Good Test Cases.\nApril 2021 - NEW! Downloadable Resources Added - Selenium Documentation.\nApril 2021 - NEW! Downloadable Resources Added - Understanding If-else and Switch Statements, Loops in C#, Arrays and Collections.\nApril 2021 - NEW!  Downloadable Resources Added - Booleans and If Statements, Conditional Statements.\nMarch 2021 - NEW!  Downloadable Resources Added - Introduction to C# eBook.\nStart Learning Quality Assurance TODAY!\n★★★★★ \"This is one of the best QA software introduction courses, the instructor explains the testing concepts clearly and concisely.\"\n★★★★★ \"Great automation tips and tricks, definitely worth it!\"\n★★★★★ \"Useful, in-depth walkthroughs. Instructor is knowledgeable, genuine and speaks in a calm, paced manner.\"\n★★★★★ \"The best course for starting out with testing software. Every beginner QA should watch this.\"\n★★★★★ \"Thank you for this useful information! This course is easy, not too fast and not too slow. Everything is explained clearly and to the point. I recommend this course!\"\n★★★★★ \"A good beginner course for someone who is looking for a QA profession. Very nice presentation!! Thanks.\"\n******************************************************************************************\nYou will learn different ways of Software Testing and everything you need to start your first job as Junior Automation Quality Assurance Engineer.\nThis course will give you the foundation and confidence to enter the IT Industry as Automation QA Engineer.\n\nYou WILL Learn:\nSelenium WebDriver with C# Automation Testing\nWhat is a Test Case and how to write a Test Case\nWhat is Software Development Life Cycle\nWhat is Agile - Scrum and Kanban\nDifferent Types of Testing\nWhat is a BUG?\nBlack Box Testing\nWhite Box Testing\nUAT - User Acceptance Testing\nRegression Testing\nCross Browser Testing\nJIRA - Bug Tracking Tool\nWhat is Selenium in Automation\nCreate your First Automation Project with Selenium\nNUnit Automation Framework\nAssertions in Selenium\nElement Selectors - ID, ClassName, XPath\nYou don't need any experience to enroll, you will be guided step by step through this course .\nYou will also get Bonus Materials to help you from the beginning.\nThis course requires work in the beginning - just like any other thing in life.\nBut the best thing in the world is when your start making positive changes in your life.\nThis course teaches you the simplest way to enter the IT field - Quality Assurance!\nIf You Are Someone Who:\n✔  Want to Become Quality Assurance Engineer\n✔  Want to learn Software Testing\n✔  Want to Change Career\n✔  Want to achieve Financial Freedom and Enjoy Life\nEnroll in the Course Today and Get Started!\n\nThis course comes with a 30-day 100% Money Back Guarantee, so if you aren't happy with your purchase, you can get a refund - no questions asked!\nYou will also get:\n- Support and Answers to All Your Questions During the Course\n- Lifetime Access\n- Certificate of Completion\nNow go Ahead and Click the Enroll Button.\nI'll See You in the First Lesson!",
      "target_audience": [
        "Anyone who wants to become Quality Assurance Engineer",
        "Anyone who wants to learn Software Testing",
        "Anyone who wants to start their first job in the IT field",
        "Anyone who wants to become QA Automation Engineer (Developer in Test)"
      ]
    },
    {
      "title": "Website Automation Testing for Beginners with Protractor",
      "url": "https://www.udemy.com/course/website-automation-for-beginners-with-protractor/",
      "bio": "Automate all the repetitive website software testing tasks so that you can relax while the computer does the work.",
      "objectives": [
        "Learn basic HTML, CSS, and javaScript skills",
        "Build an HTML Website",
        "Automate websites",
        "Become a QA Automation Engineer"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to Getting Started Section",
          "Why do we need automation?",
          "What is Selenium?",
          "Why do I need to learn to code?",
          "Browsers",
          "Installation - Visual Studio Code",
          "Installation - Sublime Text",
          "Installation - ConEmu",
          "How to get help"
        ],
        "HTML": [
          "Introduction to HTML Section",
          "Browser Developer Tools",
          "HTML Structure - The DOM",
          "HTML Tags and Elements",
          "HTML Attributes",
          "Absolute and Relative Paths"
        ],
        "CSS": [
          "Introduction to CSS Section",
          "What is CSS?",
          "Bootstrap"
        ],
        "JavaScript": [
          "Introduction to the JavaScript Section",
          "Variables and Data Types",
          "Variables Quiz",
          "If Statements",
          "If Statement Quiz",
          "While Loops",
          "While Loop Quiz",
          "For Loops",
          "For Loop Quiz",
          "Functions",
          "Functions Quiz"
        ],
        "Demo Site Project": [
          "Project Introduction",
          "Project Setup",
          "Navbar",
          "Text and Images",
          "Lists",
          "Forms",
          "Tables",
          "Modals",
          "jQuery",
          "Add a Superhero to the List",
          "Superhero List Alert",
          "Vote for a Movie",
          "Vote for a Movie Alert",
          "Search",
          "Login Overlay",
          "Login and Logout",
          "Additional Styling",
          "One more update to the site",
          "Demo Site Files"
        ],
        "Getting Started with Protractor": [
          "Introduction to Getting Started with Protractor Section",
          "Installation - Java Development Kit",
          "Installation - Node.js",
          "Installation - Protractor & Webdriver-Manager",
          "Config File",
          "Test File",
          "Interacting with elements on the page",
          "Validating elements on the page",
          "beforeEach and afterEach",
          "Page Object File",
          "Create a page object",
          "Locators"
        ],
        "Testing Our Site": [
          "Introduction to Testing Our Site",
          "Test the Login",
          "Test the Add a Hero",
          "Test the Vote for a Movie",
          "Test the Header and the Modals",
          "Test the Logout",
          "Test the Search",
          "Final Updates"
        ],
        "Protractor Reporting": [
          "Better Console Reports - Jasmine Spec Reporter",
          "HTML Test Reports - Protractor Jasmine 2 Screenshot Reporter",
          "Completed Project"
        ],
        "Course Wrap Up": [
          "Next steps"
        ]
      },
      "requirements": [
        "No prior knowledge",
        "PC required",
        "All software used in this course is free"
      ],
      "description": "Learn Website Automation\nThis course will teach you everything you will need to know to get started automating website testing. You do not need any prior knowledge to be successful in this course.\nWeb Foundations\nTo be successful in web automation, you first must understand the basics of how a website works. We will teach you how to build a website from the ground up. You will be building a website using HTML, CSS, and JavaScript.\n\nProtractor\nWe will be using Protractor 5 as our automation framework for writing our test scripts. Protractor was built for Angular applications but it is not limited to only Angular. We are going to demonstrate that by testing the HTML website what we created. Protractor is fully featured and easy to use once you learn all the fundamental concepts from this course. You may ask, \"Why are we not using Selenium?\". Protractor is built with Selenium at its core. What that means is that when you use Protractor, you are using Selenium.\n\nIndustry Famous Tools\nYou will learn how to use some of the most common tools in the web development and testing industry.\nThese tools include:\nProtractor 5\nVisual Studio Code\nNode.js\nBootstrap",
      "target_audience": [
        "QA Engineers",
        "Web Developers",
        "Anyone who wants to learn how to automate website testing",
        "Anyone who wants to automate website tasks"
      ]
    },
    {
      "title": "Solve The Testing Challenges",
      "url": "https://www.udemy.com/course/solve-the-testing-challenges/",
      "bio": "Learn software testing by doing software testing",
      "objectives": [
        "Solve Testing Challanges.",
        "Know how to do software testing in particular scenarios."
      ],
      "course_content": {
        "Solving Testing Challenges": [
          "Solving Testing Challenge 1 - Web Testing",
          "Solving Testing Challenge 2 - Bypass html 5 validations",
          "Solving Testing Challenge 3 - Test for what is not there",
          "Solving Testing Challenge 4 - Generate testing data",
          "Solving Testing Challenge 5 - using a web analytics engine",
          "Solving Testing Challenge 6 - Boundary testing",
          "Solving Testing Challenge 7 - Scenario Testing",
          "Solving Testing Challenge 8 - State Transition"
        ]
      },
      "requirements": [
        "No prior knowldge of software testing is required."
      ],
      "description": "During this course you will learn how to test in particular testing situation. I have build a couple of testing challenges meant to highlight techniques and knowledge that you need while testing software.\nThese challenges include:\nWeb testing\nHow to bypass html 5 validations\nTesting for what is not there\nGenerate testing data\nTest a web analytic engine\nBoundary value analyses testing\nScenario testing\nState transition\nKnow your testing techniques\nDoing a bug hunt\nThis course teaches you how to solve these challenges like a tester.",
      "target_audience": [
        "Anyone who wants to do some software testing practice and learn what software testing is all about."
      ]
    },
    {
      "title": "Software testing and Automation of APIs with UFT/QTP",
      "url": "https://www.udemy.com/course/software-testing-api-testing-101-with-uft/",
      "bio": "Automated API Testing is quickly becoming more desired than GUI Automation. Learn the secrets from real QA Engineers",
      "objectives": [
        "Perform API Testing for any application with ease and efficiency",
        "Create 100s of API Tests for their applications",
        "Understand what API tests to create, when to create them, and how to make management happy",
        "Create Data Driven automated API tests",
        "Set up checkpoints for their API tests",
        "Apply real world examples to their learning",
        "Create a UFT solution and nest UFT tests in the solution",
        "Test SOAP Web Services",
        "Test the very popular REST Services"
      ],
      "course_content": {
        "Quick Intro to UFT's API Tests": [
          "All notes and code related to the entire course",
          "Introduction To API Testing With UFT",
          "What is an API?",
          "What Is a SOAP API?",
          "Your automation testing struggles?",
          "How To Create A Quick API Test In UFT",
          "Applications Can Communicate With Each Other Using Xml",
          "Some Key Points Related To Testing APIs",
          "Benefits Of APITesting",
          "Concluding statements"
        ],
        "A few more tricks regarding UFT's API Tests": [
          "Intro to the next UFT Topics",
          "UFT Properties Tab, Inputs Tab, Events Tab",
          "UFT Tools Pane",
          "UFT Canvas Pane, Test Settings Tab, Test Input-output, Test Variables Tab,",
          "Passing An Output Of One Action As The Input Into Another Action",
          "Adding A Third Step, Running The Test And Checking The Results",
          "Linking The Report Message To Different Dynamic Variables",
          "Concluding Statements Before Digging Into Web Services Testing"
        ],
        "How Do I Test Web Services?": [
          "Introduction to the next topics regarding UFT",
          "All the URIs and WSDLs used in this course",
          "SOAP Web Services And The WSDL",
          "Starting To Test Web Services Through Positive Test Cases",
          "Generating A Positive Web Service Test Case",
          "Test Web Services By Making Sure That They Act As The End User Expects",
          "Test Web Services By Testing Their Performance",
          "Test Web Services By Making Sure That Unexpected Loads Can Be Handled",
          "Test Web Services Through Negative Scenarios",
          "How To Set Up A Checkpoint In A API Test"
        ],
        "HTTP Requests and Automated Testing": [
          "Setting Up An HTTP Test In UFT And Running It",
          "Breaking Down 3 Parts Of An Http Request",
          "Possible Options Of The Http Request",
          "Testing HTTP Status Codes",
          "Concluding Statements Regarding Http Requests",
          "Some Learning Advice Regarding Unified Functional Testing",
          "The Disadvantages Of Soap Web Services",
          "Soap Testing Is On The Decline, Restful Testing Is The Future"
        ],
        "How To Test REST APIs Using UFT": [
          "Introduction To Rest APIs",
          "Understanding Rest",
          "Looking At 1 Rest Service",
          "Another Restful Uri",
          "A 3rd Example Of A Restful Uri",
          "A 4th example of a RESTful URI",
          "Setting up a REST URI in UFT and running a test",
          "Running a REST API test and seeing the results",
          "Analyzing a JSON from UFT",
          "Using the Postman Extension in Chrome",
          "How to update a REST API in UFT",
          "Concluding words on REST APIs in UFT"
        ],
        "Why is API automated testing critical?": [
          "Introduction",
          "API testing skills are becoming very important",
          "Description of the API that we will be working with",
          "Testing an API with UFT is faster than testing a GUI",
          "What is the automated testing pyramid?",
          "How can API testing improve an employer's ROI",
          "How do complex applications interact with each other",
          "Understanding the 2 tier architecture of RESTful services",
          "Conclusions regarding why API testing is important"
        ],
        "What automated tests to create and when": [
          "What is the testing progression",
          "What is a smoke test",
          "Opening UFT",
          "How to start running the API service in UFT",
          "Getting familiar with the Flights API",
          "How to add a REST service to a UFT test",
          "How to model an API test in UFT",
          "Setting up a quick smoke test using a Get",
          "Setting up a quick smoke test with UFT",
          "What are CRUD operations",
          "Setting up an API test using a POST",
          "Modeling the Input Properties of a REST API",
          "Modeling the Response Properties of a REST API",
          "How to run a Create method using UFT",
          "How to move the REST service to a global repository",
          "How to create a Read method using UFT",
          "How to upload a XML file into the response body of UFT",
          "Starting to create an update action in UFT",
          "Analyzing a PUT request in Postman",
          "How to execute a PUT and GET",
          "How to create a PUT request using UFT",
          "How to create a test user for deleting purposes",
          "How to create a Delete http request in UFT",
          "Saving the UFT API test as a smoke test suite"
        ],
        "How to create a data driven framework for APIs using UFT": [
          "Introduction to the Testing Tree",
          "One example of a negative test case",
          "More examples of different types of test cases",
          "More examples of tests",
          "How to test primitive data types and dates",
          "How to test date fields",
          "How to move a UFT solution to a new location",
          "How to start testing a field of a method",
          "Each test case should be responsible for itself",
          "Creating test data for UFT",
          "Analyzing the test data for UFT API",
          "Understanding the test cases for UFT API tests",
          "How to import an Excel sheet into UFT",
          "How to link and input parameter to a data table in UFT",
          "How to create a checkpoint in UFT",
          "How to create a checkpoints in UFT 2",
          "Running a UFT API test",
          "How to add a post action handler in UFT",
          "How to add a post action handler in UFT 2",
          "How to interpret UFT API test results",
          "Checking UFT's API test results",
          "Load testing and security testing",
          "How to test caching and concurrency issues using UFT",
          "Key points in regards to automated testing with UFT API",
          "Key points in regards to automated testing with UFTs APIs 2",
          "Key points in regards to automated testing with UFTs APIs 3",
          "Concluding words",
          "All notes and code related to the entire course"
        ],
        "Bonus course notes": [
          "Real automation testing scenarios for sign up/login functionality from my work",
          "Free post reveals the exact script that we used to land any job that we wanted",
          "Keyword Driven Framework",
          "The Biggest Mistake That You Could Be Making As An Automation Engineer",
          "\"5 Steps For Creating The Perfect Automation Testing Scripts\" Ebook",
          "Lead Your Team To Automation Testing Success"
        ]
      },
      "requirements": [
        "Some basic knowledge of software testing",
        "Beginner computer usage skills"
      ],
      "description": "*Course updated on July 2015\nDid you know that Automation Testing using the GUI is on the decline? Do you know why?\nDid you know that Automation Testing using the API is quickly becoming one of the most desired skills of a QA?\nIf you want to increase your skill level, have job security, increase your pay and become one of the most desired QAs on the market, you MUST learn API Testing. You can master everything to make you phenomenal here!\nThis is the most comprehensive API Testing tutorial with Unified Functional Testing(UFT) on the web. The course will teach you EVERYTHING that you need to know for testing APIs in an automated fashion. GUARANTEED or your money back!\nHere is what you will learn:\n- You will master fundamental API testing skills that you can apply manually or through Automation Testing. Take these skills to any job and use them with any tool.\n- You will learn what Unified Functional Testing is and its new design\n- You will learn what an API is\n- You will master how to create different actions and set checkpoints in UFT.\n- You will learn the different types of APIs and how to test them.\n- You will learn why API testing is so important for you to master.\n- You will use Unified Functional Testing to do Automation Testing of APIs.\n- You will create your own solutions in UFT and pack them with tons of API tests to impress your bosses.\n- You will receive the Testing Progression cycle that will teach you what tests to create and when. This API Testing Progression has been gathered through 1000s of hours of work to help and make Automation Testing of APIs a breeze.\n- You will learn how to take the Testing Progression cycle to your work and use it right now!\n- You will learn when to perform automated Regression Testing, automated Smoke Tests, automated Integration Tests and so much more\n- You will never be lost and unable to create an automated API test again. With such knowledge, you will produce extremely high quality applications for your employer and receive the top paying positions\n- You will see real life examples, not just theory\nBonuses:\n- You will learn about a free API Testing tool that you can start using immediatel\n- Ebook on \"5 Steps to Creating the Perfect Automation Testing Scripts\".\n- You will receive real test cases for testing APIs that we actually developed at our jobs\n- You will receive access to 100s of free videos to help you master other aspects of Automation Testing\n- You will get access to the most comprehensive Software Testing blog on the web\n- You will receive the most thorough understanding of how to test APIs\n- Throughout the course you will learn amazing tips and tricks to make you an overall better QA Engineer\n- Access to the Keyword Driven Framework designed over 10,000 hours of automation testing\nYou will never need to waste your time with another course for API testing. Whether you want to do it manually or through automation, this course will give you the skills that you need to succeed. This course will make you a true expert with UFT. However, if you want to take your skills to another tool like Selenium, Watir, TestStudio... you can! This course will give you the fundamental understanding to work in any environment.\nHere is what our students are saying:\n\"The best tutorials I have ever seen, simply awesome. I take off my hat in front of you, you are an gorgeous professor, I am speechless to express how satisfied I am with these tutorials.\" -Lisbey\n\"I dont know much about QTP. But I really love the way of your teaching. I am a just beginner of QTP. I am very eager to watch all of your videos. Just keep up the good work. And finally it is excellent.\" -Srikanth\n\"Great Video I have ever seen on YouTube. You are so so clear and honest in presenting the material. I had no idea how important it is to use QTP from different angle, that is via scripting. Great Work and Thank You so so so much!\" -Mohammed\nAnd if you are not 100% satisfied, you can receive a full refund within 30 days of your purchase! You have absolutely nothing to lose.",
      "target_audience": [
        "Any level QA Engineer that wants to master API testing with Unified Functional Testing",
        "Individuals who are looking to spice up their resumes and experience with API testing",
        "Individuals who are looking to advanced in the software testing industry",
        "Individuals who are looking for job security as QA Engineers",
        "Individuals who want to be ready for the future IT technologies",
        "Any individual who just wants to become a better QA Engineer"
      ]
    },
    {
      "title": "Complete Guide to Unit Testing in .NET Core (NUnit & XUnit)",
      "url": "https://www.udemy.com/course/complete-guide-to-unit-testing-in-net-core-nunit-xunit/",
      "bio": "Master unit testing with NUnit, XUnit and MOQ with a real world N-Tier web application (.NET Core 6 and EF Core)",
      "objectives": [
        "Learn unit testing from scratch",
        "What unit tests are for and how they are written",
        "How to set up and use the NUnit and XUnit test framework",
        "Run and Debug Unit Tests",
        "Write Mocks with Mocking Framework (MOQ)",
        "Implement unit testing in N-tier real world web application project using XUnit"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Manual Testing Overview",
          "Advantages of automated testing",
          "Udemy Review",
          "Tools needed",
          "Project resources",
          "Types of test",
          "Testing pyramid",
          "Logical phase of an automated test"
        ],
        "First Unit Test": [
          "Create Project",
          "Create MSTest Project",
          "First Unit Test",
          "Failed Test Example"
        ],
        "UNit Testing": [
          "Create NUnit Project",
          "NUnit Update",
          "First NUnit Test",
          "Debug and assert",
          "Assignment 1 - Odd Number Checker",
          "Assignment 1 Solution - Odd Number Checker",
          "Assertion Model",
          "Testing multiple values",
          "Combine Unit Test with Expected Result",
          "Asseting Doubles",
          "Asserting String Values",
          "String Assert Helper Methods",
          "Asserting Null Values",
          "Global Initialization for Class"
        ],
        "NUnit Testing - Advance Concepts": [
          "Asserting Collections",
          "Collections Helper Method",
          "Range Assert",
          "Multiple Assert",
          "Working with Exceptions",
          "Exceptions without Message",
          "Setup Inheritance",
          "Assert Object Type",
          "Assignment 2 - Grading Calculator Part 1",
          "Assignment 2 - Grading Calculator Part 1 Solution",
          "Assignment 2 - Grading Calculator Part 2",
          "Assignment 2 - Grading Calculator Part 2 Solution",
          "Assignment 3 - Fibo Series",
          "Assignment 3 - Fibo Series Solution"
        ],
        "MOQ with Unit Testing": [
          "Setup Bank Account Class",
          "Setup Logger Class",
          "Integration Test Demo",
          "Unit Test with Fake Logger",
          "Mocking Overview",
          "MOQ in Action",
          "Misuing MOQ",
          "Setup LogBook Withdrawal",
          "MOQ Setup with Conditional Return",
          "MOQ setup default return value",
          "MOQ evaluate the return value",
          "MOQ and out parameters",
          "MOQ and ref",
          "MOQ default return values",
          "MOQ Properties",
          "MOQ Callbacks",
          "MOQ Verification"
        ],
        "XUnit": [
          "Create Xunit Project",
          "XUnit Comparision",
          "Xunit Calculator Part 1",
          "Xunit Calculator Part 2",
          "Assignment 4 - Grading Calculator",
          "Assignment 4 - Grading Calculator Xunit Solution",
          "Assignment 5 - Fibo Series XUnit",
          "Assignment 5 - Fibo Series XUnit Solution",
          "MOQ and Xunit",
          "Customer XUnit",
          "Assignment 6 - Bank Account XUnit"
        ],
        "Real World Example - NUnit": [
          "Setup Main Project",
          "Bongo Project Code Overview",
          "Bongo Models Date Checker Part 1",
          "Bongo Models Date Checker Part 2",
          "Setup Data Access Unit Test Project",
          "In Memory Database and Unit Testing",
          "Data Access Unit Tests",
          "Data Access Unit Tests Bugs and Pitfalls",
          "Setup Bongo Core Unit Test Project",
          "Bongo Core MOQ Setup and GetAllBooking Test",
          "Bongo Core Exception Unit test",
          "Bongo Core Save Booking Setup",
          "15 Bongo Core Save Booking Unit Test",
          "16 Bongo Core Return Code TestCase",
          "17 Bongo Core Seperating Unit Tests",
          "19 Bongo Web Test Project Setup",
          "20 Bongo Web Index Action Method Unit Test",
          "21 Bongo Web checking View Name",
          "22 Bongo Web Controller Unit Tests"
        ]
      },
      "requirements": [
        "Basic knowledge of C#",
        "Basic knowledge of .NET Core and EF Core (Basic CRUD application for real world project example)"
      ],
      "description": "\"Production application can break with a simple change that was unexpected to alter any other functionality\" Sounds familiar right?!\nGood news is, with well written unit test's this would be a thing of the past.\nAutomated testing has been a buzz word for a while but many times developers struggle to find a course that covers the fundamentals of unit testing while implementing what they learned in a real world project! That is the main focus of this course.\nThis course is all about writing effective unit tests using C# programming language and NUnit /XUnit as a unit testing framework. Along the way, we will learn the concepts related to unit testing. Today unit testing is an absolutely required skill from any professional developer. Companies expect from developers to know how to write unit tests using best practices. This course will help you setup a solid foundation with a real world example and how unit testing could be done in a .NET Core Web application with EF Core.\n\n\nWhat is unit testing?\nUNIT TESTING is a type of software testing where individual units or components of a software are tested. The purpose is to validate that each unit of the software code performs as expected.\n\n\nWhy learn unit testing?\nWhy should I learn unit testing? Why spend extra time to write code to test? Is manual testing not sufficient?\nThese are pretty common questions and I will answer them all but most of the times manual testing is much more time consuming and it is not as through as unit test. Unit tests take time once to write and can be executed for free every time!\nAs application grows, the cost of manual testing grows exponentially. And manual testing will never give 100% confidence with all the edge cases.. Automated tests help you to catch the bugs while it is in development phase, because of which they would be easier to resolve.\n\n\nWill it help me with job?\nMany times, skills comes with that will that skill help me achieve professionally. Unit testing is a very valuable skill with the current development cycle. It is a must have skill in most organizations for senior developers.\n\n\nBy end of this course you will have a solid foundation with unit testing. Along with a solid foundation we will implement what we learned in real world N-Tier web application with .NET 6 and EF Core.",
      "target_audience": [
        ".NET developer who wants to build better quality software with fewer bugs",
        ".NET developer who wants to learn unit testing",
        ".NET developer who wants to see unit testing in real world application"
      ]
    },
    {
      "title": "WebServices/API Testing by SoapUI & ReadyAPI - Groovy |30+hr",
      "url": "https://www.udemy.com/course/soapui-with-groovy-with-realtime-projects/",
      "bio": "Detailed Groovy + Certification Coverage + Soapui tutorial, Rest API Testing, Soap UI Free & Pro",
      "objectives": [
        "Ready to work on real time Soap & REST API automation project",
        "Able to implement SoapUI on your work place or will also get ready for High Paying API Testing Opportunity",
        "Detailed understanding of WebServices/ API and its automation using SoapUI",
        "Detailed understanding of Groovy Scripting and its implementation in SoapUI",
        "Ready to work in SoapUI Free as well as Pro Version",
        "Ready to develop reusable & maintainable framework for API Automation"
      ],
      "course_content": {
        "WebService Basics": [
          "What is WebService",
          "Webservice Example",
          "*** SoapUI Course Architecture : Must for everyone..****",
          "Advantage of WebService over WebBased Application",
          "Difference between API and WebService",
          "Different type of Services : Soap & Rest",
          "MicroService Introduction"
        ],
        "Setup Environment": [
          "Setup SoapUI Free version",
          "Setup SoapUI Pro version",
          "UDDI"
        ],
        "Jump into SoapUI": [
          "What is SoapUI",
          "Free Soap Webservices",
          "SoapUI work hierarchy",
          "First Soap Test Case / Soap Request test step"
        ],
        "Work with REST API [Same Functionality in SOAPUI FREE and PRO]": [
          "Different methods used in REST API",
          "First REST Test Case / Rest Request test step",
          "First REST Test Case : POST Request",
          "First REST Test Case : PUT Request",
          "First REST Test Case : DELETE Request",
          "End to End Scenario with multiple REST API",
          "Interview Questions"
        ],
        "Properties at different SoapUI Level | Variables": [
          "Agenda of this Section",
          "Properties in SoapUI",
          "Operations on Properties",
          "Use Properties in TestCase",
          "[SoapUI-FREE] Property in SoapUI"
        ],
        "Test Steps in SoapUI": [
          "Agenda of this Section",
          "Delay Test Step",
          "Groovy Script test step",
          "Property Test Step",
          "Manual test step",
          "Run Test Case test step",
          "Assertion Test Step"
        ],
        "Correlation : Fetch Data from Response and Use it in Request": [
          "Fetch Dynamic Data and Use in Further Request"
        ],
        "Parametrization / Data Driver Test Cases": [
          "Data Source - Data Source Loop using Grid",
          "Data Source - Data Source Loop using text file",
          "Data Source - Data Source Loop using excel file",
          "Data Sink step",
          "Data Source - Data Source Loop - Data Sink",
          "DataGen test step"
        ],
        "Assertions": [
          "Assertion : Contains & Not Contains",
          "SLA Assertion",
          "Schema Assertion",
          "Soap Fault / Not Soap Fault Assertion"
        ],
        "Xpath and XQuery Assertion": [
          "Xpath Assertion(Pro)",
          "Xpath Assertion - (SoapUI free version)",
          "XQuery assertion in SoapUI"
        ]
      },
      "requirements": [
        "No Pre-requisite, We will teach groovy in this course which we will use as programming language for SoapUI"
      ],
      "description": "The only course in the Web World with 2 real time project of Webservices/API automation using SoapUI Tool.\nOnly course on web which cover almost all advance topics,\n\nXpath Assertion\nXQuery Assertion\nHandling CData\nTestRunner object\nMessageExchange Object\nXML Holder\nJSON Parser\nCertification preparation\nHTML Monitoring\nIntegration with ANT and Jenkins\nOn course completion You will be Expert in SOAP/ REST API Testing and can implement Successfully it in your work place\nCourse is designed in such a way that the user does not required to have any prior understanding of groovy and SoapUI\n\nThis Course explains\n·What are the Webservices\n·How to Test the Webservices using Soap UI\n·Groovy Scripitng Concepts\n·How to Automate the Webservices Testcases in Soap UI with Groovy\n·Testing Resting API\n·Security Testing with Soap UI\n·DataBase Testing with Soap UI\n·How to Mock the webservics\n\nBy the End of this Course you will able to understand the webservices specifications and write all kind of effective Manual and Automation testcases (Functional/Security/Data Base Testcases) to test them in Soap ui by using different features available on Tool\nCourse Coverage\n1.   Setup Sample Application for Practice\n2.   Setup SoapUI and ReadyAPI (SoapUI NG Pro)\n3.   Create Basic Requests (GET, POST,  PUT, DELETE)\n4.   Write End to End Test Cases\n5.   Add Assertions to Test Cases\n6,   Learn Different Steps in SoapUI Free and ReadyAPI\n7.   Learn Basic to Advance Groovy Scripting",
      "target_audience": [
        "Freshers looking for opportunity in Software Testing/ API Testing",
        "Manual Testers Looking opportunity in API/ WebService Automation",
        "Automation testers want to start work in SOAP and REST API automation using SoapUI",
        "Any Profession, who are looking for career opportunity in API Testing using SoapUI"
      ]
    },
    {
      "title": "REST API Using Java and BDD Cucumber: API Testing",
      "url": "https://www.udemy.com/course/rest-api-using-java-and-bdd-cucumber-api-testing/",
      "bio": "New API Automation Era",
      "objectives": [
        "QA IT Automation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Set Up Your Dependencies": [
          "Set Up Your Dependencies",
          "Set Up Your Dependencies"
        ],
        "Java for Testers": [
          "Java for Testers"
        ],
        "Automation Environment": [
          "Creating the Maven Project",
          "Maven Repository Part 1",
          "Maven Repository Part 2: Getting Dependencies",
          "Dependencies Sources"
        ],
        "Postman Practice": [
          "Postman Practice",
          "Postman Practice: Sending Requests"
        ],
        "API Automation": [
          "Source Code to Download",
          "Starting to Learn How to Solve Problems",
          "REST API Get Request",
          "REST API Get Request: Using Mocking Server and Status Code Verification",
          "REST API Post Request",
          "Complex APIs",
          "API Post: Complex APIs - Easy to Build",
          "Used API",
          "API Post: Complex APIs - Easy to Build 2",
          "Deleting Unnecessary Getters and Setters - Clean Code",
          "PUT and PATCH API Requests",
          "DELETE API Request",
          "Intro and Installation of Cucumber BDD",
          "Compilation Error",
          "Final POM with updated JUNIT",
          "Running First Cucumber Test",
          "Running First Cucumber Test Video",
          "JSON Body That We Will Use",
          "Initiating JSON Body and Headers with Cucumber",
          "Sending Request and Verifying Status Code",
          "Verifying JSON Respond",
          "PUT, PATCH, and DELETE Requests",
          "Make Sure to Use Getter for the Next Video Example",
          "Correlation: Body Request",
          "Correlation: From Body Response to New API Header",
          "Generating Reports",
          "Installing Jenkins",
          "Configure Jenkins: Root Cause Analysis Example",
          "Installing Reporting",
          "Source Code to Download"
        ]
      },
      "requirements": [
        "General knowledge of PC; basic Java knowledge; understanding what is API"
      ],
      "description": "What makes this course unique:\n*Helps to gain the spirit of what to be an automation engineer\n*Solving the problems during the automation process: getting the mindset approach\n*Reduce huge lines of complex code\n*Basic Java Programming experience required (guidance for API coding provided)\n*Guiding through the each step from creation to the reporting stage\n*Real business technology experience with the most trading tools and approaches\n*End to end automation\n*85% of the current course contest is day to day activity of Rest API Automation Engineer (the rest is depending on the project uniqueness that you WILL work)\nP.S. Hello and thanks for taking my course, it is really important to put rating and good feedback from you guys; please support me and give an opportunity to create a new course!",
      "target_audience": [
        "Beginner QA Automation Engineers and Developers"
      ]
    },
    {
      "title": "Playwright JS/TS Automation Testing from Scratch & Framework",
      "url": "https://www.udemy.com/course/playwright-tutorials-automation-testing/",
      "bio": "End to End Playwright tutorials on JavaScript & TypeScript. UI Testing, API testing, Page Objects,Cucumber, CI/CD etc",
      "objectives": [
        "Learn JavaScript fundamentals required for Playwright Automation testing",
        "Understand the Web Automation with Playwright on Live Applications",
        "Comprehensive knowledge on all Playwright Methods and their usage with examples",
        "Learn How to make API calls with in UI Automation tests to perform smart automation",
        "Understand how to Intercept Network/API requests & responses with Playwright",
        "Get Familiar with Playwright Inspector tool, Trace Viewer & Code Gen (Record Playback) tools",
        "Develop Playwright cucumber BDD Framework from Scratch with best practices",
        "Develop End to end Mocha Framework with Playwright utilizing all the features available in the tool",
        "Understand visual testing, mobile device emulation & test execution in CI/CD Docker container"
      ],
      "course_content": {},
      "requirements": [
        "No Programming experience required. JavaScript basics are fully taught in the course in a dedicated section"
      ],
      "description": "**Course last updated on March 2nd 2025 with Coding Interview exercises**\nWelcome to the comprehensive Playwright course that covers everything from the basics to frameworks, including JavaScript fundamentals without need of any prior JavaScript experience.\nThis course is entirely practical. We will use a fully functional e-commerce application for testing and learn how to automate every scenario of the application, including dynamic components often used in modern React and Angular applications.\nWe will also explore how to perform API testing to create data within the application using Playwright.\nThe course will show you how to conduct end-to-end functional testing, which includes both UI testing and API testing in a single script. This script creates data, tests scenarios, and deletes the data.\nAdvanced topics are discussed, such as grabbing session cookies using APIs and responses to bypass the UI login screen for faster and more reliable execution.\nEverything is possible with Playwright, and this course demonstrates a systematic way to handle complex e-commerce applications with strategically designed automated test cases.\nThe course covers two powerful frameworks for designing test cases:\nPlaywright Cucumber BDD Framework\nPlaywright with Mocha\nThese two frameworks are built on top of page object design patterned tests, which take data from external sources and use custom utility methods to produce outstanding HTML reports.\nFinally, the complete framework will be integrated with CI/CD Jenkins and use Docker containers to run the tests.\nIt's important to note that Playwright has powerful logging capabilities, including screenshots, videos, and built-in features called Playwright Inspector and Traces for a detailed view of post-execution. These features are demonstrated with live demos throughout the course.\nIn conclusion, this course is a one-stop shop for you to become a Playwright hero and take charge of modern, full end-to-end test automation.\n\n\nNote : We are using JavaScript language binding to build Playwright Automation tests. (Js is mainly picked language for Playwright)\nFor Beginners, there is 3 hours Javascript video in the last section of this course which covers all JS basics from Scratch including coding Assignments and quizzes which prepares candidates for Interviews.\n\n\nCourse Structure Breakdown:\n\n\nPlaywright Web/UI Automation (50%) - Master core Playwright concepts for comprehensive UI automation.\nMixed Web & API Testing with Network Mocking (25%) - Expand your skills by combining UI and API testing with network mocking capabilities.\nPlaywright Advanced Framework Features (25%) - Dive deep into advanced Playwright frameworks for optimal test design.\nOptional: JavaScript Basics for Beginners (3 hrs) - Build a solid JavaScript foundation for confident Playwright exploration.\nBecome a Playwright hero and embrace the future of end-to-end test automation. Enroll today!",
      "target_audience": [
        "Automation testers",
        "QA",
        "Developers"
      ]
    },
    {
      "title": "VSTS (Azure DevOps) : Crash Course for Software Testers",
      "url": "https://www.udemy.com/course/vsts-crash-course/",
      "bio": "Agile Activities for Project Management | Testing Activities",
      "objectives": [
        "How to work on VSTS for Project management activities - User Stories, Sprints",
        "How to work on VSTS for Test management activities - Test Plan, Test Suite, Test Case"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Setup Account for Practice",
          "Create and Update Project",
          "Add User Stories in Backlog",
          "Define Sprints",
          "Add User Stories to Sprint",
          "Add Task to Sprint"
        ],
        "Software Testing Activities": [
          "Define Hierarchy",
          "Write Test Case",
          "Add Parameters",
          "Add Configurations",
          "Execute Test Case",
          "Report Defect",
          "Define Project Sprints"
        ]
      },
      "requirements": [
        "Basic understanding of Manual Testing",
        "Basic understanding of Agile Methodologies"
      ],
      "description": "Visual Studio Team Services (VSTS) is an extension of the Microsoft Visual Studio architecture that allows it to encompass development & testing teams, with special roles and tools for software architects, developer specialties and testers.\nVSTS includes software development, collaboration, measurement and reporting tools that fall broadly into server-side and client-side applications.\nCoverage :\n1.  Create Project\n2.  Define User Stories\n3.  Work with Sprints\n4.  Test Management Activities\n5.  Test Case Development and Execution",
      "target_audience": [
        "Manual Testing, looking to manage Testing Activities by using Test Management Tool",
        "Testers, Looking to setup Agile Project on VSTS"
      ]
    },
    {
      "title": "Rest API Testing (Automation) from Scratch-Rest Assured Java",
      "url": "https://www.udemy.com/course/rest-api-automation-testing-rest-assured/",
      "bio": "Top Ranked #1 Rest API Test Automation & postman tutorial with Java from Basics to Framework with Real time examples",
      "objectives": [
        "By end of this course,You will get complete knowledge on REST API Automation testing",
        "You will be able to DESIGN and IMPLEMENT structured API AUTOMATION FRAMEWORKS with REST Assured API",
        "In-depth understanding of REST API Automation using RestAssured with real time examples",
        "Thorough knowledge on REST Manual testing tools like POSTMAN with many Practise API's demo",
        "Additional knowledge on generating excellent client reports for API Test execution results",
        "Specialized Trainers who can help in answering students queries in part of your Course Journey"
      ],
      "course_content": {},
      "requirements": [
        "******You need NOT have any Prior API Testing experience to start this course********* This course teaches everytopic from scratch level",
        "Even non Programming candidates can follow this course comfortably",
        "Though these are online Lectures. You will have Life Time instructor support. You can post your Queries in discussion board or can contact me directly, Will respond in less than 12 hours",
        "All RESTAPI automation Installation setup including Java knowledge is taken care as part of course",
        "Theoretical Material and Code dump are available for download",
        "***Honored with BEST SELLER Tag by Udemy for our most trusted commitment to students***"
      ],
      "description": "Course last updated on March 5th with GraphQL API testing examples\nREST Assured API is powerful API released by google (just like Selenium for Web)  to Automate REST API's.  70% of the IT industry now heading towards this API for automating Services\nLearn Everything You Need to Know About REST API Automation including Postman Even If You've Never worked Before on API's\nCourse covers Basics To Advanced Level With Rest Assured, Postman, Java, TestNG, Framework Implementation From Scratch with rich examples like Jira, Twitter, Youtube, Google Maps API examples\n\n\nWhat made this course Unique from other courses?\nOnly course on Internet which covers on  JIRA,  TWITTER,  GOOGLE MAPS AND YOUTUBE API  examples\"\n-No other course covers topics covered in this course with such great depth of detail. For proof, You can cross check with other tutorials if they cover Jira youtube etc,,\n\n*WHAT MAKES THIS COURSE BEST?  *\nWe assume that students have no experience in automation/coding and start every topic from scratch and basics.\nExamples are taken from TESTING REAL TIME HOSTED Rest APIs to understand how different components can be automated, that will give you idea of industry level framework and give you confidence.\nNO PRIOR CODING OR AUTOMATION EXPERIENCE NEEDED, this course covers all the necessary topics.\nGet more than 30 hours of unique content with real example code files provided to refer and learn with examples.\nCourse is prepared on utmost care of picking real world scenarios what actually industry does in testing the REST API's and they were neatly delivered with every basic concept till framework building level\n\n\n\nOn course completion You will be Mastered in REST API Automation  and can implement Successfully it in your work place or will surely land on High Paying Job\n\n\n\nWe start from Beginners level and go through Advanced FRAMEWORK level. This is a single course for everything you need to know related to Rest API Manual testing and Automation.\nThis course explains :\n\nWhat is REST API's?\nUnderstanding the REST API architecture\nTerminologies such as Endpoint, Resources,Payload,Parameters\nWhat is POSTMAN?\nHow to test API's with Postman?\nDifferent type of REST requests\nWhat is REST ASSured?\nSetting up REST ASSURED environment for automation\nDiscussion on google API's for automation\nREST Assured methods\nREST Assured validations\nMethods to validate Json and xpath responses\nOptimizing scripts to Framwork standards\nDiscussion on JIRA API's\nDiscussion on Twitter API's\nUnderstanding OAUTH authentication\nPOJO Classes usage\nSerialization & Deserialization for Json inputs and outputs\nTons of examples on automating API's with rest assured validations\nLogging feature to log responses\nMigrating project to TESTNG framework\nBuilding Maven setup as build management tool\nCreating BAT file to run whole project on single click\n\n\nAt the end of this course you can pick any REST API over Net and can automate it comfortably with all necessary valdiations\nHappy Testing and Wish you Good luck!",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Any Software engineer who are interested in Mobile Technologies",
        "Freshers/Graduates/ Software Testers"
      ]
    },
    {
      "title": "Test Management using HP ALM / QC (Quality Center)",
      "url": "https://www.udemy.com/course/starthpalm/",
      "bio": "Basic to Advance",
      "objectives": [
        "Ready to jump in to test management using ALM",
        "Detail understanding of different modules under ALM"
      ],
      "course_content": {
        "Setup": [
          "SetUp ALM Account for Practice"
        ],
        "Requirements": [
          "Create Requirement Folder Structure",
          "Create Requirements",
          "Requirement Tab Features"
        ],
        "Create Test Case : Test Plan": [
          "Create Folder Structure",
          "Create Test Case",
          "Create Test Steps",
          "Link Test Case with Requirements"
        ],
        "Execute Test Case - Test Lab , Test Runs": [
          "Create Test Set(Test Suite)",
          "Execute Test Set",
          "Link Defect to Test Case",
          "Set Execution Flow",
          "Test Run Tab"
        ],
        "Defect Section": [
          "Report a new Defect",
          "Supported Attachements",
          "Defect - View, Attachments, Sorting",
          "Defect - History , Flagged, Pinned, Search"
        ]
      },
      "requirements": [
        "Windows 2008| 2012 Server machine"
      ],
      "description": "HP Application Lifecycle Management (HP ALM) is a set of software tools developed and marketed by the HP for application development and application testing.\nIt includes tools for requirements management, test planning and functional testing, performance testing (when used with HP Performance Center), developer management\nHP ALM is designed to support key stakeholders responsible for delivering applications as they progress through their lifecycle.\nIt is a combination of a common platform, several key applications and a dashboard targeted at managing the core lifecycle of applications, from design through readiness for delivery to operations\n\nWe are going to learn following components\nProject Planning and Tracking\nHP ALM provides project planning and tracking so application development solutions teams can define, track, measure, and report on project milestones and key performance indicators.\nApplication Lifecycle Intelligence\nHP ALM delivers real-time traceability of requirements and defects. QA department can significantly benefit from this traceability to get on-time reports and have visibility into the system under development\nLab Management Automation\nHP lab management capability allows testing teams to provision and deploy a test lab themselves in a hybrid delivery environment\nAsset Sharing and Re-use\nHP ALM supports sharable asset libraries that can be reused across projects while maintaining traceability. Specific changes can be applied to shared assets for each project while maintaining library integrity, and projects can re-synch with the library as needed. Cross-project defect collaboration is also supported",
      "target_audience": [
        "Freshers looking opportunity in Software Testing",
        "Automation testing want to switch to test management"
      ]
    },
    {
      "title": "Mobile Testing Masterclass - From The Beginning",
      "url": "https://www.udemy.com/course/mobile-testing-masterclass-from-the-beginning/",
      "bio": "Learn Mobile Application Testing and become a Mobile App Tester! Android Studio, ADB, logCat, live projects & more!",
      "objectives": [
        "Learn the core testing skills needed to apply for Mobile Testing positions in just 3 hours.",
        "Learn Android Testing. Android Studio, Logcat, ADB Tools, JIRA, Testrail",
        "Be able to demonstrate your understanding of mobile and software testing to future employers.",
        "The course is continually UPDATED, so you’ll learn the very latest as Software Testing evolves.",
        "SUPPORT is mind blowing – questions you have are answered that day",
        "The skills you’ll learn are in HIGH DEMAND. You can start earning money as a freelance mobile tester immediately!"
      ],
      "course_content": {
        "Introduction": [
          "Why This Course ?",
          "Working with Subtitles"
        ],
        "Software Testing Fundamentals": [
          "Section Introduction",
          "The Role of Testing in Software Development",
          "Software Development Life Cycle",
          "Testing Activities",
          "Bug Reporting - Principles and Best Practices",
          "Bug Reporting Practice",
          "Bug Life Cycle - Tracking and Managing Defects",
          "Software Testing Fundamentals - Quiz 1",
          "Software Requirement Specifications",
          "Test Case and Checklists",
          "Test Case and Checklists - Hands-on Practice",
          "Software Testing Fundamentals - Quiz 2",
          "Types of testing Black-box and White-box",
          "Smoke and Sanity Testing",
          "Regression Testing",
          "Risk Based Testing",
          "Software Testing Fundamentals - Quiz 3",
          "Software Testing Newsletter and Blogs"
        ],
        "Basics of Mobile Testing": [
          "Section Introduction",
          "Importance of Mobile Testing",
          "Mobile Testing Challenges",
          "Mobile Testing Strategy",
          "Types of mobile applications Native, Web, and Hybrid",
          "Real Devices, Simulators and Emulators",
          "Mobile App Installation",
          "Mobile Testing Mindset",
          "Quiz - Basics of Mobile Testing",
          "Software Testing Q&A"
        ],
        "Advanced Mobile Testing Concepts": [
          "Section Introduction",
          "Android Studio Installation - Windows",
          "Android Studio Installation - Mac",
          "Android Testing on Emulators",
          "Mobile Test Design",
          "Advanced Mobile Testing - Quiz 1",
          "Functional Testing - Correctness & Interoperability",
          "Non-Functional Testing - Usability & Portability",
          "Non-Functional Testing - Reliability & Performance",
          "Advanced Mobile Testing - Quiz 2",
          "Mobile Application Testing Pitfalls to Avoid"
        ],
        "Mobile Testing Tools": [
          "1- Section Introduction",
          "Logcat for Android Device Logs",
          "2- Jira for Bug Reporting",
          "TestRail for Test Process Management"
        ],
        "Freelancing Opportunities for Mobile Testers": [
          "Section Introduction",
          "uTest Introduction",
          "uTest Projects and Bug Reporting"
        ],
        "Mobile Testing Interview Preparation": [
          "Section Introduction",
          "Mobile Testing Interview Questions",
          "Technical and Behavioural Interview Tips",
          "How to Prepare a Great Software Tester Resume"
        ],
        "Bonus Section : Software Testing and more!": [
          "Presentations - practice anytime",
          "Blog recommendations",
          "What is next?"
        ]
      },
      "requirements": [
        "A computer with either Windows, Mac or Linux to install all the free software and tools needed.",
        "Mobile phone with either iOS(iPhone) or Android for the Mobile application practices.",
        "Nothing else! It’s just you, your computer and your dedication!"
      ],
      "description": "Whether you want to:\n- build the skills you need to get your first Mobile Testing job\n- move to a more senior testing position\n- get started with Android Studio, ADB Tools, logCat or other hot areas that Software Testers specialises in\n- or just learn Mobile Testing to be able to start your freelancing career\n…then you need a solid foundation in Mobile Testing. And this course is designed to give you those core skills, fast.\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Mobile Tester.\n\n\nThis course is aimed at complete beginners who have no testing experience, as well as existing software testers who want to increase their career options by learning Mobile Testing.\n\n\nThe course includes over hours and hours of 1080P (HD) video tutorials with high-quality sound. All the videos are hand edited and unnecessary parts are removed. You will only learn \"what you need to learn\" to become successful!\n\n\nAll videos have hand edited subtitles. We spent many hours to correct all the subtitles to help you to have a smooth learning experience.\n\n\nWhy should you take this course?\nThis is the most up to date Mobile testing course on Udemy. We explain all the important testing methodology in both Agile- and modern way, with supporting real life examples. Most of the other testing courses created by inexperience people or someone who has a very few understanding of testing. This course is created by a Senior QA Engineer, who has experience from 3 different countries and who is still actively working at one of the TOP company in the Netherlands.\n\n\nHere’s just some of what you’ll learn\nAll the essential Software Testing theory needed to fully understand exactly what you’re testing and why\nYou will learn mobile application testing on real devices/emulators and simulators.\n5+ Tools such as Android Studio, logCat device log collection, ADB Tools, JIRA, testRail and more!\nStart practising online and earn money immediately.\nLearn the latest IT industry topics and stay up to date.\n\n\nWhat if you have questions?\nAs if this course wasn’t complete enough, we offer full support, answering any questions you have 7 days a week (whereas many instructors answer just once per week, or not at all).\nThis means you’ll never find yourself stuck on one lesson for days on end. With our hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nThere’s no risk!\nThis course comes with a full 30 day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, you will receive a 100% refund. You literally can’t lose.\n\n\nReady to get started ?\nEnrol now by using the “Add to Cart” button on the right, and become a successful software tester! Or, start watching the preview feature, so you know you’re 100% certain this course is for you.\nSee you at the course!",
      "target_audience": [
        "The course is 100% for you if you’re wanting to be a kickass Mobile Tester!",
        "No previous testing experience is assumed. Basically to anyone who wants to learn more testing!"
      ]
    },
    {
      "title": "Playwright with Python for Web Automation Testing + Visual",
      "url": "https://www.udemy.com/course/playwright-with-python-for-web-automation-testing/",
      "bio": "Create a scalable Pytest framework from scratch with Visual Testing (free), Parallel execution, Reports, CI/CD and more",
      "objectives": [
        "Become an expert in Playwright with Python",
        "Super intuitive Pytest framework with parallel execution, reporting and CLI commands",
        "CI/CD execution with proper password management and Visual Testing",
        "Tackling different authentication and other sorts of problems"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge required",
        "Windows/Mac/Linux machine"
      ],
      "description": "Spin up your automation framework from scratch in a matter of days! It's super fast with Python and pytest.\nThen comes Playwright with its nitrogen-fast browser test execution! We are going to blend Playwright capabilities into the pytest framework with the use of markers, fixtures, CLI commands.\nIn this course we will  cover:\nPython basics\nPlaywright\nPytest\nproject structure\npage object model\nreporting\nparallel execution\ncreate our own pytest fixtures for set_up and tear_down methods\nutilize existing Playwright fixtures\ndeploy our test to CI/CD using GitHub Actions\nLearn yml syntax\nStore login passwords securely as GitHub Secrets\nPerform Visual Testing like a pro\n\n\nWhy Playwright?\nPlaywright enables fast, reliable and capable testing and automation across all modern browsers.\n\n\nSupport for all browsers\nTest on Chromium, Firefox and WebKit. Playwright has full API coverage for all modern browsers, including Google Chrome and Microsoft Edge (with Chromium), Apple Safari (with WebKit) and Mozilla Firefox. Test can run in headful and headless modes\nFast and reliable execution\nBy fast I mean REALLY fast!\nAuto-wait APIs. Playwright interactions auto-wait for elements to be ready. This improves reliability and simplifies test authoring.\nFast isolation with browser contexts. Reuse a single browser instance for multiple isolated execution environments with browser contexts.\nResilient element selectors. Playwright can rely on user-facing strings, like text content and accessibility labels to select elements.\nMultiple domains, pages and frames. Playwright is an out-of-process automation driver that is not limited by the scope of in-page JavaScript execution and can automate scenarios with multiple pages.",
      "target_audience": [
        "Automation Testers",
        "Manual QA Analysts",
        "Developers and BAs who want to learn or improve their automation skills"
      ]
    },
    {
      "title": "XRAY Test Management for Jira Software (Cloud)",
      "url": "https://www.udemy.com/course/xray-test-management-2022/",
      "bio": "Test Management in Jira Software",
      "objectives": [
        "How to Design tests in Xray",
        "How to Execute tests in Xray",
        "Parameterizing and Creating Test Data in Xray",
        "Creating Reports and Dashboard in Xray"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Jira",
        "Understanding of Testing Process"
      ],
      "description": "Xray allows you to plan, design, and execute tests, as well as generate test reports. Xray uses specific Jira issue types for this process. Each testing phase allows you to use the following issues: Plan phase: Test plan issues. Design phase: The specification is defined using precondition and test issue types.\nXray is a Test Management add-on to the Jira Software cloud. It enables QA Engineers to manage their test resources within Jira along with the functionalities of Jira. This can save a lot of your time in terms of systematically organizing your tests, executions, data, etc. Also, a great platform to build easy reports to be shared with stakeholders. It also gives you the freedom to collaborate on different tests and the Jira Flavor makes it more intractable.\nThe sessions include all Xray issue types including Tests, Preconditions, Test Executions, Test Sets, and Test Plans.\nThe course includes a working tutorial with different aspects of Xray features with real-time scenarios and use case discussions which can help individuals apply them back in their day-to-day work. This course covers sessions right from installing the tool, creating tests, organizing tests, parameterizing tests, building reports, traceability, coverage measurement, reporting, and dashboard creation.\nXray comes with an in-built Test Repository option to organize various tests in a systematic folder manner for ease of reference and categorization.\nAny new user can learn the end-to-end functionality of Xray using this course and implement it in real time.",
      "target_audience": [
        "QA Engineer and Leads",
        "Test Manager"
      ]
    },
    {
      "title": "Automation Testing with QTP",
      "url": "https://www.udemy.com/course/software-testing-qtp-tutorial-advanced-automated-framework/",
      "bio": "Become an expert automation tester through this award winning HP Quick Test Professional (QTP) course.",
      "objectives": [
        "Create an automated framework quickly and easily for all of your automation needs",
        "Use an excel sheet for importing and reading data for your automated script",
        "Create a reusable function library that makes creating new testing scenarios a breeze!",
        "Use VBscripting to create a dynamic driver script to run your automated test"
      ],
      "course_content": {
        "Software testing-Creating a full and easy automated framework with QTP": [
          "Save 70% on our Selenium Webdriver Course",
          "Future content",
          "QTP tutorial - All parts and components of an advanced automation framework",
          "QTP tutorial - Continuing to set up the automated framework",
          "QTP tutorial-Using the automated framework components",
          "QTP tutorial - Implementing the automated framework against an application",
          "QTP tutorial - The automated framework and the application"
        ],
        "Extra resources to improve your Automation Testing skills": [
          "Update your skills, improve your income, get a better job and learn API Testing",
          "API Testing article to help improve your skills and increase your pay",
          "Free post reveals the exact script that we used to land any job that we wanted",
          "Keyword Driven Framework designed by us. Learn how to install it on your system",
          "How To Create An Automated Check Using WebDriver in Browser Stack with C#",
          "How To Lead Your Team To Automation Testing Success!"
        ],
        "Selenium Webdriver Tutorials": [
          "How To Download A Github Project and Open It in Visual Studio",
          "Resharper for Visual Studio: Build Amazing Automation Testing Code"
        ]
      },
      "requirements": [
        "Students need the free 30 days trial of UFT to be able to follow along with this course"
      ],
      "description": "In Software testing, knowing automation with any of the market's current tools will get you the highest paying jobs! QTP and UFT are the industry's leading tools in automation and it's important to master these tools to be at the top of your field. The most important aspect of automation is learning to create an automated framework properly and efficiently. We teach you how to do just that in this easy and quick course through 7 short videos.",
      "target_audience": [
        "This course is for individuals who already have some knowledge and technical skills using QTP or UFT"
      ]
    },
    {
      "title": "Appium -Mobile Testing (Android/IOS) from Scratch+Frameworks",
      "url": "https://www.udemy.com/course/mobile-automation-using-appiumselenium-3/",
      "bio": "[LATEST VERSION 2.0] Master on Mobile Apps Automation Testing from basics to Framework CI/CD with real time examples",
      "objectives": [
        "By the end of this course you will be able to automate any (Native,Hybrid,Web) Apps in Android/IOS using Appium",
        "Thorough Understanding on Appium best practices and reusable utilities for automating Apps on both Real devices and Emulators",
        "Design the Industry Standard Mobile framework from Scratch which is compatible for both Android and IOS Platforms",
        "Implement end to end CI/CD pipeline from scratch using Appium with all framework features like logging, reporting etc",
        "Design Appium Framework with open source technologies like Learn Maven, TestNG, Jenkins, JUnit, Git, Extent Reports and Apache Log4J2",
        "Automate Mobile Browsers like Chrome & Safari with Appium WebDriver Library under hood",
        "You will know the coding standards in writing the most optimized Mobile Automation Scripts",
        "You will be able to create GREAT LOOKING REPORTS using the best advanced REPORTING TOOL",
        "\"Last but not least\" you can clear any Interview and can Lead Entire Appium Automation Project from Design Stage"
      ],
      "course_content": {
        "Introduction to Appium and Course Plan": [
          "Course Agenda",
          "Appium Features",
          "Appium Internal Architecture"
        ],
        "Appium Installation Instructions for Windows & Mac": [
          "Important Note on Player settings",
          "Download Java, Android Studio & Node softwares for Appium Setup",
          "Set Environment variable Paths of all Softwares in WINDOWS",
          "Set Environment variable Paths of all Softwares in MAC",
          "Configure Android Virtual Device/Emulator and Install Appium Server",
          "Setting up Appium Maven project with Java client dependencies",
          "Caution on Compatible testnG Java version along with Plugin Install",
          "Important Note"
        ],
        "Brush up Java Concepts for Appium Automation": [
          "Course Strategy to learn Appium basics for Selenium Automation",
          "Introduction to Java variables and Data types with examples",
          "What are Arrays in Java? How to initialize and retrieve the values of array",
          "Introduction to For loop to iterate over array of Strings and Integers",
          "Enhanced for loop declaration & using Conditional statements inside the loops",
          "Code download",
          "What is Arraylist and differences between Arraylist and Arrays",
          "Strings in Java - How to declare Strings & Important String methods",
          "How to create methods and access methods using Java class objects",
          "what is Inheritance in Java with example",
          "Code download"
        ],
        "Getting Started with Mobile testing using Appium Code": [
          "Code & Apps download for Practice",
          "What is UIAutomator and creating UiAutomator object to define Capabilities",
          "How to start & Stop Appium Server Programmatically using AppiumServiceBuilder",
          "Introduction to Appium Inspector to identify the elements on the Apps",
          "Creating Base Class with Util methods and extend it to Child Appium Tests",
          "Appium Server not starting programmatically - FIX WORKAROUND",
          "Android Home Not Set error - MAC - Troubleshoot - FIX WORK AROUND",
          "Stay Connected to the Testing World"
        ],
        "In Depth understanding of Android Native Apps automation with Appium": [
          "Introduction to Id, Xpath & Accessibility ID locators in App with an example",
          "How to handle Mobile popups & return list of matching elements on Android app",
          "How to extract the text & Enter the info on Mobile Apps with Appium",
          "Quiz on Section-5"
        ],
        "Advanced Gestures Automation with Key Events Handling using Appium": [
          "Introduction to Appium Mobile Gestures and how it works",
          "How to long press on Android Apps using Appium - LongPressGesture",
          "How to Perform Scroll Gesture using Appium on Android Apps",
          "How to automate Swipe functionality using Appium on Android",
          "Quiz on Section-6"
        ],
        "Appium Miscellaneous Topics for Android Automation": [
          "How to Perform Drag & Drop on elements in app using Appium",
          "Assignment - End to end exercise on Appium",
          "Automate Miscellaneous Activities like orientation & KeyEvents using Appium",
          "How to open App using app package and activity name using appium"
        ],
        "Real time Ecommerce App- End to end Practise Exercises": [
          "Introduction to App features and test cases to automate",
          "Test Case in Filling the form details for shopping",
          "Verifying toast messages for error validations",
          "Testcase-Scrolling in product list example with Appium Android scroll",
          "Testcase-Dynamically selecting Product by scanning list based on text",
          "TestCase- Validating Total amount generated functionality",
          "Code optimization with user defined functions",
          "Testcase - Validating Mobile Gestures of App ( Tap, Long Press)",
          "Be a Mentor or Get Guidance from QA Community"
        ],
        "Hybrid App Automation with Appium to switch from Apps to Web browser": [
          "How to handle objects when rendered in Web view?",
          "TestCase -Automate Hybrid App with context Switch using Chrome Driver"
        ],
        "Mobile Chrome Browsers Automation with Appium - Real time examples": [
          "Desired capabilities to run Appium tests on Mobile browser",
          "How to Scroll and put assertions on Browser Tests with Appium"
        ]
      },
      "requirements": [
        "******You need NOT have java coding experience to start this course********* Even non Programming candidates can follow this course comfortably",
        "You will have Life Time instructor support. You can post your Queries in discussion board or can contact me directly, Will respond in less than 12 hours",
        "All Appium Installation setup including Java knowledge is taken care as part of course",
        "Theoretical Material,Code dump and Interview Guide are available for download",
        "Join in our Appium Training community with (200 + lectures, 50000+ Students) Learning Together which you will not see in any other Appium online course on Udemy.",
        "We have 2 dedicated Trainers who can help in answering students queries along with resume preparation , Interview preparation and Job assistance"
      ],
      "description": "Course Last Updated -May  3rd  Appium  2.0  Version and Java V21.\nTop Rated/Ranked Popular APPIUM Course with Life time Q/A Support on Udemy with highest Students Enrollment\n\"Learn Everything You Need to Know About Mobile Automation (Android+ IOS) Even If You've Never Programmed Before.\n80,000+ Potential students already enrolled and 5 start reviews all the way\nOn course completion You will be Mastered in Mobile Automation Testing in both Android&IOS and can implement Successfully it in your workplace or will surely land on High Paying Job .\"Decide the Quality of Course by watching Preview Lectures and Students  Reviews\"\nWhat makes this Course  Unique in the Market?\nVideos will be updated on regular basis based up on latest released versions of APPIUM\nThis is the most Popular Appium course ever you will find online with Top User ratings\nI have explained every concept in great details from Scratch so that any one can master in this tool on course completion\nWe will be designing and implementing Industry Standard frameworks using Appium  with TestNG Maven, Jenkins, GitHub, Apache Log4J2, Extent Reports\nDetailed demonstration on end to end CI/CD implementation using Appium for both iOS and Android\nUnderstand parallel execution on real Android and iOS devices using Cloud Infrastructure\nOnly course which explains many  Appium tips and tricks needed to clear Interviews or complete the Assignments given in the projects\n\n\nHigh level Topics Include:\nAppium Features\nAppium Internal Architecture\nConfiguration setup for running tests on Android and IOS Simulators/Emulators\nConfiguration setup for running tests on Android and IOS real devices\nHow to Automate Native (Android&IOS) Apps  using Appium\nHow to Automate Hybrid (Android&IOS) Apps  using Appium\nIn Depth explanation of Appium API's/comands and their usage\nMobile Gestures Automation scroll,swipe, longpress, tap, Touch Actions using Appium\nAutomating Browser Apps using Appium\nTips in inspecting objects on Apps and Mobile browser with uiautomatorviewer and APpium Inspector\nAppium Hybrid Framework from Scratch with top design patterns\ndesigning and implementing Industry Standard frameworks using Appium  with TestNG Maven, Jenkins, GitHub, Apache Log4J2, Extent Reports\nAppium Framework CI/D Integration\nAppium Cloud Automation on Browserstack\n\n\nHappy Testing!",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Web Automation Testers who are already aware of Selenium Webdriver",
        "Any Software engineer who are interested in Mobile Technologies"
      ]
    },
    {
      "title": "The React Testing Library Bootcamp - The Developer Guide",
      "url": "https://www.udemy.com/course/the-react-testing-library-bootcamp/",
      "bio": "Learn how to test your React application with React Test Library and Jest",
      "objectives": [
        "Learn the importance's and power of testing your React application",
        "Learn the best practices when writing tests with RTL and Jest",
        "Test real life application with a test driven development approach",
        "Deal with difficult problems like nested queries and mocking HTTP requests"
      ],
      "course_content": {},
      "requirements": [
        "The basics of React"
      ],
      "description": "React testing library is the most popular tool to test your React application. It is extremely simple and intuitive to use but the outcomes are very powerful. It helps increase confidence in your React application and thus when it is shipped to production, your end-users will have a bug-free experience. This course will teach you everything you need to learn to start utilizing this popular library. So hope on in and enjoy the ride.\n\n\nWhat you will learn\n- The best practice of how to test with React Testing Library\n- The importance of testing\n- Testing component that make HTTP requests\n- Mocking requests with Mock Service Worker\n- Finding the right element in your component\n- Dealing with the context API in your tests\n\n\nEngaging content\nYou don't just code along in this course, but you also apply what you learn with engaging course assignments. After learning a concept, you will then be prompted to use what you learned in a coding challenge. These coding challenges will help you internalize React Testing Library in your mind. It is highly recommended to actually do the challenges rather than treating them as a code along.\n\n\nInstructor support\nI will always do my best to answer any questions in the Q&A section of the course. You can also reach out to me on YouTube or Twitter.",
      "target_audience": [
        "This course if for React developer that want to learn how to test their app"
      ]
    },
    {
      "title": "SDET: Design Patterns With Selenium [Java + Hands-On]",
      "url": "https://www.udemy.com/course/selenium-webdriver-and-design-patterns/",
      "bio": "Create Robust and Scalable Test Automation Frameworks Using Design and Become Test Automation Architect / Lead SDET",
      "objectives": [
        "Master Essential Design Patterns: Learn the most commonly used design patterns for test automation.",
        "Enhance Code Quality: Improve the reusability, maintainability, and flexibility of your test automation code.",
        "Optimize Test Automation: Discover how design patterns can streamline your test automation processes.",
        "Avoid Common Pitfalls: Learn to identify and address potential design issues in your test automation frameworks.",
        "Gain Competitive Advantage: Become a highly skilled test automation engineer with a deep understanding of design patterns.",
        "Practical Applications: Apply design patterns to real-world test automation scenarios.",
        "Hands-On Learning: Benefit from practical exercises and coding examples.",
        "Expert Guidance: Learn from a seasoned instructor who specializes in test automation design patterns.",
        "Comprehensive Coverage: Explore a wide range of essential design patterns.",
        "Real-World Examples: Discover how design patterns are applied in practical test automation contexts.",
        "Step-by-Step Explanations: Understand the concepts behind design patterns and their implementation.",
        "Coding Exercises: Practice applying design patterns to your own test automation code."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Goals, Advantages of Design Patterns, Prerequisites"
        ],
        "Single Responsibility Principle": [
          "Problems With Poor Design",
          "Good Code Vs Bad Code",
          "Single Responsibility Principle - Introduction",
          "[Optional] - Coupling & Cohesion",
          "Sample Workflow For Automation",
          "Page Components Design",
          "*** Source Code ***",
          "IDE - Setup",
          "Abstract Component",
          "Search Widget Component Implementation",
          "Search Suggestion Component Implementation",
          "Explicit Wait Using Lambda",
          "Refactoring",
          "Navigation Bar Component Implementation",
          "Result Stat Component Implementation",
          "Google Main Page Implementation",
          "Google Result Page Implementation",
          "Base Test",
          "Google Search Test - Part 1",
          "Google Search Test - Part 2",
          "Few Corrections",
          "Google Search Test Run",
          "Google Search Test Parameterize",
          "Package Refactoring",
          "Cohesion",
          "Project Structure",
          "Clarification For BDD",
          "Single Responsibility Principle - Summary",
          "Quiz"
        ],
        "Factory Pattern": [
          "Design Pattern - Introduction",
          "SRP vs Design Patterns",
          "[Optional] - Design Patterns Classification",
          "Factory Introduction",
          "Factory - Exercise",
          "Factory - Abstract Google Page",
          "Factory - Google English Page Implementation",
          "Factory - Google French Page Implementation",
          "Factory - Google Arabic Page Implementation",
          "Google Factory Implementation",
          "Google Search Test With Factory",
          "Factory - Test Run Demo",
          "Accommodating New Requirements",
          "Additional Materials",
          "Factory - Summary"
        ],
        "Strategy Pattern": [
          "Strategy - Introduction",
          "Strategy - Sample Application Walk-through",
          "Strategy - Sample Application - Regular Design",
          "Strategy - Payment Screen Design",
          "Strategy - Payment Option Implementation",
          "Strategy - Payment Screen Components",
          "Strategy - Payment Screen Test - Part 1",
          "Strategy - Payment Screen Test - Part 2",
          "Strategy - Payment Screen Test - Run",
          "Strategy Pattern Explanation",
          "Factory vs Strategy",
          "Combining Factory and Strategy",
          "Additional Materials",
          "Strategy - Summary",
          "Exercise"
        ],
        "Command Pattern": [
          "Command - Introduction",
          "Command - Sample Application Walk-through",
          "Command - Sample Application - Regular Design",
          "Command - Notification Validator",
          "Command - Dismissal Alert Validator",
          "Command - Home Page Implementation",
          "Command - Get Element Validators Implementation",
          "Command - Home Page Test",
          "Small Correction",
          "Command - Running Test",
          "Element Validators With Data Provider",
          "Command - Summary"
        ],
        "Template Method Pattern": [
          "Template Method - Introduction",
          "Template Method - Sample Application Walk-through",
          "Template Method - Shopping Template Implementation",
          "Template Method - Amazon Shopping Implementation",
          "Template Method - eBay Shopping Implementation",
          "Template Method - Shopping Test Implementation",
          "Template Method - Test Run",
          "Template Method - When To Use",
          "Template Method - Multi Pages Workflow - Refactoring",
          "Template Method - Final Test Run",
          "Additional Materials"
        ],
        "Proxy Pattern": [
          "Proxy - Introduction",
          "Proxy - Sample Application Walk-through",
          "Proxy - Order Component Real - Implementation",
          "Proxy - Order Component Proxy - Implementation",
          "Proxy - Page Object Design",
          "Proxy - Test Run",
          "Additional Materials",
          "Proxy - Summary"
        ],
        "Execute Around Method Pattern": [
          "Execute Around Method - Introduction",
          "Execute Around Method - Sample Application Walk-through",
          "Execute Around Method - Main Page Implementation",
          "Java 8 Consumer - Refresh",
          "Execute Around Method - Main Page Problems With Frames",
          "Execute Around Method - Implementation & Demo"
        ],
        "Decorator Pattern": [
          "Decorator - Introduction",
          "Decorator - Sample Application Walk-through",
          "Decorator - Page Object",
          "Decorators Implementation",
          "Decorator - Test Run",
          "Decorator - Assignment",
          "Decorator - Assignment Solution"
        ],
        "Whats Next": [
          "Dependency Injection Pattern - Intro",
          "More Info On Dependency Injection"
        ]
      },
      "requirements": [
        "Basic knowledge on Java + Selenium WebDriver"
      ],
      "description": "Mastering Design Patterns for Test Automation: Reusability and Maintainability\nDesign Patterns offer repeatable and reusable solutions to address software design challenges. In this comprehensive course, you will be introduced to frequently used Design Patterns, empowering you to leverage their potential in Test Automation. By applying these patterns to your Automation Frameworks, Page Objects, and Test classes, you will achieve enhanced reusability and maintainability, paving the way for efficient and scalable test automation solutions.\nKey Learning Points:\nSingle Responsibility Principle: Gain insights into the fundamental principle of assigning specific responsibilities to modules, classes, and methods within an application. Learn how to refactor complex Page Objects into modular Page Components or Fragments, resulting in more organized and neater test steps.\nFactory Pattern: Uncover the power of creating objects without exposing the creation logic to the test class. Explore localization testing scenarios, where multiple languages and their specific behaviors come into play. Implement an abstract class with common functionalities and language-specific subclasses, leveraging the Factory Pattern to dynamically create Page Objects based on the language being tested.\nStrategy Pattern: Understand how to pass behavior to an object at runtime without resorting to cumbersome if-else blocks. For instance, examine a Google search page with different search strategies, such as text-based or voice-based search. By utilizing the Strategy Pattern, you can dynamically switch between these strategies, promoting flexibility in your automation code.\nCommand Pattern: Explore how to encapsulate an object with all the necessary information for later execution. This pattern is highly valuable for Pages with multiple UI components and numerous UI validations.\nTemplate Method Pattern: Discover how to design high-level steps or a skeleton in a superclass while allowing subclasses to override specific steps. This pattern is particularly useful in scenarios where similar applications, such as room booking and car booking, share common workflows with varying options.\nProxy Pattern: Learn how to create a placeholder object for another object, facilitating seamless execution of specific steps based on the testing environment. For instance, executing certain steps in the QA environment while skipping them in the production environment is made more efficient using the Proxy Pattern.\nExecute Around Method Pattern: This pattern addresses the need to perform specific steps consistently, regardless of the main task. For example, opening and closing files before and after reading or writing content is a common occurrence. The Execute Around Method Pattern provides a systematic approach for handling such scenarios.\nDecorator Pattern: Delve into the world of dynamic UI components based on user roles within an application. By employing the Decorator Pattern, you can create flexible Page Objects that adapt to different user roles, such as admin or user, granting them varying levels of access.\nBy completing this course, you will acquire a strong foundation in essential Design Principles and Patterns for Test Automation. Empowered with this knowledge, you will significantly enhance the reusability and maintainability of your Automation Framework, Page Objects, and Test classes. Unleash the full potential of Design Patterns and elevate your test automation solutions to new heights of efficiency and scalability.",
      "target_audience": [
        "Anybody who has interests in Test Automation",
        "Sr SDET / Lead / Principal / Architect SDET",
        "Test Automation Framework design"
      ]
    },
    {
      "title": "Selenium WebDriver 4, Cucumber BDD, Java & More!",
      "url": "https://www.udemy.com/course/cucumber-bdd-selenium-java-complete-automation-course/",
      "bio": "Full Automation Testing Bootcamp! Learn automation testing using Selenium Webdriver 4, Java, Cucumber BDD, TestNG & More",
      "objectives": [
        "Students will learn Cucumber BDD from a beginner’s level all the way to an advanced level using Java.",
        "Ability to develop small robust to large complex Cucumber Frameworks.",
        "Gain the knowledge to become an Automation Test Engineering / SDET.",
        "Understand the importance of Design Patterns.",
        "Gain the knowledge / ability to implement advanced concepts such as Page Object Modelling, Parallelization, Jenkins (CI) integration and much more!"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)"
        ],
        "Environment - Setup": [
          "Java JDK",
          "Apache Maven",
          "IntelliJ & Cucumber Addon"
        ],
        "Project - Setup": [
          "What is Apache Maven?",
          "IntelliJ - Layout Update - [Please Read]",
          "Project Setup",
          "POM File & Downloading Dependencies",
          "Browser Drivers",
          "Maven Lifecycle Commands",
          "Maven Compiler Plugin",
          "Bonus: Next Steps - Unlock Your Potential!"
        ],
        "Cucumber Basics": [
          "What is Cucumber? & What is Gherkin?",
          "Feature File - Creation",
          "Mapping Step Definitions",
          "Important - [Please Read]",
          "Hooks & Browser Driver - Setup",
          "Implementing Step Definitions - Part 1/3",
          "Implementing Step Definitions - Part 2/3",
          "Implementing Step Definitions - Part 3/3",
          "Cucumber Expressions – Scenario Creation",
          "Cucumber Expressions – Mapping Step Definitions",
          "Cucumber Expressions – Implementing Step Definitions",
          "Runner class - Creation",
          "Runner Class – Tags",
          "Runner Class – Reporting"
        ],
        "The Real World Challenge": [
          "Challenge Overview",
          "Feature File - Creation",
          "Scenario 1 – Documenting Requirements",
          "Scenario 1 – Mapping Step Definitions",
          "Hooks, Tags & Driver Setup",
          "Scenario 1 – Implementing Step Definitions",
          "Scenario 2 – Documenting Requirements",
          "Scenario 2 – Mapping & Implementing Step Definitions"
        ],
        "Background & Scenario Outlines": [
          "Background Keyword",
          "Background Keyword – In Action",
          "Scenario Outline(s)",
          "Scenario Outline(s) – Creation",
          "Scenario Outline(s) – Mapping & Implementing Actions"
        ],
        "Tags - Organising Test Suites": [
          "Tags - Organising Test Suites"
        ],
        "Advanced Concepts": [
          "Advanced Hooks",
          "Driver Factory & Properties File - Part 1/3",
          "Driver Factory & Properties File - Part 2/3",
          "Driver Factory & Properties File - Part 3/3",
          "Parallel Test Execution",
          "Advanced Reporting & Attaching Images",
          "Base Page & Custom Commands - Part 1/3",
          "Base Page & Custom Commands - Part 2/3",
          "Base Page & Custom Commands - Part 3/3",
          "Page Object Modelling - (POM) - Part 1/6",
          "Page Object Modelling - (POM) - Part 2/6",
          "Page Object Modelling - (POM) - Part 3/6",
          "Page Object Modelling - (POM) - Part 4/6",
          "Page Object Modelling - (POM) - Part 5/6",
          "Page Object Modelling - (POM) - Part 6/6",
          "Constant Variables"
        ],
        "Jenkins (CI) & More!": [
          "Jenkins - Download & Setup",
          "Configuring Jenkins",
          "Job Creation",
          "Job Configuration - POM, Goals & Options",
          "textng.xml",
          "Surefire-Plugin",
          "Enhanced Logs",
          "Cucumber Reports",
          "Attaching Exception Images to Reports",
          "Targeting & Triggering Individual Test Suites",
          "Parallelization",
          "Ignore Test Suites & Individual Tests",
          "Browser Selection"
        ],
        "Interview Preparation": [
          "Interview Question & Answers (Examples)"
        ]
      },
      "requirements": [
        "You should have some basic knowledge of Java.",
        "Some basic selenium knowledge will be an advantage but not necessary."
      ],
      "description": "This course has helped students become automation test engineers (check our the course reviews).\nThis course will teach you automation testing using Selenium WebDriver 4, Java, Cucumber BDD (Latest Version: 'io.cucumber'), TestNG, Jenkins and Apache Maven to develop a real world, functioning framework for real world, enterprise environments. This is different to most courses, as we focus on frameworks that actually provide skills for the real world.\n\n\nWhy Learn Automation Testing?\nAutomation testing has been steadily grown in popularity these past few years thanks to the time/ cost savings and efficiency that it offers. Companies throughout the world have or plan to use automation testing to rapidly speed up their test capabilities. Automation test engineers are in great demand and offer an average salary of £45,000+ (2021, 2022). Now is a great time to learn about automation test engineering and this course has been carefully developed to slowly introduce you from the basics, all the way to building advanced frameworks.\nThis course introduces you to some of the most in demand automation test tools currently being used by automation testers throughout the world. I teach you from the very beginning and slowly build up to demonstrate the advance capabilities they offer. All this is taught using practical examples that I explain and you can follow.\nI have personally taught countless teams to learn about automation testing in the workplace. In fact this is part of my job. I know what works when it comes to teaching new people about automation testing and I have developed this course by keeping this in mind.\n\n\nSo, why should you learn cucumber BDD?\nCucumber (BDD) simplifies the requirement capturing process. Requirements can be captured, broken down and simplified effortlessly; making the captured requirements readable to anyone within the organisation and in turn providing the required details and backbone to develop accurate test cases also known as ‘Feature Files’.\nCucumber (BDD) simplifies the process of developing automation test scripts! Students enrolled within this course will see why!\nStudents will learn Cucumber BDD from a beginner’s level all the way to obtaining the knowledge to develop advanced sophisticated Cucumber BDD framework(s) of their own.\nCucumber is one of the BDD frameworks which is in very high demand\nSearch online for many automation testing roles and you will likely see BDD, Cucumber as a mandatory requirement!\n\n\nWhy choose this course?\nI have also been responsible for teaching countless students/colleagues and have refined this course so that students get the very best from my teaching material.\nBy completing this course; I ensure you'll have all the knowledge you need to become an automation test engineer (and some students already have!)\nStudents that choose to enrol will get the following:\nA course that explains every step clearly and in detail.\nGain knowledge on some of the most popular and in-demand automation test tools that employers ask for in job descriptions.\nA course that is structured in a way which will enable anyone with basic of knowledge of Java and Selenium WebDriver to create basic to advanced Cucumber tests and even develop sophisticated Cucumber framework(s) from scratch.\nGain knowledge to develop and schedule your tests using Jenkins (Continuous integration).\nYou will also create and run tests against real world websites.\nBe given access to webdriveruniversity (a website that I developed) so you can practice you test automation skills using the knowledge gained form this course.\n\n\nWhat will I learn?\nThe following topics are covered in this course. These topics have been specifically tailored to demonstrate and teach you the most important areas of automation testing. This is taught to you using a practical approach and you will see tests (that you have written) testing websites using your very own browser.\nGain a greater understating of Selenium WebDriver 4 & Java.\nGradually learn and understand Cucumber (BDD) from a basic level all the way to an advanced level (Latest versions of Cucumber BDD).\nLearn the latest and most effective way to develop basic to advanced Cucumber Frameworks.\nLearn how to architecturally design and develop Cucumber Frameworks the correct way taking into consideration concepts such as DRY (Don't Repeat Yourself), maintainability etc.\nIncorporate best practises when developing Cucumber Frameworks.\nWhat is Gherkin and how can we use it?\nUnderstand what exactly is a Feature File & how to create them.\nUnderstand the purpose of Step Definition Classes & how to create them.\nExplain the purpose of Runner Classes and explain how to optimize them using Options, Hooks & Tags.\nExplain the advantages and purpose of reports and learn how to generate Advanced Reports.\nLearn how to attach images to reports.\nUnderstand the purpose of the Background keyword and why it's a good idea to use it.\nDemonstration of Scenario Outlines & Examples (which is very important).\nExplain the purpose of the Page Object Model (POM) & Page Factories.\nI will show you how to Integrate Selenium and Java into your Cucumber projects.\nI will teach you how to simulate a wide range of different test scenarios via planned automation test scripts.\nI explain how to find elements on website(s).\nI will explain the purpose and then master the ability to create Dynamic Locators.\nLearn how to stabilize your tests.\nLearn why a BasePage is so important and why it’s vital to centralize your code.\nI will explain how to create a customized Base Page including the creation of Bespoke Methods.\nLearn how to Effectively handle Element Interaction (Wait for Element to be Visible, Clickable etc).\nI'll explain to you the purpose and limitations of Thread.sleep and teach you the correct way to wait and interact with website elements.\nI will show you how to Master Inheritance using Subpages etc.\nI will show you DriverFactory creation and why a DriverFactory is very important!\nI'll explain the importance of Modelling Pages of a website into Separate Containers (POM: Page Object Modelling).\nWe will go though the Java JDK and Apache Maven setup.\nI will demonstrate to you IntelliJ IDE so that you become very familiar with it (including how to set it up).\nI will demonstrate Maven and explain it's purpose and why this is a wonderful tool to use.\nExplain the importance of the Maven POM File and why we use it (Including handling dependencies).\nI will explain the M2 directory.\nI will teach you how to simplify the update process (Dependencies) of your project.\nWe will go through some of the most popular Maven commands.\nI will explain the Constant class (for centralisation) & learn how to create dynamic directories.\nI'll teach you Continuous Integration using Jenkins and explain why this is very useful.\nI will also show you some very important add-ons for Jenkins.\nWe will create some very visually appealing reports within Jenkins and attaching images to those reports.\nHow to handle Extensible Choice Parameters (Selection Dropdown lists) via Jenkins.\nI have made sure to include course notes & code with each lecture(s) and module(s).\nWe will go through Chromedriver and Geckodriver and explain its purpose.\nI will demonstrate how to use a specific Surefire plugin to our advantage.\nI will teach you the purpose TestNG execution files and why these are used.\nI will demonstrate how to effectively use TestNG Assertions.\nI will demonstrate the Config / Properties file and explain the purpose of the config reader class.\nParallelization -  I will demonstrate how you can execute your tests in Parallel, how to increase / decrease the numbers of tests running in parallel etc.\nAnd much more!",
      "target_audience": [
        "Anyone looking to Pursue a Career within Test Automation / SDET.",
        "Anyone that has an interest in automation testing and wants to gain knowledge in this area.",
        "Manual testers / QA engineers / QA analysts that are wanting to learn Automation Testing.",
        "Automation test engineers looking to refresh/ learn about latest automation trends (+Advanced Concepts).",
        "Anyone wanting to understand and learn the concepts of Cucumber BDD and Selenium WebDriver.",
        "Anyone wanting to learn the skills required to develop Advanced Cucumber (BDD) frameworks.",
        "Automaton Test Engineers / Software Development Engineers in Test."
      ]
    },
    {
      "title": "Software Testing : Learn Manual/QA Testing + ISTQB CTFL Help",
      "url": "https://www.udemy.com/course/software-testing-and-career-in-qa/",
      "bio": "Software Testing Course for learning Test Fundamentals,QA Manual Testing, STLC, Automation Basics & ISTQB CTFL Help",
      "objectives": [
        "Structured Content with each section dedicated to unqiue aspect of Software Testing",
        "Clear and Crisp lectures on specific topics from Certified QA Professionals",
        "Dynamic Lecture presentations with live demonstrations wherever necessary to help students learn by visualization",
        "Short Notes with every Lecture to help students Remember and Revise Video Lectures",
        "Quizzes at the end of every Section to test the level of understanding",
        "Lifetime Enrollment : Pay once and access the videos anytime, anywhere on desktop and mobile platforms",
        "Lifetime Free Upgrades: New Lectures, Resources, Tips and Interview guides added regularly to keep up with current job markets"
      ],
      "course_content": {},
      "requirements": [
        "Interest in Software Testing/QA Industry",
        "Some Idea of Software Development Life Cycle will be useful",
        "Basic Programming Skills to help understand automation skills quickly",
        "Basic Spreedsheet and Word Document Editing Skills for creating test documents",
        "You do not need prior testing experience",
        "You will need a computer with internet to access lectures and resources"
      ],
      "description": "Software Testing: Learn Manual/QA Testing + ISTQB CTFL Help (Recent Updates on: January 20, 2016!)\nWhat's New(Bonus): ISTQB Exam Help (Foundation Level)+Captions for all the lectures + Facebook Page (SoftwareTestingArena) + Make $$$ online testing websites (pdf) !\n\nSoftware Testing (Quality Assurance) is a 30+ Billion USD Industry today, and expected to grow up to 50 Billion USD by 2020. Nearly 1 out of 2 jobs in IT are in Testing. If you are looking to set foot into this Industry, if you too are looking to build a career in Manual Testing (QA Testing) Industry, then look no further...\nThis course provides you with the Testing Fundamentals, Tools & Methodologies, Industry Trends and Career Guidance needed to kick-start a successful career in the Software Testing Industry.\nGain valuable insight about Software Testing Industry Trends, Job Opportunities, Career path options, Hiring and Salary Trends etc.\nLearn about Software Testing from scratch; No prior knowledge or experience needed.\nMaster Fundamentals, SDLC Models, Testing Types,Levels and Methodologies prevalent in the Industry.\nBuild STLC Documents like Test Plan, Test Scenarios, RTM, Test Cases, Test Summary etc.\nGet in-depth exposure to popular defect management and automation tools used in Testing industry.\nBuild your Software Testing Career online with our interview help and career guidance.\nMake Money Online as a freelance tester using the information we provide exclusively for our students.\nIf you are looking towards building a long, successful career in Manual Testing, this course will help you achieve Exactly that.\nWhy take this Course?\nGlobal Testing Services Market grew from $13Billion in 2008 to $25Billion in 2013, and it is expected to double by 2020. HR Trends suggest more hiring for Skilled Freshers and QA Testers. This course here is your gateway to a successful career in the Testing Industry. The course has been created by experienced IT professionals with combined experience of over 10 years in Automation and Manual Testing. So whether you are a fresh graduate looking for a bright career option, or an experienced Tester looking to improve your testing skills, this course will prove to be just the right resource you need.\nHow is this course designed?\nThis Course is structured into following sections:\nOverview: This section introduces you to the course, provides information about authors, course structure and gives you answers to some of the frequently asked questions by students.\nCareer in Testing Industry:This section provides all the essential information about software testing industry like Industry trends, Career paths for testers, Job opportunities, salaries and Hiring Trends commonly seen testing in the industry.\nFundamentals: This section introduces you to software testing, testing principles and myths prevalent in the industry and provides an overview of fundamental testing activities.\nDevelopment Models: This section discusses some of the important SDLC Models used in the testing industry. Understanding SDLC Models will help you plan the testing activities better.\nForms of Testing: This section discusses the 2 important approaches to testing that any project will follow: Static Testing and Dynamic Testing.\nLevels of Testing: Testing need not wait until development is fully over. Testing activities can start in parallel with development. This section provides details on the different levels at which testing can be performed on the Application Under Test.\nTesting Types: Testing can be done to check for different types of user expectations. This sections discusses 2 such classification to testing: functional and non functional testing.\nSTLC: This section provides hands on details about how to build different test artifacts including test plans, test design documents, requirement traceability matrix, test cases and execution reports etc.\nDefect Management: This section discusses defect identification, defect logging and defect tracking in detail. We also provide details on how to use a popular open source defect management tool Bugzilla.\nAutomation: Learn all the automation basics you need to start your venture into automation testing.\nMaster all the testing skills with this course and skyrocket into the world of Software Testing.",
      "target_audience": [
        "Fresh Graduates: If you have passed out of college recently, and looking for a job in QA/Testing Industry, then this course will definately help you build skills required for your first job",
        "QA Testers: If you have recently started a career in QA/Testing Industry, and wish to acquire all testing skills to build a brighter Career, then this course will help you achieve just that.",
        "Automation Enthusiasts: If you are a Manual Tester, and wish to move to automation, then this course will help acquire all automation skills to make the jump.",
        "Developers: If you are an IT Developer, and interested in learning Testing fundamentals to improve your IT Skills and gain competitive edge over fellow Developers, then this course is for you.",
        "Non Programmers: If you are interested in IT, but hate programming or find it difficult, then Testing allows you focus less on programming and more on analysis skills.",
        "Non IT Professionals: If you are currently working in some other field, but interested in building a career in IT, then this course will help you step into the IT field"
      ]
    },
    {
      "title": "Nightwatch Js an end to end testing tool for automating web",
      "url": "https://www.udemy.com/course/nightwatchjs/",
      "bio": "Nightwatch Js for beginners and Intermediate .",
      "objectives": [
        "Students can gain nice automation knowledge on nightwatch js , after completing this course they will be in a position to automate any website .",
        "Students can design framework from scratch with page objects , reporting and many other things both in JS and TS after completing this course.",
        "After completing this course students will be in a position to write visual testing automation test cases as well.",
        "Students can bag nice job in the market because nightwatch has some good demand in IT , very few people knew it ."
      ],
      "course_content": {},
      "requirements": [
        "Basic Javascript knowledge is required",
        "If you have any other programming language knowledge that would also work."
      ],
      "description": "Learn more in less time .This course is best suited for Beginners and Intermediate level guys who wanna learn web automation with ease .\nIn this course you will learn end to end about using Nightwatch js tool with both Javascript and Typescript . Main goal of this course is to achieve /learn more about automation testing in short time .After completing this course you will be able to design a framework from scratch with page Objects and beautiful test case reporting with logs and screenshots attached and many other things.I request everyone to please plug In your ear phones when watching this course so it will be much clear . Initially we will be learning Nightwatch Js configuration which is root for starting automation .you need to have a little javascript programming knowledge .In case if you're already working on test automation tools like selenium java => after taking up this course you will feel too easier as we write very less code and achieve more.\n\n\n\n\n->Nightwatch Basics\nSetting up environment\nWebDriver manager (manage server and drivers automatically)\nHow to auto take screenshot on failure\nHow to use environments\nHow to use launch Url flag\nHow to not skip test cases on failure\nRetries\nSoft Assertions\nHard Assertions\nusing element method\nrunning tests in headless mode\nHow to run single test case\nHow to run single test file\nfind Elements in Nightwatch\nwindow handling\nframes\nmoveToElement , scroll actions\nHandling Alerts , PopUps\nDebugging Nightwatch tests\ncucumber\nPage Object model using class style\nPage Object model using functional style\nAnd many more…\n\n\n->Nightwatch reporting with mocha , Nightwatch html reporter and others\n\n\n-> Page Objects\n\n\n-> we will be covering Nightwatch with javascript & typescript\n\n\n-> Nightwatch Cucumber\n\n\n-> Nightwatch mocha and mochawesome\n\n\n-> Nightwatch custom commands\n\n\n-> GitHub actions\n\n\n\n\nAbout Tool :\nNightwatch.js is one of the popular integrated framework for performing automated end-to-end testing on web applications and websites, across all major browsers. It is written in Node.js and uses the W3C WebDriver API to interact with various browsers.\nIt is a complete end-to-end and cross-browser testing solution and it aims to simplify the process of writing and running various types of tests.\n\n\n\n\nNote: I suggest to use mocha runner so you can leverage mochawesome reporting which is very famous and neat",
      "target_audience": [
        "Beginner / Intermediate /experienced automation testers who worked on selenium/ Appium Java or manual testers or who ever looking to learn automation testing can take this course"
      ]
    },
    {
      "title": "Step by Step API Automation with ReadyAPI (SOAPUI PRO)Groovy",
      "url": "https://www.udemy.com/course/readyapi/",
      "bio": "Detailed Groovy +Certification Coverage + Step by Step tutorial, Rest API Testing terminology",
      "objectives": [
        "ReadyAPI implementation on realtime project for SOAP & REST Services Testing",
        "Ready to Work on ReadyAPI with Groovy Scripting",
        "Ready to develop reusable & maintainable framework for API Automation",
        "Detailed understanding of WebServices/ API and its automation using ReadyAPI",
        "Able to crack API Testing interviews using ReadyAPI",
        "Detailed understanding of each and every component of ReadyAPI"
      ],
      "course_content": {
        "Introduction to API Testing | Introduction to SOAP and REST API": [
          "Introduction to WebServices",
          "WebService Example",
          "Advantage of WebService over WebBased Application",
          "Difference between WebService & API",
          "Different type of Services : Soap & Rest",
          "MicroService Introduction"
        ],
        "Introduction to ReadyAPI (SOAPUI Pro Version)": [
          "Introduction to SOAPUI",
          "Setup ReadyAPI (SoapUI Pro Version)",
          "Sample WSDL & REST API",
          "Hierarchy to Work in ReadAPI",
          "Write First SOAP Test Case",
          "Write First REST Test Case"
        ],
        "Start Rest API Automation in ReadyAPI": [
          "Pre-Requisite of REST API Testing",
          "Rest API : common Methods",
          "Understand Status Code",
          "First REST Test Case / Rest Request test step - POST Method",
          "First REST Test Case using GET Method",
          "First REST Test Case using PUT Method",
          "First REST Test Case using DELETE Method",
          "Write End to End Test Case",
          "Request Chaining : Use Output data as Input"
        ],
        "Properties in ReadyAPI": [
          "Define and Use Properties",
          "Different Levels to Apply Property",
          "Property - Manually Replace Property",
          "Perform Operations with Properties"
        ],
        "Add Validations to Test Case": [
          "Assertions | Validate Status Code",
          "Contains and Not Contains",
          "Validate Response Time",
          "Assertion Use Case",
          "Assertion : HTTP Invalid Status Code",
          "Assertion : Validate Header",
          "Assertion : Sensitive Data",
          "Assertion : Message Content"
        ],
        "Enhance Test Case by adding some commonly used steps": [
          "Add Pause in Test Case : Delay Test Step",
          "Perform manual task with automation : Manual Test Step",
          "Calling Test Cases : Run TestCase Test Step",
          "Write Programming : Groovy Test Step",
          "Wait for File Present : File Wait TestStep",
          "Create File TestStep",
          "Assertion Test Step",
          "DataGen Test Step",
          "Property Transfer Test Step"
        ],
        "Data Driven Testing : Data Source | Data Source Loop | Data Sink": [
          "What is Data Driven Testing | Data Source Test Step",
          "Execute Test Case with Multiple Data",
          "Save Response Data to File : Data Sink Test Step"
        ],
        "Add Validations to Response Content": [
          "Why we need to Learn JSON and JSON Path",
          "Understand Json Basics",
          "Write JSON Path",
          "Write Advance JSON Path"
        ],
        "SoapUI/ ReadyAPI Certification": [
          "SoapUI/ ReadyAPI Certification - Introduction",
          "SoapUI/ ReadyAPI Certification : Project Level Properties",
          "SoapUI/ ReadyAPI Certification : Test Case level Properties",
          "SoapUI/ ReadyAPI Certification : Video 4",
          "SoapUI/ ReadyAPI Certification : Video 5",
          "SoapUI/ ReadyAPI Certification : Video 6",
          "SoapUI/ ReadyAPI Certification : Video 7"
        ],
        "Work with SoapUI Free Version": [
          "Free WSDL for Testing",
          "Setup SoapUI Free version",
          "SoapUI work hierarchy",
          "First SOAP Service Test Case",
          "First REST Test Case / Rest Request test step",
          "Create REST Project - POST Request",
          "Create REST Project - PUT Request",
          "Create REST Project - DELETE Request",
          "End to End Scenario with multiple REST API"
        ]
      },
      "requirements": [
        "Basic understanding of Manual Testing Concepts",
        "Basic understanding of Windows Operating System & Basic installation steps",
        "Basic understanding of WebServices"
      ],
      "description": "Course Updates:\nOct 2021 :  Added Certification Videos\nJan 2021 :  Added Steps for Data Driven Testing\nNov 2020 : Added Quiz and Interview Questions\n\n\nReadyAPI is the advance version of SoapUI for Webservice and API automation, This course will take you from basic to advance concepts of API Automation, Here we are going to cover following advance concepts\n\nCourse Coverage\nEnd to End understanding of API Testing\nReadyAPI walkthrough\nWorking Hierarchy\nData Driven Testing\nAPI Testing Steps\nXpath Assertion\nXQuery Assertion\nAdvance steps like Data Source, Data Gen, Data Sink\nAdvance Assertions\nTestRunner object\nMessageExchange Object\nXML Holder\nJSON Parser\nInterview Preparation\nBest Practices\nQ&A Sections\nCertification preparation\nWork with SoapUI free version\n\n\nOn course completion You will be Expert in SOAP/ REST API Testing and can implement Successfully it in your work place\nCourse is designed in such a way that the user does not required to have any prior understanding of groovy and SoapUI\n\n\n\nThis Course explains\n·What are the Webservices\n·How to Test the Webservices using Soap UI\n·Groovy Scripitng Concepts\n·How to Automate the Webservices Testcases in Soap UI with Groovy\n·Testing Resting API\n·Security Testing with Soap UI\n·DataBase Testing with Soap UI\n·How to Mock the webservics\n\nBy the End of this Course you will able to understand the webservices specifications and write all kind of effective Manual and Automation testcases (Functional/Security/Data Base Testcases) to test them in Soap ui by using different features available on Tool\n\n·What are the Webservices, ·How to Test the Webservices using Soap UI, ·Groovy Scripitng Concepts, ·How to Automate the Webservices Testcases in Soap UI with Groovy\nBy the End of this Course you will able to understand the webservices specifications and write all kind of effective Manual and Automation testcases",
      "target_audience": [
        "Manual Testers looking opportunity in API Testing",
        "Freshers Looking opportunity in Software Testing Field",
        "Automation Tester looking to switch into API Automation with minimum efforts",
        "Any body looking End to End implementation of ReadyAPI for Soap & Rest API Testing"
      ]
    },
    {
      "title": "Step by Step Rest API Testing using Python + Pytest +Allure",
      "url": "https://www.udemy.com/course/api-testing-python/",
      "bio": "Best for newbies | Rest API Testing | Python for Automation | Json Validations | PyTest Implementation",
      "objectives": [
        "Detailed knowledge of API Testing using Python(Requests) and its implementation while working as an API Tester",
        "Ready to face API Automation testing interviews & also answer scenario based questions",
        "Detailed understanding of RestAPI, Different Methods(GET, POST, PUT, DELETE, PATCH) & JSON Format",
        "Detailed understanding of advance concepts like JSON Handling, PyTest Framework, Allure Reporting",
        "Detailed practice understanding of Python concepts(including OOPS) and its implementation in Realtime Project"
      ],
      "course_content": {
        "***STEP 1 **** WebService/API Introduction": [
          "Course Introduction and Architecture",
          "What is WebService",
          "WebService Example",
          "Difference between Webbased application and Webservice",
          "Difference between API and WebService",
          "Introduction to Micro Services",
          "***** Check Your Knowledge *****"
        ],
        "***STEP 2 **** Step by Step Environment Setup": [
          "Installation Roadmap",
          "Step 1 : Python Installation",
          "Step 2 : Pycharm Installation : Editor for Python",
          "Step 3: PIP Setup",
          "Step 4 : Request Package Installation",
          "***** Check Your Knowledge *****"
        ],
        "***STEP 3 **** Basics of Python - Section 1 {Skip if you already know Python}": [
          "First Python Code : Create Python File, Comments & Print on Console",
          "How to take user input and use it in programming",
          "How to Declare and use Variables in Python",
          "Constants and Type Casting in Python",
          "Standard datatypes in Python : Number, String, List, Tuple & Dictionary",
          "Condition Handling using If - Handle Single Condition",
          "Condition Handling - Handle 2 Conditions",
          "Condition Handling - Handle Multiple Conditions",
          "Condition Handling using - Nested Conditions",
          "Condition Handling with Logical OR and Logical AND",
          "Introduction of Loops",
          "For Loop with Final Range",
          "For Loop with initial and final range",
          "For loop with increment value",
          "For loop with decrement value",
          "For loop with list",
          "While Loop with increments",
          "While loop with decrement",
          "Break Statement",
          "Continue Statement",
          "Else Statement",
          "What is String, How to Define String - Perform operation like Concat & Repeat",
          "String : Fetch Substring - By giving Start and End index values",
          "Common String Functions - Length, Capitalize, Upper and Lower",
          "Common String Functions -lStrip, rStrip and Strip",
          "Common String Functions - Replace Data, Find Data and Split Data",
          "Compare 2 Strings in Python with Practical Examples",
          "What is List - How to Insert, Fetch, Update and Remove data from List",
          "Common List function - Concatenate String and Find Length of String",
          "What is Tuple - Difference between List and Tuple",
          "Tuple advance operations - Count Values, Display Value and Merge Tuples",
          "What is Dictionary - How to define and use Dictionary in Python",
          "Dictionary Methods - Find all Keys & Value"
        ],
        "Advance Python - Section 2 {Skip if you already know Python}": [
          "Functions Basics",
          "Rules to create functions",
          "Different types of functions",
          "Functions with return value",
          "Different types of arguments",
          "Create first class",
          "Functions in Class",
          "Constructors",
          "Create Object in another file",
          "What is Module",
          "How to Use Modules",
          "Creating Project Structure",
          "Difference between import and from-import",
          "File Handling : Read Data from File(.txt)",
          "File Handling : Read character by character and line by line",
          "File Handling : Write data to File(.txt)",
          "File Handling : Common file methods",
          "What is Exception and Exception Handling",
          "Handle Exception using try, exception and finally",
          "Prepare configuration files",
          "Read data from config file"
        ],
        "***STEP 4 **** JSON and JSON PATH - Must for API Testing": [
          "Goal of this sections",
          "Basic understanding of JSON",
          "What is JSON Path | Calculate JSON Path",
          "JSON Path Advance Options"
        ],
        "JSON Parsing using Python": [
          "**** Important Note *****",
          "Work with JSON"
        ],
        "***STEP 5 **** Start API Testing using Python - REST API Basics": [
          "Different methods used in REST API",
          "What is Rest API with Parameters"
        ],
        "API Testing Kickoff": [
          "Making a GET request using python",
          "Validate Status Code",
          "Fetch Response Header Values",
          "Fetch Response Content - using Json Path",
          "Fetch Response Content - using Advance Json Path"
        ],
        "Delete Resource": [
          "Delete User"
        ],
        "POST & PUT Requests": [
          "Create New Resource - POST Request - Part1",
          "Create New Resource - POST Request - Part2",
          "Update Resource on Server : UPDATE Method"
        ]
      },
      "requirements": [
        "Basic understand of Manual Testing Concepts and Implementation",
        "Basic understand of Writing TestCases and Test Scenario.",
        "Basic understanding of Requirement Documents, How to read and understand requirements"
      ],
      "description": "Looking to Automate REST API Testing using Python ? Then you are on the right place.\nThis course will help you to understand API & Python programming from Scratch to Expert Level. It is specially designed by keeping Software Testing in mind so almost all already/libraries of API Testing using Python which are required in automation would be covered in his course.\n\n\nPython in not just use for web browser automation but also can use for following\n➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖➖\nRead | Search  & validate data in excel\nHave to pull text off of several web pages?\nCopy thousands of files from one location to another\nPerform repeatable tasks in single click\nRename multiple files & folders within a second.\nWe are going to cover following well known HTTP methods are commonly used in REST based architecture.\nGET - Provides a read only access to a resource.\nPUT - Used to update a existing resource or create a new resource.\nDELETE - Used to remove a resource.\nPOST - Used to create a new resource.\n➖➖  BASICS OF API TESTING AND AUTOMATION ➖➖\n\n\nLearn how to send  REST Requests\nWhat is API, Different Between SOAP and REST API\nDifferent CRUD Operation and Its Implementation\nGET | POST | PUT | DELETE\nBasic understanding of MicroServices\nAuthentication approaches (BASIC,OAUTH)\nHow to Handle Header & Pre-requisite\n\n\n➖➖➖➖ ADVANCE CONCEPTS ➖➖➖➖\nHow to Setup Environment for Python Scripting\nWrite basic Python Programming\nCondition Handling, Looping\nWorking with Excel File (OpenPyXL)\nHow to Handle JSON file\nBasic to advance JSON Path\nHow to Handle CSV file\nJSON Parsing\nPyTest Framework\nSend different types of requests\nAssert Response Data\nAllure Reporting\nData Drive n Framework\nKeyword Driven framework\nAssertions\nRequest Channing\n\n\n➖➖➖➖ REALTIME SCENARIO ➖➖➖➖\nEnd to End Student Student Enrollment\nRequest Chaining\nFinal execution with report generation and analysis\nRun API tests in Jenkins\nCode Management using GIT\nScenario implementation on RealTime API Application\nEnd to End Scenario building and once click execution\nCollection Execution from command prompt",
      "target_audience": [
        "Manual testers/QA/Testing Professionals looking to automate Restful API Testing",
        "Professionals/Automation Testers looking to test Rest API application using Python",
        "Automation testers looking opportunity in API Automation",
        "Developers, SDET's, Devops, IT Professionals working on API"
      ]
    },
    {
      "title": "Looking to Learn BDD - Cucumber....? Get expertise in 2 hrs",
      "url": "https://www.udemy.com/course/bdd-with-cucumber/",
      "bio": "Step by Step BDD Concepts | Cucumber Framework | Gherkin Language |End to End Integration Selenium Cucumber Maven Java",
      "objectives": [
        "Will have good understand of BDD concepts & ready to implement in your project",
        "Practical understanding of Gherkin Language and its implementation",
        "Ready to work on different automation tools to implement BDD framework",
        "Detailed understanding of Cucumber and its implementation with Selenium & Java"
      ],
      "course_content": {
        "Learn Basics of TDD and BDD Concepts": [
          "What is TDD ( Test Driven Development )",
          "TDD Documentation",
          "What is BDD (Behavior Driven Development)",
          "BDD Documentation",
          "Difference between TDD and BDD",
          "Document : Difference between BDD and TDD",
          "Common Files to be created in BDD",
          "Documentation : Common Files to be created in BDD"
        ],
        "Start Writing Feature File - Learn Gherkin Language": [
          "Define Gherkin & Feature File",
          "Feature File and Keyword",
          "Gherkin: Scenario Keyword (Test Cases)",
          "Gherkin: Given Step",
          "Gherkin: When & Then Step",
          "Gherkin: Background Step",
          "Gherkin: Step Argument",
          "Gherkin: Scenario Outline",
          "Gherkin: Comments & Doc String",
          "Tags : Control Execution"
        ],
        "Step Definitions": [
          "What is Step definition"
        ],
        "Implement BDD in Realtime Automation Project using Selenium Java Cucumber": [
          "Step 1: Java Installation",
          "Step 2 : Eclipse Installation"
        ],
        "Project Setup - Selenium | Java | Maven | Cucumber": [
          "Setup Automation Project for BDD Framework",
          "Define Project Structure"
        ],
        "Write Automation : Define Feature File - Step Definition - Runner Class & Report": [
          "Write Feature File - End to End behavior of application",
          "Setup Runner File for Execution",
          "Configure Extent Report for generating HTML Report",
          "Write Step Definition File & Execute Test Case",
          "Common Examples"
        ]
      },
      "requirements": [
        "Basic understanding of Software Testing Concepts",
        "Basic understanding of Automation Testing Concepts"
      ],
      "description": "Course Update\nSep 2022 : Updated videos with better voice quality\nMay 2021 : Updated videos for BDD Implementation using Java Cucumber\n\n\n\n\nCucumber is one of the most popular BDD tool.\nTo Testers point of view, we can use this tool to implement BDD approach with Selenium, Calabash, Watir etc.\nIf you’re new to BDD and want to get basic to expert level understanding of BDD then this course is a right place to get started.\nCucumber is a software tool that supports behavior-driven development. Central to the Cucumber BDD approach is its ordinary language parser called Gherkin. It allows expected software behaviors to be specified in a logical language that customers can understand.\nThis course is designed to make you understand BDD basic to advance, Why to implement BDD in Automation project, How to implement BDD using Cucumber.\nBefore the BDD framework, everyone was using TDD. TDD works fine in software development, provided the stakeholders are familiar with the framework being used and their technical knowledge is sufficient. However, this may not be the case always.\nBDD provides a path that acts as a bridge to overcome the gap between the technical and the non-technical teams because the test cases are commonly written in simple text, i.e. English. The main advantage of BDD is the low jargon and clearer approach which is easier to understand.\nCourse Coverage\nTDD& BDD Basic Concepts\nDifference between TDD and BDD\nFeature File\nStep Definitions\nGherkin Keywords\nBDD Implementation to Selenium with Java\nCucumber\nBackground\nGiven, When and Then\nScenario and Scenario Outline",
      "target_audience": [
        "Freshers looking opportunity in Software Testing",
        "Manual testers want to jump into BDD automation",
        "Automation Testing Professional want to implement BDD framework in project"
      ]
    },
    {
      "title": "Angular automation with Protractor + Typescript + Cucumber",
      "url": "https://www.udemy.com/course/protractor/",
      "bio": "Understand Protractor and Cucumber with Typescript language from complete ground up",
      "objectives": [
        "Understand what Angular 2 application is",
        "Understand and work with Jasmine",
        "Understand and work with Protractor with Typescript",
        "Working with Page Object Models in protractor",
        "Working with different tools and techniques of Protractor with Typescript",
        "Working with BDD using Cucumber with Protractor"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Understanding and Building Angular 2 application": [
          "Part 2 - Understanding and building Angular 2 application",
          "Part 3 - Understanding and building Angular 2 application with angular-cli"
        ],
        "Understanding and working with Jasmine": [
          "Part 4 - An Introduction to Jasmine",
          "Part 5 - Jasmine Specs with Describe and It block",
          "Part 6 - Jasmine Specs with Expect and Match",
          "Part 7 - Executing Jasmine specs with SpecRunner"
        ],
        "Understanding and working with Protractor": [
          "Part 8 - An Introduction to Protractor",
          "Part 9 - Introduction, Installing and Configuring Protractor with VS Code",
          "Part 10 - Working with Locators in Protractor (Part A)",
          "Part 11 - Working with Locators in Protractor (Part B)",
          "Part 12 - Locators shorthand and finding element within element"
        ],
        "Working with advanced concepts on Protractor": [
          "Part 13 - Working with Page Object Models in Protractor",
          "Part 14 - Working with Page Object Models with custom utilities in Protractor",
          "Part 15 - Working with Page Object models with custom utilities (Contd)",
          "Part 16 - Running Protractor test interactively with Shell",
          "Part 17 - Configuring the debugger of Protractor with VS Code",
          "Part 18 - How Protractor Works ?",
          "Part 19 - Understanding Async/Await in Typescript and its impact in Protractor"
        ],
        "Working with Cucumber and Protractor with Typescript": [
          "Part 20 - An Introduction to Cucumber with Protractor with Typescript",
          "Part 21 - Installing and getting started with Cucumber in Protractor",
          "Part 22 - Writing first code using Cucumber in Protractor (Part A)",
          "Part 23 - Writing first code using Cucumber in Protractor (Part B)",
          "Part 24 - Understanding and working with Scenario Hooks (Part A)",
          "Part 25 - Understanding and working with Scenario Hooks (Part B)"
        ],
        "Cucumber Reporting with Protractor": [
          "Part 26 - Introduction to Cucumber reporting",
          "Part 27 - Writing Cucumber Reporting Extension (Part A)",
          "Part 28 - Writing and running Cucumber reporting extension (Part B)"
        ],
        "Protractor + Cucumber Tidbits": [
          "Part 29 - Working with Cucumber Tags",
          "Part 30 - Working with Protractor Suites",
          "Part 31 - Working with Data Tables in Cucumber",
          "Part 32 - Working with Data Driven Testing using JSON",
          "Part 33 - Working with Data Driven Testing using Excel",
          "Part 34 - Taking screenshot when test fail and attach in cucumber report",
          "Part 35 - Cucumber Gherkin Extension for VS Code",
          "Part 36 - Handling Global timeout in Protractor",
          "Part 37 - Handling multiple browsers and running test in parallel"
        ],
        "Upgrading Protractor, Cucumber and Cucumber HTML report to latest version": [
          "Upgrading Protractor, Cucumber and Cucumber HTML report to latest version",
          "Upgrading Protractor, Cucumber, Cucumber HTML report to latest version (Part 1)",
          "Upgrading Protractor, Cucumber, Cucumber HTML report to latest version (Part 2)",
          "Upgrading Protractor, Cucumber, Cucumber HTML report to latest version (Final)"
        ],
        "CI/CD with Protractor + Jenkins + GitLabs": [
          "Continuous Integration with Protractor + Jenkins",
          "Jenkins Pipeline project",
          "Modifying code to run with Jenkins Pipeline project"
        ]
      },
      "requirements": [
        "Basic understanding on Typescript",
        "Basic understanding in Selenium",
        "Basic understanding in Javascript and cucumber"
      ],
      "description": "Angular automation with Protractor + Typescript + Cucumber course is designed in such as way that anyone with basic knowledge in Typescript and selenium can get started with this course without any hiccups.\nThis course is the first-ever course that covers Protractor automation with Typescript language, which in turn helps people to understand how easy it is to work with Typescript compared to Javascript.\nIn this course, we will cover the following topics\nUnderstand building Angular 2 applications with Angular-CLI\nUnderstand how to build an Angular 2 application with Angular CLI\nUnderstanding and working with Jasmine\nUnderstand what Jasmine is\nUnderstand how to work with Jasmine for automation testing\nUnderstanding and working with Protractor (Basic)\nLearn about the basics of Protractor\nWork with different modules of the protractor\nWorking with UI Interactions\nWorking with Assertions\nWorking with various ways to work with Angular applications\nPower of Protractor for automation testing and increase the speed of automating application\nUnderstanding and working with Protractor (Advanced)\nUnderstand the advanced features of Protractor\nUnderstanding how to leverage the power of other application types in automation.\nWorking with Cucumber and Protractor with Typescript\nUnderstanding BDD\nUsing the same with Cucumber along with Typescript\nWriting BDD scenarios\nRunning BDD test\nGenerating Reports with BDD\nCI/CD with Protractor\nThe course has not only covered very basic topics on Protractor, but it has also covered some of the advanced concepts which are required for production-ready and industry standards.",
      "target_audience": [
        "QA",
        "Automation Engineers",
        "Developers",
        "BA",
        "DevOps"
      ]
    },
    {
      "title": "Quality Assurance - Become a Freelance Software Tester",
      "url": "https://www.udemy.com/course/qa-freelance-software-tester/",
      "bio": "Introduction to Freelance Opportunities for Software Quality Assurance Testers",
      "objectives": [
        "Students will learn about quality assurance through the exploration of software theory and practical application. Culminating in strategies on how to become a QA freelancer.",
        "Be introduced to the best freelance opportunities globally for QA and learn the tools of the trade."
      ],
      "course_content": {
        "What is QA and Freelancing": [
          "Introduction",
          "What is Quality Assurance",
          "What is Freelance and How can I become one?",
          "Quality Assurance"
        ],
        "Software Theory & Methodologies": [
          "Software Development Life Cycle (SDLC)",
          "Software Testing Life Cycle (STLC)",
          "Agile vs. Waterfall",
          "Agile Testing",
          "Software Theory & Methodologies"
        ],
        "Software Testing Tools": [
          "Introduction to QA tools - Screencapture",
          "Video Formatting, Compression & Sound for Testing",
          "Mobile Screencapture & Log Capture",
          "Introduction to Browser Log Capture",
          "Software Testing Tools"
        ],
        "Bug Reports and Test Cases": [
          "Bug Reports",
          "Test Cases",
          "Write a Test Report",
          "Practice Writing a Bug Report",
          "Test Cases & Bug Reports Recap"
        ],
        "Conclusion": [
          "Certifications",
          "The Journey Toward Digital Nomadness",
          "Conclusion - Course Completion"
        ]
      },
      "requirements": [
        "In this course we will work with Chrome and Firefox browsers developer tools, use a basic text editor, use a screen capture screen cast and AZ screen recorder"
      ],
      "description": "Learn to test websites and mobile apps to find flaws or defects. Allowing you to make money as a freelancer or in your spare time. The course covers manual testing, agile testing, software testing lifecycle and the tools of the trade. Also provided are tips on how to get started so that you to can become a digital nomad. Having the freedom to work from anywhere and at anytime as a freelancer.\nNo degree required. Just a desire to learn!",
      "target_audience": [
        "Beginners to Quality Assurance and software testing, those interested in testing android or iOS apps, anyone looking to be digital nomad and work anywhere. QA is the perfect office free gig you can get."
      ]
    },
    {
      "title": "Learn ETL Testing With Informatica PowerCenter Today",
      "url": "https://www.udemy.com/course/etl-testing-for-beginners/",
      "bio": "Learn ETL testing now. Step-by-step software testing with relevant exercises. Learn now and get your promotion!",
      "objectives": [
        "Learn ETL testing and get a promotion/new job",
        "Data warehousing Concepts",
        "Normalization of data",
        "ETL process with some transformations",
        "ETL testing process with test scenarios",
        "How to test the scenarios with examples",
        "What issues can impact the data quality of data in a data warehouse",
        "Much more..."
      ],
      "course_content": {
        "Introduction to Dataware Housing": [
          "Datawarehousing concepts"
        ],
        "SQL": [
          "SQL brief introduction"
        ],
        "ETL Overview": [
          "ETL process"
        ],
        "ETL Testing": [
          "Types of ETL testing",
          "Types of ETL Bugs",
          "ETL Tester roles",
          "ETL test scenarios and test cases"
        ],
        "ETL Test scenarios in detail": [
          "Data accuracy testing",
          "Metadata testing",
          "Data Quality",
          "Data completeness"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus Lecture: Course discounts & newsletter"
        ]
      },
      "requirements": [
        "Student should have hands on experience and knowledge to SQL",
        "Student should be familiar with data warehousing concepts and ETL tool",
        "Software required: Oracle SQL-Developer (free) & Informatica PowerCenter"
      ],
      "description": "COURSE OBJECTIVE\nThe Primary objective of this course to make you familiar with ETL testing concepts.\nThe course starts with data warehousing concepts, as that is required before you start testing the data in data warehouse.\nYou should be well versed is SQL (RDBMS query language), hence this tutorial has a brief introduction to SQL and normalization to structure data in a database.\nYou will learn how to test the loaded data by ETL process after transformations. After you finish the tutorial, you can start creating a set of test cases for your ETL mapping and build your own queries to execute them.\nAll sections of the course will have relevant exercises for you to do, so you can practice your new skills.\n\n\nWHAT IS ETL TESTING?\nETL stands for Extract-Transform-Load. It is a process of loading data from the source system to the data warehouse.\nETL testing is done to ensure that the data loaded from the source system to a data warehouse (after transformations), is accurate.\n\n\nTOP 3 BENEFITS OF LEARNING ETL TESTING\nETL testing professionals are in high demand in the market. Tools like Informatica PowerCenter, IBM Infosphere Information Server, Oracle data Integrator,etc. are in huge demand in the Industry and there is no sign of this trend should stop growing anytime soon.\nETL testing Jobs are generally well payed and include many benefits.\nLearning ETL testing will improve your data analytical skills.\n\n\nFREQUENTLY ASKED QUESTIONS\nIs it easy to get a job in ETL testing?\nI would say it is \"easy\". But if you have the right knowledge (like this course) and SQL experience, it should not be much of a problem to get a good ETL testing job in various companies. The future of ETL Testing is very bright. There will always be a need to store data for analysis, for any organizations that has large amount of transactions.\n\nWhat skills are required before I opt for ETL testing?\nETL is all about playing with large data in database. You must have good knowledge of database structured query language (SQL), and knowledge of data warehousing concepts. A short refresher to SQL will be given in the course.\n\n\nGUARANTEE\nIf within 30 days of buying the course you decide that it's not for you, please get a Udemy-backed refund. No questions asked — just press the refund button, and all of your money will be returned to your credit card.\n\n\nARE YOU READY TO LEARN ETL TESTING?\nPlease press the \"Take This Course\" button and start learning 2 minutes from now!",
      "target_audience": [
        "Beginners who want to get job on ETL Testing quickly",
        "IT professionals with very basic knowledge on Database concepts",
        "Developers that wants a increased salary",
        "Project Managers, Database Professionals, Mainframe Professionals, SQL Developers"
      ]
    },
    {
      "title": "Exam Preparation: ISTQB Test Automation Engineering",
      "url": "https://www.udemy.com/course/test-automation-engineering/",
      "bio": "Comprehensive Preparation for the ISTQB Test Automation Engineering Exam",
      "objectives": [
        "Understand the goals and benefits of test automation.",
        "Prepare infrastructure for automation.",
        "Design and implement automated tests.",
        "Apply best practices in test automation.",
        "Collect and analyze test data.",
        "Create automation test reports.",
        "Identify and resolve automation issues.",
        "Prepare for test automation certification."
      ],
      "course_content": {
        "Introduction": [
          "About instructor"
        ],
        "Introduction and Objectives for Test Automation": [
          "Purpose of Test Automation",
          "Test Automation in the Software Development Lifecycle"
        ],
        "Preparing for Test Automation": [
          "Describe the infrastructure requirements for implementing test automation",
          "Explain How Test Automation is Leveraged within Different Environments",
          "Analyze the system to determine the best test automation solution",
          "Illustrate the Technical Findings of a Tool Evaluation"
        ],
        "Test Automation Architecture": [
          "Explain the Major Capabilities in a Test Automation Architecture",
          "Explain How to Design a Test Automation Solution",
          "Apply Layering of Test Automation Frameworks",
          "Apply Different Approaches for Automating Test Cases",
          "Apply Design Principles and Design Patterns in Test Automation"
        ],
        "Implementing Test Automation": [
          "Test Automation Development",
          "Risks Associated with Test Automation Development",
          "Test Automation Solution Maintainability"
        ],
        "Implementation and Deployment Strategies for Test Automation": [
          "Apply Test Automation at Different Test Levels within Pipelines",
          "Explain Configuration Management for Testware",
          "Explain Test Automation Dependencies for an API Infrastructure"
        ],
        "Test Automation Reporting and Metrics": [
          "Apply data collection methods from test automation and the system under test",
          "Analyze Data from Testing to Improve Results Understanding",
          "Explain How a Test Progress Report is Constructed and Published"
        ],
        "Verifying the Test Automation Solution": [
          "Plan to Verify the Test Automation Environment Including Test Tool Setup",
          "Explain the correct behavior for an automated test script or test suite",
          "Identify Where Test Automation Produces Unexpected Results",
          "Explain How Static Analysis Can Aid Test Automation Code Quality"
        ],
        "Continuous Improvement": [
          "Improve Test Cases with Data Collection and Analysis",
          "Analyze and Improve a Deployed Test Automation Solution",
          "Restructure the automated testware to align with system updates",
          "Summarize Opportunities for Use of Test Automation Tools"
        ],
        "Sample exam": [
          "Exam: Test Automation Engineering"
        ]
      },
      "requirements": [
        "Basic understanding of software testing processes.",
        "Willingness to learn and improve test automation skills."
      ],
      "description": "Exam Preparation: ISTQB Test Automation Engineering\nThis course is designed to help you master the core concepts and techniques of test automation and prepare effectively for a certification exam in the field of automated software testing.\nWhether you're an experienced QA professional aiming to validate your skills or someone transitioning into test automation, this course provides structured guidance aligned with official certification standards.\n\n\nWhat You Will Learn\n\n\nTest Automation Fundamentals\nGrasp the objectives, advantages, and scope of test automation within modern software development lifecycles.\n\n\nPlanning and Preparation\nUnderstand how to assess automation needs, select the right tools, evaluate system readiness, and prepare infrastructure.\n\n\nDesigning Automation Architectures\nLearn the principles of building scalable and maintainable test automation frameworks. Explore design patterns, architecture layers, and tool integration.\n\n\nDevelopment and Deployment\nDiscover how to implement test automation solutions, integrate them into CI/CD pipelines, manage versioning, and maintain automation scripts over time.\n\n\nMetrics and Reporting\nMeasure test effectiveness, track automation performance, and deliver clear and actionable reports to stakeholders.\n\n\nQuality Assurance and Optimization\nReview automation results, validate accuracy, and apply continuous improvement strategies to adapt to evolving testing needs.\n\n\nWho This Course Is For\n\n\nTest Automation Engineers preparing for a professional certification based on the ISTQB® syllabus.\nSoftware Testers and QA Analysts aiming to specialize in automation and expand their career opportunities.\nDevelopers and DevOps Professionals who work alongside QA teams and seek a deeper understanding of how automation fits into agile environments.\nTechnical Leads and Managers who want to build or improve automation strategies within their teams.\n\n\nWhy Take This Course?\n\n\nSyllabus-Based Structure: Content aligned with recognized test automation certification programs.\nComprehensive Coverage: From foundational theory to implementation and optimization techniques.\nCareer-Oriented Approach: Gain the knowledge and confidence needed to earn a respected industry certification.\nNo Fluff, Just Focus: Straightforward content designed for professionals who value practical knowledge and clear guidance.\n\n\nEnroll today and take the next step toward becoming a certified test automation engineer. This course will equip you with the technical insight, strategic thinking, and practical skills required to succeed both in the exam and in your automation career.",
      "target_audience": [
        "For software testers looking to expand their skills in test automation.",
        "For professionals preparing for certification exams in test automation."
      ]
    },
    {
      "title": "Test Driven Development in ASP.NET Core - The Handbook",
      "url": "https://www.udemy.com/course/test-driven-development-in-net-core-the-handbook/",
      "bio": "Get Hands-On experience using Unit testing to produce a bullet proof and testable N-Tier .NET Core application.",
      "objectives": [
        "Unit Testing - Testing Core Application Code",
        "Moq Framework",
        "xUnit Testing Framework",
        "Integration Testing - Testing Third Library Interactions (Like EF Core)",
        "Application Level Unit Testing - Testing that the MVC Application behave correctly",
        "Test Driven Development - Red-Green-Refactor Cycle",
        "Using Facts and Theories to write tests",
        "How to write testable code",
        "Know about good unit testing patterns and practices",
        "Unit testing in N-tier web application projects using xUnit",
        "Continuous Integration and Git Branch Protection"
      ],
      "course_content": {},
      "requirements": [
        "Some C# and .NET Knowledge"
      ],
      "description": "Test Driven Development (TDD) is a powerful approach to building reliable and robust software. This course will teach you how to apply TDD in your .NET projects. Unit Testing is a type of software testing where code is written to automate the testing of sub-sections of an entire application. This methodology gives more functional coverage and reduces the need for manual regression testing when the application's code changes. The purpose is to validate that each unit of the software code performs as expected.\nEverything in this course is .NET 6 / .NET 7 compatible.\nYou will discover the basics of unit testing and the red-green-refactor cycle. You will also learn how to test and implement business logic in a .NET Core application using xUnit as a testing framework and Moq as a mocking library.\nAfter this course, you will have the foundational knowledge of Test Driven Development that will help you as you move forward to test and implement new features in your C# projects. You will have the skills and knowledge to create a testable and maintainable ASP.NET Core application to architect real-world enterprise .NET Core apps.\nBuild A Strong Foundation in Unit Testing in .NET:\nUse xUnit Test Projects.\nUse Moq and Shouldly(Fluent Assertions) to write unit tests.\nGitHub Projects to Track Requirements\nConduct Red, Green, Refactor Test-driven development (TDD)\nPractice Test-Driven Development in actual code\nLearn to write testable code\nUnderstand how to write unit tests, then create or refactor code\nReview Pitfalls to avoid and common challenges\nLearn how to set up a Continuous Integration Pipeline using GitHub.\n\n\nContent and Overview\nTo take this course, you must have some knowledge of .NET Core development and C#.\nWith just over 4 hours of premium content, smartly broken up to highlight related activities based on each module in the application being built; we will also look at troubleshooting and debugging errors as we go along, implementing best practices, writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nWe sometimes do things differently than the first time; that is not the reality of writing code. We make mistakes and point them out and fix them around them. By doing this, we develop proficiency in using debugging tools and techniques. By the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step to increase your income and marketability quickly! Also, remember that if you think the course is not worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Developers at all levels",
        "Anyone who wants a better understanding of how unit tests help you to write better code"
      ]
    },
    {
      "title": "Software Testing 101",
      "url": "https://www.udemy.com/course/software-testing-101/",
      "bio": "The crucial guide to building reliable software",
      "objectives": [
        "Founder can focus on business development with well-tested software",
        "Engineer can save cost and time by discovering bugs in early stage of software development",
        "Engage happy customers",
        "Understanding the importance of testing a software"
      ],
      "course_content": {},
      "requirements": [
        "Having very basic understanding of software development cycle"
      ],
      "description": "Software Testing 101 is a crucial guide to building reliable software.\nStarting from \"why\" software testing is important, the course trains your brain to appreciate the benefits of software testing.\nFollowed by \"how\" to do software testing, the course provides you an overview of software development cycle and introduces multiple testing skills that cover the whole development cycle.\nUnit test\nIntegration test\nSmoke & sanity test\nEnd-to-end test\nPerformance test\nUser Acceptance test\nFor each lab section, I will introduce the \"what\" to you - \"what you can use to carry out the test\".\nWith the approach of \"why\", \"how\" and \"what\", you will be leaded to the road of building a reliable, scalable and cost-effective software.",
      "target_audience": [
        "Founder of any business with software applications",
        "Beginner engineer who wants to become a QA manager/engineer",
        "Experienced QA manager/engineer who wants to explore more skills on testing software"
      ]
    },
    {
      "title": "Learn Manual Software Testing, Selenium, JIRA for beginners",
      "url": "https://www.udemy.com/course/manual-software-testing-course-best-for-beginners/",
      "bio": "Start- Career in manual testing, Simple and Easy Course Manual Software Testing, Selenium , Agile, JIRA , Manual Testing",
      "objectives": [
        "Able to create functional test cases for web applications. manual testing and Selenium Automation",
        "Strong understanding of SDLC to monitor and improve software quality.",
        "Hands-on knowledge of the Software Testing Life Cycle (STLC).",
        "Create effective test data using Boundary Value Analysis (BVA) and ECP.",
        "Learn walkthroughs, white-box testing, and verification techniques.",
        "Understand V-Model, Agile, and other software development models.",
        "Learn the complete Bug Life Cycle and defect tracking process.",
        "Hands-on experience with end-to-end eCommerce application testing.",
        "Introduction to Selenium automation testing for beginners.",
        "Learn core Java concepts essential for automation testing.",
        "Get started with TestNG, Page Object Model (POM), and Apache POI.",
        "Capable of defect tracking and reporting using tools like JIRA.",
        "Conducted quizzes and assignments to reinforce testing concepts."
      ],
      "course_content": {},
      "requirements": [
        "Almost Nothing .. just jump in and start learning",
        "Basic idea on working with computer is advantage"
      ],
      "description": "Excellent course For beginners who wanted to start a career in Manual Software Testing\n2025 Updates\n**Selenium with Core Java For Beginners Level Added to Course *\nStarts From Section 30\n\n\nSection  17 : Writing Testcases for Ecommerce website - End to End Project Testing\nSection 18: Task  On Testcases\nSection  19: Cross- Browser testing using Cloud - Browser stack cloud based Cross - browser Testing\n\n***Updates : Added new Videos On Agile ,  Scrum and Jira  2024\nNew Jira updates of 2024 had been added to course\nSection 19 : Agile development process and scrum development\nLesson 45: What is Agile\nSection 20 : All About Scrum\nLesson 46: Scrum Development processes , what is epic , user-story , etc\nLesson 47 : Scrum Flow\nSection 22: Jira update 2024\nLesson 58 to 64:\n\nThis course is mostly concentrated on a practical part like deriving Test data and writing test cases for a given functionality, I have widely covered test cases writing topics with required documents because whatever the level of experience a tester have, working with test cases is the general practice of manual testers\nHighlights\nNon- IT students can easily learn the course\nCourse starts from very scratch\nAll life cycles explained\nHands-on writing Testcases\nsimple design course\nexplained each and every topic of manual testing\nImportant Note: In this manual Testing course I have not discussed any tool like QC/ALM because its a course for complete beginners\n\nCourse starts from what is software and covers all the theory parts of software development and testing\nthen slowly moves on to the practical part of driving test cases and test data\na lot of examples are given on How to write test cases\n\nBy The END OF THE COURSE\nyou will understand how development happened and the role of the tester in development processes\nyou will get an idea of different types of testing\n\nyou will be learning how to work with optimal testing by using BVA and ECP\nfor sure you will be able to write test cases for a given functionality\nand much more\ncome join me",
      "target_audience": [
        "This course is purely for beginners . who want to make there career in software testing field",
        "best suitable for non- it/ non technical students",
        "excellent for newbies in software testing"
      ]
    },
    {
      "title": "ISTQB Test Management Certificate V3.0 (Test Manager)",
      "url": "https://www.udemy.com/course/istqb-test-management/",
      "bio": "Take your software testing career to the next level by becoming a certified tester in Test Management",
      "objectives": [
        "Certified Tester Advanced Level Test Management (CTAL-TM) v3.0",
        "Managing the Test Activities",
        "Managing the Product",
        "Managing the Team"
      ],
      "course_content": {},
      "requirements": [
        "Passing the ISTQB Foundation Level Certified Tester Certificate",
        "Having previous experience in software testing"
      ],
      "description": "Overview\nThe ISTQB® Advanced Level Test Management (CTAL-TM) certification provides the knowledge and competencies to take responsibility for managing all the testing activities across the software development lifecycle. It covers everything from how to design a suitable test approach for the project based on the organizational test strategy to building a test team or testing competencies to complete the necessary testing.\nAudience\nThis Advanced Level qualification is aimed at anyone involved in the management of software testing. This includes people in roles such as testers, test consultants, test managers, user acceptance testers, scrum masters, project managers or product owners. This Advanced Level Test Management qualification is also appropriate for anyone who wants an advanced understanding of software testing such as project managers, quality managers, software development managers, business analysts, IT directors and management consultants. Holders of the Advanced Level Test Management Certificate will be able to go on to the ISTQB Expert Level software testing qualifications. The ISTQB Certified Tester Advanced Level – Test Manager or Test Management certificate is valid for life and does not require renewal. The certificate is recognized internationally and demonstrates the candidates’ professional competence and credibility in test management.\n\nTo gain this certification, candidates must hold the Certified Tester Foundation Level v4.0 or previous versions of the Foundation Level certificate and have sufficient practical experience.",
      "target_audience": [
        "Software Testers",
        "QA Engineers",
        "Quality Managers",
        "Test Leaders"
      ]
    },
    {
      "title": "API Testing & API Tests Automation Using Postman & Newman",
      "url": "https://www.udemy.com/course/api-testing-and-api-tests-automation-using-postman-newman/",
      "bio": "Learn API Testing & API Tests Automation From Scratch With Project Using Javascript, Chaijs, Postman, Newman & Jenkins",
      "objectives": [
        "API Testing Using Postman",
        "API Tests Automation Using Postman, Newman and Chai Js",
        "CI/CD Integration between Jenkins and Newman",
        "Javascript and ChaiJs Concepts",
        "End2End API Testing Automation Using Postman+Newman+Chai JS in javascript"
      ],
      "course_content": {
        "Course Introduction And Basics Of API(skip if you know this)": [
          "Course Introduction",
          "Basics of API Testing"
        ],
        "Postman Features and API Testing Using Postman(skip if you know this)": [
          "API Testing Using Postman & Basic Postman Features",
          "How to generate api test cases and find bugs during api testing",
          "Live Examples Of 4XX And 5XX API Status Code Errors",
          "Manual API Testing Of File Based API Using Postman",
          "Manual API Testing Of GraphQL Based API Using Postman",
          "How To Use Collection Runner To Test API Suite With One Click",
          "Data Driven Testing Using Postman & CSV Data File",
          "Team Workspace & Version Controlling in Postman",
          "APIs Monitoring Using Postman",
          "Mocking API Using Postman",
          "API Testing Using Postman Web(Beta)"
        ],
        "Basics of JavaScript & ChaiJS(Skip if you know this)": [
          "Basics of JavaScript",
          "Basics of ChaiJS"
        ],
        "API Tests Automation(Don't miss this)": [
          "API Tests Scripts & PM Object",
          "Pre Request Scripts & Collection Level Tests",
          "Generating Test Script Data Using Postman Keywords",
          "Write test scripts for data driven testing using parameterized csv file data",
          "Json Response Schema Validation Using Postman",
          "Send Conditional Requests Using Postman",
          "Skip, Fail & Add Timeout In Test Scripts Using Postman",
          "Test & Extract Data From Soap Xml Service",
          "Test & Extract Data From Html Dom",
          "Test & Extract Data From Sql Database",
          "Test & Extract Data From GraphQL API Request/Response",
          "Test and extract data from oracle/any database (Apache Drill Tutorial)"
        ],
        "Creating API Automation Test Suite For Live Project(Most Critical Section)": [
          "Understanding Live Project Test Automation Suite Requirements",
          "Creating API Tests Automation Suite For Live Project Part 1",
          "Creating API Tests Automation Suite For Live Project Part 2"
        ],
        "CI/CD Using Newman & Jenkins+Docker(Important For CI/CD Pipelines)": [
          "Newman Commands & Newman Reporters",
          "Jenkins Set Up & Configuration For Sending Automation Suite Results From Jenkins",
          "Run Newwan Collection On Docker"
        ],
        "Student Requests": [
          "Basics Of Web Services & Rest",
          "Basics Of Client Server Architecture & HTTP Request",
          "Keypoints About Post, Put & Delete Method Types",
          "How to create reusable JavaScript methods in postman",
          "Microservices and Aggregate Pattern Introduction"
        ],
        "Extra Bonus": [
          "How To Migrate Postman API Collection To Jmeter Script",
          "How To Convert Postman API Test To Restassured Java Test: Live Batch Recording"
        ],
        "Useful Links For API Testing": [
          "Sample APIs For API Testing Practice",
          "API Testing Interview Questions"
        ]
      },
      "requirements": [
        "No prior specialized knowledge is required",
        "Basic computer knowledge is required"
      ],
      "description": "Learn API Testing & API Tests Automation From Scratch With Live Project Using Javascript, Chaijs, Postman, Newman & Jenkins.\n\nIn this course, we will be also making some mistakes then debugging them and then fixing them just like we do in a real project, there are no retakes in this course, If I make mistake then I debug and fix them in real-time so this will be very useful even if you are a beginner.",
      "target_audience": [
        "Software Testers, Fresh College Graduates, Unit Testers",
        "Automation Engineers, SDET, Developers"
      ]
    },
    {
      "title": "XPath locators for Selenium",
      "url": "https://www.udemy.com/course/xpath-locators-for-selenium/",
      "bio": "Build complex XPath locators for Selenium automation that will work on any web element",
      "objectives": [
        "Build complex XPath locators",
        "Locate ANY element on the page with XPath",
        "Automate testing of any element on the web page"
      ],
      "course_content": {
        "Introduction | XPath locators for Selenium": [
          "What we need to know",
          "Helpful tips before we start",
          "Page elements",
          "Selenium Locators",
          "Locating Web Elements",
          "Section 1 Quiz"
        ],
        "XPath basics | XPath locators for Selenium": [
          "What is XPath?",
          "XPath Terminology",
          "Types of XPath",
          "Section 2 Quiz 1",
          "Basic XPath syntax",
          "/ vs // vs ./ vs .//",
          "Use of .//",
          "Position and index",
          "Section 2 Quiz 2",
          "XPath Functions: Text",
          "XPath Functions: Contains",
          "XPath Functions: Starts-With",
          "XPath Functions: not",
          "Section 2 Quiz 3"
        ],
        "Advanced XPath | XPath locators for Selenium": [
          "XPath Operators",
          "XPath wildcards",
          "XPath Axes",
          "Finding elements relative to other elements",
          "Selecting Several Paths",
          "SVG elements",
          "Stopping page load",
          "Section 3 Quiz"
        ],
        "Pros and Cons of XPath | XPath locators for Selenium": [
          "XPath versus CSS",
          "Bonus Lecture: Discount coupons"
        ]
      },
      "requirements": [
        "Test Automation with Selenium",
        "Basic HTML and XML understanding"
      ],
      "description": "XPath or XML Path Language is a query language for selecting nodes from an XML document.  XPath also may be used to compute values from the content of an XML document.\nXPath is a complicated method of identifying elements, but it can find the location of ANY element on a web page, even those without class, name, or id attributes. XPath produces reliable locators if it used correctly. That's why it's so popular among test automation engineers as the main locator strategy for Selenium tests.\nIn this course you will learn how to build reliable complex XPath locators, that can help you automate testing of any web application. You will learn a lot of tips and tricks. We will review some tools that can help beginners and some Google Chrome tricks for developers.\nWords \"very good\", \"excellent course\", \"very helpful\" can be seen in many 4 star reviews.\n\"XPath locators for Selenium\" have been BESTSELLER almost since the course publication date. Students love it and enjoy learning from it.\nThe course was updated in October 2020 with more info, more tips and tricks, better audio quality, and more examples. And in addition, I added a free downloadable XPath cheat sheet, which you can find in the attached resources to the course.",
      "target_audience": [
        "Test Automation engineer who want to create better and easier to maintain locators"
      ]
    },
    {
      "title": "Learn SQL +Security(pen) testing from Scratch",
      "url": "https://www.udemy.com/course/database-testing-tutorial/",
      "bio": "Step by step Tutorial to learn SQL and Web Security testing with real time examples",
      "objectives": [
        "You will gain the ability to design any complex SQL to query a database- (SQL)",
        "Indepth understanding of GROUP BY,Subqueries,aggregate functions, SQL Server functions,HAVING clauses -(SQL)",
        "Understand the difference between the INNER JOIN, LEFT/RIGHT OUTER JOIN, and FULL OUTER JOIN- (SQL)",
        "You will understand the Importance of Session Hijacking Mechanisim and their confidential data use -(Security Testing)",
        "You can investigate application behavior with Parameter Tampering and Brute force attacks-(Security Testing)",
        "You will get the knowledge of all basics with Http that might cause attacking malicious inputs-(Security Testing)",
        "Create or interact with existing databases and test the Database for schema validations - (SQL)",
        "Detect Request forgery Designs if present any in Web applications --(Security Testing)",
        "You can Clear any Interview on SQL with the Interview questions covered - (SQL)"
      ],
      "course_content": {
        "Course FAQ's": [
          "Why to learn SQL and Security Testing? and how this course is designed",
          "Please Note"
        ],
        "Introduction to SQL": [
          "Introduction to DataBase",
          "Introduction to SQL and MySQL",
          "Downloading MySQL server with workbench",
          "Overview of SQL Editor with basic features",
          "SQL basic Material for reference"
        ],
        "CRUD operations on Database with Practical examples": [
          "creating Database and pointing to it",
          "Creating Tables in database",
          "Inserting records into Table",
          "Retrieving records from the Table",
          "SQL commands glossary on discussed Topics"
        ],
        "Altering Table Schema operations": [
          "Adding and modifying records in a table",
          "Deleting records and droping database",
          "Updating rows in a table",
          "Modifying operations example",
          "SQL Glossary on discussed topics"
        ],
        "SQL Logical operators to retrieve Data": [
          "Select Distinct keyword in queris",
          "SQL WHERE command usage",
          "Logical operators on Queries AND OR - 1",
          "Logical operators 'In' 'Between'- 2"
        ],
        "Regular expressions in writing Smart SQL Queries": [
          "Regular expressions Introduction",
          "Wild cards usage in Qeuries -1",
          "SORT by usage in Queries",
          "SQL glossary on discussed topics"
        ],
        "Deeper Understanding on GroupBy, Aggregate functions with practical examples": [
          "Importance of Group By in SQL",
          "Combination of GroupBy and SQL functions(Min,Max,Avg)",
          "Usage of Having keyword with GroupBy and Aggregate functions",
          "Difference between Having and Where keyword and when to use them",
          "Practise Exercises on GroupBy,Having,Where and Aggregate functions keyword -1",
          "Practise Exercises on GroupBy,Having,Where and Aggregate functions keyword- 2",
          "SQL glossary on discussed topics"
        ],
        "Building SQL Sub queries with examples": [
          "SubQueries syntax and usage",
          "SubQueries Example"
        ],
        "SQL Joins, Inner Joins, Outer joins, Left&Right joins with Interview questions": [
          "SQL Joins usage and its advantages",
          "SQL Joins Example",
          "Relation on subqueries and Joins",
          "Practical examples on Joins and subqueries",
          "Left and Right joins importance in SQL",
          "Practical example on Inner joins, Left join, Right Join"
        ],
        "Understand SQL String functions and Views with examples": [
          "Importance of views in Database",
          "views example on Database",
          "String functions - 1",
          "String functions - 2",
          "String functions -3",
          "SQL glossary on discussed topics"
        ]
      },
      "requirements": [
        "******You need NOT have any proir SQL/Security testing knowledge to start this course*********",
        "Though these are online Lectures.You will have Life Time instructor support.You can contact me any time for your Queries,Will respond back with in 12 hours",
        "All Installation setup including Database basics is taken care as part of course",
        "Theoretical Material,Code dump and Interview Guide are available for download"
      ],
      "description": "SQL and Security Testing are Additional skills which every software Engineer need to have irrespective of their role in Project. And this course fulfills the gap by teaching both these topics and also  gives you an edge compared to other Engineers at your work .And of course these are one of the common skills which are tested in every Software Engineer Interview.\nWhat make this course special for beginners?\n\"No more Boring slides or Definitions. I will write every SQL query before you in lecture and teach every topic needed to master in SQL with Practical examples\nAnd also This Tutorial will give all the weapons you needed to investigate and unlock the Security Holes in the Web application with powerful Penetration testing approach\nCourse lectures are conceptually driven with root level explanations and bring you to the level where you can write any kind of SQL query and detect any kind of security bugs in the application\n\n\nThis course covers :\n\n\nMYSQL :\nIntroduction to SQL -- MySQLOverview -- Start up commands to Setup Database andTables -- Database testing to validate Schema -- Altering Table Schema operations -- Queries to retrieve Data Logical operators on Queries -- Wild cards usage in Queries -- SQL Functions with real time scenarios -- Importance of Group By in SQL -- Advanced SQL Concepts -- SubQueries syntax and usage -- SQL Joins usage and its advantages -- Importance of views in Database -- SQL String functions  -- Dataconstraints with DataBase Testing perspective -- Practise Exercises for Interviews with Solutions -- SQL glossary on discussed topics\nSecurity Testing :\nCourse Contents: Basics of Security Testing Terminologies involved in Security Domain Top OWASP principles Cross site Scrpiting Xss examples Cookies Importance Danger with stealing of cookies Session Hijacking Cross site forgery Attacks Parameter Tampering Methods to Intercept requests Account Management Password security guidelines Brute force mechanism Importance of Client side validations",
      "target_audience": [
        "Any IT professional no matter in what field they are into",
        "QA Testers who want to enhance their skill on Data base Testing and Security testing",
        "Freshers/Graduates who want to learn computer science foundations"
      ]
    },
    {
      "title": "Software Testing,QA Testing, Manual Testing,SDLC,Test Plan",
      "url": "https://www.udemy.com/course/software-testing-qa-fundamentals-and-manual-testing-concept/",
      "bio": "Become an expert QA Tester by mastering software testing, manual testing, SDLC, test plan and test case concepts..",
      "objectives": [
        "Master the basic concepts of software testing",
        "Become an expert manual tester"
      ],
      "course_content": {
        "Intro": [
          "Introduction to Software Development Life Cycle",
          "Continuing SDLC concepts",
          "Finalizing SDLC concepts"
        ],
        "Basic": [
          "What is Software Testing?",
          "Different types of testing",
          "Continuing different software testing types"
        ],
        "Mid Level": [
          "Finalizing different software testing types",
          "Writing market standard test plan and test cases from scratch",
          "Continuing test plan and test cases"
        ],
        "Advanced": [
          "Finalizing test plan and test cases",
          "Test case fundamentals",
          "Finalizing the process of writing test cases",
          "Scripts and files"
        ]
      },
      "requirements": [
        "No prior software testing skills needed",
        "No prior manual testing knowledge required"
      ],
      "description": "**Course & materials are last updated on November 27th, 2018- Over 33,000 students enrolled worldwide**\nThis is another award winning and popular course from us and we are showcasing it on Udemy for the first time. This course is available for only $34.99 instead of $99 for a limited time!! Just like our other courses, we have kept most of the videos for free and available for preview for your convenience so please feel free to explore and test drive it. If you want to become a master in Software Testing, look no further and don't lose the opportunity.\nQuality Assurance is a must need in today’s era of technology. Meeting the expected quality of an application has become an essential factor for organizations. This is where software development and software testing concepts come into play. Organizations need to follow certain quality assurance standards in order to survive in the market competition. It is must required to understand software development life cycle before executing software testing concepts. We often ignore software testing fundamentals and manual testing concepts which is hugely harmful. IT professionals can never reach the expected level of success without a strong foundation in software development and software testing concepts. Also, it has not been easy to find project oriented and real-time training in software testing fundamentals. However, we all need to learn the basics of quality assurance and testing before jumping into any sort of automation. In this course, we took a hands-on and step by step approach to make it easier for IT professionals to master software testing core concepts. This course includes basic and advanced QA training videos with practical examples of different aspects of testing including software development life cycle (SDLC), overview of specific roles and real-time work environment for a software tester, different types of testing, creating comprehensive test plans, and test cases.",
      "target_audience": [
        "Individuals with passion to enter software testing field",
        "Beginners in the quality assurance field"
      ]
    },
    {
      "title": "AToZ:Software Testing and Automation With Real Life Projects",
      "url": "https://www.udemy.com/course/atoz-sta-with-real-life-projects/",
      "bio": "Become Software Tester (Manual or Automation) for Mobile Apps, Web Applications and Desktop Applications",
      "objectives": [
        "Learn Manual Testing, Automation Testing Or Both",
        "Learn to Set up Working Environment for Software Testing and Automation",
        "Learn In and Out of Functional Testing on Mobile Apps, Web Applications and Desktop Apps",
        "Use SQL Server Management Studio (SSMS) to Query SQL Server Database",
        "Use Selenium WebDriver to Automate Web Applications",
        "Use Eclipse (IDE) with Selenium WebDriver",
        "Learn Using Automation Testing tools such as Selenium WebDriver, iMacros and WinAutomation",
        "Use SQL Server Integration Services (SSIS) to upload data into a SQL Server Database",
        "Learn Basic of MS Excel and MS Word (Document) Object",
        "Learn when to Use Exploratory testing",
        "Learn How to Migrate MS Access Database and MS Excel to SQL Server Database Engine",
        "Learn End to End Test Automation for Mobile, Web and Desktop Applications",
        "Learn and Understand When Regression Testing is Use",
        "Use SSDT-Business Intelligence Tool for Database Testing and Extract Transform Load Testing",
        "Use Microsoft Excel to Create Test Scripts Template for Mobile Apps, Web Apps and Desktop Applications",
        "Gain Experience as a Primary Tester",
        "Learn Using Automated Test tools such as Selenium WebDriver, iMacros, and WinAutomation",
        "Learn How to Create Automated Regression Testing with iMacros or Selenium WebDriver",
        "Learn how to Develop and Refining the Test Plans covering Functional Manual, Performance or Automation Testing",
        "Learn Planning and Performing Functional Testing to Identify, Report and Prioritise Defects.",
        "Learn to Create Test Scenarios that Validate the Business Requirements and Ensure the product is fully Integrated.",
        "Have an Awareness of a Good Quality Software Tester or QA Tester",
        "Learn How To Report Bugs or Defects Using BugTracker System",
        "Have access to 20+ Real Life Projects (Desktop, Web and Mobile Applications)",
        "iMacros addons for Firefox, Google Chrome and Internet Explorer"
      ],
      "course_content": {
        "Section 1: Get Started": [
          "Lesson 1: Introduction",
          "Lesson 2: About The Instructor",
          "Lesson 3: Welcome and overview",
          "Lesson 4: A Brief Overview Of Software Testing"
        ],
        "Section 2: Setting Up Work Environment for Software Testing & Automation": [
          "Lesson 5: Installing of Java Eclipse IDE and Configuration",
          "Lesson 6: Integration of Selenium inside Eclipse IDE",
          "Lesson 7: Installation of SQL Server Database Engine with Management Studio",
          "Lesson 8: Installation of SQL Server Data Tools – SSDT-BI",
          "Lesson 9: Installation of Browser Addons (Firefox)",
          "Lesson 10: Installation of WinAutomation",
          "Lesson 11: Installation of NotePad++",
          "Lesson 12: Installation of SQL Server Migration Access 7.3",
          "Lesson 13: Installation of MS Access 2013 Runtime",
          "Lesson 14: Installation of NoxPlayer or Bluestack for Mobile *.apk file Testing",
          "Lesson 15: Skills Software Tester or QA Tester Needed To Have"
        ],
        "Section 3: Basic Excel for Software Tester Or QA Tester": [
          "Lesson 16: Why Excel?",
          "Lesson 17: COUNT",
          "Lesson 18: COUNTA",
          "Lesson 19: COUNTBLANK",
          "Lesson 20: COUNTIF",
          "Lesson 21: IF",
          "Lesson 22: IF OR",
          "Lesson 23: IF AND",
          "Lesson 24: NESTED IF",
          "Lesson 25: MAX",
          "Lesson 26: VLOOKUP",
          "Lesson 27: CONDITION FORMATTING",
          "Lesson 28: Simple CHART"
        ],
        "Section 4: Basic SQL and Extract Transform Load for Software Tester or QA Tester": [
          "Lesson 29: Connecting SQL Server Mgmt. Studio with SQL Server Database Engine",
          "Lesson30: Migrating MS Access DB using SQL Server Migration Assistant for Access",
          "Lesson 31: SSIS Execution Result Errors (ETL Testing)",
          "Lesson 32: Database Testing - Extract Transform Load (ETL) Pt 1",
          "Lesson 33: Database Testing - Extract Transform Load (ETL) Pt 2",
          "Lesson 34: Database Testing - Extract Transform Load (ETL) Pt 3",
          "Lesson 35: Database Testing - Extract Transform Load (ETL) Pt 4",
          "Lesson 36: Database Testing - Extract Transform Load (ETL) Pt 5",
          "Lesson 37: Database Testing - Extract Transform Load (ETL) Pt 6",
          "Lesson 38: Data Testing - Query MSSQL Server database"
        ],
        "Section 5: Automation - Selenium WebDriver Tips For Software Tester or QA Tester": [
          "Lesson 39: Locating Web Elements For Selenium WebDriver",
          "Lesson 40: Selenium WebDriver Web Element User Interactions",
          "Lesson 41: Selenium WebDriver Test Design Techniques, Project Object Model (POM)",
          "Lesson 42: Selenium WebDriver Code Templates",
          "Lesson 43: How To Use The Code Templates",
          "Lesson 44: What is iMacros",
          "Lesson 45: How To Record with iMacros",
          "Lesson 46: How to Use WinAutomation"
        ],
        "Section 6: Desktop Apps Testing - Practical Demonstration (Real Application)": [
          "Lesson 47: Instruction about the Tasks (Desktop)",
          "Lesson 48: ***Project Work - AccessDB***",
          "Lesson 49: ***Project Work - Afritelly Encoder v2016***",
          "Lesson 50: ***Project Work - Afritelly Encoder v2017***",
          "Lesson 51: ***Project Work - AllDB***",
          "Lesson 52: ***Project Work - Colouring Book***",
          "Lesson 53: ***Project Work - AfritellyDesigner***",
          "Lesson 54: ***Project Work - DirectoryCleaner***",
          "Lesson 55: ***Project Work - Afritelly Route Planner***",
          "Lesson 56: ***Project Work - ProcessInfo***"
        ],
        "Section 7: Mobile Apps Testing - Practical Demonstration (Real Application)": [
          "Lesson 57: Instruction about the Tasks (Mobile)",
          "Lesson 58: ***Project Work - iBarcode Scanner***",
          "Lesson 59: ***Project Work - iComment***",
          "Lesson 60: ***Project Work - iDeviceInfo***",
          "Lesson 61: ***Project Work - iPictureUp***",
          "Lesson 62: ***Project Work - iPlan***",
          "Lesson 63: ***Project Work - iQuiz***",
          "Lesson 64: ***Project Work - iSimple Barcode Scanner***"
        ],
        "Section 8: Web Applications Testing - Practical Demonstration (Real Application)": [
          "Lesson 65: Instruction about the Tasks (Web)",
          "Lesson 66: ***Project Work - Simple Webshop***",
          "Lesson 67: ***Project Work - Advanced Webshop***"
        ],
        "Section 9: How to Create Test Cases (Template)": [
          "Lesson 68: Creating Test Script Master Template using MS Excel",
          "Lesson 69: Embed MS Word Object inside Master Template"
        ],
        "Section 10: How to Create Test Scenario (Test Condition)": [
          "Lesson 70: ***TEST CASES CHECKLISTs***",
          "Lesson 71: Guide for Creating Test Scenario"
        ]
      },
      "requirements": [
        "Highly Motivation and Passion"
      ],
      "description": "******Notice******\n\n\n\n\"Awwwww thank you. This course has help me a lot and it’s one of the best. I just got a job after completing this course. I will recommend this course to anyone anytime any day. Thank you Mr Ola\". by Olufemi\n\nWelcome to AToZ Software Testing and Automation With Real Life Projects Included.\nFirst and foremost please have it in mind that this course is going to be hands-on training tutorial (Meaning 90% of this course is extraordinarily practical and 10% is theoretically base), i.e. it is learning by doing.\nThis course will teach you step by step Manual and Automation Software Testing (Functional) journey on Intermediate level skills for companies requirements using the Selenium WebDriver 3 GUI automation, WinAutomation, and iMacros browser addons for automating the Functional part of Web Applications with over 20+ real life projects.\nThis course is very well structured:\nHighly focus practical on one of the most useful skills for testing front-end Web Applications, Desktop Applications and Mobile Apps (Manual Testing, Automation Testing), Extract Transform Load (SSIS - ETL testing), Create Test Script Templates with Microsoft Excel, MSSQL Server, Bugfinder & Reporting using BugTracker Engine and asking questions. You will also learn to use Code Templates written  (Java - Selenium WebDriver) provided for practices.\nMarket is never short of jobs in Software Testing & Automation, there are a lot of jobs in both Manual and Automation Testing using Java and other programming languages.\nThis course assumes that you have no programming background and if you have some experience in programming then it's a plus point. But If you have never write programming code or have some basic programming experience, this course is one stop place for you.\n\nYou will get the best in class support from the instructor for any question you have related to this course.\nThis course is backed by udemy's 30-day money back guarantee. If you are not satisfied for any reason, you will get the money back. In addition to that you will keep all the code files of the course as a thank you for trying out the course !!!",
      "target_audience": [
        "This course is for someone who want to become or already a:-",
        "UAT (User Acceptance Testing) Tester",
        "Software Tester",
        "Test Manager",
        "Software Quality Assurance Tester",
        "Software Test Automation Engineer",
        "Web Application Tester",
        "Test Engineer",
        "Mobile Tester",
        "Software Quality Test Engineer",
        "Test Analyst"
      ]
    },
    {
      "title": "Advanced Gatling for Stress Testing Web Applications",
      "url": "https://www.udemy.com/course/advanced-gatling-java/",
      "bio": "Use Gatling to create an advanced stress, load and performance test framework with a real project and add Jenkins for CI",
      "objectives": [
        "Project based approach to learning Gatling by implementing against an actual e-commerce site",
        "Building an entire stress testing framework using Gatling from scratch",
        "Executing Gatling stress tests through Jenkins for Continuous Integration",
        "Full installation and configuration of Gatling and all required dependencies",
        "Learn advanced features of Gatling such as conditional statements and the Session API",
        "Using the Gatling Recorder to create an initial user journey",
        "Adding support for multiple user journeys, load scenarios and test populations"
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview",
          "Housekeeping"
        ],
        "Day 1 - Project Onboarding": [
          "Day 1 Overview - Welcome to Ace Toys!",
          "Explore Application Under Test",
          "Create Gatling Development Environment"
        ],
        "Day 2 - Record User Journey": [
          "Day 2 Overview",
          "Tour of Application",
          "Record User Journey",
          "Replay Script",
          "Handle User Authentication",
          "Basic Checks for Response Body and Response Code",
          "Day 2 Quiz"
        ],
        "Day 3 - Building a Gatling Framework": [
          "Day 3 Overview",
          "Refactor Static Pages",
          "Refactor Category",
          "Refactor Product",
          "Refactor Cart",
          "Refactor Customer",
          "Day 3 Quiz"
        ],
        "Day 4 - Feeders for Test Data": [
          "Day 4 Overview",
          "CSV Feeder",
          "JSON Feeder",
          "Custom Feeder",
          "Day 4 Quiz"
        ],
        "Day 5 - Programmatic Logic in Gatling": [
          "Day 5 Overview",
          "DoIf Logic",
          "Setting Session Variables",
          "Tracking cart data in user session",
          "Increase Quantity of items in Basket",
          "Decrease Quantity of items in Basket",
          "Day 5 Quiz"
        ],
        "Day 6 - Load Simulation Design": [
          "Day 6 Overview",
          "Multiple User Journeys",
          "Multiple Test Scenarios",
          "Multiple Test Populations",
          "Runtime parameters",
          "Day 6 Quiz"
        ],
        "Day 7 - Continuous Integration": [
          "Day 7 Overview",
          "Github Repository Setup",
          "Install Jenkins",
          "Execute Gatling tests through Jenkins",
          "Runtime parameters through Jenkins",
          "Assertions in Gatling",
          "Day 7 Quiz"
        ],
        "Conclusion & Next Steps": [
          "Conclusion & Next Steps"
        ]
      },
      "requirements": [
        "Some basic experience in any computer programming language will be helpful, but not required",
        "No previous experience with Gatling is required, as all code and examples are explained in detail",
        "Taking the Gatling Fundamentals course on Udemy before this will facilitate greater understanding"
      ],
      "description": "Level up your Gatling knowledge, by building an entire stress testing framework from scratch against a live e-commerce application!\nIn this course, you'll assume the role of a performance testing consultant, who has been hired to implement a bespoke, robust and flexible continuous stress testing framework against a real web application.\nThis project will take you through implementing the framework across a seven day project, using all the advanced features of Gatling as the stress testing solution. We'll also be hooking up our Gatling code with Jenkins for continuous integration.\nWhat will you learn from this course?:\nFull installation & setup of a new Gatling project from scratch - using the latest JAVA version of Gatling\nUsing the Gatling recorder to create a Gatling script against a live e-commerce website\nRefactoring our Gatling code into an actual stress testing framework\nAll of the advanced features of Gatling such as programmatic logic, session parameters and feeders\nDesigning and implementing multiple user journeys and test scenarios through our application\nInstallation and configuration of Gatling through Jenkins for continuous integration\nThis course follows on from the hugely successful Gatling Fundamentals courses right here on Udemy. Although it is advisable to complete one of the Gatling Fundamentals courses first (either the Scala or Java versions), do note that this it is not required as this course is standalone.\nNo prior knowledge of performance testing or software development is required, as I will be walking you through the entire process. However, any prior knowledge or experience that you do have in these domains  will be of benefit and will naturally aid learning.\nThis course is for any Developer or Quality Engineer that wants to learn how to use the Java version of Gatling for testing their website, e-commerce store or other web application.\nIf you want to take your knowledge of Gatling and stress testing to next level whilst building an entire stress testing framework from scratch, this is the course for you.",
      "target_audience": [
        "QA Engineers and Programmers with small or no experience with Gatling",
        "Anyone using an alternative load testing tool like JMeter, LoadRunner or NeoLoad that wants to learn a new tool",
        "Developers looking to add a powerful, fun and intuitive new tool to their knowledge-base",
        "Experienced Gatling users looking to take their knowledge to the next level"
      ]
    },
    {
      "title": "Web Automation Testing For Beginners Using Nightwatch.js",
      "url": "https://www.udemy.com/course/web-automation-testing-for-beginners-using-nightwatchjs/",
      "bio": "Learn the basics of using Nightwatch.js to invoke Selenium and Webdriver for website test automation",
      "objectives": [
        "Web Test Automation",
        "Nightwatch JS",
        "Selenium",
        "WebDriver"
      ],
      "course_content": {
        "Introduction": [
          "What will be covered",
          "Requirements",
          "What is Nightwatch?",
          "About me"
        ],
        "Getting Started": [
          "Overview",
          "Install Node.js",
          "Install Nightwatch",
          "Install Webdrivers",
          "Install shortcut",
          "Configuration file",
          "Test directory",
          "Url for the Simple Test",
          "A Simple Test",
          "Using CSS vs Using XPath",
          "Setup Example for CSS vs XPath",
          "Url for useCss and useXpath tests",
          "useCss() and useXpath()",
          "A gotcha with useCss () and useXpath()",
          "Set XPath as the default instead of CSS selectors",
          "Review"
        ],
        "Basic Actions": [
          "Overview",
          "Setup",
          "Navigating to a website",
          "Pausing",
          "Url for Click test",
          "Clicking on elements",
          "URL for Text Input tests",
          "Entering text into input fields",
          "Using the keyboard: Set Value",
          "Using the keyboard: An array of characters",
          "Using the keyboard: All the predefined \"KEYS\"",
          "Using the keyboard: Deleting all characters from an input field",
          "URL for Dropdowns tests",
          "Dropdowns: Setup the test",
          "Dropdowns: SetValue()",
          "Dropdowns: Clicking",
          "Review"
        ],
        "Asserts and Expects": [
          "Overview",
          "URL for the next few lessons",
          "Test page",
          "Setup Test",
          "Assert Visible",
          "Expect Visible",
          "Assert Contains Text",
          "Expect Contains Text",
          "Assert Element Present",
          "Expect Element Present",
          "Expect Enabled",
          "URL for the Enabled lessons",
          "Enabled Example Page",
          "Using Assert Attributes To See If Element Is Enabled",
          "Using Expect Enabled",
          "Verify vs Assert",
          "waitForElementVisible and waitForElementPresent",
          "URL for waitForElement lessons",
          "waitForElement: Test Page",
          "waitForElement: Write the Test",
          "Review"
        ],
        "Running Tests": [
          "Overview",
          "Running \"headless\"",
          "Setup",
          "Running All Tests",
          "Running Individual Tests",
          "Using Tags",
          "Using Groups",
          "Review"
        ],
        "Epilogue": [
          "Thank You",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Javascript"
      ],
      "description": "Do you need to learn how to write test automation for websites?  This course gets you started using the basics of web test automation.\nBy the end of this course, you will be able to write basic web test automation that you can use at any job.  You will learn how to install Nightwatch.js from scratch and how to do so in a Node.js friendly way.\nLearn how to automate:\nnavigating to web pages\nclicking on elements\nfilling out forms\nvalidating elements on the page\nselecting items from dropdown menus\nUnder the hood, Nightwatch.js uses Selenium.  Taking this course will introduce you to the world of Selenium based testing for web pages. A valuable skill in the marketplace.\nYou only need to know the basics of Javascript to take this course.  You can follow along as all the examples are written on the screen for you to follow along with.\nAll the tools used in this course are free, so you don't need to buy any fancy software.\nThe instructor has used Nightwatch.js at his company to build a large number of tests across multiple teams that are used to verify releases in their Continuous Delivery system. Chris has taught multiple teams and other software testers how to use Nightwatch.js to accomplish these goals. You are in good hands in this course!",
      "target_audience": [
        "Software Testers writing test automation for web browsers",
        "Software Testers learning a new test framework that leverages Selenium"
      ]
    },
    {
      "title": "K6- Automate Performance &Load Testing of API& Microservices",
      "url": "https://www.udemy.com/course/k6-automate-performance-load-testing-of-api-microservices/",
      "bio": "Are you still stuck with Jmeter? Automate realistic stress/load test of API & simulate real-world scenarios",
      "objectives": [
        "The best developer experience using open source load testing tool and JavaScript language to write realistic load tests.",
        "Performance monitoring of your APIs , Websites and microservices in production.",
        "Write automated tests in Javascript that simulate real-world scenarios and Get Pass/Fail behavior on your performance goals.",
        "Validate that your system can handle the expected volume of traffic, and catch critical performance regressions before they reach production.",
        "Generate load from 16 geographic locations to test API using K6 Cloud.",
        "Accelerate your performance testing using Cloud, Gitlab, CI/CD, AWS EC2, InfluxDB, Grafana.",
        "API Performance and Load Testing Framework Design.",
        "Output performance test results and metrics to InfluxDB and create interactive dashboard using Grafana."
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "K6 and Cloud Random Shots",
          "Create Performance Test Project",
          "API Performance Testing",
          "Introduction Quick Recap",
          "All Downloadable Resources",
          "Note - IMP - Code - Download"
        ],
        "Design K6 Performance Test Cases": [
          "Write Load Test Case in JavaScript",
          "Random Shots",
          "Load Virtual Users",
          "Configure Virtual Users",
          "Ramp-up Ramp-down User Load",
          "Random Shots Rampup",
          "Recap Virtual Users"
        ],
        "Checks": [
          "Checks and Asserts",
          "Multiple Checks",
          "Error Rate",
          "Recap Checks"
        ],
        "HTTP API": [
          "Header and JSON",
          "Response Array",
          "Data Array",
          "Post Requests"
        ],
        "Performance Test Metrics": [
          "Built-in Metrics",
          "Design Counter",
          "Counter Retry Mechanism",
          "Understand Trend",
          "Trend Retry Mechanism"
        ],
        "Threshold": [
          "Basics of Threshold",
          "Threshold on Checks"
        ],
        "Test Life Cycle": [
          "Test Life Cycle"
        ],
        "Fixed Rate per Second": [
          "Write RPS"
        ],
        "Design Dashboard": [
          "Configure Influxdb",
          "Configure Grafana",
          "View Live Test results and Metrics",
          "Understand Grafana Load Test Dashbaord"
        ],
        "K6 and Amazon EC2": [
          "Influxdb on EC2",
          "Grafana on EC2",
          "Link Influxdb and Grafana",
          "K6 on EC2",
          "Execute Load Test on EC2"
        ]
      },
      "requirements": [
        "No prior experience in Testing or Performance Testing or in Programming Language is required.",
        "No need to purchase any software. We will use open source load testing tool and JavaScript."
      ],
      "description": "We will enhance this training course regularly to cover more examples and real-time projects.\nSummary - Learn the future of performance testing and automate Performance & Load Testing of API and micro-services using open-source tool K6.\nOpen Source - K6 is an open-source load testing tool built for developers and testers' happiness. It has over 1 million installations.\nNotifications - Pass/Fail behavior for easy automation and integration into CI pipelines, Gitlab\nDeveloper centric load testing - Everyone loves fast apps, APIs and websites. K6 helps you to automate Load tests that simulate real-world users as closely as possible.\nGoal-based load testing - You will be able to automate test which covers performance and functional goals like what level is a response time not acceptable, and/or what is an acceptable failure rate\nStore and Visualize Performance Test Results -  K6 can output its test result data to different sources like JSON file, Grafana\nIntelliSense - Get code auto-completion and in-context documentation.\nVisual Studio Code Extension - Execute VS Code commands to run a k6 test of your current file.\nPerformance Monitoring - Performance monitoring of your APIs and micro-services in production.\nLoad Testing - Quickly build test cases to validate the performance of your APIs or micro-services. Validate that your system can handle the expected volume of traffic, and catch critical performance regressions in CI before they reach production.\nAutomated testing - Automate your performance tests. Get Pass/Fail behavior on performance goals.\nWrite tests in Javascript code - Full scripting language to write realistic load tests. Reuse modules and Javascript libraries to build and maintain a performance test suite.\nScaled to the cloud - Designed to use the same test in a local or cloud environment.\nk6 Cloud - Speed-up performance testing and Avoid managing your own infrastructure.\nGUI test builder - Record your tests using the browser extension\nRun cloud tests - Scale tests in the cloud up to 100k concurrent virtual users and Generate load from 16 geographic locations\nTest Scheduling - Schedule and run tests from the web app, CLI, and CI pipelines\nAnalyze test results - Filter your test results by location, period, and tags. Get a convenient overview of your test results.\nBe a performance expert - Compare performance results between tests. Get automatic analysis and recommendations that quickly pinpoint performance issues. Get alert about your performance tests.\n\n\nAre you still stuck with JMeter? Then, learn GUI and Code-based testing with JavaScript and Upgrade to K6 & K6 Cloud for better developer experience.\n\n\nK6 is used by Amazon, Microsoft, Grafana, Gitlab, Citrix, etc. Backed by 20 years of experience.\n\n\nCourse Curriculum Summary\nPromotion Video Walkthrough\nUnderstand the Basics of K6\nUnderstand API Performance Testing\nDesign and execute Sample Test Script\nRunning K6 with 100S of virtual users\nRamp-up and Ramp-down Users\nChecks, Asserts and Design Error Rate and Failure Rate\nWrite HTTP Requests and parse responses\nUnderstand Built-in Metrics, Counter, Trend, Retry Mechanism\nDesign Threshold on Checks to pass/fail load test\nTest Life Cycle, SetUp, TearDown, Main Function\nFixed RPS with Example\nInfluxDB, Grafana, Design Dashboard\nK6, InfluxDB, Grafana on Amazon EC2\nUnderstand Load-impact to design and execute scripts on Cloud from the various geographic location\nDefine tags and groups for better filtering\nPerformance Test Framework design using Postman to K6 Converter\nReal-time project and Automated Performance Testing Framework Design\nUnderstand Virtual Users, Runners, Debugging Scripts\n\n\nExample\n1. Write your load test\nUse the k6 Javascript API to write simple and realistic load test.\nexport let options = {\nthresholds: {\n\"http_req_duration\": [\"p(90)<300\"],\n\"failed requests\": [\"rate<0.15\"],\n}\n};\n\n\n2. Define Pass and Fail criteria for performance tests\n- 95th percentile response time must be below 1s.\n- Less than 0.15% request errors.\n\n\n3. Execute the test. Verify Pass/ Fail behaviour.\nTest many load configurations to ensure your performance goals in multiple situations.\nRunning the test (50VUs, 2m), please wait...\nTest Run Successful\nTotal thresholds: 2.  Passed: 2.  Failed: 0.\n\n\n4. Automate your performance and load tests\nRun your tests frequently to be confident in your system's performance.\nSchedule your test execution and integrate your tests into CI pipelines.\nPerformance test Execution Run 1\nCheckout API. 2 of 4 thresholds failed.\nPerformance test Execution Run 2\nCheckout API. 4 of 4 thresholds passed.\n\n\n5. Receive alerts on performance regressions\nConfigure your notifications and get alerts if any change breaks your performance goals.\n\n\n6. Visualize Test Results\nHost Grafana and share with stakeholders to view live test execution and test metrics",
      "target_audience": [
        "Developers - Write tests in ES6 Javascript to simulate real-world scenarios.",
        "DevOps & SREs - Automate your tests to ensure that your infrastructure and application shows excellent performance.",
        "Software Testers & QAs - Create tests faster with our browser recorder , converters and ES6 JS Scripts",
        "Students and Freshers - Highlight your resume with Performance Testing."
      ]
    },
    {
      "title": "UI Automation with Serenity BDD (Selenium, Cucumber, Junit)",
      "url": "https://www.udemy.com/course/ui-automation-with-serenity-bdd/",
      "bio": "\"A deep dive on using Serenity BDD for UI Automation\"- Learn the essentials needed to master the Serenity BDD Framework!",
      "objectives": [
        "Learn about the rich out of the box features of Serenity BDD framework",
        "Interact with Ui controls like Buttons, Links, Dropdowns, checkboxes, draggable etc",
        "Create re-usable code using Page Object Model design pattern",
        "Use Serenity BDD to write clean & concise UI Tests",
        "Data-Driven Tests using Serenity BDD & Junit",
        "Write BDD tests using Gherkin",
        "Source code management using Git/Github",
        "Continuous Integration with Jenkins"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Core java, JUnit",
        "Knowledge of Selenium WebDriver"
      ],
      "description": "In the last decade, there has been a tremendous increase in the number of businesses that are now making it easier for consumers to do business online by having a website which supports multiple browsers & operating systems or mobile applications on multiple platforms like  Android, IOS.\nSoftware development teams are ensuring that the website gets tested continuously with the  help of automated testing; so they end up investing heavily in developing custom automation frameworks. With custom frameworks, maintenance is costlier & sometimes can slow down the automation process. Also, it can become challenging to find developers who can develop a solid robust framework with excellent documentation, support etc.\nWouldn't it be great if we had a test framework that was robust, maintained, updated constantly to work with the latest  binaries, had a plenty of support from user community, and supported different libraries?\nWell the good news is there is such an opensource framework that is dedicated to meeting the above mentioned wishes. It is the Serenity BDD Framework (formerly know as Thucydides).\nSerenity BDD is an open source test automation framework which comes integrated with many popular libraries like Selenium, Appium, Junit4, JBehave, Cucumber, Rest-Assured etc. It provides many out-of-the-box features which will support UI automation as well as API automation.\nIn this course, you will familiarize yourself with many of the important features Serenity provides & how they can be used to interact with Web Elements (the-internet-application) & also you will learn how to automate an application (J-Petstore) using Page Object Model design pattern & Cucumber library.\nBelow are some of the important topics that are covered in the course.\nEmphasis on the concept of DRY (don't repeat yourself) by creating reusable methods, utility methods etc. & organizing them.\nLearn how to interact with different web elements like radio button, links, edit box, drag drop etc. using inbuilt Serenity methods\nLearn synchronization (using Implicit & Explicit waits) in Serenity BDD\nHow to handle mouse/keyboard interactions\nAutomate a Pet store application using Page Object Model pattern\nCreate Data Driven Tests\nExecute tests in Parallel\nGroup/Run tests using Tags\nLearn to generate Test Data (using  Faker API)\nExecuting tests remotely on Selenium Grid, Docker & Zalenium using Serenity BDD (RECORDING IN PROGRESS)\nCreate Cucumber Scenarios, Steps, Tags etc. & integrate with Serenity BDD\nCommit code to GitHub\nCreate a CI environment by integrating project with Jenkins & GitHub\nAll course materials will be provided for download, along with notes wherever applicable. Your questions or doubts on course material will be answered & any additional guidance needed will be provided.\nAt the end of this course, you will be able to confidently automate Web Applications using the features provided by Serenity BDD framework.",
      "target_audience": [
        "QA Engineers who want to learn how to use UI automation Framework",
        "Software engineers,SDETS who want to learn a new Test Automation Framework"
      ]
    },
    {
      "title": "Performance Testing Using Locust 1.0",
      "url": "https://www.udemy.com/course/performance-testing-using-locust/",
      "bio": "Learn Python based Modern Load Testing Framework !",
      "objectives": [
        "Performance Testing with Locust",
        "Set up locust environment - standalone, distributed from scratch as well as using docker",
        "Feeding data, handling dynamic data in request, cookie handling ,nesting requests",
        "API Testing using Locust",
        "Logging & Error Handling",
        "Working with events - test non-http clients, send data to InfluxDB",
        "Understand Report"
      ],
      "course_content": {
        "Latest - Locust 1.0- Locust Development Environment": [
          "Introduction",
          "Install Python",
          "Install Locust on Windows | Install Pycharm",
          "Create Locust Project in Pycharm | Run Example Script",
          "Create Locust environment on Linux"
        ],
        "Latest - Locust 1.0- Working with Basic Locust Script": [
          "Introduction",
          "Create basic Locust Script | User class | wait_time | @task",
          "Add host attribute | HTTPUser class",
          "Locust inbuilt wait_time methods",
          "Multiple user classes | weight attribute",
          "Run options for commandline",
          "Running test in headless mode -define users, hatch rate ,time of run ,logfile",
          "Add on_start | on_stop methods",
          "Add test_start | test_stop methods"
        ],
        "Latest - Locust 1.0- Working with Tasks": [
          "Declaring tasks with decorator | Define task weight",
          "Declaring tasks with tasks attribute | Define task weight",
          "Declaring Tasks inside TaskSet Class",
          "Sequential Tasksets",
          "Nested TaskSets",
          "self.Interrupt"
        ],
        "Latest - Locust 1.0 - Working with HTTP Requests": [
          "HTTP GET request | client attribute | name request",
          "HTTP POST request",
          "Extract Response Data",
          "Verify Response with catch_response",
          "Assignment - Create Script for Complete Booking Flow",
          "Session Management",
          "Manage session using cookies",
          "Assignment - Cookie Handling",
          "Extract Data from Response Body",
          "Assignment - Complete Autoquote Workflow",
          "Assignment - Complete Agent Lookup Workflow",
          "Nested Tasks with HTTP requests",
          "Testing API- Working with JSON data",
          "Assignment - REST API Script - Complete Flow"
        ],
        "Load Testing Environment - Upgraded 1.0": [
          "Parametrize test using external module",
          "Parametrize test using csv",
          "Assignment - Parametrize Borland Nested Task Script Using CSV",
          "Linear Vs Step Load Model",
          "Distributed Work Load - Intro , Single Machine, expect-workers",
          "Reading options from configuration file",
          "Make script OS independent with os module",
          "Logging",
          "Exit User / Test on Failure",
          "Locust Distributed Environment - Multiple machines",
          "Run Locust Test using Docker",
          "Locust with docker-compose"
        ],
        "Locust Web Monitor & Report Statistics": [
          "Introduction",
          "Run Test -Number of Users, Hatch Rate & Host",
          "Understand Statistics & Charts - Min,Max, Avg.,Median,Percentile",
          "Understand Statistics & Charts - RPS, Number of Users,Average Size",
          "Retrieve test statistics in CSV format"
        ],
        "Enhancing Locust Scripts": [
          "Understanding Event Hooks",
          "Assignment- Print individual request data using event",
          "Assignment Solution .Bonus-Send data to csv",
          "Send data to InfluxDB using locust event & python InfluxDB client"
        ],
        "Using Custom Clients -Testing systems other than HTTP": [
          "Introduction",
          "Modularization along with time & event wrapper",
          "Assignment- Create locust script for ftp protocol",
          "Assignment-Solution-FTP Client Locust Script"
        ]
      },
      "requirements": [
        "You can have any basic programming background",
        "You really don't need to know Python for this course as we will tell you what is required but eventually you would like to learn this most popular language with so many sources around."
      ],
      "description": "Hello,\nIt's time to swarm your application by modern load testing framework - Locust!\nIt's easy to start & quick to understand. It simply figures out how many concurrent users an application handle. It is supported by the most popular language python which makes it highly flexible!\nIt offers highly scalable and distributed testing and all this comes at no cost! There is no reason why you should not learn this light & yet highly powerful tool. It could be an effective tool for both developers & testers.\nHere in this course, I will take you through deeper sections of the tool and make sure that you get highly enabled to use this wonderful tool. Multiple assignments at each step will make you more confident about the concepts learned. Additionally, all the scripts walked through during lectures, and also the solution to the assignment are available in corresponding resources of the lectures.\nIn case of queries/issues, I would try to respond as early as possible.\n\n\nHappy Learning!\nAnuradha",
      "target_audience": [
        "Testers, developers who want to load test their application in quick & effective manner"
      ]
    },
    {
      "title": "Bug Tracking with Jira: Jira for Software/QA Testers",
      "url": "https://www.udemy.com/course/bug-tracking-with-jira-jira-for-softwareqa-testers/",
      "bio": "Learn the fundamentals of using Jira for bug tracking as an expert software tester",
      "objectives": [
        "Become proficient in bug tracking using Jira",
        "Become an expert in reporting defects"
      ],
      "course_content": {
        "Introductory": [
          "Introduction to Software Testing and Bug Tracking"
        ],
        "Getting started with Jira": [
          "Getting hands-on with Jira",
          "Creating issues/defects using Jira",
          "More on Jira"
        ],
        "Fundamentals of Software Development/Software Testing": [
          "Understanding Software Development Life Cycle (SDLC)",
          "Continuing SDLC",
          "More on SDLC"
        ]
      },
      "requirements": [
        "No prior Jira experience required",
        "No prior bug tracking skills required"
      ],
      "description": "This is another award winning and popular course from us and we are showcasing it on Udemy for the first time.\nQuality Assurance is a must need in today's era of technology. Meeting the expected quality of an application has become an essential factor for organizations. This is where software development and software testing concepts come into play. Organizations need to follow certain quality assurance standards in order to survive in the market competition. It is must required to understand software development life cycle before executing software testing concepts. We often ignore software testing fundamentals and manual testing concepts which is hugely harmful. IT professionals can never reach the expected level of success without a strong foundation in software development and software testing concepts. Also, it has not been easy to find project oriented and real-time training in software testing fundamentals. However, we all need to learn the basics of quality assurance and testing before jumping into any sort of automation. In this course, we took a hands-on and step by step approach to make it easier for IT professionals to master software testing core concepts. This course includes basic and advanced QA training videos with practical examples of different aspects of testing including software development life cycle (SDLC), overview of specific roles and real-time work environment for a software tester, different types of testing, creating comprehensive test plans, and test cases.\nJIRA is the tracker for teams planning and building great products. Thousands of teams choose JIRA to capture and organize issues, assign work, and follow team activity. At your desk or on the go with the new mobile interface, JIRA helps your team get the job done (Atlassian's site)",
      "target_audience": [
        "Beginners in the quality assurance field",
        "Software Quality Analysts"
      ]
    },
    {
      "title": "Software Quality Assurance (SQA) for Beginners from scratch",
      "url": "https://www.udemy.com/course/software-quality-assurance-sqa/",
      "bio": "Learn QA, Software Testing, Manual Test and Defect Management, SDLC, STLC, SQL",
      "objectives": [
        "Software Testing",
        "QA",
        "Software Quality",
        "Manual Test"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Software Testing and SQA",
          "What is a Project",
          "Quiz for Section 1"
        ],
        "What is SQA": [
          "A Project",
          "Diner Party"
        ],
        "SDLC and STLC": [
          "Software Development Life Cycle",
          "Software Test Life Cycle",
          "STLC continued",
          "SDLC"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "This is a Software Testing beginner course. This course is for you who like to join IT (Information Technology) industry quick. Software Testing is a fast route to land on IT jobs.\nSoftware Testing; also known as Software Quality Assurance (SQA) is one of the most critical functions within the Software Development industry.\nThis course covers SDLC (Software Development Life Cycle), STLC (Software Test Life Cycle), QA testing, QA process, QA methodology, Tools, types of testing, JIRA etc",
      "target_audience": [
        "Anyone"
      ]
    },
    {
      "title": "Must Learn Skills for Testers[SQL+Unix+ShellScript+Jira+ALM]",
      "url": "https://www.udemy.com/course/automationpack/",
      "bio": "Database Testing , Server Side Testing, Bug Reporting and Management",
      "objectives": [
        "Ready to automate mobile application",
        "Ready to face mobile automation testing interviews"
      ],
      "course_content": {},
      "requirements": [
        "Windows Machine with atleast 2GB RAM"
      ],
      "description": "This course is specially designed for Software Manual Testers or Professional having experience between 2 to 5 yrs, looking for Opportunity in Software Testing\nIn Today's competitive environment companies want software tester with manual testing knowledge but also having extra skills like database testing, server side testing and test management knowledge.\nThis course targets these extra set of skills which every tester must have to get good opportunities in this competitive environment\nDatabase Testing : Here we cover basic to advance set of SQL queries which every tester must know, it include working with data in table, create , insert, update and delete, different type of joins etc.\nServer Side Testing : Here we cover Unix and shell scripting concepts from basic to advance level and their usage for Software Tester, it covers working with log file, memory status, etc\nTest Management using ALM :\nWe are going to learn following components Project Planning and Tracking HP ALM provides project planning and tracking so application development solutions teams can define, track, measure, and report on project milestones and key performance indicators.\nApplication Lifecycle Intelligence HP ALM delivers real-time traceability of requirements and defects. QA department can significantly benefit from this traceability to get on-time reports and have visibility into the system under development\nLab Management Automation HP lab management capability allows testing teams to provision and deploy a test lab themselves in a hybrid delivery environment",
      "target_audience": [
        "Manual testers looking opportunity in automation testing",
        "Freshers looking opportunity in Software Testing"
      ]
    },
    {
      "title": "WebServices testing (RestAssured + Postman) Complete Guide",
      "url": "https://www.udemy.com/course/webservices-testing-restassured-postman-complete-guide-learnit/",
      "bio": "2 in 1! Learn API testing from zero and build Test Automation with minimum toolset: Java, Gradle, JUnit, RestAssured",
      "objectives": [
        "Postman basics",
        "API baiscs",
        "REST API",
        "RESTful Web Services",
        "HTTP methods",
        "HTTP status codes",
        "JSON schemas",
        "API testing",
        "Gradle basics",
        "JUnit 5 basics",
        "RestAssured basics"
      ],
      "course_content": {},
      "requirements": [
        "A computer with access to the internet",
        "Some basic knowledge in software testing",
        "Some basic knowledge of Java"
      ],
      "description": "Are you eager to become a master of Webservices Testing, using both RestAssured and Postman? Look no further! This comprehensive course is designed to transform you into a proficient WebServices Testing expert.\nIn today's interconnected world, reliable WebServices are the backbone of modern applications. This course is your gateway to mastering API and Webservices testing, leveraging the power of both RestAssured and Postman.\nWhat You Will Learn:\nPostman Basics: Begin your journey with a solid understanding of Postman, whether you're a beginner or experienced user.\nAPI Basics: Grasp the foundational concepts of APIs, understanding their importance in modern software development.\nREST API: Dive deep into Representational State Transfer (REST) APIs, and learn how to interact with them efficiently.\nRESTful Web Services: Explore RESTful Web Services, and discover how to validate their functionality effectively.\nHTTP Methods: Master various HTTP methods (GET, POST, PUT, DELETE, etc.) for diverse API operations.\nHTTP Status Codes: Learn how to interpret HTTP status codes accurately, identifying success and potential issues.\nJSON Schemas: Work with JSON schemas to validate and structure API responses with precision.\nAPI Testing: Tackle practical API testing scenarios, from simple requests to complex workflows, ensuring the reliability of WebServices.\nGradle Basics: Discover Gradle, a powerful build automation tool, to manage project dependencies efficiently.\nJUnit 5 Basics: Gain proficiency in JUnit 5, a robust testing framework, to structure and execute your tests seamlessly.\nRestAssured Basics: Explore the fundamentals of RestAssured, a popular Java library for API testing, to build powerful test scripts.\nWhy Enroll in This Course?\nHands-On Experience: Develop practical skills through hands-on exercises, quizzes, and real-world API testing projects.\nExpert Guidance: Learn from experienced instructors with a deep understanding of WebServices testing and RestAssured.\nCareer Advancement: Enhance your career prospects by becoming a proficient WebServices Tester, a skill in high demand in the tech industry.\nLifetime Access: Enjoy lifetime access to course materials, updates, and join a supportive online community of learners.\nDon't miss this opportunity to become a WebServices Testing expert with both RestAssured and Postman. Enroll today, and take the first step toward a rewarding career in API and Webservices testing!",
      "target_audience": [
        "Anyone who wants to learn how to test API using Postman",
        "Students who are seeking to work as Test Automation Engineer",
        "Anyone who wants to learn how to build test applications using RestAssured"
      ]
    },
    {
      "title": "POSTMAN API Testing - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/postman-api-testing-step-by-step-for-beginners/",
      "bio": "learn POSTMAN Step by Step from scratch with real world examples",
      "objectives": [
        "By the end of this course you will have complete hands-on knowledge on working with POSTMAN",
        "In-depth understanding of all features and settings of POSTMAN",
        "You will be able to create end-to-end API Testing projects with POSTMAN",
        "Complete hands-on knowledge on How to run your tests from command-line and Jenkins Continuous Integration",
        "******* You will get complete support with all your doubts, questions and issues *******"
      ],
      "course_content": {
        "ABOUT INSTRUCTOR AND THE COURSE": [
          "Video message from Raghav",
          "About Raghav and this course ***Must Watch***"
        ],
        "INTRODUCTION": [
          "What is POSTMAN | Getting Started",
          "How to create 1st API Request",
          "Postman Quiz 1 (Basics)"
        ],
        "UPDATE FOR DEMO APIS": [
          "401 Unauthorized Missing API key in ReqRes APIs"
        ],
        "POST PUT PATCH DELETE": [
          "POST Request",
          "PUT & PATCH Request",
          "DELETE Request",
          "Postman Quiz 2 (Http Methods)"
        ],
        "COLLECTIONS": [
          "What is Collection | How to create Collection",
          "Postman Quiz 3 (Collections)"
        ],
        "VARIABLES": [
          "How to create and refer variables",
          "Postman Quiz 4 (Variables)",
          "How to Get and Set variables with Scripts",
          "Postman Quiz 5 (Variables with Scripts)"
        ],
        "ENVIRONMENTS": [
          "How to create Environments",
          "Postman Quiz 6 (Environments)"
        ],
        "TEST SCRIPTS CREATION": [
          "How to create quick scripts",
          "Postman Quiz 7 (Scripts)",
          "How to create First Test",
          "Postman Quiz 8 (Tests)"
        ],
        "DEBUGGING": [
          "How to Debug"
        ],
        "DATA DRIVEN TESTING": [
          "Data Driven Testing | How to get data from CSV & JSON files"
        ]
      },
      "requirements": [
        "***** No prior specialized knowledge is required *****",
        "Every lecture will start from scratch and you do not need any prior knowledge on Postman or API testing",
        "There will be real world examples and demo",
        "Do not worry if you have never done programming, or api testing, I will start from scratch and go up step-by-step with hands-on"
      ],
      "description": "This course is created for complete beginners.\nGet started with POSTMAN step by step.\nIf you are a complete beginner on Postman, this course is for you. Very basic step by step videos to guide you from scratch.\nIn this session we will learn\nWhat is POSTMAN\nHow to download and install\nUnderstand Postman GUI\nCreate Collections, Variables, Environments and Tests\nData Driven Testing\nRun from command-line and Jenkins\nLet's Get Started...",
      "target_audience": [
        "Anyone who wants to learn POSTMAN from scratch",
        "If you want to create complete end-to-end API Testing projects with Postman",
        "Anyone who wants to learn API execution & testing with POSTMAN",
        "Beginners in POSTMAN API testing"
      ]
    },
    {
      "title": "Webservices API Testing with Postman - Complete Guide",
      "url": "https://www.udemy.com/course/api-testing-with-postman-for-beginners-learnit/",
      "bio": "Learn API testing with Postman from scratch",
      "objectives": [
        "Postman basics",
        "API baiscs",
        "REST API",
        "RESTful Web Services",
        "HTTP methods",
        "HTTP status codes",
        "JSON schemas",
        "API testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience"
        ],
        "API Basics": [
          "API and Web Service",
          "API Types Overview",
          "REST API Overview",
          "HTTP methods",
          "HTTP Status Codes"
        ],
        "Test Environment Setup": [
          "Postman Introduction",
          "Postman Installation",
          "Trello Account Creation",
          "Authorization Token Creation in Trello"
        ],
        "HTTP Method GET": [
          "GET Method Overview",
          "GET Method in Postman",
          "GET Method in Postman - Hometask",
          "JSON Schema Validation",
          "JSON Schema Validation - Hometask",
          "GET Method Validation",
          "GET Metod Validation - Hometask"
        ],
        "HTTP Method POST": [
          "POST Method Overview",
          "POST Method in Postman",
          "POST Method in Postman - Hometask",
          "POST Method Validation",
          "POST Method Validation - Hometask"
        ],
        "HTTP Method PUT": [
          "PUT Method Overview",
          "PUT Method in Postman",
          "PUT Method in Postman - Hometask",
          "PUT Method Validation",
          "PUT Method Validation - Hometask"
        ],
        "HTTP Method DELETE": [
          "DELETE method overview",
          "DELETE Method in Postman",
          "DELETE Method in Postman - Hometask",
          "DELETE Method Validation",
          "DELETE Method Validation - Hometask"
        ],
        "Postman Tips": [
          "Variables in Postman"
        ],
        "Bonus - Automated Test in Postman": [
          "First Test in Postman"
        ],
        "Final Test": [
          "Final Test"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Some basic knowledge in software testing"
      ],
      "description": "Are you ready to dive into the world of API testing and master the art of Webservices API testing using Postman? Welcome to the most comprehensive course designed to make you an API testing expert.\nIn today's digital era, APIs power the connectivity of the web. This course is your gateway to becoming a skilled API tester, leveraging the full potential of Postman to test RESTful Web Services with confidence.\nWhat You Will Learn:\nPostman Basics: Start with the fundamentals of Postman, even if you've never used it before. You'll quickly become proficient in this powerful API testing tool.\nAPI Basics: Understand the core concepts of APIs, the backbone of modern web applications.\nREST API: Dive deep into Representational State Transfer (REST) APIs and how they work, gaining insights into their architecture.\nRESTful Web Services: Explore RESTful Web Services, learning how to interact with them and validate their functionality.\nHTTP Methods: Master various HTTP methods (GET, POST, PUT, DELETE, etc.) to perform a wide range of API operations.\nHTTP Status Codes: Gain expertise in interpreting HTTP status codes to identify the success or failure of API requests.\nJSON Schemas: Learn to work with JSON schemas to validate and structure API responses accurately.\nAPI Testing: Dive into practical API testing scenarios, from simple requests to complex workflows, ensuring the quality and reliability of APIs.\nWhy Enroll in This Course?\nHands-On Learning: Gain practical experience through hands-on exercises, quizzes, and real-world API testing projects.\nExpert Instruction: Learn from experienced instructors with a deep understanding of API testing and Postman.\nCareer Advancement: Enhance your career prospects by becoming a proficient API tester, a skill highly sought after in the software industry.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive online community.\nDon't miss this opportunity to become a Webservices API Testing expert with Postman. Enroll today, and take the first step toward a rewarding career in API testing!",
      "target_audience": [
        "Anyone who wants to learn how to test API using Postman",
        "Students who are seeking to work as Test Engineer in API"
      ]
    },
    {
      "title": "Robot Framework - Codeless UI, API and Mobile Automation",
      "url": "https://www.udemy.com/course/robot-framework-tutorials/",
      "bio": "ROBOT FRAMEWORK - Detailed course on UI, API and Mobile Automation with ZERO Coding",
      "objectives": [
        "Automate complex applications with Zero coding",
        "End to end Automation scripts using ROBOT Framework keywords",
        "Building up a strong base for Automation",
        "Automate UI, API and Mobile Test cases"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Robot Framework?",
          "Pre-requisite",
          "Scripts from All Lectures for download"
        ],
        "Getting started": [
          "Installing Python on Windows",
          "Installing Pycharm IDE on Windows",
          "Installing Python on MAC OSX",
          "Installing Pycharm IDE on MAC OSX",
          "Installing Robot framework and required plugins",
          "Creating the first robot test case",
          "Running the very first Selenium test and launching the browser",
          "Script from the last 2 lectures"
        ],
        "Handling WebElements": [
          "Handling WebElements",
          "Handling Sync issues",
          "Script from the last 2 lectures",
          "Variables and their scope",
          "Variables and their scope - SCRIPT",
          "Keywords and Argumented Keywords",
          "Keywords and Argumented Keywords - SCRIPT",
          "Creating a common resource file",
          "Automating the registration form",
          "Creating a common locators file",
          "Generating random numbers and concatenation",
          "Script from the last 3 lectures"
        ],
        "XPATH vs CSS Selector in Depth": [
          "Xpath vs CSS Part 1",
          "Xpath vs CSS Part 2",
          "Xpath vs CSS Part 3",
          "Xpath vs CSS Part 4",
          "SelectorsHub plugin"
        ],
        "Advance topics - Complex Elements handling": [
          "Handling Tabs and Popup windows",
          "Handling Tabs and Popup windows - SCRIPT",
          "Filling the registration form and Uploading a File",
          "Filling the registration form and Uploading a File - SCRIPT",
          "Conditional statements - If and Else",
          "Loops",
          "Loops - SCRIPT",
          "Handling Dropdown list",
          "Handling Dropdown list - SCRIPT",
          "Handling Multiple links",
          "Handling Multiple links - SCRIPT",
          "Handling Checkboxes",
          "Handling Checkboxes - SCRIPT",
          "Handling Frames",
          "Handling Frames - SCRIPT",
          "Handling Alerts",
          "Handling Alerts - SCRIPT"
        ],
        "Handling complex user gestures": [
          "Handling Mouse over menu",
          "Handling Mouse over menu - SCRIPT",
          "Handling Sliders",
          "Handling Sliders - SCRIPT",
          "Handling Resizable elements",
          "Handling Resizable elements - SCRIPT",
          "Handling Drag and Drop",
          "Handling Drag and Drop - SCRIPT",
          "Handling Right click and Multi mouse over elements",
          "Handling Right click and Multi mouse over elements - SCRIPT"
        ],
        "Javascript, Screenshots, Headless mode": [
          "Executing Javascript",
          "Capture screenshots",
          "Executing Javascript and Capture Screenshots - SCRIPT",
          "Running the test in Headless mode"
        ],
        "Handling WebTables, Calendar / Date picker, Custom Python library": [
          "Handling WebTables",
          "Handling WebTables - SCRIPT",
          "Handling Calendars - Integrating Custom Python Library",
          "Handling Calendars - Integrating Custom Python Library - SCRIPT",
          "Handling Calendars - Python code file"
        ],
        "Exception Handling": [
          "Exception Handling in ROBOT Framework"
        ],
        "Allure Reporting": [
          "Generating Allure Reports",
          "Capture screenshots and attaching it to Allure Reports",
          "Capturing screenshots in case of a failure"
        ]
      },
      "requirements": [
        "No programming experience required",
        "Everything is covered from scratch till expert level",
        "Many Real time websites and live project with Page Objects and Data Driven frameworks covered"
      ],
      "description": "Biggest ever course on Robot Framework which covers in-depth of UI, API and Mobile Automation with easy to complex level examples\n\n\nIn case you are planning to enter into Automation testing and really afraid of writing code then this course will surely help you in building your base for Automation\n\n\nRobot framework is a collection of various popular Automation libraries like Selenium, Appium, HTTP Request for UI, Mobile and API Automation. A very popular framework in the Industry with tons of openings and the best part is that even a person has zero exposure to the programming can easily work on Robot framework and automate complex applications.\n\n\nIn the course we have covered examples from different live websites and many important functionalities like handling links, checkboxes, new windows, tabs, taking screenshots, generating allure reports, integration with CI - Jenkins, Frameworks like Data Driven and Page Objects are covered in Depth\n\n\nDuring the course you will get complete support in your queries and the TAT is less than 24 hours and 90% of times even less than 10 hours\n\n\nTo get started with the course you don't need any licensed software or complex system configuration as Robot framework is an Open source project and all the libraries integrated are also free to use. Only basic system requirement with min 4 GB RAM is sufficient to work on ROBOT Framework.\n\n\nSo hit the enroll button and add the new learning to your profile !!!",
      "target_audience": [
        "####The course is designed in a such a way that even a beginner with zero knowledge in Manual testing or Automation or programming can master this course####",
        "####All prerequisite are covered from scratch with complete end to end installation of various softwares and apis####"
      ]
    },
    {
      "title": "Software Testing: Learn with Interview Questions & Answers",
      "url": "https://www.udemy.com/course/software-testing-interview-preparation/",
      "bio": "Learn theoretical basics of software testing with a course flow based on Interview Preparation with Questions, Answers",
      "objectives": [
        "Strong theoretical foundation in software testing",
        "Common interview questions and detailed model answers",
        "Testing types, levels, techniques, and process models",
        "Understanding test cases, scenarios, RTM, and defect lifecycle",
        "Latest testing approaches like TDD, ATDD, BDD, and MDD"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Software Testing Introduction",
          "Sample Application"
        ],
        "Software Testing": [
          "Test Classifications",
          "Software Testing Basics",
          "Traditional and V model",
          "TDD ATDD BDD MBT",
          "Test Plan",
          "More Testing Types",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prerequisites. This course discusses from basics to the advanced topic.",
        "Some basic understanding – definition of software development, will be helpful, but not mandatory."
      ],
      "description": "Software Testing: Learn with Interview Questions & Answers\nMaster the theoretical foundation of software testing through real interview-style questions and detailed explanations.\nThis course is uniquely designed to help you prepare for software testing job interviews. We cover both basic and advanced theoretical topics through a structured question-and-answer approach—exactly how you’re likely to be asked in real interviews.\nWe walk you through key testing concepts, starting from the basics like testing principles and classifications, and moving on to advanced approaches including TDD, ATDD, BDD, and model-based testing. Whether you're transitioning into a testing role or strengthening your fundamentals, this course will give you the confidence to succeed in interviews and build a strong knowledge base.\nWhat You’ll Learn\nStrong theoretical foundation in software testing\nCommon interview questions and detailed model answers\nTesting types, levels, techniques, and process models\nUnderstanding test cases, scenarios, RTM, and defect lifecycle\nLatest testing approaches like TDD, ATDD, BDD, and MDD\nWho This Course Is For\nAnyone preparing for software testing job interviews\nCareer switchers aiming to enter the testing domain\nTesters looking to reinforce or validate their theoretical knowledge\nAnyone exploring modern approaches to testing\nCourse Structure\nIntroduction\nCourse Overview\nImportance of Software Testing\nPrinciples and Key Skills\nTest Classifications\nTypes, Levels, Approaches, and Techniques\nTest Basics\nTest Scenarios and Test Cases\nTest Data and RTM\nDefect Classifications and Lifecycle\nTesting Processes\nTraditional SDLC and V-Model\nSTLC – Software Testing Life Cycle\nTDD, ATDD, BDD – Modern Testing Approaches\nMDD and Model-Based Testing\nTest Planning\nKey Elements and Criteria of a Test Plan\nBonus: More Test Types\nA curated list of other testing types with brief descriptions\nWhy Choose This Course?\nUnlike traditional theory-heavy courses, this course is designed around the actual questions you’ll face in interviews—making it highly practical and focused. Each topic is explained clearly and thoroughly so you can speak with clarity and confidence during interviews.\nPlease note:\nThis course shares its core content with our course “Manual Software Testing: Learn Theoretical Basics”, but follows a different approach. If you prefer a structured theory-focused format, that course might be a better fit. Here, we focus on an interview-style flow to maximize relevance for job seekers.\nGet ready to crack your next software testing interview—start learning today!",
      "target_audience": [
        "This is for anyone who is preparing for interviews for software testing jobs.",
        "This is for anyone who want to pursue a new career in software testing",
        "This is for anyone who want to strengthen their fundamentals in this field."
      ]
    },
    {
      "title": "Learn Automation with Geb and Spock",
      "url": "https://www.udemy.com/course/learn-automation-with-geb-and-spock/",
      "bio": "Another wrapper on Selenium WebDriver to resolve your Automation need, So learn Geb and Spock to automate",
      "objectives": [
        "Learn Geb from scratch",
        "Learn page object modelling and its implementation",
        "Understand the meaningful use of Spock Testing Framework",
        "Quantitative understanding of CSS Selector",
        "Learn basics of Groovy Script"
      ],
      "course_content": {
        "Geb Automation Framework": [
          "Geb Introduction",
          "Advantages of Geb over Selenium WebDriver"
        ],
        "Project environment setup": [
          "Java Installation on windows machine",
          "Setting Java Path",
          "Eclipse Installation",
          "Groovy Plugin Installation"
        ],
        "Groovy Basics": [
          "What Is Groovy",
          "Creating groovy project in eclipse",
          "Comments",
          "Converting java to groovy",
          "Exercise 1",
          "Exercise 1:Answer",
          "Creating first groovy class/scipt",
          "Script in detail",
          "Identifier in Groovy",
          "Variables in Groovy",
          "Creating object in groovy",
          "Loops in groovy",
          "Array in groovy",
          "List in groovy",
          "Map in groovy",
          "Reading File in Groovy",
          "Reading file line by line",
          "Reading file word by word",
          "Writing a file",
          "Other File Operations"
        ],
        "Geb Installation and First Script": [
          "Geb installation in eclipse using maven",
          "First Geb Script",
          "Importing archive project in Eclipse"
        ],
        "Handling various browser like Chrome, IE": [
          "Launching chrome browser in geb",
          "Launching internet explorer in geb"
        ],
        "Locating content on web pages": [
          "Introduction of Interaction of Content on page",
          "JQuery Plugin Installation",
          "jQuery Selector",
          "CSS Selector Part 1",
          "CSS Selector Part 2",
          "Navigator API in Geb"
        ],
        "Geb Tutorial - Handling WebElements Like Button, Checkbox, droddown etc.": [
          "Identifying element on webpage",
          "Handling button",
          "Handling Text-box to enter value",
          "Checking radio button in geb",
          "Handling checkbox using Geb",
          "Selecting options from drop-down in geb",
          "File upload in geb(One Approach)"
        ],
        "Geb Configuration and use of drive() method": [
          "Configuration in Geb(GebConfig.groovy",
          "Use of driver() method"
        ],
        "Spock Testing framework": [
          "Introduction of spock",
          "Environment setup for spock",
          "Compatibility of spock core jar and active groovy compiler version",
          "First Test Case Using Spock",
          "Building blocks of Spock Test Case",
          "Build block of test case : Import, Specification Class and Instance field",
          "Feature Method",
          "Blocks in Spock",
          "Fixture method in spock",
          "Extensions in Spock"
        ],
        "Page Object Model": [
          "Introduction of Page Object Model",
          "Generic template of page classes",
          "Creating first real time page class",
          "First Test Case Using Page Class(Small demo) with drive() method",
          "to() method in page object model",
          "via method in page object model in geb"
        ]
      },
      "requirements": [
        "No need of prior knowledge of Groovy, Selenium WebDriver or Geb."
      ],
      "description": "Geb:\nGeb is a testing framework for automation of browser which is written on top of Selenium WebDriver library so it can works on all browsers that is supported by Selenium. We have two added benefit in one way we are working with Geb that provides an extra layer of convenience and productivity but we have freedom to switch back to Selenium to perform all the automation in Selenium Ways.\nGeb uses the dynamic language features of Groovy to provide a powerful content definition DSL (for modelling content for reuse) and key concepts from jQuery to provide a powerful content inspection and traveral API (for finding and interacting with content). So in another word we could say\nGEB = Selenium WebDriver + Java +Groovy +Jquery\nSpock:\nIn this course we would be learning one more testing framework Spock that is again a very sophisticated testing and specification based framework for Java and Groovy. Spock Testing framework uses a very expressive and to the point specification language.\nPlease watch this course at 1.25X or 1.5X speed to avoid long wait in speech.\nThis course is going to give you confidence in web application automation with Geb and Spock.\nSo wish you all a happy learning and hope for the birth of one more Automation Engineer.\nNote:  I would be happy to help you through answering your GEB and SPOCK related query in Q&A section. So don't hesitate to ask your query in Q&A section of this course",
      "target_audience": [
        "Passionate individual who want to advance in career with little or no knowledge of Automation",
        "Manual Testers",
        "Anyone who want to learn about new Automation tool",
        "Automation Engineer"
      ]
    },
    {
      "title": "Selenium Webdriver & Java - Testing using Real Examples",
      "url": "https://www.udemy.com/course/selenium-webdriver-java-using-real-examples/",
      "bio": "Clean & Lean Selenium Webdriver (no bloat content). Build an advanced framework using an e-commerce store step by step!",
      "objectives": [
        "You'll learn effectively. There is NO bloat material found in this course!",
        "You'll develop a deep understanding of Selenium Webdriver using the Java programming language!",
        "You'll understand how to develop a well designed and maintainable framework from scratch!",
        "You'll learn WHY we do things, not just HOW to do things!",
        "You'll gain life-like experience using a dedicated website and e-commerce store!",
        "You'll develop a deep understanding of the Page Object Model so that your framework is maintainable!",
        "You'll learn many techniques and technologies including TestNG, Maven, Design Patterns, Jenkins, Extent Reports, Parallel Execution, Apache POI and more!"
      ],
      "course_content": {
        "Introduction": [
          "What makes this course different?",
          "History of Selenium",
          "Selenium architecture",
          "Automationtesting.co.uk",
          "Course community and support"
        ],
        "Setup": [
          "Note for Mac users",
          "Java JDK installation",
          "Setting the JAVA_HOME environment variable",
          "Installing the Eclipse Integrated Development Environment",
          "Creating a project and Java class file",
          "Selenium JAR file",
          "Note about next lecture (when downloading the Chrome Driver)",
          "Downloading the browser drivers"
        ],
        "The Basics": [
          "Demo of a simple test",
          "Commonly used concepts and functions",
          "Webdriver methods",
          "How to run a test in Chrome",
          "How to run a test in Firefox",
          "How to run a testing in Microsoft Edge"
        ],
        "Deep Dive into Locators/Selectors": [
          "Interacting with elements using locators",
          "Note about cookie warning on automationtesting homepage",
          "Locating by ID",
          "Locating by Name",
          "Locating by Link Text",
          "Locating by CSS",
          "Document Object Model",
          "Locating by Xpath",
          "Assignment 1",
          "Useful tool"
        ],
        "Interacting with Elements": [
          "Test scenarios - Introduction",
          "Clicking on buttons",
          "Sending data to forms",
          "Checkboxes",
          "Checking if buttons are enabled",
          "Dropdown menus",
          "Alerts",
          "Radio buttons",
          "Assertions part 1",
          "Assertions part 2",
          "Pop ups",
          "Accordions",
          "Hidden elements"
        ],
        "Webdriver Waits": [
          "Waits introduction",
          "Different types of waits",
          "Implicit waits",
          "Explicit waits",
          "Fluent waits"
        ],
        "Quick Java": [
          "Quick Java introduction",
          "Java introduction",
          "Syntax",
          "Comments",
          "Variables",
          "Data types",
          "Operators",
          "Math",
          "IF statements",
          "FOR loops",
          "FOR EACH loops",
          "WHILE loops",
          "Parameters",
          "Object Orientated Programming (OOP)",
          "Inheritance",
          "Polymorphism",
          "Constructors",
          "Classes and Objects",
          "Arrays",
          "Arraylists",
          "Lists",
          "Iterator",
          "Threads"
        ],
        "More Advanced Element Interaction": [
          "Travel website search Pt.1a",
          "Travel website search Pt.1b",
          "Travel website search Pt.1c",
          "Travel website search Pt.2",
          "IFrames Pt.1",
          "IFrames Pt.2",
          "Browser tabs",
          "JavaScript",
          "JavaScript Methods",
          "JavaScript Executor Pt.1",
          "JavaScript Executor Pt.2"
        ],
        "Advanced Subjects": [
          "Chrome options",
          "Desired capabilities",
          "Managing cookies",
          "How to take screenshots"
        ],
        "Framework Overview": [
          "Framework overview"
        ]
      },
      "requirements": [
        "Basic knowledge of Java would be useful (I do cover Java basics too)",
        "Basic understanding of testing (although not required)"
      ],
      "description": "This is the #1 course that has been designed to help students learn Selenium Webdriver extremely well using the Java programming language. This course has been specifically designed to help you learn the most about the subject, using techniques that help you retain information. It even comes with a dedicated test e-commerce store to help you gain real life experience!\nA recent student review:\n\"The course content covers the basic topics you need comprehensively and adequately. Instructor Sal always gets back to you very quickly when you need help and he tries to help you in good faith. Sal! Just to say \"Thank you!\" The course was really helpful for me to get a new title on my company. Now I am a member of QA Automation Team :)\" AY - 12 April 2023.\nCheck out the review section where hundreds of students have left reviews to-date.\n\n\nWhat does this course cover?\nSelenium Webdriver's history, architecture and key features\nAn easy to follow setup module so we can hit the ground running\nOur first look at an automated test using the Chrome, Firefox and Edge browsers\nUnderstanding Selectors/Locators in detail\nHow we can interact with various elements found across the web\nUnderstanding Webdriver Waits in detail\nQuick Java - for those wanting to learn Java or to refresh their knowledge\nMore advanced element interaction using more complex websites\nAdvanced subjects like Chrome Options, SSL certificate handling, cookies and more\nFramework overview and understanding the journey ahead\nTestNG - everything you need to know about it and how to use it\nParametrisation, global variables and the importance of a base page\nMaven - how we can use the build automation tool to speed up our Java Project development\nPage Object Model - learn how to follow good design practices that are maintainable\nBuilding a framework from scratch in easy to follow steps\nHow to achieve Parallel Execution using Thread Local\nJenkins Continuous Integration - how to automatically trigger tests based on the date/time we decide\nExtent reports - learn how to generate advanced and detailed professional reports\nLearn how to pull data from Excel using Apache POI\nAnd much more!\n\n\nWhat makes this course different from others?\nYou are taught \"why\" we do things, not just \"how\" to do things\nEach lecture starts with an explanation of what we are going to cover before moving onto a demonstration\nAll coding lectures have downloadable code examples\nThe course code is structured so you can easily refer back to the code from a previous lecture in the future\nYou learn from the very basics all the way to developing a well designed, professional framework\nWe cover all key topics, from Selenium Webdriver basics, fundamentals, TestNG, Maven, Extent Reports, Parallel Execution (using Thread Local), Jenkins, Apache POI and much more\nWe use good design patterns and I show you step-by-step how to make use of the Page Object Model so that your framework is maintainable\nThis course comes with a bundled dedicated website and e-commerce store so that you learn actual life-like experience that you will face in the real world\nThis course has been recorded with professional recording equipment so that each lesson is crystal clear\nYou will 100% learn Selenium Webdriver extremely well, and if you are not satisfied, you have 30 days to refund your purchase",
      "target_audience": [
        "Automation testers wanting to learn Selenium Webdriver extremely well",
        "Those wanting to know how to design high quality frameworks that are maintainable",
        "Those wanting to learn about tricky subjects like Thread Local so that parallel execution can be achieved",
        "Manual testers looking to break into automation testing",
        "Anyone with an interest in a subject that's set to grow in demand considerably"
      ]
    },
    {
      "title": "Groovy Scripting for Developers / Testers",
      "url": "https://www.udemy.com/course/ruby-scripting-for-software-testers/",
      "bio": "Basic to Expert, Executed all code on SoapUI as well, (Need in SoapUI, Geb etc)",
      "objectives": [
        "Complete understanding of Ruby from QA point of view",
        "Ready to work on different automation tools using Ruby programming language Ruby"
      ],
      "course_content": {
        "Kick Off Programming": [
          "Setup Environment for Groovy- Java, Eclipse, Groovy Plugin",
          "Kick Off Programming : Project - Package",
          "Groovy Class, Object, Method and Constructor",
          "Groovy - Condition Handling",
          "Groovy - For Loop",
          "Groovy - While Loop",
          "Groovy - Array",
          "Groovy - For Each Loop",
          "Groovy - String Handling",
          "Reading File using FileReader",
          "Reading File using BufferedReader"
        ],
        "Programming Practice": [
          "Number Swapping Program",
          "Programming Exercise : Check Even Odd",
          "Programming Exercise : Grading System",
          "Programming Exercise : Fibonacci Series",
          "Programming Exercise : Check Prime Number",
          "Programming Exercise : Reverse a String",
          "Programming Exercise : Check Palendrome"
        ]
      },
      "requirements": [
        "Windows Machine"
      ],
      "description": "Groovy is one of the most popular scripting language for developer as well as testers.\nOn testers point of view, we can use it in SoapUI, Jmeter, Geb etc.\nIf you’re new to programming and want to enter either of these automation tool, this course is a great place to get started.\nIn today's competitive environment, companies want tester with scripting knwoledge\nIn this course we prepare student for all automation challenges, it gives coverage of almost all basic and advance concepts of Groovy Scripting which are required to work on different automation tool.\nHere you will cover basic concepts like Class, Object, String, Loop and advance concepts like File Handling, working with Excel, Database connectivity etc\nAfter completing this course, you will be very much comfirtable to start automation and face automation interviews\nAlso you gonna get our instructor support to clear you queries asap.\nIts a continuous grooming course which will give you in depth knowledge of theory as well as practical concepts",
      "target_audience": [
        "Freshers, looking to understand Ruby concept",
        "Automation testers who want to start programming in Ruby"
      ]
    },
    {
      "title": "Software Testing Made Easy for Beginners (Project,Jira,API )",
      "url": "https://www.udemy.com/course/software-testing-made-easy/",
      "bio": "Includes a live project with complete documentation for Testing Artifacts like Test Plans, Scenarios and Cases etc.",
      "objectives": [
        "Manual Testing Concepts from Basics",
        "Live Project for Manual Testing Practice",
        "Test Plan, Test Scenario, Test Cases and other Documents created in full for a Live Project",
        "Additional Knowledge and Concepts that will enhance your understanding on Software Testing"
      ],
      "course_content": {},
      "requirements": [
        "Having Basic knowledge on Computers will help"
      ],
      "description": "In-detailed, easy, step by step, beginners friendly and practical course on Software Testing (Manual)\nBasic Computer Knowledge is enough for getting started with this course\nLive Project is the main attraction for this course.\nAll the Testing Artifacts like Test Plans, Test Scenarios, Test Cases, Quality Reports are created fully to give a real time work feel.\nDifferent topics covered in this course at a high level include: (Includes Videos and Notes for every topic listed below)\nGetting started with Software Testing\nWhat is Software Testing?\nWhy Software Testing is required?\nDemo Application for Practicing Software Testing\nDomain Knowledge and Software Testing\nBasic Testing Types\nSoftware Testing Career Planning\nLive Project Series (Real Time Project videos)\neCommerce Application and domain Knowledge\nExploring and Understanding Application\nTest Planning\nTest Scenarios\nTest Cases\nUI Testing Checklist\nTest Execution\nReporting Defects\nTesting Status Emails\nExecution Results and Reports\nTest Cycles\nQuality Reports\nSoftware Testing Basics and Terminologies\nSDLC and STLC (Covered in depth)\nWaterfall Model\nPrototyping Model\nIncremental or Iterative Model\nSpiral Model\nV Model\nAgile SDLC Model\nRAD Model\nBig Bang Model\nBlack Box Test Design Techniques\nEquivalence Class Partitioning\nBoundary Value Analysis\nDecision Table Testing\nState Transition Testing\nAnd others\nVerification and Validation (Covered in depth)\nSeveral Additional Topics on Software Testing - Best Practices, Principles, Concepts etc.\nAgile Concepts explained in detail\nJira Tool explained in detail\nUseful Tools for Software Testers\nBasic Technologies to be learnt by Software Testers\nSoftware Testing Interview Questions with Answers\nAdditional Topics and many more",
      "target_audience": [
        "Beginners who want to get started with Software Testing (Manual Part) and gain real project experience"
      ]
    },
    {
      "title": "PowerUp Automation with Unified Functional Testing/UFT",
      "url": "https://www.udemy.com/course/introducing-automation-with-unified-functional-testinguft/",
      "bio": "A-Z guide to learn basics of automation with Unified Functional Testing/UFT",
      "objectives": [
        "Automate basic applications with UFT",
        "Make use of basic UFT automation concepts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to this course",
          "Getting first look at HP UFT",
          "Getting familiarized with menu options",
          "Key features in UFT 12.0 and 12.02"
        ],
        "Basics of UFT Automation": [
          "Recording first UFT script",
          "Understanding Object Spy",
          "Continue to build UFT script",
          "UFT checkpoints"
        ],
        "Advanced": [
          "Continue to build UFT script",
          "Using variables",
          "Understanding UFT test results",
          "Understanding Smart Identification",
          "Object Repositories",
          "Checkpoints",
          "UFT Output Values",
          "Parameterization",
          "Conditional Statements",
          "Recovery Scenarios",
          "For Loops"
        ]
      },
      "requirements": [
        "If you have prior automation knowledge you can use it throughout the course, but not required as we will cover step-by-step processes from scratch"
      ],
      "description": "You have landed on the best UFT course available on Udemy. If you want to master UFT from basic to the most advanced level in the practical world, then you are at the right place within my 15 years of QTP/UFT experience.\nUFT tutorial videos and UFT basics have made easy by QAEversity. HP Unified Functional Testing (UFT) does cost a fortune but it's still a market leader in the automation testing industry. Nowadays, many open source and low-cost automation tools came into play but QTP and UFT are still popular for their advanced features and controls. UFT provides a better control over our automation process and it came up with many advanced and useful features QTP did not have. It is suitable for both people with non-programming and programming backgrounds. UFT supports VB script for customization and better control which is easy to learn. However, it has been difficult to find a end-to-end UFT training solution for basic and advanced UFT features including. It is essential to have UFT skills to be able to gain competitive advantages in today's market. QAEversity is committed to provide a unique learning experience for delivering UFT training online throughout our award-winning UFT training videos. In this course, we cover all the important aspects of UFT starting from the very basics to the most advanced level concepts. This course treats every student as a freshman and explains each and every single step thoroughly. It can be a great source to brush up a specific topic or master the entire course. Our set of UFT training videos cover basic and advanced topics including, new features in UFT 12.0 and UFT 12.02, new features in UFT, VB scripting, checkpoints, output values, descriptive programming, object repositories, and last but not the least Mainframe/AS400 application automation and Siebel application automation using UFT.",
      "target_audience": [
        "This course is intended for beginners in the automation and UFT field",
        "This course is not intended for advanced UFT professionals"
      ]
    },
    {
      "title": "Selenium IDE",
      "url": "https://www.udemy.com/course/selenium-ide/",
      "bio": "All about using Selenium IDE for software test automation from scratch to advanced",
      "objectives": [
        "Learn about using Selenium IDE for software test automation",
        "Understand all the features of Selenium IDE so as to master using it",
        "Learn various webpage element locating strategies to help do better test automation",
        "Learn about whole lot of Selenium Commands with hands on exercises",
        "Use real life applications and also your own sample application to practice using Selenium IDE",
        "Learn the basics of HTML, CSS and Javascript and its usage in using Selenium IDE",
        "Learn about various support tools to be used along with Selenium IDE",
        "Prepare you for your next level of journey on using Selenium IDE"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge about software usage"
      ],
      "description": "Selenium IDE is one of the most popular test automation integrated development environment from Selenium products. This is the best tool to get started on learning about test automation. It helps to scale yourself from basics to advance level in a very effective manner. This course aims at exactly doing this with you. You do not need to have any prior programming skills or deep knowledge about software testing before taking this course. The basics are well covered in this course and gradually the course takes to advance levels. There are lot of advance details covered in the course.\nIt will get you started with the testing flow like requirement, testcase design, scripting test automation, executing testcases and recording testresults and logging bugs. It will first make you familiar with some commonly used Selenium commands and use them in your test automation scripts. There will be examples covering real world applications and also a a special custom application which you can install on your system to practice on.\nYou will gradually get on to the advance level of know each and every details of the tool and exposed through the various user interface features of the tool and also other associated features. There is whole lot of stuff in there and we will cover that one at a time in as simple a manner as possible. You will be in command to know almost everything listed there and how to use it.\nThe basics of HTML, CSS and Javascript as needed in this course will be covered along with some support tools which complement use of Selenium IDE.\nSelenium is one of the best tool for software test automation. So, go for it. Now.",
      "target_audience": [
        "All those who are doing software testing activities",
        "Fresh graduates who are planning to make a career in software testing"
      ]
    },
    {
      "title": "Core Java for Automation Testers- Coding made Easy",
      "url": "https://www.udemy.com/course/core-java-tutorials/",
      "bio": "A step by step Practical tutorial to master in JAVA with tons of Programming examples and Interview Questions",
      "objectives": [
        "You Will get complete knowledge on Java OOPS concepts with Practical implementations",
        "You will get clear understanding on practical usage of Java Conditions and loops.",
        "Ability to write any Java Program logic with the strategies , tips and tricks discussed in the course",
        "Deeper understanding on advanced topics java collections and apply them successfully in solving the java logics",
        "Practical understanding and usages of objects,classes,methods,functions in java",
        "Get Access to more than 200+ Java interview questions with solved solutions and crack any Java interview like a GEM",
        "You can successfully build Java Automation frameworks(Selenium,Appium,Rest API) from scratch"
      ],
      "course_content": {
        "First Programming Steps in Java": [
          "Course FAQ's - ***Must Watch***",
          "Introduction to java with installation",
          "working with Java editor tools",
          "writing first executable program in java"
        ],
        "Understanding Classes ,objects and their Usage in Java": [
          "Usage of Methods in java",
          "Importance of classes and objects in java"
        ],
        "Java loops ,Conditions -( Building block for java programs)": [
          "if else condition usage in java",
          "How for loops works-with example demonstration",
          "When should I use While loop?",
          "How do while loop works?",
          "loops,Conditions code download"
        ],
        "Practice exercises on Java loops and conditions for Interview purpose": [
          "Explanation on Nested for loops",
          "Practise Exercise on loops -1 { printing pyramid triangle)",
          "Practise Exercise - 2- Yahoo Ques : ( Inverted sequence pyramid logic program)",
          "Nested loops code download"
        ],
        "Learn everything about ARRAYS -Single and MultiDimensional": [
          "What are Arrays and their usage in Java programmes",
          "Ways of initializing arrays and assigning objects",
          "Arrays code download",
          "Logic Program on Multi Dimensional arrays"
        ],
        "Famous Interview solved Programmes on Arrays **Must Watch**": [
          "Practise exercise - Print smallest number in 3*3 matrix",
          "Practise Exercise - Cisco Interview question on Arrays",
          "programming code download",
          "Practise Exercise:Swapping variables with/without temp variable",
          "Practise Exercise : Sorting an array logic approach",
          "Sorting and swapping code download"
        ],
        "Handling Strings and its functions in Java": [
          "Two ways of defining string object - Imp in Interview point of view",
          "String class and their methods",
          "String code download",
          "Practise Exercise : reverse String logic-Palindrome",
          "Why Strings are immutable in Java - StringBuffer & StringBuilder examples"
        ],
        "How Interfaces and Abstract classes work and its usage in Java?": [
          "What is interface?",
          "How java classes can take advantage of interfaces",
          "Interface code download",
          "What are Abstract classes and how different they are from Interfaces"
        ],
        "Importance of Inheritance with Practical examples": [
          "Usage of inheritance in java",
          "Practical examples on types of inheritances",
          "Inheritance code download"
        ],
        "Polymorphism in java with overriding and overloading examples": [
          "Explaining function overloading in java with example",
          "How different function overriding from overloading?-Explain",
          "Demonstration code download"
        ]
      },
      "requirements": [
        "Nothing.. All prerequistes including java configuration is taken care as part of course",
        "No Prior Coding Experience Needed! Just relax and start the course with fresh Mind!"
      ],
      "description": "Are you from non Technical background and looking to master in Java for your Automation needs?\nIf Yes \"YOU ARE ON RIGHT PAGE\" I will fulfill your wish with my easy teaching and simple Techniques.\nAllocate 10 hours of your valuable time to this Top rated (4.6/5) course and get into Comfortable zone in handling Java related Automation/Projects..\n***What made this course Unique from other hundreds of Java courses in the Market?*\nWe assume our students have zero knowledge on coding and have taken special care in teaching every topic and YES we have seen 100% success results and many of my students are leading the Java projects with the knowledge they have gained in the course. And worth to mention This course will clear all your hurdles in cracking any Core java interviews!!!\n\nYou will get the best in class support from the instructor for any question you have related to the course.\nMarket is never short of jobs in Java programming language, there are ample of jobs in both Java development and Automation Testing using Java.\nThis course is backed by udemy's 30-day money back guarantee. If you are not satisfied for any reason, you will get the money back. In addition to that you will keep all the code files of the course as a thank you for trying out the course !!!\nWhat are you waiting for? Enroll today and learn the powerful Java language !!!\nBelow are the contents we cover :\n\nJava Basics,\nMethods in java ,\nClasses,objects,\nStrings and examples related to them\nArrays and MultiDimensional arrays,\nArrays examples,\nJava loops and conditions\nCode logics with practise example\nOOPS concepts,Inheritance.polymorphism,Abstraction\nTypes of Interfaces,\nFunction overloading and overriding,\nConstructors and their usage,\nSuper and this keywords usage,\nTypes of exceptions,\nTry catch finally Mechanism,\nFinal variable,\nJava collections,\nArrayList , Set, List, Linked list\nDate and calendar classes  and many more !!",
      "target_audience": [
        "To Any one who want to learn java language and enter into Technical jobs"
      ]
    },
    {
      "title": "DOCKER | Step by Step for Beginners | with Sample Project",
      "url": "https://www.udemy.com/course/what-is-docker-step-by-step-for-beginners/",
      "bio": "Docker from scratch",
      "objectives": [
        "Understand what is DOCKER and How does it work",
        "Understand the use of DOCKER",
        "Install DOCKER on mac, windows and linux",
        "Learn Docker commands and usage with hands-on"
      ],
      "course_content": {},
      "requirements": [
        "You DON'T NEED any specialised knowledge to take this course",
        "This is designed for Beginners, so you can start from scratch and go up step by step",
        "You will get complete support on question, doubts and discussions"
      ],
      "description": "This course is created for complete beginners.\nUnderstand DOCKER in the easiest way with analogies.\nIf you want to understand what really docker is and how it works, this course is for you. Very basic step by step videos to guide you from scratch.\nIn this session, we will start from very basics of DOCKER\nWhat is DOCKER\nWhy you should use DOCKER\nHow DOCKER works\nBenefits of DOCKER\nHow to install DOCKER\nBasic Commands\nDocker Images\nDocker Containers\nDockerfile\nDocker Compose\nDocker with Jenkins\nDocker Swarm and much more...\n\nLet's Get Started...",
      "target_audience": [
        "People curious about - What is DOCKER and How does it work",
        "Beginners who want to understand DOCKER is very basic step by step manner",
        "If you want to understand DOCKER in a way that you will never forget"
      ]
    },
    {
      "title": "Introduction to Computer Networks for QA Testers",
      "url": "https://www.udemy.com/course/introduction-to-computer-networks-for-qa-testers/",
      "bio": "The concept of OSI Model in Computer Networks for QA SW Testing",
      "objectives": [
        "To understand the concept of OSI model at Computer Networks",
        "Introduction to the Computer's Networking field",
        "Desire to learn more about the Networking Technology",
        "OSI 7 Layers Model"
      ],
      "course_content": {},
      "requirements": [
        "Interest in learning the new skills for QA SW Testing"
      ],
      "description": "++++++ Attention to all new enrolled/coming students and providers of the low ratings: +++++++\nBefore you are enrolling to this course and trying to leave your feedback read carefully the introduction below in order to understand what this course is going to be about. If you know that this course is not for you, don't waste the time and budget to become a student. And definitely, to leave the low rating that doesn't match the actual targeted materials provided in the content of this course\n+++ Thanks for your understanding +++++++++++++++++++\n\n\nHello Guys!\n\nThis Course is only an introduction and promotional course to the full \"How to become successful QA Tester in Computer Networks\". In this short course you are going to learn the concept of the OSI Model in Computer Networks technology and what you as QA Tester require to know.\nAgain the whole required and necessary information on how QA Testing is involved in the Computer Networks technology you would find in the full: \"How to become successful QA Tester in Computer Networks\" course.\nWhy would you like to learn the Computer Network field for QA SW Testing?\nDid you hear about the monsters of IT industry such as CISCO, IBM, AVAYA, F5  and others? If yes, you should know that the Network technology developed by these companies is the heart of modern world, that we are living in.  Your e-mail and Facebook connections, Instagram and Google search are running on Network infrastructure, developed for the real progress of our life. Computer Network is a top of IT industry pyramid.",
      "target_audience": [
        "QA Testers that would like to receive a new skills",
        "Introduction to the Networking field"
      ]
    },
    {
      "title": "Combinatorial Testing",
      "url": "https://www.udemy.com/course/combinatorial-testing/",
      "bio": "Software Testing, Automation Testing, Pairwise Testing, Unit Testing, Integration Testing, Performance Testing",
      "objectives": [
        "Students will understand the concept of combinatorial testing.",
        "Students will understand combinatorial testing terminology.",
        "Students will be able to generate combinatorial test suites.",
        "Students will understand constraints and be able to generate combinatorial test suites with constraints.",
        "Students will be familiar with applications of combinatorial testing."
      ],
      "course_content": {
        "Combinatorial Testing - The Concept and Terminology": [
          "Introduction to Combinatorial Testing Concepts and Terminology",
          "Create a combinatorial test suite by hand to reinforce concepts.",
          "Review of Solution to Assignment: Create a combinatorial test suite by hand",
          "Combinatorial Testing Concepts and Terminology",
          "Summary of Combinatorial Testing Concepts"
        ],
        "Generate Combinatorial Test Suites for Your Own Applications": [
          "Create Combinatorial Test Suites with Advanced Combinatorial Test Service Tool",
          "Create a combinatorial test suite on your own",
          "Combinatorial Testing with Constraints",
          "Create your own combinatorial test suite with constraints",
          "Summary of Hands-on Experience to Generate Combinatorial Test Suites"
        ],
        "Optional Section for Students: Algorithm Challenges in Combinatorial Testing": [
          "Advanced Combinatorial Testing: Algorithms Challenges in Combinatorial Testing",
          "Additional Tools for Combinatorial Testing",
          "Algorithms for Combinatorial Testing"
        ],
        "Summary: Combinatorial Testing Concepts, Terminology, and Application": [
          "Combinatorial Testing Concepts, Terminology, and Test Suite Generation"
        ]
      },
      "requirements": [
        "The course is applicable to software developers and testers.",
        "The course is applicable to scientists and engineers who use combinatorial-based tests for experiments.",
        "No programming experience is needed as we explain the concepts and point students to a tool that generates test cases."
      ],
      "description": "This course provides an overview of combinatorial testing concepts and provides hands-on experience for everyone from beginners to experts with a course outcome of confidently generating their own combinatorial test suites. Students will understand terminology, concepts, and applications of combinatorial testing. The course teaches students to use a freely available and award winning open source tool called ACTS - Advanced Combinatorial Testing Services so that they are able to generate their own combinatorial test suites for the courses exercises and outside applications.  (Students are also pointed to other free combinatorial testing tools, but we chose ACTS due to it being free, from a trusted source, and easy to use!) Videos with lecture slides and demos, quizzes, and exercises guide students through the highly hands-on learning experience.\nThis course benefits software developers, testers, scientists, engineers, and college students who want to advance their knowledge of testing systems. Consider that products released with inadequate testing can cause bodily harm, result in economic losses, and affect the quality of day-to-day life. Software defects cost our economy billions of dollars each year.  Software developers and testers often test for problems that they anticipate while unanticipated bugs slip through the cracks. Exhaustive testing is often impractical. Combinatorial testing is often a cost-effective technique to augment current testing practices. That is, it will not replace current software testing processes, but it is a relatively low cost testing solution that provides systematic coverage of parameters or components under test.",
      "target_audience": [
        "This course is intended for software engineers, software developers, software testers, and computer engineers.",
        "The course is also applicable to combinatorial chemists, engineers, physicists, biologists, mathematicians, and engineers."
      ]
    },
    {
      "title": "Automation Architect - Selenium WebDriver - 9 Live Projects",
      "url": "https://www.udemy.com/course/selenium-automation-architect-tutorials/",
      "bio": "Automation Architect - Selenium WebDriver with 9 Live Projects (Learn Indepth Framework implementation on Live Projects)",
      "objectives": [
        "You should be able to master the Framework designing part and should be able to justify 3+ years of experience in Selenium and framework designing",
        "Should be able to crack automation interviews easily"
      ],
      "course_content": {
        "Live Project 1 - Data Driven Framework": [
          "Introduction to the Project",
          "FIXING THE BLURRED VIDEO SCREEN",
          "Live Project 1 Code with Updated and Latest Dependencies",
          "Creating a new Maven Project",
          "Creating Base class",
          "Calling Properties and creating the very first test case",
          "Initializing Logs",
          "Adding Assertions",
          "Adding Data Provider and creating the second test",
          "Implementing ReportNG",
          "Adding Listeners",
          "Capturing unique screenshot and report customization part 1",
          "Capturing unique screenshot and report customization part 2",
          "Update Latest Extent Reports",
          "Generating Extent Reports",
          "Adding steps to testcases in Extent Report",
          "Creating a common DataProvider",
          "Adding Multiple failures to the Test",
          "Adding Parameterization and automating the third test",
          "Setting up run modes for Test Suites",
          "Setting up run modes for Test data and implementing parameterization",
          "Jenkins build generation",
          "Jenkins - Configuring HTML Publisher plugin for Extent Reports",
          "Jenkins - Parameterizing the build for browser and environment",
          "Jenkins - Configuring MAIL API to send test results in an automated email"
        ],
        "UPDATE 4.6 - NO WebDriverManager and Browser exe required": [
          "UPDATE 4.6 - NO WebDriverManager and Browser exe required"
        ],
        "UPDATES - LATEST UPDATES FROM THE NEW APIs & LATEST SELENIUM 4": [
          "ExcelReader Utility - APACHE POI 4.1.0",
          "Log4J API",
          "Download the code from above 2 lectures",
          "Log4j 2",
          "Log4J2 API - CODE",
          "JDBC Connection",
          "JDBC Connection - Code",
          "Selenium 4.0 New features and updates",
          "Selenium 4 - Handling New Tabs and Popups",
          "Selenium 4 - New Locator strategies through Relative Locators",
          "Selenium 4 - Selenium Grid 4",
          "Download the Selenium 4 and Grid 4 files"
        ],
        "XPATH VS CSS in Depth on Latest Browsers with Latest Extensions": [
          "Xpath VS CSS in Depth - Part 1",
          "Xpath VS CSS in Depth - Part 2",
          "Xpath VS CSS in Depth - Part 3",
          "Plugin to Auto generate complex Xpath and CSS Selectors",
          "XPATH VS CSS PDF Document"
        ],
        "TESTNG FRAMEWORK IN DEPTH": [
          "Introduction to TestNG and Configuring Eclipse plugin",
          "Creating the First Test Case",
          "Adding Assertions and Reporting Failures",
          "SoftAssertions and Reporting Multiple failures",
          "Creating Test Dependencies",
          "Creating Test Suite",
          "Managing Multiple Test Suites",
          "Test Groups",
          "TestNG Listeners",
          "Forcefully Skipping a Test Case",
          "Adding Before and After Suite annotations",
          "TestNG Report",
          "ReportNG",
          "Understanding Parameterization through DataProviders",
          "TestNG Parameterization Excel Reading",
          "TestNG Parameterization Excel Reading with Hashtable",
          "Handling Multiple Data Providers",
          "Reading Parameters from TestNG.xml file",
          "Running Parallel Test using TestNG.xml file",
          "Running Parallel Test using DataProvider",
          "InvocationCount and ThreadPoolSize",
          "Download code from Above Lectures"
        ],
        "Live Project 2 - Data Driven Extended with Grid and Docker": [
          "Introduction to Docker",
          "Docker installation and running parallel Grid test",
          "Docker Compose",
          "Download the Docker code",
          "XML Parser for maintaining Object Repositories",
          "JSON Parser for maintaining Object Repositories",
          "Download the code for XML and JSON Utilities",
          "Integrating Excel Reading - Creating Test Data",
          "Setting up Runmodes at Suite and TestCase level",
          "Complex Parameterization with Hashtables",
          "Optimizing DataProvider code",
          "Handling Multiple Data Providers and suites",
          "Creating common Utility for Runmodes",
          "Data Driven - Creating the TestBase class",
          "Data Driven - Creating Test case and executing it on 10 different nodes",
          "Data Driven - Integrating Extent Report for Parallel Tests - Part 1",
          "Data Driven - Integrating Extent Report for Parallel Tests - Part 2",
          "Data Driven - Adding more test steps part 1",
          "Data Driven - Adding more test steps part 2",
          "Data Driven - Capturing Screenshots and Mapping them to different threads",
          "Data Driven - Adding user defined logs for parallel threads - Part 1",
          "Data Driven - Adding user defined logs for parallel threads - Part 2",
          "Data Driven - Adding user defined logs for parallel threads - Part 3",
          "Data Driven - Adding Maven and Jenkins for the final Project Run",
          "Download Code"
        ],
        "Live Project 3 - Page Object Model": [
          "Page Object Model - Introduction to the framework basics",
          "Page Object Model - Designing Layout and creating the first business page",
          "Page Object Model - Creating business Pages - Part 2",
          "Page Object Model - Creating business Pages - Part 3",
          "Page Object Model - Creating Business Pages - Part 4",
          "Page Object Model - Implementing Page Objects",
          "Page Object Model - Implementing Base class for Pages - Part 1",
          "Page Object Model - Implementing Base class for Pages - Part 2",
          "Page Object Model - Implementing Base class for Pages - Part 3",
          "Page Object Model - Adding Test cases and common Data Providers",
          "Page Object Model - Learning Git, Github and Continuous Integration",
          "Page Object Model - Introduction to Version control system",
          "Page Object Model - Installing Git on Windows",
          "UPDATE 2022 - Getting started with GIT",
          "UPDATE 2022 - Git Branching",
          "UPDATE 2022 - Git Merge and Merging conflicts",
          "UPDATE 2022 - Creating a repository on GitHub and Pushing Pulling the code",
          "UPDATE 2022 - Pulling the project from GitHub repository",
          "Page Object Model - Introduction to Continuous Integration and config Jenkins",
          "Page Object Model - Continuous Integration Part 1",
          "Page Object Model - Continuous Integration Part 2",
          "Project Code"
        ],
        "Live Project 4 - Page Object Model with Page Factories (End to End Testing)": [
          "Page Factories - Introduction",
          "Page Factories - Implementing Base class and understanding factory annotations",
          "Page Factories - Implementing Business classes Part 1",
          "Page Factories - Implementing Business classes Part 2",
          "Page Factories - Implementing Business classes Part 3",
          "Page Factories - Implementing Business classes Part 4",
          "Page Factories - Soft Assertions and Finding Multiple Elements",
          "Page Factories - FindBys and FindAll annotations",
          "Page Factories - Adding Extent Reports",
          "Page Factories - Adding Keywords and Implementing logs",
          "Page Factories - Implementing Parameterization and Runmodes to the test case",
          "Page Factories - Configuring Jenkins and sending Automated Emails",
          "Complete Project Code"
        ],
        "ARTICLES on Latest CUCUMBER version": [
          "Important to watch this lecture before reading the articles",
          "BDD Introduction",
          "Setting up cucumber in eclipse",
          "Create feature and Step definition file",
          "Create runner file",
          "Cucumber Tags",
          "Background keyword in Cucumber",
          "Hooks in Cucumber",
          "DataTable (asLists) in Cucumber",
          "DataTable (asMaps) in Cucumber",
          "Data Driven Testing in Cucumber"
        ],
        "Live Project 5 - Cucumber BDD with Page Object Model and Page Factories": [
          "Download the updated framework code - latest 6.10 cucumber and latest Reporting",
          "Cucumber Basics - Introduction to the Project",
          "Cucumber Basics - Introduction to Cucumber BDD",
          "LATEST - Installing the Cucumber plugin and creating the very first feature file",
          "LATEST - Creating a Step definition file",
          "LATEST - Creating a runner file",
          "LATEST - Generating Cucumber Reports",
          "LATEST - Generating Latest Extent reports",
          "LATEST - Customizing Extent Reports",
          "LATEST - Adding Multiple scenarios to a feature",
          "LATEST - Parameterization using Scenario Outline",
          "LATEST - Adding Multiple Features and Step Definitions",
          "LATEST - Background",
          "LATEST - Cucumber Tags",
          "LATEST - Cucumber Hooks",
          "LATEST - Cucumber Hooks - BeforeAll, AfterAll, BeforeStep, AfterStep",
          "LATEST - Cucumber Hooks - Defining Execution order",
          "LATEST - Cucumber Hooks - Tagged hooks",
          "LATEST - DataTable as a List",
          "LATEST - DataTable as Map",
          "LATEST - Parameterize DataTable as a Map",
          "Cucumber Latest Version 7 with Page Objects from the Live training Day 1",
          "Cucumber Latest Version 7 with Page Objects from the Live training Day 2",
          "Framework Code",
          "Lecture 159 till 175 covers End to End Cucumber framework with Older version",
          "Cucumber WebDriver - Adding Selenium APIs",
          "Cucumber WebDriver - Creating the feature file",
          "Cucumber WebDriver - Creating automation steps",
          "Cucumber WebDriver - Fixing sync issues and adding validations",
          "Cucumber WebDriver - Adding screenshots in case of failure",
          "Download the updated framework code - latest 4.8 cucumber and latest Reporting",
          "CucumberFramework - Part1 - Designing Architecture",
          "CucumberFramework - Part2 - Creating a feature file",
          "CucumberFramework - Part3 - Creating Step definition and defining base class",
          "CucumberFramework - Part4 - Creating Page Objects Actions and locators",
          "CucumberFramework - Part5 - Creating more business actions",
          "CucumberFramework - Part6 - Creating step definitions",
          "CucumberFramework - Part7 - Creating Cucumber runner hooks and generating extent",
          "CucumberFramework - Part8 - Adding more steps and integrating maven",
          "CucumberFramework - Part9 - Running Multiple features through Maven - Part 1",
          "CucumberFramework - Part10 - Running Multiple features through Maven part 2",
          "CucumberFramework - Part 11 - Integrating Jenkins and Interactive Reports",
          "Framework - Cucumber with Page Objects and factories using TestNG"
        ]
      },
      "requirements": [
        "Basic understanding of WebDriver and Core Java"
      ],
      "description": "\"This course requires you to download Docker Desktop from Docker official website. If you are a Udemy Business user, please check with your employer before downloading software.\"\n\n\nThe Only course to cover 9 Live projects on different frameworks designed from scratch\n\n\nCOURSE RECENTLY UPDATED WITH LATEST SELENIUM 4 and Extent Reports 5.x SERIES\n\n\nThe course is specially designed at architect level which will cover all major framework designing concept with implementation of majorly use Utilities.\nAs in most of the Selenium and Appium interviews majorly questions are asked from frameworks itself, this course specifically focuses on end to end framework designing on Live projects using all major techniques and live projects. After the course you should be capable enough to show 2-3+ years of your current experience in Selenium and can hit the market accordingly\nTopics Highlight:\nProjects build with in-depth implementation of following topics\nExcel Reader\nLogs\nMails\nZip\nListeners - Soft assertions, Test Failure\nJenkins\nMaven\nReportNG\nExtentReports\nDatabase\nProperties\nRunmodes\nTestNG\nScreenshotUtils\nParallel Execution\nDocker\nJava Generics\nMultiThreading\nPage Object and Page Factory\n7 Live Projects with Different Frameworks implemented on:\nData Driven Framework\nData Driven extended with Grid Implementation\nPage Object Model\nPage Object Model with Page Factory\nCucumber BDD with Page Object and Page Factories\nPage Object Model and Page Factory extended with Java Generics and MultiThreading (Parallel Execution)\nCucumber BDD with Page Objects and Page Factories with Parallel Execution\nEnd to End Data + Keyword Driven Framework (Live Batch recordings)\nEnd to End Page Object Model with Page Factories (Live Batch recordings)\nOnce again to join this course you should have basic understanding of Core Java and WebDriver.\nHappy Learning !!!",
      "target_audience": [
        "Automation testers",
        "Developers",
        "Selenium architects",
        "selenium testers",
        "appium testers"
      ]
    },
    {
      "title": "Advanced Selenium WebDriver with Java and TestNG",
      "url": "https://www.udemy.com/course/advanced-selenium-webdriver/",
      "bio": "Real-world example of Advanced Selenium WebDriver test automation framework with Java and TestNG | Selenium tutorial",
      "objectives": [
        "Develop Full-Stack Test Automation Framework from scratch",
        "Implement Data Driven Test Framework",
        "Use Page Object Model in Selenium",
        "Automate almost any test case with Selenium",
        "Use advanced Selenium WebDriver techniques (Taking screenshots, capturing JS console errors, etc)"
      ],
      "course_content": {
        "Introduction | Advanced Selenium WebDriver": [
          "What we need to know",
          "Plan for this course"
        ],
        "Basic Selenium framework improvements | Advanced Selenium WebDriver": [
          "External Resources available for some videos",
          "Code walk through",
          "Full-Stack Test Automation Framework",
          "What we need to improve",
          "Packages",
          "Selenium Base Test",
          "TestUtilities",
          "Browser Driver Factory",
          "Running Selenium tests in parallel",
          "Log4j for better logging"
        ],
        "Page Object Model for Selenium tests | Advanced Selenium WebDriver": [
          "What is Page Object Model",
          "Page Factory",
          "Creating first Page Object",
          "Base Page Object",
          "Selenium Homework (describe other pages)",
          "All Page objects completed",
          "Using Page Objects in tests",
          "Selenium Homework (fix other test)",
          "All tests completed",
          "Inheritance and components in POM"
        ],
        "Advanced Selenium Interactions | Advanced Selenium WebDriver": [
          "Check-boxes and radio buttons",
          "Dropdowns",
          "Working with Alerts",
          "New windows and tabs",
          "Working with iFrames",
          "Key Presses",
          "Uploading files",
          "Using JavaScriptExecutor",
          "Scrolling on the page",
          "Drag and Drop",
          "Hover Over",
          "Working with sliders"
        ],
        "Selenium Data Driven Framework | Advanced Selenium WebDriver": [
          "Selenium Data Driven Framework",
          "TestNG Parameters",
          "TestNG DataProviders",
          "Static DataProviders",
          "Using spreadsheets as DataProviders",
          "Reading CSV file",
          "Running test with CSV DataProvider"
        ],
        "Advanced Selenium Techniques | Advanced Selenium WebDriver": [
          "Soft Asserts",
          "Capturing Screenshots",
          "Collecting JavaScript errors",
          "TestNG Test Listeners",
          "Test reports",
          "Work with site cookies",
          "Using browser profiles",
          "Testing Hybrid Mobile Applications",
          "Headless browsers and drivers",
          "Bonus Lecture: Discount coupons"
        ]
      },
      "requirements": [
        "Some Java or other object-oriented programming language (Beginner or Intermediate)",
        "Experience with Selenium WebDriver (Ability to automate basic test)",
        "Previous experience with TestNG or jUnit testing frameworks is a big plus",
        "Experience with Maven is a big plus, but not critical",
        "Desire to build Full-Stack Test Automation Framework with Selenium WebDriver"
      ],
      "description": "Double your QA salary with Test Automation using Java and Selenium Webdriver! Become SDET!\nAdvanced Selenium WebDriver with Java and TestNG course is for people who already know some basics of automation testing with selenium webdriver, and want to improve their test automation and Selenium WebDriver knowledge and be able to build a cool and easy maintainable test framework with Java and TestNG.\n\n\nThere are many Selenium tutorials, that teach you to do advanced tasks with Selenium, and handle WebDriver exceptions, but few can show you the structure of the Advanced Full-Stack Selenium WebDriver automation testing framework.\n\n\nThis \"Advanced Selenium WebDriver with Java and TestNG\"  is basically a continuation of my Highest Rated \"Selenium WebDriver tutorial for beginners\" course where students learned some selenium webdriver basics with Java and TestNG.\n\n\nStudents do not have to finish the \"Selenium WebDriver tutorial for beginners\" course but need to know how to use Selenium WebDriver with Java to automate simple test cases. Knowledge of TestNG is a plus.\n\n\nDuring the \"Advanced Selenium WebDriver with Java and TestNG\" course, we will be automating the testing of one web application, as you would do at your work. In the end, students will have a real-world example of a full-stack test automation framework, that will include data driven testing framework and a page object model.\n\n\nA full-stack selenium test automation framework, developed during this course, could be used as a base for your real job test automation framework. You will not have to build anything from scratch again, just use the already created advanced framework, to add new automated tests for your application under test.\n\n\nThe framework will include:\nBrowser Driver Factory for easy parallel test execution\nData-Driven Test Framework for test data from spreadsheets\nPage Object Model implementation\nTest utilities for Taking screenshots, capturing JS console errors, etc\nAdvanced Selenium WebDriver Interactions",
      "target_audience": [
        "Test Automation beginners",
        "Software Developers interested in testing",
        "Selenium testers that want to step up their game"
      ]
    },
    {
      "title": "ISTQB® Certified Tester - Foundation Level - 2025",
      "url": "https://www.udemy.com/course/accredited-istqb-certified-tester-foundation-level-course/",
      "bio": "The ONLY ISTQB® Accredited course for the latest syllabus of the Certified Tester Foundation Level (CTFL)",
      "objectives": [
        "You will get a basic understanding on software testing",
        "You will be able to discuss with other software testers using the same terminology",
        "You have paved the road for further learning and advancement in the ISTQB® certification scheme",
        "With this course you will be able to pass the ISTQB® - CTFL exam (V4.0 AND V3.1)",
        "You will have a high level overview on all parts included in software testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamentals of Testing": [
          "What is Testing?",
          "Why is Testing Necessary",
          "Testing and Quality Assurance",
          "Errors, Defects, Failures, and Root Causes",
          "The Seven Testing Principles",
          "Test Activities, Testware and Test Roles - Introduction",
          "Test Activities & Testware - Test Planning",
          "Test Activities & Testware - Test Monitoring & Control",
          "Test Activities & Testware - Test Analysis",
          "Test Activities & Testware - Test Design",
          "Test Activities & Testware - Test Implementation",
          "Test Activities & Testware - Test Execution",
          "Test Activities & Testware - Test Completion",
          "Traceability between the Test Basis and Testware",
          "Roles in Testing",
          "Essential Skills and Good Practices in Testing - Introduction",
          "Generic Skills Required for Testing",
          "The Whole-Team Approach",
          "Independence of Testing",
          "Summary - Keywords Explained - Fundamentals of Testing",
          "Sample Questions and Explanation",
          "Fundamentals of Testing - Quiz"
        ],
        "Testing Throughout the Software Development Lifecycle": [
          "Testing Throughout the Software Development Lifecycle - Introduction",
          "Testing in the Context of a Software Development Lifecycle - Introduction",
          "Impact of the Software Development Lifecycle on Testing",
          "Verification vs Validation",
          "Sequential Models",
          "Incremental and Iterative Models",
          "Agile Software Development",
          "Good Testing Practices",
          "Test First Approaches",
          "DevOps and Testing",
          "Shift-Left Approach",
          "Continuous Integration",
          "Retrospectives and Process Improvements",
          "Test Levels - Introduction",
          "Test Levels - Component Testing",
          "Test Levels - Component Integration Testing",
          "Test Levels - System Testing",
          "Test Levels - System Integration Testing",
          "Test Levels - Acceptance Testing",
          "Test Types",
          "Confirmation Testing and Regression Testing",
          "Maintenance Testing",
          "Summary - Keywords Explained - Testing throughout the SDLC",
          "Sample Questions and Explanation",
          "Testing Throughout the Software Development Lifecycle - Quiz"
        ],
        "Static Testing": [
          "Static testing - Introduction",
          "The Basics of Static Testing",
          "Work products Examinable by Static testing",
          "The Value of Static Testing",
          "Differences between Static and Dynamic Testing",
          "Benefits of Early and Frequent Stakeholder Feedback",
          "Review Process Activities",
          "Applying Review Techniques",
          "Roles and Responsibilities in Reviews",
          "Review Types",
          "Success Factors for Reviews",
          "Summary - Keywords Explained - Static Testing",
          "Sample Questions and Explanation",
          "Static Testing - Quiz"
        ],
        "Test Analysis and Design": [
          "Test Analysis and Design - Introduction",
          "Test Techniques Overview",
          "Black-Box Test Techniques - Introduction",
          "Black-Box Test Techniques - Equivalence Partitioning",
          "Black-Box Test Techniques - Boundary Value Analysis",
          "Black-Box Test Techniques - 2-Value Boundary Value Analysis",
          "Black-Box Test Techniques - 3-Value Boundary Value Analysis",
          "Black-Box Test Techniques - EP & BVA Combined",
          "Black-Box Test Techniques - Decision Table Testing",
          "Black-Box Test Techniques - State Transition Testing",
          "Black-Box Test Techniques - Use Case Testing",
          "White-Box Test Techniques - Introduction",
          "White-Box Test Techniques - Statement Testing and Statement Coverage",
          "White-Box Test Techniques - Decision Testing and Decision Coverage",
          "White-Box Test Techniques - Branch Testing and Branch Coverage",
          "The Value of White-Box Testing",
          "Experience-Based Test Techniques - Introduction",
          "Experience-Based Test Techniques - Error Guessing",
          "Experience-Based Test Techniques - Exploratory Testing",
          "Experience-Based Test Techniques - Checklist-Based Testing",
          "Collaboration-Based Test Approaches - Introduction",
          "Collaborative User Story Writing",
          "Writing Acceptance Criteria",
          "Deriving Test Cases using Acceptance Test-Driven Development (ATDD)",
          "Choosing Test Techniques",
          "Summary - Keywords Explained - Test Analysis and Design",
          "Sample Questions and Explanation",
          "Test Analysis and Design - Quiz"
        ],
        "Managing the Test Activities": [
          "Managing the Test Activities - Introduction",
          "The Purpose & Content of a Test Plan",
          "Tester's Contribution to Iteration and Release Planning",
          "Entry & Exit Criteria",
          "Test Estimation techniques",
          "Test Estimation - Estimation based on Ratios",
          "Test Estimation - Extrapolation",
          "Test Estimation - Wideband Delphi",
          "Test Estimation - Three-point Estimation",
          "Test Case Prioritization",
          "The Test Pyramid",
          "Testing Quadrants",
          "Risk Management - Introduction",
          "Risk Definition and Risk Attributes",
          "Project Risks and Product Risks",
          "Product Risk Analysis",
          "Product Risk Control",
          "Test Monitoring, Test Control and Test Completion",
          "Metrics used in Testing",
          "Test Reports",
          "Communicating the Status of Testing",
          "Configuration Management",
          "Defect Management",
          "Summary - Keywords Explained - Managing the Test Activities",
          "Sample Questions and Explanation",
          "Managing the Test Activities - Quiz"
        ],
        "Test Tools": [
          "Test Tools - Introduction",
          "Tool Support for Testing",
          "Benefits and Risks of test Automation",
          "Considerations for Test Execution and Test Management Tools",
          "Effective Use of Tools",
          "Summary - Keywords Explained - Test Tools",
          "Sample Questions and Explanation",
          "Test Tools - Quiz"
        ],
        "Industry Standard Test Work Products": [
          "Industry Standard Test Work Products"
        ],
        "Tips & Tricks for the Exam": [
          "Tips & Tricks for the Exam"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "No previous knowledge is required",
        "A basic understanding of software development is handy but nor required"
      ],
      "description": "This is an ISTQB® accredited course for the the CTFL (Certified Tester Foundation Level) certification for the latest syllabus!\n\n\nThis is not a read-out of the syllabus as is the case in many other courses as I do not see that as a proper course. The information from the syllabus is used in this course, mentioned, explained and wherever necessary examples are given in native-level English. Each chapter contains a quiz at the end which contains actual exam questions in order for you to get used to the way questions are asked on the exam. In each chapter we will also solve several questions together to get you used to the way questions are asked in the ISTQB® Exam. This is an important part as both the questions and answers are sometimes formulated to throw you off.\n\n\nThis course has been written to help (aspiring) software testers, developers and other people interested in software testing grasp the basics and fundamentals of software testing. This course is both accredited for V4.0 AND V3.1. The entire syllabus is covered and some extra bonus material is also included. All terminology matches the terminology used in the online ISTQB® glossary.\n\n\nBesides getting you ready for the ISTQB®-CTFL exam with the course, sample exams and tips and tricks, I would really like to teach you about software testing; things that you can use in your day-to-day work.\n\n\nAs you can see on Udemy, there are various courses already on this subject; so why would you take this course?\n1. The course has been written on the latest version (2023 - V4.0) AND and some interesting and valuable subjects from the 2011 and 2018 versions are also included;\n2. The material is ISTQB® accredited and is the same material as if you would come in and join one of my classroom trainings;\n3. There are more than 130 questions included in the course that will help you greatly; sample questions are also constantly added;\n4. We will go through questions together in each chapter;\n5. Examples and exercises form a vital aspect of this course;\n6. No false promises about you being a great software tester after you finish this course; however, this course is a very good starting point;\n7. You will learn the basics and should be able to pass the exam without problems in the first go (if you pay attention of course);\n8. Besides getting ready for the exam and most likely passing it on your first attempt, you will get a solid understanding of software testing fundamentals.\n\n\nIf you have any questions or remarks during the course, please post it on the discussion board and I will answer as fast as possible.",
      "target_audience": [
        "Junior testers and senior testers who want to start using common terminology",
        "Anyone who wants or needs a basic understanding of software testing",
        "Developers who want to understand software testing"
      ]
    },
    {
      "title": "ISTQB Advanced Level Test Analyst",
      "url": "https://www.udemy.com/course/istqb-test-analyst/",
      "bio": "Your guide to be a certified ISTQB Test Analyst",
      "objectives": [
        "ISTQB Advanced Level Test Analyst",
        "Risk-based Testing",
        "High-Level & Low-Level Test Cases",
        "Test Analysis",
        "Black Box Techniques"
      ],
      "course_content": {},
      "requirements": [
        "ISTQB Foundation Level",
        "3 Years of Testing Experience"
      ],
      "description": "Overview\nThe ISTQB Advanced Level Test Analyst (CTAL-TA) certification provides the skills needed to perform structured and thorough software testing across the software development life cycle. It goes into detail about the test analyst’s role and responsibilities in every step of a standard test process and expands on important test techniques.\n\nAudience\nThe Advanced Level Test Analyst certification is aimed at people who wish to further develop their expertise in test analysis and test design techniques.\nTo gain this certification, candidates must hold the Certified Tester Foundation Level certificate and have sufficient practical experience. Please contact an ISTQB Member Board or Exam Provider to determine the specific practical experience criteria.\n\nBusiness Outcomes\nA candidate who has achieved the Advanced Level Test Analyst certification should be able to:\nPerform the appropriate testing activities based on the software development life cycle being used\nDetermine the proper prioritization of the testing activities based on the information provided by the risk analysis\nSelect and apply appropriate test techniques to ensure that tests provide an adequate level of confidence, based on defined coverage criteria\nProvide the appropriate level of documentation relevant to their testing activities\nDetermine the appropriate types of functional testing to be performed\nWork effectively in a usability testing team\nEffectively participate in requirements / user story reviews with stakeholders, applying knowledge of typical mistakes made in work products\nImprove the efficiency of the test process with the use of tools",
      "target_audience": [
        "Software Testers",
        "Test Analysts"
      ]
    },
    {
      "title": "REST API Automation:REST Assured,Serenity BDD Framework",
      "url": "https://www.udemy.com/course/rest-api-automation-with-rest-assuredserenity-bdd-framework/",
      "bio": "Build a robust REST API test automation framework/CI environment using Serenity BDD, Jenkins, Git",
      "objectives": [
        "Build reusable methods ,write different types of tests",
        "Create Data Driven Tests",
        "Execute Tests Faster by running them in parallel",
        "Run selective tests JUnit using Tags",
        "Publish amazing reports with logging of Request & Response Information",
        "Write Cucumber Scenarios integrated with Serenity BDD",
        "Commit code to Github",
        "Implement CI by integrating project with Jenkins & GIT"
      ],
      "course_content": {
        "Course WalkThrough": [
          "Syllabus",
          "****RATING THE COURSE EARLY ON****"
        ],
        "Environment Setup": [
          "Java Installation on MacOS",
          "Maven Installation on MacOS",
          "Eclipse Installation on MacOS",
          "Java Installation on Windows",
          "Maven Installation on Windows",
          "Eclipse Installation on Windows"
        ],
        "Student Sample Application": [
          "Starting the Student Sample Application",
          "IMPORTANT: For users using Java 17+",
          "Launching Student app docker image"
        ],
        "What is Serenity BDD?": [
          "Introduction to Serenity BDD"
        ],
        "Creating a Framework Structure using SerenityBDD": [
          "Setup Serenity BDD Project & configure pom.xml file",
          "Building the package structure"
        ],
        "Getting your feet wet with Serenity BDD": [
          "Generate the first Serenity Build to execute tests",
          "Understanding different Test outcomes in Serenity BDD"
        ],
        "Organizing Requirements in Serenity": [
          "Creating folder structure hierarchy to generate requirements"
        ],
        "CRUD Tests for Student App using Serenity features": [
          "Using @Title annotations to provide meaningful names",
          "Prioritizing Test Order in JUNIT",
          "Drawback of writing rest-assured logic in Junit tests"
        ],
        "Building Reusable methods using @Step,@Steps annotation in Serenity": [
          "Understand the use of @Step,@Steps to generate excellent reports",
          "Building more re-usable methods"
        ],
        "Request,Response Specification": [
          "Create Reusable specifications to minimize code repitition"
        ]
      },
      "requirements": [
        "This course requires that the user has some basic programming knowledge in Java",
        "Basic understanding of RESTful Services",
        "Knowledge of Rest Assured Library"
      ],
      "description": "In the 21st century, almost all web applications use web services to communicate or interact with each other. Most modern day web services are built on Representational state transfer (REST) architecture; REST has gained a lot of popularity and it will continue to do the same due to its simplicity in comparison with other technologies.\nIt is very important for software QA engineers, automation engineers and software developers to understand the importance of Web Services testing and more importantly how to automate these tests. Automating Application Program Interface (API) tests is critical and crucial for most projects due to the fact that API tests are far more stable, reliable and fast.\nTo achieve this goal, using a Solid Robust Framework is very much necessary.\nSerenity BDD  is an open source test automation framework which comes integrated with many popular libraries like Selenium, JUNIT, JBehave, Cucumber BDD, Rest-Assured which can be used to build a powerful API Automation framework.\nWe will be focusing on the important topics listed below:\nBuild reusable methods, utility methods & organize them in packages\nCreate Data Driven Tests\nExecute tests in Parallel\nGroup/Run Tests using Tags\nLearn to generate Test Data\nCreate Cucumber Scenarios,Steps,Tags & integrate with Serenity BDD\nCommit code to Github\nCreate a CI environment by integrating project with Jenkins & Github\n\n\nAt the end of this course you will be able to build a robust API test automation framework using Serenity BDD & Rest-Assured combined with GIT & JENKINS",
      "target_audience": [
        "QA Engineers who want to learn how to use an API automation Framework",
        "Software engineers,SDETS who want to learn a new Test Automation Framework"
      ]
    },
    {
      "title": "Mockito: Next-Level Java Unit Testing",
      "url": "https://www.udemy.com/course/mockito3/",
      "bio": "Learn the latest Mockito 5 for Java unit testing in just 2 hours. An IntelliJ IDEA Ultimate license is included.",
      "objectives": [
        "Enrich Java JUnit tests with mocks",
        "Learn the latest Mockito 5 version",
        "Run unit tests with mocks in Eclipse or IntelliJ",
        "Work on practical, real-world testing problems",
        "Follow mocking best practices"
      ],
      "course_content": {
        "First things first": [
          "Introduction",
          "Mocking Theory",
          "Mocking Frameworks",
          "Choose Eclipse or IntelliJ (free license included)",
          "Eclipse Project Setup",
          "IntelliJ Project Setup",
          "What should be mocked?"
        ],
        "Mockito 5 Basics": [
          "Important: Mockito versions",
          "First Mocks",
          "Note: best practice for providing LocalDates",
          "Default Return Values",
          "Returning Custom Values",
          "Multiple thenReturn Calls",
          "Throwing Exceptions",
          "Argument Matchers",
          "Verifying Behaviour",
          "Spies",
          "Mocking Void Methods"
        ],
        "More Advanced Concepts": [
          "Argument Captors",
          "Annotations",
          "Mockito BDD",
          "Strict Stubbing",
          "Mocking Static Methods",
          "Using Mockito Answers",
          "Mocking Final and Private Methods",
          "Summary",
          "LinkedIn: Show your new skills!",
          "Mockito 5 Cheat Sheet",
          "Project Source Code — All Tests"
        ],
        "Additional Videos": [
          "PowerMock: Do you need it?",
          "Mocking Construction",
          "Spring Boot integration",
          "Downgrading to Mockito 3 or 4"
        ],
        "Want to Learn More?": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Have Java programming skills – create classes with fields/methods, know primitive data types like int or double, understand the basics of lists and maps",
        "Know JUnit 5 – understand how unit tests work, and why they are important",
        "Install Eclipse or IntelliJ – you can download them for free"
      ],
      "description": "Note: All students of this course receive a 6-month license for IntelliJ IDEA Ultimate — the industry-leading Java IDE trusted by professionals worldwide.\n\n\nWelcome! My name's Adrian and I'm a professional Java Developer. You've just found the highest rated course about Mockito on Udemy! That's the only course that teaches the latest Mockito 5. Here are some examples chosen from the reviews :\n• \"one of the best courses I finished on Udemy\"\n• \"clear explanations, real-life examples, and this accent\"\n• \"the best instructor here so far\"\nAccording to statistics, nearly 50% of all Java developers use Mockito when they write tests for their Java applications. It’s a basic skill required by most employees, so if you want to start your Java Developer career or take it to another level, you’ll have to write unit tests. With Mockito, you’ll write them better and faster.\n\n\nCOURSE OVERVIEW\nIn this course, you’ll learn only the practical aspects of Mockito 5 – the latest version of the most popular mocking framework for Java applications.\nI’ll introduce only the essential theory behind mocking, and then dive straight into the code to get you started as quickly as possible. I’ll use an example of a simple, but practical Java project to show you a variety of mocking techniques. You'll also learn the best practices and coding standards for unit tests based on my developing experience.\nThis course also comes with a one-page cheat sheet for a quick Mockito 5 reference. You’re welcome to use it freely after the course—it’s bound to save you hours!\n\n\nCOURSE ADVANTAGES\n• concise – my short video lectures focused on the most important info help you save time and learn maximally effectively,\n• based on practice – instead of useless academic theory, you learn the best developing practices drawn from my work experience,\n• reasonably priced – compared to stationary developer bootcamps, the course is much cheaper, so you save not only time but also money,\n• available anywhere, anytime – the online form lets you run the course in the most convenient place (at home, work or in a café) and time (while commuting by metro or relaxing at home after work), so you can adjust it to your agenda,\n• accessible on desktop, mobile and TV – you can display my lectures on the device of your choice, so you don’t have to stick to your PC,\n• certificate of completion – after completing the course, you will receive a printable certificate that will make your resume more attractive.\n\n\nIntro video music courtesy of Bensound",
      "target_audience": [
        "People with basic Java and JUnit knowledge who want to learn more advanced tests with mocks",
        "Students who want to prepare for their first IT job",
        "Developers who know Mockito 3 or 4 but want to learn Mockito 5",
        "Java passionates who want to write better tests"
      ]
    },
    {
      "title": "ISTQB® Agile Tester Foundation Certification",
      "url": "https://www.udemy.com/course/istqb-agile-testing/",
      "bio": "Be an ISTQB® Agile certified tester and learn testing techniques in various Agile methodologies",
      "objectives": [
        "Understand The Fundamentals of Agile Software Development",
        "Understand The Differences between Testing in Traditional and Agile Approaches",
        "Master The Roles and skills of a tester in Agile Projects",
        "Get Familiar with Agile testing processess, tools, techniques and methods",
        "Assess product quality risks within an Agile project",
        "Estimate testing effort based on iteration content and quality risks",
        "Understand the Roles and skills of a tester in Agile Projects"
      ],
      "course_content": {
        "Introduction (Important BUT NOT in the Curriculum of the Exam)": [
          "Why do Software Projects Fail?",
          "Before Booking the Exam"
        ],
        "The Fundamentals of Agile Software Development": [
          "The Agile Manifesto",
          "Quiz",
          "The Agile Principles: Part 1",
          "The Agile Principles: Part 2",
          "The Whole Team",
          "Early and Frequent Feedback",
          "Quiz",
          "Quiz"
        ],
        "Aspects of Agile Approaches": [
          "Agile Software Development Approaches: Extreme Programming (XP)",
          "Agile Software Development Approaches: Scrum",
          "Agile Software Development Approaches: Kanban",
          "Quiz",
          "Quiz",
          "Collaborative User Story Creation",
          "Retrospectives",
          "Continuous Integration",
          "Velocity",
          "Release Planning",
          "Quiz",
          "Quiz"
        ],
        "The Differences between Testing in Traditional and Agile Approaches": [
          "Testing and Development Activities",
          "Project Work Products",
          "Test Levels",
          "Testing and Configuration Management",
          "Organizational Options for Independent Testing",
          "Quiz"
        ],
        "Status of Testing in Agile Projects": [
          "Burn Down and Burn Up Charts",
          "Communicating Test Status, Progress, and Product Quality",
          "Managing Regression Risk with Evolving Manual and Automated Test Cases",
          "Quiz"
        ],
        "Role and Skills of a Tester in an Agile Team": [
          "Agile Tester Skills",
          "The Role of a Tester in an Agile Team",
          "Quiz"
        ],
        "Agile Testing Methods": [
          "Test-Driven Development",
          "Acceptance Test-Driven Development and Behavior-Driven Development",
          "The Test Pyramid",
          "Testing Quadrants, Test Levels, and Testing Types",
          "The Role of a Tester",
          "Quiz"
        ],
        "Assessing Quality Risks and Estimating Test Effort": [
          "Assessing Quality Risks in Agile Projects",
          "Estimating Testing Effort Based on Content and Risk",
          "Quiz"
        ],
        "Techniques in Agile Projects": [
          "Acceptance Criteria, Adequate Coverage, and Other Information for Testing",
          "The Definition of Done",
          "Applying Acceptance Test-Driven Development",
          "Functional and Non-Functional Black Box Test Design",
          "Exploratory Testing and Agile Testing",
          "Quiz"
        ],
        "Tools in Agile Projects": [
          "Task Management and Tracking Tools",
          "Communication and Information Sharing Tools",
          "Software Build and Distribution Tools",
          "Configuration Management Tool",
          "Test Design, Implementation, and Execution Tools",
          "Cloud Computing and Virtualization Tools",
          "Quiz"
        ]
      },
      "requirements": [
        "Participants should have a general understanding of test design, process and terminology.",
        "The ISTQB® Foundation Certificate is a plus"
      ],
      "description": "\"I passed thanks to this course! I really recommend it, it contains everything from the syllabus, Maged enriches the content with some very valuable concepts, team velocity, burn down and burn up charts, etc. Just go through the course one time taking the course quizzes, then take a couple of sample exams, know what you need to reinforce, go through the course again to reinforce any concepts you missed on the first run. Pass the test. *I used the 1.5 speed on the video on my second run and was able to understand it perfectly. Thanks!!\"---Mario Martinez\n\"The material is very good; the delivery is overall adequate The instructor is somewhat difficult to understand, although you can understand him if you concentrate. The video of him talking...VERY distracting. But basically, I am learning a lot and feel comfortable that at the end of the course, I will be well prepared for the ISTQB® Agile Tester exam.\"---Cassandra Myer\n\n\n\n\n\nAgile testing is an evolving approach to software testing that follows the principles of agile software development as defined in the Agile Manifesto.\nA tester on an agile project will need some new skills compared to a tester working on a traditional project. Testers must understand the values and principles that are backing up agile projects in different environments. Testers should be involved in every activity of the agile team, not just in plain testing activities.\nTesters are an integral part of an agile team together with developers and business representatives. Testers on agile teams use their expertise in creating testable examples of desired behavior from business representatives and collaborating with the developers to turn those into specifications that guide all development activities.\nThere are a lot of things to learn about testing and quality in agile projects. The ISTQB® Agile Tester Extension will give the testers, test managers, and others that are interested in the knowledge to be part of agile teams and achieve high performance at your work.\n\nThe ISTQB® Agile Tester Extension course helps participants to obtain the ISTQB® Foundation Extension Agile Tester certificate.  The course is very useful for all testers, test coordinators, test managers, user acceptance testers, or software developers who work or are planning to start working with Agile or any other iterative projects.\nThe course is highly practical in addressing the following areas:\nThe fundamentals of Agile Software Development and the various Agile approaches that are recognized and how these embrace the 4 values and 12 principles of the Agile Manifesto.\nHow Agile projects differ from traditional projects and what methods are implemented to demonstrate the status of testing throughout the project.\nUnderstanding the role of the tester on an Agile project and how to contribute to; estimating user stories, assessing quality risks, generating testable acceptance criteria, and interpreting relevant information to support testing activities.\nUnderstand the various tools that support testing in an Agile project and how these differ from a traditional project.\n\"This material is not accredited with the ISTQB®\".\nISTQB® is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "Testers wanting to improve their knowledge of working in an Agile environment",
        "Agile testers seeking the Certified Agile Tester Certification",
        "Anyone involved in testing agile projects (including testers, engineers, analysts, consultants, software developers, customers, everyone)."
      ]
    },
    {
      "title": "Core Java for Automation Testers - Selenium, Appium, API",
      "url": "https://www.udemy.com/course/core-java-for-automation-testers-selenium-appium-api/",
      "bio": "Learn Core Java to start your automation testing with lots of programming examples and hands on.",
      "objectives": [
        "Deeper understanding for Core Java concepts required for Automation testing.",
        "Practical understanding and usages of each topics.",
        "Ability to write any Java Program logic with the strategies.",
        "Course starts from scratch and covers software installation step by steps."
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience is required.",
        "This course is specifically designed for complete beginners."
      ],
      "description": "Hi Student,\nWelcome to this most recent Core java  course for Automation testing.\nThe course is specially designed in such a way that You need NOT have java coding experience to start this course. Even non Programming candidates can follow this course comfortably\nCourse is designed in such a way so that no programming language students can understand every topics easily with non technical examples.\nAll the topics include example from real time application Web applications.\nThis course will help you to become an Java expert for Automation testing. On course completion You will be Mastered in Core Java and implementing Successfully in your work place.\n\n\nWe have dedicated Trainers who can help in answering students queries ASAP.\n\n\nProjects build with in-depth implementation of following topics :\nEclipse Installation\nJava Installation\nJava Basics - Main method, Variable, Methods, If else, switch case, loops, etc.\nAfter completing this course, you will be very much comfortable to start automation and face automation interviews.\nLast but not least, at the end of topics you can download the source code on your computer for your offline reference. So whatever code I teach you in the video, that specific code will be available for download.\n\n\n\n\nThank you\nShelendra Kumar",
      "target_audience": [
        "Manual Tester",
        "Software Tester",
        "Java developers",
        "Automation Tester"
      ]
    },
    {
      "title": "CICD (DevOPs Tools) for Automation Testers (Selenium)",
      "url": "https://www.udemy.com/course/cicd-devops-tools-for-automation-testers-selenium/",
      "bio": "Learn about various DevOPs tool which are requried from Automation Testers point of view",
      "objectives": [
        "All about Contineous Integration - Contineous Delievery from Automation Testers (Engineers) point of view",
        "Good understanding about Test Execution on Docker machines, Cloud etc.",
        "Selenium JIRA integration - for quick feedback to developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to CICD for Automation Testers Course",
          "Course Contents"
        ],
        "DevOPs - About CICD (Contineous Integration, Contineous Deployment / Delievery)": [
          "What is DevOPs",
          "Introduction to CICD - Detailed CI",
          "Continuous Delivery and Deployment"
        ],
        "Creating Selenium Test Cases (GUI Tests and API Test projects)": [
          "Create Selenium Tests - Part1",
          "Create Selenium Tests - Part2"
        ],
        "All about GIT and GITHUB (SCM tool)": [
          "What is GIT and GITHUB (Verson Contol Systems)",
          "Install Git and Create account on GitHub",
          "GIt Operations, Add code to GitHub"
        ],
        "All about CI tool - Jenkins": [
          "Jenkins Introduction, Installation, plugin install, Configure",
          "Create new Job, Execute Maven project Test cases",
          "Jenkins - Editable Email Notification"
        ],
        "Code Quality Check using SonarQube": [
          "Code Quality Check -Why Static Code Analysis",
          "SonarLint in Eclipse IDE",
          "SonarQube Installation",
          "SonarCloud setup",
          "SonarQube SonarCloud and Jenkins Integration",
          "Quality Gates in SonarQube",
          "Quality Profile and Rule in SonarQube"
        ],
        "Selenium Grid - Parallel Test Execution": [
          "What is Selenium Grid, Hub and Nodes",
          "Install Selenium Grid",
          "Test Execution through Selenium Grid and Jenkins"
        ],
        "BrowserStack - Cloud based platform as like Selenium Grid": [
          "Test Execution from BrowserStack - Cloud based platform"
        ],
        "Docker - Containerization platform - Test Execution on Docker machine": [
          "Docker Introduction, Containers, Process of working",
          "Docker installation on Windows, About Docker hub",
          "Basic Docker Commands",
          "Selenium Grid Installation on Docker, Run Test cases on Grid - Docker",
          "Docker -Selenium Gird Test Exeuction from Jenkins, VNC viewer to view Test UI"
        ],
        "Create Bug Automatically in JIRA- JIRA Rest API": [
          "JIRA Rest API - Create bug automatically in JIRA for failed test cases"
        ]
      },
      "requirements": [
        "Knowledge of framework creation (Selenium / any automation tool)"
      ],
      "description": "If you learned about Selenium or any other automation tool, having basic / good knowledge of that, but Automation is not that all about,\nYou should know about various tools used in Continuous Integration process. You should know how to do continuous integration infact.\nThis course is for you then, Learn about various DevOPs tool which are required from Automation Testers point of view.\nIn this course you will learn about End to end test automation process.",
      "target_audience": [
        "Manual testers who learned selenium / any other automation tool but want to learn about CICD in details",
        "Automation testers having basic knowledge of Selenium framework creation",
        "Freshers with selenium knowledge"
      ]
    },
    {
      "title": "2025-Automation Framework Development with Selenium C# .NET",
      "url": "https://www.udemy.com/course/framework-development-with-selenium-csharp-advanced/",
      "bio": "An End-to-End Selenium automation framework development in Cross-Platform using .NET 8",
      "objectives": [
        "Understand what an automation framework is",
        "Choosing right automation framework for your project",
        "Building more robust and hybrid automation framework",
        "Leveraging the power of C# to build generic framework model",
        "Extending the automation framework with Behavioral Driven Development with Specflow",
        "Developing an Industry standard framework with complete modularity on framework as well as Application test code"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of Selenium",
        "Good understanding of C# basic and little advanced",
        "Good understanding on Specflow and BDD"
      ],
      "description": "Automation framework development with Selenium C#  is an advanced course designed to address End-to-End framework development with tools such as\nThe curriculum of this course is designed not just by randomly choosing some of the topics that I know, the course has evolved over a period (18+ years) by giving training to more than 299,000+ professionals (both online and corporate training) and working in automation testing field 18+ years now\nHence the course is a much refined version, meaning the course won't deviate from the topics it is meant to be.\nThe course includes all the source codes that we will discuss in the course, hence one must have all the source code required at the end of every section.\nFinally, the course is for those, who are serious about automation testing framework development from the complete ground up.\n\n\nIn this course, you will learn to automate ASP NET Web API and WebUI projects using tools such as\nSelenium 4.19\n.NET 8\nC# 12\nXUnit\nAutoFixture\nFluent Assertion\nSpecflow\nWe will also be using the following patterns in this course\nDependency Injection\nFactory Pattern\nPage Object Model Pattern\nLazy Initialization\nAt the end of this course, you will have\nComplete understanding of C# with .NET 8\nComplete understanding of Selenium with the latest and greatest changes\nDesigning a complete framework from the ground up\nIdea to design a more extendable framework",
      "target_audience": [
        "Will be best suited for one who has good understanding on Selenium basics",
        "Who has good understanding on basic/advanced concepts of C#",
        "Best for developers and testers who are planning to build automation testing with ground up"
      ]
    },
    {
      "title": "JUnit 5, Mockito, PowerMock, TDD, BDD & ATTD",
      "url": "https://www.udemy.com/course/testing-for-developers/",
      "bio": "Learn JUnit 5 (JUpiter) + libraries for unit and integration testing from scratch together with test-driven development",
      "objectives": [
        "Learn specifics of JUnit 5 (Jupiter)",
        "Learn API of the most popular Mock Framework - Mockito",
        "JUnit 5 VS JUnit 4",
        "Adanced knowledge of PowerMock API",
        "Testing level: unit & integration",
        "How to execute tests from Eclipse",
        "Test-driven development (TDD)",
        "Behavior-driven development (BDD)",
        "Acceptance test-driven development",
        "Real-life examples and reviews",
        "Test code coverage"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Java Basics (passing of my courses - Master Java Basics, OOP should be enough to proceed with this course)"
      ],
      "description": "From this course, you can learn Testing for software engineers that includes the learning of JUnit 5, Mockito, PowerMock, and TDD approach.\n- Open source code\nWe hide nothing from our students! Including the source code for the home task solutions and source code of examples that were shared during the lesson. Having the source code you can just copy and paste it to run it on your local computer to understand how things work better.\nYou are allowed to use all source code examples for learning purposes. This helps significantly to configure the environment and make tests work, especially in case students didn't work with any testing framework in the past.\n\n- Q&A support\nThe significant difference between the online and offline learning process is the instructor's availability. If you are in one room with a tutor he always can help you to get understand the specific concept or to help fix your code on your computer.\nIn this course, we are supporting students with answers to any questions flagged in the Q&A section. In case there will be recurring questions - separate video lessons will be created to show how to address the issue.\nSo with this course you are not just getting video materials, code exercises, source code, access to the free mobile application without limits (which is still pretty cool, huh? :) ), but you also get tutor support and answers to your questions along with this course.\n\n- Relevant knowledge\nAfter our team investigated other Java courses on Udemy we realized that most of them have nothing in common with real life. The information which is shared there is very old and significantly out of date. For example, the instructor teaches a framework which is not been used already for 15 years. Or instructors do stress on the programming design which is not used anymore at all!\nThe instructor of this course is a consultant in a top-rated IT outsourcing company and helps to bring cutting-edge solutions in IT for all his clients. Feel free to check the LinkedIn page of the instructor and check skills endorsement. More than 19 thousand people across all over the world (BTW most of them are from the top 100 companies of the world) evaluated the skills of Andrii Piatakha.\nWith this course, you can be sure that you will spend your time learning the right things from one of the best IT consultants in the world.\n\n- Free mobile App without limits for our students\nKnowing Java is one skill. Be able to pass interviews in the company - that is another skill :) Nowadays a lot of companies use tests to select candidates on the first level of interview. We developed applications to practice skills specifically for such purposes.\nIn this course, we will provide you link to download our FREE mobile app for android. (soon it will be also available for iOS platforms)\nThe instructor of this course comes up with hundreds of tests that are used to test the knowledge of candidates. With this application, you will be well-prepared for the interview.\nAlso, only for our students - there is no limit on attempts to pass certification. In the course, we will tell you how to set up a special bonus code that will remove restrictions for our students inside the app.\n\n- High concentration of useful material in each lesson\nSometimes you can notice that watching 5 minutes of our lesson is equivalent to watching another 30 minutes lesson.\nThis is because time spent for preparation for the lesson (script for the lesson, lesson structure) and video editing (to cut boring pieces of the lesson or time when the program loads) sometimes 10 times as much (sometimes even 20) as the final lesson duration after video editing.\nAlso, each topic is separated from another. In case some concept will be explained in the next lesson and you don't need to worry about understanding this in the scope of this lesson - the instructor will make an announcement when a specific topic will be covered.\nGo and try it yourself! We will appreciate your feedback.\n\n\n\n\nSo don't wait! Take a look at the lessons' preview if you still have doubts!\nBuy this course today, and you will get all updates for FREE!\nFor those who successfully passed this training course, or for students who were recognized for asking amazing questions, there is a special offer from the IT-Bulls company! The creator of this course is IT-Bulls company CEO and Founder. We are always in search of talents to run our amazing startups together with you. Probably you always dreamed about running your startup? In this course, you will be able to find the team who will teach you how to do that and (in particular cases) will be glad to help with implementation!\nHope you enjoy this course! And remember, we appreciate all your feedback! Your feedback will help us to become even better! Your feedback will help us to create to best Java course ever!\nSee you at the lessons! :)",
      "target_audience": [
        "Junior Java Developers",
        "Experienced Java Developers",
        "Future Java Developers who are preparing for an interview"
      ]
    },
    {
      "title": "SDET: Automation Architect Masterclass [Java + Hands-On]",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-docker/",
      "bio": "Learn Test Automation Framework, Docker, CI/CD Pipelines, Jenkins, Parallel testing and AWS cloud with Selenium etc!",
      "objectives": [
        "By the end of this course, you would be very comfortable with Docker, Docker-compose, Jenkins, Running Tests in AWS cloud",
        "Building a CI + CD pipeline from scratch using Jenkins, GitHub, DockerHub, AWS",
        "Running multiple test suites in parallel using docker-compose",
        "Creating Selenium Grid using Docker",
        "Running our automated tests inside a docker container",
        "Creating disposable test automation infrastructure on-demand using Docker",
        "Integrating our test automation process with GitHub and DockerHub",
        "We would be creating a Data Driven - Test Automation Framework from scratch Using Java + TestNG"
      ],
      "course_content": {
        "Introduction": [
          "Need For Docker & Jenkins"
        ],
        "Docker Basics & Installation": [
          "What is Docker?",
          "Note For Udemy For Business Learners",
          "Installing Docker",
          "Installation Verification"
        ],
        "Docker Crash Course": [
          "Terminologies",
          "Useful Docker Commands",
          "Docker Commands - Resource",
          "Pulling An Image",
          "Pulling An Image - Demo",
          "Image Name Format",
          "Creating A Container",
          "Creating A Container - Demo",
          "Basic Linux Commands",
          "Port Mapping",
          "Port Mapping - Continuation",
          "Port Mapping - Demo",
          "Docker Stop Command",
          "Volume Mapping",
          "Note on Volume Mapping - Docker Settings",
          "Volume Mapping - Windows",
          "Volume Mapping - Demo",
          "Docker Network",
          "Creating Network & Multiple Containers - Demo",
          "Creating Our Own Image",
          "Creating A Very Simple Image - Demo",
          "A Simple Java - Hello World Program",
          "Java17 Note",
          "Creating An Image & Installing Java",
          "Passing Environment Variables To Docker Container",
          "Tagging An Image & Pushing To DockerHub",
          "Checking Container Logs",
          "Quiz",
          "Docker Summary",
          "How To Use Q & A section"
        ],
        "Docker Compose": [
          "GitHub",
          "Introduction",
          "Setting Up Workspace",
          "Docker Compose Template",
          "Docker Compose - Demo",
          "Docker Compose - Down",
          "Docker Compose - Project",
          "** ASSIGNMENT ** - nginx",
          "Alpine Pings Nginx - Demo",
          "depends_on - Limitation",
          "Docker Compose - Detached Mode",
          "Remove Port Mapping",
          "Docker Compose Specification Version",
          "Docker Compose - Volume Mapping - Part 1",
          "Docker Compose - Volume Mapping - Part 2",
          "Clarification: How containers can talk without port mapping?",
          "Environment Variables - Parameterize",
          "Environment File",
          "Multiple Environment Files",
          "Multiple Compose Files",
          "Summary"
        ],
        "Creating Our Automation Framework": [
          "Introduction",
          "OPTIONAL - Selenium Crash Course",
          "Resources For Automation",
          "Project Setup",
          "Flight Reservation Application - Walk-through",
          "Page Object - Registration Page",
          "Page Object - Registration Confirmation Page",
          "Abstract Page",
          "Page Object - Flights Search Page",
          "Page Object - Flights Selection Page",
          "Logback - XML",
          "OPTIONAL - Logback Crash Course",
          "Page Object - Flights Reservation Confirmation Page - Part 1",
          "Page Object - Flights Reservation Confirmation Page - Part 2",
          "OPTIONAL - TestNG Crash Course",
          "Flight Reservation Workflow Test",
          "Flight Reservation Execution Demo",
          "TestNG Suite creation - Part 1",
          "TestNG Suite creation - Part 2",
          "Where To Keep TestNG Suites",
          "Vendor Portal Application Walk-through",
          "Page Object - Login Page",
          "Page Object - Dashboard Page - Part 1",
          "Page Object - Dashboard Page - Part 2",
          "Vendor Portal - Writing Test - Part 1",
          "Vendor Portal - Writing Test - Part 2",
          "Abstract Test",
          "Passing Test Data Via JSON",
          "OPTIONAL - Java Records Crash Course",
          "Test Data Class Model",
          "How To Read Resources",
          "Resource Loader",
          "JSON Util",
          "More On Jackson Library",
          "Creating Vendor Portal Test Suite",
          "Vendor Portal Suite - Execution Demo",
          "Flight Reservation Test Data Using Json - Part 1",
          "Flight Reservation Test Data Using Json - Part 2",
          "Summary"
        ],
        "Disposable Selenium Grid Infrastructure Using Docker": [
          "Introduction",
          "ARM vs X86_64",
          "Docker Images For Selenium Grid",
          "Selenium Grid Using Docker",
          "Selenium Grid Using Docker - Demo",
          "Shared Memory Size",
          "Update Test To Use Grid",
          "Running Test Using Dockerized Grid",
          "** FAQ ** - Grid Not Working",
          "** FAQ ** - Release Browser After Test",
          "Changing Browser For Every Test",
          "Running Tests In Parallel",
          "Scaling Container Using Replica",
          "Scaling Container Via Command Line",
          "Max Session Per Container",
          "Max Session And Scale Container",
          "Config Properties",
          "Config Util",
          "Refactor",
          "Test Run Demo",
          "Dockerized Grid - Session Live Execution",
          "Dockerized Grid - Video Recording - Discussion",
          "TestNG Report",
          "Image Format",
          "TestNG Report - Attach Screenshot When Test Fails - Part 1",
          "TestNG Report - Attach Screenshot When Test Fails - Part 2",
          "Connecting An External Node",
          "Summary"
        ],
        "Running Our Tests Inside Docker Container": [
          "Introduction",
          "High Level Approach",
          "Maven Plugins Discussion",
          "Packaging Scripts",
          "Copying The Resources",
          "What About Other Files?",
          "Debugging Guide",
          "Running Tests Via Command Line",
          "OPTIONAL - Note On User Directory",
          "Changing Thread Execution Count",
          "Passing System Parameters",
          "Finding Java Base Image",
          "Creating Docker Image",
          "Exploring Docker Container",
          "What Is Localhost In Docker Container",
          "Running Test Using Grid IP",
          "Adding Entrypoint",
          "Running Tests Using Environment Variables",
          "None Images",
          "Creating Entire Infrastructure Using Docker Compose - Grid + Test",
          "Need For Checking Grid Status",
          "Grid Status Check Approach",
          "Adding Curl JQ",
          "Runner Script",
          "Adding Runner",
          "Note For Windows Users",
          "Running Tests Using Docker Compose & Arching Results",
          "Running Multiple Test Suites In Parallel & Archiving Results",
          "Passing Test Data Via Volume Mapping",
          "Scale Browser & Run Tests In Parallel",
          "** FAQ ** - Why Do We NOT Install Browser?",
          "** FAQ ** - Why NOT Windows Container?",
          "Summary"
        ],
        "Introducing Jenkins In Our Test Automation Process": [
          "Introduction",
          "Jenkins Master/Slave Architecture",
          "Setting Up Jenkins - Part 1",
          "Setting Up Jenkins - Part 2",
          "Connecting An Agent - Theory",
          "Connecting An Agent - Demo",
          "Creating First Jenkins Job",
          "Aborting Jenkins Job",
          "Jenkinsfile - A Simple Introduction",
          "Using Jenkins Agent Labels",
          "Environment Block",
          "Single Quote vs Double Quote",
          "Run Command Using Jenkinsfile Pipeline",
          "Node Workspace",
          "Installing Docker Plugin",
          "Note For Windows Users",
          "Docker Agent",
          "Archiving Artifacts",
          "Creating GitHub Repo",
          "Adding Jenkinsfile To Project",
          "Building Image",
          "Exploring Node Workspace",
          "Note for Windows users",
          "Adding Credentials To Push Docker Image",
          "Fixing Docker Login Warning",
          "Building Image Using Docker Agent",
          "Adding Tag",
          "Webhook / Poll SCM / Cron Trigger - Theory",
          "Runner Introduction",
          "Creating Runner Repository",
          "Never Ending Jenkins Job",
          "Fix For Never Ending Jenkins Job",
          "Runner Job Demo",
          "Archiving Test Execution Results In Jenkins",
          "Content Security Policy",
          "Jenkins Job - Parameterize",
          "Jenkins Job - Run With Parameters",
          "What About Failure Case?",
          "Mark Stage As Failed",
          "Do We Test On Latest Images?",
          "End To End Test",
          "CI/CD - Demo",
          "What If I Have 100 Test Suites?",
          "Summary"
        ],
        "Running Our Tests In AWS": [
          "Introduction",
          "12 Months FREE?",
          "AWS/Cloud Terms",
          "Instance Purchase Options",
          "Creating AWS Account",
          "Jenkins Node Requirements",
          "Creating Security Group",
          "Launching EC2 Instance",
          "AMI Set Up - Installing Softwares",
          "Docker Compose Test",
          "Create AMI",
          "AWS User For Jenkins",
          "Launch Template & Spot Request",
          "EC2 Fleet Plugin Install",
          "Jenkins AWS Credentials",
          "Jenkins AWS Cloud Configuration",
          "Running Tests Using Spot Instances",
          "Cleaning Up Resources",
          "AMI vs Docker Images"
        ],
        "What's Next?": [
          "Whats Next?"
        ]
      },
      "requirements": [
        "Absolutely NO knowledge is required on docker, jenkins, AWS.",
        "Basic knowledge on Java and Selenium webdriver syntax would be nice. However we would be creating a test automation framework from scratch in this course."
      ],
      "description": "This course requires you to download Docker Desktop from official docker site. If you are a Udemy Business user, please check with your employer before downloading software.\n-\nDiscover the power of modern test automation with a comprehensive course that combines Selenium WebDriver, Java, Docker, Jenkins, and AWS. From foundational Docker knowledge to orchestrating scalable Selenium Grids in the cloud, this course equips you with the skills to supercharge your testing infrastructure.\nPrerequisites:\nKnowledge on Java, Selenium, Maven, Git, TestNG.\nKey Benefits:\nMastery from Scratch: Start with Docker and CI/CD pipelines, even with zero prior knowledge.\nEfficient Testing: Learn to run Selenium tests within Docker containers, eliminating infrastructure management hassles.\nOn-Demand Selenium Grid: Bring up Selenium Grid infrastructure as needed and run multiple test suites in parallel.\nCloud Testing: Execute tests on AWS saving valuable time and resources.\nWhat You'll Learn:\nDocker fundamentals and its pivotal role in Test Automation.\nLeveraging Docker Compose for streamlined container orchestration.\nUtilizing Docker Hub for image sharing and scaling containers on demand.\nSetting up Selenium Grid effortlessly with Docker.\nCustom image creation and automation with Jenkins pipelines.\nExtending scalability with Jenkins for parallel test execution.\nWriting Jenkins files using Groovy DSL for seamless automation.\nExecuting automated tests on AWS with spot instances and AMI creation.\nArchiving results via Jenkins in the cloud.\nDeveloping a Selenium framework optimized for Docker.\nAchieving parallel execution and multi-browser support through Docker.\nEffectively archiving results via Jenkins in the cloud.",
      "target_audience": [
        "Anybody who has interests in Test Automation",
        "If you are tired of seeing test scripts failure in the remote machine, then this course is for you!",
        "If you want to run your tests quickly in the cloud like AWS cloud, then it is for you!"
      ]
    },
    {
      "title": "Performance Testing using TruWeb",
      "url": "https://www.udemy.com/course/performance-testing-using-truweb/",
      "bio": "a brand new protocol from Micro Focus LoadRunner",
      "objectives": [
        "What is TruWeb?",
        "DevWeb Protocol",
        "TruWeb Environment Setup",
        "Recording in TruWeb",
        "Generate TruWeb Scripts",
        "Filter Traffic in TruWeb",
        "TruWeb Script Enhancements",
        "Data Encryption",
        "TruWeb Script Execution",
        "Debugging and Error Handling",
        "Automatic Correlation using Rules",
        "Correlation Rule Converter",
        "Version Controlling TruWeb Scripts using GitHub",
        "Using npm in TruWeb",
        "TruWeb Load Testing",
        "TruWeb Best Practices",
        "Mini Project",
        "Result Analysis",
        "LoadRunner Developer",
        "Grafana Integration",
        "Jenkins Integration"
      ],
      "course_content": {
        "Getting Ready": [
          "Course Outline",
          "What's new in Micro Focus LoadRunner 12.60?",
          "An Introduction to TruWeb protocol",
          "TruWeb Installation",
          "Hello World! TruWeb Configuration - Standalone",
          "Hello World! TruWeb Configuration - Integrated",
          "Anatomy of TruWeb Scripts",
          "Visual Studio Code Setup",
          "Notepad++ Setup (Unofficial Support)",
          "Atom Setup",
          "TruWeb Offline Script Generator",
          "Recording in TruWeb",
          "Filter Traffic in TruWeb",
          "TruWeb Logs and Results",
          "IntelliJ IDEA Integration",
          "WebStorm Integration"
        ],
        "Ramp Up": [
          "URL vs Pages Level",
          "Text Check w/ Regular Expressions",
          "Data Parameterization Part 1",
          "Data Parameterization Part 2",
          "How to upgrade TruWeb?",
          "Extractors in TruWeb",
          "Boundary Extractor",
          "Regular Expression Extractor",
          "JSON Path Extractor",
          "Automation Correlation using Rules",
          "Correlation Rule Converter",
          "Transactions",
          "Runtime Settings",
          "Data Encryption",
          "Debugging in TruWeb",
          "Error Handling",
          "Web Requests Defaults",
          "TruWeb SDK",
          "Enable Intellisense and Autocomplete in VS Code",
          "Version Controlling TruWeb Scripts using GitHub",
          "Using npm in TruWeb",
          "How to install npm module in VS Code?",
          "How to delete Results folder in VS Code? (Utility)",
          "How to disable sending usage data to Micro Focus?",
          "How to download/upgrade TruWeb 2019.5.4?"
        ],
        "Steady State": [
          "Running TruWeb Scripts - Load Testing",
          "Running TruWeb Scripts in LoadRunner"
        ],
        "Ramp Down": [
          "Load Testing Report",
          "Best Practices and Mini Sample Project"
        ],
        "Rebooting DevWeb": [
          "Rebooting DevWeb",
          "Installing/Upgrading DevWeb 2020 Service Pack 1",
          "Grafana Integration",
          "Creating a Grafana Dashboard for DevWeb",
          "Disable Sending Usage Data",
          "DevWeb SLA Rules",
          "CI Integration Part 1",
          "CI Integration Part 2",
          "LoadRunner Developer Vs DevWeb",
          "DevWeb Licensing",
          "Dynatrace AppMon Integration",
          "Windows Docker Image for LoadRunner Developer",
          "Linux Docker Image for LoadRunner Developer",
          "Capture Requests in Fiddler from DevWeb"
        ],
        "LoadRunner Professional 2020 Service Pack 3": [
          "What's new in DevWeb Protocol in 2020 SP3?"
        ],
        "LoadRunner Professional 2021": [
          "What's new in DevWeb protocol in Micro Focus LoadRunner Professional 2021?",
          "API Testing in DevWeb - Part 1",
          "API Testing in DevWeb - Part 2",
          "Recording APIs",
          "Parameterize Host Names",
          "gRPC in DevWeb",
          "Protocol Buffers and Smoke Testing gRPC",
          "Developing gRPC Script in DevWeb - Part I",
          "Developing gRPC Script in DevWeb - Part II"
        ]
      },
      "requirements": [
        "Basic understanding about performance testing",
        "Basic hands on experience in Micro Focus LoadRunner",
        "Basic knowledge in JavaScript"
      ],
      "description": "****** TruWeb protocol has been renamed to `DevWeb` by Micro Focus. ******\n****** Course has been updated with LoadRunner Professional 2021 ******\n****** Added Docker Containers for DevWeb tutorials ******\nGreat course if you want to start with TruWeb. Takes you from the basics of installation and setting up your environment to advanced topics like extractors. - Boris Kozorovitzky - Architect of TruWeb\n\n\nOne and Only Course on Micro Focus LoadRunner 2021 DevWeb Protocol\n60+ Lectures\n******\nMicro Focus announced its newer protocol called TruWeb in LoadRunner 12.60. TruWeb has a lot of potential in future performance testing arena. It is scalable, light weight, and cross-platform compatible. You can run TruWeb script in Windows, Mac and Linux and using almost any editors such as Visual Studio Code, Eclipse, Virtual User Generator etcetera. Also, you can execute TruWeb scripts in Performance Center as well. It is free to use (at this time of writing).\nBy learning this course `Performance Testing using TruWeb`, you are ready to impress your project manager, VP, even CTO by proposing this solution as a part of your organization performance test practices.\nAlso, you will be adding `TruWeb` protocol in your resume to make it stronger and stand unique in the crowd.\nEven if you do not have any prior knowledge about Micro Focus tools or performance testing, I tried to explain the concepts in laymen terms.\nI divided the course into four sections:\nGetting Started.\nRamp up.\nSteady State.\nRamp down.\nCourse starts with very basics and fundamentals about TruWeb called `Getting Ready`. Then, you will learn all the importance concepts in TruWeb which will be especially useful to design your test scripts in `Ramp Up` section.\nIn `Steady State` section, you will be comfortable in executing load testing using TruWeb in your local system. Higher the power, higher the load injection.\nIn `Ramp Down` section, you will learn the best practices, results analysis and there is a mini project script I have attached for your learning purpose.\nI urge you to practice the scripting by referring the scripts that I have attached. Unless you practice your JavaScript, it is tougher to learn and implement TruWeb for your projects.\nGood luck!",
      "target_audience": [
        "Manual software testers, Test Automation experts who are interested to get started with the performance testing.",
        "Performance Test Engineers who wants to explore TruWeb - a brand new protocol offering from Micro Focus",
        "Performance Test Engineers who are familiar with other protocols in LoadRunner and other commercial or open source tools"
      ]
    },
    {
      "title": "ChatGPT for Software Testing - Test Automation Use Cases",
      "url": "https://www.udemy.com/course/chatgpt-for-software-testing-test-automation-use-cases/",
      "bio": "Learn how to use ChatGPT for software testing and prepare automation scripts in any programming languages.",
      "objectives": [
        "You will learn how to use ChatGPT to prepare test plans",
        "You will learn how to use ChatGPT to write test cases",
        "You will learn how to use ChatGPT to write BDD scenarios",
        "You will learn how to use ChatGPT to write test automation code and increase your coding efficiency.",
        "You will learn how to use ChatGPT to fix broken programs.",
        "You will learn how to use ChatGPT to write more elegant code.",
        "You will learn how to use ChatGPT API."
      ],
      "course_content": {},
      "requirements": [
        "Basics knowledge of software testing and basic knowledge in any programming language"
      ],
      "description": "*PLEASE READ BELOW *\n\n\nDo you want to use ChatGPT for Test Automation?\n\n\nHave you heard about the power of ChatGPT and want to use it in your testing and test automation use cases?\n\n\nDo you want to know how you can use ChatGPT to prepare test plan given an use case?\n\n\nDo you want to know how you can use ChatGPT to write test cases given a scenario and then derive BDD scenarios from them?\n\n\nDo you want to know how you can use ChatGPT to write test automation script in any programming language?\n\n\nDo you want to know how you can use ChatGPT to write elegant bug free code?\n\n\n\n\nThen this is the course for you. In this course you will also learn how you can use ChatGPT to write positive/negative scenarios given a use case as well as format any data in required form.\nWe will be covering many aspects of a testing life cycle using ChatGPT.\n\n\nThis course is designed for all beginners, intermediate and advanced automation testers who already have some programming experience and want to take their skills to the next level. If you have a basic understanding of programming concepts and have written code in the past, then this course is perfect for you. We'll be diving into the use of ChatGPT in programming and how it can greatly simplify and streamline your workflow. You'll have the opportunity to build and improve programs with ease, and gain a new level of efficiency and speed in your coding.\nWe will query ChatGPT to make Python, Javascript, Java programs for us, but the instructions will work with any other programming language.\n\n\nNot only that, but you'll also discover other ways that ChatGPT can be used to write documentation for the programs written.\n\n\nBy the end of the course, you'll be able to write code with lightning speed and save countless hours that you can spend on other things. So, don't wait any longer and join this exciting journey to revolutionize your test automation  experience!\n\n\nWe're looking forward to having you in the course and hope you earn the certificate.\n\n\nHappy Learning !!\n\n\n[NOTE : If you are using ChatGPT in your organization or for your office work, please check organization policies before sharing any data with ChatGPT]\n\n\nMusic by Bensound[dot]com/free-music-for-videos\nLicense code: FXLGTP3OWXTBZUP7",
      "target_audience": [
        "Novice automation testers looking to enhance their skills.",
        "Professionals looking to improve their productivity and efficiency.",
        "Freelance automation testers looking to streamline their workflow.",
        "Aspiring entrepreneurs with a tech-based vision."
      ]
    },
    {
      "title": "End to End Integration : Selenium - Maven - Git - Jenkins",
      "url": "https://www.udemy.com/course/selenium-maven-git-jenkins/",
      "bio": "Code Management using GIT, Build trigger using Jenkins",
      "objectives": [
        "You will be able to execute automation from Jenkins",
        "Ready to face advance level automation interviews"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Course Introduction",
          "Setup Project | Configure Maven Project",
          "Add Maven Dependencies for Selenium and TestNG",
          "Maven Surefire plugin",
          "Execute TestNG Project by Maven"
        ],
        "Manage Code using GIT | GIT Hub Repository": [
          "What is GIT | EGIT | GIT HUB",
          "Setup EGit",
          "Setup GitHub Repository",
          "Push Code to Git Hub Repository"
        ],
        "Configure Jenkins for Automation Integration": [
          "Pre-Requisite to configure jenkins",
          "Download Jenkins",
          "Start Jenkins and Configure GitHub Plugin",
          "Setup Maven | Java Path in Jenkins"
        ],
        "Run Automation From Jenkins": [
          "Jenkins : Create New Job",
          "Jenkins : Execute Job",
          "Jenkins : Execute Job with Changes"
        ]
      },
      "requirements": [
        "You should have basic understanding of Webdriver automation",
        "You should have basic understanding of Eclipse and Java"
      ],
      "description": "Git is the most widely used modern version control system in the world today, which allows multiple persons to safely work on the same project without hampering other team members. As a part of a team using Git, You and your team members will clone working copy of a local repository from Git server. You/team will add and commit the test scripts that are developed locally and push your changes to the Git.\nThis course gives coverage\n1.  Execute Selenium test cases using TestNg.\n2.  Execute Selenium test cases using Maven.\n3.  Share code using Source Management tool GIT\n4.  Integration Selenium with Jenkins using GIT.\n5.  Execute automation framework using Jenkins",
      "target_audience": [
        "Automation tester working on Selenium Automation",
        "Software tester looking opportunity in Automation"
      ]
    },
    {
      "title": "Selenium WebDriver: JavaScript Automation For Beginners 2019",
      "url": "https://www.udemy.com/course/selenium-webdriver/",
      "bio": "Become A Master Of Browser Automation With Selenium WebDriver, JavaScript and Node.Js (Practice Website Included)",
      "objectives": [
        "How To Use Selenium IDE Recorder (No Programming Skills Required)",
        "How To Set Browser Profiles With Extensions And Settings",
        "How To Use Proxies In Your Browser Automations",
        "How To Handle IFrames Present On Your Webpage",
        "How To Scrape Websites And Extract The Data",
        "How To Setup Your Selenium WebDriver With Desired Preferences",
        "How To Debug Your Code With VSCode",
        "How To Handle All Kinds Of Form Inputs",
        "How To Use CSS and XPATH Selectors"
      ],
      "course_content": {
        "First Selenium Automation": [
          "Setting Our Environment",
          "First Selenium Automation"
        ],
        "Basic Selenium WebDriver Setup": [
          "What is Selenium?",
          "How To Build Our Selenium Webdriver?"
        ],
        "Advanced WebDriver Setup": [
          "Browser Options",
          "Set A Browser Profile",
          "Setting a Proxy"
        ],
        "Basic Interaction With Elements": [
          "How To Wait For Tasks To Finish?",
          "Select Elements By Id and Name - Input Fields"
        ],
        "Advanced Interaction With Elements (CSS Selectors)": [
          "Select Elements By CSS Selectors - Radio Buttons",
          "CSS Selectors Practice"
        ],
        "Advanced Interaction With Elements (XPATH Selectors)": [
          "Xpath Selectors Practice - Checkbox Example",
          "Dropdown Menu Example"
        ],
        "Advanced Interaction With Elements (Complex Input Fields)": [
          "Datepicker Forms",
          "File Upload Froms",
          "IFrame Forms, Driver Actions and Debugging"
        ],
        "Web Scraping With Selenium WebDriver": [
          "Extracting Data From Tables - Web Scraping"
        ],
        "Selenium IDE Recorder - Record Your Tasks": [
          "Selenium IDE Recording Setup and First Example",
          "Recording More Examples And Dealing With Datepicker",
          "Handling IFrames With Selenium IDE Recorder",
          "Store Variables In Recordings",
          "How To Save And Load Your Projects?"
        ],
        "BONUS SECTION": [
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Laptop, PC or Mac",
        "Basic JavaScript Knowledge"
      ],
      "description": "Do you want to master Selenium and browser automation? Do you want to create scripts so you can automate boring tasks or to test your web application? If the answer is yes, then this course is for you.\nI will take you from a complete newbie in the Selenium Framework to a master of browser automation.\nHere is what you are going to gain from enrolling in this course:\nIn this course you are going to learn how to use Selenium with JavaScript starting from the very first lecture.\nWe are not going to waste any time with boring lectures with slides. We are going to start practicing right away – which is the best way to learn in my experience.\nAfter that I am going to show you how you can set up your Selenium WebDriver with all the possible settings that you might need.\nI have even built for you a practice website where you would be able to test your code and test it as many times as you want.\nWith the practices that I have prepared for you I will show you how you can handle all kinds of form inputs and how to find elements on your web page the easiest way possible.\nI will teach you about CSS and XPATH selectors – which are the ways of finding elements on web pages.\nDebugging is a very important skill for every programmer, so we are not going to avoid that topic. In the lectures I am also going to show you how you can debug your code in order to understand why you don’t get the expected results that you wanted.\nIn the last section I will show you how even if you have no programming skills you can record actions to be performed on web pages with the Selenium IDE Recorder and how to use custom variables in those recordings.\nWhen you are finished with this course you will be able to automate, scrape or test whichever website desire\nYou would also be able to ask questions inside the course if you get stuck somewhere. I will be there to help you out whenever you need.\nNow, I want my students to always feel comfortable when they make a purchase, that is why I have uploaded multiple free videos for you to view at any time.\nAlso I offer you a 30 day money back guarantee, no questions asked!\nSo you have nothing to risk and everything to gain from this course!\nIt’s time to take action. This offer won’t last forever",
      "target_audience": [
        "Everyone Who Is Curious To Learn How To Automate Browser Tasks",
        "JavaScript Developers That Want To Learn How To Test Their Web Applications"
      ]
    },
    {
      "title": "Postman API Testing 2021 | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/postman-api-testing-2020-step-by-step-for-beginners/",
      "bio": "With real world examples and complete Hands-On | API Basics and REST API Creation | Bonus Crash Course",
      "objectives": [
        "Postman from scratch",
        "Understand web services API",
        "Understand the GUI and features",
        "How to do API Automation testing",
        "How to run from command line and Jenkins CI",
        "A Bonus Crash Course on Postman"
      ],
      "course_content": {
        "ABOUT INSTRUCTOR AND THE COURSE": [
          "A message by Raghav",
          "About Raghav and this course ***Must Watch***"
        ],
        "INTRODUCTION": [
          "Introduction | Download | Install",
          "Understand Postman Tool (GUI)"
        ],
        "BONUS | API Web Services Basics": [
          "Introduction | What is a Web Service",
          "How Web Services Work",
          "What is WSDL and UDDI",
          "What are SOAP Web Services",
          "What are REST Web Services (Part-1)",
          "What are REST Web Services (Part-2)"
        ],
        "UPDATE FOR DEMO APIS": [
          "401 Unauthorized Missing API key in ReqRes APIs"
        ],
        "CREATE AND RUN": [
          "First API Request in Postman | GET Request",
          "How to run POST request | Example",
          "How to run PUT request | Example",
          "How to run PATCH request | Example",
          "How to run DELETE request | Example"
        ],
        "CREATE LOCAL REST API": [
          "How to create and host REST API on your system"
        ],
        "COLLECTIONS": [
          "What are Collections and How to use",
          "How to run Collections Remotely"
        ],
        "VARIABLES": [
          "Introduction to Variables",
          "How to Get and Set Variables"
        ],
        "ENVIRONMENT": [
          "How to create and use Environments"
        ],
        "WORKSPACES": [
          "How to create and manage Workspaces"
        ]
      },
      "requirements": [
        "No specific prerequisite required."
      ],
      "description": "This course is created for complete beginners. I will start from scratch and teach you Postman Step-by-Step with examples and hands-on\nIf you are a complete beginner on Postman, this course is for you. Very basic step by step videos to guide you from scratch.  We will learn\nWhat is POSTMAN\nHow to download and install\nUnderstand Postman GUI\nCreate Collections, Variables, Environments and Tests\nData-Driven Testing\nCommand Line\nHow to create and host local REST API\nRun from command-line and Jenkins\nMocking, Monitors & Documentation\nA Bonus crash course on Postman\nYou will be learning everything from scratch. You do not need any existing knowledge of API or Postman to start on this course. Wherever required, I will give you examples and will show you with a hands-on demo\nBy the end of this course, you will have complete hands-on knowledge on working with POSTMAN\nIn-depth understanding of all features and settings of POSTMAN\nYou will be able to create end-to-end API Testing projects with POSTMAN\nComplete hands-on knowledge on How to run your tests from command-line and Jenkins Continuous Integration\nThere will be real-world examples and a demo\nDo not worry if you have never done programming, or api testing, I will start from scratch and go up step-by-step with hands-on\n\n\nI will be guiding you and will be here to resolve your queries.\nLet's Get Started...\nRaghav Pal",
      "target_audience": [
        "Beginners for Postman API testing",
        "Beginners for API web services",
        "Anyone who wants to learn POSTMAN from scratch"
      ]
    },
    {
      "title": "Test Automation Foundations",
      "url": "https://www.udemy.com/course/test-automation-foundations/",
      "bio": "Learn everything you need to kick-start your Test Automation Career",
      "objectives": [
        "You will take your first steps into your test automation career.",
        "Be able to demonstrate your understanding of test automation to future employers.",
        "Learn test automation best practices and frameworks.",
        "Practice using JMeter, Gatling, k6, and Postman tools with live projects"
      ],
      "course_content": {
        "Introduction": [
          "Course Roadmap",
          "Working with Subtitles"
        ],
        "Fundamentals of Test Automation": [
          "Introduction",
          "Test Automation Engineer Career Path",
          "Software Testing Role in an Agile Environment",
          "Software Testing vs Automation Testing"
        ],
        "Building a Test Automation Strategy": [
          "Introduction",
          "Software Testing Pyramid",
          "Unit Testing",
          "Integration Testing",
          "End to End Testing",
          "Deciding What to Automate",
          "When to Start Test Automation?"
        ],
        "Test Automation Platforms and Tools": [
          "Introduction",
          "API Automation and Tools",
          "Web / UI Automation and Tools",
          "Mobile Automation and Tools",
          "Low Code/No Code Automation Tools",
          "Test Automation in CI/CD"
        ],
        "Test Automation Management": [
          "Introduction",
          "Cultivate a Test Automation Culture",
          "Measuring the Value of Your Test Automation",
          "Final remarks"
        ],
        "Bonus": [
          "What is Next"
        ]
      },
      "requirements": [
        "A computer with either Windows, Mac or Linux to install all the free software and tools needed.",
        "Basic Software Testing experience is nice to have but not a must."
      ],
      "description": "Welcome to the Test Automation Foundations.\n\n\nLearn the foundations of automation testing with this course and become a successful Test Automation Engineer. Obtain the core automation testing skills and learn more about high-demand testing frameworks such as restAssured, Playwright, and Appium. At the end of this course, you will know what are the career options for test automation engineers and how you can proceed in this direction.\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to start your automation testing career.\n\n\nThe course includes over two hours of 1080P (HD) video tutorials with high-quality sound. All the videos are hand edited, and unnecessary parts are removed. You will only learn \"what you need to learn\" to become successful!\n\n\nAll videos have hand-edited subtitles. We spent many hours correcting all the subtitles to help you have a smooth learning experience.\n\n\nWhy should you take this course?\nDo you want to become a Test Automation Engineer but don't know where to start? Are you planning to switch from a non-technical testing position to the more technical side? Or are you a software engineer who wants to change to test automation positions? This course is made for you. At the end of the course, you will learn everything you need to proceed with your career in test automation.\n\n\nSign up today, and look forward to:\nOver 2 hours of HD video content.\nAll the knowledge you need to start your automation testing career.\nBest practice test automation code examples.\nInteractive whiteboard lessons.\nLearn the latest IT industry topics and stay up to date.\n\n\nThere's no risk!\nThis course comes with a full 30-day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, you will receive a 100% refund.\n\n\nReady to get started?\nEnroll now using the \"Add to Cart\" button on the right, and become a successful software tester! Or, start watching the preview feature so you know you're 100% certain this course is for you.\nSee you at the course!",
      "target_audience": [
        "This course is perfect for software testers who want to enter into test automation world.",
        "For intermediates looking to sharpen their skills to the expert level.",
        "For developers who want to switch their careers to the automation field.",
        "For beginners who want to learn more about test automation and future job opportunities."
      ]
    },
    {
      "title": "Rest API/Web Services testing with SoapUI+Realtime scenarios",
      "url": "https://www.udemy.com/course/web-services-testing-with-soap-ui/",
      "bio": "#1 Highest Rated Soap UI Course- 9000+ Students ::API Testing+Groovy script+Real time Project+ Interview Questions",
      "objectives": [
        "Writing test cases for SOAP/RESTFul APIs/Web services.",
        "Writing automation scripts using Groovy",
        "Preparing test data using excel sheets",
        "Importing REST project from Swagger",
        "Sample projects with web services for practice purpose",
        "Managing environments in SoapUI Free/Pro versions",
        "Generating test reports",
        "Interview Questions",
        "Understand database(MySQL) basics",
        "Continuous Integration (CI)",
        "Creating automation scripts to execute test cases from build tools on different environments"
      ],
      "course_content": {
        "Welcome": [
          "Introduction to SoapUI",
          "Installation & Set up"
        ],
        "Web Service Basics (Skip if you know basics)": [
          "Introduction to Web services",
          "Introduction to XML & JSON",
          "Introduction to WSDL",
          "Introduction to SOAP",
          "Checkpoint- Web service basic concepts"
        ],
        "Sample SOAP Services for practice purpose": [
          "MUST READ:Before you start!!!",
          "How to run the services on your local machine?",
          "Sample SOAP Services"
        ],
        "SoapUI Basics": [
          "Create project in SoapUI and send a sample request to web service",
          "Create TestSuite and TestCase",
          "Cloning TestSuite and TestCases",
          "Exporting and Importing project into workspace",
          "Running mock service- might come handy when your actual service is down!!",
          "Assignment #1",
          "Assignment #2",
          "Checkpoint- SoapUI Basics"
        ],
        "Assertions": [
          "Introduction to XPath Expressions",
          "Writing our first assertion",
          "Working with advanced assertions",
          "Assertions - Compliance,Status & Standards",
          "XQuery Assertion",
          "Handling CDATA - using XPath and Groovy",
          "Checkpoint- Assertions",
          "Assignment # 1",
          "Assignment #2",
          "Assignment#3 - Account Service"
        ],
        "Working with Properties": [
          "Creating properties at Project , TestSuite & TestCase Level",
          "Property Expansion",
          "Transferring Properties",
          "Checkpoint- Properties",
          "Assignments"
        ],
        "Working with REST APIs": [
          "Introduction to ReSTFul Services",
          "Creating REST Project using REST URI",
          "Understanding differences between GET,POST,PUT,DELETE methods",
          "Checkpoint- REST API",
          "REST API - Working with Path Param and asserting two requests",
          "Importing REST project from Swagger - End to End Real-time Scenario",
          "Rest API - Property transfer - end to end scenario",
          "REST - Authentication using Header tokens,OAuth2.0 and Basic Authorization",
          "Sample Rest Services - Part 1",
          "Sample Rest Services (Pet Store) - Part 2",
          "REST - Sending attachments",
          "Assignment #1"
        ],
        "OAuth 2 -Authentication": [
          "Generate OAuth2 Token & Call Rest API with Token"
        ],
        "Automation with Groovy": [
          "Introduction to Groovy Language Basics",
          "Working with conditions",
          "Call Rest API POST method using Groovy by reading data from Excel sheet",
          "Working with Lists and Maps",
          "Writing assertions",
          "Reading SoapUI project Artifacts from Groovy",
          "Assert web service response using XmlSlurper",
          "Reading data from File",
          "End to End automation with Groovy - Read data >Call Web service>assert response",
          "Working with REST API using JSonSlurper",
          "Reading data from Excel",
          "Creating methods in Groovy",
          "Groovy - Reading data from database table",
          "Assignment #1",
          "Assignment #2",
          "Source Code"
        ],
        "Web Service Mocking": [
          "Why we need to mock services?",
          "Creating Mock Service",
          "Creating dynamic Mock Service Using Groovy",
          "Assignment #1",
          "Assignment #2",
          "Checkpoint- Web Service Mocking"
        ]
      },
      "requirements": [
        "This course is for the testers who would like to become proficient in testing web services using Soap UI tool",
        "Having basic knowledge on testing fundamentals"
      ],
      "description": "By end of this course you will be familiar in testing web services (both SOAP based and REST Services) manually and automate with Groovy scripting.The course has been prepared in such a way that you can learn this course starting from basics to advanced topics in a progressive way. Course has assignments/quizzes for you to practice and strengthen your knowledge.\n\n****Course has projects with SOAP/REST services for practice purpose.****\nBy end of this course you will be familiar in:\nWeb services basics like WSDL,SOAP ,XML and JSON.\nCreating Test Suites, Test Cases for SOAP/RESTFul APIs/Web Services\nWriting Assertions  (Validating web service responses)\nData Driven Testing\nWorking with Data Sources (Database,Excel,Grid etc..)\nWorking with DataSink and DataGen\nAutomation with Groovy Script\nReading data from Files,Excel Sheets using Groovy scripts\nImporting SWAGGER Projects\nCreating Mock Services\nGenerating Test Reports\nCreating batch scripts to execute your test cases from command line tool\nIntegrating with Jenkins for Continuous Integration\nManaging Environments in SoapUI Free version\nCourse Highlights:\n\"We respect your time\"- all the videos are short and straight to point without wasting your valuable time.\nAssignments  - Given assignments  along with required resources, which will help you practice your learning.\nShort and precise videos\nCheckpoint questions\nInterview Questions\nSample Project :Provided a sample project with \"REST Services\" for practice purpose\n********************     Final Certification Mock Exam (40 Questions)     **************************\n\n\nSupport:\nI offer full support, answering any questions you have.\nThis means you’ll never find yourself stuck on one lesson with out progress. With my hand-holding guidance, you’ll learn smoothly through this course without any major issues.",
      "target_audience": [
        "Who want to become proficient in Web service /API testing using Soap UI"
      ]
    },
    {
      "title": "Technical Web Testing 101",
      "url": "https://www.udemy.com/course/technical-web-testing-101/",
      "bio": "Introducing the tools, techniques and thought processes that help you become more technical, and test more thoroughly.",
      "objectives": [
        "Understand HTTP Proxy Basics",
        "Why should testers use HTTP Proxies",
        "Learn to use Modern Browser Functionality for testing"
      ],
      "course_content": {
        "Welcome": [
          "Introduction"
        ],
        "Absolute Basics": [
          "Absolute Basics",
          "Should you maintain a Tool List?",
          "The MORIM model"
        ],
        "Applications to use for Testing": [
          "Some free online applications to test against",
          "Self Study Applications to test against"
        ],
        "Modern Browsers": [
          "Intro to modern browsers",
          "Heuristic Overview - Form Follows Function",
          "Google Chrome Device Toolbar",
          "Google Chrome Docking, help, run",
          "Google Chrome Elements and DOM View",
          "Google Chrome Network Tab",
          "Google Chrome Incognito Mode",
          "Chrome Editing Cookies",
          "Firefox WebConsole"
        ],
        "Exploratory Test Session Using Chrome Browser Dev Tools": [
          "An exploratory technical web testing session using chrome",
          "Exploratory Test Session Notes"
        ],
        "View Page Source - A Technical Web Testing Browser Challenge": [
          "View Page Source Section Intro",
          "View Page Source Introduction",
          "Exercise: View Page Source Challenges",
          "View Page Source Challenge Slide Retrospective",
          "View Page Source Challenge Live Retrospective"
        ],
        "Incognito Mode - A Technical Web Testing Browser Challenge": [
          "Section Intro - Incognito Mode - A Technical Web Testing Browser Challenge",
          "Incognito Mode Introduction",
          "Exercise: Incognito Mode Challenges",
          "Incognito Mode Challenges Slide Retrospective",
          "Incognito Mode Challenges Live Example"
        ],
        "RestMud - A Text Adventure Game For Technical Testing": [
          "What is RestMud?",
          "Recommended sites for adventure games",
          "Install and Start Playing RestMud",
          "How to Play RestMud",
          "Exercise: RestMud Single Player Game: Basic Adventure"
        ],
        "HTTP Proxies": [
          "Introduction to HTTP Proxies",
          "What is an HTTP Proxy?",
          "Configure Firefox to Use BurpSuite Proxy",
          "Basics of BurpSuite",
          "Repeating a Request in BurpSuite",
          "Intercepting and manipulating requests",
          "Generic Configure Browser to use a proxy",
          "Self Study Recommended Books",
          "Self Study Recommended Proxies to Try",
          "Next actions",
          "How To Chain HTTP Debug Proxies"
        ],
        "An Introduction to Interactive REST API Testing": [
          "Introduction",
          "What is REST?",
          "Exercise: Explore a REST API using a Browser",
          "Exercise Answers: Explore a REST API using a Browser",
          "REST Clients and Postman Client",
          "Exercise: Postman Client",
          "Exercise Answers: Postman Client",
          "Postman Lessons Learned",
          "Example: Playing RestMud without a GUI",
          "Exercise: Play RestMud without a GUI",
          "PostMan through a proxy - example using RestMud",
          "A Little More REST Theory",
          "Sample REST APis to practice on",
          "Slides and resources"
        ]
      },
      "requirements": [
        "A computer capable of accessing the internet",
        "A desire to become more technical"
      ],
      "description": "This course will help you perform more technical testing.\n\n\nIt will introduce you to the basic concepts and tools you need to help you take the next step in your testing evolution.\n\n\nWe need to test more technically in order to find more deeply hidden bugs. To investigate architectural risk. To improve our understanding of the applications we test.\n\n\nThis course will pull together introductory information for a range of topics related to the technical web domain.\n\n\nTechnical doesn't mean \"the ability to write code\" although we do cover some Javascript on the course because Javascript is essential for helping you understand and interact with modern web applications.\n\n\nTechnical means a technical understanding of the platform you are testing and how to use it in your testing. For the web this means understanding how to use the browser to support your testing, the features of the browser that can help, gaining confidence in exploring and using the tooling yourself so you can continue to learn as the browser adds new features. Additionally an understanding of what happens under the covers with HTTP messages, including how to view and amend them.\n\n\nThis course opens up the world of web testing at a technical level such that everyone can take advantage of the powerful tools built in to modern browsers.",
      "target_audience": [
        "Software Testing Professionals of any experience level"
      ]
    },
    {
      "title": "TestLink - A Test Management Tool",
      "url": "https://www.udemy.com/course/testlink_a_test_management_tool/",
      "bio": "An Open Source Test Management Tool",
      "objectives": [
        "Multiple project creation and details about Test project management",
        "2300+ students community (more than any TestLink course on Udemy) will help you to explore the tool in efficient way",
        "Test Suite creation",
        "Requirement Spec and Test case mapping(RTM)",
        "Build report generation",
        "Understand test management process",
        "Execution of test cases in TestLink",
        "Creation of Testcase in TestLink",
        "Test Plan Creation"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of SDLC and STLC"
      ],
      "description": "TestLink is most widely used web based open source test management tool. It covers both requirements specification and test specification together.\nIt supports both automated and manual execution of Test cases.Automation execution of test cases can be achieved using XML-RPC technique.\nIt supports multiple user login and parallely multiple projects can run in TestLink.\nRole can be created based on project and organisation requirement.Features/menu's of TestLink can be mapped to newly created role irrespective of the role.\nIt can be integrated with bug tracking tools like Bugzilla and Redmine.\nIt also supports SMTP integration.\nTestLink have bunch of reports to serve project and organizational needs.\nAny role of TestLink can generate report to evaluate their performance.",
      "target_audience": [
        "Software engineering fresher,Tester,TL and PM"
      ]
    },
    {
      "title": "Software UI Automation Testing using Java-Selenium from A-Z",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-testng-maven-git-jenkins/",
      "bio": "UI Automation : With Basic Java from Beginner to Framework level with realtime examples-TestNg,GIT,Maven,Jenkins covered",
      "objectives": [
        "By the end of this course you will be able to automate any Web Application with framework, *This is completely design for Beginner*.",
        "You will be able to answer What, Why and when to use with explanation.",
        "You will gain confidence with “Real time scenario” so that you can answer to anybody with confidence- This is Main focus.",
        "You will get to know the coding standards in writing the most optimised Web Automation Scripts",
        "You will be able to develop Web Automation framework from scratch",
        "You will understand Automation framework components like TesNG, Maven, Jenkins, Page Object model design pattern etc",
        "You will get complete Practical knowledge on Selenium WebDriver where you will be in the position to automate any Web application.",
        "You will be able to create GREAT LOOKING REPORTS using the best advanced REPORTING TOOL.",
        "\"Last but not least\" you can clear any Interview and can Lead Entire Web Automation Project from Design Stage to implementation stage.",
        "You will be Ready for your new Career Growth / Job Switch"
      ],
      "course_content": {},
      "requirements": [
        "* ******You need NOT have any Prior java coding experience to start this course********* Even non Programming candidates can follow this course comfortably******Have covered Basic of Java"
      ],
      "description": "Master Java Selenium Web Automation from Scratch to Expert Level\nCourse Updated with Latest Real-World Examples & Time-Saving Techniques!\n\n\nWhy Choose This Course?\nThis course is perfect for beginners and will transform you into a Java Selenium automation expert! Whether you’re just starting out or looking to sharpen your skills, this course provides a comprehensive guide for mastering Java WebDriver Selenium automation.\n\n\nWhat sets this course apart?\nUnlike other courses, this one goes beyond theory and focuses on real-world applications, allowing you to automate real web applications from scratch. We walk you through the automation process step-by-step — explaining why and when to use each tool or approach.\nBy the end of this course, you’ll have the skills to land high-paying jobs and apply your knowledge directly in the workplace!\n\n\nWhat Makes This Course the Best Choice for You?\nNo Prior Coding Experience Required: Start with zero knowledge and progress to advanced concepts.\nReal-Time Project Focus: We use real-world web applications to teach you automation and ensure you understand industry-level frameworks.\nComprehensive Course Content: Over 27+ hours of content that covers everything you need to know from Java basics to advanced Selenium automation frameworks.\nPractical & Hands-On: Live examples and hands-on exercises to reinforce learning. Apply what you learn through real-world tasks.\nInterview Preparation: Each section includes interview questions and quizzes to help you prepare for your next job.\nIn-Depth Frameworks: Build and implement Page Object Model (POM) and TestNG frameworks — key skills for any Java Selenium automation engineer.\nCareer Boosting: Upon completion, you'll be able to automate any web application and confidently answer job interview questions related to web automation.\n\n\nCourse Outline: What You Will Learn\n1. Java Fundamentals for Automation:\nBasic Java Concepts (for total beginners)\nOOPS Concepts (Essential for writing maintainable code)\nCollection Framework in Java\n2. Introduction to Selenium WebDriver:\nSetting up Java, Selenium & Browser Environment\nSelenium Architecture & How it Works\nLaunching Browsers & Handling Web Elements\nInspecting Web Elements using Chrome DevTools or Firebug\n3. Automation Basics: Web Elements and Actions:\nLocating Web Elements using XPath, CSS, etc.\nHandling Dropdowns, Checkboxes, and Radio Buttons\nClicking Elements in Different Ways\nUsing the Actions Class for advanced operations\nHandling Popups and Alerts using AutoIT and Robot Class\nTaking Screenshots during tests\n4. Advanced Framework Concepts:\nPage Object Model (POM) and Page Factory Design Pattern\nReading and Writing Data from/into Excel & Properties Files\nTestNG Framework Setup (Annotations, Grouping, Running Tests, Parallel Execution)\nMaven Setup and Execution\n5. Automation with Advanced Tools:\nGit Basics for version control\nJenkins for Continuous Integration (CI/CD)\n6. Debugging & Reporting:\nUsing TestNG Reports for clear test results\nSoft & Hard Assertions for validating test outcomes\nLogger Setup for better error handling and reporting\n\n\nWhat You'll Gain:\nJava Selenium Expertise: Master Java and Selenium WebDriver to automate any web application.\nIndustry-Relevant Skills: Learn real-time automation techniques that you can directly apply to your job.\nJob-Ready Skills: Prepare for roles such as SDET (Software Development Engineer in Test), QA Engineer, or Automation Tester with hands-on experience and interview prep.\nAdvanced Automation Frameworks: Understand and implement frameworks like POM and TestNG.\nReal-World Applications: Complete practical assignments using live projects, enabling you to automate like a pro.\nCareer Support: Get the tools you need to ace your interviews and build your resume/CV with real-world skills in web automation.\n\n\nWho Should Take This Course?\nComplete Beginners: No prior coding or automation knowledge needed! This course is designed for beginners who want to learn web automation from scratch.\nAspiring SDETs: Learn the skills needed to become a Software Development Engineer in Test.\nAutomation Testers: Take your skills to the next level with advanced automation techniques.\nQA Engineers looking to transition into web automation roles.\nSoftware Engineers who want to learn Selenium WebDriver to automate web applications and increase productivity.\n\n\nKey Features:\n27+ Hours of Content with live examples and hands-on exercises.\nStep-by-Step breakdown of concepts from basic to advanced levels.\nReal-World Projects for practical learning.\nInterview Preparation with 100+ Interview Questions.\nLifetime Access to course materials and future updates.\nInteractive Q&A and Instructor Support to guide you through the course.\n\n\nWhy This Course Is a Game-Changer for You ?\nThis course is designed to give you everything you need to know about Java Selenium Automation. Whether you're a complete beginner or looking to polish your skills, this course will help you become a confident Selenium Automation Tester and SDET ready to land high-paying jobs in the industry.\n\n\nEnroll Now and take the first step towards mastering Java Selenium Automation!\n\n\nBest of luck with your learning journey!\nPankaj Gupta",
      "target_audience": [
        "* Manual testers, Non-programming aware testers interested in learning Automation",
        "* Any Experience who want to change Domain OR update their skills.",
        "* Any Software engineer who are interested in Mobile Technologies",
        "* Freshers/Graduates/ Software Testers",
        "* Any Developer who have to implement something using automation"
      ]
    },
    {
      "title": "Software Testing Interview Secrets: Ace Your QA Interviews",
      "url": "https://www.udemy.com/course/software-testing-interview-masterclass-ace-the-qa-interview/",
      "bio": "The Ultimate Software Testing Interview Course. Get a job as a software tester, QA, Manual QA, Quality Analyst in 2025",
      "objectives": [
        "Learn how to easily crack the software testing QA interviews and get a job as a software tester, QA Analyst, QA Engineer, Manual Tester & Manual QA",
        "Learn how to create a resume , apply for jobs and tips & tricks to get more interviews.",
        "Understand what employers look for in software testing interview candidate",
        "Become super confident and prepared for your next software testing interview.",
        "Learn how to answer the most common software testing interview questions",
        "Learn the difference between Agile and Waterfall methodologies",
        "Know the different interview stages in a software testing interview such as HR phone interview, interview with the hiring manager and the team",
        "Understand software development life cycle in full detail",
        "Learn how to create a bug report for the interview"
      ],
      "course_content": {
        "Introduction and Course Overview": [
          "Course Introduction",
          "Course Overview"
        ],
        "The most important Interview Question": [
          "The very first question they will ask you"
        ],
        "Technical Interview Questions": [
          "What is Software Testing?",
          "Quiz on Software Testing",
          "Difference between Test plan and Test case",
          "How to test login functionality",
          "How to test a payment functionality",
          "How to test an elevator",
          "How to test a pen",
          "Agile vs waterfall methodology",
          "How to write a Bug report",
          "Difference between Black-Box Testing vs White-Box Testing",
          "The 7 Testing Principles",
          "What is Software Testing Lifecycle (STLC)",
          "What is Acceptance Testing?",
          "How will you approach testing any user story in an agile project?",
          "Your approach testing any user story in an agile project? Answer attached"
        ],
        "Non-Technical Interview Questions": [
          "Strengths and Weaknesses",
          "Why this company?",
          "What questions to ask"
        ],
        "Phases of Interview": [
          "Interview Phases",
          "HR Phone interview",
          "Hiring Manager Phone interview",
          "In person/video interview",
          "Thank you Email"
        ],
        "Complete Resume Guide": [
          "Resume Strategies",
          "How to write a resume",
          "Resume Keywords"
        ],
        "Salary question": [
          "Salary negotiation"
        ],
        "How to get more job interviews": [
          "Tips and tricks for applying to jobs",
          "How to be more confident"
        ],
        "Conclusion": [
          "Course Completion"
        ],
        "BONUS SECTION": [
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Motivation and willingness to learn",
        "Be able to follow advice in this course and be consistent",
        "Basic knowledge of software testing/QA fundamentals"
      ],
      "description": "The complete course on how to pass the interview and get a job as a Software Tester, QA, Manual Tester, QA Analyst, Website Tester & QA Engineer.\nWant to land a Software Testing job at a great company but you are intimidated by the interview process and the technical questions? Do you find yourself being confused or overwhelmed by the software testing interview? Look no further!! Because this course is your answer to all the problems, hesitations and fears you have about the software interview. Using the strategies, exercises, tips & tricks taught in this course, you will learn how to get job offers from top tech companies.\nThe demand for software testers is increasing at an insane rate right now. There are more and more technology companies that are being started now a days and all of them require software testers. This is the best time to learn the concepts taught in this course and get a great paying job.\nThis course is created based on personal interviews and feedback from managers who hire software testers. Nothing is held back as all the secrets are shared in this course to increase your chances at landing a job.\nHere is what you will learn in this course:\nHow to answer the most important software testing interview questions\nThis course will provide you scripts on how to answer questions and emails from employers\nHow to write a resume and how to apply for jobs\nHow to get more interviews\nTips and tricks to stand out from other candidates\nWe'll teach you all the fundamental concepts and how to apply them to pass the software testing interview.\nI will consider myself successful if I could be a part of your journey to success.\nEnroll today and see what this course can do for your career and life. Best of luck!\nYour Instructor:\nWaqas Mazhar is a QA Engineer at a top tech firm and a successful Udemy instructor with almost 6000 students and more than a 1000 five star reviews.",
      "target_audience": [
        "Anyone who is looking to get a software testing/QA job",
        "Anyone looking to break into the technology field with no prior experience",
        "People who are transitioning from other careers to become a software tester/QA"
      ]
    },
    {
      "title": "OpenText UFT One 24.X - Basic to Advance with GenAI tool",
      "url": "https://www.udemy.com/course/uft-one-2021-basic-to-advanced/",
      "bio": "Latest version of UFT v. 24.4. Covers framework Implementation. How to perform API and AI testing using GenAI tool",
      "objectives": [
        "How to install latest version of OpenText UFT One updated 23.4",
        "Able to understand Automation Testing Life Cycle",
        "Functionality and AI based Testing using UFT One 2021",
        "Real time scenarios - as an examples",
        "Descriptive programming will help to enhance your script",
        "Automation Framework Implementation from scratch",
        "Advance VBScript covers FSO, AOM,TOM. Latest one covers API testing and AI testing.",
        "*******Very Imp \"Last but not least\" you can clear any Interview and can Lead Entire UFT One Automation Project from Design Stage."
      ],
      "course_content": {
        "Introduction": [
          "Introduction About Course and Author",
          "Who Am I?",
          "IMP - Installation Steps - UFT One 2021 Step - by - Step",
          "VIMP Note",
          "Download OpenText UFT One 23.4 Version (2024)",
          "Installation of Latest OpenText UFT One 23.4 (2024)"
        ],
        "Learn UFT in easy way - using GenAI tools": [
          "What is Prompt Engineering ?",
          "What is GenAI and helps to software tester - I",
          "What is GenAI and helps to software tester - II",
          "DEMO - What is Descriptive Programming using GenAI",
          "DEMO - What is Descriptive Programming using GenAI...2"
        ],
        "Introduction to Micro Focus UFT One 2021 - latest version 2022": [
          "Introduction to Micro Focus UFT One 2021 - latest version 2022",
          "Record and Playback",
          "Types of Views and Settings",
          "UFT One - Reports",
          "Object Spy",
          "Synchronization"
        ],
        "Types of Recoding Modes": [
          "Default Recording Mode",
          "Default Recording Mode - 2",
          "Analog Recording Mode",
          "Low Level Recording Mode",
          "Insight Recording Mode",
          "Debugging"
        ],
        "Object Repository": [
          "Introduction to Object Repository",
          "What is Shared Object Repository"
        ],
        "Object Identification": [
          "Smart Identification - I",
          "Smart Identification - II",
          "GetROProperty",
          "GetTOProperty and GetTOProperties"
        ],
        "Automation Testing Life Cycle": [
          "Automation Testing Life Cycle"
        ],
        "Different Types of Checkpoints": [
          "Standard Checkpoint",
          "Text Checkpoint",
          "Text Area Checkpoint",
          "Bitmap Checkpoint",
          "XML and File Content Checkpoint"
        ],
        "Data Driven Testing Or Parameterization": [
          "Parameterization - Data Driven Test"
        ],
        "Regular Expression": [
          "Regular Expression"
        ]
      },
      "requirements": [
        "1. Participant should have Good knowledge of Manual testing.",
        "2. No coding knowledge required. Coding will be taught from scratch."
      ],
      "description": "One of the most popular tool in the market. Very easy to learn. OpenText UFT One 2024 covers basic  to advance level. Also covers VBScript and Descriptive programming using GenAI tool that makes you learn faster and easy. Step by step implementation of framework. Those who want to start career in automation, this is best tool to start. It Covers with scratch like what is automation testing? Why Automation? UFT one interface, Recording modes, Object Repository, Synchronization, Object identification, Actions, Recovery Scenario, VBScript, AOM, FSO, Descriptive programming, What is framework and how to implement / design framework from start to end. It is used to perform functionality, API and Mobile based testing. Course details are:\nWhy Automation\nIntroduction to UFT One\nDownload and Install OpenText UFT One V.23.4\nUFT One Interface\nRecord and Playback\nRecording modes\nDebug\nVirtual Object Wizard\nObject SPY\nSynchronization\nObject Repository Management\nLocal and Shared OR\nCheckpoints\nData Driven Test\nOutput values\nRecovery Scenario Manager\nBatch File\nAction\nBusiness Logic\nGetRO and GetTO Properties\nIntroduction to VBScript(till functions)\nAdv. VBScript AOM\nWorking with Expert View\nFSO\nDescriptive Programming\nAutomation Object Model\nIntroduction to Framework\nImplementation of Framework\nData-Driven | Modular | Keyword | Hybrid\nAPI Testing | AI Testing\nOur Advanced UFT/QTP training course focuses on:\nMicro Focus UFT certification orientation\nCore Automation concepts – why, how, when, what etc.\nProgramming basics and best practices using VB Scripting\nPractical Automation Project planning and framework designing\nPractical real time scenarios\nGuidelines on how to choose Test scripts for automaton\nDescriptive Programming and its scope\nStudy material to make the learning experience complete\nHands on assignments for thorough understanding of concepts",
      "target_audience": [
        "Beginners wants to start career in automation testing",
        "Want to learn latest Micro Focus UFT One from scratch to advance level",
        "Looking for how design a framework using Descriptive Programming"
      ]
    },
    {
      "title": "Software Testing :Effective Test Case Writing & Formatting",
      "url": "https://www.udemy.com/course/test-case/",
      "bio": "Must for all Manual Testers | Standard Test Case Format | Manual Testing Concepts | Test Case Designing Techniques",
      "objectives": [
        "Ready to write expert level testcases with proper details",
        "Improve existing test cases and write effective testcases using designing techniques",
        "Detailed understanding of test case designing techniques, where and how to use.",
        "Understanding of testcase formatting using Excel features",
        "Write test cases on ALM tool"
      ],
      "course_content": {
        "Introduction of Test Cases": [
          "Course Introduction",
          "What is Test Case | Why to write test cases",
          "Common Test Cases Asked | Points to be remember while writing test cases",
          "Standard Test Case Format & Its Components"
        ],
        "Jump into Test Case Writing | Formatted test case writing": [
          "Formatted test case writing : Test Case Id",
          "Formatted test case writing : Test Case Description",
          "Formatted test case writing : Pre-requisite or Pre-Conditions",
          "Formatted test case writing : Test Case Steps",
          "Formatted test case writing : Data or Test Data",
          "Formatted test case writing : Expected Result",
          "Formatted test case writing : Actual Result and Status",
          "Formatted test case writing : Comments"
        ],
        "Additional columns that can be used in test case format": [
          "Formatted test case writing : Priority of Test Case",
          "Formatted test case writing : Type of Test Case",
          "Formatted test case writing : Bug Id"
        ],
        "Test Case Designing Techniques | Improve Test Case Effectiveness": [
          "What is Test Case Designing Technique : Error Guessing",
          "Boundary Value Analysis",
          "Equivalence Class Partitioning"
        ],
        "Test Case Formatting in Excel": [
          "Freeze Row and Column",
          "Filter Test cases",
          "Sort test cases by different columns",
          "Conditional Formatting",
          "Data Validation - List",
          "Common Examples"
        ]
      },
      "requirements": [
        "Windows machine with basic software like Excel",
        "Excel 2010 or any upgraded version",
        "Basic understand of Software Testing concepts",
        "Basic understanding of different types of testing"
      ],
      "description": "Test cases are very important for any project as this is the first step in any testing cycle, and if anything goes wrong at this step, the impacts get extrapolated as you move forward in the software testing life-cycle.\nKnowing how to write good test cases is extremely important for you as a testing resource and believe you me, it doesn’t take too much of your effort and time to write effective test scripts! You just need to follow certain guidelines while writing test cases or as they call it – follow “test case writing best practices.”\nIn this course, I am going to talk about some simple yet effective tips which you could use for writing effective test cases.\nTest case writing is an activity which has a great impact on the testing phase and this makes test cases an important part of the test execution process!\nSo, writing test cases which are effective as well as reusable is very important; good test cases save a lot of time in the later stages of testing (really!) if you do it right in the first attempt…\nEffective Test Cases writing is a skill and you can acquire it only with practice and in-depth understanding of the application for which test cases are being written.\nIncorporating some simple tips I have given here will help you master the skill of test case writing.\nCoverage\nTest Case Introduction\nWrite Formatted Test Cases\nUse of each and every columns\nTest Case Designing Techniques\nTest Case Formatting (Basic Excel Features)\nTest Case Writing on ALM",
      "target_audience": [
        "Candidate looking opportunity in manual testing",
        "Manual Tester who are looking to write better test cases or want to improve existing testcases"
      ]
    },
    {
      "title": "Masterclass Software Quality Engineering | AI Testing",
      "url": "https://www.udemy.com/course/modern-principles-of-software-quality-testing-engineering/",
      "bio": "Quality Engineering, Modern Testing Principles, Devops for Quality Engineers, Automation Testing, Generetive AI - GPT",
      "objectives": [
        "Learn modern ways to look at quality for software projects that are consistent with todays principles",
        "Apply continuous improvement techniques to increase speed and quality",
        "Agentic Testing with Microsoft Autogen",
        "Agentic Testing with Flowise AI",
        "Understand how to use Artificial Intelligence to gain a productivity boost as well as help create powerful artifacts",
        "Agentic Testing with Playwright MCP and Github",
        "See how to rapid start a project by leveraging ChatGPT to deploy a Playwright frontend automation framework",
        "Use CHAT GPT to Create automated Performance Test Pipelines",
        "Understand how Shift Left on quality increases release cadence, prevents defects and improves quality",
        "Identify pitfalls in the development process and their corrective actions",
        "Leverage the power of Continuous Testing, Development and testing with proper tool setup and guidance of framework implementation",
        "Understand how Quality engineering principles are applied to agile deliveries to achieve in sprint automation and on time delivery",
        "Understand how to create your own AI Agents for Testing",
        "How to choose the right suited DEVOPS Testing pipeline",
        "Understand and improve the testing process as an expert, AI cannot teach you this",
        "Understand how test automation supports the overall quality approach and see some best practice to increase speed and reliability of execution",
        "Master the use of the Test Pyramid : unit, integration, UI tests",
        "Understand how to adapt your testing approach depending on the branching strategy that you have",
        "Understand how to create on Demand/Feature Environment and how they are used in Continuous Testing and Shift Left Approach",
        "Understand how LEAN principles apply to software development and gain know how on how to build a Value Stream Map to identity bottlenecks",
        "We will understand the 8 Wastes of TIMWOODS that affect software delivery teams"
      ],
      "course_content": {},
      "requirements": [
        "This is not an absolute beginner course, and as such some concepts are needed to make the most out of this material. These concepts are: Testing in general, Agile methodology, Software lifecycle, Containers and so on",
        "No programming experience needed",
        "Willingness to improve, curiosity and some patience",
        "A windows PC with Node and Vs Code"
      ],
      "description": "Unique on the Internet!\nThis course is designed for software developers, testers, quality engineers, DevOps professionals, and anyone interested in improving software quality through modern testing strategies and tools. Whether you’re a beginner seeking foundational knowledge or an experienced professional looking to adopt the latest techniques, this course provides actionable insights and practical applications to help you stay ahead in today’s fast-paced software development landscape.\nA huge number of laboratories and hands on activities await you in this material.\nBy the end of this course, you will have mastered the tools, techniques, and principles needed to deliver high-quality software projects efficiently. Let’s take a closer look at what you’ll learn:\nModern Approaches to Software Quality\nUnderstand how to align quality strategies with today’s industry standards to ensure success in modern software projects.\nContinuous Improvement Techniques\nLearn how to apply continuous improvement methods to increase speed and quality throughout the software development lifecycle.\nLeveraging Artificial Intelligence (AI) in Testing\nDiscover how to use AI tools to boost productivity, automate processes, and gain a competitive edge in quality assurance.\nKickstarting Projects with ChatGPT\nExplore how to use ChatGPT to deploy automated frontend testing using Playwright and start projects quickly and efficiently.\nAutomating Performance Test Pipelines\nLearn to design and implement automated performance testing pipelines that provide actionable insights into system bottlenecks.\nShift-Left Testing Approach\nUnderstand how adopting a \"Shift Left\" mindset improves release cadence, prevents defects, and enhances overall quality.\nIdentifying and Addressing Pitfalls\nGain the skills to spot common development challenges and implement corrective actions for seamless project delivery.\nContinuous Testing in DevOps\nMaster the integration of testing into a DevOps pipeline with the proper tools and strategies for continuous testing and delivery.\nQuality Engineering for Agile Deliveries\nLearn how quality engineering principles are applied to agile methodologies to achieve consistent and reliable results.\nBuilding AI Agents for Testing\nDiscover how to create your own AI-driven testing agents to automate and streamline repetitive testing tasks.\nChoosing the Right DevOps Testing Pipeline\nGet guidance on selecting and implementing the most suitable DevOps testing pipeline for your organization’s needs.\nImproving the Testing Process\nUnderstand the key factors that go into a successful testing process, focusing on areas where AI cannot substitute human expertise.\nTest Automation and Its Role in Quality\nExplore how automation supports the overall quality strategy and review best practices for implementation.\nMastering the Test Pyramid\nLearn the importance of unit, integration, and UI tests within the Test Pyramid framework and how to balance your testing strategy.\nAdapting Testing to Branching Strategies\nDiscover how to align your testing approach with various branching strategies to enhance development workflows.\nOn-Demand/Feature Environments in CI/CD\nUnderstand how to create on-demand and feature-specific environments and use them effectively in Continuous Integration/Continuous Delivery.\nLEAN Principles in Software Development\nLearn how LEAN principles can be applied to software development to reduce waste and improve efficiency.\nThe 8 Wastes of TIMWOODS\nIdentify the common inefficiencies in software delivery and gain practical tips on how to eliminate them.\nThis course combines theoretical knowledge with hands-on examples to help you build a robust skill set. Join now and take your testing and quality engineering expertise to the next level!",
      "target_audience": [
        "Quality Engineering Professionals",
        "Engineering Managers",
        "Full stack Testers",
        "Quality Assurance Advisors"
      ]
    },
    {
      "title": "TPT - Time Partition Testing using a Simulink Model - Part I",
      "url": "https://www.udemy.com/course/tpttime-partition-testing-with-matlabsimulink-training/",
      "bio": "Using TPT Tool for Verification & Validation of a MATLAB - Simulink/Targetlink Model; Develop Test Frame, Test Cases etc",
      "objectives": [
        "Able to Understand and configure TPT Tool better",
        "Able to Plan the Test activities in TPT and create more flexible test environment",
        "Able to develop test cases using different methods provided in TPT",
        "Able to develop basic assessment and perform a End to End Execution using MATLAB/Simulink model",
        "Understand the Basic Capabailities of TPT tool"
      ],
      "course_content": {
        "Introduction to TPT/Time Partition Testing Tool": [
          "Introduction to TPT/Time Partition Testing Tool & basics of Developing Test Case"
        ],
        "Developing Test case in Detail using TPT tool": [
          "Developing Test case in Detail using TPT tool - Step List VS Automaton"
        ],
        "Quiz | Test Case Development": [
          "Questions on Test Case Development in TPT"
        ],
        "Detail Options in a variant/Step List Test Case in TPT tool": [
          "Detail Options available in a variant/Step List Test Case to source the Model"
        ],
        "Assessments in TPT Tool": [
          "Test case Assessment - Part I",
          "Test Case Assessment - Part II"
        ],
        "Quiz | Assessment Knowledge": [
          "Assessment Knowledge"
        ],
        "Requirement Management, Linking, Tracebility Generation and Miscellaneous Option": [
          "Requirement Management, Linking, Tracebility Generation and Miscellaneous Option"
        ]
      },
      "requirements": [
        "Python (Basic)",
        "MATLAB Simulink (Basic)"
      ],
      "description": "In this Course we will learn different ways of developing test cases in TPT tool and method or procedure to configure a Platform to TPT tool. here we have used MATLAB/Simulink platform since MATLAB/Simulink is widely used for Automotive project development. TPT tool has various options and methods by which a test case can be developed and I have discussed recommended methods in this lecture to focus on beginners. Post that we will see the different methods of Assessing a test case and developing a report. We will do some programming in Python for assigning the test cases\nWhat is covered in this Course?\nDetail insight on Test case development\nDevelopment of Automaton/States/Testlets and using a Reference for simple Reusing of Variants\nDifferent options provided by Step List/Variant\nCreating and Configuring a Dashboard Player and Running in Parallel with Test case\nDeveloping Assessments using Python\nDeveloping Assessments using Singla Assessment API and UI Options\nGenerating and customizing Reports\nRequirement Management, Linking and Traceability\nCustomizing the Execution configuration for Handling Multi Core Execution\nExecution & Assess vs Assess Only and the concept of \".TPTBin\" Storage\nGeneration of Overview Report, Performing Reviews to Test Cases and Updating the Status\nDevelopment of Custom functions in python and reusing the functions for test case assessments\nBy end of this course an Entry level or Intermediate level engineer can understand the significance of TPT tool and able to generate Test frame, write basic test cases and assessments using a python script or Signal comparison assessment, create local variables, manipulate Test cases in parallel or using While loops or If Else Conditions",
      "target_audience": [
        "Automotive Verification & Validation Engineer",
        "Model in Loop (MIL) and Software In Loop (SIL) Validation Engineer",
        "Validation Engineer",
        "Functional Safety Engineer",
        "Test Harness Developer",
        "Validation Engineers Verifying a ISO26262 Qualified Model",
        "Validation Engineers Verifying a ASPICE (Automotive SPICE) Qualified Model"
      ]
    },
    {
      "title": "Get Expertise in Database Testing(SQL) + Linux for Testers",
      "url": "https://www.udemy.com/course/sql-for-testers/",
      "bio": "E2E Setup Installation |E2E Database Testing coverage|| Joins | Grouping|DDL|DML|DRL|Unix /Linux commands +Shell Script",
      "objectives": [
        "Detailed knowledge of Database/SQL queries and its implementation while working as Tester/QA",
        "Will be able to perform Database testing & validate data and other database factors",
        "Will get decent understanding of Unix/Linux and its implementation in testing tasks/activities",
        "Ready to perform complex database operations on realtime application",
        "Ready to Face Database Testing interviews with best practices and Examples",
        "Detailed understanding of advance concepts like Complex Joins, Grouping etc"
      ],
      "course_content": {},
      "requirements": [
        "Basic understand of Manual Testing Concepts and Implementation",
        "Basic understand of database and how and why we use Database in out applications"
      ],
      "description": "Course Updates\nMar 2024 :    Added videos related to Shell Scripting.\nApr 2022 :     Updated Setup Instructions, Now you can setup MySQL DB + Workbench, Also setup a sample DB for practice\nJul 2021  :      Updated Select query videos with better voice quality\nOct 2020 :      Added Sample questions for practice\n______________________________________________________________________________\nSQL & Unix for Software Testers\nThis course is specially designed for Software Testing professionals(Be it Manual or Automation), This will take students from basic level to advance in decent pace videos.\nHere we will cover SQL queries and Unix commands which we can use in daily QA activities and also we have covered many interview question which are asked in interviews.\nDatabase Testing Coverage\n1.  Basic Select Operations\n2.  Table Operations (DDL)\n3.   Delete data from table\n4.   Constraints\n5.   Interview Questions\n6.   Detailed DRL queries (Fetch data with different clauses)\n7.   Data Grouping and Filtration\n8.   Different Types of Joins(Inner, Outer, Self, Cross)\n9.   Detailed DML Operations (Update, Delete, Insert)\n10.  Best Practices for Software Testers\n11.  Realtime implementation of Concepts.\n12.   Interview Questions.\n13.   Practice Exercises with Solutions.\nIn today's competitive environment, companies need software testers who are having database as well as Unix/Linux knowledge, this course going to make you ready to perform basic to advance level backend QA activities.\nUnix/Linux Coverage\n1.  Need of Unix in Software Testing\n2.  Check Logs\n3.  Perform basic operations by command\n4.  Interview Questions\n5.  Shell Scripting\nThis course if very useful for professional who are looking opportunities in Manual and Automation Testing.",
      "target_audience": [
        "This is specially meant for software testers who are not familiar or having only basic knowledge of Database & SQL queries",
        "Software Testing & QA Professionals (Be it Manual or Automation Tester)",
        "Freshers looking opportunity in Software Testing",
        "QA profession looking to start work in domains like Finance, Telecom, Big Data etc"
      ]
    },
    {
      "title": "Fundamentals of Quality Assurance Engineer",
      "url": "https://www.udemy.com/course/fundamentals-of-quality-assurance-engineer/",
      "bio": "Learn How to Become a Software Quality Assurance Engineer",
      "objectives": [
        "Fundamentals of Quality Assurance Engineering",
        "How to approach testing",
        "Why test",
        "Identify different types of software testing",
        "Creating a test plan",
        "Know when testing is done"
      ],
      "course_content": {},
      "requirements": [
        "basic understanding of software development cycle"
      ],
      "description": "In this course you will learn how to become an effective test engineer. This course will teach you the fundamental practices of a Software Quality Assurance Engineer.\nWe'll get into what it is like to test software and how to do it. You'll learn about how to write a test cases and how to execute a test. Learn how to file a bug report and tips and tricks on becoming a better QA engineer.\nA software quality assurance engineer is someone who monitors every phase of the software development process so as to ensure design quality, making sure that the software adheres to the standards set by the development company. Software quality assurance engineers make sure that new products work before they are released to the public.\nTesting is something every developer must do to write effective and quality code, but going about what you should test and how to do it can be a challenging question.\nQuality Assurance is the practice of monitoring other developers' work and creating processes and tests that will ensure the product meets the end user’s expectations and limiting the amount of bugs that are released.\nSoftware delays are costly for a company, so it is vital for software releases to meet target dates and stay within budget. A software quality assurance engineer helps meet release deadlines by breaking up the development process into attainable testing goals and relaying any issues back to the development and product teams or leaders.\nBy the end of this course you will know what it takes to become a Software Quality Assurance Engineer.",
      "target_audience": [
        "Software developers, IT Professionals",
        "Anyone interested in QA Engineering"
      ]
    },
    {
      "title": "API automation for SDET - Bootcamp (RestAssured/ HttpClient)",
      "url": "https://www.udemy.com/course/api-restassured-httpclient/",
      "bio": "Automate API using Rest Assured and HTTPClient so that your existing Automation framework can be extended for API also",
      "objectives": [
        "You will be able to understand what the Webservices & API's are, and their functionality.",
        "Covered most popular API testing tools like Postman, SOAPUI, RestAssured and HTTPClient API Automation",
        "After completing this course you can start working on API & Webservices testing projects"
      ],
      "course_content": {
        "API Testing Using RestAssured": [
          "Introduction",
          "API testing in Agile and How to setup RestAssured and make Get Call",
          "How to call get method in BDD style and install Json Mock API",
          "How to call Post Method using String in RestAssured API",
          "How to call Post Method and Receive response in Java Object in RestAssured",
          "How to call Post Method using Json file in RestAssured API",
          "How to call Post Method using Java Class Object in RestAssured API",
          "How to call Post Method using Json Object in RestAssured API",
          "How to call PUT Method RestAssured API",
          "How to call Delete Method in RestAssured API",
          "How to test Soap Api using RestAsssured in Java"
        ],
        "API testing using Httpclient": [
          "How To Perform API testing in using Java HTTPClient",
          "How to test Rest API Post method using HTTPClient",
          "How to test Soap API using HTTPClient"
        ],
        "How to run test cases in TestNG Framework": [
          "Install TestNG and Execute TestNG Project",
          "Annotation in TestNG",
          "Setting the Priority of test cases in TestNG",
          "Setting groups in TestNG",
          "Set Dependency in Methods in TestNG"
        ],
        "How to build and run your project using Maven": [
          "Maven Architecture",
          "Installing and running Project using Maven"
        ],
        "How to commit and manage your code in Central Repository using Git": [
          "Git Architecture",
          "Git commands to manage and commit your code",
          "UI E-Git Plugin to manage and commit your code",
          "How to raise the PR for code review and resolve the merge conflicts of the code"
        ],
        "API and RestAssured Questions and Answers": [
          "API and RestAssured Questions and Answers Part-1",
          "API and RestAssured Questions and Answers Part-2",
          "API and RestAssured Questions and Answers Part-3"
        ]
      },
      "requirements": [
        "You should be having basic knowledge on testing concepts."
      ],
      "description": "Webservices/API Testing course is designed to make you an expert in working with Back end Testing.\nNowadays, almost all web applications use web services to communicate or interact with each other. Most modern day web services are built on Representational state transfer (REST) architecture; REST has gained a lot of popularity and it will continue to do the same due to its simplicity in comparison with other technologies.\n90%of the IT industry now heading towards this API for automating Services. On course completion You will be familiar with REST API testing using Postman, SOAPUI & RestAssured and can implement Successfully it in your work place or will surely land on High Paying Job.\n\n\nOther courses i offer on udemy\nSelenium Webderiver | Selenium Testing Framework | Appium | REST Assured  | RESTful API  | RESTful Web Services | Devops | Jenkins | Apache Maven | Python | Docker | Jmeter | Coding Interviewes",
      "target_audience": [
        "Developers and Testers"
      ]
    },
    {
      "title": "Unit Testing and Test Driven Development in Python",
      "url": "https://www.udemy.com/course/unit-testing-and-tdd-in-python/",
      "bio": "Learning the discipline of Test Driven Development (also known as TDD) Using the Python Programming Language",
      "objectives": [
        "How to implement unit tests in python using the discipline of Test Driven Development.",
        "How to use test doubles to decouple production code from the rest of the system to be tested in isolation."
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with the python programming language.",
        "You should have Python 2.7 or Python 3 installed."
      ],
      "description": "Test Driven Development is a key discipline every software developer should practice to ensure the quality of their code.  In this course I'll show you how to use this discipline in your everyday coding practices to help ensure the quality of your code base.\nIn this course we’ll be going over:\nWhat is Unit Testing and Test Driven Development and how does it help you.\nWhat is the PyTest testing library and how is it used for writing unit tests in Python.\nHow to setup some common Python development environments to use PyTest.\nWhat are Test Doubles and how do you implement and use them with unittest.mock.\nWhat are some Best Practices for unit testing and Test Driven Development.\nWe’ll also walk through some hands on example programming sessions using TDD in Python.",
      "target_audience": [
        "Anyone who wants to write better python code faster."
      ]
    },
    {
      "title": "Software Testing: Get A Tech Job in Software Testing 2025",
      "url": "https://www.udemy.com/course/get-a-job-in-technology-without-experience/",
      "bio": "Testing, Manual Testing, Software Testing, Qa, Qa Testing, Quality Assurance, Manual Software Testing, Jira & Job tips",
      "objectives": [
        "Learn the very basic fundamentals of Manual Software Testing.",
        "Lectures on resume and Interview. Learn Agile and waterfall methodologies.",
        "A complete lecture on freelance testing websites.",
        "Interview guide and bonus lecture on how to practice and make money from home"
      ],
      "course_content": {},
      "requirements": [
        "Motivation and willingness to learn",
        "Think big and Dream big!"
      ],
      "description": "LEARN SOFTWARE TESTING AND LAND A LUCRATIVE JOB IN TECHNOLOGY ASAP!\nThis course is focused on the very fundamentals and basics of MANUAL software testing, Qa, Qa tester, Manual tester, software Quality Assurance or Qa engineer. I have kept it very short and to the point. In my experience, whatever this course teaches is what you need to learn the basics of software testing.\nThe future of work is here. The Covid 19 pandemic has created a huge shift in our daily work and lives and most of the jobs are now shifting towards remote work. Technology sector is still booming in 2023 and this is the perfect time to get your foot in the door and find a remote job with flexible schedule.\n\nWHAT PEOPLE ARE SAYING ABOUT THIS COURSE\n\"Good Day Waqas,\nI took your course over a month ago, long story short I landed a job in the testing field!!\nThank you for this course! Be blessed!!\"\nAnother five star review:\n\"Simple, short, easy to understand. Good place to start one's software testing journey. Thank you.\"\nAre you one of those people who think you have to have a lot of experience and computer knowledge in order to get a high paying job in technology?\nWell, I am here to tell you that you don't need to have any experience in the technology field and you do not need to know computer coding to get a lucrative job in technology.\nSay Hello to \"SOFTWARE TESTING\" : A wonderful field which pays a lot of money. An average salary can range from $70,000 to $100,000 and this is without any Degree, certifications or special computer knowledge. Software testers are unique as this skill is not taught in schools or colleges. In fact, most people are not even familiar with the concept of software testing career. The truth is that every technology company needs software testers which is why there is a huge demand for this career right now and there will be a huge demand in the future as well.\nThis course is designed in such a way if that even if you have no experience, if you are non-technical or if you barely use the computer, you can still easily learn everything taught in this course and land a job in technology .\nThis course is for anyone who wants to have a wonderful stable career, people who want to support their families and live a rich and successful life.\nBenefits of this course:\nThis course will teach you fundamentals of software testing, from test planning to test cases to methodologies used in technology organizations as waterfall and Agile. This course will explain in detail what software development life cycle looks like, how to practice testing with live training demos, how to find bugs and many more.\nThis course will teach you:\nEverything about software testing: basics and fundamentals\nAfter you grasp the skills, you will learn how to make a resume\nYou will learn how to apply for jobs\nYou will also learn how to easily pass the interview and get a good job\nSo, don't wait and Register for this course Today! Good luck!",
      "target_audience": [
        "Anyone who wants to have a high paying career in technology",
        "Anyone looking to break into the technology field with no prior experience",
        "Beginner developers looking to learn about software testing"
      ]
    },
    {
      "title": "iOS XCUI Test (UITest) automation using Swift",
      "url": "https://www.udemy.com/course/ios-native-xcuitest-uitest-automation-using-swift-xcode/",
      "bio": "XCUI Test automation for iOS using Swift from basics",
      "objectives": [
        "****By the end of this course,You will be expert on XCUI Test with strong Core basics",
        "****You will get the ability to design XCUI Test automation framework from scratch",
        "****Good Understanding of realtime XCUI challenges with vast examples",
        "You will be able to automate any iOS app from scratch using XCUI test",
        "You can easily clear XCUI Interviews",
        "Deeper understanding of iOS Automation guidelines and coding standards",
        "You will become XCUI expert in 3 hours and can able to work on real time XCUI Projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course and UI testing",
          "Create mac instance in AWS (Skip if you have a mac laptop)",
          "Free XCUI Notes App"
        ],
        "Swift Basics": [
          "Swift",
          "Swift Variables",
          "Swift Decision making",
          "Swift for in and while loops",
          "Swift Methods and classes"
        ],
        "Getting started with XCUI Test": [
          "Getting started",
          "App Setup in Xcode",
          "Creating UI Test automation bundle and Test targets",
          "Launch and Terminate the app using XCUI"
        ],
        "XCUI : Basic concepts": [
          "Basic concepts",
          "XCUI Automation : record and play",
          "XCUI Automation : Identifying locators, Tap, Type",
          "Tapping an element using First match",
          "XCUI: Assertions",
          "XCUI : Screen swipes in XCUI & Code Refactoring"
        ],
        "XCUI : Advanced concepts": [
          "Advanced concepts",
          "Using conditions in XCUI",
          "Using Loops in XCUI",
          "Force tap using co-ordinates",
          "Using NS Predicate in XCUI",
          "References",
          "BDD (Cucumber) in XCUITest",
          "XCUI Test : Configure html reports",
          "Cucumber & html reports reference"
        ],
        "Quiz": [
          "Quiz : Lets evaluate your understanding."
        ],
        "E-commerce app automation": [
          "Automation of e commerce app",
          "E-commerce app automation"
        ],
        "Bonus 1 :User forms app automation": [
          "user forms app",
          "App intro",
          "Automating the app"
        ],
        "Bonus 2": [
          "Bonus contents",
          "Let us automate an another app",
          "Code refactoring [Added from old tutorial]",
          "Cucumber setup reference",
          "sample XCUI Test iOS Apps - Git links",
          "Swift",
          "Swift : Variables, Functions and Classes (Basics) - Added from old tutorial"
        ],
        "The Conclusion": [
          "The Conclusion"
        ]
      },
      "requirements": [
        "Mac Machine or AWS Mac instance",
        "Xcode"
      ],
      "description": "Welcome to Udemy's Best and Latest Updated XCUITest Automation Testing Course!\n\n\nDesigned for beginners eager to learn iOS UI Testing step by step, this course covers all the basics essential for mastering UI Testing using iOS. Upon completion, you'll have a solid foundation, enabling you to confidently automate any iOS app.\n\n\nWhether you're testing changes in an existing app, unsure about the appropriateness of your current tests, or starting a new app and want to test as you go, this course is tailored to your needs.\n\n\nWhat is XCUI?\n\n\nXCUITest, introduced by Apple in 2015, is a UI testing framework integrated into XCode. It facilitates the development of UI tests that accurately reflect users' interactions with the application.\n\n\nWhy is XCUI Test So Popular?\n\n\n1. Intuitive:\n\n\nXCUITest runs seamlessly within the XCode IDE, making it intuitive for developers.\n\n\n2. Fast:\n\n\nTest execution on iOS devices is faster than other UI test automation tools due to the framework's architecture.\n\n\n3. Reliable:\n\n\nThe framework's architecture ensures reliable test execution, eliminating flakiness.\n\n\n4. Mature:\n\n\nThe APIs and framework have matured significantly over the past year.\n\n\n5. Test Maintenance:\n\n\nWorking directly at the object level reduces maintenance efforts resulting from application changes.\n\n\nThis Course Will Cover:\n\n\n- How to test any iOS app using Xcode UI testing.\n\n\n- Script generation through Record and Play.\n\n\n- Automation code writing in Swift.\n\n\n- Identification of Accessibility locators.\n\n\n- Generating and viewing test reports\n\n\nMarket Demand:\n\n\nResearch shows that 77% of mobile users prioritize app performance before making a purchase. Additionally, 51% of app developers admit to not having sufficient time to test apps thoroughly before release.\n\n\nThe automation testing market is growing due to increased demand for automated testing processes, ensuring a seamless customer experience. This is fueled by the rising usage of cutting-edge technologies in software testing environments.\n\n\nThe fastest-growing market for automation testing is in Asia Pacific, with North America being the largest market.\n\n\nDon't wait! Enroll in this course now and become a skilled UI Test engineer for all iOS apps.",
      "target_audience": [
        "Developers and Testers who is looking to learn Native iOS UI Testing in Xcode",
        "QA Tester who wants to upgrade their skills",
        "Testers and developers who wants to learn most demanded automation skills in IT Industry"
      ]
    },
    {
      "title": "Cucumber BDD Masterclass with Selenium 4 & Java + Framework",
      "url": "https://www.udemy.com/course/cucumber-bdd-masterclass/",
      "bio": "Learn *real world* Cucumber BDD from scratch, develop robust framework with Selenium WebDriver, Page Object Model & APIs",
      "objectives": [
        "Learn real world Behavioral Driven Development (BDD) process with Live Example Mapping session",
        "Learn to develop Readable, Maintainable and Scalable framework using Cucumber and Selenium WebDriver by following Page Object Model design",
        "Framework optimization techniques - Multiple browser and Environment support, Config Properties, Constants, Enums, Page Factory Manager",
        "Learn about important Gherkin and Cucumber anti-patterns and different techniques to avoid them",
        "Master Cucumber fundamentals - Tags, Hooks, Expressions, Cucumber options",
        "Setup and drive Cucumber scenarios using different runners - JUnit, TestNG and CLI as well as Maven Command Line",
        "Implement Parallel execution using JUnit, TestNG and CLI",
        "Use Dependency Injection (DI) framework (Pico Container) for efficient State sharing and Parallel execution",
        "Learn the complete Gherkin syntax",
        "Learn how to write better Gherkin by following good practices",
        "Learn different ways to easily transform Data Tables (6 different shapes)",
        "How to use custom Parameter types and Data Table types to transform to Domain objects easily",
        "Seamless integration of APIs using Rest Assured to set the application state [Cookie injection to the browser]",
        "How to use Domain concept for effective step definition management thereby reducing huge maintenance effort",
        "Learn how to apply good programming practices like SRP, DRY and apply OOP concepts effectively",
        "Learn how to auto-trigger automation from Jenkins using GitHub Web Hooks, SCM Polling and Build Frequency",
        "How to generate and share Cucumber Reports on cloud and how to save the reports forever",
        "Learn supporting tools like Maven, Github and Jenkins"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "Important: How to get a better learning experience",
          "Important: When you need my help",
          "Java programming lectures"
        ],
        "The brief history of BDD": [
          "The Waterfall Model",
          "Agile Software Development",
          "Where Agile falls short",
          "TDD",
          "The birth of BDD",
          "What is BDD",
          "Agile with BDD and TDD",
          "Quiz"
        ],
        "BDD practices": [
          "BDD practices",
          "Discovery workshop",
          "Example Mapping",
          "BDD myths",
          "Download the presentation from here",
          "Quiz"
        ],
        "Demo Practice Website": [
          "Important note",
          "Introduction",
          "Additional information",
          "Alternate practice websites"
        ],
        "Example Mapping": [
          "Live Example Mapping session",
          "Let's do another Example Mapping session! - This will be fun"
        ],
        "Cucumber Project Setup": [
          "Setup pre-requisites",
          "Install and setup Java JDK",
          "AVOID JAVA 8, 9 OR 10",
          "IntelliJ - Maven project setup",
          "Eclipse - Maven project setup"
        ],
        "Gherkin Syntax": [
          "What is Gherkin",
          "Feature",
          "Scenario",
          "Steps",
          "Given, When, Then, And, But",
          "Steps Anti-patterns",
          "Scenario Outline",
          "Rule",
          "Background",
          "Background Tips",
          "Write our first Gherkin",
          "Quiz"
        ],
        "Gherkin Anti-patterns": [
          "Implementation details",
          "Incidental details",
          "Doing too many things",
          "Lengthy",
          "Conjunction Steps",
          "Lack of good names, Narratives and Rules",
          "Why avoid Anti-patterns",
          "Refactor our Gherkin",
          "Quiz",
          "Let's practice writing good Gherkin"
        ],
        "Runners": [
          "How Cucumber finds Step Definitions",
          "Runners to drive Cucumber",
          "Install Maven on Windows",
          "CLI",
          "JUnit",
          "TestNG",
          "JUnit Annotations",
          "TestNG Annotations",
          "Cucumber 7 Hooks: Before All and After All",
          "Quiz"
        ],
        "Cucumber Options": [
          "Cucumber Options",
          "Plugin",
          "Snippets",
          "Dry Run",
          "Monochrome",
          "Tags",
          "Glue and Feature paths",
          "Download sources and Java docs",
          "Quiz",
          "Let's try Cucumber Options and System Properties"
        ]
      },
      "requirements": [
        "Java programming knowledge is not required. I have got you covered with a dedicated section on Java concepts",
        "No BDD and Cucumber background required. I have explained both from scratch",
        "Selenium and Rest Assured basic knowledge is good to have",
        "No other prerequisite required except for dedication and an appetite to learn BDD and Cucumber in the right way"
      ],
      "description": "Course updates:\nNov 2023: The course fully supports latest Cucumber 7.14.0, latest JAVA 21, latest Selenium 4.15.0 and latest Rest Assured 5.3.2.\n\n\nWhy learn Behavior Driven Development (BDD) and Cucumber?\nCucumber is unarguably the most misunderstood and misused tool out there in the industry. It's not Cucumber's fault. It's rare to find a course online that teach Behavior Driven Development (BDD) and Cucumber in a way they are supposed to be used. There are many BDD myths floating around in the industry.\nThis course strives to bust all these myths and help you learn the real BDD and how to use Cucumber as a collaboration tool to efficiently support it.\nCucumber is very popular in the software industry. More and more companies want to use Behavior Driven Development (BDD) with Cucumber to improve their Agile process and efficiently run in-sprint automation. BDD can make your Agile process very efficient and productive. It can help you bridge the gap between business and technical folks through collaboration techniques and help you automate the specifications using collaboration tools like Cucumber.\nIndustry is moving towards shift left and that cannot happen without collaboration from the start. Today it is very rare to find a talent who knows real BDD and who knows how to use Cucumber efficiently to support it.\nThis course is going to teach you exactly these skills.\nAfter acquiring these skills, you are going to stand out from the crowd and likely to get a job because you will be one of those rarest species who knows the real BDD and Cucumber.\n\n\nWhy learn from this course?\nThis course is about Cucumber, and only Cucumber and everything else is used to support it. Unlike other courses, this course doesn't treat Cucumber as a side tool. The complete focus is on Cucumber and how to use it to support BDD process.\nOnly course to teach real world Behavior Driven Development (BDD) with Cucumber\nI have busted many BDD myths in this course, so rest assured, you will learn the right things\nMy reference point for all concepts are not other online courses or videos (that teach anything but fact), but the Cucumber official documentation and the creators material\nYou will learn how to use Cucumber efficiently using techniques like Domain concept, Custom Type, Dependency Injection and API integration\nYou will build a readable, maintainable and scalable framework along with me.\nYou will execute the code on a dedicated LIVE practice website. You can use this website to practice all your learnings from the course\nI explain all concepts in a very simple way with live coding\nI use clean code practices like SRP, DRY and apply OOP concepts to keep the amount of code at minimum\nI'm VERY RESPONSIVE in the Q&A section. I respond to queries within 24 hours. If the time zone difference is not that huge, I can respond within 3-12 hours.\n\n\nQuality material:\nThe course is filled with top notch content with excellent video and audio quality.\nThis is my fourth course on Udemy.\nMy first course \"Appium Mobile Automation - Android & iOS + Frameworks + CICD\" is a #1 Best Seller in the category.\nMy second course \"REST Assured API Automation + Framework: From Zero to Hero!\" is the Highest Rated course in the category with a rating of 4.7\nMy third course \"Selenium Java Test Framework & Best Practices - Masterclass\" is highly rated with rating of 4.7\nThese courses have received many 5 star reviews. Most of my students are enrolled into all of these courses.\n\n\nWhat you'll learn?\nLearn real world Behavioral Driven Development (BDD) process with Live Example Mapping session\nLearn to develop Readable, Maintainable and Scalable framework using Cucumber and Selenium WebDriver by following Page Object Model design\nFramework optimization tricks - Multiple browser and Environment support, Config Properties, Constants, Enum, Page Factory Manager\nLearn about different ways to avoid Gherkin and Cucumber anti-patterns\nMaster Cucumber fundamentals - Tags, Hooks, Expressions, Cucumber options\nSetup and drive Cucumber scenarios using different runners - JUnit, TestNG and CLI as well as Maven Command Line\nImplement Parallel execution using JUnit, TestNG and CLI\nEffectively use Dependency Injection (DI) framework (Pico Container) for State sharing and Parallel execution\nLearn the complete Gherkin syntax\nLearn about amazing ways to easily transform Data Tables (6 different shapes)\nHow to use custom Parameter and Data Table types to transform to Domain objects easily\nSeamless integration of APIs using Rest Assured to set the application state [Cookie injection to the browser]\nHow to use Domain concept for effective step definition management\nLearn how to follow good programming practices like SRP, DRY and apply OOP concepts effectively\nLearn how to auto-trigger automation from Jenkins using GitHub Web Hooks, SCM Polling and Build Frequency\nHow to generate and share the Cucumber Reports on cloud and how to save the reports forever\nLearn supporting tools like Maven, GitHub and Jenkins\n\n\nTechnology stack\nCucumber\nJava\nSelenium WebDriver\nTestNG\nJUnit\nMaven\nRest Assured\nJackson Data bind API\nGitHub\nJenkins\n\n\nWhat else is included in the course?\nYou can download all the code/notes used in the lectures for offline practice\nYou will get my full support in the Q&A\n\n\nMoney Back Guarantee:\nThere is no risk to take this course. Udemy has a 30 day money back guarantee. But you won't need it. This is my guarantee.",
      "target_audience": [
        "Teams struggling to apply real BDD and Cucumber in their projects",
        "Software engineers who are struggling with using Cucumber effectively in their automation",
        "Software engineers who are looking to build a no nonsense Cucumber automation framework to support BDD",
        "Anyone looking to become an expert in BDD and Cucumber and drive automation in their project"
      ]
    },
    {
      "title": "The Complete Cypress 13+ Course: From Zero to Expert!",
      "url": "https://www.udemy.com/course/the-complete-cypress-10-e2e-course/",
      "bio": "Write Automated UI & API test scripts using JavaScript or TypeScript(E2E Testing Type).",
      "objectives": [
        "Learn Cypress from scratch based on official documentation",
        "Automatic Waiting Functionality Explained",
        "UI Testing & Selector Strategies",
        "Patterns: Page Object Model, and UI Custom Commands",
        "API Testing with Token & Recommend Assertion Types",
        "Github Actions & Parallel Execution + Cypress Dashboard",
        "Cypress Origin & Cypress Session",
        "Cucumber BDD Template Project + Reports",
        "More content soon!"
      ],
      "course_content": {
        "Introduction & Installation Process": [
          "Welcome! Let's start learning Cypress.",
          "Source Code",
          "What is Cypress?",
          "Cypress Features",
          "Cypress Tread-offs",
          "Javascript or Typescript? Disclaimer",
          "Node JS & Visual Studio Code",
          "VS Code overview",
          "NPM & Package.json",
          "Install Typescript(OPTIONAL)",
          "Install Cypress",
          "Configuring Cypress for E2E Testing",
          "First Hello World",
          "Testing Javascript using Typescript + Cypress",
          "Test Runner - E2E time saving tip",
          "Conclusions",
          "Let's evaluate what you have learned!"
        ],
        "Test Framework - Mocha JS": [
          "Describe and IT",
          "Hooks: Before and After",
          "Hooks: BeforeEach and AfterEach",
          "Skip and only",
          "Let's evaluate what you have learned!"
        ],
        "Typescript Basics for THIS Course": [
          "Variables: Differences between Javascript and Typescript",
          "Functions: Differences between Javascript and Typescript",
          "Interfaces: Use Case",
          "More about Typescript"
        ],
        "Visit a website using Base URL & Cypress Subject Management": [
          "Get or visit a website using Cypress",
          "Base URL: A must concept",
          "Cy.visit with hooks",
          "Subject Management in Cypress",
          "cy.url and BDD assertion",
          "cy.title and its validation",
          "Challenge: Input & Button Scenario",
          "Locators Introduction and cy.get()",
          ".type()",
          ".click() and TDD Assertion",
          ".should() vs .then()",
          "All the assertions available!",
          "Keep it up!",
          "Let's evaluate what you have learned!"
        ],
        "CSS & XPath Selectors": [
          "Introduction",
          "cy.contains()",
          "cy.get() & cy.find()",
          "attribute locator - CSS Selectors",
          "class locator - CSS Selector",
          "MORE CSS SELECTORS",
          "XPath Overview",
          "How to install de XPath Dependency?",
          "Text locator - XPath Locator",
          "Attribute locator - XPath Locator",
          "XPath Challenge",
          "XPath Concat + Contains Trick for Classes",
          "Running the challenge completed",
          "Final Thoughts",
          "Let's evaluate what you have learned!"
        ],
        "Automatic Waits (Retry-ability explained)": [
          "Introduction",
          "Visit loading times with example",
          "Element loading times with example",
          "Progress bar challenge",
          "Best Practices Review",
          "Let's evaluate what you have learned!"
        ],
        "Click, Hover, and Dynamic Table Challenges": [
          "Click - Class and Background Validation",
          "Hovering a button - BEST SOLUTION",
          "Dynamic Table(row and column change)",
          "Let's evaluate what you have learned!"
        ],
        "Environment Variables, Viewport, and Checkboxes challenges.": [
          "Environment Variables: Setup and CLI example",
          "Test websites disclaimer",
          "Global Viewport Configuration",
          "Viewport Challenge Proposal",
          "Resolving the Viewport Challenge",
          "Handling a Checkbox/Input not displayed(WEIRD SCENARIO)",
          "Checkbox Challenge & doing the \"be.checked\" assertion",
          "Let's evaluate what you have learned!"
        ],
        "Double/Right Click, & Links(Spying requests)": [
          "Double, and Right Click",
          "Link Challenges - Introduction",
          "Link that opens a new tab - #1 approach",
          "Link that opens a new tab - #2 approach",
          "Spying an API request after clicking a link",
          "Backup & another website to test those scenarios",
          "Let's evaluate what you have learned!"
        ],
        "Broken Images, Upload/Download Files, & Iframes": [
          "Broken Images. How to test them?",
          "Challenge: Broken Images & first() + last() review.",
          "Upload a file(Select Dialog Box)",
          "Download a file",
          "Accesing Parent & Child IFrames(Nested)",
          "Typing inside an Iframe ({selectall}+{del}) secret.",
          "Let's evaluate what you have learned!"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript or a related programming language.",
        "Typescript is optional. You will learn the very basics in the process."
      ],
      "description": "Up to date with Cypress 13.0.0\n\n\nYou will learn Cypress Automation Basics(E2E testing type only) from scratch with multiple scenarios and good practices.\nJust JavaScript basic knowledge is necessary. I will develop examples using TypeScript, but If you understand JavaScript, you'll be capable to understand and develop your first TypeScript scripts with my support.\nWhat is Cypress io?\nCypress test framework is becoming one of the BEST web automation frameworks to setup your test automation scripts for E2E testing and Component testing. It is a great tool because is pretty easy to install, maintain, and write test scripts. Also, you can easily configure it with the most known CI/CD tools in the market. Learn Cypress Test Automation Today!\n\n\nCypress overview & feature highlight:\nCypress comes with a beautiful test runner that is going to help you as a QA Engineer to debug your test scripts, travel back in time to see what happened during the execution, and is perfect to change between your scripts with a friendly UI.\nBut also, you do not need the test runner, you only need to run command to run a full suite and get an HTML report.\nCypress is changing fast, and part of my objetive is bring to my students the newest features, and good practices to the course.\n\n\nHere are some high level topics that you will understand if you take this course:\nIntroduction: What is Cypress?\nInstallation and recommendations\nWhat is Mocha? What is Chai?\nHow to get or visit a website\nFind web elements by CSS or XPath locators\nRetryability: No need of wait type configurations (as we used to do in Selenium WebDriver)\nActions(Click, hover, tables)\nReal UI Scenarios: Viewport, Checkboxes, Buttons, Links, Broken Images, Download a file, Upload a File, Iframes, autocomplete,and so on.\nPage Object Model vs Actions(Custom Commands)\nAdvanced scenarios: Cookies, Fixtures, Aliases, Share Context, Excel Handling, Database Testing(MySQL), debugging, etc)\nCypress dashboard integration and CI/CD parallel execution with GitHub Actions.\nNew content will be added with your requests. I am planning to also cover Docker, CI/CD, and Cucumber in the near future.\n\n\nNote: Recording the course I was a bit nervous, and I made some English mistakes during the explanations. Hope you understand it, and check the notes with the corrections.",
      "target_audience": [
        "QA Manual Testers",
        "Automation Engineers",
        "Software Developers",
        "Project Managers",
        "QA Leads",
        "Test Engineers",
        "Software Developers in Test",
        "Web Developers",
        "Testers"
      ]
    },
    {
      "title": "Mastering Cucumber Java BDD: Build Efficient Automated Tests",
      "url": "https://www.udemy.com/course/mastering-cucumber-java-bdd-build-efficient-automated-tests/",
      "bio": "Master Behavior-Driven Development (BDD) Testing with Java and Cucumber for Efficient Automation",
      "objectives": [
        "Automation Testing",
        "Cucumber in Java from basics to advanced",
        "Learn best practices from true programmers",
        "Learn how to write scalable, readable and maintainable clean code",
        "You will learn source code of the tutor. All homework is completed with the Trainer",
        "Intellij Idea",
        "JUnit 5",
        "Cucumber basics",
        "Cucumber in Java",
        "Gradle basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to improve your course taking experience"
        ],
        "Course Materials": [
          "What is the project we will work on?",
          "What will we achieve in the end?"
        ],
        "BDD Overview": [
          "What is BDD?",
          "Real life samples from BDD",
          "Home task review BDD",
          "What is Cucumber BDD in Java"
        ],
        "Development Environment Setup": [
          "Java 17 Installation",
          "Gradle 7.3.3 Installation",
          "IntelliJ IDEA Community Edition Installation"
        ],
        "Test migration from JUnit to Cucumber": [
          "Setup right structure of project, folders, add dependency",
          "Create simple scenario to add two numbers",
          "Move simple Get Board scenario to BDD format in one single class",
          "Move simple Get Board scenario to BDD format in one single class - Hometask"
        ],
        "Java Cucumber Basics": [
          "Remove test data from steps, step arguments",
          "Remove test data from steps, step arguments - Hometask",
          "Data tables for couple parameters in steps",
          "Data tables for couple parameters in steps - Hometask",
          "Outlines",
          "Outlines - Hometask",
          "Backgrounds"
        ],
        "Java Cucumber Advanced": [
          "Ways to share data between steps",
          "Ways to share data between steps - Hometask",
          "Step arguments transformers",
          "Step arguments transformers - Hometask",
          "Hooks and tags",
          "Hooks and tags - Hometask"
        ],
        "Extra: Cucumber Test Runner and Reports": [
          "Junit cucumber test runner",
          "Junit cucumber test runner - Hometask",
          "Run tests via CMD",
          "Cucumber reports"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Some basic knowledge of Java"
      ],
      "description": "Are you ready to supercharge your software testing skills and become a proficient automation tester? Look no further! Welcome to our comprehensive course on \"Mastering Cucumber Java BDD: Build Efficient Automated Tests.\"\nIn today's fast-paced software development world, effective testing is crucial. Behavior-Driven Development (BDD) with Cucumber and Java has emerged as a powerful technique for writing efficient and maintainable automated tests. This course is your gateway to mastering this cutting-edge technology.\nWhat You Will Learn:\nFundamentals of BDD: Understand the core principles of Behavior-Driven Development and why it's revolutionizing the way we test software.\nCucumber Basics: Dive into Cucumber, a leading BDD framework, and learn how to write feature files that bridge the gap between business requirements and technical tests.\nStep Definitions: Harness the power of step definitions to translate feature files into executable code, making your tests come to life.\nData-Driven Testing: Explore advanced techniques for data-driven testing and learn how to create versatile and reusable test scenarios.\nIntegrating with Rest Assured: Combine the strength of Cucumber with Rest Assured to automate API testing like a pro.\nBest Practices: Discover industry best practices for structuring your BDD projects, writing clean and maintainable code, and collaborating effectively with your team.\nReal-World Projects: Apply your knowledge to real-world scenarios through hands-on projects that simulate the challenges faced by professional testers.\nWhy Enroll in This Course?\nPractical Skills: Gain hands-on experience and practical skills that are highly sought after in the software testing industry.\nInstructor Expertise: Learn from experienced instructors who have a proven track record in automated testing and BDD.\nCareer Advancement: Boost your career prospects by becoming proficient in a technology that is in high demand by leading companies.\nLifetime Access: Get lifetime access to course materials, updates, and a supportive online community.\nDon't miss this opportunity to become a certified Cucumber Java BDD expert. Enroll today, and take the first step towards a rewarding career in software testing!",
      "target_audience": [
        "People who want to learn Cucumber BDD from scratch to advanced level",
        "Students who want to become more valuable SDETs on careers market"
      ]
    },
    {
      "title": "Rest Assured API Automation Framework Developmt Zero to hero",
      "url": "https://www.udemy.com/course/rest-assured-api-automation-framework-zero-to-hero/",
      "bio": "Rest Assured API Automation Framework Development complete course- Beginner to pro || Real time examples",
      "objectives": [
        "***** At the end of this course, you will have a detailed understanding of REST API Automation Frameworks",
        "Build reusable methods, write different types of tests",
        "Ready to design REST API Testing Automation framework",
        "Publish amazing reports with logging of Request & Response Information",
        "You will understand how to generate neat Execution reports for execution results",
        "You will be able to DESIGN and IMPLEMENT structured AUTOMATION FRAMEWORKS with REST Assured API."
      ],
      "course_content": {
        "Introduction": [
          "Introduction of course and basic understanding of Rest Assured"
        ],
        "Basics about Rest APIs": [
          "Set up Maven Project",
          "How to automate HTTP GET request?",
          "How to automate HTTP POST request?"
        ],
        "Framework Creation Guide": [
          "Set up Maven Project",
          "Adding packages to framework",
          "How to create Property File",
          "Getting data from property file as Map Object",
          "Setting API Path",
          "Adding Headers Object configs",
          "How to configure extent report?",
          "How to test Extent Report and API framework Utils"
        ],
        "Real Time API automation": [
          "How to integrate GET request with Framework Part 1",
          "How to integrate GET request with framework and validate it. Part 2",
          "How to integrate POST request with framework?",
          "How to Validate HTTP Post request",
          "How to validate API response - Framework (Real time)"
        ],
        "Serialization and De-Serialization in Rest Assured": [
          "Serialization in Rest assured",
          "De-serilization Part 1",
          "De-serilization Part 2 & Understanding complex pojo for Serilization"
        ],
        "Advance concepts of Rest API automation in framework development": [
          "Base64 Encoding",
          "HMAC sha256 key generator java",
          "How to parse dynamic and nested JSON?",
          "How to parse Dynamic and nested JSON? Part 2"
        ],
        "Additional Content- Must watch": [
          "constructor in java, Need of constructor",
          "constructor chaining in java, constructor overloading",
          "Basics of cURL"
        ]
      },
      "requirements": [
        "Basic understanding of JAVA.",
        "Basic understanding of API, IDE, TestNg or JUnit"
      ],
      "description": "REST Assured is a powerful set of APIs to automate Restful APIs/Restful Webservices (just like Selenium WebDriver for Web Application). Almost all web applications use Rest APIs to communicate with back-end and it has gained a lot of popularity in the modern-day application architecture.\nIt is very important for QA/Automation engineers to understand how to Automate Rest API tests. Automating Rest APIs tests is very crucial for projects because Rest API tests are quick to run and more stable unlike web automation.\n90% of the IT industry is now moving towards Rest API Automation ---- So What are you waiting for ???\n\n\n********************* WHAT MAKES THIS COURSE BEST? *****************************\nAs per our study, Any one can learn Rest assured automation from YouTube Channels or Online blogs, but for them it will be a challenge to clear interview or real time work done.\n\n\nI assure that any one can start working on real time project after completing this course.\n\n\nNote: I don't want to make this course lengthy with adding few hours of Java, TestNg, Git or other stuff as it's framework specific.\n\n\nAt the end of this course you can pick any REST API over Net and can automate it comfortably with all necessary validations\nHappy Testing and Wish you Good luck!!!!!!!\nTeam\nFun Doo Testers",
      "target_audience": [
        "Freshers/Graduates/ Software Testers",
        "Any Software engineer who are interested in API automation"
      ]
    },
    {
      "title": "API Automation with REST Assured TestNG Cucumber & CI",
      "url": "https://www.udemy.com/course/api-test-automation-with-restassured/",
      "bio": "API Automation Framework from scratch with JDK 21, TestNG, Cucumber BDD, GitHub Actions, Jenkins, Docker [2024]",
      "objectives": [
        "REST Assured essentials step by step for REST API Automation",
        "Authentication with REST Assured: Basic, Digest and OAuth2.0",
        "TestNG Framework from scratch with CI and Maven",
        "Cucumber BDD Framework from scratch with CI and Maven",
        "CI Mastery with Jenkins, GitHub Actions and Dockerization for API Tests",
        "Serialisation and Deserialisation using built-in REST Assured features",
        "REST Assured built-in logging filters, cURL Attachments",
        "Around 40+ Multiple Choice Questions on RestAssured, Java and More",
        "Additional Markdown Theory Files with Lecture Notes",
        "Around 20 comprehensive downloadable resources",
        "Access to Interview Questions Attached with the Course",
        "This is fastest course to become a REST Assured expert",
        "Regular Updates Guaranteed - New lectures regularly added",
        "Theory and Cheat Sheets Attached and Updated",
        "You will learn API automation testing best practices and ideal approaches",
        "Everything on Advanced and Modern IDE IntelliJ Idea"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to The Course",
          "What you will learn - Course Highlights(Preview)",
          "Read Before You Enrol"
        ],
        "Installation and Resources": [
          "Course Resources - Clone Required Git Repos",
          "Installations of Maven, JDK21 and IntelliJ Setup"
        ],
        "Introduction to RequestSpecification Class - API Request from scratch": [
          "APIs in Plain English and Introduction to REST Assured",
          "RequestSpecification Class - How it all starts?",
          "Setup REST Assured and TestNG for New Project",
          "Our First API Call with Basics of Content Type & Headers",
          "Set Path and Query Params",
          "Request and Response Logging Filters and Pretty Print Option",
          "Reusing RequestSpecification and Given, When, And Syntactic Sugar",
          "RequestSpec Basics"
        ],
        "Assertions, Validations and Response Data Extraction": [
          "Response Validations, Hamcrest Matchers with JSONPaths",
          "Response Data extraction with JSONPaths",
          "Response JSON Schema Validation and Example of RootPath",
          "Response Extraction"
        ],
        "Basic and Digest Authentication with RestAssured": [
          "HTTP DELETE Call, Basic and Digest Auth Examples",
          "Custom on-demand Auth Headers",
          "Auth Quiz"
        ],
        "Serialisation & Deserialisation: Using Java Objects for Request and Response": [
          "Set Request Body: HTTP POST & PUT Call with Auth and Path Params",
          "Serialisation : Plugins to create POJO, Request Classes with Lombok",
          "Deserialisation: Parsing API Response as POJO and Assertions",
          "Response Parsing"
        ],
        "OAuth 2.0 with Imgur API Examples and File Uploads": [
          "Generate Imgur API Access and Refresh tokens",
          "OAuth 2.0: Multi-part file upload + OAuth 2.0 with RestAssured",
          "Create Access Token with refresh tokens"
        ],
        "RestAssured Framework with TestNG and Allure Reports": [
          "Framework Best Practices: SRP, DRY Principles",
          "Design Abstract Base HTTP Client",
          "Advanced Property Util with Aeonbits Owner API",
          "Design API Classes and Enums - Part I",
          "Design API Classes and Enums - Part II",
          "Design TestNG Test Classes - GET and POST Booking APIs",
          "Design TestNG Test Classes - Request Helper Util and PUT API Tests",
          "IntelliJ Code Style Changes and DELETE API Tests",
          "JavaFaker and TestDataUtil Class",
          "TestNG DataProvider with Java Streams and JavaFaker I",
          "TestNG DataProvider with Java Streams and JavaFaker II",
          "Setup Parallel Tests, Test Isolation, TestNG XML and Allure Reports",
          "CRUD Test Example with common DataProvider and BaseTest Class",
          "Retry Failed Tests with TestNG Listeners",
          "Awaitility DSL - Retry Code Blocks and Failed Assertions",
          "Maven Surefire: TestNG Parameters and Command Line Options",
          "Framework Quiz 1",
          "Update Booking Partially - HTTP PATCH Call."
        ],
        "Advanced Usage of JSONPath - Filter JSONs without Java Code": [
          "Examples of Jayway JSONPath - Advanced JSONPath Usage",
          "JSONPath Part I",
          "JSONPath Part II - Advanced"
        ],
        "RestAssured Framework with Cucumber BDD and Allure Reports": [
          "Introduction to Cucumber - Gherkins Keywords, DataTables, Arguments",
          "HTTP GET Example with Step Definitions and Folder Structure",
          "Cucumber Dependency Injection: Share Data Between Steps",
          "HTTP POST Api with DataTable and Scenario Outline(Examples)",
          "TestNG Cucumber Parallel Runner with Cucumber Configuration Options",
          "HTTP PUT and DELETE Call with DataTables and Step Arguments",
          "E2E CRUD Test With Validations",
          "Cucumber Pretty Plugin and Retry Failed Scenarios with TestNG",
          "Cucumber Global Hooks and Cucumber Feature File Tags",
          "Updated POM XML and Cucumber Command Line with Maven",
          "Framework Quiz 2"
        ]
      },
      "requirements": [
        "You have basic knowledge in writing test cases",
        "Basic Knowledge of Java"
      ],
      "description": "Welcome to the comprehensive course on API Automation with REST Assured, Java, TestNG+Cucumber & CI. If you're new to API testing and looking to dive into automation, this course is tailored just for you. We'll guide you step-by-step, starting from the basics and gradually building your skills to confidently automate API tests using RestAssured.\n\n\nNote: Java is not separately taught in this course.\nREST Assured with JDK 21 + Maven + TestNG + Cucumber and CI (IDE IntelliJ Idea)\n\n\nKey Features:\nIntroduction to API testing: We'll begin by explaining the fundamentals of API testing, its importance in modern software development, and the benefits of automation.\nWriting API tests: Dive into writing your first API tests using RestAssured. You'll explore various testing scenarios, such as CRUD operations, data validation, and error handling, while incorporating best practices for maintainable and scalable tests.\nCucumber and TestNG Essentials: We will take full advantage of Cucumber DataTables, TestNG DataProviders, Hooks and their inbuilt capability to generate reports.\nREST Assured essentials: Discover RestAssured, a popular Java-based library for automating API tests. You'll learn how to set up a development environment and use RestAssured to send requests, validate responses, and handle authentication.\nAutomate GET Api and validate response\nAutomate POST Api and validate response\nAutomate PUT Api and validate response\nAutomate DELETE Api and validate response\nTwo Test Framework Projects: Learn how to set up a robust test framework using popular tools like Maven and TestNG.\nOne framework with TestNG + Allure Reports + Maven + CI\nOne framework with Cucumber BDD + Allure Reports + Maven + CI\nAuthentication: Learn how to handle Basic, Digest and OAuth2.0 with RestAssured. We will use Imgur API to upload images using OAuth2.0\nMulti-part Form Data and File Uploads: Upload files using RestAssured. Examples with image uploads on Imgur server.\nTest reporting and assertions: Discover how to generate comprehensive test reports using TestNG and other reporting libraries. You'll also learn about different types of assertions to ensure the accuracy and reliability of your test results.\nCI Powerhouse: Dive into the world of Continuous Integration (CI) for REST Assured tests with brand new lectures on:\nGitHub Actions: Streamline your testing process with GitHub's powerful automation features.\nJenkins Pipelines: Master the art of creating robust and scalable CI pipelines.\nDocker Deep Dive: Demystify Docker and unleash its potential for building lightweight and portable testing environments. Dockerization for  your REST Assured framework.\nDocker + Jenkins Pipeline Mastery: Learn how to integrate Docker seamlessly into your Jenkins pipelines for a truly optimised workflow.\nTroubleshooting and debugging: Gain practical insights into troubleshooting common issues in API automation testing. We'll explore techniques to identify and resolve problems efficiently, ensuring smooth test execution.\nReal-world projects and best practices: Apply your skills to real-world projects, working on practical case studies that mimic real-life scenarios. We'll also share best practices and tips to help you create maintainable and efficient API test automation frameworks.\nInterview Questions with Answers attached at the last of this course.\nJSONPath, xPath, Cucumber CLI and Maven cheat sheets are attached with the course for keeping them handy all the time.\n\n\nBy the end of this course, you'll have a solid foundation in API test automation with RestAssured. You'll be able to confidently design and automate tests for RESTful APIs, ensuring the reliability and quality of your software applications.\n\n\nJoin us on this journey to become an API Test Automation expert with RestAssured! Enroll now and unlock a new world of possibilities in software testing.",
      "target_audience": [
        "Beginners who want to learn Api automation and framework design from scratch",
        "QAs who wants to scale their Api automation experience and knowledge to excel in career",
        "Automation QAs who wants to learn enterprise level Api automation with RestAssured"
      ]
    },
    {
      "title": "Learn by Example : Selenium for Automated Web Testing",
      "url": "https://www.udemy.com/course/learn-by-example-selenium/",
      "bio": "A comprehensive guide to Selenium using 45 solved examples on automating web testing",
      "objectives": [
        "Test functionality of web applications using Selenium WebDriver",
        "Automate boring and repetitive web based tasks",
        "Write maintainable scripts to test sophisticated web applications",
        "Run tests parallelly across different browsers"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of web programming, HTML, CSS, JavaScript etc"
      ],
      "description": "Selenium is a specialized, easy-to-use framework for automating interactions with web browsers, whether it’s to test the functionality of web apps that you’ve developed or to automate boring and repetitive tasks or to perform activities like scraping websites.\nIn this course, we’ll be working with Selenium’s Java API to test browser functionality and automate tasks using nearly 45 solved examples of use cases you might encounter on a regular basis. We’ll look at scenarios like\n1) scraping websites for specific elements identified by HTML tags, CSS selectors\n2) Testing User interactions of all kinds as click, entering text, drag and drop, selecting from dropdowns\n3) Automating Browser Navigation and Handling cookies\n4) Switching between your main browser window and pop-up alerts, embedded iframes\n5) Interacting with HTML5 based elements like video players\n6) and Parallelly running tests across multiple browsers and platforms from your local machine using Selenium Grid\nSelenium makes automating all the tasks we’ve mentioned very straightforward but as your tasks get more and more sophisticated you’ll want to use best practices to structure your code. We’ll talk about the Page Object Model design pattern and how you can use it to design testing scripts that are easy to maintain.",
      "target_audience": [
        "Yep! Students who have a basic understanding of web programming and are looking to learn how to test web applications",
        "Yep! Students who are looking to automate repetitive tasks in Web Programming"
      ]
    },
    {
      "title": "Python Web Automation testing|| Python Selenium Webdriver",
      "url": "https://www.udemy.com/course/python-web-automation-testing-python-selenium-webdriver/",
      "bio": "Python Web Automation , Python selenium , RobotFramework Python, Selenium, python automation, python selenium webdriver",
      "objectives": [
        "After this course they can know what i have learn and what we can do from it....",
        "Completely you can do website testing",
        "you will able to do automate websites,",
        "Try to implement it in many different ways then only you can know what you learnt from this",
        "Once you enrolled Stay connected to my course because i will update other modules like Hybrid Framework, Data driven framework...all things will updated as soon as possible in this course only",
        "****Robot Framework is Updated ****",
        "Even if you don't know about python, and selenium also no problem you can learn it from basics onwards in this course only ***Best course for beginners*** trust me the examples are very clear just practice it and grab the knowledge ****",
        "****Python selenium Testing**** if you're completed this course, if hope so you will gain knowledge from this",
        "****IF you need any other topics which is related to course ask me i will cover that too**** thank you",
        "Frequently i will update with some more modules, which will be very easy for you to understand.. so don't disconnect from the middle of the course"
      ],
      "course_content": {
        "Introduction": [
          "Course Content",
          "Why python",
          "Python Installation and Configure with selenium",
          "Python Installation Document",
          "Selenium configuration document",
          "Some Basic Data types",
          "Introduction to Python Shell",
          "Reserved Words in python",
          "How to create a python file using IDLE",
          "Python shell introduction",
          "How to execute python file using python shell",
          "How to over come from Indent block Errors please check am adding one resource",
          "Pycharm Ide",
          "Configure Python with Eclipse Ide",
          "Basic Operators",
          "How to over come indent block errors in python",
          "Strings",
          "Lists",
          "How to Print Reverse String",
          "Tuples",
          "Dict's",
          "Conditional Statements",
          "complex conditional statements",
          "For loop",
          "Introduction to Set Function"
        ],
        "Introduction to Set Function": [
          "python basic program",
          "Set functions part 2"
        ],
        "How to Change Python(older version to newer version) path in your Machine": [
          "Read this First",
          "Python path settings",
          "Python path setting step 2",
          "Python path setting step 3",
          "Python path setting step 4",
          "Python path setting step 5",
          "Python path setting step 6",
          "Python path setting step 7"
        ],
        "How configure Eclipse IDE with python": [
          "How to set python interpreter in Eclipse"
        ],
        "Selenium Scripts with python": [
          "FirstTestScript",
          "SecondTest SCript",
          "working with Firefox",
          "Taking screenshot with python selenium",
          "Login to facebook part1",
          "Login to facebook disable notification popup window",
          "Facebook Part 2 code explanation",
          "facebook part 3",
          "How can you write your own Dynamic Xpath (Customized Xpath)",
          "update your status in facebook using Dynamic Xpath in python selenium",
          "Dynamic xpath for status update in FB",
          "How to login to Gmail using python selenium part 1",
          "Gmail part2 logout",
          "Navigating Multiple Url's in a single window",
          "How to open a new tab using python selenium"
        ],
        "How to HANDLE multiple WINDOWS || Switch windows": [
          "Handling Multiple Windows (Switching Windows)",
          "Part 2 Handling windows Source Code",
          "Action Chains using Drag and Drops"
        ],
        "Cross Browser Testing Python selenium": [
          "Cross Browser Testing"
        ],
        "Python Traditional Coding method": [
          "Traditional way of python coding",
          "Traditional way of python coding"
        ],
        "Handling Webpage": [
          "How to Handle a Webpage",
          "Document for Handling Webpage",
          "How to Handle a dynamic webpage, ? Write a dynamic xpath for yahoo logout button",
          "How can you open a popup browser in python selenium"
        ],
        "Introduction to Robot Framework (Ride)": [
          "Robot framework (RIDE)",
          "Robot Framework Installation(RIDE)",
          "Important Tips and Don't Automate Dynamic html pages Website Continuously",
          "How to Import Selenium Library to Ride",
          "Scalar",
          "List Variable",
          "Dict variable",
          "How can you Create your Own User Keyword",
          "Using Tags How can we Execute Test Cases",
          "Working With Setup",
          "Setup and Teardown",
          "Conclusion",
          "Important notes to you",
          "Keypoints you need to remember while installing robotframework(ride)"
        ]
      },
      "requirements": [
        "Start a career in Automation,(python selenium), even if you're a complete beginner also no problem, this course will help you",
        "No knowledge is required in Selenium.",
        "If you don't know anything related to python, selenium Webdriver, no problem you can learn it from beginning here",
        "am created this course only for beginners, and job-seekers, who wants to start their career in Automation,(python selenium)",
        "***I can say this is the Best Course for you*** Because you can easily understand the concepts and you can execute the programs in easy ways if you follow this course correctly",
        "Learn Python selenium, Trust me It's a cake for Beginners",
        "*** Once you connected to my course Don't get disconnected because i had i will update robot frameworks, Data driven frameworks in this course only it will be very simple and easy for you :) ****Still now Robot framework is updated you can easily understand from beginning onwards",
        "***Robot Framework Module is Updated ****",
        "If you're looking for ****Python selenium testing course****, Then this course is only for you, codes are designed in different way According to requirements i had changed",
        "***Not always required to follow traditional coding method***",
        "Python web automation testing, python selenium testing, if you are interested to join in python selenium course, Trust me this is the best course, ***you will not find real time examples *** which is covered in this course",
        "Real time Examples we are using in day to day life :)",
        "One thing before you need to do, Once you enrolled if you get any doubts whatever it may be related to course, just drop me a message i will respond you back with in 24 hours...."
      ],
      "description": "Python installation\nPython configuration with selenium\nIntroduction to Python Shell\nHow to Create a Python file\nPython Basics\nNumbers\nStrings\nList\nTuples\nDict's\nPycharm Idle\nEclipse Configuration with python\nPython Basic Program\nConditional Statements\nLoop Statement\n\n\n*****Before going to test scripts please read the article if you get any errors related to python configuration with eclipse please check that document******\nFirst test script\nSecond test script\nTaking Screenshot\nFacebook example(part1, part2, part3)\nHow to update your status in Facebook using python selenium\nGmail Example(part1,part2)\nNavigating URL's\nHandling Web Page Elements\nHow to open a new tab or new window inside a browser\nHandling two windows, Switching two windows\nAction Classes\nCross Browser Testing\nInstallation Robot Framework (Ride)\nImportant points you need to remember while doing Automation\nHow to import Selenium library in RIDE\nHow to use Scalar?\nHow to use List variable?\nHow to use Dict Variable?\nHow to create your own User Keyword?\nHow to create tags and how can we execute test cases using tags?\nHow to use Setup?\nHow to use Setup and Teardown?\n\n\n***Introduction to Web Scraping is updated ***  stay tuned more modules :)\n\n\nEnd of the course\n------------------------------------------------------------------------------------------------------------------------------------------\nNo knowledge is required.\nIf you don't know anything related to python, selenium Webdriver,  no problem you can learn it from beginning here\nam created this course only for beginners, and job-seekers, who wants to start their career in Automation,(python selenium)\n***I can say this is the Best Course for you*** Because you can easily understand the concepts and you can execute the programs in easy ways if you follow this course correctly\nLearn Python selenium, Trust me It's a cake for Beginners\n*** Once you connected to my course Don't get disconnected because i had i will update robot frameworks, Data driven frameworks in this course only it will be very simple and easy for you :) ****Still now Robot framework is updated you can easily understand from beginning\n***Robot Framework Module is Updated ****\n**** Introduction to web scraping module updated  *****  **more modules i will be updating stay tuned**\n\n\nIf you're looking for ****Python selenium testing course****, Then this course is only for you, codes are designed in different way According to requirements i had changed\n***Not always required to follow traditional coding method***\nPython web automation testing, python selenium testing, if you are interested to join in python selenium course, Trust me this is the best course, ***you will not find real time examples *** which is covered in this course\nReal time Examples we are using in day to day life  :)\nOne thing before you need to do, Once you enrolled if you get any doubts whatever it may be related to course, just drop me a message i will respond you back with in 24 hours....\nAnyone can learn this course,  if they doesn't know anything about Automation Testing also they can understand from beginning in this course\nYou need to have passion then only you can reach your goal,\nJust practice and execute code in new way :) Trust me you can do it, if you follow this course content correctly and Once you Enrolled stay connected more modules are coming i will update as soon as possible\n****Trust me I had given my best to you****\n***If you wants to start your career in Automation(Selenium with python) This course for you only***\nIf you're a beginner also no problem you can easily understand the concepts, coming to selenium it will be very easy trust me i had simplified the coding part too***\nAfter this course they can know what i have learn and what we can do from it....\nCompletely you can do website testing\nyou will able to do automate websites,\nTry to implement it in many different ways then only you can know what you learnt from this\nOnce you enrolled Stay connected to my course because i will update other modules like Hybrid Framework, Data driven framework...all things will updated as soon as possible in this course only\n****Robot Framework is Updated ****\nEven if you don't know about python, and selenium also no problem you can learn it from basics onwards in this course only ***Best course for beginners*** trust me the examples are very clear just practice it and grab the knowledge ****\n****Python selenium Testing**** if you're completed this course, if hope so you will gain knowledge from this\n\n\n\n\n---------------------------------------------------------------------------------------------------------------------------------------------\nAs a beginner  this will help you and more examples you can do also, in next sessions i will discuss about frameworks but before going to this you need to have basic knowledge about this which we had discussed and you need to practice well then only in our next sessions you will get understand easily.\n\n----------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n\n***Don't go directly to robot framework section*** without completing the basics, if you do that nothing you gain....\nOnce you enrolled don't get disconnected\nStill now Covered  python selenium, Robot framework\nNext modules will be updated as soon as possible stay connected, Don't get disconnect from the course,\n\n\n\n\n\n\nIf you need any help, just ping me :)\n---------------------------\nI had given one assignment don't google it and you need to create your own example and send it to me",
      "target_audience": [
        "Anyone can learn this course, if they doesn't know anything about Automation Testing also they can understand from beginning in this course",
        "You need to have a passion then only you can reach your goal,",
        "Just practice and execute code in new way :) Trust me you can do it, if you follow this course content correctly and Once you Enrolled stay connected more modules are coming i will update as soon as possible",
        "****Trust me I had given my best to you****",
        "***If you wants to start your career in Automation(Selenium with python) This course for you only***",
        "If you're a beginner also no problem you can easily understand the concepts, coming to selenium it will be very easy trust me i had simplified the coding part too***"
      ]
    },
    {
      "title": "Manual Testing for Complete Beginners",
      "url": "https://www.udemy.com/course/manual-testing-for-complete-beginners/",
      "bio": "Master Manual Testing: Learn Test Cases, Bug Reporting, and Software Quality Assurance from Scratch",
      "objectives": [
        "Test Scenario Writing",
        "Test Case Writing",
        "Test Execution",
        "Defect Reporting"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Content"
        ],
        "Roles in the Software Development Lifecycle": [
          "Requirements Engineers",
          "UI/UX Designers",
          "Front-End, Back-End, & Mobile Developers",
          "Project Manager & Scrum Master"
        ],
        "How Software is Developed - Software Development Lifecycle Models": [
          "Waterfall Model",
          "V-Model",
          "Agile Software Development",
          "Incremental & Iterative Development",
          "Introduction to Scrum",
          "Difference between Sequential, Iterative, & Incremental Development",
          "Summary"
        ],
        "Basic Concepts of Software Testing": [
          "What is Software Testing",
          "Difference between Static & Dynamic Testing",
          "Validation & Verification",
          "Objectives of Testing",
          "Testing & Debugging",
          "Test Process",
          "Test Levels",
          "Test Types",
          "What's Next"
        ],
        "Test Scenario Writing": [
          "Creating Test Scenarios",
          "Tools to help in writing Test Scenarios",
          "Setting Up Trello",
          "Facebook Valid Sign Up Test Scenarios",
          "Valid Password Test Scenarios",
          "Invalid Sign Up Test Scenarios",
          "Invalid Sign Up Test Scenarios Part 2",
          "Invalid Sign Up Test Scenarios Part 3",
          "Login Valid Scenarios",
          "Login Invalid Scenarios"
        ],
        "Black-Box Test Techniques": [
          "Introduction to Black-Box Techniques",
          "Equivalence Partitioning Definition",
          "Equivalence Partitioning Examples",
          "Equivalence Partitioning Practical Examples",
          "Boundary-Value Analysis",
          "Boundary-Value Analysis Example #1",
          "Boundary-Value Analysis Example #2",
          "Notes About Equivalence Partitioning & Boundary-Value Analysis",
          "Decision Table Testing",
          "Decision Table Testing Example",
          "State-Transition Testing",
          "Pairwise Testing"
        ],
        "Test Case Writing": [
          "How to Write a Test Case",
          "Preparing Google Sheets for writing Test Cases",
          "Writing First Sign Up Test Case",
          "Valid Sign Up Test Cases",
          "Valid Sign Up Test Cases Part 2",
          "Invalid Sign Up Test Cases Part 1",
          "Invalid Sign Up Test Cases Part 2",
          "Invalid Sign Up Test Cases Part 3",
          "Test Case Document Link"
        ],
        "Test Case Writing using Zephyr Scale": [
          "Signing Up to Jira",
          "Adding Zephyr Scale to Jira",
          "Updated version of Zephyr",
          "Creating Test Cases in Zephyr Scale",
          "Test Case Details",
          "Permissions",
          "Creating Folders",
          "Test Cycles",
          "Importing & Exporting Test Cases",
          "Configurations Part 1",
          "Configurations Part 2",
          "Reusing Test Cases - Call to Test",
          "Adding Parameters to Test Cases",
          "Creating BDD Test Cases",
          "Exporting Test Cases from Zephyr Scale to Cucumber",
          "Data-Driven Testing in Zephyr Scale",
          "Creating Data Sets in Zephyr Scale",
          "Clone, Archive & Delete Test Cases",
          "Creating Test Cases in Bulk",
          "Bidirectional Traceability in Zephyr Scale",
          "Tracking Progress using Test Cycles",
          "Editing, Cloning & Deleting Test Cycles",
          "Test Plans in Zephyr Scale",
          "Using AI to write & run Test Cases in Zephyr Scale",
          "Adjusting AI-based Test Cases",
          "Reports in Zephyr Scale",
          "Zephyr Scale Summary"
        ],
        "Test Execution & Defect Reporting": [
          "Introduction to Defect Reporting",
          "Defect Report Writing",
          "Types of Defects",
          "Defect Triage Simulation",
          "Taking Screenshots & Recording Videos for the Defect Report",
          "Capturing Web Logs for the Defect Report",
          "Creating a Defect Report in Jira",
          "Creating a Defect Report in Azure DevOps",
          "Defect Lifecycle",
          "Will you report those Defects?",
          "Accessibility Testing & Accessibility Defects using Axe DevTools",
          "Conclusion & What's Next?"
        ],
        "Testing Reports: Test Progress & Test Summary Report": [
          "Introduction to Test Reporting",
          "Know your Audience first",
          "Test Plan Template & Components",
          "Test Progress & Completion Reports"
        ]
      },
      "requirements": [
        "General Knowledge About Technology",
        "Mouse & Keyboard"
      ],
      "description": "Are you looking to start a career in software testing or improve your manual testing skills? This course is designed to provide a comprehensive understanding of manual testing, covering everything from basic concepts to real-world application. Whether you’re a beginner or someone looking to solidify your knowledge, this course will guide you through the essentials of software testing without requiring any prior experience in coding.\n\n\nYou will learn how to write effective test cases, execute test scenarios, and report defects professionally. We’ll explore key testing methodologies, software development life cycles, and the role of a tester in ensuring software quality. Additionally, you will gain hands-on experience in identifying bugs, creating detailed defect reports, and verifying fixes to ensure high-quality software.\n\n\nThis course also includes best practices for test documentation, understanding different testing types, and working with real-world examples to prepare you for a career in manual testing. You will get practical assignments and exercises to reinforce your learning, making sure you can confidently apply your knowledge in real projects.\n\n\nBy the end of this course, you will have a strong foundation in manual testing, allowing you to work as a tester and contribute effectively to any software development team. Enroll now and take the first step toward becoming a skilled manual tester!",
      "target_audience": [
        "Software Engineers",
        "Software Testers",
        "QA Engineers"
      ]
    },
    {
      "title": "Selenium Java Made Easy for Beginners (Learn in 30 days)",
      "url": "https://www.udemy.com/course/selenium-java-made-easy-for-beginners/",
      "bio": "Includes Framework Development and Indetailed, Practical and Solution Oriented Videos along with Notes for each topic",
      "objectives": [
        "Selenium",
        "Core Java for Selenium"
      ],
      "course_content": {
        "Introduction": [
          "Day 1 - Introduction to Selenium (Video)",
          "Day 1 - Introduction to Selenium (Notes)",
          "Use SelectorsHub in place of ChroPath",
          "SelectorsHub - The Best Alternative",
          "Day 2 - Locators (Video)",
          "Day 2 - Locators (Notes)"
        ],
        "Java for Selenium": [
          "Day 3 - Java (Part 1) - Getting Started with Java (Video)",
          "Day 3 - Java (Part 1) - Getting Started with Java (Notes)",
          "Day 4 - Java (Part 2) - Variables, Data Types, Literals and Operators (Video)",
          "Day 4 - Java (Part 2) - Variables, Data Types, Literals and Operators (Notes)",
          "Day 5 - Java (Part 3) - Flow Control Statements (Video)",
          "Day 5 - Java (Part 3) - Flow Control Statements (Notes)",
          "Day 6 - Java (Part 4) - Arrays, Methods and Variables (Video)",
          "Day 6 - Java (Part 4) - Arrays, Methods and Variables (Notes)",
          "Day 7 - Java (Part 5) - Classes, Objects, Strings and Wrapper Classes (Video)",
          "Day 7 - Java (Part 5) - Classes, Objects, Strings and Wrapper Classes (Notes)",
          "Day 8 - Java (Part 6) - Consturctors, this, Overloading and Packages (Video)",
          "Day 8 - Java (Part 6) - Consturctors, this, Overloading and Packages (Notes)",
          "Day 9 - Java (Part 7) - Inheritance, Overriding and Modifiers (Video)",
          "Day 9 - Java (Part 7) - Inheritance, Overriding and Modifiers (Notes)",
          "Day 10 - Java (Part 8) - Interfaces and Exception Handling (Video)",
          "Day 10 - Java (Part 8) - Interfaces and Exception Handling (Notes)",
          "Day 11 - Java (Part 9) - Handling Files and Collections Framework (Video)",
          "Day 11 - Java (Part 9) - Handling Files and Collections Framework (Notes)"
        ],
        "Selenium WebDriver": [
          "Day 12 - WebDriver (Introduction, Downloading, Configuration and API Commands",
          "Day 12 - Notes",
          "Day 13 - WebDriver API Commands and Executing Scripts on different browsers",
          "Day 13 - Notes",
          "Day 14 - Handling Windows, Alerts, Drop-downs, Multi-Selection,Waiting Mechanism",
          "Day 14 - Notes",
          "Day 15 - XPath Expressions - Cheatsheet (Part 1)",
          "Day 15 - Notes",
          "Day 16 - XPath Expressions - Cheatsheet (Part 2)",
          "Day 16 - Notes",
          "Day 17 - CSS Selectors - Cheatsheet",
          "Day 17 - Notes",
          "Day 18 - Handling Frames, Lightbox, Actions class and Keys class",
          "Day 18 - Notes",
          "Day 19 - Taking Screenshots, Handling Auto-suggest Dropdowns, Calendar & Tables",
          "Day 19 - Notes"
        ],
        "Framework Concepts": [
          "Day 20 - Maven, WebDriverManager, Automating End to End scenario and Debugging",
          "Day 20 - Notes",
          "Day 21 - TestNG (Part 1) - Installation,Configuration,Annotations and Assertions",
          "Day 21 - Notes",
          "Day 22 - TestNG (Part 2) - testng.xml, Commenting,Groups and attributes",
          "Day 22 - Notes",
          "Day23 - TestNG Parameterization,Listeners,DataDrivenTesting & Parallel Execution",
          "Day 23 - Notes",
          "Day 24 - Selenium Grid, Properties (Global Parameters) and SelectorsHub Addon",
          "Day 24 - Notes",
          "Day 25 - Maven Commands and Jenkins",
          "Day 25 - Notes",
          "Day 26 - Extent Reports and POI API",
          "Day 26 - Notes",
          "Day 27 - Log4j2 and Test Data from Database",
          "Day 27 - Notes",
          "Day 28 - Page Object Model, Page Factory and AutoIt",
          "Day 28 - Notes",
          "Day 29 - Cucumber and BDD (Part 1) - Installing,Feature Files & Step Definitions",
          "Day 29 - Notes",
          "Day 30 - Cucumber and BDD (Part 2) - Runner, Scenario Outline & Background",
          "Day 30 - Notes",
          "Day 31 - Cucumber and BDD (Part 3) - Regular Expressions, Report and Tags",
          "Day 31 - Notes",
          "Day 32 - Cucumber & BDD (Part 4) - Hooks, DataTables, Integrating TestNG & Maven",
          "Day 32 - Notes"
        ],
        "Developing a Framework and Automating Live Project": [
          "Day 33 - Developing a Framework and Automating Live Project (Part 1)",
          "Day 33 - Notes",
          "Day 34 - Developing a Framework and Automating Live Project (Part 2)",
          "Day 34 - Notes",
          "Download Framework Here"
        ],
        "Git, GitHub and SauceLabs": [
          "Day 35 - Git, GitHub and SauceLabs",
          "Day 35 - Notes"
        ]
      },
      "requirements": [
        "No pre-requisites required"
      ],
      "description": "If you are a beginner, who want to learn Selenium from scratch without having any Programming knowledge, then this course is for you.\n\n\nIf you can complete a video a day, you will be able to complete this course in 30 days.\n\n\nAll the pre-requisites like Core Java, Locators etc. are covered in this video course, so you don't have to learn them separately.\nEven Core Java that is required for learning Selenium is covered in detail and easy way.\n\n\nAll the topics are explained in a beginner friendly and easiest way.\n\n\nIn 30 days, this optimised and well organised course will make you an expert in Selenium and will boost your confidence like anything.\nWe have also provided the notes, so that you don't have to go through the videos again and again. Go through the videos once and later use the notes to recollect and prepare fast when needed and for interviews.\n\n\nThe below are the topics covered in this course:\n\n\nIntroduction\nLocators\nXPath Expressions Cheat-sheet\nCSS Selectors Cheat-sheet\nCore Java for Selenium in detail\nWebDriver Commands in detail\nSelenium and different browsers\nHandling Alerts\nHandling Windows\nWaiting Mechanism\nHandling Frames\nHandling Lightbox\nActions Class\nKeys Class\nTaking Screenshots\nAuto Suggestive Drop-downs\nHandling Tables\nHandling Calendar\nMaven\nWebDriverManager\nEnd to End Scenario automation\nDebugging Scripts\nTestNG\nSelenium Grid\nProperties\nSelectorsHub\nMaven Commands\nJenkins\nExtent Reports\nPOI API\nLog4j\nAccessing Test Data from Database\nPage Object Model and Page Factory\nCucumber and BDD,\nDeveloping a framework\nGit\nGitHub\nSauceLabs.",
      "target_audience": [
        "If you are a Beginner and want to finish up learning Selenium in 30 days, then this course is for you.",
        "And also this course is also for Beginners who want to learn Selenium along with Core Java that is required for learning Selenium."
      ]
    },
    {
      "title": "ASP.NET Core Integration Testing with CI/CD Pipeline",
      "url": "https://www.udemy.com/course/aspnetcore-integration-testing-with-cicd-githubactions-azurewebapp/",
      "bio": "Learn Performance Testing with JMeter and Complete CI/CD Pipeline with GitHub Actions Workflow and Azure Web Apps",
      "objectives": [
        "An overview of Integration Testing. Learners will gain a solid understanding of what integration testing is, its importance in software development.",
        "Develop proficiency in designing and implementing integration tests: Learners will learn various strategies for designing effective integration tests.",
        "How to create integration tests using Microsoft ASPNET Core? Learners will delve into the process of setting up test environments and configuring test data .",
        "Usage of XUnit Test framework for integration tests. Learners will learn how to leverage XUnit's features, such as test fixtures, test runners, assertions.",
        "Understand the concept of Mock Repositories. Learners will grasp the concept of simulating data access behavior in tests, isolated and controlled testing",
        "Learn how to use In-Memory Databases for Testing. Learn to employ lightweight, transient databases for efficient and isolated testing.",
        "Develop a robust testing strategy for data access code. Create robust tests for data access code: comprehensive coverage, handle edge cases, data integrity",
        "Gain hands-on experience in conducting integration tests: Through practical exercises, learners will gain hands-on experience in conducting integration tests."
      ],
      "course_content": {
        "Introduction": [
          "Encouraging Constructive Feedback: A Message to Our Udemy Students",
          "Latest Additional Section (in the Course)",
          "What is Test Driven Development?",
          "Unit Testing versus Integration Testing",
          "Introduction to Integration Testing",
          "Benefits of Integration Testing",
          "Types of Integration Testing",
          "Integration Testing with ASP.NET Core",
          "Integration Testing Concepts",
          "Integration Testing Benefits and Approaches"
        ],
        "Creating the System Under Test (SUT)": [
          "Installing the Pre-requisites",
          "Creating the SUT (ASP.NET 7 Web API) project",
          "Install the NuGet Packages",
          "Why Did We Use SQLite In-memory Database For the SUT?",
          "Create the Entity Model",
          "Create the Database Context Class",
          "Seed the Database",
          "Create the Model Controller",
          "Edit the Program Class",
          "Commit the SUT Project to GitHub",
          "System Under Test"
        ],
        "Fluent Assertions in Testing": [
          "Introduction to Fluent Assertions",
          "Setting Up Fluent Assertions",
          "Basic Assertions with Fluent Assertions",
          "Advanced Assertions with Fluent Assertions",
          "Create Custom Person Assertions with Fluent Assertions",
          "Test the Person Assertions",
          "Best Practices For Fluent Assertions",
          "Testing Fluent Assertions Skills"
        ],
        "Integration Testing Of The Database Layer (API Integration Testing)": [
          "Introduction to Integration Testing in the Database Layer",
          "Get the Todo Api Starter Code from GitHub to Work",
          "Create a xUnit Test Project",
          "Integration Test to return a list of Todo Items",
          "Integration Test to Return a Todo item with a particular Id and a Success Code",
          "Integration Test to Return a Todo Item with an Id Results in Not Found Status",
          "Integration Test to Create a Todo Item Should Create a New Todo Item",
          "Integration Test to Put a Todo Item Should Update the Existing Todo Item",
          "Integration Test to Delete a Todo Item Deletes an Existing Todo Item",
          "What type of tests will you classify the ones covered in this section ?",
          "How do we explain the use of database in tests that don't use dbContext ?",
          "Integration Testing with Mock Repository in ASP.NET Core Web API"
        ],
        "Integration Tests for Data Access Code": [
          "Create the ITodoItemRepository Interface",
          "Create the MockTodoItemRepository Class",
          "Create Test Class with Infrastructure to Test MockTodoItemRepository",
          "Integration Test For Verifying Todo Item Retrieval by its ID",
          "Integration Test For Verifying Todo Item Creation in the Database",
          "Integration Test For Verifying an Update on a Todo Item to the Database",
          "Integration Test to Verify the Deletion of a Todo Item",
          "Testing Your Skills on Data Access Testing"
        ],
        "Edge Cases and Special Functionalities": [
          "Targeting Specific Functionalities and Edge Cases",
          "Get Request to Invalid Id Returns Not Found Status Code",
          "Posting Invalid Input Returns Bad Request",
          "Updating a request to an Invalid Id Returns Not Found Status Code",
          "Installing the Pre-requisites for JMeter",
          "Concurrency Testing: Edge Case GET Request Performance with JMeter",
          "Adding an Assertion to GET Request",
          "POST Request Performance With JMeter",
          "PUT Request Performance With JMeter",
          "DELETE Request Performance With JMeter",
          "Testing High Server Load Demands With JMeter",
          "Edge Cases Assignment"
        ],
        "Continuous Integration and Continuous Delivery/Deployment Using Azure Web Apps": [
          "Introduction to CI/CD",
          "Setting Up the Development Environment for CI and CD",
          "Exploring GitHub Actions Hands-On",
          "Understanding the .NET GitHub Actions Workflow",
          "Containerization with Docker",
          "Understanding the Dockerfile",
          "Docker Hub Integration",
          "Creating the Continuous Integration Pipeline for the Todo Api Application",
          "Workflow Setup for Todo API Project",
          "Deploying to Azure Web Apps and Testing Continuous Deployment",
          "Understanding the Azure Deployment Workflow",
          "Testing the Complete CI/CD pipeline",
          "CI/CD Quiz",
          "Course Presentation Slide Show"
        ],
        "Practice Test (On the Entire Course)": [
          "Comprehensive ASP.NET Core Integration Testing and CI/CD Pipeline Test"
        ],
        "Migrating the Completed Solution to .NET 8.0 (ASP.NET Core 8.0)": [
          "Migrate Your Solution from ASP.NET 7.0 to ASP.NET 8.0"
        ],
        "TestServer As Alternative to WebApplicationFactory": [
          "Create an ASP.NET 8 Project With Minimal API and Values Controller",
          "Configure WebApplicatoryFactory Setup",
          "Create the TestServer Setup and Carry Out the XUnit Tests",
          "TestServer Vs WebApplicationFactory"
        ]
      },
      "requirements": [
        "To take this course, learners should have the following: Basic understanding of programming concepts and object-oriented principles.",
        "Familiarity with a programming language such as C#, Java, C++ or Python.",
        "Experience with Web development frameworks (e.g., ASPNET, Django, Spring) is beneficial but not mandatory.",
        "Access to a computer with an internet connection to install necessary software and tools.",
        "Integrated Development Environment (IDE) such as Visual Studio, Visual Studio Code",
        "Familiarity with version control systems (e.g., Git) is recommended but not required."
      ],
      "description": "Welcome to \"ASP.NET Core Integration Testing with CI/CD Pipeline\" a comprehensive course designed to take your software testing and development skills to the next level. Whether you're a novice or an experienced developer, this course is your gateway to mastering integration testing in ASP.NET Core, including advanced topics like performance testing with JMeter and implementing a robust CI/CD pipeline using GitHub Actions Workflow and Azure Web Apps.\nIn this hands-on course, you'll start with the fundamentals of integration testing, understanding its significance in building robust, reliable, and high-performance web applications. You'll dive deep into ASP.NET Core, exploring how to write, run, and automate integration tests effectively.\nAs you progress, you'll learn to leverage JMeter, a powerful performance testing tool, to analyze and optimize your application's speed, scalability, and reliability. You'll gain valuable insights into performance bottlenecks and learn to implement optimizations.\nOne of the course highlights is mastering CI/CD using GitHub Actions Workflow and Azure Web Apps. You'll discover how to automate your entire development and deployment process, ensuring continuous integration, automated testing, and seamless deployment to the Azure cloud.\nBy the end of this course, you'll have a strong grasp of ASP.NET Core integration testing, performance testing with JMeter, and the ability to create a complete CI/CD pipeline using GitHub Actions and Azure Web Apps. This expertise will empower you to deliver high-quality web applications efficiently and with confidence.\nWhether you're a developer looking to enhance your testing skills or an aspiring DevOps engineer seeking to streamline the deployment process, this course provides you with the knowledge and practical experience needed to excel in the world of ASP.NET Core integration testing and CI/CD automation. Join us today and embark on your journey from a beginner to an advanced integration testing professional.\nLearning Objectives:\nUnderstand the fundamentals of integration testing and its significance.\nExplore ASP.NET Core for effective integration testing.\nLearn performance testing using JMeter for application optimization.\nImplement a complete CI/CD pipeline using GitHub Actions and Azure Web Apps.\nGain insights into performance bottlenecks and optimizations.\nTarget Audience:\nDevelopers aiming to enhance their testing skills.\nAspiring DevOps engineers seeking to streamline deployment processes.\nRequirements:\nBasic understanding of ASP.NET Core with C# (at least 6 months) and familiarity with version control (GitHub).\nCourse Format:\nLectures, hands-on coding exercises, and real-world applications.\nDuration: Self-paced with approximately [X] hours of content.\nAdditional materials provided for practical implementation.\nInstructor:\nHi, I'm Kaushik Roy Chowdhury, a Microsoft Certified Professional with over 20 years of commercial experience in the .NET stack of products. I hold a master's degree in computer science from Auckland University of Technology, Auckland, New Zealand and have worked for multinational companies such as Sungard and Trimble Navigation. My passion lies in software education, and I've extensively taught programming languages like C#, Java, and C in tertiary institutions in New Zealand.\nFinally, here are some of my earlier reviews from courses on Udemy: •\n\"Kaushik's courses are my main reference for anything C# - I find his explanations full of detail which helps to solidify a full understanding of even the most complex aspects of C# programming.\" - Martin Catherall (Microsoft MVP) - Master Collection Classes in C# Using Visual Studio •\n\"An elaborate and detailed description for a beginner. The author has put a lot of effort into structuring the content. Certainly proved useful to me as a starter.\" - Sudeep Ghatak (ASP.NET Core 3 with MVC and MongoDB) •\n\"Great material. Learned a lot.\" - John Taylor (Master Collection Classes in C# Using Visual Studio) •\n\"Well explained in detail.\" - Fred Handal (Build and Learn ASP.NET Core 3.1 Blazor Hands-On •\n\"It's a nice introduction into Blazor server side where you got a good understanding of Blazor fundamentals\" - Seb Lowe (Build and Learn ASP.NET Core 3.1 Blazor Hands-On) •\n\"One of the best Blazor course\" - Mohamed Cisse (Build and Learn ASP.NET Core 3.1 Blazor Hands-On) •\n\"If you're like me and were struggling to setup/use Apigee X because the Google docs were lacking the depth to understand the step you were taking and what to do next, this course is for you! Great beginner Apigee X course, I'm really looking forward to the Intermediate/Advanced course to come\" -\nGarrick Brown (Google Cloud Apigee X API Management - Hands-On Training )\"",
      "target_audience": [
        "This course is designed for software developers and engineers who want to enhance their skills in integration testing of data access code.",
        "It is particularly beneficial for those working on web application development using frameworks such as ASPNET",
        "The course is suitable for learners with a basic understanding of programming concepts and experience with a programming language like C#, C++, Java, or Python",
        "Whether you are a beginner seeking to expand your testing knowledge or an experienced developer looking to improve your testing strategy, this course provides valuable insights and practical guidance to help you effectively test data access code in your projects."
      ]
    },
    {
      "title": "Web Security and Hacking for Beginners",
      "url": "https://www.udemy.com/course/one-month-web-security/",
      "bio": "One Month Web Security",
      "objectives": [
        "Recognize common website vulnerabilities and hackers exploit these weaknesses",
        "Practice defensive coding for preventing attacks",
        "Evaluate app security"
      ],
      "course_content": {
        "Day 1: Introduction": [
          "Hacking into One Month with Jon and Chris!",
          "An Overview of the App We Are Hacking",
          "Legal Disclaimer"
        ],
        "Day 2: Hacker Tools - The Proxy": [
          "Let's Dive into Proxies with Jon and Chris",
          "Understanding Ports",
          "Intro to Proxies",
          "Intercepting Requests with Burp",
          "Fun With Encoding"
        ],
        "Day 3: Account Bruteforcing": [
          "What is Bruteforcing?",
          "Guessing Usernames and Passwords",
          "Harvesting One Month",
          "Password Attacks",
          "Fixing Error Message",
          "Enforcing Strong Passwords",
          "Preventing Brute Force Attacks"
        ],
        "Day 4: Breaking Authorization Controls": [
          "Trusting Users",
          "Securing Request Parameters",
          "Searching For Vulnerabilities",
          "Finding Hidden Pages",
          "Automating File and Directory Discovery with Dirbuster",
          "Enforcing Admin Access"
        ],
        "Day 5: Cross Site Scripting": [
          "Let's Discuss \"Cross-Site Scripting\"",
          "Javascript Hacks Using Cross-Site Scripting (XSS)",
          "Hacking Tool - Beef"
        ],
        "Day 6: SQL Injection": [
          "Jon and Chris Break Down SQL Injection",
          "Introduction to Database Queries Using SQL",
          "Detecting SQL Injection",
          "Hack Tool - Sqlmap",
          "Fixing SQL Injection Vulnerabilities"
        ],
        "Day 7: Encryption and Storing Secrets": [
          "Storing Secrets",
          "Keeping Passwords",
          "Hack Tool - John The Ripper",
          "Stronger Hashes with Bcrypt",
          "Protecting Sensitive Information in a Database",
          "Reviewing Encryption Code",
          "Applying Encryption",
          "Masking Sensitive Data"
        ],
        "Day 8: Calling System Commands": [
          "Exploiting System Commands",
          "Securing File Operations"
        ],
        "Day 9: API Security": [
          "\"What the Heck is an API?\"",
          "Accessing Models Using an API",
          "Securing an API"
        ],
        "Day 10: Cross-Site Request Forgery": [
          "Explaining Cross Site Forgery",
          "Ruin a Vacation Using Cross-Site Request Forgery",
          "Building a Cross-Site Request Forgery Attack",
          "Hacking Gmail Using CSRF",
          "Protecting Against CSRF"
        ]
      },
      "requirements": [
        "Basic knowledge of Ruby on Rails",
        "Basic understanding of SQL",
        "The ability to read JavaScript code",
        "Fluency in English",
        "Come motivated and ready to learn!"
      ],
      "description": "By the end of One Month Web Security, you will be able to review your own applications for security issues and ensure the code is properly hardened against malicious attacks. You will also be able to design new applications with security in mind, significantly lowering the risk and cost associated with deploying new applications.",
      "target_audience": [
        "Rails Developers",
        "Quality Assurance Testers",
        "Application Testers",
        "Anyone who writes web applications"
      ]
    },
    {
      "title": "Manual Software Testing and Automation Selenium + Jira 2025",
      "url": "https://www.udemy.com/course/manual-software-testing-with-bugreporting-tool-almqc/",
      "bio": "Complete Manual Software Testing With Bug Reporting, Selenium WebDriver ,Manual testing for beginners , Jira and Agile",
      "objectives": [
        "Learn the fundamentals of manual software testing, including key concepts and software life cycles.",
        "Gain the ability to create functional test cases, ensuring you can effectively test software functionalities as a student.",
        "Master the skills of deriving test data, and comprehend test plan documents to guide your testing efforts",
        "Develop expertise in planning testing activities and creating test scenarios, enabling efficient manual testing processes.",
        "End-to-End Manual Testing: Practice and perfect the art of end-to-end manual testing to ensure thorough examination of software systems.",
        "Grasp the basics of Scrum development, providing insight into agile methodologies used in software development.",
        "Defect Reporting Proficiency: Learn how to identify and report defects effectively during manual testing processes.",
        "Jira Tool for Testers: Gain hands-on experience with the Jira tool, a valuable asset for manual testers in organizing and tracking their testing activities.",
        "Quality Center (ALM) Familiarity: Understand the usage of Quality Center or ALM for managing and organizing manual testing efforts.",
        "Bugzilla Tool Understanding: Explore the Bugzilla tool to enhance your skills in tracking and managing defects during manual testing."
      ],
      "course_content": {
        "Introduction to Software testing": [
          "Importance of SOFTWARE TESTING",
          "Modern Approach of Software Testing and Software tester"
        ],
        "Skill set for Manual Tester": [
          "Manual Testing : Required skill set for Manual Software Tester",
          "Roles and Responsibility Of QA tester"
        ],
        "Types Of Testing?": [
          "Exact difference between manual and automation testing",
          "Why to Test Application ? From tester point of view & Importance of requirement"
        ],
        "Quiz 1": [
          "Quiz 1"
        ],
        "Introduction to Software Development Life Cycle [SDLC]": [
          "Types of software",
          "SDLC PART 1"
        ],
        "Detailed concepts of SDLC": [
          "Detailed concepts of SDLC"
        ],
        "SDLC MODELS": [
          "SDLC MODELS PART 1",
          "SDLC MODELS PART 2- V MODEL",
          "SDLC MODELS PART 3- V MODEL"
        ],
        "Testing Phases": [
          "Testing Phase IN SDLC"
        ],
        "OVERVIEW OF FUNCTIONAL TESTING": [
          "Sofware Testing Techniques (Exhaustive testing and Optimal testing)",
          "over view of functional testing techniques"
        ],
        "NON-FUNCTIONAL TESTING": [
          "Non - Function Testing Details"
        ]
      },
      "requirements": [
        "ALMOST NOTHING.",
        "Basic knowledge of computer operation is enough",
        "“No IT experience? No problem! This course is perfect for freshers and non-IT professionals who want to step into the world of Software Testing.”"
      ],
      "description": "Complete Manual testing with bug reporting JIRA , including Agile and Scrum And Selenium with Java\n\nCourse Include:\nComple Manual Testing And Scrum Overview\nJira For Testers\nSelenium Automation Testing\nBasics Of Java\nTestNG, Apache poi , Page Object Model (POM), and many more\n\n\nExcellent course For beginners who wanted to start a career in Manual software Testing Best Course on Manual Testing\nRegarding my course: I have designed this course more on practical than showing slides and reading out theory, majority  of the course deals with test data and writing test cases almost 14 sessions on writing test cases, because deriving test cases is  very important and primary task of manual tester , even I have covered a lot of theory part and clearly explained how development and testing activates take place and covered bug reporting tool ALM also , so the primary task of QA tester is to derive test-data , write test cases, defect reporting and my course covers all these factors in detailed\nUpdates 2024\nJira videos updated  to Course 2024\nTotal courses is updated with a new set of videos\nUpdated Agile and Scrum Videos\nNOTE: Subtitles are Autogenerated, we are working on them to correct mistakes in Autocaptios / subtitles .\nHighlights\nNon- IT students can easily learn the course\nCourse starts from very scratch\nAll life cycles explained\nHands-on writing Testcases\nsimple design course\nUnderstanding bug reporting\nHands-on bug reporting and test management tool JIRA and ALM/QC\nUnderstanding Basics of Selenium\nexplained each and every topic of manual testing And BUG REPORTING TOOL Jira and Bugzilla\n\n\nCourse starts from what is software and covers all the theory part of software development and testing\nthen slowly moves on to the practical part of driving test cases and test data\nlot of examples are given on How to write test cases\n\nAnd working with very famous reporting tool ALM\nBy The END OF THE COURSE\nyou will understand how development happened and the role of tester in development processes\nyou will get an idea of different types of testing\nyou will be learning how to work with optimal testing by using BVA and ECP\nfor sure you will be able to write test cases for a given functionality\nhands-on Basics Of Selenium\n\nand much more\ncome join me\nTestimonials from my Students\nDavid Butler :-I love the detailed information given in this course. I have studied SDLC before, however, they just touched on the basic phases of the life cycle, here Kiran goes step-by-step. I believe this course will be beneficial to all that takes takes it, Beginner to advanced. I like what I've seen thus far and I'm looking forward to further teachings from Kiran as an instructor. Thank you\nNishant Ranjan Verma:-Everything in this course is precise and to the point of the requirement, which is good for any new learner.\nSanjay Kala:-I am amazed with the quality of education provided in this tutorial.Excellent tutorial,hope you will keep it continue with a bit more precise,to-the-point and a bit more detailed video.Not to say,This was the best and complete tutorial ,I have ever had.Thank you and keep it up,I am looking forward more tutorial form you on Selenium etc.\n\n\n\nArchana Mishra:-The explanation to each topic is very clear with real time example.Thanks a lot for the great effort.\nHariharan Sai Ganesh:-So far the course has been very good, and the instructor has done a good job. I appreciate the instructor's hard work,\nKings A:-A good tutorial with wide and indept coverage\nVaibhav:-The instructor has thoroughly explained each and every topic he discussed. I'm satisfied that I purchased this course.",
      "target_audience": [
        "This manual testing course is for everyone, including those who are not in the IT field and are beginners.",
        "Just interest in software testing",
        "wanted to make career in Software Testing"
      ]
    },
    {
      "title": "Manual Software Testing",
      "url": "https://www.udemy.com/course/software-manual-testing/",
      "bio": "Learn theoretical basics of manual software testing with a detailed discussion on testing types, process and approaches",
      "objectives": [
        "Core principles and terminology of manual software testing",
        "Classifications of tests: levels, types, approaches, and techniques",
        "Writing test scenarios, test cases, and understanding defect management",
        "Testing processes: STLC, V-Model, TDD, ATDD, BDD, MDD",
        "Strong theoretical foundation to support interviews and career entry"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Software Testing Introduction",
          "Sample Application"
        ],
        "Software Testing": [
          "Test Classifications",
          "Software Testing Basics",
          "Traditional and V model",
          "TDD ATDD & Other Approaches",
          "Test Plan",
          "More testing Types",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prerequisites. This course discusses from basics to the advanced topic.",
        "Some basic understanding – definition of software development, will be helpful, but not mandatory."
      ],
      "description": "Manual Software Testing: Learn Theoretical Basics of Software Testing\nBuild a solid foundation in manual software testing—understand testing types, processes, and approaches from the ground up.\nThis course offers a comprehensive theoretical overview of manual software testing, covering both traditional and modern testing practices. Whether you're starting a new career in testing or preparing for interviews, this course gives you the clarity and confidence you need.\nWe begin with the fundamentals of software testing, including its purpose, principles, and the essential skills needed in the field. You’ll learn to classify different types of testing, write test scenarios and test cases, understand the defect lifecycle, and explore both traditional and modern testing methodologies like TDD, ATDD, BDD, and model-based testing.\nWhat You’ll Learn\nCore principles and terminology of manual software testing\nClassifications of tests: levels, types, approaches, and techniques\nWriting test scenarios, test cases, and understanding defect management\nTesting processes: STLC, V-Model, TDD, ATDD, BDD, MDD\nStrong theoretical foundation to support interviews and career entry\nWho This Course Is For\nAspiring software testers starting a new career path\nTesters looking to reinforce their theoretical knowledge\nAnyone preparing for software testing job interviews\nProfessionals wanting to understand modern testing methodologies\nCourse Structure\nIntroduction\nCourse Overview\nWhy Testing Matters\nPrinciples of Testing\nEssential Testing Skills\nTest Classifications\nTypes of Testing\nTesting Levels\nApproaches and Techniques\nTest Basics\nWriting Test Scenarios and Test Cases\nCreating Test Data and RTM\nUnderstanding Defect Classifications and Lifecycle\nTesting Processes\nWaterfall and V-Model\nSoftware Test Life Cycle (STLC)\nModern Practices: TDD, ATDD, BDD\nIntroduction to MDD and Model-Based Testing\nTest Planning\nKey Elements of a Test Plan\nEntry and Exit Criteria\nBonus: More Test Types\nA categorized reference list of additional testing types not covered in other modules\nImportant Note\nThis course shares core content with our course “Software Testing: Learn with Interview Questions & Answers.” However, the approach here is structured as a traditional course, without focusing on interview-style questions. Choose the format that best suits your learning goals.\nEarn a certificate of completion and strengthen your profile with a solid understanding of software testing theory.\nPerfect for beginners and anyone preparing to step confidently into the world of software quality assurance.",
      "target_audience": [
        "This is for anyone who want to pursue a new career in software testing.",
        "This is for anyone who want to strengthen their fundamentals in this field.",
        "This is for anyone who is preparing for interviews for software testing jobs."
      ]
    },
    {
      "title": "JAVA for Software Testers/QA: Boost Your QA Career with Code",
      "url": "https://www.udemy.com/course/java-for-software-testers/",
      "bio": "From Coding Basics to Automation Mastery for Software Tester |Transform Your Testing Approach with Java-Based Automation",
      "objectives": [
        "Best to Expert Level knowledge of Java to implement with different automation tool like Selenium & Appium",
        "Ready to work in Automation Tools like Selenium, Appium & API Testing using Java(RestAssured)",
        "Details understanding of advance concepts like OOPS, Excel Handling, DB Handling.",
        "Detailed knowledge of supporting Tools and Libraries like MAVEN, JUNIT, TestNG",
        "Many Quiz and Practice exercise to regularly evaluate your learning"
      ],
      "course_content": {
        "Environment Setup (Installation of Java & Eclipse)": [
          "Agenda of Course | Course Roadmap",
          "Java(JDK) Installation on Windows Machine",
          "Eclipse Installation : Setup environment for Code Writing"
        ],
        "Eclipse & Java Introduction | Lets Start basic programming": [
          "Introduction to Eclipse | Walkthrough to Eclipse Environment",
          "Start Java programming - Project & Package",
          "How to Define Variables & Constants in Java",
          "What is Class ? & How to access class members by using Object",
          "Methods(Functions) in Detail : Different types of Methods",
          "Constructor | What is Constructor and How to Write Constructor",
          "Where to use Constructors (Practical Usecase)",
          "Read data from user at runtime : Take User Input",
          "Basic Java Quiz",
          "Practice Exercise ****** Mathematical Calculation with Solution",
          "Practice Exercise ****** Mathematical Calculations -Solution attached",
          "Practice Exercise ****** Mathematical Calculations - Solution attached",
          "Practice Exercise ** Number Swap with Solution"
        ],
        "Step by Step Condition Handling | How and Where to use Condition Handling": [
          "Simple Condition Handling - IF - Else (Handle 2 conditions)",
          "Multiple Condition Handling (If - Else if - else) with practice exercise",
          "Condition handling with Logical OR / AND",
          "Nested Condition Handling (Condition inside Condition)",
          "Solution of following Exercise: Download attached project",
          "Practice Exercise ****** Largest amount 3 numbers",
          "Practice Exercise ****** Number Divisible",
          "Practice Exercise ****** Days in a month",
          "Practice Exercise ****** Type of Triangle",
          "Practice Exercise ****** Check Grade"
        ],
        "Step by Step Looping | For - While - Do While - For Each": [
          "For Loop : Run Loop with increment and Decrement Order",
          "While Loop",
          "Do While Loop",
          "For Each loop : Advance For Loop for Group of Data",
          "Nested Loop : Loop inside Loop",
          "Following Programming Exercise Solution : Download attached project",
          "Practice Exercise ****** Number Value Interchange",
          "Practice Exercise ****** Print Fibonacci Series",
          "Practice Exercise ****** Check Prime Number",
          "Practice Exercise ****** Print * Triangle",
          "Practice Exercise ****** Print Table"
        ],
        "String Handling : What is String, Use different functions available in String": [
          "String Handling - Part1 : What is String -String Functions(Length, Upper, Lower)",
          "String Handling - Part2 : String Functions- Replace, SubString, Split, Concat",
          "String Handling - Part3 : String Comparison",
          "Following Programming Solution : Download Code & Use it while learning",
          "Practice Exercise ****** Reverse String",
          "Practice Exercise ****** Check String Palindrome",
          "Practice Exercise ****** Concatenate and Find Length",
          "Practice Exercise ****** Word Count in a String",
          "Practice Exercise ****** Find Spaces in String",
          "Practice Exercise ****** Compare String",
          "Practice Exercise ****** Compare Last Few Characters",
          "Practice Exercise ****** Compare First Few Characters"
        ],
        "Working with Arrays | Hold Multiple Data with Same name": [
          "Array In Java",
          "Multi dimension Array",
          "Following Exercise : Download Code & Use it while learning",
          "Practice Exercise ****** Sum of All Values",
          "Practice Exercise ****** Array Sorting",
          "Practice Exercise ****** Find Largest & Smallest Value",
          "Practice Exercise ****** Find Second Largest & Smallest Value",
          "Practice Exercise ****** Search Data in Array"
        ],
        "File Handling : Read and Write File Data": [
          "File Reader - File Reader (Read data character by character)",
          "File Read - Buffered Reader (Read data line by line)",
          "File Write - File Writer : Write data character by character",
          "File Write - BufferedWriter : Write data line by line",
          "Following Programming Solution : Download Code & Use it while learning",
          "Practice Exercise ****** Read and Write File",
          "Practice Exercise ****** Read ODD or EVEN Lines only",
          "Practice Exercise ****** Don't display error lines",
          "Practice Exercise ****** Copy Error Lines",
          "Practice Exercise ****** Copy and Write in upper Case",
          "***** Check Your Knowledge *****"
        ],
        "OOPS in Detail (Object Oriented Programming)": [
          "Encapsulation : Wrapping up data & functions in single unit",
          "Inheritance : Transfer Property of a class to another class",
          "Types of Inheritance - Simple/Single",
          "Types of Inheritance - Multilevel",
          "Types of Inheritance - Hierarchical",
          "Polymorphism : Data Overriding (Override Parent Class Methods)",
          "Overloading (Compile Time Polymorphism)",
          "Overriding (Runtime Polymorphism)",
          "Abstraction with Interview Questions",
          "Interface : To Achieve 100% abstraction",
          "Multiple Inheritance using Interface",
          "Hybrid Inheritance using Interface"
        ],
        "Access Modifiers : Access Class members at different places": [
          "public modifier : Access members throughout package",
          "private modifier : Access members within class",
          "default modifier : Access members within package",
          "protected modifier : Access members within package and child class",
          "Access Modifiers on class level"
        ],
        "Type Casting": [
          "Implicit & Explicit Type Casting",
          "Explicit Type Casting - By Classes"
        ]
      },
      "requirements": [
        "Basic understanding of Windows Operating System",
        "Good to have understanding of Manual Testing, Processes, Functional & Regression Testing",
        "Should be ready to invest atleast 30mins a day for practice and concept implementation"
      ],
      "description": "Course Updates\nJAVA is a most popular programming language for developer as well as testers.\nFrom Testers point of view, we can use it with different tools like Selenium, Appium, Rest Assured, JMeter and many other automation tools.\nIf you’re new to programming and want to enter either of these fields, this course is a great place to get started.\nNo Pre-requisite for staring this course, we will teach from installation to real-time implementation\nCoverage\nIn this course we prepare student for all automation challenges, it gives coverage of almost all basic and advance concepts of java which are required to work on different automation tool.\nHere you will cover basic concepts like Class, Object, String, Loop and advance concepts like File Handling, working with Excel, Database connectivity, Collection API.\nHere we cover OOPS in details which makes you working as well as interview ready.\nAdvance concepts like Exception Handling, Excel handling\nFile Handling & Excel Handling\nWorking with JUnit & TestNG\nWorking with Maven\nMany Programming Exercise and Quiz\nAccess Modifiers, Keywords\nDebugging\nInterview Questions and Tips\n50+ Programming exercise for regular practice.\nHere we are going to learn Java with following perspective\n\n\nJava testing frameworks\nJUnit tutorial for testers\nTestNG for automated testing\nSelenium with Java\nJava unit testing best practices\nCucumber BDD in Java\nJava test automation tools\nJava integration testing techniques\nJava exception handling in testing\nAPI testing with Java\nContinuous integration for Java projects\nJava code coverage tools\nStatic code analysis in Java\nTest data management in Java\nEnd-to-end testing in Java\nJava software quality assurance\nJava testing strategies\nResult of this course\nAfter completing this course, you will be very much comfortable to start automation and face automation interviews\nAlso you gonna get our instructor support to clear you queries asap.\nIts a continuous grooming course which will give you in depth knowledge of theory as well as practical concepts",
      "target_audience": [
        "Any professional want to automation different types of application using Java Programming",
        "Manual Testers Looking Opportunity in Selenium with Python",
        "Automation testers who want to use java in most effective way in Automation",
        "Any professional who want to learn java from scratch to expert level",
        "Freshers looking for opportunity in Software Testing/Automation Testing"
      ]
    },
    {
      "title": "Learn JMETER from Scratch on Live Apps -Performance Testing",
      "url": "https://www.udemy.com/course/learn-jmeter-from-scratch-performance-load-testing-tool/",
      "bio": "Top class Jmeter lectures explaining Load testing with real time examples including material and query support",
      "objectives": [
        "At the end of this Course you will be able to understand how to put Load on Web applciations and REST API's",
        "You will get clear idea on all the features available in Jmeter tool to write load testcases",
        "Will gain knowledge on monitoring the application performance with the given load",
        "You will complete knowledge on Jmeter addin plugins to make reports more effective",
        "Integration of Selenium with Jmeter",
        "Will understand Beanshell Scripting basics for Jmeter"
      ],
      "course_content": {
        "Introduction": [
          "Jmeter Introduction",
          "Advantages of Jmeter over other Performance testing tools",
          "Jmeter Installation and Configuration",
          "Jmeter Tool overview",
          "Knowledge check on Section-1"
        ],
        "Recording the Jmeter Scripts": [
          "Important Player Tips for Best learning Experience:",
          "Recording the application under test with Jmeter",
          "Recording and playback Jmeter Scripts",
          "Recording in Chrome with Blazemeter extension"
        ],
        "How to put load and analyse performance metrics": [
          "Importance of Thread Group in Jmeter",
          "Applying Load on application with Thread group",
          "What are Listeners? and importance of View Results Tree",
          "Listeners to monitor the Load testing results",
          "Different type of Listeners and their usage in gathering Performance metrics",
          "Knowledge check on Section-3"
        ],
        "Advanced Thread Group Methods for Real time load with Jmeter": [
          "Additional Plugins to set Advanced load configuration",
          "Concurrency Thread Group & Ultimate thread Group usage"
        ],
        "Http Cookie Manager to capture sessions": [
          "Why we need to add cookie manager in tests?",
          "Usage of cookie Manager in jmeter tests",
          "Knowledge check on Section-5"
        ],
        "Assertions in Jmeter": [
          "How to validate Jmeter tests- Pass/Fail status",
          "Different types of Assertions which can you use on Jmeter tests"
        ],
        "Jmeter controllers for Modules wise Metrics": [
          "Webtours Application Sample Demo for Practice",
          "How controllers helps to track performance of Modules of application",
          "Importance of Transaction controller and Simple controller",
          "InterLeave Controller Usage on Jmeter tests",
          "Runtime and Random Controllers usage in Jmeter",
          "if and Loop controller Importance for Stress testing"
        ],
        "Timers in Jmeter": [
          "Timers usage in Jmeter",
          "Constant Throughtput Timer Importance"
        ],
        "Importance of Regular expressions in Jmeter": [
          "Why we need regular expression extractor concept in Jmeter",
          "Practical example on Flight search Application with Regex Extractor",
          "Combining multiple expressions into Single extractor"
        ],
        "Data Driven testing with Jmeter": [
          "How to create HTTP request Samplers from Scratch with out recording",
          "How to Datadrive the data into application"
        ]
      },
      "requirements": [
        "******You need NOT have any prior load testing experience to start this course*********Everything from scratch is taken care",
        "Though these are online Lectures, You will have Life Time instructor support. You can post your Queries in discussion board or can contact me directly, Will respond in less than 12 hours",
        "All Installation setup including performance testing is taken care as part of course",
        "Theoretical Material,Code dump and Interview Guide are available for download",
        "Join in our Jmeter Training community with ( 80,000+ Students) Learning Together which you will not see in any other Jmeter online course on Udemy"
      ],
      "description": "UPDATE: *Course is fully updated in January with latest Jmeter version 5.0 revised lectures\nPerformance Tester is in high Demand!\nGet Real Time exposure on Load Testing with the most popular open source Performance Testing tool – Jmeter\nThe most popular course in udemy with highest students enrollments and great feedbacks  // Includes Life time instructor support\nCourse is designed in such a way that the user can start the things from the very scratch with out any prior knowledge on Jmeter or Performance Testing\nOn course completion You will be Mastered in desigining Performance Testcases with Jmeter and can implement Successfully it in your work place or will surely land on High Paying Jobs\n*\nThis Course explains\nJmeter Introduction\nJmeter UI Components\nRecord and playing back with Proxy\nApplying Load on Testcases with Thread Group\nAnalysing the Load with Listeners\nAdditional plugins to Listeners and Threadgroups\nAssertions in Jmeter\nControllers in Jmeter\nPractial usage of Controllers in desigining Jmeter Scripts\nTimers usage in Jmete\nr Constant throughput timer importance\nRegular expression extraction  for dynamic responses\nData driven Testing from external file\nImportance of Correlation\nUsage of Correlation on Dynamic values\nHttp cookie Manager and Link Parser\nBeanshell Scripting Introduction\nJmeter Scripting with Beanshelll Language\nIntegration of Selenium Testcases with Jmeter\nREST API overview and usage Load Testing on REST API's\nBy the end of this course you will able to design Robust Performance Testcases in Jmeter tool with the help of all features available in it and you can monitor the performance of application by with different Load Parameters\nHappy Loading ",
      "target_audience": [
        "Manual testers, Webservice Testers,Non-programming aware testers interested in learning Performance Testing"
      ]
    },
    {
      "title": "Learn Selenium with Python using Robot framework",
      "url": "https://www.udemy.com/course/learn-selenium-with-python-using-robot-framework/",
      "bio": "Web Automation using Selenium, Pycharm & Python Robot framework",
      "objectives": [
        "How to Automate Tests in Selenium using Robot framework"
      ],
      "course_content": {
        "Robotframework Introduction": [
          "Introduction",
          "Basic Robotframework Test Case"
        ],
        "Working Web Elements Part-1": [
          "Handling Inputbox",
          "Handling Radio Buttons and Check boxes",
          "Handling Drop Downs",
          "Waits",
          "Close Browsers",
          "Alerts and Frames",
          "Handling Browser Windows",
          "Navigations"
        ],
        "Working with WebElements part-2": [
          "Capture Screenshots",
          "Mouse Actions",
          "Working with Links",
          "Handling Tables",
          "Scrolling Pages"
        ],
        "User Defined Keywords": [
          "How to create User defined Keywords"
        ],
        "Data Driven Testing": [
          "Data Driven Testing using Script",
          "Data Driven Testing using MS-Excel"
        ],
        "Database Testing in Robot framework": [
          "Database Testing in Robot framework"
        ],
        "Robot framework features": [
          "Setup & TearDown",
          "Tagging"
        ],
        "Page Object Model": [
          "Page Object Model - Object Repository"
        ],
        "Parallel Test Execution": [
          "Parallel Test Execution"
        ],
        "Headless Browser Testing": [
          "Headless Browser Testing"
        ]
      },
      "requirements": [
        "Basic knowledge on HTML and Web applications"
      ],
      "description": "Course Introduction:\nWelcome to the Robot Framework Test Automation Course! This comprehensive program is designed to equip you with the essential skills to master acceptance testing and acceptance test-driven development (ATDD) using the powerful and versatile Robot Framework. Whether you're a beginner or have some experience in test automation, this course will guide you through the intricacies of Robot Framework, known for its user-friendly tabular test data syntax and keyword-driven testing approach.\nCourse Overview:\nIntroduction:\nUnderstand the fundamentals of Robot Framework, its purpose, and its role in acceptance testing and ATDD.\nBasic Test Case:\nLearn how to create and execute basic test cases, exploring the foundation of Robot Framework's testing capabilities.\nHandling Web Elements:\nDive into the specifics of interacting with various web elements such as input boxes, radio buttons, checkboxes, and drop-downs.\nWaits:\nExplore the concept of waiting in test automation, ensuring synchronization with the application under test.\nClose Browsers, Alerts & Frames:\nLearn how to efficiently handle browsers, alerts, and frames during test execution.\nHandling Browser Windows:\nUnderstand methods for dealing with multiple browser windows effectively.\nLinks & Navigations:\nExplore navigation techniques and strategies for handling links within your test automation scripts.\nCapture Screenshots:\nMaster the art of capturing screenshots to enhance debugging and reporting.\nMouse Actions:\nUnderstand and implement mouse actions for more dynamic interaction with web elements.\nUser Defined Keywords:\nCreate and utilize custom keywords, extending the capabilities of Robot Framework.\nScrolling Page:\nLearn how to scroll through web pages, an essential skill for testing content-rich applications.\nFor Loop:\nImplement loop structures to optimize and iterate through test scenarios efficiently.\nTable:\nHandle tables within web applications, a common feature that poses unique challenges in automation.\nData-Driven Testing:\nExplore various approaches to data-driven testing, including script-based and integration with external data sources like Excel, CSV, and databases.\nSetup-Tear down:\nUnderstand the importance of setup and tear-down procedures for maintaining test environment consistency.\nTagging:\nUtilize tagging to categorize and organize test cases, making test suite management more efficient.\nPage Object Model:\nImplement the Page Object Model (POM) to enhance test script maintainability and reusability.\nParallel Execution:\nOptimize test execution time by running tests in parallel, a crucial aspect for large test suites.\nHeadless Browser Testing:\nExplore headless browser testing, a technique for executing tests without a visible browser interface.\nJenkins Integration:\nIntegrate Robot Framework with Jenkins for seamless automation in a continuous integration environment.\nStay tuned for more exciting content updates as we delve deeper into advanced topics. Let's embark on this journey together to become proficient in Robot Framework test automation!",
      "target_audience": [
        "Manual Testers, Freshers, Automation Engineers"
      ]
    },
    {
      "title": "GenAI And Other Software Testing Tools Every QA Should Know",
      "url": "https://www.udemy.com/course/testingtools/",
      "bio": "Explore ChatGPT and more Software Testing tools for QA Engineer, level up a quality of your testing",
      "objectives": [
        "Overview of the main AI tools for Software testing",
        "Overview of the main categories of Manual Software Testing tools with the corresponding tools for each category",
        "Learn Generative AI GenAI (ChatGPT) and other AI tools with which you can assist with Software testing",
        "Learn 7 of the most popular Manual Software Testing Tools with which you can test WEB, Mobile, API, Performance and Networking testing",
        "A video review of each tool includes an overview of the main navigation component of the tool for those who launch it for the first time",
        "A video review of each tool includes demonstrating several basic practical functions that testers can use in their work",
        "Learn how to use GenAI (ChatGPT) for Automation Software Testing",
        "Learn how a Manual QA Engineer can Automate work with the help of GenAI (ChatGPT) in a short period of time",
        "Learn how to create and run JavaScript/Playwright test script for Login, My Account, End-to-Eng purchase flow",
        "Learn how to create and run Selenium/Java test script for Search, Sorting, Navigation, Form Submission, Report, Verification",
        "Each video for the Automation Testing includes source code and practical example, which you can use to practise on our website",
        "Understand the fundamentals of accessibility testing, including its purpose, key principles, and why it's essential for creating inclusive digital products",
        "Learn how to use NVDA to test web accessibility on Windows, focusing on how screen readers interpret content and identify compatibility issues",
        "Understand how to use VoiceOver on macOS for testing accessibility, including gestures and navigation commands on Apple devices",
        "Gain experience testing mobile accessibility on iOS devices using VoiceOver, focusing on touch gestures and mobile-specific navigation",
        "Discover how to use TalkBack on Android for testing accessibility, including gesture navigation and feedback interpretation on Android devices",
        "Master testing keyboard navigation to ensure focus order, tab functionality, and overall keyboard operability for web interfaces",
        "Use tools like WAVE to evaluate color contrast on web pages, ensuring visual elements meet accessibility standards for users with visual impairments"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "ChatGPT": [
          "ChatGPT Overview (How to use ChatGPT for Software Testing?)",
          "Review Software Business Requirements",
          "Assistance with building the Test Plan",
          "Assistance with test monitoring and control",
          "Assistance with Test Design of manual test cases",
          "Assistance with writing a bug report",
          "Assistance while writing automation test scripts",
          "Assistance in API testing",
          "Assistance in creating test tables, lists",
          "Assistance in writing SQL queries",
          "Assistance with data generation",
          "Top 3 Best AI Alternatives to CHATGPT for Software Testing"
        ],
        "Chrome DevTools": [
          "Chrome DevTools 001: Basic Navigation and Setup",
          "Chrome DevTools 002: Mobile Emulation",
          "Chrome DevTools 003: Elements Panel",
          "Chrome DevTools 004: Console Panel",
          "Chrome DevTools 005: Network Panel",
          "Chrome DevTools 006: Performance Panel",
          "Chrome DevTools 007: Application Panel",
          "Chrome DevTools 008: Security Panel",
          "Chrome DevTools 009: Lighthouse Panel"
        ],
        "BrowserStack": [
          "001 What is BrowserStack and First Launch",
          "002 How to Choose a Device and Start First Testing Session of a Web Application",
          "003 How to Use the Toolbar During the Testing Session",
          "004 How to Log a Bug Found During Testing Directly to a Bug-Tracking System",
          "005 How to Launch Developer Tools on the Emulator",
          "006 How to Change the Location During the Testing Session",
          "007 How to Simulate Network Conditions on the Emulator",
          "008 How to emulate a device with a SIM card",
          "009 How to install your app on real iOS/Android devices with Browserstack",
          "010 How to use an App workflow scanner to verify application accessibility",
          "011 How to use a Website scanner in BrowserStack",
          "012 How to add the Accessibility Toolkit to Chrome DevTools",
          "013 How to use a Workflow analyzer in BrowserStack",
          "014 How to use Assisted test functionality in BrowserStack",
          "015 How to create your first test case and test run for your project",
          "016 How to Integrate TestRail with Browserstack",
          "017 How to launch your first test run and observe test results",
          "018 How to Integrate Jira with Browserstack"
        ],
        "TestRail": [
          "What is TestRail? First launch",
          "TestRail Demo - How to use Testrail/How to add the first project to TestRail?",
          "001 TestRail Test Cases - How to add test cases to the TestRail?",
          "001 TestRail Test Cases - How to ogranize test cases in TestRail?",
          "001 TestRail Test Cases - How to Reorganize existing Test Cases in TestRail?",
          "001 TestRail Test Cases - How to Edit and Delete Section/Test Cases in TestRail?",
          "002 TestRail Test Suites",
          "003 TestRail - MIlestones",
          "004 TestRail - Test Plans",
          "005 Testrail Test Runs",
          "006 Test Case Execution",
          "007 TestRail - Reports",
          "008 TestRail Integration With Other Tools",
          "009 TestRail - Managing users, roles, and permissions"
        ],
        "Accessibility Testing (A11Y)": [
          "001 Accesibility (A11Y) Testing - Intro",
          "002 What Is Accessibility (A11Y) Testing? Why It Matters More Than Ever in 2025",
          "003 Keyboard Navigation & Focus Order in A11Y Testing | Accessibility Basics",
          "004 Screen Reader Compatibility Testing Explained | A11Y Guide",
          "005 NVDA Screen Reader Tutorial: How to Use It for Accessibility Testing",
          "006 How to Use VoiceOver on Mac for Accessibility Testing",
          "007 VoiceOver Accessibility Testing on iOS Mobile Devices",
          "008 TalkBack Accessibility Testing on Android Devices",
          "009 How to Use the WAVE Tool to Check Color Contrast"
        ],
        "JavaScript/Playwright with help of ChatGPT": [
          "001 - How to set up the JavaScript/Playwright environment",
          "002 - How to set up a new project and install Playwright with npm init",
          "002.1 - JavaScript/Playwright test script configs and first launch",
          "Source codes for each lecture",
          "Troubleshooting - Understand the Logic, Not Just the Instructions",
          "003 - JavaScript/Playwright test case for website login with ChatGPT",
          "JavaScript Playwright test case for Login - Troubleshooting",
          "004 JS_Playwright test case for login Negative cases with Chat GPT",
          "005 - JavaScript/Playwright test cases for Adding address with ChatGPT",
          "JavaScript Playwright MyAccount - Troubleshooting",
          "006 - JavaScript/Playwright test case for End-to-Eng purchase flow",
          "JavaScript Playwright - End-to-Eng purchase flow - Troubleshooting",
          "007 - XPath Playwright Locators",
          "008 - JavaScript/Playwright End-to-End Purchase Flow: Optimization with XPath",
          "009 - Coming Soon",
          "010 - How to install GITHUB",
          "011 - How to push project to GITHUB",
          "012 - How To Pull Project from GitHub to Visual Studio Code",
          "013 - POM model intro + URL (Static Values)",
          "014 - POM - Consent Pop-up (Dynamic Interactions)",
          "015 - Page Object Model (POM) and XPath Strategies in Test Automation",
          "016 - Page Object Model (POM) and Test Data management",
          "017 - Login - Code optimization with ChatGPT",
          "018 - My Account - Code Optimization"
        ],
        "Selenium/Java with help of ChatGPT": [
          "Selenium/Java test case with help of ChatGPT",
          "HOW TO INSTALL JAVA JDK",
          "HOW TO INSTALL IntelliJ IDEA Community Edition",
          "HOW TO SETUP Selenium WebDriver Chrome",
          "Source codes for each lecture",
          "Selenium WebDriver browserOptions()",
          "Selenium Locators XPath",
          "Selenium Locators XPath With Help Of CHATGTP",
          "Selenium/Java Interactions with web elements",
          "TestNG assertions With Help Of CHATGTP",
          "Test report for Selenium Java test script With Help Of CHATGTP",
          "Selenium/Java test case for a search with help of Chat GPT",
          "Selenium/Java test case for Sorting on web page with help of Chat GPT",
          "Selenium/Java test case for navigating to PLP>PDP>Minicard with help of Chat GPT"
        ],
        "API Testing/Postman": [
          "1.0 Manual and automated API testing for Beginners with Postman. Intro",
          "1.1 What is an API - The explanation In plain English",
          "1.2 What is the REST API?",
          "1.3 REST and REST Architectural Constraints",
          "1.4 Client server architecture",
          "1.5 Anatomy of an HTTP Request",
          "1.6 Anatomy of an HTTP Response",
          "1.7 How Does The World Wide Web Work",
          "1.8 How does the REST API work",
          "2.0 A simple API testing approach. Intro",
          "2.1 A simple API testing approach",
          "2.2 Step 1. Send the valid request and receive the valid response",
          "2.3 Step 2. Write and run Three Happy path test cases",
          "2.4 testing GET",
          "2.5 testing PUT and DELETE",
          "2.6 The Answer. Part 1",
          "2.7 The Answer. Part 2",
          "2. Resources",
          "The Postman tutorials. Intro",
          "3.0 Postman Fundamentals for Testers",
          "3.1 Using variables. Part 1",
          "3.2 Using variables. Part 2",
          "3.3 Pre-request Script",
          "3.4 \"Hello, World!\"",
          "3.5 Tests",
          "3.6 Parameterization",
          "3. Resources",
          "4.0 Automated testing with Postman. Intro",
          "4.1 The Status Code is valid",
          "4.2 The Response Body Structure is valid",
          "4.3 The Response Body Values are valid. Part 1",
          "4.4 The Response Body Values are valid. Part 2",
          "4.5 Three Happy path test cases GET",
          "4.6 The Game Changer (the Runner)",
          "5.0 Step 3. Perform functional and non-functional testing. Intro",
          "4. Resources",
          "5.1 Warm-up",
          "5.2 Something like sorting",
          "5.3 Importing data files",
          "5.4 The Response Body Structure and values. Again...",
          "5.5 Array length",
          "5.6 Search",
          "5.7 Dynamic variables",
          "5.8 Sample Data Generation",
          "5.9 Request And Response bodies to JSON",
          "5.10 Number to String to Number",
          "5. Resources"
        ],
        "Android Studio": [
          "Android Studio Overview",
          "How to connect your device and view logs via Android Studio?",
          "How to launch emulator via Android Studio?",
          "How to install an application on the emulator?",
          "How to launch an application that just started to develop"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone. This course is about Manual Software Testing tools, tools that do not include automation, but help to improve the work of a manual tester.\nThe course will be useful for testers:\n1. Absolute beginners in Software Testing who want to learn the most popular software testing tools that every QA uses to work.\n2. Experienced software testers who want to recall the basic usage of Software Testing Tools, and learn something new in this topic.\n3. Experienced Manual Software Testers who want to learn how to automate test cases with the help of ChatGPT in a short time\n4. Anyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT\nThe main task of the course is to deepen knowledge about manual testing tools and to assist testers in different aspects and needs of their work.\n\nFor that reason, we prepared 4 things:\n1. An overview of the main tools for Manual Software testing by category, such as:\nAI Tools for Manual Software Testing\nWeb Testing Tools\nAutomation Testing Tools with the help of ChatGPT\nMobile Testing Tools\nAPI Testing Tools\nAccessibility Testing Tools\nCapture Networking Traffic Tools\n2. Explanation of several tools for each category, such as:\nChatGPT, Bard AI, Bing AI, and Chatsonic AI for Software testing;\nChrome dev tools and BrowserStack for Web testing;\nTestRail as a Test Management tool;\nNVDA, Voice Over, TalkBack, WAVE, Accessibility Insights for accessibility testing;\nPlaywright/JavaScript with the help of ChatGPT for Automation Software Testing;\nSelenium/Java with the help of ChatGPT for Automation Software Testing;\nAndroid Studio and Xcode for Mobile testing;\nPostman and JMeter for API testing;\nWireshark for Networking testing;\n3. Demonstrating several basic practical functions that testers can use in their work using ChatGPT, Bard AI, Bing AI, Chatsonic AI, Chrome Dev Tools, BrowserStack, TestRail, Android Studio, Xcode, Postman, JMeter, Wireshark, NVDA, Voice Over, TalkBack, WAVE, Accessibility Insights, GitHub, Visual Studio Code, IntelliJ IDEA, Playwright, Selenium.\n4. Demonstrating how the Manual QA Engineer can start the automation journey by creating and running Selenium/Java test scripts for the different website functions, such as Filters, Sorting, Navigation, Minicart, etc., with the help of ChatGPT.\nEach lecture for the Automation part is shown on our website, where we created separate components to show everything in practice. For each of our lessons, we created a separate class in the IntelliJ IDEA Integrated Development Environment. So it will be easier for you to find the code you need in the future. The final code will be available in the lecture materials and on our website. We can open our webpage, run it, and check the results using this code.\n5. Demonstrating how the Manual QA Engineer can start the automation journey by creating and running JavaScript/Playwright test scripts for the different functions on the website, such as Login, Login Negative Scenarios, My Account, and End-to-End purchase flow with the Help of ChatGPT. Each lecture for the Automation part is shown on our website, where we created separate components to show everything in practice. We created a separate class in Visual Studio Code for each of our lessons. So it will be easier for you to find the code you need in the future. The final code will be available in the lecture materials, on our website, and on GitHub. We can open our webpage, run it, and check the results using this code.\nWe hope you will enjoy the course and feel free to write reviews and opinions on which tools you would like to overview next, we will prioritize and add them to the full version of the course.\nPrepare a cup of coffee or another favorite drink and enjoy the course!\nHope to see you in the first lecture!",
      "target_audience": [
        "QA Engineers",
        "Software Testers",
        "Absolute beginners in Software Testing",
        "Experienced software testers who want to recall the basic knowledge of software testing theory",
        "Anyone who wants to take the first steps in using Manual Software Testing Tools",
        "Anyone who likes to watch videos about Software Testing and want to improve your testing"
      ]
    },
    {
      "title": "Mobile Automation with Robot Framework (RED, Appium, Python)",
      "url": "https://www.udemy.com/course/mobile-automation-with-robot-framework/",
      "bio": "Best Course in Mobile automation with Robot framework (RED Editor) and Appium Library. Automate using Android emulators",
      "objectives": [
        "At the end of the course, students will learn Test Automation for Mobile apps using Appium and Robot Framework. Students will also learn -",
        "Learn to install Appium, RED, Robot Framework, Android Studio, and necessary Robot libraries",
        "Learn step by step to design End to End Test Automation test suite for real life projects",
        "Learn to work with Appium and understand the keywords in Robot Appium library",
        "Automate native Mobile apps on Android using Robot Framework",
        "As a bonus, students will get hands on exercises, quizzes, interview questions, and resume building tips"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Mobile Architecture",
          "Types of Mobile Automation",
          "Mobile Emulator and Mobile Cloud",
          "Mobile Automation Basics"
        ],
        "Installation of Robot Framework and RED (Windows)": [
          "Install python",
          "Install RED editor",
          "Install Robot Framework",
          "Create first project in RED Part -1",
          "Create first project in RED Part -2",
          "Install Appium",
          "Import Appium Library in Robot Framework",
          "Install Android Studio",
          "Creating Emulators"
        ],
        "Install and work with Appium and Android Studio": [
          "Basics of Appium - I",
          "Basics of Appium - II",
          "Basics of Appium - III",
          "Handling sessions in Appium with Desired Capabilities",
          "Working with Appium GUI",
          "Working with Emulator"
        ],
        "Working with RED Editor": [
          "RED Editor Test Case Structure",
          "RED Editor Variables",
          "RED Editor File Formats",
          "RED Editor Settings",
          "RED Editor"
        ],
        "UI Automator": [
          "UI Automator - I",
          "UI Automator - II",
          "Launch App on Android phone"
        ],
        "Locators for Mobile Elements": [
          "ID Locator",
          "Submit Locator",
          "Radio Button",
          "Input Text",
          "XPath Locator",
          "DropDown",
          "More Keywords",
          "Mobile elements"
        ],
        "End to End Test Automation - Flight Application": [
          "Introduction",
          "Invalid username",
          "No username",
          "No password",
          "No username and password",
          "Incorrect password",
          "Login to Flight App",
          "End to End - Book a Flight",
          "Regular Expressions",
          "End to End Automation - Search Flight",
          "End to End Automation - Check In"
        ],
        "Resume Building tips and Interview Questions": [
          "Resume Building Tips"
        ]
      },
      "requirements": [
        "Basic understanding of testing"
      ],
      "description": "***One stop solution to learn Mobile test automation with the industry leader Robot Framework (Appium Library)***\n***Be a master in automating test cases involving native and hybrid mobile application, and execute your automated scripts with Jenkins ***\n**Robot Framework ( RED Editor )  Detailed Installation with Python3.7**\n**Be Interview Ready in Just 4 Hours**\n-->Learn from scratch the concepts of keyword driven and data driven frameworks\n\n\n***Automate real time applications ***\n**Go script-less with Robot Framework.**\n** Install Android Studio and  create your own  emulator **\n--->No Other Course in Robot framework provides detailed lectures on <--\nAgile Test Methodology\nRobot Framework Installation ( Red Editor )\nMobile Automation through Appium Library\nMobile automation architecture\nLocators in mobile applications\nEnd to End automation of Flight Application\nAppium Architecture\nEmulators and Cloud Providers\nInstallation of APK in emulators\n\n\n*** Flight Application APK Provided for free***\n***Additionally you'll receive ***\nHands-on exercises, assignments and live projects\nQuiz to test your learning\nDownloadable codes and notes from the training\nInterview questions and resume preparation tips\n--> No Prior Coding Experience needed\n--> Start as a Beginner and end as an Expert within 5 Hours.\n--> Instructor reply to students questions within 24 hours.\nWhy this course as compared to other courses?\n-->This course is all-in-one solution for automating Mobile applications\n-->This course assumes that students have no prior knowledge in Manual and Automation Testing. Everything is taught from scratch.\n-->Student gets hands on practice with variety of exercises, quiz and live projects.\n-->This course covers interview questions and resume preparation tips.\n\n\nWho all can take this course?\n1. Students with No prior experience in testing\n2. Students looking to switch their career in field of software testing\n3. Manual Testers for Mobile applications\n4. Manual tester looking to learn new skills for automation.\n5. Students with no experience in coding.\n6. Any Non IT Professional looking to enter IT Field.\n7. Automation developers looking to learn new automation skills.",
      "target_audience": [
        "Test Automation developers, Mobile functional testers",
        "Automation developers looking to learn new automation skills",
        "Professionals looking to switch their career in the niche field of mobile test automation"
      ]
    },
    {
      "title": "Playwright - Complete Beginner Course 2024 (UI + API)",
      "url": "https://www.udemy.com/course/playwright-complete-beginner-course/",
      "bio": "Learn everything you need from Basics to Advanced to get started with Microsoft Playwright Test using Typescript",
      "objectives": [
        "Playwright Basics",
        "Interacting with Web Elements",
        "Setup Page Object Model",
        "Debugging with Playwright",
        "Setup Test Automation Framework",
        "Optimizing Test Framework",
        "Handling Authentication Tests",
        "Building Beautiful Reports",
        "Integration with GitHub Actions"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What is Playwright?",
          "Getting the most out of this course",
          "Before you get started",
          "Join the Community!",
          "Source Code Access"
        ],
        "Playwright Setup & Installation": [
          "NodeJS Setup",
          "VSCode Installation",
          "Playwright Project Setup (v1.43)",
          "Playwright Extensions Setup",
          "Playwright Config Walkthrough",
          "Quick Note",
          "OLD - Playwright Project Setup",
          "OLD - Playwright Extensions",
          "OLD - Playwright Config Walkthrough"
        ],
        "Write Tests": [
          "NOTE: URL Update",
          "Setup First Test",
          "Quick Note",
          "Setup First Test",
          "Fail Test and Review Error",
          "Exercise: About Page Test",
          "Solution: About Page Test",
          "Quiz 1"
        ],
        "Page Locators & Selectors": [
          "CSS Selector",
          "Text Selector",
          "Text and CSS Selector",
          "Xpath Selector Update",
          "XPath Selector",
          "Working with Multiple Elements",
          "Exercise: Contact & Blog Page",
          "Solution: Contact & Blog Page"
        ],
        "Assertions": [
          "Assertions in Detail",
          "Soft Assertions"
        ],
        "Upload File": [
          "Upload Test",
          "Upload on a Hidden Input"
        ],
        "Wait Commands": [
          "Wait For Timeout",
          "Wait For State",
          "Assertion Timeout",
          "Quiz 2",
          "Leave a review"
        ],
        "Debugging": [
          "Debug Console",
          "Playwright Trace Viewer",
          "Playwright Inspector",
          "Recording Script"
        ],
        "Page Object Model": [
          "What is Page Object Model?",
          "Page Template",
          "HomePage Locators",
          "Enabling Auto Suggestion for Page Objects",
          "Home Page Methods",
          "Component Model",
          "Upload Component Setup",
          "Exercise: Contact and Blog Pages",
          "Solution: Contact and Blog Pages",
          "Quiz 3"
        ],
        "Framework Optimization": [
          "Eslint Setup",
          "Reuse Base URL",
          "Before Hook - Page Initialization",
          "Randomize Data",
          "Parameterize Tests"
        ]
      },
      "requirements": [
        "Basic familiarity with HTML/CSS",
        "Basic familiarity with Javascript"
      ],
      "description": "Microsoft Playwright is the latest and one of the most popular end-to-end test automation frameworks in the industry. Playwright is an accessible and beginner-friendly tool that is compatible with all major browsers and can be used with a variety of programming languages including Typescript, Javascript, Python, Java, and .NET. It's also free to use for anyone, whether you're a startup or an enterprise.\nIn this course, you will learn all about Playwright - from setting up your first test to building a fully functional framework. Along the way, you'll learn about the best practices for automation and how to become a top automation engineer.\nHere's a preview of what we'll cover in this course:\nIntroduction to Playwright and its features\nSetting up your machine for the perfect automation experience\nInstallation and setup\nStep-by-step guide on how to write tests\nWorking with different types of elements\nUnderstanding wait commands\nUsing assertions and their advantages\nDebugging your tests when they fail\nSetting up a fully functional framework using the Page Object Model\nOptimizing your framework for better performance\nBuilding beautiful reports for test results\nIntegrating tests with GitHub Actions\nImplementing APIs within the UI Tests\nAnd much more.\nAll of the topics will be taught with real-life examples, and the course will include exercises and quizzes to challenge and test your knowledge. We will also keep the course updated with the latest developments in Playwright to ensure that you have access to the most current information.\nEnroll now and take the first step to becoming a top automation engineer with Playwright.",
      "target_audience": [
        "Devs/QA interested in learning Playwright in a short amount of time",
        "QA Engineers looking to get started with Web Automation using Playwright",
        "SDET looking to expand their knowledge with Typescript Web Automation using Playwright"
      ]
    },
    {
      "title": "Manual and Automation Software Testing with help of ChatGPT",
      "url": "https://www.udemy.com/course/manual-and-automation-software-testing-with-help-of-chatgpt/",
      "bio": "Discover how QA Engineers and Software Testers can use Generative AI (GenAI) for manual and automated software testing",
      "objectives": [
        "Learn how to use Generetive AI (ChatGPT) for Manual Software Testing",
        "Learn how to use GenAI (ChatGPT) for Automation Software Testing",
        "Each video for the Manual Testing includes real-life examples, which helps to better understand the usage of AI(ChatGPT) on the real projects",
        "Learn how a Manual QA Engineer can Automate work with the help of GenAI (ChatGPT) in a short period of time",
        "Learn how to create and run JavaScript/Playwright test script for Login, My Account, End-to-Eng purchase flow",
        "Learn how to create and run Selenium/Java test script for Search, Sorting, Navigation, Form Submission, Report, Verification",
        "Each video for the Automation Testing includes source code and practical example, which you can use to practise on our website"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "ChatGPT for Manual Software Testing": [
          "ChatGPT Overview (How to use ChatGPT for Software Testing?)",
          "Review Software Business Requirements",
          "Assistance with building the Test Plan",
          "Assistance with test monitoring and control",
          "Assistance with Test Design of manual test cases",
          "Assistance with writing a bug report",
          "Assistance while writing automation test scripts",
          "Assistance in API testing",
          "Assistance in creating test tables, lists",
          "Assistance in writing SQL queries",
          "Assistance with data generation",
          "Top 3 Best AI Alternatives to CHATGPT for Software Testing"
        ],
        "Coffee Break": [
          "Coffee Break"
        ],
        "ChatGPT for Automation Software Testing - JavaScript/Playwright": [
          "001 - How to set up the JavaScript/Playwright environment",
          "002 - How to set up a new project and install Playwright with npm init",
          "002.1 - JavaScript/Playwright test script configs and first launch",
          "Source codes for each lecture",
          "Troubleshooting - Understand the Logic, Not Just the Instructions",
          "003 - JS/Playwright test case for website login with ChatGPT - Part 1",
          "003 - JS/Playwright test case for website login with ChatGPT - Part 2",
          "JavaScript Playwright test case for Login - Troubleshooting",
          "004.2 JS_Playwright test case for login Negative cases with Chat GPT",
          "005 - JS/Playwright test cases for Adding address with ChatGPT - Part 1",
          "005 - JS/Playwright test cases for Adding address with ChatGPT - Part 2",
          "005 - JS/Playwright test cases for Adding address with ChatGPT - Part 3",
          "005 - JS/Playwright test cases for Adding address with ChatGPT - Part 4",
          "JavaScript Playwright MyAccount - Troubleshooting",
          "006 - JS/Playwright test case for End-to-Eng purchase flow - Part 1",
          "006 - JS/Playwright test case for End-to-Eng purchase flow - Part 2",
          "006 - JS/Playwright test case for End-to-Eng purchase flow - Part 3",
          "006 - JS/Playwright test case for End-to-Eng purchase flow - Part 4",
          "JavaScript Playwright - End-to-Eng purchase flow - Troubleshooting",
          "007 - XPath Playwright Locators - Part 1",
          "007 - XPath Playwright Locators - Part 2",
          "007 - XPath Playwright Locators - Part 3",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 1",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 2",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 3",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 4",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 5",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 6",
          "008 - JS/Playwright End-to-End Purchase Flow: Optimization with XPath - Part 7",
          "009 - Coming Soon",
          "010 - How to install GITHUB",
          "011 - How to push project to GITHUB",
          "012 - How To Pull Project from GitHub to Visual Studio Code",
          "013 - POM model intro + URL (Static Values)",
          "014 - POM - Consent Pop-up (Dynamic Interactions)",
          "015 - POM - XPath",
          "016 - POM - Test Data",
          "017 - Login - Code optimization with ChatGPT",
          "018 - My Account - Code Optimization"
        ],
        "ChatGPT for Automation Software Testing - Selenium/Java": [
          "Selenium/Java test case with help of ChatGPT",
          "HOW TO INSTALL JAVA JDK",
          "HOW TO INSTALL IntelliJ IDEA Community Edition",
          "HOW TO SETUP Selenium WebDriver Chrome",
          "Source codes for each lecture",
          "Selenium WebDriver browserOptions()",
          "Selenium Locators XPath",
          "Selenium Locators XPath With Help Of CHATGTP",
          "Selenium/Java Interactions with web elements",
          "TestNG assertions With Help Of CHATGTP",
          "Test report for Selenium Java test script With Help Of CHATGTP",
          "Selenium/Java test case for a search with help of Chat GPT",
          "Selenium/Java test case for Sorting on web page with help of Chat GPT",
          "Selenium/Java test case for navigating to PLP>PDP>Minicard with help of Chat GPT"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone. This course is about how Generative AI (GenAI) can be useful for a Manual Software Tester or a Tester who would like to automate with the help of AI.\n\nThe course will be useful for testers:\nAbsolute beginners in Software Testing who want to learn the usage of one of the most popular AI ChatGPT for Manual and Automation Testing\nExperienced Manual Software Testers who want to learn how to automate test cases with the help of ChatGPT in a short time\nAnyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT\nTo help you understand how and whether we need ChatGPT for testing, we have prepared two parts of our course:\nFirst, we learn how to use Generative AI (GenAI) (ChatGPT) for Manual Software Testing\nIn particular, we will familiarize ourselves with such aspects of using ChatGPT for Manual Software Testing as:\n1. Review Software Business Requirements\n2. Assistance with building the Test Plan\n3. Assistance with test monitoring and control\n4. Assistance with Test Design of manual test cases\n5. Assistance with writing a bug report\n6. Assistance in API testing\n7. Assistance in creating test tables, lists\n8. Assistance in writing SQL queries\n9. Assistance with Data Generation\nEach of these aspects of using ChatGPT for software testing is shown in real-life examples to better understand the purpose of using this tool.\nAlso, in the course, we will discuss the top 3 AI alternatives to ChatGPT for Software Testing. In particular, we will take a look at alternatives such as Bard AI (By Google), Bing AI (By Microsoft), and Chatsonic AI by Writesonic\n\nIn this course, a manual QA Engineer can learn how to successfully write and then run the test script for the desired test case within one or a few days.\nFor that reason, we have prepared the Second part of the course, How to use Generative AI (GenAI) (ChatGPT) for Automation Software Testing\nIn particular, you will overview the lectures for the different automation tools using various programming languages:\nPlaywright/JavaScript:\n001 - How to set up the JavaScript/Playwright environment\n002 - How to set up a new project and install Playwright with npm init\n002.1 - JavaScript/Playwright test script configs and first launch\n003 - JavaScript/Playwright test case for website login with the assistance of ChatGPT\n004 - JavaScript/Playwright test cases for login (Negative cases) with the assistance of ChatGPT\n005 - JavaScript/Playwright test cases for My Account(Adding address) with the assistance of ChatGPT\n006 - JavaScript/Playwright test case for End-to-Eng purchase flow\n007 - XPath Playwright Locators\n008 - JavaScript/Playwright End-to-End Purchase Flow: Code Optimization with XPath Locators\n009 - How to install GitHub\n010 - How to Push Project to GitHub\n011 - How To Pull Project from GitHub to Visual Studio Code\n012 - POM model intro + URL as a Static data\n013 - POM - Consent Pop-Up - dynamic interactions\n014 - POM - XPath\n015 - POM - Test Data\n\n\nSelenium/Java:\n1. How to write and run a Selenium/Java test case with ChatGPT.\n2. HOW TO INSTALL JAVA JDK\n3. HOW TO INSTALL IntelliJ IDEA Community Edition\n4. HOW TO SETUP Selenium WebDriver Chrome\n5. Selenium WebDriver browserOptions()\n6. Selenium Locators XPath\n7. Selenium Locators XPath With Help Of CHATGPT\n8. Selenium/Java Interactions with web elements\n9. TestNG assertions With the Help Of CHATGPT\n10. Test report for Selenium Java test script With Help Of CHATGPT\n11. Selenium/Java test case for a search with the help of Chat GPT\n12. Selenium/Java test case for Sorting on a web page with the help of Chat GPT\n13. Selenium/Java test case for navigating to PLP>PDP>Minicard with the help of Chat GPT\n\nEach lecture from the part of the course on using Generative AI (GenAI) (ChatGPT)for automation software testing is shown on our website, where we created separate components to show everything in practice. For each of our lessons, we created a separate class in the IntelliJ IDEA Integrated Development Environment for the Selenium/Java lectures and Visual Studio Code for the Playwright/JavaScript lectures. So it will be easier for you to find the code you need in the future.\nThe final code will be available in the lecture materials, on our website, and in the case of  Playwright/JavaScript lectures on GitHub. We can open our webpage, run it, and check the results using this code.\n\nWe hope you will enjoy the course and feel free to write reviews and send topics that you would like to see,\nPrepare a cup of coffee or another favorite drink and enjoy the course!",
      "target_audience": [
        "QA Engineers",
        "Software Testers",
        "Absolute beginners in Software Testing",
        "Experienced Software Testers who want to learn how to use ChatGPT for testing purposes",
        "Anyone who wants to take the first steps in Software Automation Testing with the help of ChatGPT"
      ]
    },
    {
      "title": "Master Selenium WebDriver-Java: Scratch to Advance + CI/CD",
      "url": "https://www.udemy.com/course/master-selenium-java-sariful/",
      "bio": "Hands-On Selenium (Latest V4) Automation with Java from Scratch to Advance- frameworks integrated with CI/CD pipeline",
      "objectives": [
        "***By the end of this course, You will be MASTER with a solid foundation in Selenium WebDriver including architecture design and integration with Core Java",
        "You will learn, how to Automate Complex Web Interactions",
        "You will gain how to implement Advanced Selenium Features including WebDriver Version 4",
        "**Industry knowledge on TestNG, MAVEN, LOG4J, HTML REPORTS, APACHE POI API, GRID, PARALLEL TESTING, JENKINS, GIT-GITHUB, GRID & DOCKER",
        "Able to lead and develop a Robust Test Automation Framework from scratch including Data-Driven and Hybrid frameworks.",
        "Integrate Test Automation with CI/CD Tools for continuous integration and version control",
        "Able to create customized HTML GUI REPORTS to share with different Teams and Managers",
        "Will gain Collaboration development knowledge using Git, GitHub version control",
        "**By the end of this course, You will gain hands-on experience with end-to-end projects, troubleshooting common automation issues",
        "Able to enhance Script Reliability and Maintainability",
        "Will learn how to use Gen-AI in Testing including automation scripting",
        "**Last but not least- You will get complete INTERVIEW GUIDES to crack any interview like a Pro!",
        "Welcome to setup 1:1 Mock Interview session or career guideline"
      ],
      "course_content": {
        "Course Introduction": [
          "**Course Outline** (Must Watch)",
          "How to Start-Roadmap to become a Selenium Pro!",
          "Selenium Features and Architecture (WebDriver V3 vs V4)"
        ],
        "Install Java & Set Environment-Kickoff Selenium with basic Maven Project": [
          "Install Java and Set Environment Variable on Windows",
          "Install Java and Set Environment Variable on Mac",
          "Install Eclipse and Kickstart First Maven Project from scratch",
          "Relation between WebDriver interface and implementing browser classes",
          "Launch the First Test Case with a Chrome Browser",
          "Run Selenium Test Cases on ALL Major Browsers",
          "Basis methods of Webdriver",
          "Quiz-Test What You've Learned!"
        ],
        "Enhance Java Basic Knowledge": [
          "Java Introduction: Java Class and Object",
          "Java Variable, Data Types and Operators",
          "Method in Java-How to create method",
          "Static Keyword in Java",
          "Loops in Java: while, do-while, and for loop explanation",
          "Java for-each or Enhanced loop",
          "Array in Java: Declare and Initialization Array",
          "Multi-dimensional Arrays in Java",
          "Break and Continue statement in Java",
          "Switch Case statement in Java",
          "Packages and Access Modifier in Java",
          "Constructor in Java",
          "Exception: How to handle exceptions in java",
          "Essential Array Interview Questions",
          "Frequently Asked String Interview Questions"
        ],
        "Selenium Locators to Spy Web Elements": [
          "**Important Note: Get the document for all the lectures related to this section",
          "Understand Selenium Locators and why do we need locators",
          "Types Locators with Examples",
          "Xpath & CssSelector Locators with Example (including SelectorsHub tool)",
          "Advance Locator_Part 1: Use case of contains() & text() methods",
          "Advance Locator_Part 2: Custom dynamic Xpath with Example",
          "Advance Locator_Part 3: Traverse from parent to child",
          "Advance Locator_Part 4: Traverse from sibling to sibling",
          "Advance Locator_Part 5: Traverse from child to parent",
          "Quiz-Test What You've Learned!"
        ],
        "WebDriver Techniques to Automate common UI Scenarios": [
          "**Important Note: Get the document for all the lectures related to this section",
          "Navigation Methods in Selenium",
          "Handling traditional & latest Static Dropdowns",
          "Handling Dynamic Dropdowns",
          "Handling Keyboard & Mouse events in Selenium",
          "Handling Radio Button in Selenium",
          "Handling Checkbox in Selenium",
          "Handling pop-up window or JavaScript alert in Selenium",
          "Handling Web Cookies in Selenium",
          "Technique to find Broken Links in Selenium",
          "QUICK REMINDER: Please Write a Review!",
          "Quiz-Test What You've Learned!"
        ],
        "isDisplayed(), isEnabled() & isSelected() methods in Selenium": [
          "**Important Note: Get the document for all the lectures related to this section",
          "Use case of isDisplayed() method in Selenium",
          "Use case of isEnabled() method in Selenium",
          "Use case of isSelected() method in Selenium",
          "Quiz-Test What You've Learned!"
        ],
        "Synchronization or Waits in Selenium": [
          "**Important Note: Get the document for all the lectures related to this section",
          "Implicit Wait with an Example including different types of Waits",
          "The importance of Explicit Wait with Example",
          "Fluent Wait in Selenium with Example",
          "QUICK REMINDER: Please Leave a Review!",
          "Quiz-Test What You've Learned!"
        ],
        "Real Time Functional Testing with Selenium": [
          "How to select a future date in a Calendar",
          "How to automate Booking Form and validate the confirmation",
          "Quiz-Test What You've Learned!"
        ],
        "Technique to Automate Frame and Multi-Window": [
          "**Important Note: Get the document for all the lectures related to this section",
          "Automate an Object inside a IFrame with example",
          "How to handle Multi-Window/Tab in Selenium",
          "Quiz-Test What You've Learned!"
        ],
        "ChromeOptions in Selenium with real examples": [
          "**Important Note: Get the document for all the lectures related to this section",
          "How to handle HTTPS certification issue in Selenium",
          "How to download a file and test in Selenium",
          "QUICK REMINDER: Please Leave a Review!",
          "Quiz-Test What You've Learned!"
        ]
      },
      "requirements": [
        "No Programming Experiences needed. Will start from SCRATCH",
        "Fundamental of Manual Testing",
        "No prior Selenium experience"
      ],
      "description": "Unlock the power of web automation and become a skilled test automation engineer with this comprehensive Selenium WebDriver course using Java. Whether you're a manual tester looking to transition to automation, a developer wanting to enhance your testing skills, or a student aiming to boost your software testing career, this course provides a step-by-step journey through practical, real-world Selenium WebDriver automation.\nWhat You'll Learn:\n***By the end of this course, You will be MASTER with a solid foundation in Selenium WebDriver including architecture design and integration with Core Java\n**Able to lead and develop a Robust and scalable Automation Framework from scratch including Data-Driven and Hybrid frameworks.\nImplement Page Object Model (POM) design pattern\n**Industry knowledge on TestNG, MAVEN, LOG4J, HTML REPORTS, APACHE POI API, GRID, PARALLEL TESTING, JENKINS, GIT-GITHUB, GRID & DOCKER\nHandle complex web elements and dynamic scenarios\nPerform parallel and cross-browser testing\nManage test data and implement data-driven testing\nAble to develop end-to-end real project using MAVEN build management tool\nGenerate comprehensive html Extent Reports\nIntegrate test automation with CI/CD pipeline using Jenkins\nCollaborative development knowledge using Git, GitHub version control\nAble to gain hands-on experience to troubleshoot common automation issues\nImplement Gen-AI in Testing including Automation with real-world scenarios\nBest practices for web automation\nInterview Q&A's\n\n\nCurriculum Sections:\nSelenium WebDriver and Java Fundamentals\nSetting Up Test Automation Environment\nWeb Element Interactions\nAdvanced Selenium Techniques\nReal time challenges with Dynamic Web Elements and solutions to handle it\nJava OOPS principles\nIn-depth TestNG Framework features\nPage Object Model Implementation\nCustom Testing Frameworks in Automation\nData-Driven Framework Design with real time project\nTest Data Management using Data-Driven Framework\nIntegrate Logging tools using Log4j2\nCustomized HTML Reporting\nContinuous Integration pipeline building using Jenkins\nCross browser Testing with Selenium Grid and Docker\nAutomation Best Practices and Industry Trends\n\n\nCourse Highlights:\n150+ lectures with hands-on projects\nReal-world case studies and industry-relevant examples\nLive coding demonstrations\nDownloadable source code and project templates\nLifetime access and updates\nQ&A support and community forums\nWelcome to setup 1:1 Mock Interview session\n\n\nPrerequisites:\nBasic Java or no coding experience\nFundamental of Manual Testing\nNo prior Selenium experience\n\n\nWho Should Enroll:\nManual Testers\nSoftware Developers\nQA Engineers\nTest Automation Engineers\nComputer Science Students\nIT Professionals seeking automation skills\n\n\nBonus Content:\nInterview preparation tips including Q&A's\n1:1 direct session for Career guidance or Mock interview\nIndustry-standard coding practices\nPortfolio building strategies\n\n\nInstructor's Promise:\nBy the end of this course, you'll have the confidence and skills to design, develop, and implement robust web automation solutions using Selenium WebDriver and Java. Transform your testing career and become an in-demand automation professional!\n\"Enroll Now and Start Your Automation Journey!\"",
      "target_audience": [
        "Freshers/Graduates",
        "Career Switchers are Welcome",
        "Manual Tester but no prior coding knowledge",
        "IT Professionals seeking automation skills",
        "Computer Science Students"
      ]
    },
    {
      "title": "Performance Testing Using Gatling",
      "url": "https://www.udemy.com/course/performance-testing-using-gatling-advanced-level/",
      "bio": "Session Management in Gatling, POST request methods, Jenkins Integration, Distributed testing, Performance Framework",
      "objectives": [
        "Gatling integration with Jenkins",
        "Develop performance framework for Gatling",
        "Detailed section on session management for handling dynamic response and related methods",
        "Gatling support for web socket and SSE protocol",
        "Building Injection profile for open and closed systems",
        "scala basics for Gatling",
        "Hands on activity on usage of different methods for POST , feeders, check etc.."
      ],
      "course_content": {
        "Scala Crash Course": [
          "Scala Introduction",
          "Use Case - Part 1",
          "Create Scala Project and Scala Worksheet",
          "Variables in Scala",
          "Type Hierarchy in Scala",
          "Use Case - Part 2",
          "Decision Statements in Scala",
          "Functions in Scala",
          "Classes in Scala",
          "Packages and Imports in Scala",
          "Error Handling in Scala",
          "String Interpolation in Scala"
        ],
        "Gatling 3.3 - Quick Start with Gatling Standalone Bundle": [
          "Install OpenJDK",
          "Download Gatling Bundle & Walkthrough",
          "Verify Standalone Environment",
          "Record Gatling Script - Using HTTP Proxy",
          "Record Gatling Script - Using HAR Converter",
          "Understand Recorded Simulation",
          "Edit & Run Recorded Simulation"
        ],
        "Gatling 3.3 -Gatling Integrated Development Environment Using Maven": [
          "Setup Maven",
          "Create Gatling Project Using Maven Command",
          "Import Gatling Project in IntelliJ",
          "Verify Gatling Script Development Environment",
          "Run Recorded Script from Gatling Integrated Development Environment"
        ],
        "Gatling - 3.3-Create your first Script - Quick Start with Gatling IDE": [
          "Primary components of Gatling Script-protocol,scenario,pause,simulation",
          "Add Checks",
          "Add Feeder",
          "Exit User on Failure",
          "Session Intro & Debug with Print Session",
          "Save Response Body using Check & Print it using Session API",
          "Conditional Execution"
        ],
        "Session Management in Gatling": [
          "Introduction",
          "Base Script",
          "Injecting Session data using feeders",
          "Extract response data & Inject into session using Check api, find and saveAs",
          "Fetch Session data with session api",
          "Session Management- Assignment 1",
          "Injecting data using Gatling Expression Language",
          "Session Management - Assignment 2",
          "Inject data using session API"
        ],
        "Working with HTTP Requests": [
          "Introduction",
          "Create POST request in gatling - RawFileBody Method",
          "POST -StringBody Method with string",
          "Post Dynamic body- StringBody method with EL String",
          "POST request - ElFileBody method method",
          "POST Request -StringBody method with expression",
          "Using randomly generated strings in Request body",
          "Using Custom Feeder in Request"
        ],
        "Gatling for SSE and websocket protocol": [
          "Introduction",
          "How WebSocket is different from HTTP",
          "Let's create Gatling Script for Websocket protocol",
          "How SSE is different from WebSocket",
          "Let's create Gatling Script for SSE protocol"
        ],
        "Advanced Simulation Setup": [
          "Introduction",
          "Injection Profile -Open System",
          "Staircase Load Pattern",
          "Injection profile -Closed System",
          "Throttling"
        ],
        "Gatling with Jenkins": [
          "Introduction",
          "The Plan",
          "Step 1: Gatling Maven Project",
          "Step 2: Run Gatling Project from CLI",
          "Step 3: Push Project to Git",
          "Step 4: Install Jenkins",
          "Step 5: Configure Jenkins and Run Gatling Project"
        ],
        "Create Performance Test Framework for Gatling": [
          "Introduction",
          "Step 1: Create a Gatling Project",
          "Step 2: Create the Basic Structure",
          "Step 3: Working with Configurable Parameters",
          "Step 4: Add Requests and Feeder Files",
          "Step 5: Build the Scenario",
          "Step 6: Simulation Setup",
          "Step 7: Run from CLI",
          "Step 8: Framework Enhancement - Tidbits",
          "Step 9: Gatling with DevOps",
          "Distributed Testing with Gatling",
          "Run Multiple Scenarios in Parallel"
        ]
      },
      "requirements": [
        "Students should be knowing basic concepts of Gatling or they can attend our beginner level course."
      ],
      "description": "Welcome to Performance Testing Using Gatling!\nIn this course, we will first lay the foundation by going through Scala concepts so that you understand Gatling's scripts better.\nThen we will dig deep into the concepts of Gatling like session management, feeders, checks, response handling, advanced level injection profiles, and more.\nWe will then move onto Gatling's support for protocols like SSE & WebSocket.\nGatling is getting popular as it fits well with continuous integration platforms. We do not want you to miss out on that, and hence a complete section is dedicated to the integration of Gatling with Jenkins.\nWhile you may think you are done with the advanced concepts, we believe that your journey has just begun. While we would have already given lots of hands-on activities, we present you with the development of a complete performance framework for Gatling.\nLooking forward to having you on board with us.\n\n\nRegards,\nBushra & Anuradha",
      "target_audience": [
        "Performance testers, developers, whoever wants to learn and implement performance testing"
      ]
    },
    {
      "title": "REST-services testing",
      "url": "https://www.udemy.com/course/rest-services-testing-in-60-minutes/",
      "bio": "Learn how to test REST-services with the most popular Google Chrome extension POSTman",
      "objectives": [
        "Work with Swagger UI",
        "Test REST-apps with POSTman",
        "Understand REST-app philosophy"
      ],
      "course_content": {
        "Preparation": [
          "Introduction",
          "Sample REST-app",
          "Swagger UI",
          "POSTman",
          "Summary"
        ],
        "Practice": [
          "Simple GET test",
          "Simple POST test",
          "Simple PUT test",
          "Simple DELETE test",
          "Query parameters",
          "Validation handling",
          "Authentication & Authorisation",
          "Summary",
          "Final self control"
        ]
      },
      "requirements": [
        "Google Chrome",
        "Java 8"
      ],
      "description": "This course teaches you how to work with REST-client POSTman developed as extension to Google Chrome. You will see a real tests which you are able to repeat locally with test app. If you are Tester or QA engineer this course exactly for you! The real world examples from the course will help you to apply the acquired knowledges to your work projects.\nThe essential skills which the course gives to you:\nUnderstand REST-app architecture\nComprehensive theory! Overview of GET / POST / PUT / DELETE HTTP requests\nUsage of POSTman for testing of REST-services\nBasics of an authentication & authorisation handling!\n5. Practical examples\n6. Real rest application, which you run locally with a Swagger UI!\nSpend 60 minutes of your time to boost your technical skills in a testing of RESTful web services.\nInvest in yourself and bi in front!",
      "target_audience": [
        "Testers",
        "QA Engineers"
      ]
    },
    {
      "title": "Selenium Automation: a complete package",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-maven-jenkins-git-cucumber/",
      "bio": "Learn selenium and integrate with TestNG, Maven, GitHub, SonarQube, GMail and Jenkins",
      "objectives": [
        "A complete Automation Testing including Selenium basic, Selenium frameworks like Page Object Model, KeyWord Driven Framework",
        "They will learn Maven and TestNG",
        "And then they will learn how to integrate with Jenkins and GitHUB",
        "Also you will learn Cucumber with Selenium Java"
      ],
      "course_content": {
        "Introduction to Selenium WebDriver": [
          "Selenium WebDriver - Eclipse Project Setup",
          "Basic Object Oriented Progamming concept",
          "OOPS: Inheritance",
          "OOPS: Overriding (dynamic polymorphism)",
          "OOPS: Encapsulation",
          "OOPS: Encapsulation with POJO class",
          "OOPS: Abstract class (Abstraction)",
          "OOPS: Interface (Abstraction)",
          "Selenium - WebDriver - WebElements and WebLocators"
        ],
        "Selenium WebDriver Basics": [
          "Selenium History & Project Setup Using Jars and Maven",
          "Selenium Basic",
          "Learn WebDriver with examples"
        ],
        "Page Object Model (POM) in Selenium": [
          "Page Object Model (POM) in Selenium Part-1",
          "Page Object Model (POM) in Selenium Part-2",
          "Learn Page Object Model (POM)"
        ],
        "Keyword Driven Framework": [
          "Create complete Keyword Driven Framework with Apache POI"
        ],
        "Jenkins Configuration with TestNG - Gmail - SonarQube - GITHUB": [
          "Configure Jenins with Selenium + TestNG + Maven +GITHUB"
        ],
        "Cucumber with Java - Maven - Selenium Tutorial": [
          "Configure Jenins with Selenium + TestNG + Maven +GITHUB"
        ],
        "Special Section: GITHUB with Selenium Framework": [
          "GIT & GITHUB with Selenium Project"
        ]
      },
      "requirements": [
        "If you want to be a master in Automation Testing, you should learn Core Java first. This course is only for automation testing"
      ],
      "description": "This course will give you complete automation testing knowledge and you will be a full-stack automation engineer, where you will learn selenium and integrate with TestNG, Maven, GitHub, SonarQube, Gmail, and Jenkins\n· This course will start from a very basic level with no prior experience required and cover End-To-End automation with Selenium & Jenkins.\nAt the end of the course, we will also learn Cucumber a Behavior Driven Development framework and will be used along with Gherkin, Selenium, Java, Maven, Eclipse, GIT\n· This course will also cover how you can push your written code to GIT (Version Control System) and use that code in Jenkins (CI) to run your automation and generate reports.\n· This course will give you enough knowledge to implement an automation framework for your upcoming project.\n· We will learn Page object model, keyword-driven framework, data-driven framework with TestNG.\n· After that we will integrate the project with Jenkins and GITHUB and create a pipeline (CI).\n· You will learn how to push your local changes to GIT Hub using GIT commands. These commands are very useful for day-to-day automation.\n· We will see how to write a Step definition file, Feature file, and different cucumber options to execute it.\n\n\nI am hoping you will get something out of it. Please do comment if you like this tutorial.",
      "target_audience": [
        "Manual Testing, Business Analyst, Students who wants to start career in Automation"
      ]
    },
    {
      "title": "Microservices Contract Testing with Pact",
      "url": "https://www.udemy.com/course/microservices-contract-testing-with-pact/",
      "bio": "This Course explains Why/How to write contract tests for Testing Microservices using Pact Testing tool on Live Projects",
      "objectives": [
        "Understand the differences between Monolithic and Microservices Architecture",
        "Realize the Importance and necessity of Contract Testing in the Microservices Architecture",
        "Learn to build effective Contract Tests using Pact Testing tool to test the Inter communication between two Systems",
        "Understand writing Consumer Driven & Provider Tests to generate the Integration check of two services",
        "Deeper Understanding of Pact Contract Testing tool and its related Orchestrator tools like Pact flow to centrally manage Contract files"
      ],
      "course_content": {
        "Introduction to MicroServices and advantages of them": [
          "Course Goals -Objective (Must watch)",
          "Differences between Monolithic and Microservices Architecture",
          "How MicroServices communicate with each other in the Distributed Systems",
          "Importance of Microservices Integration testing in Agile world"
        ],
        "Importance of Contract Testing in MicroServices Agile world": [
          "Why Contract Tests are important to have? And its advantages",
          "Setting up Microservices in local systems and walk through the code"
        ],
        "Setting up Pact Contract Testing tool and build Consumer Driven Tests": [
          "How to install and Configure Pact Library for Contract testing",
          "Defining Pact Server configuration and related Interactions with response",
          "Understand how to write Unit Tests on Pact Server to generate Contract Json file",
          "Section Quiz"
        ],
        "Generate Contract file and Setup Provider Runner to run on Contract tests": [
          "How to configure Pact Library on Provider side Microservice",
          "Setting up Pact Provider side tests configuration with Context object",
          "Define State change Actions and run the Tests on the Consumer Contract file",
          "Section Quiz"
        ],
        "How Contract Testing catches bugs if Changes made on Provider Microservice": [
          "How Contract test reports failure on change in API response contract",
          "How to generate contract only on required fields of Consumer with regex"
        ],
        "End to end Contract validations on both Consumer and Provider Microservices": [
          "Demonstration on Negative Scenario Real world example on Contract testing",
          "Build Consumer side Unit tests on Pact Mock server to generate Contract file",
          "Run tests on the Provider side Unit tests by updating State of actions",
          "Building the Pact Server configuration for Negative Scenarios of no data found",
          "Update the States on Provider side to update the data as per contract test"
        ],
        "Pact Flow - Orchestrator to manager Contract file gobally between Microservices": [
          "What is Pact flow. How to setup Pact flow account and generate tokens",
          "How to publish the Contract from the Consumer repo to Pact flow",
          "Retrieving the Contract file from Pact flow to Provider repo with config changes",
          "Section Quiz",
          "Article reading"
        ],
        "article": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic Java",
        "Spring Boot fundamentals ( Good to have but optional)"
      ],
      "description": "\" Contract Testing \" is one of the most buzzing word in the Software Industry especially in the projects which relies heavily on Microservices Architecture.\nContract testing is the Modern way of testing communication/Contract between two any Systems (Such as Microservice, Angular NodeJS, Java Apps).    In Agile world, Contract Testing  is heavily used in the bottom of the Test Pyramid  to identify the bugs in early development cycle.\n***For More details, Please watch Preview lectures of this course to get detail understanding of how and Why Contract Testing****\nIn this course, We shall be using Pact Contract testing tool (Java Library) to test the inter communication contract between Microservices\nWhat this Course offers?\nThis course  helps you to understand all the concepts revolving around Contract testing first to make you realize the importance of having these tests in the Projects\nAnd then introduces the Contract testing tool called Pact and gets deep dive into writing Consumer & Provider driven Contract tests to test Microservices Inter communication.\nI will also show you different helper orchestrator tools available such as Pactflow to centrally manage Contract files across the Projects.\nOn course completion, You will have thorough understanding of how Microservices communication works internally and how can we test this communication using Pact Contract Testing tool.",
      "target_audience": [
        "Automation Testers",
        "QA",
        "Developers",
        "Software Engineers"
      ]
    },
    {
      "title": "Appium and Selenium with Python From Basics to Framework.",
      "url": "https://www.udemy.com/course/appium-and-selenium-with-python/",
      "bio": "Python TestAutomation (Python Basics, Appium, Selenium, Allure Reporting Tool , BDD ,Saucelabs and Jenkins)",
      "objectives": [
        "Complete Python Test Automation like Appium , Selenium , Allure Reporting Tool, BDD Basics, Jenkins along with Python Basics"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Fixing Video and Audio issues",
          "Pre-Requirements for the course",
          "Introduction to Appium",
          "Appium Architecture",
          "Missing Concepts and issues in the course"
        ],
        "Update on Appium 2.19.0": [
          "Appium 2.19.0 Update",
          "Notes : Appium 2.19.0 Update"
        ],
        "Appium and Selenium Configuration in Windows": [
          "Python Installation",
          "Appium and Selenium python libraries installation",
          "PyCharm Installation",
          "Appium Server and UiAutomator2 driver installation.",
          "Appium configuration using nodejs",
          "Appium Inspector Update",
          "Android Studio installation"
        ],
        "Appium and Selenium Configuration in Mac": [
          "Python , Appium ,Selenium , PyCharm Configuration",
          "Appium configuration using nodejs",
          "Appium Inspector Update",
          "Android Studio installation",
          "Xcode Configuration"
        ],
        "Python Basics": [
          "Introduction to Python",
          "Variables",
          "Data Types",
          "Type Casting",
          "Operators",
          "String Data Type",
          "List",
          "Tuple",
          "Dictionary",
          "Sets Concepts",
          "Conditional Statements ( if , if else , if elif else etc)",
          "While Loop",
          "For Loop",
          "Different types of Functions",
          "Lambda Expressions",
          "Packages and Modules",
          "OOPS - Classes and Objects",
          "Inheritance",
          "Super keyword",
          "Data Hiding",
          "Python Decorators"
        ],
        "Android Device and Emulator Configuration": [
          "Android Emulator Configuration",
          "Android Real Device Configuration"
        ],
        "Install Android Demo APK": [
          "Install Android Demo APK",
          "Install Android Demo APK Doc"
        ],
        "Inspecting Tools": [
          "Appium Inspector"
        ],
        "Launch App Using Appium": [
          "Update regarding Locators",
          "Update Regarding Desired Capabilities",
          "Introduction to Desired Capabilities",
          "Appium 2.2.2 Code update",
          "Sample Code for Appium 2.2.2",
          "Launch App Code",
          "Code Explanation",
          "Launch App in Android Emulator",
          "Launch App in Real Android Device"
        ],
        "Start Appium Programmatically": [
          "Install Node JS and Appium package",
          "Note",
          "Start Appium Programmatically : By Python Code",
          "Code to Start Appium Programmatically",
          "Notes to Start Appium Programmatically"
        ]
      },
      "requirements": [
        "Computer or Laptop - Windows or Mac. Setup and installation instructions are included for each platform on all the topics of Appium (Android , IOS and Hybrid App) , Selenium , BDD , Jenkins and Basic Python.",
        "You no need to have any coding experience to start this course. Everything from the basics we have explained.",
        "Just we are required to spend your time and maintain the schedule to prepare,So that within 45-days you can complete the course."
      ],
      "description": "All the topics of Appium (Android , IOS and Hybrid App) , Selenium , BDD , Jenkins and Basic Python we have explained in this course\nAll the coding files whatever we have explained in the video, We have uploaded to udemy. So that you download and go through all those things.\nBelow are the Appium(Android and IOS) Topics discussed in the course.\nAppium Architecture\nAppium Inspector\nLaunch App in (Android , IOS both in emulator and real device)\nLocators (id,text,content-des,index,classname , XPath , findElements etc)\nWaits\nMethods to find Current activity , context , orientation , is device locked or not\nPerform Action using Android key codes\nElement Properties such as (is displayed , is enabled , is selected , size of element , location of the element on the screen)\nElement Actions Such as (Click , Send text, get text , get content description etc)\nGestures such as ( Scroll , LongClick , Tap , Drag and Drop , Swipe from [Left to Right , Right to Left , Top to Bottom and Bottom to Top])\nHybrid App Automation on (Android and IOS devices)\nPytest concepts (Fixtures , Run order , Conftest, Methods hierarchy)\nPython Logging concepts\nAllure Reporting Tool\nAppium Test Automation Framework (From Scratch to Advanced including Allure Reporting Tool)\nBelow are the Selenium Topics discussed in the course.\nSelenium Architecture\nElement Inspecting tools\nLaunch Webpage using (Chrome , FireFox and Safari)\nLocators (id,name,className,tag,LinkText,Partiallinktext,CSS, XPath and FindElements etc)\nWaits (Explicit and Implicit)\nGestures using Actions Chains Class ( Scroll,Double Click , Right Click operation etc)\nNavigation Methods such as (Forward , BackWard , Refresh WebPages etc)\nElements Properties such as (is displayed , is enabled , is selected , Size of a element , Location of a element etc)\nPerforming Actions on Radio buttons , Check Boxes , DropDowns , Multi Select operations , Iframes , Windows etc\nAlert buttons\nPytest concepts (Fixtures , Run order , Conftest, Methods hierarchy)\nPython Logging concepts\nAllure Reporting Tool\nSelenium Test Automation Framework (From Scratch to Advanced including Allure Reporting Tool)\n\n\nBelow are the Basic Python Topics discussed in the course.\nVariables\nDataTypes\nOperators\nType Casting\nString Data Type\nList\nTuple\nDictionary\nSets Concepts\nConditional Statements ( if , if else , if elif else etc)\nLoops (For Loop , While Loop)\nLoop Statements ( Break , Continue )\nDifferent types of Functions\nLambda Expressions\nPackages and Modules\nOOPS ( Classes and Objects , Inheritance , Super keyword , Data Hiding)\nPython Decorators\n\n\nBelow are the Python BDD(behave) Topics discussed in the course.(We will update with more concepts)\nConfiguration of BDD\nStructure of BDD\nCreating Feature and Step Definition files\nExecution of BDD\nBelow are the Jenkins Topics discussed in the course.\nIntroduction and drawbacks of Jenkins\nInstallation and Configuring Jenkins\nConfiguration of Job in Jenkins\nSchedule the Job according to the required time",
      "target_audience": [
        "People who willing to Automate Mobile and Web apps using python",
        "Manual Test Engineers",
        "Mobile and Web Manual Testers who willing learn Automation"
      ]
    },
    {
      "title": "Learning JMeter 5.0",
      "url": "https://www.udemy.com/course/learning-jmeter-50/",
      "bio": "Run tests, create reports, and analyze your app's performance with JMeter. Take remedial action to improve its perform",
      "objectives": [
        "This course is aimed at QA engineers, test managers, and software developers who want to performance-test and improve the quality of their software."
      ],
      "course_content": {},
      "requirements": [
        "A basic knowledge of the command-line and software testing terminology are required."
      ],
      "description": "Test your software's performance easily with JMeter! Load-test, monitor performance in real-time, create reports, and more. Apache JMeter offers a powerful and extendable testing solution for your applications. With this course, you will use JMeter to test both the performance and functionality of any required online asset—web services, databases, FTP, or web servers—using a single tool.\nYou'll even learn to test applications that run in the cloud. Distributed load testing has historically been an expensive and painful process when comes to very high workloads with an enormous number of users using multiple systems. JMeter to the rescue! Firstly, JMeter is an open-source tool and is thus free. Secondly, JMeter is able to send metrics to the database, so you may start any number of JMeter instances and get all results stored in one place- Influxdb and visualized in Grafana. JMeter is made up of components. You will use those components to plan and perform tests, using realistic demo scenarios. You will learn to monitor your app's performance in real-time and create test reports.\nBy the end of the course, you will be world-class at using JMeter in the real world.\nAbout the Author\nAnton Serputko is a senior performance analyst with experience in testing client-server-based mobile and web applications and developing open-source frameworks for load test execution/analysis/result storage and visualization. He is vastly experienced in load testing framework configurations from scratch to test both the client- (browser) and server-side. He's conducted load-testing result analysis with root-cause investigations and application profiling. He is an active speaker at QA events and a performance/QA training mentor.",
      "target_audience": [
        "Working with JMeter components to devise a test for your application's performance",
        "Create tests by recording component interactions and take remedial action",
        "The complete process of load-testing a web application to test your app's load handling ability",
        "Test responses from an API against the expected behavior to analyze how an app works as a whole",
        "Using collected metrics to generate reports for your organization about your app's performance",
        "Testing your app on different parameters to get accurate performance report for your client"
      ]
    },
    {
      "title": "Learn GenAI Tools & AI Agents for Software Testing",
      "url": "https://www.udemy.com/course/generative-ai-in-software-testing/",
      "bio": "2025 -Learn how Gen AI , AI Agents, AI plugins can boost your QA Automation productivity & demo of AI Powered Test tools",
      "objectives": [
        "Learn how to use Gen AI LLM's effectively to maximize your QA Productivity with smart prompt engineering skills",
        "Understand how to Generate & optimize the Test code into framework standards with Gen AI Plugins such as Github copilot etc",
        "Get overview of AI Powered Testing tools in current market and their capabilities for revolutionizing Test Automtion",
        "Learn how AI Agents work and how they can be used to perform Codeless browser Automation with help of LLM's",
        "Understand how to work with offline LLM's with full privacy and customize the LLM as per your project requirements",
        "Learn generating Test Artifacts in fly such as TestPlan, Testcases, TestData, Bug templates for given Business requirements",
        "Learn generating API Automation tests to framework level & SQL Queries with simple prompting to AI"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Course last Updated -August 2025 with topic : Claude Code - The Power of AI at terminal level\nEager to learn and catch up with all the AI stuff?  - You are at right place . This AI Testing course is designed to be your ideal companion, teaching how to use AI applications for your daily testing needs.\nFirstly, we will start with basic understanding of what AI Applications, Large language models & AI Agents are!  And then we deep dive into course content as three learning phases:\n\nBelow is breakup\nModule 1. Use of Generative AI for Testing\nHow to Generate Test plan, Test Data, Test cases, UI Automation codes (Selenium/Playwright/Cypress), API Automation (Rest Assured), Framework code Snippets (TestNG/Cucumber/Pytest), Database queries etc.\nHow to fix code issues and be productive on your working Code repository using tools such as GitHub copilot etc.\nEssential GenAI Testing plugins to boost the productivity\nHow to get LLM's work offline and fine tune LLM's according to your project requirements.\n\n\nModule 2. AI Agents to drive Test Automation ~~ Slightly Technical\nLive demo of how AI Agents in Software Testing can effortlessly perform Browser Automation with plan english instructions.\nIntegrating AI Agents into existing Automation Frameworks\n\n\nModule 3. AI powered Testing tools\nOverview of the popular AI powered tools which are built in combination of (AI Agents + Gen AI) with Live demo on how these work to maximize QA Productivity\n\n\nBelow are the vast In Detail topics we will be covering as part of our Generative AI Testing Module 1 examples :\n\n\nCreating test plans and requirements through AI.\nGenerating unit, integration, and functional test cases with AI.\nProducing test data relevant to different tests.\nProviding suggestions on distributing tests throughout the testing lifecycle.\nDeveloping automation scripts for test cases.\nCrafting custom utility code methods to automate functionalities.\nConfiguring framework-related files using AI.\nCreating Cucumber feature files and step definitions with real code via AI.\nGenerating UI tests using libraries like Selenium, Cypress, and Playwright.\nParsing complex JSON responses with simple AI prompts.\nGenerating JSON paths using plain English.\nCreating POJO classes for complex JSON files with AI prompts.\nDeveloping Rest Assured automation tests using contract documentation as input.\nGenerating custom utility code methods on-the-fly to validate API responses.\nProducing AI tests using libraries like Rest Assured, Cypress, and Playwright.\nFormulating SQL queries from complex database tables using simple AI prompts.\nWe utilize Google GEMINI (AI) to demonstrate topics.\nAnd this is not the end! We are continuously monitoring AI evolution and updating the course accordingly to meet testing needs.",
      "target_audience": [
        "Software Testers",
        "Quality Assurance Engineers",
        "Developers",
        "Business Analysts",
        "Freshers",
        "Product owners",
        "Scrum Masters"
      ]
    },
    {
      "title": "Masterclass Testing Machine Learning (AI) Models",
      "url": "https://www.udemy.com/course/introduction-to-testing-ai-models-llms-and-chatbots/",
      "bio": "Gain basic understanding how to test Foundation Models, LLMs, Chatbots and AI bases systems.",
      "objectives": [
        "Understand how AI is working",
        "Understand basic software testing and how to apply it to Artificial Intelligence Models",
        "Understand how Machine Learning Models are tested compared to traditional software",
        "Understand the Ethics behind Artificial Intelligence (AI) and how to validate biases in Large Language Models ( LLMs)",
        "Understand how to test reasoning abilities of AI",
        "Gain knowledge of reasoning types and how to validate Foundation AI Models against different logic and reasoning Types",
        "Gain knowledge on what is Natural Language Processing, and what tools can be used to test for it in a Machine Learning Model",
        "See how to benchmark AI against models \"HellaSWAG, MMLU, GLUE, BLEU, Humaneval\"",
        "Importance of test data and how model drifting degrades Large Language Model Performance",
        "See how chatbots can be tested with real Chatgpt examples",
        "Demo on testing Chat GPT with automated Tools",
        "Understand Adversial Testing techniques - Gain knowhow on how to perform attacks on Artificial Intelligence Models",
        "Understand the common and traditional metrcs what are used in Machine Learning field, such as F1 Score, Perplexity Recall and Accuracy",
        "Understand K- Folding Data techniques"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Material",
          "5 Minute Fast AI Testing Challenge",
          "History of AI from 1950 to 2024"
        ],
        "Setting up Environment": [
          "Install VS Code",
          "Installing Python",
          "Install Python Dependencies - PIP",
          "Installing Conda - Environment Isolator tool",
          "Install NodeJS and NPM",
          "Introduction to Hugging Face Community Page",
          "Hugging Face Transformers Python Package",
          "How to load and use any model from Huggingface"
        ],
        "Introduction to Artificial Intelligence -optional if you know the basics of AI": [
          "What makes up AI",
          "Natural Language Processing",
          "Types of Machine Learning",
          "Machine Learning - Supervised ML",
          "Machine Learning - Unsupervised ML",
          "Machine Learning - Reinforced ML",
          "Importance of Training Data",
          "What actually is GEN AI",
          "Transformer Architecture Model",
          "Chapter Quiz"
        ],
        "Overview of Machine Learning Model Testing": [
          "Types of Testing in Software",
          "Understand how ML models are tuned - General View",
          "Fine tunning techniques for AI and any LLM foundation model",
          "Overall Testing Approach to LLMs",
          "Testing Types for LLMs | Foundation Models",
          "Introduction to Benchmarking for LLMs"
        ],
        "Common Traditional Metrics for ML Models and how to calculate them": [
          "Understanding how to compute any score",
          "Ground Truth Table - source of Truth | Test Oracle",
          "Obtain the Prediction table from the LLM - Google Gemini",
          "Machine Learning Metrics - Accuracy",
          "Machine Learning Metrics - Precision",
          "Machine Learning Metrics - Recall",
          "Machine Learning Metrics - F1 Score",
          "Machine Learning Metrics - Perplexity",
          "Demo - Evaluate - Calculate Metrics with Python",
          "Demo - Pytorch - Calculate Perplexity for a Model",
          "Chapter Quiz"
        ],
        "RAG and Retrieval Augmented Generation Testing": [
          "What is RAG",
          "4 Types of RAG - Simple, Speculative, Graph, Corrective",
          "Create a RAG application with FAISS",
          "RAGAs Validation Framework - Retrieval",
          "RAGAs Validation Framework - Retrieval - Augmentation - Generation",
          "Rag framework - Coherence, Fluency and Relevance",
          "RAG Benchmarking - Nugget Coverage"
        ],
        "Evaluate Machine Learning Model based on DATA Split": [
          "Introduction to Splitting Data for AI/ML Models",
          "Demo - Python - Scikit - Split Data for Testing",
          "K-Fold Cross Validation",
          "Model Overfitting and underfitting testing approaches",
          "Laboratory - Python K Fold Training and Demo"
        ],
        "Performance Characteristics for AI Models": [
          "Criteria 1- Model Training Time",
          "Criteria 2 - Inference Time",
          "Criteria 3 - Model Drifting",
          "Criteria 4 - Infrastructure to run Model - Model Distillation",
          "Criteria 5 - Memory and Token Limits"
        ],
        "GLUE - Benchmark against NLP": [
          "What is GLUE NLP Benchmark",
          "What are the 11 benchmark Tasks of GLUE",
          "How to run a GLUE benchmark test",
          "Glue benchmarking on Bert Huggingface Model",
          "Demo - Python GLUE benchmark against GHATGPT"
        ],
        "Other benchmarks that are used today to benchmark AI": [
          "7 Benchmarking Models",
          "TruthfulQA - Truthfulness",
          "Python - Demo - Benchmarking Open AI CHAT GPT - TruthfulQA",
          "Python - Demo - Benchmarking Open AI CHAT GPT - MMLU",
          "Python - Demo - Benchmarking CHATGPT with BLEU Metrics",
          "Python - Demo - Benchmarking CHATGPT with TER Metrics",
          "What Is GPQA - Graduate Level Q&A",
          "Demo - Benchmarking - GPQA with Python",
          "Hellaswag - Can a model finish your sentence?",
          "Demo - Benchmark - HellaSwag",
          "Python - Demo - Benchmarking Open AI CHAT GPT - HumanEval",
          "Chapter Quiz"
        ]
      },
      "requirements": [
        "basic experience with software testing",
        "basic coding experience ( but not needed)",
        "optional - GPT model 4 subscription (but not needed)",
        "desire to learn the hottest skill on the market",
        "Basic programming in python",
        "VS Code, A mac/pc, OPEN AI API Key - not mandatory but desirable"
      ],
      "description": "Welcome to \"Testing AI: Foundation Models, LLMs, Chatbots & More,\" your comprehensive guide to understanding the fundamentals of testing advanced AI systems. Whether you're a developer, a data scientist, or simply an AI enthusiast, this course will equip you with the knowledge and skills necessary to assess and improve the reliability, performance, and safety of AI technologies.\nWhat You Will Learn:\nIntroduction to AI Testing: Understand the importance of testing AI systems, including ethical considerations and the potential impacts of AI failures.\nTesting Basics: Learn about different types of testing methodologies like unit testing, integration testing, and system testing as applied to AI.\nSpecial Focus on Foundation Models and LLMs: Dive deep into the challenges and techniques for testing large language models and foundational AI systems that are reshaping numerous industries.\nChatbot Testing: Explore the unique aspects of testing conversational AI, ensuring they respond accurately and appropriately in varied scenarios.\nAI System Evaluations: Learn how to design and implement effective testing regimes for different AI-based systems, using both manual and automated tools.\nK - Folding of Data: Understand how to split all your data into : Training, Evaluation and testing data. Get more out of your data by splitting and training it on the same data, but with different validation subsets each time, ensuring that your model learns from multiple perspectives. This technique helps improve generalization, reduces overfitting, and provides a more reliable estimate of model performance.\nCase Studies: Gain insights from real-world scenarios that highlight common pitfalls and best practices in AI testing.\nEthical AI: understand the risk with AI and the ethics behind AI. How can and should you test for this\nBenchmarking: Understand how to test the AI against some common benchmarking models such as: BLUE, HellaSWAG, MMLU, HumanEval and other.\nTesting ChatGPT / Chatbots  with the help of an API and integration this into MLOPS chain.\nAdversarial AI: understand how to test for robustness in AI Models\nWho This Course Is For:\nThis course is ideal for anyone looking to gain a solid grounding in the techniques and practices essential for testing AI systems. Whether you’re starting a career in AI, looking to enhance your professional skills, or interested in the mechanisms behind AI system reliability, this course has valuable insights for you.\nCourse Features:\nEngaging video lectures\nPractical assignments and hands-on projects\nQuizzes and exams to test your knowledge\nAccess to a community forum for discussion and collaboration\nLifetime access to course materials\nEnroll now to start mastering the crucial skill of testing AI systems and ensure you’re prepared to contribute to the development of safe and reliable AI technologies!",
      "target_audience": [
        "Citizen Developer",
        "Software testers",
        "quality engineers",
        "Engineering Directors"
      ]
    },
    {
      "title": "Mastering Selenium with Python for Test Automation",
      "url": "https://www.udemy.com/course/selenium-with-python/",
      "bio": "Step-by-Step Guide | BDD Framework | Robot Framework | Practical Automation Skills for Testers | Practice on live app",
      "objectives": [
        "Detailed knowledge of Selenium Concepts, Components and Element Locators",
        "Expert level knowledge with practical exposer of Python for Realtime implementation",
        "Will be ready to Write Selenium Automation Scripts single handedly with best practices",
        "Expert level understanding of BDD concepts and its implementation using Behave Framework",
        "Able to Develop Keyword Driven Framework using Robot Framework",
        "Will be able to Design and Use Design pattern like POM and Reporting Implementation"
      ],
      "course_content": {
        "Introduction to Selenium | Setup Selenium": [
          "Learning Roadmap of Selenium and Python",
          "Course Introduction with Structure and Best practices to use while learning",
          "Selenium Introduction with Advantages-Disadvantages & Components in Selenium",
          "Setup Selenium IDE on Firefox & Chrome for Record & Playback",
          "What is Selenium IDE ? How to Record & Play script using Selenium IDE",
          "Its time for Quiz:- Selenium Introduction, Setup & Basics",
          "Download Code & Use it while learning"
        ],
        "Environment Setup- Python | Pycharm | PIP | Libraries": [
          "Installation Roadmap : Python, Pycharm, PIP & Library",
          "Step 1 : Setup Python on Windows Machine with Environment Variable",
          "Step 2 : Setup Pycharm - Editor fort Python Programming",
          "Step 3 : Setup PIP : Package Manager for Python",
          "Step 4 : Install Libraries using PIP (Selenium & Other Libraries)",
          "Document: Statement to Install packages using PIP",
          "Solution : Installed Library but not able to use on Pycharm",
          "Its time for Quiz:- Installation Process & Configuration"
        ],
        "Getting start with basic PYTHON Programming": [
          "Download Code & Use it while learning",
          "Why as a Tester we need to learn Python? What all places we can use Python",
          "First Python Code : Create Python File, Comments & Print on Console",
          "How to take user input and use it in programming",
          "How to Declare and use Variables in Python",
          "Constants and Type Casting in Python",
          "Standard datatypes in Python : Number, String, List, Tuple & Dictionary",
          "Its time for Quiz: - Basic Python Programming",
          "Programming Exercise 1: User Input with Concatenation (with solution)",
          "Programming Exercise 2 : User Input with Type Casting (with solution)",
          "Document / Notes for Students Reference"
        ],
        "Control Execution using Condition Handling, Practical Examples and Exercise": [
          "Download Code & Use it while learning",
          "Condition Handling using If - Handle Single Condition",
          "Condition Handling using If - Handle 2 Conditions",
          "Condition Handling using If - Handle Multiple Conditions",
          "Condition Handling using - Nested Conditions",
          "Condition Handling with Logical OR and Logical AND",
          "Condition Handling **** Task 1 - Find Largest and Lowest among 3 numbers",
          "Condition Handling **** Task 2 - Find number is complete divisible",
          "Condition Handling **** Task 3 - Find number of days in a month",
          "Condition Handling **** Task 4 - Find triangle -EQUILATERAL|SCALENE|ISOSCELES",
          "Condition Handling **** Task 5 - Find Grade by calculating percentage",
          "Condition Handling **** Task 6 - Check number is EVEN OR ODD",
          "**** Solution of Given Programming Exercise ****",
          "Its time for Quiz: - Condition Handling"
        ],
        "Do Execution with --Loops -- | For, While, Break and Continue": [
          "Introduction of Loops - Why and Where to use Loops",
          "For Loop with Final Range - Run code until the given condition(value) reach",
          "For Loop with initial and final range -Run code between given range",
          "For loop with increment value - Run code with different increment value",
          "For loop with decrement value - Run code with different decrement value",
          "For loop with list - Running a loop on the List of values",
          "While Loop with increments - How to use while loop with increment condition",
          "While loop with decrement - How to use while loop with decrement condition",
          "Break Statement - When Loop in-between when a given condition match",
          "Continue Statement - Skip remaining part of Loop when condition match",
          "Else Statement - Execute some code once the loop is completed"
        ],
        "** Programming for Realtime Work & Interview Preparation **": [
          "Practical Programming - 1 :Take 2 input from user and interchange variable value",
          "Practical Programming - 2 : Print Rectangle",
          "Practical Programming - 3 : Print table where only display selective numbers",
          "Practical Programming - 4 : Write program to find factorial of a number",
          "Practical Programming - 5 : Write program to Generate Fibonacci series",
          "Practical Programming - 6 : Write program to check Number is Prime or Not",
          "Programming Solutions"
        ],
        "How to do String Handling -Must for Interview Preparation & Real Automation Work": [
          "What is String, How to Define String - Perform operation like Concat & Repeat",
          "String : Fetch Substring - By giving Start and End index values",
          "Common String Functions - Length, Capitalize, Upper and Lower",
          "Common String Functions -lStrip, rStrip and Strip",
          "Common String Functions - Replace Data, Find Data and Split Data",
          "Compare 2 Strings in Python with Practical Examples"
        ],
        "Complex Data Types | Work with List, Tuples and Dictionary": [
          "What is List - How to Insert, Fetch, Update and Remove data from List",
          "Common List function - Concatenate String and Find Length of String",
          "What is Tuple - Difference between List and Tuple",
          "Tuple advance operations - Count Values, Display Value and Merge Tuples",
          "What is Dictionary - How to define and use Dictionary in Python",
          "Dictionary Methods - Find all Keys & Value"
        ],
        "Functions in Detail | Learn how to write functions with different arguments": [
          "What is Function ? Why to write Function & How to create functions",
          "Basic thumb Rules to create functions with example",
          "Different types of functions : With Arguments and Without Arguments",
          "Write Functions with return value | Get output from functions",
          "Different types of arguments : Required, Keyword and Default"
        ],
        "Class in Python | How to implement Class, Constructors, Class Method and Objects": [
          "What is Class, How to Write Class and Members & Access members using Object",
          "Functions in Class (Class Methods): Access by using Class object",
          "Code for Reference : Class & Object(Code)",
          "Constructors : What is Constructor, How to write Constructors",
          "Constructors practical implementation : Why and Where we use constructors",
          "Access Class and Members in Different File using Class object"
        ]
      },
      "requirements": [
        "Basic understanding of Windows Operating System",
        "Good to have understanding of Manual Testing, Processes, Functional & Regression Testing",
        "Should be ready to invest atleast 30mins a day for practice and concept implementation"
      ],
      "description": "This course gives you maximum topic coverage starting from Selenium WebDriver Basics and Advanced level\n- Detailed Python Programming Concepts\n- Test Execution using Pytest Framework\n- Interview Preparation\n- Detailed Python Programming\n- Allure Reporting\n- No prior Automation or Programming knowledge is Required\nEnd to End Automation Frameworks\n-   Detailed Data Driven Framework using Excel\n-   End to End Implementation of BDD(Behavior Driver Development) framework with Behave\n-  Keyword driven framework implementation using Robot Framework\nCourse is designed in such a way that the user does not required to have any prior understanding of python scripting\n\nCourse Coverage\nBasic to advance Python Programming\nStep by Step Installation\nDetailed Python Scripting\nRecord and Play\nPycharm Editor & Pytest Framework\nElement locators\n·Webdriver API\nData driven Framework\nBDD framework with Behave & POM\nAPI Testing using Python\nJson Handling\nAllure Reporting\nEnd to End Frameworks: Data Driven, BDD Framework & Robot Framework - Keyword Driven Framework\nJenkins Integration\nSelenium python - Real time project implementation\nSelenium with python - Complete End to End Code\npython with selenium : Best Practices\npython with selenium : Architecture & Framework Design\npython selenium webdriver  : Realtime Practices\nCode Management using GIT\nCI/CD implementation using Jenkins\nBy the End of this Course you will able to understand best automation practice and write all kind of automation testcases using Selenium\n\n\nSelenium with Python\nPython Selenium Course\nSelenium WebDriver with Python\nPython for Selenium Automation\nSelenium Testing with Python\nLearn Selenium with Python\nPython Selenium Tutorial\nSelenium Python Automation Course\nWeb Test Automation with Selenium Python\nSelenium Python Scripting\nPython for Test Automation\nAdvanced Selenium with Python\nPython for QA Testing\nWeb Testing with Selenium and Python\nPython and Selenium for Beginners\nSelenium Automation Testing with Python\nSelenium WebDriver with Python\nPytest with Selenium Python\nSelenium Python Frameworks\nCI/CD with Selenium Python\nWeb Scraping with Selenium Python\nSelenium Python Integration with Jenkins\nSelenium IDE with Python\nTest Automation for QA with Python\nPython Skills for Selenium Testers\nSelenium Python Certification Course\nAutomated Browser Testing with Python\nSelenium Python for Quality Assurance\nSelenium Python for Web Application Testing\nSelenium Python Training\nSelenium Python Online Course\nLearn Selenium Web Testing with Python\nHands-On Selenium with Python\nSelenium Python Course for Beginners\nSelenium Python for Test Engineers\nPython for Automation Engineers",
      "target_audience": [
        "Manual Testers Looking Opportunity in Selenium with Python",
        "Freshers looking for opportunity in Automation Testing",
        "Any professional want to automate web application using Selenium and Python Programming",
        "Any professional want to start carrier in python Automation"
      ]
    },
    {
      "title": "Quick Introduction to Postman and API Testing for Beginners",
      "url": "https://www.udemy.com/course/postman-crash-course-for-beginners-learn-rest-api-testing/",
      "bio": "Learn Postman and REST API testing real FAST. Learn 80% of what you need in 20% of the time.",
      "objectives": [
        "Introduction to APIs by using Postman",
        "Start using Postman",
        "Overview of the HTTP messages",
        "Use query parameters, path variables and headers",
        "Read/write JSON",
        "Write basic API tests",
        "Work with Postman variables",
        "Create simple workflows",
        "Learn HTTP request methods: GET, POST, PATCH & DELETE"
      ],
      "course_content": {
        "Introduction": [
          "Course materials",
          "How to install Postman",
          "Updating Postman",
          "About the course",
          "A quick introduction to APIs",
          "Your first Postman request",
          "The HTTP protocol explained"
        ],
        "Creating requests in Postman": [
          "Postman collections",
          "Postman collections quiz",
          "Query parameters in HTTP requests",
          "Query parameters",
          "Assignment #1 - Query parameters",
          "Guided Assignment #1 - Step by step instructions",
          "Assignment #1 - Query parameters - Solution",
          "Path variables",
          "Query parameters and path variables",
          "API Authentication",
          "Troubleshooting HTTP status codes",
          "HTTP headers",
          "JSON format explained",
          "Assignment #2",
          "Guided Assignment #2 - Step by step instructions",
          "Assignment #2 - Solution",
          "GET vs POST",
          "Using random data in requests (random variables)",
          "How not to use Postman",
          "Assignment #3 - Adding more requests",
          "Assignment #3 - Step by step instructions",
          "Assignment #3 - Adding more requests - Solution",
          "PATCH request method",
          "DELETE request method"
        ],
        "Preparing for automation": [
          "Automation basics",
          "Your first API test",
          "Assignment #4 - Adding status code tests",
          "Assignment #4 - Step by step instructions",
          "Assignment #4 - Adding status code tests - Solution",
          "Learn JavaScript basics",
          "Postman variables",
          "Working with Postman variables from scripts",
          "Postman Variables",
          "Extracting data from the response",
          "Quiz - Working with JSON responses",
          "Assignment #5 - Dynamically setting variables",
          "Assignment #5 - Step by step instructions",
          "Assignment #5 - Dynamically setting variables - Solution",
          "Assertions on objects",
          "Assignment #6",
          "Assignment #6 - Step by step instructions",
          "Assignment #6 - Solution",
          "Assignment #7",
          "Assignment #7 - Step by step instructions",
          "Assignment #7 - Solution",
          "Assignment #8",
          "Assignment #8 - Step by step instructions",
          "Assignment #8 - Solution"
        ],
        "Automated collection runs": [
          "Running the collection manually",
          "Collection Runner",
          "Request execution order",
          "Postman monitors",
          "Newman - the Postman CLI tool",
          "HTML reports with Newman",
          "Automation overview"
        ],
        "Last words": [
          "Postman Interview Preparation",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Desire to learn Postman and APIs.",
        "The possibility to install Postman on Windows, macOS or Linux",
        "No programming experience needed, but it can be useful later on."
      ],
      "description": "Do you need to learn about Postman & APIs for your new position or for a job interview?\nYou are not the first one.  REST APIs are everywhere nowadays but you may not know where to begin. If you are a total beginner to APIs and are looking for a quick introduction to API by using Postman. This course is for you.\n\n\nWhat are APIs all about?\nToday, all IT systems are interconnected by using APIs, which are a way to exchange data, mostly by using a format call JSON.\nHowever, learning about APIs can easily get confusing. You need to know: different HTTP methods, headers, cookies, dealing with file uploads or authentication with API keys, tokens, OAuth and so much more.\nThis is where Postman comes in! Postman allows you very quickly to create a request with the required HTTP method and parameters, submit the request and easily inspect the results.\nPostman can help if you are developing APIs as well! I have created this course for testing engineers and well as for software developers.\nPostman can help you during the development of your API as well as after the API is completed, by running tests that make sure your API is still working as intended.\nIn this Postman crash course for beginners, we will start exploring the features of Postman, creating requests, and building simple workflows. Then we will continue by writing API tests and automatically running a Postman collection by using the Postman Collection Runner and Newman.\n\n\nIs this course for me?\nIf you need to get up to speed with Postman and start using APIs and don't have a lot of time, this course will probably take you very far in a very short time. You don't need much to get started, but you need to invest more than 3 hours. Just watching the content may not be enough to develop the skills needed. You need to do the work and the practice assignments.\n\n\nSo let’s look at what you are going to learn:\nStart with simple requests\nUse HTTP methods like GET, POST, PUT & DELETE\nUnderstand the difference between GET vs POST.\nWork with query parameters and path variables\nUnderstand HTTP headers\nLearn to deal with authentication (for example using Bearer token)\nStart writing API tests with JavaScript\nOrganize tests in collections and share them with your team\nRun API tests using the collection runner or Newman\nSo after this course, you will have an overview of Postman and can later decide in which areas you want to learn more.\nExcited to learn Postman? Join this course today!",
      "target_audience": [
        "This course is targeted towards testing engineers and developers.",
        "Anyone who needs a quick introduction to Postman"
      ]
    },
    {
      "title": "Learn Software Testing from Scratch",
      "url": "https://www.udemy.com/course/learn-software-testing-from-scratch/",
      "bio": "A Complete Guide to Master Software Testing Techniques",
      "objectives": [
        "To teach the software testing lifecycle",
        "To teach modern approaches to software testing",
        "To provide practical tips and tricks to QA professionals",
        "To teach complete testing process"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "What to Test and How to Test it?": [
          "Software Testing Fundamentals",
          "Software Testing Fundamentals - Part 2"
        ],
        "Common Phases of Testing": [
          "Phases of Software Testing",
          "Phases of Software Testing - Part 2"
        ],
        "Approaches to testing": [
          "Testing Approaches - Introduction",
          "Testing Approaches - Part 2"
        ],
        "Non Functional Testing": [
          "Fundamentals of Non Functional Testing",
          "Non Functional Testing Techniques",
          "Non Functional Testing Summary",
          "Environment Setup -Demo",
          "Environment Setup - Part 2"
        ],
        "Platform Specialization": [
          "Platform Specialization"
        ],
        "Test Automation": [
          "Test Automation Primer"
        ],
        "Test Driven Development": [
          "Test Driven Development"
        ],
        "Report Writing and Signoff": [
          "Software Test Plan",
          "Security Analysis Documents",
          "Penetration Testing Report"
        ],
        "Course Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of computers and software development"
      ],
      "description": "Software Testing is one of the most important and critical component of Software development life cycle. The testing team is ultimately responsible of Software quality and forms the bedrock before it goes out to actual users and to market place. Over the years with innovative development techniques the software testing and quality assurance field has undergone a sea change. With new techniques like TDD(Test driven development) taking hold in industry the software developers must understand the nuances of new approaches to software quality.\nWe at Eduonix always provide our students easy to grasp cutting edge technology training and this fun new course is aimed to get our Software quality Assurance professionals and developers both a quick but comprehensive training in the field of Software Testing.\nThis course of ours is divided into 8 main units:\nThe first one introduces you to the basic software testing field.\nThe second one teaches you to main software testing techniques\nThe third one deals with the phases of testing\nThe next one covers modern approaches to testing\nThe fifth one covers the all important non functional testing and also teaches Metaspoilt\nYou will also learn about testing peculiarities of different platforms\nThe next two chapters cover automated testing and test driven development\nWe also have provided sample documents for test plan and penetration testing\nSo get this and a lot more in this amazing course. It is a must for both software developers and quality professionals.",
      "target_audience": [
        "QA professionals",
        "Developers who like to understand testing techniques"
      ]
    },
    {
      "title": "Selenium Mastery: Advanced Web Automation Techniques",
      "url": "https://www.udemy.com/course/selenium-webdriver-masterclass-novice-to-ninja/",
      "bio": "Master Selenium IDE, WebDriver, and TestNG to automate web testing efficiently and confidently.",
      "objectives": [
        "Introduction to Selenium and its importance in web testing. Installation and setup of necessary tools like Java, Eclipse, and Selenium IDE.",
        "Fundamentals of Java programming language for Selenium automation. Working with Selenium IDE: recording, debugging, and executing scripts.",
        "Understanding basic Selenium commands and wait commands. Handling alerts and verifying/asserting alerts in Selenium IDE.",
        "Learn the automation testing best practices so that you can do Automation Testing with any tool",
        "Introduction to JavaScript basics for enhancing Selenium scripts. Utilizing user extensions and regular expressions in Selenium IDE.",
        "Parameterization of test cases and capturing screenshots. Introduction to TestNG framework for advanced test case management.",
        "Annotations in TestNG and generating reports for test results. Running tests using TestNG XML file and batch file scheduling.",
        "Grouping and parameterizing test cases in TestNG. Implementing data providers and executing tests in parallel.",
        "Retrying failed tests and customizing retry mechanisms. Introduction to Apache Ant and Maven for build automation.",
        "Configuring and executing Selenium WebDriver for browser automation. Understanding WebDriver architecture and methods.",
        "Working with different web elements using Selenium WebDriver. Advanced topics like synchronization, managing multiple windows, and handling alerts",
        "Complete web page automation using Selenium WebDriver. Learning advanced UI techniques like iframes and Action class.",
        "Introduction to Selenium using .NET framework. Understanding locator techniques in Selenium for efficient element identification.",
        "Interview preparation with common Selenium-related questions and scenarios."
      ],
      "course_content": {
        "Selenium IDE Fundamentals": [
          "Selenium IDE Overview",
          "Introduction to Selenium",
          "What is Selenium",
          "Java Installation",
          "How to Download Eclipse",
          "Basic Programs of Eclipse",
          "Eclipse Tool",
          "Different Types Views",
          "How to use Debug Mode",
          "Conclusion of Eclipse Tools",
          "Introduction to Java",
          "Install IDE FireBug and FirePath",
          "Record and Debug Script",
          "Pause and Step Execution",
          "Wait Command",
          "Verify Alert",
          "Assert Alert",
          "Store and Echo",
          "Store Eval and Stored Vars",
          "JavaScript Basics",
          "JavaScript Basics Continues",
          "User Extensions Basics",
          "More on User Extensions",
          "Regular Expressions",
          "Regular Expressions Continues",
          "Creating New Test Care",
          "Login to Flipkart",
          "View Gift Card Balance",
          "Link Count",
          "Link Count Continues",
          "Add Items to Cart",
          "Delete From Cart",
          "More on Delete Cart",
          "Log Out",
          "Parameterization of Test Cases",
          "Parameterization of Test Cases Continues",
          "More on Parameterization of Test Cases",
          "Capturing Screenshots in Selenium IDE",
          "Conclusion"
        ],
        "TestNG": [
          "Introduction to TestNG",
          "Types of Annotations",
          "TestNG Annotations and Reports",
          "Annotation Calling Sequence",
          "Annotation Calling Sequence Continue",
          "Before Class and Before Test",
          "How to Run Tests Using Testng Xml File",
          "Run Testng Xml File Programmatic",
          "Run TestNG Xml File from Command Prompt",
          "Run TestNG Xml File Command Prompt",
          "Run Tests in TestNG Using Batch File",
          "Scheduling the Batch File in Task Scheduler",
          "Test Methods",
          "Test Methods Continues",
          "Inside Method",
          "Grouping",
          "Grouping Continues",
          "Creating Three Test Method",
          "Exclude and Include",
          "Parameterizing Test Cases",
          "Parameters Annotation",
          "Data Provider Example",
          "Data Provider",
          "Data Provider Continues",
          "Maintaining Data Providers",
          "Maintaining Data Providers Continues",
          "Testing Log in Part",
          "Data Providers for Different Tests",
          "Single Data Provider for Multiple Tests",
          "Parameters to Data Provider",
          "Parameters to Data Provider Continues",
          "How to Execute Tests in Parallel",
          "Single Data Provider Method",
          "I test Context",
          "How to execute classes in Parallel",
          "How to execute classes in Parallel Continue",
          "How to Execute Methods in Parallel",
          "Invoking Multiple Threads Using Thread Pool Size",
          "Retry Failed Tests",
          "Retry Failed Tests Continues",
          "Custom Correction of Retry",
          "Run As TestNg Suite"
        ],
        "TestNG with Apache Ant and Maven": [
          "Introduction to Apache Ant",
          "Configuring Ant",
          "Build Xml",
          "Build Xml Continues",
          "Executing Class Path",
          "Test NG Results XSLT Reports",
          "More on XSLT Reports",
          "Introduction to Maven",
          "Maven vs SVN",
          "Create Maven Project from Command Prompt",
          "Importing Maven Project Into Eclipse",
          "Importing Maven Project Into Eclipse Continues",
          "Modifying Test Case",
          "Converting Existing Project to Maven",
          "More on Existing Project to Maven"
        ],
        "Selenium WebDriver": [
          "Introduction to Selenium WebDriver 3",
          "Selenium Overview",
          "Configuring Gecko Driver",
          "Launching Firefox Browser",
          "Architecture of Selenium WebDriver",
          "Methods in WebDriver",
          "Methods in WebDriver Continues",
          "Configuring Chrome and IE Driver",
          "Configuring IE Driver",
          "Parameterize and Launch Browser Dynamically",
          "Creating and Launching Firefox Profile",
          "Creating and Launching Firefox Profile Continues",
          "Downgrading Firefoxand FirePath",
          "How to Add Javadoc Location",
          "Difference Between Selenium IDE RC and WebDriver",
          "Desired Capabilities",
          "Working with Proxy Servers",
          "More on Proxy Servers",
          "HTML Structure Inspect Elements",
          "HTML Structure Inspect Elements Firefox",
          "Basic Tags in HTML",
          "Basic Tags in HTML Continues",
          "Locators",
          "Locators Continues",
          "Sendkeys Click, Close and Quit",
          "Why Driver Close is Not Working",
          "Xpath Absolute and Partial",
          "Xpath Absolute and Partial Continues",
          "Relative Xpath",
          "Web Element Usage and Examples",
          "Generating Css Selector",
          "Types of Css Selector",
          "Creating Sign in Button Using Css Selector",
          "Creating Signup Button Using Css Selector",
          "Creating Signup Button Using Css Selector Continues",
          "Finf Element Using Css Selector",
          "Different Browsers",
          "Implicit Wait and Examples",
          "Explicit Wait and Examples",
          "Visibility of Element",
          "Understanding Fluent Wait",
          "Managing Multiple Windows",
          "Using the String Method",
          "Storing the Data",
          "Element for Parent Window",
          "Dealing with Alerts",
          "Elements for Alert"
        ],
        "Manage Web Elements using Selenium": [
          "Managing Text Fields",
          "Working With Links",
          "Controlling Execution Using Testng XML",
          "Usage of Text Element and Usage of CSS Selector",
          "List and Multiple List",
          "List and Multiple List Continues",
          "Indentity Multiple Element",
          "Methods of Indentity Multiple Element using Java File",
          "More on Methods of Indentity Multiple Element",
          "More on Methods of Indentity Multiple Element Continues",
          "What is Stale Element Exception",
          "How to Resolve the Error in Stale Element",
          "Creating the Dropdown Element",
          "Option Present in Dropdown Element",
          "How to Habndle Class in Dropdown Element",
          "Creating Checkbox and Radio Button",
          "Creating Checkbox and Radio Button Continues",
          "More on Radio Button"
        ],
        "Complete Web Page Automation using Selenium": [
          "Introduction to Complete Web Page Automation",
          "Using the Webdriver Method",
          "Count of the Footer Section",
          "Dealing with the Footer Sector Link",
          "Validation of the Text",
          "Working with Java Script Executor",
          "Javascript Executor Introduction"
        ],
        "Synchronisation in Selenium": [
          "Introduction to Web UI Control Techniques in Selenium",
          "Working With Syncronization in Selenium",
          "Working With Syncronization in Selenium Continues",
          "Explicit Wait Syncronization in Selenium",
          "Fluent Wait Command Syncronization in Selenium",
          "Dropdown In Web UI Techniques",
          "More on Dropdown",
          "Static Dropdown Example",
          "Dynamic Dropdown Example",
          "Dynamic Dropdown Example Continues",
          "Output of Dropdown Function",
          "Check Box and Radio Buttons",
          "Script for Radio Buttons",
          "Validation of Radio Buttons",
          "Alerts in Selenium Automation",
          "Types of Alerts",
          "Confirm Alert Box",
          "Validation of Checkbox in Radio Button",
          "Learning the Get Text Process",
          "Understanding Action Class",
          "Creating Action Class",
          "Methods of Action Class"
        ],
        "Advanced UI Techniques in Selenium": [
          "Introduction to iframes Content",
          "Methods using Actions Class",
          "Examples on Actions Class",
          "Different Methods for Actions Class",
          "Creating a New Class",
          "Creating Actions an Actions Class",
          "Understanding Concept of Child Windows",
          "Purpose of Iterator Strings",
          "Example on Child Windows"
        ],
        "Selenium using .NET Training": [
          "Introduction to Selenium",
          "Build a Test CaseLogin Suite",
          "Login Suite",
          "Login Suite Continues",
          "Assert Verify",
          "Selenium Command by Locator",
          "Selenium Command by Locator Continues",
          "Inspect in DOM Panel",
          "Assert Alert Pattern",
          "Selenium IDE Final",
          "Selenium Web Driver",
          "Selenium WebDriver Commands",
          "Selenium WebDriver Commands Continues",
          "Selenium WebDriver Commands Advanced",
          "Webdriver Commands API and Operations"
        ],
        "Locator Techniques in Selenium": [
          "Introduction to Locator Techniques in Sikuli",
          "How Check Latest Version",
          "Working With Locators",
          "Customization of Xpath in Locators",
          "Customization of Xpath in Locators Continues",
          "Interview Questions of Selenium",
          "Relative Xpaths",
          "Absolute Xpaths",
          "Axes Methods in Xpaths",
          "Axes Methods in Xpaths Continues",
          "More on Axes Method"
        ]
      },
      "requirements": [
        "No previous programming or Selenium Webdriver or test automation experience is necessary",
        "No prior Java / coding knowledge required as everything is taught from the scratch",
        "Ant requires the installation of the Java Development Kit (JDK)"
      ],
      "description": "Welcome to our comprehensive Selenium training course! In this course, you'll embark on a journey to master the art of web automation using Selenium, a powerful tool for testing web applications. Whether you're a beginner or looking to enhance your skills, this course offers a structured learning path divided into sections covering everything from the basics to advanced techniques.\nYou'll start by getting familiar with Selenium IDE and learning the fundamentals of Selenium automation. From there, we'll dive into TestNG for more organized and efficient testing, followed by integrating Selenium with Apache Ant and Maven for streamlined project management.\nAs you progress, you'll explore Selenium WebDriver, gaining a deep understanding of web element manipulation and synchronization techniques. Advanced topics such as managing iframes, working with dynamic elements, and implementing robust synchronization strategies will further enhance your skills.\nAdditionally, for those interested in Selenium with .NET, we provide dedicated training to harness the power of Selenium within the .NET framework. Throughout the course, hands-on exercises and practical examples will reinforce your learning, ensuring you're equipped with the knowledge and skills to excel in Selenium automation.\nJoin us on this exciting journey as we demystify Selenium and empower you to become a proficient web automation engineer!\nSection 1: Selenium IDE\nIn this section, students are introduced to Selenium, a powerful tool for automated testing. They delve into the fundamentals, beginning with an overview of Selenium's significance in software testing. This serves as a foundation for understanding its capabilities and applications in real-world scenarios. Next, students proceed to the practical aspects, starting with the installation of Java, a prerequisite for Selenium. They are guided through the process step-by-step, ensuring a seamless setup. Following this, attention shifts to Eclipse, an integrated development environment essential for Selenium automation. Students learn how to download and configure Eclipse, gaining familiarity with its interface and basic functionalities. Throughout this section, emphasis is placed on hands-on learning, enabling students to grasp concepts effectively through practical implementation.\nSection 2: TestNG\nThe focus of this section is on TestNG, a testing framework designed for Java. Students begin with an introduction to TestNG, understanding its significance in test automation. They explore various annotations and their usage in organizing and executing test cases efficiently. Practical aspects such as test method grouping, parameterization, and data providers are covered in detail, equipping students with essential techniques for robust test development. Moreover, students learn about executing tests in parallel, enhancing test execution speed and efficiency. The section concludes with insights into retry mechanisms and custom configurations, ensuring students can handle test failures effectively and maintain test reliability.\nSection 3: TestNG with Apache Ant and Maven\nThis section extends students' knowledge by integrating TestNG with Apache Ant and Maven, popular build automation tools. Students gain an understanding of Apache Ant and Maven's role in project management and automation. They learn how to configure and utilize these tools effectively to streamline the testing process. Through practical exercises, students acquire skills in creating and modifying projects, importing dependencies, and executing test suites seamlessly. Additionally, students explore advanced topics such as XSLT reporting and transitioning existing projects to Maven, empowering them to leverage these tools proficiently in real-world projects.\nSection 4: Selenium WebDriver\nIn this section, students transition to Selenium WebDriver, a powerful automation tool for web applications. They begin with an introduction to WebDriver, understanding its architecture and capabilities. Practical exercises cover configuring browser drivers, launching browsers dynamically, and interacting with web elements using various locators. Students learn to handle complex scenarios such as working with iframes, managing multiple windows, and dealing with alerts effectively. Through a combination of theory and hands-on practice, students develop a comprehensive understanding of WebDriver's features and its role in web automation.\nSection 5: Manage Web Elements using Selenium\nThis section focuses on mastering web element management techniques in Selenium. Students delve into managing text fields, links, and dropdowns, understanding their behavior and interactions within web applications. Practical exercises cover scenarios such as handling stale elements, validating text, and working with checkboxes and radio buttons. Students also explore advanced topics like executing JavaScript code and synchronizing interactions, ensuring robust and reliable automation scripts. By the end of this section, students are equipped with the skills to effectively automate web element interactions across diverse web applications.\nSection 6: Complete Web Page Automation using Selenium\nIn this section, students advance their automation skills by learning to automate entire web pages using Selenium. They explore techniques for identifying and interacting with complex web page elements, such as footers and dynamic content. Through practical examples, students learn to validate text, execute JavaScript code, and handle asynchronous behaviors effectively. Additionally, students gain insights into using the WebDriver method and working with Java Script Executor, enabling them to automate even the most intricate web pages with ease and precision.\nSection 7: Synchronization in Selenium\nThis section focuses on the critical aspect of synchronization in Selenium automation. Students begin by understanding the importance of synchronization in web UI control techniques and its role in ensuring the reliability of automation scripts. They explore various synchronization techniques, including explicit and fluent waits, to handle dynamic elements and asynchronous behaviors effectively. Additionally, students learn to work with dropdowns and radio buttons, mastering techniques for both static and dynamic dropdowns. Practical examples and exercises provide students with hands-on experience in implementing synchronization strategies, enabling them to develop robust and stable automation scripts.\nSection 8: Advanced UI Techniques in Selenium\nBuilding upon their foundational knowledge, students delve into advanced UI techniques in Selenium. They explore concepts such as iframes and child windows, understanding their significance in web application testing. Through practical examples and demonstrations, students learn to interact with elements within iframes and handle scenarios involving multiple windows effectively. Furthermore, students gain proficiency in using the Actions class to perform complex interactions, such as mouse hover and drag-and-drop operations. By mastering these advanced UI techniques, students enhance their ability to automate sophisticated web applications with precision and reliability.\nSection 9: Selenium using .NET Training\nThis section caters to students interested in Selenium automation using the .NET framework. Students begin by understanding the basics of Selenium and its integration with .NET technologies. They explore building test cases and suites using Selenium WebDriver, focusing on login scenarios and assertion techniques. Through practical exercises, students gain hands-on experience in implementing Selenium commands using locators and inspecting elements within the DOM panel. Additionally, students learn advanced WebDriver commands and techniques, enabling them to develop robust automation scripts using .NET technologies.\nSection 10: Locator Techniques in Selenium\nThe final section focuses on mastering locator techniques in Selenium, essential for accurately identifying and interacting with web elements. Students explore various locator strategies, including XPath and CSS selectors, understanding their strengths and applications in different scenarios. Through practical examples and exercises, students learn to customize XPath expressions and optimize locator strategies for improved performance and reliability. Additionally, students gain insights into handling common challenges such as stale element exceptions and refining XPath expressions using axes methods. By mastering locator techniques, students enhance their ability to build robust and maintainable automation scripts in Selenium.",
      "target_audience": [
        "Aspiring software testers and quality assurance professionals looking to enhance their skills in automated testing.",
        "Software developers interested in learning Selenium for automated web application testing.",
        "Computer science students and graduates seeking practical knowledge in test automation.",
        "Professionals transitioning into roles involving software testing or quality assurance.",
        "Individuals aiming to improve their job prospects in the IT industry by mastering Selenium and related tools.",
        "Teams and organizations seeking to train their employees in Selenium for more efficient and effective software testing processes.",
        "Anyone with a basic understanding of programming and web technologies eager to delve into automated testing with Selenium."
      ]
    },
    {
      "title": "Web Application automation using Watir - Ruby - Cucumber",
      "url": "https://www.udemy.com/course/watir-ruby/",
      "bio": "Basic to Advance",
      "objectives": [
        "Complete understanding of basic to expert Ruby concepts with practical implementation",
        "Can automation any realtime application with Watir and also can design framework from scratch"
      ],
      "course_content": {
        "Agenda & Environment Setup": [
          "Course Agenda",
          "Ruby Introduction",
          "Ruby Setup",
          "Ruby Interactive Environment",
          "Ruby Gems"
        ],
        "Ruby Programming Basics": [
          "First Ruby Program",
          "Print Data | Get Input and Comments",
          "BEGING and END block"
        ],
        "Ruby Programming Advance": [
          "Class and Objects",
          "Working with Methods - Part 1",
          "Working with Methods - Part 2",
          "Working with Methods - Part 3",
          "Instance and Class Method",
          "What is Constructor",
          "Constructor with argument",
          "Why & where to use constructors"
        ],
        "Condition Handling": [
          "Condition Handling | If - else",
          "Condition Handling | If - elsif - else",
          "Condition Handling | Nested If",
          "Condition Handling | with Conditional OR",
          "Condition Handling | with Conditional AND"
        ],
        "Different types of Variables": [
          "Variable Types",
          "Local Variable",
          "Instance Variable",
          "Class Variable",
          "Global Variable"
        ],
        "Looping": [
          "For Loop Basics",
          "For Loop - break keyword",
          "For Loop - Next keyword",
          "For Loop - Redo keyword",
          "While Loop",
          "Until Loop",
          "Each Loop"
        ],
        "Working with Arrays": [
          "Array Basics",
          "Create Array | Insert | Fetch",
          "Common methods of Array Class - Part1",
          "Common methods of Array Class - Part-2",
          "Each Loop with Array"
        ],
        "String Handling": [
          "What is String",
          "String Functions - Part 1",
          "String Functions - Part 2",
          "String Functions - Part 3",
          "String Functions - Part 4"
        ],
        "Working with Hash": [
          "What is Hash",
          "Different approaches to create hash",
          "Common methods of Hash class",
          "Hash: Using symbol as key",
          "Each Loop with Hash"
        ],
        "Ruby - Read/ Write Data": [
          "Reading data from file",
          "Write data to File",
          "Read and Write Data"
        ]
      },
      "requirements": [
        "No programming or coding experience required",
        "Machine with Windows OS"
      ],
      "description": "Watir is one of the most popular Open source tool for Web Application automation, this course includes\nWatir WebDriver Basics to advance concepts and also covers  Ruby Concepts, Cucumber Framework, Automation Framework Design (Page Objects, Data Driven, Reading Excel Files)\nRuby Basics: Variables, If-Then-Else, For loop, While loop, Arrays, Classes, Inheritance, Objects, Constructors, Methods, Working with Excel file and database\n\nWatirWebDriver Basics: Commonly used methods and locator types, Id, Name, Class Name, Link Text, Partial Link Text, Xpath, Css Selector\nAjax Handling,  Multi window handling, Actions class,  Implicit wait, Explicit wait. After completing the the course you will be able to write automated tests using selenium and java\nThis course will take you from basic to expert level step by step, we are covering all Ruby concepts which are required for selenium automation as well as you will be ready to face automation interviews",
      "target_audience": [
        "Software QA and Testers who want to start career in automation",
        "Anyone who is interested in learning software test automation"
      ]
    },
    {
      "title": "Elegant Automation Frameworks with Python and Pytest",
      "url": "https://www.udemy.com/course/elegant-automation-frameworks-with-python-and-pytest/",
      "bio": "Fast, scalable, professional-grade framework design",
      "objectives": [
        "Build high-performing, reliable automated test suites with actionable reporting"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of the Python programming language"
      ],
      "description": "Give your team on-demand, actionable insights into the status of your product with a fast, scalable test automation framework written in Python using the Pytest toolkit. Learn how to eliminate boilerplate setup and teardown code, run multiple tests at the same time, and track the history of your test runs to identify slow or problematic tests.\nLearn lessons collected over years of professional automation in just a few hours.\nNever manage test suites again - let them manage themselves\nAchieve blazing fast test runs with parallel execution\nMore coverage with less code\nIndustry-ready test structure\nA Bulletproof approach to automation fundamentals  Python is one of the most popular languages in the world, and the demand for it is only increasing. Pytest is one of the most actively maintained testing frameworks in the industry, and provides an incredible set of tools for faster, less-stressful testing.\nAutomated testing is one of the most in-demand fields in today's tech market, but there is very little guidance on how the engineer can move from writing tests to building a robust test architecture. Reliable test frameworks save compounding amounts of time and money, improve trust between testers and developers, and make for happier testers. Happy testers are more productive, more effective, and tend to grow within the organization. Everyone wins.\nThe most widely circulated videos on these topics speak only to the technologies themselves, and do not offer viable implementation guidance or valuable industry practices. I have made these valuable practices the focus of this course.\nContent and Overview Suitable for those comfortable with basic Python and Object-Oriented Programming concepts, these lectures build a rock-solid foundation of skills required to automate at a professional level.\nBeginning with a brief introduction and a step-by-step setup of Pytest, this course allows you to watch as I walk you through each action, explaining as we go.\nWe will discuss what makes a good framework, and maybe more importantly, what makes a bad one. We will learn how to use test searching to avoid cumbersome test suites, and how fixtures can eliminate up to 80% of the code in a bloated codebase.\nStudents completing the course will have the knowledge to build high-performance, well-organized, scalable test frameworks at the professional level.\nEquipped with code samples, short quizzes, and info-rich videos, you’ll have no trouble following along with the concepts, and I am always available for questions.\nFinally, automating is a blast, and I wish more people did it. Let me rephrase that - I wish more people did it, and did it well! We need more people like you executing effective, high-value automation solutions, so let's get started on this journey together!",
      "target_audience": [
        "Anyone who wants to build or improve an automated testing framework"
      ]
    },
    {
      "title": "Software Testing Must Interview Questions/Answers",
      "url": "https://www.udemy.com/course/software-testing-must-interview-questionsanswers/",
      "bio": "A practical detailed discussion on Software testing interview questions",
      "objectives": [
        "confident to face the interviews",
        "Software testing Interview questions and answers",
        "Practical examples to each question/answer",
        "Common interview questions and answers",
        "Manual testing interview questions",
        "Test management tool Interview Questions",
        "Selenium interview questions",
        "Mobile App testing interview questions"
      ],
      "course_content": {},
      "requirements": [
        "Laptop with good internet connection",
        "Notepad Pen"
      ],
      "description": "In this course, i will discuss the very common questions you can face in the interviews. Each answer for the question will be explained in a detailed manner.\nInterview questions are nothing but to test your real-time project experience/knowledge . This course is designed to provide you that practical knowledge and understanding of some must questions in Software Testing domain.\nThe core focus of this course is to make you answer an interview question in the best way possible.\nGiving the Interview is a key skill as many times the best jobs do not go to the most experienced or qualified. They go to people with the best interviewing skills. This course will help you with the technical interview skills.\n\nAll your hard work during the job search should culminate at the interview stage with a job offer for you!\n\nHowever, for those who are skilled with job interviewing they will really stand out from the competition and have a much better chance of success!\nLearning that takes place during the preparation and actual interview process is useful in getting your dream job.\nSIMPLY YOU CAN FEEL THIS COURSE AS A MOCK INTERVIEW FOR YOUR SOFTWARE TESTING JOB INTERVIEWS.",
      "target_audience": [
        "Software testers",
        "Automation testers",
        "Manual testers",
        "Freshers/experience searching for job"
      ]
    },
    {
      "title": "Core Java and Coding for Automation Testers - For Beginners",
      "url": "https://www.udemy.com/course/core-java-and-coding-for-automation-testers-for-beginners/",
      "bio": "Master Core Java and Coding needed for Automation Testing in 30 days. Prepare for Coding Interviews with 50+ problems",
      "objectives": [
        "Structured learning for Core Java and Coding for Automation Testers, with Basics to Advanced level topics",
        "No Prior Knowledge of Java needed for the students",
        "OOPS Concepts with detailed Coding Examples - Classes, Objects, Polymorphism, Encapsulation, Inheritance, Abstraction",
        "50+ Coding problems solved for Interview Perspective and Logic Building",
        "Operators, Control Statements, Data types, Arrays, Strings in Java",
        "Detailed Coding examples on all the topics of the Core Java",
        "Wrapper Classes, Type Casting, Exception Handling in Java",
        "Advanced Concepts in Java - JAR File creation, Generics and Java Collections topics included",
        "Java Collections - Array List, Hash Set, Hash Map topics are covered with detailed explanations",
        "Lambda Expressions and Streams - latest Java 8 features"
      ],
      "course_content": {
        "Welcome to the Core Java and Coding course": [
          "Introduction - Welcome to the course",
          "Important Note about the Course Q&A and Feedback"
        ],
        "Core Java Introduction": [
          "Introduction to Core Java",
          "JDK vs JRE vs JVM",
          "History of Java",
          "Oracle JDK Roadmap",
          "Test your knowledge - Quiz",
          "Clarify your doubts in Q&A section"
        ],
        "Java Software Setup": [
          "JDK Download and Install in Windows",
          "Eclipse IDE Download and Install in Windows",
          "Ask questions about Core Java programming with AI Assistant"
        ],
        "Getting started with Core Java": [
          "Writing First Program in Java",
          "Some Basics Syntax concepts In Java",
          "Packages in Java - Inbuilt and User Defined",
          "Adding Comments to Java Code",
          "Command Line Execution for Java project code files",
          "Command Line Execution for Non-Java Project code files",
          "Test your knowledge - Quiz"
        ],
        "Primitive Data Types in Java": [
          "What is Variable? and Primitive vs Non-Primitive Data Types",
          "Primitive Data Types in Java - Memory Size, Default Value concepts",
          "Primitive Data Types - Coding to Store Integer Numbers",
          "Primitive Data Types - float, double, char, boolean",
          "Different Approaches to declare variables",
          "var data type - Java 10 onwards",
          "Test your knowledge - Quiz"
        ],
        "Operators in Java": [
          "Arithmetic Operators",
          "Relational Operators",
          "Logical Operators",
          "Increment Decrement Operators",
          "Assignment Operators",
          "Ternary Operator",
          "Unary and Binary Operators differences",
          "Test your knowledge - Quiz"
        ],
        "Conditional Statements in Java": [
          "If Condition Programs",
          "If Else Blocks Examples",
          "If ElseIf Else Ladder Examples",
          "If Else Examples with Boolean values",
          "Nested If Else Blocks Programs",
          "Switch Case Block Examples",
          "Test your knowledge - Quiz"
        ],
        "Looping and Jumping Statements in Java": [
          "While Loop Example - Printing Numbers",
          "While Loop - More Examples",
          "do While Loop Examples",
          "While vs do While Differences Example",
          "for loop Examples",
          "for doWhile while loops comparisions",
          "Jumping Statements - break and continue",
          "Test your knowledge - Quiz"
        ],
        "Basic Java Programs with Solutions": [
          "Conditional Statements - 3 programs",
          "Reverse an Number",
          "Palindrome Number",
          "Count Number of Digits in Number",
          "Fibonacci Number Series",
          "Factorial of Number",
          "Generate Random Numbers",
          "Swap Numbers without Third Variable",
          "Printing Number Patterns",
          "Printing Star Patterns",
          "Assignment for you"
        ],
        "Arrays in Java": [
          "Arrays Introduction and Types",
          "Single Dimensional Arrays Examples",
          "Two Dimensional Arrays Programs",
          "Different Data types in Arrays using Object class",
          "Reverse an Array",
          "Arrays Inbuilt Method Programs",
          "Test your knowledge - Quiz"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "Software Installation is covered from scratch"
      ],
      "description": "***Updated September 2025 - Added Java Streams detailed coding module***\nCore Java and Coding for Automation Testers is a Beginner friendly course\nLearn Java Programming language from scratch, trained by Swaroop Nadella - an Experienced Automation Test Engineer and Trainer having 13+ years of experience in Software Testing and Automation.\n\n\nComprehensive Core Java and Coding course for Automation Test Engineers. More than 40 Coding problems are solved in the course to get started and deep dive into Java Coding for beginners.\n\n\nAll required topics are covered in the course which are listed below\n\n\nGetting Started with Java\nJDK Installation\nEclipse IDE Installation\nWrite First Program in Java\nLearn Basic Syntax Concepts of Java\nPackages in Java - Inbuilt and User Defined\nAdding Single Line and Multiple Line Comments to Java Code\nCommand Line Execution in Java (javac and java commands, .java and .class files, bytecode)\n\n\nBasics of Java Programming\nOperators in Java (Arithmetic, Logical, Relational, Increment, Decrement, Assignment and Ternary)\nConditional Statements (if, else if, else, switch case) with multiple Coding Examples\nLooping Statements (while, do while, for loops) with multiple Coding Examples\nJumping Statements (break and continue keywords Coding Examples)\nBasic Java Programs for the Coding - Factorial, Fibonacci number series, Star Patterns, Number Patterns and many more basic coding problems\n\n\nArrays Concepts and Important Algorithms for Arrays in Java\nArrays in Java - 1D and 2D\nLinear Search Algorithm in Arrays\nBubble Sort Algorithm in Arrays sorting of Numeric Arrays\nMultiple Java Programs in Arrays, which are frequently asked in interviews\n\n\nString Concepts in Java and Advanced concepts, All Important and Frequently asked Java Programs\nString class concepts in Java\nString Buffer and String Builder\nString Constant Pool and Heap Memory in Java Strings\nFrequently Asked Java Programs with detailed solutions for Java Strings\nString Comparisions using == and equals method - 4 different ways, which is important topic to learn\nAnagram Strings, Pangram String, Reverse a String with 4 different approaches, String Concatenation with Number, String and Arithmetic Operators, Palindrome String, Reverse Each Word in a Given String etc.\n\n\nJava Object Oriented Programming System (OOPS) concepts with detailed Coding Explanations\nClasses and Objects creation, Instance variables vs Local variables\nMethods and Constructors with detailed Coding Examples\nRecursion Algorithm program - Print Numbers without using Loops\nPolymorphism - method Overloading concepts with detailed Coding examples\nOverloading main method Coding Examples\nEncapsulation Coding Examples with detailed Explanations\nInheritance in Java, Types of Inheritance and detailed Coding Examples\nMethod Overriding detailed Coding examples\nMethod Overloading vs Method Overriding differences\nAbstraction in Java, Abstract class and Interface concepts with detailed Coding Examples\nFunctional Interface concepts with Coding Examples\nMultiple Inheritance implementation using Two or more Interfaces\n\n\nJava Keywords with detailed Coding Explanations\nstatic keyword concepts in Java with Coding Examples\nSystem.out.println( ) - static variable concept\nMath.random( ) - static method concept.\nthis keyword for accessing instance variables and Constructors\nConstructor chaining concept using this( ) keyword\nfinal keyword detailed Coding examples\nsuper keyword detailed Coding examples\nAccess Modifiers in Java (public, protected, default, private)\n\n\nAdditional Important Concepts in Core Java Programming\nEverything about main method - passing arguments with Run Configurations and Command line\nWrapper Classes in Java - AutoBoxing and AutoUnboxing concepts\nEnumeration constants in Java\nSimple Date Format class in Java\nException Handling in Java (try, catch, finally blocks, throw and throws keywords)\nJAR Files creation - Java ARchive file creation and extracting them\nType Casting in Java (Up Casting and Down Casting for Primitive Data Types and Class Objects)\nFile Handling in Java\nGenerics in Java (must learn for Java Collections and Automation framework development)\n\n\nJava Collections - Must Learn for Automation Test Engineers and Coding Interviews\nArrayList and List concepts in Collections\nHashSet and Set concepts in Collections\nHashMap and Map concepts with Key and Value pairs in Collections\n\n\nStudents has Lifetime access to the recordings from Udemy.\nCourse can be accessed from Desktop Web browser on Udemy website, Mobile Apps (Android and iOS).",
      "target_audience": [
        "Manual Testers looking to get better in Coding with detailed coding examples and programs",
        "Fresher into Software Industry for QA roles, looking to deep dive into Java Programming",
        "Beginner Java Automation Test Engineers curious to level up their coding skills",
        "Software Test Engineers looking to improve their basics of Coding to next level",
        "Anyone looking to getting started with Core Java and Coding as a Beginner"
      ]
    },
    {
      "title": "Practical Java Testing With JUnit 5 for Complete Beginners",
      "url": "https://www.udemy.com/course/practical-java-testing-with-junit-5-for-complete-beginners/",
      "bio": "Learn To Automate Your Java Tests With JUnit 5. Learn Junit 5 for a Test Driven Approach. Unit Testing Using Java",
      "objectives": [
        "You will learn to write test cases with JUnit framework in a practical way.",
        "Appear confident in interviews and crack them easily",
        "Configure and set up intellij to work with JUnit",
        "Learn about assertions, different types of assertions and how to use them in a practical way",
        "Learn how to do performance driven testing",
        "Learn how to test exceptions",
        "Learn how to assert arrays",
        "Learn advance JUnit concepts like parameterized tests, tagging and filtering tests",
        "Learn about various annotations and how to use them",
        "Learn about nested and repeated tests"
      ],
      "course_content": {
        "Introduction and setup": [
          "How udemy works? - Your first task at the end of this lecture!",
          "Downloading required tools",
          "Installing JDK on Windows",
          "Installing JDK on Mac",
          "Installing and setting up Intellij Idea",
          "What is unit testing?",
          "What is junit5 and why is it needed?"
        ],
        "Getting started with Junit 5": [
          "Entire project source",
          "What are annotations?",
          "Configuring Intellij for JUnit and Writing your first test",
          "Understanding @Test annotation",
          "Different ways of executing your tests"
        ],
        "Annotations": [
          "BeforeEach and AfterEach",
          "BeforeAll and AfterAll",
          "Conditional annotations and Operating system based conditions",
          "JRE based conditional annotations",
          "System property based conditional annotations",
          "Environmental variable based conditional annotations",
          "Custom conditions based conditional annotations",
          "What are Display names?",
          "Controlling the execution order of tests",
          "Nested tests",
          "Repeated Tests"
        ],
        "Assertions": [
          "Test class vs Test methods vs Lifecycle methods - Some definitions for you to kn",
          "Understanding empty test",
          "What are assertions?",
          "AssertEquals",
          "Variation of AssertEquals",
          "AssertNotEquals",
          "Working with Arrays",
          "AssertTrue",
          "AssertFalse",
          "Working with grouped assertions",
          "Performance driven testing",
          "Timeout Preemptively",
          "Vertifying expected exceptions using Assertions",
          "Writing Assumptions"
        ],
        "Advance JUnit 5": [
          "Parameterized tests and @ValueSource",
          "Parameterized tests and @EnumSource",
          "Setting up parameters from methods",
          "Setting up parameters from CSV source",
          "Tagging and Filtering tests"
        ],
        "Course bonus": [
          "Course Bonus"
        ]
      },
      "requirements": [
        "A computer with internet connection to install java and intellij",
        "Basic knowledge of Java",
        "Prepare yourself to do hands on programming"
      ],
      "description": "This bootcamp is for complete beginners and teaches you everything you should know about JUnit for taking test driven development approach while writing java software. We write unit tests using java junit 5 and learn about test driven approach. This is not a theoretical course, but instead I will teach you step by step, practically, by writing programming examples.\n\n\nWhy should you learn the JUnit framework?\nJUnit is a proven testing framework that virtually every Java developer has used. Around 85% of java developers write tests for their java programs using junit. Majority of job openings right now demand for java developers having knowledge of testing frameworks. Hence learning junit framework will help you grow even further as a java developer.\n\n\nThis course is designed keeping beginners in mind, we have made sure that each and every concept is clearly explained in an easy to understand manner. So if you are a beginner, don't worry, I am 100% committed to helping you succeed.\n\n\nGUARANTEE\nThis course is backed by Udemy's 30 day money back guarantee. If after taking this course you realize that this is not for you. Please request a refund, I only want satisfied students\n\n\nWHAT ARE THE BENEFITS OF THIS COURSE?\nYou will learn to write test cases with JUnit framework in a practical way.\nAppear confident in interviews and crack them easily\nConfigure and set up intellij to work with JUnit\nLearn about assertions, different types of assertions and how to use them in a practical way\nLearn how to do performance driven testing\nLearn how to test exceptions\nLearn how to assert arrays\nLearn advance JUnit concepts like parameterized tests, tagging and filtering tests\nLearn about various annotations and how to use them\nLearn about nested and repeated tests\n\n\nWHO IS THIS COURSE FOR?\nA computer with internet connection to install java and intellij\nBasic knowledge of java\nPrepare yourself to do hands on programming\n\n\nSO ARE YOU READY TO GET STARTED?\nWhat are you waiting for? Press the BUY NOW button and start the course. See you inside.",
      "target_audience": [
        "Any Java developer who wants to improve on their coding skills",
        "Any self taught Java developer who wants to learn more and boost their programming skills",
        "Any Java developer or engineer who wants to crack programming interviews",
        "Students who want to learn about testing with java deeply"
      ]
    },
    {
      "title": "Web Service Testing using RestAssured & Apache HttpClient",
      "url": "https://www.udemy.com/course/web-service-testing-using-apache-httpclient/",
      "bio": "Learn the testing of Restful web services using the Apache HttpClient Library from scratch and Rest Assured Framework",
      "objectives": [
        "By the end of this course you will give have great understanding of Restful Services",
        "By the end of this course you will have great understanding of Postman client",
        "By the end of this course you will have great understanding on how to use Apache HttpClient Library"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Material",
          "Prerequisite"
        ],
        "Enviroment Setup": [
          "Tools Required",
          "Setting up the jdk 1.8",
          "Setting up the Tomcat Server",
          "Setting up the Eclipse",
          "Setting up the Postman Client"
        ],
        "Course Resource": [
          "[Important] Virtual Machine - Environment Setup"
        ],
        "Basic of RestFul Services": [
          "What is a Web Service",
          "Request and Response",
          "What is REST",
          "HTTP Methods",
          "Request and Response Format"
        ],
        "Using Postman for Testing": [
          "Deploying the Test Application in Tomcat",
          "Application Under Test",
          "Testing the GET end point part - 1",
          "Testing the POST method",
          "Testing the GET endpoint part - 2",
          "Testing the PUT method",
          "Testing the DELETE end point"
        ],
        "Deep Dive into Code": [
          "Setting up the Maven",
          "Creating the Maven Project",
          "Adding the dependency to the Maven Project",
          "Creating the GET request part - 1",
          "Creating the GET request part - 2",
          "Featching the body from GET resquest",
          "Creating the Framework method for GET",
          "Creating the Junit for GET request part - 1",
          "Creating the Junit for GET request part - 2",
          "Adding the Header to the Request",
          "Deserialization of JSON reponse",
          "Creating the POST Request",
          "Posting the data from File",
          "Creating the Framework method for POST request",
          "Creating generic method to support different entity type",
          "Code optimization for GET and POST request",
          "Writing the Junit for POST method",
          "Deserialization of XML response",
          "Creating the DELTE request",
          "Framework method for DELETE request",
          "Writing the Junit for Delete method",
          "Creating the PUT method",
          "Creating the Framework method for PUT request",
          "Writing the Junit for PUT method"
        ],
        "Handling multipart/form-data": [
          "File Upload - Introduction",
          "File Upload - MultipartEntityBuilder",
          "Writing the Junit for File Upload endpoint"
        ],
        "Advance Implementation": [
          "Introduction to Authentication part - 1",
          "Introduction to Authentication part - 2",
          "Authentication using Postman Client",
          "Authentication from the Code",
          "Authorization using HttpClientContext class"
        ],
        "Http Client with SSL": [
          "Introduction to SSL",
          "Generating the SSL certificate",
          "Bypassing the certificate validation process",
          "Writing the GET method for SSL end point",
          "Creating the framework method for GET and POST with SSL",
          "Writing the Junit for GET and POST with SSL",
          "Framework method for PUT and DELETE with SSL",
          "Writing the Junit for PUT and DELETE with SSL"
        ],
        "Http Async Client": [
          "Introduction to Synchronous and Asynchronous calls",
          "Creating the Http Async Client",
          "Writing the GET method using HTTP Async Client",
          "FutureCallBack<HttpResponse> interface",
          "Writing the framework method for POST,PUT and DELET with SSL",
          "Writing the Junit using Http Async Client"
        ]
      },
      "requirements": [
        "Basic understanding of Oops concept.",
        "Basic understanding of eclipse.",
        "Basic understanding of Java programming language"
      ],
      "description": "RESTful Web Services are REST architecture based web services. In REST Architecture everything is a resource. RESTful web services are light weight, highly scalable and maintainable and are very commonly used to create APIs for web based applications.\nThis course will teach you about the testing of Restful Web Services. In this course everything is taught from scratch.\nIn the first section, I am going to discuss about the basic of restful web services and required concept for this course.\nIn the next section, we will start with manual testing part of restful web services using Postman client. Which will give you more detail understanding about what we should test. This includes\nConcept of HTTP methods (GET,POST,PUT and DELETE)\nCreating and sending the request using Postman\nValidation of response body and status code\nAttaching the custom headers to the request\nValidation of response in Json and Xml format\n\n\nIn the next section, I will start with the automation part, discussing about Apache HttpClient library. This includes\nSetting up the Maven project for the automation\nCreating and sending the HTTP request (GET,POST,PUT and DELETE) from the code\nAttaching the custom headers to the request from code\nValidation of response body and status from code\nDeserialization of response in Json and Xml format\nHandling the endpoint secure with SSL\nFramework development\n\n\nBy the end of this course, you will have great understanding of restful service and how to automate them using Apache HttpClient library\nThe course is not limited to following content. In future I will keep adding the new topics to this course.\nAnd source code shown as part of video lecture will be provided for download",
      "target_audience": [
        "This tutorial is designed for Software Professionals, who want to learn the testing of web services.",
        "This course include both manual testing and the automation testing apporach",
        "All the tester, who want to learn the framework development using Apache HttpClient Library"
      ]
    },
    {
      "title": "Unit Testing .NET 9 Applications with xUnit .net v3",
      "url": "https://www.udemy.com/course/unit-testing-net-core-2x-applications-with-xunit-net/",
      "bio": "xUnit v3 and Microsoft Testing Platform, Mocking, Test Driven Development (TDD) and Interview Questions",
      "objectives": [
        "Writing flexible and accurate unit test with xUnit",
        "Writing unit tests using the Mocking technique in xUnit",
        "Writing unit tests for legacy (old) applications",
        "Test Driven Development (TDD) with xUnit",
        "Measuring the unit test coverage",
        "Using AI to produce unit tests automatically"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "What is Unit Testing?"
        ],
        "Unit Testing with xUnit": [
          "About xUnit .Net",
          "View and Run Your Unit Tests - Visual Studio Test Explorer",
          "xUnit v2 versus xUnit v3 and the all-new Microsoft Testing Platform",
          "Writing your first Unit Test in XUnit .Net v3",
          "Running Your Unit Tests with Microsoft Testing Platform",
          "The 3 Phases of Unit Testing",
          "Naming Your Unit Test Methods",
          "Asserting numeric values",
          "Asserting string values",
          "Asserting boolean and null values",
          "Coding Practice A",
          "Asserting Collections",
          "Asserting a range of values",
          "Asserting Exceptions",
          "Asserting object types",
          "Fluent Assertions"
        ],
        "Organizing and Managing Test Execution in xUnit.net": [
          "Collections ant Traits",
          "Generating Logs and Output in xUnit .net",
          "Class Fixtures and IClassFixture",
          "Collection Definition",
          "Filtering and Ordering Tests at Runtime",
          "Practice Makes Perfect"
        ],
        "Data Driven Tests in xUnit .net": [
          "Passing parameters to unit tests with inline attributes",
          "Sharing test data across multiple unit test methods",
          "Sharing test data across multiple unit test methods with custom attributes"
        ],
        "Mocking and MOQ": [
          "Introduction to Mocking and MOQ",
          "Setting Up Your Test Environment",
          "MOQ and Simple Mock Objects",
          "MOQ and Setting Up The Mock Objects",
          "MOQ, SetupGet and Advanced Mocking",
          "Testing Code That Does Not Support Mocking"
        ],
        "Unit Testing Minimal WebAPIs": [
          "Unit Testing Minimal Web APIs - Foundation Level",
          "Unit Testing Minimal Web APIs - Advanced"
        ],
        "Test Driven Development (TDD)": [
          "Introduction to Test Driven Development",
          "Test Driven Development with xUnit.net"
        ],
        "Unit Testing Legacy Code": [
          "Introduction to Unit Testing and Legacy Code",
          "The \"Sprout Method\" Technique",
          "The \"Sprout Class\" Technique"
        ],
        "Test Coverage": [
          "About Unit Test Coverage",
          "Measuring Unit Test Coverage in xUnit.net with Coverlet",
          "Measuring Unit Test Coverage in xUnit.net with Microsoft Testing Platform"
        ],
        "Interview Questions": [
          "Unit Testing - xUnit"
        ]
      },
      "requirements": [
        "C# programming beginner level",
        "Visual Studio, Visual Studio Code or Jetbrain Rider"
      ],
      "description": "Master Unit Testing in .NET with xUnit v3 and Microsoft’s New Testing Platform\nIf you're a .NET developer aiming to write better, more reliable code, this second edition course is built for you. You'll dive deep into unit testing using xUnit v3 and Microsoft Testing Platform—the modern replacement for the legacy VSTest framework.\nxUnit v3 is fully compatible with Microsoft’s new testing platform and comes packed with new features that make writing and running tests easier and more powerful. It's one of the most popular testing frameworks in the .NET ecosystem, and knowing how to use it is a must for any serious .NET developer.\nIn this course, we focus on practical, real-world .NET projects, including ASP .NET MVC and ASP.NET Minimal Web APIs. You'll learn how to:\nWrite effective unit tests using xUnit and MOQ\nApply Test-Driven Development (TDD) in your workflows\nWork with the latest versions of .NET and C#\nWe’ll also tackle more advanced topics:\nTesting legacy code\nMeasuring code coverage\nEvaluating the quality of your tests—because 100% coverage doesn’t always mean 100% confidence\nAnd we go a step further with a module on security testing—showing you how to catch vulnerabilities that functional tests often miss.\nTo help you level up your career, we’ve included interview questions and answers related to unit testing and xUnit, so you can walk into your next job interview with confidence.",
      "target_audience": [
        "C# Progrmmers",
        "Testers and QA Engineers"
      ]
    },
    {
      "title": "Automation Testing using Selenium & Katalon Studio",
      "url": "https://www.udemy.com/course/automation-testing-using-selenium-katalon-studio/",
      "bio": "Learn to automate web application with Katalon Studio , which is as simple as using the excel file",
      "objectives": [
        "Web application automation and test framework",
        "Mouse and keyboard action for automation",
        "Handling the actions which can be perform on the browser for automation",
        "Test Suite creation and execution them in sequence/parallel",
        "Continuous Integration"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Road map",
          "Prerequisite for Course"
        ],
        "Tools Required": [
          "Tools Required",
          "Setting up the jdk 1.8",
          "Setting up the Katalon Studio",
          "Setting up the Test Application",
          "Setting up Eclipse",
          "[Important] Virtual Machine - Environment Setup"
        ],
        "Selenium Webdriver": [
          "Selenium Webdriver Architecture",
          "Code to explain Webdriver Architecture"
        ],
        "Katalon Studio": [
          "Introduction to Katalon Studio",
          "Creating the first project",
          "Record and Playback Mode",
          "Manual Mode",
          "Script Mode",
          "What is a Test Object or Web Element"
        ],
        "Web Element locator and Xpath": [
          "FireBug and Firepath",
          "Xpath and their usage",
          "Xpath Function,Absolute and Relative Xpaths",
          "Xpath finding Links, Buttons, Input box, Radio buttons, Checkbox",
          "Css Locator"
        ],
        "Relative Xpath using Axes View": [
          "Descendant Axes View",
          "Following Axes View",
          "Ancestor Axes View",
          "Preceding Axes View",
          "Renorex Selocity"
        ],
        "Object Spy": [
          "Spy Web"
        ],
        "Handling Browser": [
          "Browser Function - Manual Mode",
          "Browser Function - Script Mode",
          "Browser Function using Webdriver Api"
        ],
        "Handling Text box": [
          "Handling Text box - Manual Mode",
          "Handling Text box - Script Mode",
          "Handling Text box with Webdriver Api"
        ],
        "Handling Click Action": [
          "Click Action - Manual Mode",
          "Click Action - Script Mode",
          "Click Action using Webdriver Api"
        ]
      },
      "requirements": [
        "Basic Understanding of Object oriented programing language",
        "Basic understanding of java language and syntax",
        "Basic understanding of selenium web driver"
      ],
      "description": "Are you an IT professional, want to switch your career to automation. Because of programing language , you always find it difficult to write the automation script.\nWell, this course will solve your problem. In this course, I am going to teach you a tool using which you can write the automation script without having dependency on programing language. Katalon Studio is easy to use and a powerful automation tool for web application\nThis tool is build on top of selenium library and most of the feature required for test automation framework such as\nSuite creation\nRunning test in parallel\nReport generation\nContinuous Integration\ncomes out of the box along with this tool.\nWriting the automation script using this tool is as simple as using the excel file\nAlso as an instructor, I will provide support for your question. Just post your question in the discussion corner. What ever framework/test script developed as part of course will be provided for download at end of the course",
      "target_audience": [
        "IT professionals who want to learn automation testing",
        "Manual tester who want to switch their career to automation testing",
        "Fresher’s/Graduates who want to start their career in IT"
      ]
    },
    {
      "title": "Unit Testing for C# Developers",
      "url": "https://www.udemy.com/course/unit-testing-csharp/",
      "bio": "Master unit testing C# code with NUnit and Moq: all about dependency injection, best practices and pitfalls to avoid",
      "objectives": [
        "Learn unit testing from scratch",
        "Tips and tricks to write clean, maintainable and trustworthy tests",
        "Write loosely-coupled and testable code",
        "Refactor legacy code towards testable code",
        "Understand and implement dependency injection",
        "Use mocks to isolate code from external dependencies",
        "Apply the unit testing best practices",
        "Learn the anti-patterns to avoid"
      ],
      "course_content": {},
      "requirements": [
        "Minimum 3 months programming in C#"
      ],
      "description": "Picture this: you make a simple change to the code and suddenly realize that you created a dozen unexpected bugs. Sound familiar? You’re not alone!\nGood news is, unit testing can make this a thing of the past.\nMaybe you’ve heard of automated or unit testing before and you’re keen to learn more.\nOr perhaps you’ve tried to learn it and got a bit lost or ended up with fat and fragile tests that got in the way and slowed you down.\nEither way, what you need is a course that will teach you all you need to know about this essential skill - from the basics, right through to mastery level.\n\n\nWhat is unit testing?\nIn a nutshell: it’s the practice of writing code to test your code and then run those tests in an automated fashion.\n\n\nWhy learn unit testing?\nWhy write extra code? Wouldn’t that take extra time to write? Would that slow you down? Why not just run the application and test it like an end user?\nThinking like this is the mistake lots of people make. I used to make it myself. I’ve had to learn the hard way!\nI learned pretty fast that if you’re building a complex application or working on a legacy app, manually testing all the various functions is tedious and takes a significant amount of time.\n\n\nAs your application grows, the cost of manual testing grows exponentially. And you’re never 100% sure if you’ve fully tested all the edge cases. You’re never confident that your code really works until you release your software and get a call from your boss or an end user!\nSeveral studies have shown that the later a bug is caught in the software development lifecycle, the more costly it is to the business.\nAutomated tests help you to catch bugs earlier in the software development lifecycle, right when you’re coding. These tests are repeatable. Write them once and run them over and over.\n\n\nThe benefits of using unit tests are:\nhelp you to catch and fix bugs earlier, before releasing your app into production\nhelp you to write better code with less bugs\nhelp you to produce software with better design - extensible and loosely-coupled\ngive you rapid feedback and tell you if your code *really* works\nforce you to think of edge cases that you didn’t realize existed\ntest your code much faster\ntell if you have broken any functionality as you write new code\nallow you to refactor your code with confidence\nact as documentation about what your code does\nsave you both time and money\n\n\nA valuable skill for senior developers\nMore and more companies are recognizing the advantages of automated testing, that’s why it’s a must-have for senior coders. If you’re looking to reach the higher levels in your coding career, this course can help.\nYou don’t need any prior knowledge of automated testing. You only need 3 months of experience programming in C#.\n\n\nWith this course you’ll learn:\nsenior coder secrets - best practices to write great unit tests\ntips and tricks to keep your tests clean, trustworthy and maintainable\nthe pitfalls to avoid – anti-patterns\nhow to refactor legacy, untestable code into loosely-coupled and testable code\nall about dependency injection – the one thing every coder needs to know\nthe power of mocks – when and how to use them and when to avoid\n\n\nYou’ll get:\n6 hours of HD video\ntutorials and guidance from a senior coder with 15+ years’ experience\nexercises with step-by-step solution\ndownloadable source code\nlifetime access\naccess online or offline at any time on any device\ncertificate of completion to present to your current or prospective employer",
      "target_audience": [
        "Anyone who wants to build better quality software with fewer bugs",
        "Any developers who want to transition to the senior level"
      ]
    },
    {
      "title": "C# Test Automation Engineer - from Zero to Hero",
      "url": "https://www.udemy.com/course/csharp-test-automation-engineer-from-zero-to-hero/",
      "bio": "4 coureses in 1! Practical guide to become a Professional QA Automation Engineer in C#/.NET (AQA)",
      "objectives": [
        "Automation Testing",
        "Selenium Webdriver from Basics to Advanced Level",
        "Learn best practices from true programmers",
        "Learn how to write scalable, readable and maintainable clean code",
        "You will learn source code of the tutor. All homework is completed with the Trainer",
        "Visual Studio",
        "NUnit 3",
        "Selenium basics",
        "Selenium in C#",
        "Selenium Waits",
        "Page Object concept",
        "Web Component concept",
        "Data Transfer Object concept",
        "NuGet Packages basics",
        "Postman basics",
        "API baiscs",
        "REST API",
        "RESTful Web Services",
        "HTTP methods",
        "HTTP status codes",
        "JSON schemas",
        "API testing",
        "RestSharp from basics to advanced"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience"
        ],
        "API Basics": [
          "API and Web Service",
          "API Types Overview",
          "REST API Overview",
          "HTTP methods",
          "HTTP Status Codes"
        ],
        "Test Environment Setup": [
          "Postman Introduction",
          "Postman Installation",
          "Trello Account Creation",
          "Authorization Token Creation in Trello"
        ],
        "HTTP Method GET - Postman": [
          "GET Method Overview",
          "GET Method in Postman",
          "GET Method in Postman - Hometask",
          "JSON Schema Validation",
          "JSON Schema Validation - Hometask",
          "GET Method Validation in Postman",
          "GET Metod Validation in Postman - Hometask"
        ],
        "HTTP Method POST - Postman": [
          "POST Method Overview",
          "POST Method in Postman",
          "POST Method in Postman - Hometask",
          "POST Method Validation in Postman",
          "POST Method Validation in Postman - Hometask"
        ],
        "HTTP Method PUT - Postman": [
          "PUT Method Overview",
          "PUT Method in Postman",
          "PUT Method in Postman - Hometask",
          "PUT Method Validation in Postman",
          "PUT Method Validation in Postman - Hometask"
        ],
        "HTTP Method DELETE - Postman": [
          "DELETE method overview",
          "DELETE Method in Postman",
          "DELETE Method in Postman - Hometask",
          "DELETE Method Validation in Postman",
          "DELETE Method Validation in Postman - Hometask"
        ],
        "Postman Tips": [
          "Variables in Postman"
        ],
        "Automated Test in Postman": [
          "First Test in Postman"
        ],
        "Development Environment Setup": [
          "Visual Studio Community Edition Installation",
          ".NET 6 - Installation"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Some basic knowledge of C#"
      ],
      "description": "Are you ready to launch your career as a Test Automation Engineer using C#? Whether you're a complete beginner or already have some experience, this course is your fast track to becoming a C# Test Automation Hero!\nIn today's dynamic tech landscape, Test Automation Engineers are in high demand. This comprehensive course takes you from zero knowledge to mastering C# for test automation, equipping you with the skills needed to excel in this exciting field.\nWhat You Will Learn:\nC# Fundamentals: Start with the basics of C# programming and build a solid foundation, even if you've never coded before.\nSelenium WebDriver: Unlock the power of Selenium WebDriver to automate web applications effectively and efficiently.\nPage Object Model (POM): Learn the industry-standard design pattern for creating maintainable and scalable test automation frameworks.\nTest Frameworks: Build your own test automation frameworks from scratch, ensuring your tests are robust and adaptable.\nAdvanced Topics: Explore advanced concepts such as API testing with Rest Sharp.\nReal-World Projects: Apply your newfound skills to real-world projects that mimic the challenges faced by Test Automation Engineers in the industry.\nBest Practices: Discover best practices for writing clean, efficient, and maintainable automation code.\nWhy Enroll in This Course?\nHands-On Learning: Gain practical experience through hands-on exercises, quizzes, and projects that reinforce your skills.\nExpert Instruction: Learn from experienced instructors who are passionate about helping you succeed in test automation with C#.\nCareer Advancement: Enhance your career prospects by becoming proficient in a skill set highly sought after by leading tech companies.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive online community.\nDon't miss this opportunity to become a C# Test Automation Hero! Enroll today and embark on a rewarding journey toward a successful career in test automation.",
      "target_audience": [
        "People who want to learn Automation Testing from scratch to advanced level",
        "Students who are seeking to work as Test Automation Engineer"
      ]
    },
    {
      "title": "Practical - ISTQB - Test Automation Engineer Course 2024",
      "url": "https://www.udemy.com/course/ultimate-istqb-advanced-level-test-automation-engineer/",
      "bio": "Learn the concepts, methods and tools to pass the ISTQB - Advanced Level - Test Automation Engineer Certification Exam.",
      "objectives": [
        "Prepare for the ISTQB Advanced Level - Test Automation Engineer exam (CTFL - TAE).",
        "Learn the tasks of a Test Automation Engineer (TAE) in designing, developing, and maintaining test automation solutions.",
        "Learn the concepts, methods, tools, and processes for automating dynamic functional tests.",
        "Learn the relationship of automating dynamic functional tests to test management.",
        "Learn the relationship of automating dynamic functional tests to configuration management.",
        "Learn the relationship of automating dynamic functional tests to defect management.",
        "Learn the relationship of automating dynamic functional tests to software development processes and quality assurance.",
        "Learn general applicable methods across variety of software lifecycle approaches (e.g., waterfall, agile, sequential, incremental, iterative).",
        "Learn general applicable method across different types of software systems (e.g., Web Mobile,API,Embedded,Distributed).",
        "Learn general applicable method across different types of software systems (e.g., Web Mobile,API,Embedded,Distributed)."
      ],
      "course_content": {
        "Introduction": [
          "About Instructor",
          "About Course"
        ],
        "Cracking the TAE Certification Exam": [
          "Develop Test Automation Engineer Mindset"
        ],
        "Case Study Problem": [
          "Case Study Walkthrough",
          "Observations of current SDLC Process"
        ],
        "Chapter 1 :- Introduction and Objectives for Test Automation": [
          "Theory 1 - Purpose of Test Automation",
          "Theory 2 - Success Factors in Test Automation",
          "Practical",
          "Sweat more in training, Bleed less in Battle."
        ],
        "Chapter 2 :- Preparing for Test Automation": [
          "Theory 1 - SUT Factors Influencing Test Automation",
          "Theory 2 - Tool Evaluation and Selection",
          "Theory 3 - Design for Testability and Automation",
          "Practical",
          "Sweat more in training, Bleed less in Battle!"
        ],
        "Chapter 3 :- The Generic Test Automation Architecture": [
          "Theory 1 - The Generic Test Automation Architecture(gTAA)",
          "Theory 2 - TAA Design",
          "Theory 3 - TAS Development",
          "Practical 1 -Introduction to gTAA",
          "Practical 2 - TAA Design",
          "Practical 3 - TAA Development, Building TAS Reuse, Support Target Systems",
          "Case Study Problem Test Automation Architecture Diagram",
          "Sweat more in training, Bleed less in Battle!"
        ],
        "Chapter 4 :- Deployment Risks and Contingencies": [
          "Theory 1 :- Selection of Test Automation Approach & Planning of Deployment",
          "Theory 2 : - Risk Assessment and Mitigation Strategies",
          "Theory 3 :- Test Automation Maintenance",
          "Practical 1 - Pilot Project",
          "Practical 2 : - Deployment",
          "Practical 3:- Test Automation Risks and Maintenance",
          "Sweat more in training, Bleed less in Battle!"
        ],
        "Chapter 5 :- Test Automation Reporting and Metrics": [
          "Theory 1 - Selection of TAS Metrics",
          "Theory 2 - Implementation of Measurement",
          "Theory 3 - Logging of the TAS and the SUT",
          "Theory 4 - Test Automation Reporting",
          "Practical",
          "Sweat more in training, Bleed less in Battle!"
        ],
        "Chapter 6 :- Transitioning Manual Testing to an Automated Environment": [
          "Theory 1 :- Criteria for Automation",
          "Theory 2:- Identify Steps Needed to Implement Automation within Regression Test",
          "Theory 3 :- Factors to Consider when Implementing New Feature Test Automation",
          "Theory 4 :- Factors to Consider when Implementing Confirmation Test Automation",
          "Practical",
          "Sweat more in training, Bleed less in Battle!"
        ],
        "Chapter 7:- Verifying the TAS": [
          "Theory 1: Verifying Automated Test Environment Components",
          "Theory 2: Verifying the Automated Test Suite",
          "Practical",
          "Sweat more in training, Bleed less in Battle!"
        ]
      },
      "requirements": [
        "Anyone Fresher | Experienced who wanted to learn Test Automation Engineering.",
        "The Advanced Level Test Automation Engineer qualification is aimed at people who have already achieved an advanced point in their careers in software testing and wish to develop further expertise in automation testing. The modules offered at the Advanced Level cover a wide range of testing topics.",
        "To get the Advanced Level certification, candidates must hold the Foundation Certificate(CTFL) and have sufficient practical experience."
      ],
      "description": "1. Welcome & Instructor Intro\nWelcome to ISTQB – Test Automation Engineer Certification Course, where you will not only learn how to pass the certification exam confidently but also learn to Design, Develop, Maintain, Scale Enterprise Standard Test Automation Software Systems for modern software applications like web, mobile, API.\nMy name is Osman Mohammed, I will be leading you through the course. I began my career as a software engineer after completing my master’s in computer science and information technology from the USA, after that I worked for 3+ years as a software engineer with some of the brightest and most talented people in Silicon Valley. Currently, I am working as a Software Engineer in Test for one of the Big-4 consulting firms where Design|Develop|Maintain Test Automation Software Systems.\n2. Course Outcome\nI Designed this course for anyone seeking to pass ISTQB – Advanced Level - Test Automation Engineer Certification Exam.\nBy end of the course, you will not only be equipped with all the information to pass the certification but also you can design enterprise standard Test Automation Software Systems.\n3. Real-Time Case Study Problem\nBeing a Hands-on Test Automation Engineer myself and based on my experience of taking and passing the exam, I will be teaching this course based on a real-world case study problem where we will solve this problem by developing an algorithm to Design|Develop|Maintain Test Automation Software Systems that are Robust, Scalable, Cross-Platform and tailored to real-time Project Specific Test Automation Requirements.\n4. Ideal Students for this course\nThe ideal students for this course are manual functional testers are test automation engineers who are already ISTQB foundation level certified and wanted to expand their skills and get certified as Test Automation Engineer or anyone who wanted to learn Test Automation Engineering, there are no requirements necessary to enroll I only request is you come open-minded and ready to learn.\n5. Thank You & Please Enroll.\nI look forward to seeing you inside course. Please enroll.",
      "target_audience": [
        "Anyone fresher/Experienced who wanted to Become a Software Engineer in Test |SDET .",
        "This course is highly suitable for recent College graduates who wanted to start their careers as SDET.",
        "This line is for Manual Tester, if you are one and your reading this, this course is 100% for you, where you not only learn Test Automation, but also when you finish this course you will get an Enterprise Standard Framework using which you can automate your manual smoke, regression and functional Test Cases."
      ]
    },
    {
      "title": "ISTQB Foundation Level V4.0 Complete Training",
      "url": "https://www.udemy.com/course/foundation-level-training/",
      "bio": "The best way to prepare for the ISTQB Foundation Level V4.0 Exam",
      "objectives": [
        "ISTQB Foundation Level Syllabus Content",
        "Black Box & White Box Techniques",
        "Difference between Static Testing & Dynamic Testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Welcome Message",
          "Know your instructor",
          "How to Study the Course",
          "Course Study Plan",
          "Course Slides"
        ],
        "Chapter 1 Overview: Fundamentals of Testing": [
          "Chapter 1: Fundamentals of Testing"
        ],
        "Chapter 1: Fundamentals of Testing [Interactive]": [
          "What is Testing",
          "Testing is not equal to Test Execution",
          "Static & Dynamic Testing",
          "Validation & Verification",
          "Objectives of Testing",
          "Testing & Debugging",
          "1.1 Questions & Answers",
          "Testing's Contribution to Success",
          "Testing & Quality Assurance",
          "Errors, Defects, Faults, & Root Causes",
          "1.2 Questions & Answers",
          "Testing Principles",
          "1.3 Questions & Answers",
          "Test Activities",
          "Test Activities in more depth",
          "Test Process in Context",
          "Testware & Testing Work Products",
          "Traceability between the Test Basis & Testware",
          "Roles in Testing",
          "1.4 Questions & Answers",
          "Essential Skills & Good Practices",
          "Generic Skills",
          "Whole Team Approach",
          "Independence of Testing",
          "1.5 Questions & Answers"
        ],
        "Chapter 1: Fundamentals of Testing [Syllabus Walkthrough]": [
          "What is Testing",
          "Testing is a set of Activities",
          "Validation & Verification",
          "Dynamic Testing & Static Testing",
          "Systems thinking",
          "Test Objectives",
          "Testing & Debugging",
          "1.1 What is Testing Quiz",
          "Testing's Contribution to Success",
          "QA & QC",
          "Errors, Defects, Failures, & Root causes",
          "1.2 Why is Testing Necessary Quiz",
          "Testing shows presence of defects not their absence",
          "Exhaustive Testing is impossible",
          "Early Testing Saves Time & Money",
          "Defects Cluster Together",
          "Tests Wear Out",
          "Testing is Context Dependent",
          "Absence of Errors is a Fallacy",
          "1.3 Testing Principles Quiz",
          "Test Activities",
          "Test Planning",
          "Test Monitoring & Control",
          "Test Analysis",
          "Test Design",
          "Test Implementation",
          "Test Execution",
          "Test Completion",
          "Test Process in Context",
          "Testware: Test Planning, Monitoring, & Control Work Products",
          "Testware: Test Analysis, Design, & Implementation Work Products",
          "Testware: Test Execution & Completion Work Products",
          "Traceability between Test Basis & Testware",
          "Roles in Testing",
          "1.4 Test Activities, Testware and Test Roles Quiz",
          "Generic Skills required for Testing",
          "Whole-Team Approach",
          "Independence of Testing",
          "1.5 Essential Skills and Good Practices in Testing Quiz"
        ],
        "Chapter 1 Sample Exam": [
          "Chapter 1 Sample Exam"
        ],
        "Chapter 2 Overview: Testing Throughout the Software Development Lifecycle": [
          "Chapter 2: Testing Throughout the Software Development Lifecycle"
        ],
        "Chapter 2: Testing Throughout the Software Development Lifecycle [Interactive]": [
          "Software Development Lifecycle Models Definition",
          "Sequential, Iterative, & Incremental Development Models",
          "Impact of the Choice of the SDLC on Testing",
          "Good Testing Practices in Different SDLCs",
          "Testing as a Driver for Software Development",
          "Shift Left",
          "Retrospectives and Process Improvement",
          "2.1 Questions & Answers",
          "Test Levels & Test Types",
          "Test Levels",
          "Test Types",
          "2.2 Questions & Answers",
          "Confirmation Testing & Regression Testing",
          "Maintenance Testing",
          "2.3 Questions & Answers"
        ],
        "Chapter 2: Testing Throughout the SDLC [Syllabus Walkthrough]": [
          "Testing in the Context of the Software Development Lifecycle",
          "Waterfall Model",
          "V-Model",
          "Iterative & Incremental Development",
          "Software Development Methods & Practices",
          "Impact of Software Development Lifecycle on Testing",
          "Software Development Good Practices",
          "Test-Driven Development",
          "Acceptance Test-Driven Development",
          "Behavior-Driven Development",
          "DevOps & Testing",
          "DevOps Benefits & Challenges",
          "Shift-left Approach",
          "Retrospectives",
          "Benefits of Retrospectives",
          "2.1 Testing in the Context of a Software Development Lifecycle Quiz",
          "Test Levels & Test Types",
          "Component Testing",
          "Component Integration Testing",
          "System Testing",
          "System Integration Testing",
          "Acceptance Testing",
          "Functional Testing",
          "Non-Functional Testing",
          "Notes about Non-Functional Testing",
          "Black-Box & White-Box Testing",
          "Confirmation Testing",
          "Regression Testing",
          "2.2 Test Levels & Test Types Quiz",
          "Maintenance Testing",
          "Triggers for Maintenance",
          "Maintenance Testing"
        ],
        "Chapter 2 Sample Exam": [
          "Chapter 2 Sample Exam"
        ],
        "Chapter 3 Overview: Static Testing": [
          "Chapter 3: Static Testing"
        ]
      },
      "requirements": [
        "Good knowledge about English language",
        "Good knowledge in dealing with computers"
      ],
      "description": "All course content is updated to the latest version of the syllabus V4.0\n\n\nThe course includes all steps necessary to pass the exam:\n1-Full explanation of the syllabus\n2-Quizzes after each lecture to test your knowledge about it\n3-Full Sample Exam on Each chapter to test your understanding of it\n4-Full Syllabus 4 Sample Exams with videos that guide you through them\n\n\nOnce you study the whole course you will be ready to apply for the exam.\n\n\nThese are some of the reviews of the students who used this course as a source for preparing for the ISTQB Foundation Level Exam:\n\"Took the exam last Saturday and passed. There are many concepts that were explained here which is not in the syllabus. The examples given helped me understand the concepts better.\"\nJoanne Rufino\n\n\n\"Thank you sir for providing this wonderful course your teaching techniques are good.i got cleared ISTQB exam\"\nsurya walke\n\n\"This my first time in a testing career and I came from a field is no longer relate to the software at all but really I am very interested in this course and knowing many pieces of information not only in an academic way but also in real professional life. The instructor is really amazing and the course is very organized\"\nAhmed Abdel Aziz\n\n\"This is not my first course of this instructor. I purchased this too, because he explains well, with examples and helps me to prepare for the ISTQB exam. Also, he has some ISTQB exams, very well made and very helpful. Thank you. Well...I attempted the ISTQB Foundation level, yesterday, on January 15. I PASSED!!! You explained very good the exercises and questions and I made all of them at the exam. Thank you very much. All the best and good luck.\"\nElena Herghelegiu\n\n\"Thank you very much Eng. Tarek for this course i planned to take the exam for ISTQB FL on 30th of September, 2020\nupdate :-I got my Certification on 4th of October,2020\"\nMohamed Seoudy\n\n\n\"As a Mexican (non native English speaker) I totally understood Tarek's accent. All the concepts were easily understandable with the help of his examples. I would totally take another course with him. Thanks, Tarek!\"\nJessica Malfavon\n\n\"Yes, being an interested fresher in this domain where certification is the key to unlock many doors, this detailed session[s] is helping me build a strong base.\"\nYogesh Pai\n\n\"Excellent Explanation and it is very detailed to deliver the information in a perfect way. Thanks alot Eng tarek roshdy\"\nNour Eldeen Mohamed Moustafa\n\n\"This course is so useful and important for any one want to begin in this field(software testing) and the instructor make effort to explain every information. I really recommended it for the beginners\"\nAsmaa abd El-naser Mostafa\n\n\"The course is based on the Certified Tester Foundation Level Syllabus 2018. It follows exactly what's written in the Syllabus. Going through Tarek's videos instead of reading directly from the Syllabus makes it easier to learn. Everything is explained properly. Particularly for myself as I'm not from an English speaking background. There are also questions to check your understanding of the syllabus. Overall, this course is great.\nEdit January 2021: I passed with success the ISTQB CTFL in December 2020. Thanks for the great work Tarek!\"\nRonan Gueguen",
      "target_audience": [
        "QA Engineers",
        "Software Testers",
        "Software Engineers",
        "Software Developers",
        "Project Managers"
      ]
    },
    {
      "title": "API Manual/Automation testing using PYTHON/ PYTEST Framework",
      "url": "https://www.udemy.com/course/api-testing-with-python/",
      "bio": "Build top automation Utilities to test Rest API’s using PYTHON/Request with PYTEST/Allure/logger Framework from scratch",
      "objectives": [
        "Basic API Manual Testing",
        "Basic API Automation Testing using PYTHON",
        "Basic PYTHON covered to learn Automation",
        "Complete Pytest Framework to learn like an experienced",
        "Complete guide to build a framework from scratch",
        "Allure reporting framework",
        "loggers for logging details into reporting",
        "You can able to build a basic framework from scratch from beginners to advance level with full confidence",
        "Get Complete knowledge on Back end automation with Python which is must to become Python SDET",
        "Understanding the API Automation from Scratch with Python Requests Library"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Humble Request!!",
          "Better Learning Experience - Must for new to Udemy | Optional who know",
          "Reachout to Instructor anytime"
        ],
        "Basics understanding of API - for Beginners": [
          "Course Learning Plan",
          "What is an API ?",
          "Why we need API ?",
          "API & WebServices Real time Example on Live Application",
          "API Architecture Explanation",
          "Difference Between API & WebServices ?"
        ],
        "Rest & SOAP API Basic understanding": [
          "What is HTTP ?",
          "What is REST & SOAP with funny Examples ?",
          "Difference between REST & SOAP ?"
        ],
        "API Practical Examples with Explanation": [
          "Basic of Service, URI, URL & End Points",
          "Path & Query Parameter in API calls",
          "HTTP methods for RestAPI & CRUD Operation",
          "Real time API Call in Application"
        ],
        "Manual API Testing using PostMan": [
          "What is Manual API Testing?",
          "What is PostMan? How to do API Testing using it?",
          "PostMan Setup & Installation",
          "Download PostMan Native App I If facing Issue"
        ],
        "API Manual Testing on Live Project with Practicals": [
          "Free Website examples for API Testing - Practice Purpose",
          "Test on Any Free Live API - VVI",
          "GET method - API Testing",
          "GET method - Example",
          "POST method - API Testing",
          "PUT method - API Testing",
          "DELETE method - API Testing",
          "PATCH method - API Testing"
        ],
        "Understanding API Errors Code for Live API Testing": [
          "What is Error & status code in API Testing?",
          "All Actual Response code - with explanation",
          "Frequently Used Errors code & Differences - VVI for Interview"
        ],
        "API Automation Basic Understanding": [
          "What is API Automation?",
          "Why do we need API automation?",
          "What is Rest API?",
          "Next Learning ?"
        ],
        "Set up & Prerequisites for PYTHON": [
          "Download & Setup Python for Mac/Linux",
          "Download & Setup Python for Windows",
          "Special Setup for Windows User - Easy Learning - Optional",
          "Download & setup Pycharm",
          "What is PIP & it's uses",
          "Using PIP & Practice"
        ],
        "Python Very Basics Concepts": [
          "Creating new Python Project in Pycharm",
          "Creating Python File & first program",
          "PYTHON Identifier",
          "Python Comments & System inputs"
        ]
      },
      "requirements": [
        "Nothing is required - we have covered everything required to learn this Course",
        "You will have Life Time instructor support - You can contact me any time for your Queries",
        "Covered from very very basics & assume like you don't know anything about python-api-automation",
        "All class notes & Live practical codes will be given for reference."
      ],
      "description": "Master API Automation with Python: Complete SDET Course for Beginners\nLooking to become a pro at API automation? This comprehensive course is perfect for beginners and will take you from zero to hero in API automation using Python and the requests library. If you're aiming to break into the SDET (Software Development Engineer in Test) field or enhance your existing skills in backend automation, this course is tailored for you!\nBy the end of this course, you'll confidently be able to perform API testing, implement Python automation, and tackle interviews with ease. API automation is one of the most in-demand skills for SDETs and backend testers, and this course gives you the knowledge and tools you need to succeed.\nHappy to help you always & Wish you all the Best with your new API Automation using Python which is most demanding course for SDET & Backend Automation tester.\n\n\nWhat Makes This Course Stand Out?\nNo Prior Experience Required: This course is designed for beginners! You'll start from Python basics and gradually move into advanced API automation techniques.\nReal-World Examples: Learn using live API examples and real-world projects, just like you would in an actual company environment.\nComprehensive Coverage: This course covers everything you need to know, from basic manual API testing to advanced Python automation techniques and test reporting.\nIndustry-Relevant Skills: Learn key skills used by top companies like Python API automation, Pytest framework, Allure reporting, loggers, and much more.\n\n\nWhat You Will Learn:\nPython Basics:\nGet a solid foundation in Python, covering everything from variables and loops to functions and data structures.\nManual API Testing:\nUnderstand the core concepts of API testing, including the different types of API requests and responses (GET, POST, PUT, DELETE).\nAPI Automation using Python:\nLearn how to automate API testing with the requests library, focusing on the CRUD operations for GET, POST, PUT, and DELETE requests.\nLive Demo Projects:\nPractice with live API projects and real-world websites to gain hands-on experience and reinforce your learning.\nAdvanced Python Utilities:\nMaster Python utilities like JSON parsing, error handling, and regular expressions to make your API tests more efficient and robust.\nBuilding Automation Framework from Scratch:\nLearn how to build a complete automation framework for API testing using Python and integrate essential tools like Pytest.\nPytest Framework:\nUnderstand Pytest and how to use it for test automation. Gain hands-on experience with test case execution, assertions, and organizing your tests.\nAllure Reporting:\nLearn to generate detailed test reports using Allure for better test result visualization.\nLoggers for Debugging:\nImplement loggers in your testing framework to debug failures and track test execution more efficiently.\n\n\nWho Can Benefit from This Course?\nBeginners in Python who want to break into the SDET field and master API automation.\nQA professionals looking to transition into test automation or backend testing roles.\nSoftware Engineers in Test (SDETs) aiming to strengthen their skills in API testing and Python-based automation.\nTesters or developers who want to automate RESTful APIs and microservices testing.\nAutomation engineers interested in learning about API testing automation with Python and Pytest.\n\n\nKey Features:\nLive Projects and Demos: Practice real-world API automation scenarios with multiple live demos and exercises.\nHands-on Framework Building: Build your own API test automation framework from scratch.\nComprehensive Learning Path: From Python basics to advanced automation frameworks, everything is covered.\nInterview Preparation: Prepare for API testing and Python automation interviews with expert insights and interview questions.\nReal-Time Reporting: Use Allure reporting and loggers to generate professional test reports and troubleshoot failures.\n\n\nTop enrolments are from below categories:\nPython API Automation\nAPI Testing with Python\nPython for SDET\nAPI Automation Testing\nPytest Automation Framework\nAllure Reporting for API Testing\nPython Automation for SDETs\nAPI Testing with Python Requests\nBackend API Testing\nLearn API Testing from Scratch\nAPI Automation Framework\nPython Automation Course for Beginners\nSDET API Testing Course\nAutomate API with Python\n\n\nReady to Boost Your Career in Automation?\nTake the first step towards becoming a Python automation expert and SDET with this hands-on, beginner-friendly course. Whether you're starting from scratch or looking to level up your automation skills, this course is for you!\n\n\nEnroll Now and start automating your way to success!\n\n\nBest of luck with your learning journey, and I look forward to seeing you succeed!\nPankaj Gupta",
      "target_audience": [
        "Beginners or Fresher",
        "Anyone who want to Learn Basic API Manual and Automation Testing using Python",
        "Anyone want to upgrade QA/SDET Skills",
        "Want to Update skills & Job change",
        "Manual testers who want to learn Automation in easy way using Python"
      ]
    },
    {
      "title": "Mobile Automation with Xamarin UITest",
      "url": "https://www.udemy.com/course/xamarin-uitest/",
      "bio": "Automate cross platform application with Xamarin.UITest for android/ios",
      "objectives": [
        "Understand what Xamarin is all about",
        "Understand basic of Xamarin app development",
        "Understand Xamarin UITest from basic to advanced",
        "Understand Xamarin Backdoors",
        "Understand Xamarin UITest Cloud",
        "Understand Page Object Model with Xamarin and working with BDD"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Part 2 - Installing Xamarin with Visual Studio 2017",
          "Part 3 - Creating cross platform mobile application with Xamarin",
          "Part 4 - Creating and understanding Xamarin.UITest project",
          "IMPORTANT - LATEST SOURCE CODE"
        ],
        "Xamarin UITest basic features": [
          "[Deprecated ⚠️] - Record and Playback",
          "Part 5 - Record and playback in Xamarin with Xamarin Test Recorder",
          "Part 6 - Working with Xamarin's REPL tool",
          "Part 7 - Working with different UI locators in Xamarin.UITest",
          "Part 8 - Working with different UI locators in Xamarin.UITest (Part B)",
          "Part 9 - Working with different UI locators in Xamarin.UITest (Part C)",
          "Part 10 - Working with Queries in Xamarin.UITest",
          "Part 11 - Working with Hybrid Applications developed with Ionic 2",
          "Part 12 - Working with Hybrid Applications locators with Xamarin.UITest",
          "IMPORTANT - LATEST SOURCE CODE"
        ],
        "Xamarin UITest Advanced features": [
          "Part 13 - Advanced Interactions in Xamarin (Swipe/Scroll/PinchToZoom)",
          "Part 14 - Page Object Model in Xamarin.UITest (Part A)",
          "Part 15 - Page Object Model in Xamarin.UITest (Part B)",
          "Part 16 -Backdoors in Xamarin.UITest",
          "Part 17 - Working with Xamarin Test Cloud"
        ],
        "Xamarin Automation framework development": [
          "Introduction to automation framework",
          "Understanding Xamarin framework components",
          "Developing base components of Xamarin framework",
          "Calling Base Page for Page Object Model in Xamarin",
          "Development Xamarin API Extension components"
        ],
        "Creating custom configuration components in Xamarin framework": [
          "Introduction to Configuration component",
          "Creating configuration Element for custom configuration",
          "Creating configuration section and calling within Xamarin framework",
          "Running complete code with custom configuration and framework components",
          "IMPORTANT - SOURCE CODE"
        ],
        "Behavioral Driven Development in Xamarin with Specflow": [
          "Introduction to Behavioral Driven Development in Xamarin with Specflow",
          "Writing first simple specflow scenario in Xamarin",
          "Writing simple specflow scenario contd",
          "Code refactor and summary",
          "Source code Latest - 2021"
        ],
        "Running Xamarin.UITest framework with MacOS and iOS": [
          "Introduction to Xamarin.UITest with MacOS and iOS",
          "Preparing application for Xamarin.UITest ready",
          "Introduction to Xamarin Test recorder for MacOS",
          "Specflow integration with Visual studio for Mac 2017 and working with REPL",
          "Running our Xamarin Test framework in MacOS for iOS application",
          "Running Xamarin.UITest on specific iOS Simulator"
        ],
        "Running Xamarin.UITest in Visual Studio App center": [
          "Running Xamarin.UITest in Visual Studio App centre"
        ],
        "Updated Source code with Breaking changes of 2021": [
          "Next lecture contains complete source code with updates to library",
          "Complete Source code"
        ]
      },
      "requirements": [
        "Should have basic knowledge on any mobile automation testing tool",
        "Should have basic understanding on Android application",
        "Good understanding in C#",
        "Basic understanding in Selenium"
      ],
      "description": "Mobile Automation with Xamarin UITest course is the first ever course on the internet as video series which address some of the most important concepts on Xamarin.\nThe course begins from very basic and progress to advance concepts of xamarin such as\nUnderstand basic of Xamarin app development\nUnderstand Xamarin UITest basic concepts such as\n\n\nRecord and Playback\nREPL\nLocators\nPage Object Model\nWorking with Hybrid application developed with Ionic 2 framework\nWorking with advanced concepts of Xamarin such as\nAdvanced interations\nBackdoors\nXamarin Test Cloud\nBDD with Specflow",
      "target_audience": [
        "Manual QA",
        "Automation QA",
        "Developers",
        "DevOps"
      ]
    },
    {
      "title": "Complete Manual Software Testing + Web Testing + App Testing",
      "url": "https://www.udemy.com/course/software-testing-stadsolution/",
      "bio": "Learn Basic to Advance Software Testing and Become a Software Testing Pro.",
      "objectives": [
        "What is Testing and why it is important.",
        "How to find Bugs from any Application",
        "Types of Errors",
        "How to create test scenarios, test cases, bug reports, traceability matrix, test plan, and test report",
        "How to perform blackbox testing and its technique",
        "How to perform different types of testing",
        "How to Test Mobile Application",
        "How to Test Web Application",
        "How to Test Mobile Games"
      ],
      "course_content": {
        "Introduction": [
          "What is Software Testing?",
          "Why Testing is Important?",
          "Why choose software testing as career",
          "Software Testing Career Graph",
          "Roles & Responsiblities of Tester",
          "Future of Testing",
          "Testing Objective",
          "What is Quality ?",
          "What is Risk ?",
          "Type of Risk",
          "Defect, Bug, Error, Fault"
        ],
        "Software Engineering": [
          "SDLC - Software Development Life Cycle",
          "Waterfall Model",
          "Iterative Model",
          "Spiral Model",
          "Agile Model",
          "V Model",
          "RAD Model"
        ],
        "Testing Approaches": [
          "Manual & Automation Testing",
          "Difference Between Manual and Automation Testing",
          "Testing Tools",
          "Difference between Static & Dynamic testing",
          "Technique for static testing"
        ],
        "Type of Error": [
          "Type of Error"
        ],
        "How to Perform Testing ?": [
          "Web Application Testing (Part 1)",
          "Web Application Testing (Part 2)",
          "Mobile Application Testing (Part 1)",
          "Mobile Application Testing (Part 2)",
          "Game Application Testing"
        ],
        "Testing basic": [
          "When to start testing (Entry Criteria)",
          "When to stop testing (Exit Criteria)",
          "How much testing is enough",
          "Difference between QA , QC & Testing",
          "7 Key principle of testing",
          "Independent Testing &Debugging"
        ],
        "Software testing process": [
          "What is Software Requirement and how to create FRD & BRD",
          "Test Plan",
          "Test Scenario",
          "Test cases",
          "Defect management technique",
          "Defect Terminology",
          "Defect Tracking Tool",
          "Traceability Matrix",
          "Test Summary Report",
          "STLC"
        ],
        "Types of Testing": [
          "Structural Testing",
          "Functional & Non Functional Testing"
        ],
        "Level of Testing": [
          "Unit Testing",
          "Integration Testing",
          "System Testing",
          "User Acceptance Testing"
        ],
        "Functional Testing": [
          "Difference between Regression & Retesting",
          "Difference between Smoke & Sanity",
          "Alpha Testing",
          "Beta Testing"
        ]
      },
      "requirements": [
        "Should have basic knowledge of software engineering and its module"
      ],
      "description": "Excellent course For beginners who wanted to start a career in Manual Software Testing\n\nThis course is mostly concentrated on a practical part like deriving Test data and writing Test Cases for a given functionality, I have widely covered Test case writing topics with required documents because whatever the level of experience a tester have, working with test cases is the general practice of manual testers,\nHighlights\nThe course starts from very scratch\nAll life cycles explained\nHands-on writing Testcases\nsimple design course\nNon- IT students can easily learn the course\nexplained each and every topic of Manual Testing\nThe course starts from what is software and covers all the theory parts of software development and testing. Then slowly moves on to the practical part of driving test cases and test data.\nA lot of real-life examples are given on How to write Test Cases\n\nWhat will you learn in your course?\nWhat is Testing and why it is important.\nHow to find Bugs from any Application\nTypes of Errors\nHow to create test scenarios, test cases, bug reports, traceability matrix, test plan, and test report\nHow to perform black-box testing and its technique\nHow to perform different types of testing\nHow to Test Mobile Application\nHow to Test Web Application\nWhat will you learn in your course?\nWhat is Testing and why it is important.\nHow to find Bugs from any Application\nTypes of Errors\nHow to create test scenarios, test cases, bug reports, traceability matrix, test plan, and test report\nHow to perform black-box testing and its technique\nHow to perform different types of testing\nHow to Test Mobile Application\nHow to Test Web Application",
      "target_audience": [
        "Beginners or who want to make their career in Software Testing"
      ]
    },
    {
      "title": "Node.js Unit Testing In-Depth",
      "url": "https://www.udemy.com/course/nodejs-unit-testing-in-depth/",
      "bio": "A focused, in-depth look into Node.js unit testing, from absolute beginner to very advanced.",
      "objectives": [
        "Students will be well versed in how to unit test applications, they will be ahead of most other developers in that regard."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is this course for?",
          "Suggestions on how to study"
        ],
        "Mocha, Chai & Setup": [
          "Introduction to Mocha & Assert",
          "Before & Afters",
          "Multiple Contexts",
          "Introduction to Chai",
          "Chai Basics",
          "CLI & Test Commands",
          "Environmental Variables & Cross-Env"
        ],
        "Basics of Testing": [
          "Course Files",
          "Standard Functions",
          "Callback Functions",
          "Promises 1",
          "Promises 2",
          "Chai Addons & More Promises",
          "Test Doubles & Sinon",
          "Spies",
          "Code Isolation",
          "Stubs",
          "Private Code & Rewire",
          "Important Reminder"
        ],
        "Testing The App": [
          "Depreciation Note",
          "Users.get() - Part 1",
          "Users.get() - Part 2",
          "Users.delete()",
          "Users.create()",
          "Users.update()",
          "Users.resetPassword()",
          "Mailer.js",
          "Utils.js",
          "Routes - Part 1",
          "Routes - Part 2",
          "Routes - Part 3",
          "The User Model",
          "Order Class - Part 1",
          "Order Class - Part 2",
          "Order Class - Part 3",
          "Order Class - Part 4"
        ],
        "Test Coverage & Warnings": [
          "Test Coverage with Istanbul / NYC",
          "Test Coverage Warning",
          "Recursive Warning"
        ],
        "Bonus": [
          "Test-Driven Development",
          "Mocking Require Statements",
          "Creating a run config in VS code and updating the app to run"
        ],
        "Conclusion": [
          "Final Thoughts"
        ]
      },
      "requirements": [
        "Basic knowledge of node is required."
      ],
      "description": "This is a focused, in-depth course about unit testing, where we will look at lots of code, and learn how to test it. We will go through everything from the simplest JavaScript function to ES6 classes & private code testing. We will also learn how to test your code coverage, so you always know where you stand.\nOne of the goals of this course is to teach you how to think about unit testing, and not simply teach you the basic syntax or how to call an assertion.\nWe will go through most scenarios you will run into day to day, as well as address a number of issues and examples ignored by most unit testing courses available online.\nYou should have some node experience, you don't need to be an expert, but you should at least know the basics.\n\nI am always looking to improve the course, please send me any feedback you may have directly!\nPlease go ahead and add me on LinkedIn, I love to connect with my students (I also love endorsements :D)",
      "target_audience": [
        "All nodejs developers, or devs who wish to learn more about unit testing using node."
      ]
    },
    {
      "title": "Automated Web Testing with JavaScript and Playwright",
      "url": "https://www.udemy.com/course/automated-web-testing/",
      "bio": "Master browser automation to create fast and reliable test suites. Taking you from zero to hero!",
      "objectives": [
        "Write automated tests with a cutting-edge framework and programming language",
        "Create beautiful test suites using the page object model",
        "Use in-built retries for maximum reliability",
        "Manipulate network request and simulate API responses",
        "Execute your automation project in the cloud via CI systems",
        "Upload your project to GitHub",
        "Explore how web applications work behind the scenes"
      ],
      "course_content": {
        "Basic Concepts": [
          "Course Overview",
          "Install required software: custom web application, Node.js, Visual Studio Code",
          "Windows users only: Install git bash",
          "Notes about frequent questions",
          "Project setup with npm init",
          "Explore the framework",
          "Functions and understanding the test frame",
          "Selectors and page interactions: Waiting for a button, clicking on a button",
          "Assert text changes",
          "Assert page navigation"
        ],
        "End-to-End Testing": [
          "End-to-End Testing: Introduction",
          "Page Objects",
          "Accessing specific elements: Add three products to the basket via page object",
          "Accessing specific elements: Assert that the button changes text",
          "String conversion: Assert that the basket counter increases",
          "Nested page object method calls",
          "Move to checkout using navigation bar",
          "Iterating over multiple elements with .map() & String replacements",
          "Selecting specific elements out of multiple options",
          "Dropdowns",
          "Regular Expressions",
          "Form fields",
          "Third-party dependencies and UUIDs",
          "Method arguments - passing data into our page object from outside",
          "Form fields: Fill out delivery details",
          "Abstracting test data: Move user details into data-specific directory",
          "In-built retries: Counting elements",
          "Extracting input values",
          "Continue to payment page",
          "iframes: Grab discount code",
          "In-built retries: Input values",
          "Keyboard API: Simulating typing",
          "In-built retries: Text changes",
          "Form fields: Fill in credit card details",
          "Complete payment",
          "Mobile viewport setup",
          "Conditional actions: Adding a product to the basket in mobile",
          "Conditional actions: Adjustments to not impact the desktop tests",
          "Utility functions: Move to checkout using mobile navigation drawer"
        ],
        "Advanced Techniques": [
          "Advanced Techniques: Introduction",
          "Cookies and browser storage",
          "My Account page",
          "API/Network requests with third-party dependencies, handling JSON - Part 1",
          "API/Network requests, handling JSON - Part 2",
          "Page scripts: Injecting cookies into the browser",
          "Reusable API helpers",
          "Environment variables",
          "globalSetup: Calling functions before all tests",
          "Mocking network requests"
        ],
        "CI Systems and Version Control with GitHub": [
          "CI Systems: Introduction",
          "Mac users only: Installing git",
          "Sign up for GitHub",
          "Authentication with SSH key",
          "Preparing the project before push to GitHub",
          "Upload project to GitHub",
          "GitHub Actions: First step",
          "GitHub Actions pipeline: Commands to execute tests",
          "GitHub Actions: Secrets",
          "Goodbye"
        ],
        "Bonus": [
          "UI Mode",
          "Spread Operator in JavaScript"
        ]
      },
      "requirements": [
        "No programming experience needed — I will explain everything you need.",
        "A computer where you can install software (Windows, Mac, Linux)"
      ],
      "description": "This course is designed with one simple goal in mind: To teach you web automation so that you will have all the tools to build reliable and fast test suites using the industry's best-practices and advanced techniques. On top of that, you will learn how web applications work behind the scenes and how you can use this knowledge to your advantage.\n\n\nPractice makes perfect\nI believe that you can learn any subject if you practise it. That is why this course is completely practical: We will be building a real test suite for a shopping app. You will also learn how to take these learnings and concepts and apply them to your own applications!\n\n\nThroughout the course, there are plenty of exercise stages where you are invited to pause the video and take on a challenge, practising and retraining things you already learned. But don’t worry, I will always be walking you through my solution at the end of the exercise.\n\n\nThe right tool for the job\nPlaywright is one of the most powerful and convenient automation frameworks out there, used by big-brand companies such as Microsoft, Adobe and Disney+. We pair it up with JavaScript, the most popular programming language on the planet! This course will teach you everything there is to know. We will even go one step further and explore the rich ecosystem of third-party libraries.\n\n\nLearning should be fun\nProgramming isn’t just a job for me; it’s a passion. I look to bring this passion into my teaching. This is exactly the kind of course that I would love to take myself — I make things fun and engaging.\n\n\nHave a problem? Not a problem!\nErrors are natural in programming. I will be in the Q&A section ready to take on your questions. Every lesson also comes with a transcript of the code changes; that way you can confirm your solution independently.\n\n\nLet’s get started\nI am thrilled to have you here and I can’t wait to get started with you. See you in the course!\n- Rick",
      "target_audience": [
        "Anyone wanting to learn browser automation, no matter which skill level. All necessary knowledge will be taught in the course."
      ]
    },
    {
      "title": "Complete Cucumber Framework for BDD",
      "url": "https://www.udemy.com/course/cucumber-framework-for-behavior-driven-development/",
      "bio": "Write Gherkin feature files and Java Selenium glue code to test web apps in behavior-driven development using Cucumber",
      "objectives": [
        "Prepare the Cucumber environment in less than 5 minutes",
        "Write a feature file and step definition in less than 5 minutes",
        "Understand the role of feature files and the Gherkin business language syntax",
        "Write complex and advanced feature files with enhanced scenarios",
        "Implement the Given-When-Then outline to a scenario structure",
        "Bind Gherkin feature files with Java step definitions using Cucumber framework",
        "Pass data into tests using Gherkin parameterization syntax",
        "Enhance features with tags and hooks to guide test framework"
      ],
      "course_content": {
        "Introduction": [
          "Overview of Behavior-Driven Development",
          "BDD and Test-Driven Development",
          "Cucumber Framework",
          "Course Pre-Requisites",
          "Preparing the Development Environment",
          "Preparing the Selenium and Cucumber Environment",
          "Step-by-Step Notes on the Environment",
          "Getting Started with a Project"
        ],
        "Feature Files with Gherkin": [
          "Overview of Feature Files",
          "Gherkin Syntax",
          "Writing a Feature",
          "Writing a Scenario",
          "Given-When-Then Structure",
          "Feature Files"
        ],
        "Cucumber & Java Step Definitions": [
          "Getting Started with Glue Code",
          "Writing a Step Definition",
          "Implementing Scenario Steps",
          "Running a Feature File",
          "Manage Execution with JUnit TestRunner",
          "Adding JUnit Assertions"
        ],
        "Cucumber & Selenium WebDriver": [
          "Getting Started with Selenium WebDriver",
          "Integrating Selenium and Step Definitions",
          "JUnit Assertions to Selenium Test",
          "Cucumber Hooks"
        ],
        "Enhancing Cucumber Framework": [
          "Defining Multiple Scenarios",
          "Additional Gherkin Keywords",
          "Cucumber Tags",
          "Background Keyword",
          "Creating a Hooks Class"
        ],
        "Data Parameterization with Gherkin": [
          "Gherkin Variable Placeholders",
          "Implementing Variable Placeholders with Java",
          "Gherkin Scenario Outline and Examples",
          "Java Implementation",
          "Gerhkin DataTables",
          "Implementing Cucumber DataTable with Java"
        ]
      },
      "requirements": [
        "We will use Java with Eclipse on a Windows environment",
        "Familiarity with an IDE",
        "Familiarity with basics of programming"
      ],
      "description": "Behavior-driven development, acceptance testing, and test-driven development is one of the latest, most important trends in software delivery. Learn how to implement BDD software delivery with Cucumber framework using Java, Selenium, and JUnit. Apply your knowledge to a real-world application.\nIn this course, you will how to\nWrite a feature file\nApply Gherkin syntax\nOutline a Given-When-Then scenario\nParameterize data into scenarios\nPass data from steps to glue code\nIntegrate Cucumber with Selenium",
      "target_audience": [
        "Software Developers",
        "Test Engineers & Automation Testers",
        "Managers and Product Owners",
        "DevOps Engineers",
        "QA / Testers"
      ]
    },
    {
      "title": "Mastering XPath and CSS Selector for Selenium",
      "url": "https://www.udemy.com/course/mastering-xpath-and-cssselector-for-selenium/",
      "bio": "Constructing Effective XPath and CSS Selector",
      "objectives": [
        "Understand what is XPath and CSS Selector.",
        "What is the use in Selenium Webdriver with XPath and CSS Selector.",
        "Types of XPath and CSS Selectors.",
        "Methods available in XPath and CSS Selector.",
        "Full knowledge on how to contruct XPath and CSS Selector when there is no proper attributes available.",
        "Difference between CSS Selector and XPath."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "XPath Introduction",
          "XPath Terminology",
          "XPath Syntax",
          "XPath Operators",
          "Which Tool to find the XPath?",
          "Absolute XPath",
          "Exact XPath",
          "Relative XPath"
        ],
        "XPath Methods": [
          "Finding Elements with text() method",
          "Finding Elements with contains() method",
          "Finding Elements with starts-with() method",
          "Finding Elements with position() method",
          "Finding Elements with normalize-space() method",
          "Finding Elements with Group Index"
        ],
        "XPath Axes": [
          "XPath Axes Explained",
          "Finding Parent Element",
          "Finding Child Element",
          "Finding Ancestors",
          "Finding Descendants",
          "Finding Following Element",
          "Finding Following-Sibling Element",
          "Finding Preceding Element",
          "Finding Preceding-Sibling Element"
        ],
        "CSS Selector": [
          "CSS Selector Introduction",
          "Absolute CSS Selector",
          "Exact CSS Selector",
          "Relative CSS Selector",
          "Find Element By ID",
          "Find Element By CLASS",
          "Find Element By Multiple Classes",
          "Find Element By Class and Attribute",
          "Finding Child Elements",
          "Finding Descendant Elements",
          "Differece between nth-child() and nth-of-type()",
          "nth-child() Method in CSS Selector",
          "nth-of-type() Method in CSS Selector",
          "Finding First Child Element",
          "Finding Last Child Element",
          "Finding Element By Prefix",
          "Finding Element By Suffix",
          "Finding Element with Partial Attribute Value",
          "Finding Immediate Sibling",
          "Finding Following Sibling",
          "Finding Elements By Ignoring Case Sensitivity"
        ],
        "Differences": [
          "Difference between XPath and CSS Selector",
          "Difference between Absolute XPath and Relative XPath"
        ],
        "What Next?": [
          "BONUS - Discount for my other courses"
        ]
      },
      "requirements": [
        "Minimum HTML knowledge.",
        "Minimum Selenium Webdriver knowledge.",
        "Minimum Testing knowledge."
      ],
      "description": "This is the only XPath and CSS Selector course which will cover all the information which is needed to find the elements/dynamic elements while automating any web application using Selenium or Appium. The reason behind making this course is, if you know how to construct XPath or CSS Selector then you are 50% success in writing your automation scripts.\nI made this course very elaborative to construct your own XPath and CSS Selector to find the elements on the web page.\nThis course will cover what is XPath, XPath Types, XPath Terminology, XPath Syntax, XPath Operators, XPath Methods, XPath Indexing, XPath Axes, What is CSS Selector, CSS Selector Types, Methods in CSS Selector and Wildcards in CSS Selector etc...\nFor each and every XPath and CSS Selector, I tried to give appropriate example to demonstrate. So, that it will be very clear to you to understand and implement the same in your work with out any issues.\nSo, what you are waiting for !!!! please enroll and get the knowledge.",
      "target_audience": [
        "Beginners with no knowledge on XPath and CSS Selector.",
        "Manual Testers who wants to step into Automation (i.e. Selenium Webdriver).",
        "Selenium testers who lacks in XPath and CSS Seletor knowledge.",
        "Selenium testers who wants to enhance knowledge in writing XPath and CSS Selector."
      ]
    },
    {
      "title": "Learn ETL Testing & Data Warehouse fundamentals",
      "url": "https://www.udemy.com/course/etl-testing-data-warehouse-fundamentals/",
      "bio": "Be a Data Quality Assurance Engineer — Build a strong foundation in ETL, Data Warehousing, and testing for data quality",
      "objectives": [
        "Understand ETL & Data Warehouse fundamentals with real-world business case examples.",
        "Build a complete ETL pipeline using Pentaho Data Integration from scratch.",
        "Design effective ETL test scenarios using SQL queries for data quality validation.",
        "Understand the scope of ETL testing at each layer of the pipeline with practical examples",
        "Learn Slowly Changing Dimensions and how to test them in ETL workflows.",
        "Explore ETL vs ELT architectures and when to use each in modern data stacks.",
        "Discover why data quality testing is critical before using data to train LLMs and AI models."
      ],
      "course_content": {},
      "requirements": [
        "Knowledge on SQL Basics will helpful"
      ],
      "description": "A hands-on tutorial that takes you from the ground up and gives you a solid understanding of Data Warehouse and ETL Testing concepts.\nWhat will you learn from this course?\nLearn why and where ETL is required with a real-time business problem.\nUnderstand the fundamentals of Data Warehousing and common data models such as Star Schema.\nGain a complete architectural overview of how ETL works with a Data Warehouse.\nGet an overview of popular ETL tools used in the industry.\nBuild a real-time ETL project from scratch using Pentaho Data Integration (PDI) tool.\nUnderstand the scope of ETL testing at each layer of the pipeline with practical examples.\nLearn how to build ETL test scenarios and validate them using SQL queries.\nWrite test cases for advanced concepts such as Slowly Changing Dimensions (SCDs).\nExplore Cloud Data Warehouses and how ETL/ELT fits in modern data stacks.\nUnderstand the differences between ETL vs ELT and where each is applicable.\nDiscover the critical role of ETL data quality testing in training Large Language Models (LLMs) — ensuring reliable and accurate data pipelines is a key foundation for any AI/ML system.\nLearn how bad data quality can lead to hallucinations, bias, and inaccurate results in LLM outputs, and why robust ETL testing is crucial before model ingestion.\nPrerequisites:\nBasic knowledge of SQL (Insert, Update, Delete).\nCore SQL concepts such as Joins, Group By, and Subqueries are used frequently in ETL test scenarios.\nA refresher on these SQL topics is available in the last section of the course — recommended for those who need it.",
      "target_audience": [
        "Software Testers",
        "Data Engineers",
        "ETL Testers",
        "Business Intelligence (BI) Professionals"
      ]
    },
    {
      "title": "Selenium WebDriver with Java - Web Automation for Beginners",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-web-automation-testing/",
      "bio": "2025 - Master Web Browser Automation Testing Scenarios from Basics to Advanced with Latest Selenium 4 WebDriver Java",
      "objectives": [
        "Selenium WebDriver with Java - Basics to Advanced concepts from Scratch",
        "Latest Selenium 4 version used for the Java Automation Coding examples",
        "Learn Java fundamentals from scratch needed to get started with Selenium",
        "Chrome Devtools Protocol (CDP) Features in Latest Selenium 4",
        "Selenium Grid 4 - practical demonstration of Traditional VMs and Docker Modes",
        "Working with all kinds of Web Elements automation on Real world usecases",
        "Important concepts like Shadow DOM, SVG Elements, Broken Links and Images, Pseudo Elements and more",
        "16 different Selenium Exceptions with practical demonstration on Real websites",
        "End to End Testing scenarios, Interview perspective topics on Selenium WebDriver automation practice"
      ],
      "course_content": {
        "Welcome to the Selenium WebDriver Java course": [
          "Introduction - Welcome to the course",
          "Important Note about the Course Q&A and Feedback"
        ],
        "Introduction to the Selenium Automation": [
          "Types of Software Applications",
          "Introduction to Selenium Suite tools",
          "History of Selenium",
          "Advantages and Disadvantages of Selenium"
        ],
        "Selenium versions and Checking for Latest Information": [
          "Selenium Versions Released so far",
          "Checking Official LinkedIn feed and Selenium Blog for latest updates",
          "Official GitHub Repo and Supported Browsers, Operating Systems",
          "Quick Note about Course content"
        ],
        "Software Setup for Selenium WebDriver Java coding": [
          "Java 21 - JDK Software Installation",
          "Eclipse IDE - Software Installation",
          "Project Practice Code and Course Notes"
        ],
        "Java Fundamentals - Getting Started with Java": [
          "Create Java Project and Write First Program",
          "System.out.println() and System.out.print() methods Hands-on practice",
          "Basic Syntax Concepts in Java Programming"
        ],
        "Java Fundamentals - Packages, Adding Comments": [
          "Packages in Java - User Defined and Inbuilt Packages",
          "Adding Comments in Java - Single Line and Multi Line"
        ],
        "Java Fundamentals - Variables and Primitive Data Types": [
          "Primitive Data Types and Non-Primitive Data Types",
          "Integer Values - byte, short, int, long - Primitive datatypes",
          "Decimal Values - float, double - Primitive datatypes",
          "Single Character and Boolean values"
        ],
        "Java Fundamentals - Classes, Objects, Variables, Methods": [
          "Classes and Objects - Introduction",
          "Java Program for Class and Objects",
          "Java Program for Class and Objects in different Java class files",
          "Methods Concepts - Java Program for Input Parameters and Return Type"
        ],
        "Java Fundamentals - Constructors, this and static keywords": [
          "Constructors in Java - Default and Parameterized",
          "this keyword in Java - Coding Example",
          "static keyword in Java - Coding Example"
        ],
        "Getting Started with Selenium Java Coding": [
          "Setup Maven Project and Selenium Java jar Dependencies",
          "Write your First Selenium Java Code to Launch Chrome Browser",
          "Java Code which Launches new Chrome Browser",
          "Difference between navigate and get methods",
          "Navigate methods (back, forward, refresh) - Coding Example with Three Websites",
          "Getting Latest Selenium Java dependencies version in Maven Project",
          "Ask questions about Selenium WebDriver Java with AI Assistant"
        ]
      },
      "requirements": [
        "Java Fundamentals are covered to get started with Selenium Automation from scratch",
        "You will learn the complete Selenium WebDriver Java from scratch"
      ],
      "description": "Selenium WebDriver with Java - Web Automation for Beginners is the course designed for Software Test Engineers looking to upgrade their skills in Practical Web Automation Testing with Selenium 4 latest version.\nThe Java Fundamentals needed to understand the Selenium WebDriver Java methods are covered\nSoftware Installation and Java concepts - 10 hours of detailed video sections are added\n\n\nAll required topics to master the Selenium WebDriver concepts are covered in the course\nGet Started with Selenium Java Automation\n--> Launching different browsers with Selenium Java code\n--> Navigate vs Get method differences\n--> findElement and findElements coding Examples\nSelenium WebDriver Hierarchy\n--> Understand the Hierarchy of Different Interfaces and Browser Driver Classes with the WebDriver Interface\nSelenium Manager - Automated Driver Management\n--> Practical demonstration of the Automated Driver binaries downloads from Selenium 4.6.0 onwards\nSelenium Manager - Automated Browser Management\n--> Practical demonstration of the Automated Browser downloads for the Chrome and Firefox browsers\nSelenium WebDriver Architecture\n--> Understand the actual working of the W3C Protocol for the Selenium 4 WebDriver Architecture\nSelenium WebElement Hierarchy\n--> Understand the Hierarchy of the WebElement Interface with different Parent Interfaces\nLocators in Selenium\n--> Detailed Examples on all different Locators in Selenium\n--> Id, Name, ClassName, TagName, LinkText, PartialLinkText, CSS Selector, XPath\nRelative Locators in Selenium 4 - Latest feature\n--> Previously called as Friendly Locators\n--> Coding Examples to use methods - leftOf(), rightOf(), above(), below(), near()\nWriting Complex XPath for Interview Perspective\n--> Multiple Dynamic XPath examples with different Real time E-commerce websites\n--> Using XPath Axes methods for solving Interview perspective and practical Web Elements\nHandling Frames\n--> Switching to Frames - ID, Name, Index, WebElement\n--> Working with Nested Frames\n--> Switching to Parent Frame and Main web page\nHandling Windows\n--> Switching to other Open windows using Window Handles\n--> Switching to New Window (Window Type - TAB/WINDOW - Latest Selenium 4 feature)\nHandling Alerts\n--> JavaScript Alerts Handling - Normal, Confirmation, Prompt Alerts\n--> Basic Authentication Popup Handling\nHandling Dropdowns\n--> Single Select Dropdown\n--> Multi Select Dropdown\n--> BootStrap Dropdown\n--> Hidden Dropdown\n--> Auto Suggestion Dropdown\nSynchronization - Wait methods in Selenium WebDriver\n--> ImplicitWait - using Duration class - Latest Selenium 4 feature\n--> ExplicitWait using WebDriverWait\n--> ExplicitWait using FluentWait\nPageLoadTimeout and ScriptTimeout concepts in Selenium WebDriver\n--> Learn how to use them with Coding Examples\nDefault Timeout values in Selenium WebDriver\n--> Debugging the WebDriver reference variable in Java Runtime\nPageLoadStrategy in Selenium WebDriver\n--> Three Page Loading Strategies - NORMAL, EAGER, NONE\nHandling Checkboxes\n--> Single Checkbox\n--> Multiple Checkboxes\nWebElement methods for checking Element presence, Enabled, Selected\n--> isDisplayed(), isEnabled(), isSelected()\nHandling Static Web Tables\n--> Multiple coding examples on Handling Static WebTable elements\nHandling Dynamic Pagination Web Tables\n--> Multiple coding examples on Handling Dynamic Pagination WebTable elements\nHandling Calendar - Date Pickers\n--> Different approaches to Handling Date Picker fields\nPerforming Mouse Actions\n--> Action Class for Mouse Operations\n--> moveToElement() for Mouse Hover\n--> contextClick() for Right Click\n--> doubleClick()\n--> dragAndDrop(source,target)\n--> dragAndDropBy() for Handling Sliders\nPerforming Keyboard Actions\n--> KeyDown(), KeyUp(), Keys\nJavascriptExecutor in Selenium\n--> performing click and sendKeys with JavascriptExecutor\n--> ElementClickInterceptedException and handling it with JavascriptExecutor\n--> Scrolling the Web Pages with JavascriptExecutor\nMaximize, Minimize and Set Zoom Level for the Web Browser\n--> Using inbuilt methods - maximize() and minimize\n--> Using JavascriptExecutor for setting the Zoom Level (Zoom In and Zoom Out)\nUpload Files in Selenium\n--> Single File Upload and Multiple Files Upload - using the sendKeys() method\nCapturing Screenshots\n--> Full Web Page screenshot using the driver reference variable\n--> Capture the WebElement screenshot - Latest Selenium 4 feature\nOptions Class - setting Browser profile - ChromeOptions, EdgeOptions, FirefoxOptions\n--> Headless Browser Testing\n--> Remove message Chrome is being controlled by automated test software\n--> SSL Certificate Handling\n--> Incognito Browser mode\nBroken Links and Broken Images\n--> Verifying the Broken Links and Broken Images using Java HTTP methods - Important for Interviews\nHandling Shadow DOM Elements\n--> Shadow Host, Shadow Root and Working with the Shadow Root elements\nHandling SVG Elements (Scalable Vector Graphics)\n--> Working with the SVG Elements - vector images - circle, rect, line, polygon, path, g\nHandling Pseudo Elements - CSS\n--> Using JavascriptExecutor code to Retrieve the Pseudo Element property values\nSelenium Java - Common Exceptions encountered\n--> 16 Different Exceptions are discussed in detail, with coding examples\n--> Handling the Exceptions using try, catch, finally blocks\nHandling Cookies in Selenium WebDriver\n--> Retrieve All Cookies, Retrieve Specific Cookie by Name\n--> Add Cookie to the Browser Session\n--> Delete Cookie Object, Delete Cookie by Name, Delete All Cookies\nEnd to End Testing with Real Time Websites - Interview Perspective Scenarios\n--> Practical Real Time Websites, Testing of E-Commerce Website\n--> Assignment with 3 additional scenarios for Interview preparation\nChrome DevTools Protocol in Selenium 4\n--> Understanding the Chrome Dev Tools Protocol Features\n--> Loading Insecure Websites using the Security domain in CDP\n--> Using the executeCdpCommand() method for passing CDP commands directly\n--> Retrieve Browser Console Logs using Log Domain in the CDP\n--> Network Domain - Offline Mode - Internet Disconnected scenario\n--> Network Domain - Online Mode - Internet Connected scenario\n--> Network Domain - Connection Type - Emulate network - 2G, 3G, 4G, Ethernet, WiFi, etc.\nSelenium Grid 4 - using Remote WebDriver - Traditional VMs Mode\n--> Selenium Grid 4 - Overview and Grid 4 vs Grid 3\n--> Different Modes in Selenium Grid 4\n--> Standalone Mode - Practical Coding Demo\n--> Hub and Nodes Mode - Practical Coding Demo\nSelenium Grid 4 - Docker Mode - Containers\n--> Selenium Grid 4- Docker Mode - Overview\n--> Docker Desktop Software Installation\n--> Docker Fundamentals - Image, Container, Hub, Commands\n--> Selenium Grid 4 - Practical Coding Demo - Standalone Docker Containers\n--> Docker Compose yml file - create Multiple Standalone Docker Containers\n--> Hub and Nodes using Docker Compose yml file\n--> Full Distributed Grid using Docker Compose yml file\n\n\nStudents have Lifetime access to the recordings from Udemy.\nCourse can be accessed from Desktop Web browser on Udemy website, Mobile Apps (Android and iOS).",
      "target_audience": [
        "Beginner Automation Test Engineers looking to learn Selenium Java Automation",
        "Automation Testing enthusiasts looking to learn Selenium WebDriver from scratch",
        "Manual Testers looking to switch into Automation Testing role",
        "QA Freshers looking to get into the Software Industry"
      ]
    },
    {
      "title": "Selenium Webdriver with PYTHON from Scratch + Frameworks",
      "url": "https://www.udemy.com/course/learn-selenium-automation-in-easy-python-language/",
      "bio": "Version 4 LATEST -Learn Python Programming & Selenium Python Automation from Basics to Advanced level + 5 LIVE Project",
      "objectives": [
        "At the end of this course, You will get complete knowledge on Python Automation using Selenium WebDriver",
        "You will be able to implement Python Test Automation Frameworks from Scratch with all latest Technlogies",
        "Complete Understanding of Python Basics with many practise Examples to gain a solid exposure",
        "You will be learning Python Unit Test Frameworks like PyTest which will helpful for Unit and Integration Testing",
        "Complete Understanding on Selenium Python API Methods with real time Scenarios on LIVE Websites",
        "\"Last but not least\" you can clear any Interview and can Lead Entire Selenium Python Projects from Design Stage"
      ],
      "course_content": {
        "Why Python Testing and its Importance?": [
          "Why Choose Selenium Python for Test Automation needs?",
          "Glance on Selenium Features"
        ],
        "Complete Installation Guide for Python and Selenium Learning": [
          "Video Player Setting tips for Best Experience in viewing course",
          "How to Install Python in your Machine?",
          "Important note for MAC Users",
          "What is PIP Client? -How to download Python Packages",
          "Python, Selenium Installation Guide Download",
          "Install PyCharm Editor and set Project Interpreter"
        ],
        "Getting Started with Python Basics": [
          "Where to download Code files of Python topics?",
          "Python hello world Program with Basics",
          "Datatypes in python and how to get the Type at run time",
          "Understand how to manipulate strings and print them.",
          "Variable Assignment and Types"
        ],
        "Understanding Python Datatypes and Variables": [
          "List Datatype and its operations to manipulate",
          "Tuple and Dictionary Data types in Python with examples",
          "How to Create Dictionaries at run time and add data into it",
          "Working with Lists",
          "Exploring Tuples",
          "Understanding Dictionaries"
        ],
        "Program Flow Control in Python": [
          "If else condition in python with working examples",
          "How loops work in Python and importance of code idendation",
          "Programming examples using for loop - 1",
          "Programming examples using While loop - 2",
          "What are functions? How to use them in Python",
          "Practice using if-else statements.",
          "Number Comparison",
          "Doubling Numbers with For Loop",
          "Customized Greeting Based on Time of Day"
        ],
        "Understand Object Oriented Principles of Python": [
          "OOPS Principles : Classes and objects in Python",
          "What is Constructor and its role in Object oriented programming Rec-10-19-5",
          "Inheritance concepts with examples in Python Rec 10-19-19 6",
          "Strings and its functions in python",
          "Code files download",
          "Understanding class creation in Python",
          "Create a Greeting function",
          "Average Calculator"
        ],
        "Read & Write to Files in Python": [
          "How to read text file content using Python",
          "Importance of readLine and readLines Methods in python",
          "Writing Data into File using Python",
          "Read and Print File Contents",
          "Count Lines in a File"
        ],
        "Exception Handling Mechanism in Python": [
          "How to raise exception in Python?",
          "Try Catch Mechanism using Python",
          "Usage of Finally Keyword with exceptions",
          "Shopping Cart Validation",
          "Handle Tuple modification exception with Try Catch"
        ],
        "Selenium Python package Setup with different browsers execution": [
          "Where to download code files?",
          "Invoking Chrome Browser and understand the importance of Service class",
          "Running Tests in Chrome, Firefox, Edge on basic WebDriver Methods",
          "code download"
        ],
        "Different Types of Locators in WebDriver API with examples": [
          "Inspecting HTML to identify attributes of element",
          "Introduction to CSS Selector and name locators with example",
          "Finding Elements with Xpath and Css Using Chropath Plugin",
          "Extracting Text from webPage with Validation Assertions"
        ]
      },
      "requirements": [
        "******You need NOT have Python coding experience to start this course********* Even non Programming candidates can follow this course comfortably",
        "Though these are online Lectures.You will have Life Time instructor support.You can contact me any time for your Queries,Will respond back with in 12 hours",
        "All Installation setup including Python basics is taken care as part of course",
        "Theoretical Material,Code dump are available for download",
        "Join in our Selenium Training community where 3 Million Students Learning Together which you will not see in any other Selenium courses on Udemy"
      ],
      "description": "**Learn Everything You Need to Know About Python Selenium Automation including Framework Even If You've Never Programmed Before in Python**\nDo you know? Python is the popular choice for implementing Artificial Intelligence and Web Security in any Applications .  This made QA industry to shift its focus to Python for implementing Test Automation to support AI Projects.\nSo this course will help you in making you master in  Python  Basics  + Selenium Python + Pytest Unit Testing Framework +Page object Design Patterns + Excel Data driven Frameworks + Log4J Logging +Cross browser testing + Interview Prep +GitHUB +LifeTime Query Support\nOn course completion You will be Mastered in Selenium Automation Testing  with Python and can implement Successfully it in your work place or will surely land on High Paying Job\n\nSo what makes this course Unique in the Market?\nWe assume that students have no experience in automation / coding and start every topic from scratch and basics.\nExamples are taken from  REAL TIME HOSTED WEB APPLICATIONS  to understand how different components can be automated.\nTopics includes:\n\nPython Basics\nPython Programming examples\nPython Data types\nPython OOPS Examples\nSelenium Locators\nSelenium Multi Browser Execution\nPython Selenium API Methods\nAdvanced Selenium User interactions\nEnd to end Practise Examples to Automate\nPyTest - Unit Testing Framework\nPyTest Fixtures\nPyTest Parameterization\nPyTest Annotations, Command Line Arguments\nPython PyTest Reports\nLog4J Logging Python\nPage object Model Design Pattern\nEnd to end Framework design from scratch\nPython Data driven Framework using Excel\nPyxl Examples with Selenium Integration\nJenkins CI Integration\nGITHUB Version control Management\nAll the Best! Happy Testing :)",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Freshers/Graudates who want to kick start their Carrier in IT World"
      ]
    },
    {
      "title": "Test Managment Tool HP ALM - QC (Quality Center) for testers",
      "url": "https://www.udemy.com/course/complete-guide-to-hp-alm-quality-center/",
      "bio": "Best course on Hp Alm - QC(Qulaity center ), best for manual tesetes , A mandatory tool for manual tesers Hp alm , QC",
      "objectives": [
        "learn architecture of ALM",
        "This course will give idea on with alm admin",
        "This course will help you to understand all futures of ALM CLIENT",
        "Learn how to write testcaes AND TEST SCRIPTS in alm",
        "This course will give you complete idea on , Requirement, planning , Testing , defects tabs"
      ],
      "course_content": {
        "Introduction To ALM/QC": [
          "Introduction To ALM/QC",
          "What is Alm ? Introduction To Alm",
          "History of ALM",
          "QA Testers Activites in Alm & Understanding ALM Site admin and ALM Client"
        ],
        "STEP by STEP guide To Installation Of ALM (Saas cloud and Full Installation )": [
          "Understanding ALM (Saas )Cloud and Full Installation processes",
          "Alm Cloud (Saas ) Registration Processes",
          "Understanding ALM full installation and Configuring Virtualbox (Optional video)",
          "Installing windows server os in virtual box (part 2)",
          "Downloading Required Softwares (sql server +sql management studio + ALM)",
          "Important steps to download ALM Software setup file",
          "Installing SQL server and Management Studio",
          "Installation of ALM",
          "Handling: alm server doesn't support this database version"
        ],
        "working with ALM/QC ADMIN": [
          "ALM - QC ADMIN"
        ],
        "Introduction to Tabs / Options in ALM": [
          "Introduction Tabs / Options in ALM"
        ],
        "Requirments": [
          "understanding and planning Requirements",
          "creating Requirments"
        ],
        "Testing module /Tab": [
          "WRITING TESTING CASES IN ALM/QC",
          "Exporting Testcases from Excel to ALM",
          "Exporting Testcases from Excel to ALM - Part2",
          "Mapping Functionality To Cycles",
          "Creating UFT script/ TEST From ALM",
          "saving UFT Test In ALM",
          "Mapping TestCase To Requirments",
          "Creating Testset And Executing Manual Testcase",
          "Reporting Defects from manual Test Runner [Testplan]",
          "Executing UFT Test"
        ],
        "DEFECTS": [
          "Addind Qtp/Uft's Defects To ALM"
        ],
        "Resources": [
          "Adding Shared object repository file to resources in ALM"
        ],
        "Overview of Release and Creating cycles (Additional Session)": [
          "Overview of Release and Creating cycles"
        ],
        "overview of topics": [
          "overview of topics"
        ]
      },
      "requirements": [
        "Little idea on testing processes is required but not mandatory",
        "knowledge on manual testing is advantage but not mandatory",
        "Best fo QA testers who want to learn ALM as reporting and management tool"
      ],
      "description": "Kick start ur career in manual testing  WITH bug reporting tool ALM/QC\nNote: This course is Completely developed for QA tester ,\n\nbest ever course on ALM\nwe have covered almost every topic of alm\nunderstanding ALM Admin\nWriting testcases in ALM\nExporting testcases from EXCEL TO ALM\nCreating UFT script in ALM\nBATCH\nEXECUTING TESTCASES AND TEST SCRIPTS\n\nconnecting from qtp/uft to qc/alm\n\nmapping requirements\n\nNote: Installation of ALM is not so easy and its not a general installation to run a setup. A lot of configuration needed so i have covered lot of videos on installation\n\nALM /QC is very famous  bug reporting and test management tool by HP lot of manual testers use this tool in testing processes..\nby the end of the course you will be getting complete idea on ALM / QC and this way of use..\nALM is one of the best and excellent bug reporting tools, older version of ALM is know as QC  which was introduced by hp , ALM IS INVOLVED IN  many manual and automation testing projects , one of the best management tool available in market\nHaving a idea on qc/alm will increase changes of clearing interview and more over learn IF YOU UNDERSTAND ALM all the other available tools in market can be learn easily",
      "target_audience": [
        "This course is for who want to build carrer in manual testing",
        "Best fo QA testers who want to learn ALM as reporting and managment tool",
        "This course is for who want to learn qc/ALM from scratch",
        "This course MAJORLY concentrated on ALM-CLIENT-DESKTOP"
      ]
    },
    {
      "title": "Playwright: Web Automation Testing From Zero to Hero",
      "url": "https://www.udemy.com/course/playwright-from-zero-to-hero/",
      "bio": "Complete Playwright test automation course with TypeScript. Best practices, API testing, Page Objects, Advanced features",
      "objectives": [
        "JavaScript fundamentals for beginners needed to automate in the Playwright",
        "How to install Playwright from scratch run and debug tests, analyze reports and test results",
        "How to locate any web element on the page following Playwright best practices",
        "How to interact with different UI components such as: input fields, radio buttons, check boxes, lists, tooltips, date pickers, web tables, sliders, iFrames",
        "What is Page Object Model and how to organize test code using Page Objects",
        "How to work with APIs in Playwright: API mocking, API requests, API call intercept, shared authentication and API authentication",
        "Advanced topics: global setup and teardown, visual testing, mobile device emulation, fixtures, environment variables, test execution in Docker container"
      ],
      "course_content": {
        "Preparation": [
          "Introduction",
          "Playwright vs Cypress",
          "Configuration of Development Environment",
          "Clone Test Application"
        ],
        "JavaScript Fundamentals": [
          "Module Overview",
          "Hello World",
          "Variables, Constants and Data Types",
          "Concatenation and Interpolation",
          "Objects and Arrays",
          "Relational and Equality Operators",
          "Logical Operators",
          "Conditional Statements",
          "Loops",
          "Functions",
          "Class and Methods",
          "TypeScript vs JavaScript",
          "JavaScript practice exercise"
        ],
        "Playwright Hands-On Overview": [
          "Playwright Installation",
          "Test Execution with CLI",
          "Test Execution with UI",
          "Trace View and Debug",
          "Tests Structure",
          "Hooks and Flow Control",
          "Knowledge check"
        ],
        "Interaction with Web Elements": [
          "DOM Terminology",
          "Locator Syntax Rules",
          "User-Facing Locators",
          "Child Elements",
          "Parent Elements",
          "Reusing Locators",
          "Extracting Values",
          "Assertions",
          "Auto-Waiting",
          "Timeouts",
          "Knowledge check"
        ],
        "UI Components": [
          "Input Fields",
          "Radio Buttons",
          "Checkboxes",
          "Lists and Dropdowns",
          "Tooltips",
          "Dialog Boxes",
          "Web Tables (Part 1)",
          "Web Tables (Part 2)",
          "Date Picker (Part 1)",
          "Date Picker (Part 2)",
          "Sliders",
          "Drag & Drop with iFrames"
        ],
        "Page Object Model": [
          "What Is Page Objects",
          "First Page Object",
          "Navigation Page Object",
          "Locators in Page Objects",
          "Parametrized Methods",
          "Date Picker Page Object",
          "Page Objects Manager",
          "Page Objects Helper Base"
        ],
        "Working with APIs": [
          "What is API",
          "Setup New Project",
          "Mocking API",
          "Modify API Response",
          "Perform API Request",
          "Intercept Browser API Response",
          "Sharing Authentication State",
          "API Authentication"
        ],
        "Advanced": [
          "NPM Scripts and CLI Commands",
          "Test Data Generator",
          "Test Retries",
          "Parallel Execution",
          "Screenshots and Videos",
          "Environment Variables",
          "Configuration File",
          "Fixtures",
          "Project Setup and Teardown",
          "Global Setup and Teardown",
          "Test Tags",
          "Mobile Device Emulator",
          "Reporting",
          "Visual Testing",
          "Playwright with Docker Container",
          "GitHub Actions and Argos CI"
        ],
        "Final Words": [
          "Final Words"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is required. JavaScript Fundamentals section is included in the class.",
        "Ask me a question in Q&A section of the class or send me a message if something is not clear or does not work."
      ],
      "description": "Playwright - test automation framework developed by Microsoft. Modern, highly customizable and reliable.\nThis class covers all fundamental concepts of the framework. We begin from scratch, starting with setup and configuration and then a hands-on framework overview to familiarize yourself with the environment. Then from lesson to lesson, we slowly increase complexity. All lessons have a logical progression and are connected. The next lesson in the section builds up a new concept on top of what was learned in the previous lesson. This is also related to the code demonstrated in the class. We will have two test applications, and slowly over the course will add more and more code uncovering new topics.\nHow to follow the class\nWatch all lessons in the order they have been published. Write the code from the class along with me. If needed, pause the video to complete the code. Practicing - is the best way to learn. Also, I would recommend watching the lessons in full-screen mode because sometimes the text on the screen can be small and hard to read. If you skip lessons or watch them not in order, be ready that you may have a feeling of a knowledge gap, or that something is not clear.\nWhat you will learn:\nHow to install Playwright from scratch as a new independent project or add to an existing front-end application project.\nJavaScript Fundamentals in case you are a beginner to programming.\nHow to run tests using the command line interface, UI mode, Playwright extension, and debug tests\nHow to organize tests, structure tests, use test hooks\nHTML terminology, locator syntax rules, and Playwright best practices to locate web elements.\nDifferent types of assertions, how auto-waiting concept works, and how to configure different timeouts.\nHow to work with different UI components, such as input fields, radio buttons, checkboxes, lists, tooltips, dialog boxes, date pickers, web tables, iFrames, sliders, drag and drop.\nWhat is the Page Object Model. How to organize test framework code with Page Objects. Recommended architecture for Page Object model with Playwright\nHow to work with APIs: API mocking, API requests, intercept API calls, shared storage state, API authentication\nMultiple advanced topics: fixtures, global setup and teardown, parallel execution, test tags, test retries, visual testing, mobile device emulation, reporters, environment variables, and test execution in Docker container.\nBy the end of the class, you'll be familiar with all important Playwright concepts to be able to automate pretty much any web application.",
      "target_audience": [
        "Quality Engineers who willing to pick up a first test automation framework.",
        "SDETs and Automation Engineers who is transitioning from other frameworks to the Playwright.",
        "Developers who what quickly understand Playwright best practices and framework capabilities",
        "Playwright beginners to learn this tool faster"
      ]
    },
    {
      "title": "Mobile Automation with Appium 2.0 and WebdriverIO - 2024",
      "url": "https://www.udemy.com/course/appium-webdriverio-mobile-automation/",
      "bio": "The only course you need to learn Mobile Automation with JavaScript using WebdriverIO & Appium",
      "objectives": [
        "Mobile Automation with JavaScript",
        "Mobile Automation using WebdriverIO & Appium",
        "Android & iOS application automation",
        "Building & Optimizing test framework",
        "BrowserStack Integration",
        "GitHub Action CI Integration"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What is Appium ?",
          "What is WebdriverIO ?",
          "Getting the most out of this course",
          "Before you get started",
          "Join the community!",
          "Q&A template",
          "Code Access"
        ],
        "Setup & Installation (MacOS)": [
          "Quick Note - Node versions compatibility",
          "NodeJS Setup",
          "Java JDK Setup",
          "Android Studio Setup",
          "Setup Android Emulator",
          "Quick note: Appium Inspector Setup",
          "Appium Inspector Installation",
          "Appium 2.0 Update",
          "Appium Installation",
          "Appium Installation Error",
          "Appium Drivers Installation"
        ],
        "Setup & Installation (Windows)": [
          "Quick Note: Node versions compatibility",
          "NodeJS Setup",
          "Java JDK Setup",
          "Android Studio Setup",
          "Setup Android Emulator",
          "Quick Note: Appium Inspector Setup",
          "Appium Inspector Setup",
          "Appium Installation",
          "Appium Drivers Installation"
        ],
        "WebdriverIO Setup & Configuration (Android)": [
          "Code Access",
          "WebdriverIO Setup",
          "WebdriverIO Config Overview",
          "WebdriverIO Capabilities Setup",
          "Errors when running test",
          "WebdrvierIO Run Tests",
          "Setup Emulator & Appium Inspector for Testing",
          "Quick Note",
          "WebdriverIO Setup (OLD v8)",
          "OLD - WebdriverIO Setup",
          "OLD - Install v7 Packages",
          "OLD - WebdriverIO Configuration",
          "OLD - Appium Port Connection Issue (4723)"
        ],
        "Android - Finding Elements": [
          "Find element by Accessibility id",
          "Reviewing Test Run Logs",
          "Find element by class name",
          "Find element by xpath",
          "Find element by Android UiAutomator",
          "Working with multiple elements",
          "Exercise - Working with text input field",
          "Solution - Working with text input field",
          "Finding Elements"
        ],
        "Android - Native Features": [
          "Quick Note",
          "Package & Activity",
          "Working with Dialog / Alert",
          "Vertical Scrolling",
          "Horizontal Scrolling",
          "Exercise - Scrolling",
          "Solution - Scrolling"
        ],
        "Android Real App": [
          "Download & Setup App",
          "Handle Permissions",
          "Skip Tutorial Test",
          "Add Note Tests",
          "Exercise: Delete Note",
          "Solution: Delete Note"
        ],
        "Page Object Model (Android)": [
          "What is Page Object Model?",
          "Setup Screen Objects (Add Note)",
          "Exercise: Delete Note Screen Objects",
          "Solution: Delete Note Screen Object",
          "Leave a review!"
        ],
        "iOS Setup & Configuration": [
          "Xcode Setup",
          "Install & Verify Dependencies",
          "WebdriverIO Config",
          "Connect Simulator with Appium Inspector"
        ],
        "iOS - Finding Elements": [
          "Find element by Accessibility Id",
          "Find element by Tag Name",
          "Find element by xpath",
          "Find element by class chain",
          "Find element by predicate strings",
          "Exercise: Search Input Field",
          "Solution: Search Input Field",
          "Quiz - Finding Elements (iOS)"
        ]
      },
      "requirements": [
        "Basic familiarity with JavaScript",
        "Basic familiarity with WebdriverIO",
        "High level understanding of Mobile Automation"
      ],
      "description": "Development of mobile apps is increasing rapidly year by year.  As the development increases, the demand of putting quality apps out there increases as well. After this course, with the help of mobile automation, you will be able to help companies launch top quality applications without worrying about any regression issues.\nThis course will teach you the latest version of Appium (2.0) and WebdriverIO (v8).  Setup will cover both macOS and Windows machine from scratch and will also cover how to setup tests for both Android & iOS.\nAlong the way, I will teach you all the best practices that will put on the path of becoming one of the Top Automation Engineer.\nHere's what we will be covering in this course:\nAppium & WebdriverIO Introduction\nSetup & Installation\nDifferent strategies to find elements for both iOS & Android apps\nWorking with native features\nPracticing skills on a real-world application\nPage Object Model setup\nBuilding test framework\nOptimizing framework\nBrowserStack integration to run tests on cloud server\nGitHub Action for CI integration\nand much more...\nAll of the topics are taught with real examples. The course will include exercises & quizzes that will challenge you & allow you to practice what you learned.\nThis course will get constantly updated so that you no longer have to worry about outdated content.",
      "target_audience": [
        "Devs/QAs looking to learn Mobile Automation",
        "QA engineers looking to switch from Web automation to Mobile Automation",
        "SDETs looking to expand their skillset with Mobile Automation using JavaScript"
      ]
    },
    {
      "title": "HP-UFT 12.0 Automation",
      "url": "https://www.udemy.com/course/hp-uft-120-automation/",
      "bio": "Learn the fundamentals of HP-UFT Functional Automation",
      "objectives": [
        "Develop Automated Test Cases using HP-UFT"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer & Internet Skills",
        "Basic Software Testing Skills"
      ],
      "description": "The market out there has a plethora of automation tools, and HP-UFT had definitely captured a good portion. The origins go back to WinRunner from Mercury, Inc. HP acquired Mercury, Inc. and later rename the product to HP-QTP. In 2012, the product was renamed to HP-UFT (Unified Functional Testing).\nHP-UFT allows you to automate web-based, and also the windows based application with minimum effort.\nHP-UFT's GUI interface is user-friendly and allows you to switch between simple-view and expert-view.\nSince HP-UFT uses VB scripting as a programming language, the sky is the limit!!\nThe concepts in this course aids in learning other automation tools that are key-word driven (Eg. Test Complete).",
      "target_audience": [
        "Anyone who is interested in learning HP-UFT Automation."
      ]
    },
    {
      "title": "Selenium IDE - Basic of Test Automation",
      "url": "https://www.udemy.com/course/selenium-ide-basic-of-test-automation/",
      "bio": "Learn all about test automation in Selenium IDE + element locating strategies used in Selenium WebDriver.",
      "objectives": [
        "General principles of using Selenium IDE",
        "Learning the most important commands of Selenium IDE",
        "Creating automated test cases by recording your actions in the browser with hands-on exercises",
        "Creating automated test cases manually with hands-on exercises",
        "Basic developer tools skills",
        "Learn various webpage element locating strategies to help do better test automation",
        "Learn the basic locators (Id, name, linkText)",
        "Learn advanced locator Xpath",
        "Learn CSS Selector"
      ],
      "course_content": {
        "Introduction": [
          "Study plan",
          "Q&A",
          "Installation of Selenium IDE",
          "Introduction to Selenium IDE interface"
        ],
        "First script in Selenium IDE": [
          "Udemy early review",
          "Introduction to the section",
          "First script in Selenium IDE - part 1",
          "First script in Selenium IDE - part 2",
          "First script in Selenium IDE - part 3",
          "Introduction to selenese commands",
          "Resources for exercises and solutions",
          "Exercise 1 - footer verification",
          "Solution for exercise 1",
          "Exercise 2 - login and logout",
          "Solution for exercise 2",
          "How to handle drop down menu",
          "Exercise 3 - Make an appointment",
          "Solution for exercise 3",
          "Knowledge test"
        ],
        "Locators": [
          "Decommissioned automationpractice.com site",
          "Introduction to the section",
          "Basic locators",
          "Xpath - Introduction",
          "Xpath - Examples",
          "CSS selectors - Introduction",
          "CSS selectors - Examples",
          "Running a script on a subpage",
          "Web Elements locating strategy"
        ]
      },
      "requirements": [
        "Basic knowledge about software usage",
        "Basic HTML / CSS knowledge can be useful but is not necessary",
        "Willingness to learn and solve tasks"
      ],
      "description": "In my conversations with people who were thinking about test automation careers several needs kept coming back quite frequently, such as\nI am wondering if test automation is something for me,\nI am looking for a course with more focus on practical exercises,\nI do not have so much time. I need something short and condensed instead of multi-hour waffling on a single example.\nI have created this course with the hope that it will answer those needs.\n\n\nSelenium IDE is the best first step in test automation.\nIf you have very basic programming skills or don’t have any, you can successfully complete the course and understand the most important concepts behind test automation.\nUnlike most Selenium IDE courses out there you will actually learn how to automate tests on real-life examples.\nYou will first start by learning the basics of creating a test script and assertion techniques, and the course evolves from there. I use easy to understand examples to simplify even the most difficult concepts.\nThe course will help you understand:\nHow Software Tester work looks like,\nWhat exactly test automation is,\nWhy locators in test automation are so important.\n\n\nBecome an expert in locating elements strategies!\nThe underlying motivation for the course is to ensure that you'll gain solid skills in locating elements on the web page. 50% of success in automation are good chosen locators. This is universal knowledge that will be useful in other more advanced automation tools, such as Selenium Webdriver.\n\n\nAfter taking this course you will be able to easily write automated tests in Selenium IDE along with applying good practices. Also, you will know if working as a Software Tester is for you.\n\n\nCondensed and practical knowledge about test automation is now available for you.\nSubscribe now!",
      "target_audience": [
        "Want to know what test automation is",
        "Want to take the first steps in test automation",
        "Want to become a Software Tester",
        "Want to create automated test cases"
      ]
    },
    {
      "title": "ISTQB® Mobile Application Testing - 2025",
      "url": "https://www.udemy.com/course/istqb-mobile-application-testing/",
      "bio": "Become a leader in mobile application testing by earning the ISTQB® Certified Tester Mobile Application Testing (CT-MAT)",
      "objectives": [
        "Understand and review business and technology drivers for mobile apps in order to create a test strategy",
        "Identify and understand the key challenges, risks and expectations associated with testing a mobile application",
        "Apply test types and levels specific to mobile applications",
        "Apply common test types, such as those mentioned in the Certified Tester Foundation Level syllabus in the mobile specific context",
        "Carry out the activities required specifically for mobile application testing as part of the main activities of the ISTQB® test process",
        "Identify and use suitable environments and appropriate tools for mobile application testing",
        "Understand methods and tools specifically to support mobile application test automation"
      ],
      "course_content": {
        "Mobile World - Business and Technology Drivers": [
          "Introduction to Mobile World - Business and Technology Drivers",
          "Mobile Analytics Data",
          "Business Models for Mobile Apps",
          "Mobile Device Types",
          "Types of Mobile Applications",
          "Client-side vs Architecture-side",
          "Mobile Application Architecture",
          "Test Strategy for Mobile Apps",
          "Challenges of Mobile Application Testing",
          "Risks in Mobile Application Testing",
          "Q&A: Mobile World - Business and Technology Drivers",
          "Quiz 1: Mobile World - Business and Technology Drivers",
          "Before Booking the Exam"
        ],
        "Mobile Application Test Types": [
          "Introduction to Mobile Application Test Types",
          "Testing for Device Features",
          "Testing for Different Displays",
          "Testing for Device Temperature",
          "Testing for Device Input Sensors",
          "Testing Various Input Methods",
          "Testing for Screen Orientation Change",
          "Testing for Typical Interrupts",
          "Testing for Access Permissions to Device Features",
          "Testing for Power Consumption and State",
          "Testing for App Interactions with Device Software",
          "Testing for Notifications",
          "Testing for Quick-access Links",
          "Testing for User Preferences Provided by the Operating System",
          "Testing for Different Types of Apps",
          "Testing for Interoperability with Multiple Platforms & Operating System Versions",
          "Testing for Interoperability and Co-existence with other Apps on the Device",
          "Testing for Various Connectivity Methods",
          "Q&A: Mobile Application Test Types",
          "Quiz 2: Mobile Application Test Types"
        ],
        "Common Test Types & Test Process for Mobile Applications": [
          "Introduction to Common Test Types & Test Process for Mobile Applications",
          "Installability Testing",
          "Stress Testing",
          "Security Testing",
          "Performance Testing",
          "Usability Testing",
          "Database Testing",
          "Globalization and Localization Testing",
          "Accessibility Testing",
          "Additional Test Levels applicable for Mobile Applications",
          "Field Testing",
          "Testing for Application Store Approval and Post-release Testing",
          "Personas and Mnemonics: Experience-based Testing Techniques",
          "Heuristics: Experience-based Testing Techniques",
          "Tours: Experience-based Testing Techniques",
          "Session-Based Test Management (SBTM): Experience-based Testing Techniques",
          "Test Process",
          "Test Approaches",
          "Q&A: Common Test Types & Test Process for Mobile Applications",
          "Quiz 3: Common Test Types & Test Process for Mobile Applications"
        ],
        "Mobile Application Platforms, Tools & Environments": [
          "Introduction to Mobile Application Platforms, Tools, and Environments",
          "Development Platforms for Mobile Applications",
          "Common Development Platform Tools",
          "Emulators & Simulators",
          "Overview of Emulators & Simulators",
          "Using Emulators and Simulators",
          "Setting up a Test Lab",
          "Q&A: Mobile Application Platforms, Tools, and Environments",
          "Quiz 4: Mobile Application Platforms, Tools & Environments"
        ],
        "Automating the Test Execution": [
          "Introduction to Automating the Test Execution",
          "Automation Approaches",
          "Automation Methods",
          "Automation Tools Evaluation",
          "Approaches for setting up an Automation Test Lab",
          "Q&A: Automating the Test Execution",
          "Quiz 5: Automating the Test Execution"
        ],
        "ISTQB Sample Exam": [
          "ISTQB Sample Exam"
        ],
        "Bonus Section": [
          "Basics of Testing Mobile Web Applications with Chrome Dev Tools",
          "Emulators vs Simulators",
          "Booking the Exam"
        ]
      },
      "requirements": [
        "No experience needed. You will learn everything you need to know."
      ],
      "description": "This course is designed for students who want to earn the ISTQB® Certified Tester Mobile Application Testing (CT-MAT) certification. Students will learn methods, techniques, and tools a professional may use to test mobile applications.\n\n\nBenefits of CT-MAT certification:\nAs a CT-MAT certified tester, you will be able to:\nUnderstand and review business and technology drivers for mobile apps in order to create a test strategy.\nIdentify and understand the key challenges, risks, and expectations associated with testing a mobile application.\nApply test types and levels specific to mobile applications.\nApply common test types, such as those mentioned in the ISTQB® Certified Tester Foundation Level syllabus 2018, in the mobile-specific context.\nCarry out the activities required specifically for mobile application testing as part of the main activities of the ISTQB® test process.\nIdentify and use suitable environments and appropriate tools for mobile application testing.\nUnderstand methods and tools specifically to support mobile application test automation.\nWhy you should take this course:\nThis course covers all the topics in the CT-MAT syllabus, including:\nUnderstanding Business and Technology Drivers in the mobile world.\nThe Mobile Application Test Types.\nThe Common Test Types and Test Process for Mobile Applications.\nMobile Application Platforms, Tools, and Environment.\nHow to automate test execution.\n\n\nThis course utilizes theory, practical examples, and practice questions to ensure you understand how to apply the concepts learned. In addition, the lessons include real-life scenarios from the instructor's years of experience testing mobile applications.\nAfter completing this course, you can take the ISTQB CTL-MAT exam and earn your certification.\nEnroll now and start your journey to becoming an ISTQB CTL-MAT certified tester!\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "This course is for anyone who wants to enhance their mobile application testing skills or earn the ISTQB Certified Tester Mobile Application Testing (CT-MAT) certification."
      ]
    },
    {
      "title": "Windows Desktop Applications Test Automation in WinAppDriver",
      "url": "https://www.udemy.com/course/appium-winappdriver-automation-testing/",
      "bio": "Windows Application Driver Automation Testing, Appium in C# dotnet, Beginner End-to-End Desktop Testing Tutorial",
      "objectives": [
        "Automated Testing & UI Automation with Appium, WinAppDriver in C# .Net on Windows 10",
        "Desktop automation for RPA and functional testing of Windows/WinForms applications with Appium WinAppDriver in C# .Net, Visual Studio",
        "Windows Automation Testing in Appium and WinAppDriver",
        "Windows Desktop Application Automation",
        "WinAppDriver UI Recorder Download, and Usage"
      ],
      "course_content": {
        "Introduction to UI Automation of Windows Applications with Appium WinAppDriver": [
          "Appium WinAppDriver Desktop Automation Testing with , C# .Net, Visual Studio",
          "Section Intro - Tool Installation for Appium WinAppDriver Tutorial on Windows",
          "Enable Windows 10 Developer Mode, tool installation overview for WinAppDriver",
          "How to Install Visual Studio Community Edition and C# .Net for Test Automation",
          "How to Install Node.Js and Appium on Windows 10 for WinAppDriver Tutorial",
          "How to Install Appium WinAppDriver on Windows 10 for UI Automation",
          "Visual Studio Project setup, launching an application with WinAppDriver & Appium",
          "Mandatory: Running WinAppDriver.exe",
          "How to Create Appium WinAppDriver UI Automation Script - Code Attached",
          "Demo: How to Run Appium WinAppDriver based UI Automation(RPA)",
          "Quiz 1 : Intro to UI Automation of Windows Applications with Appium WinAppDriver",
          "Launch Notepad with Appium and WinAppDriver Automation on Windows 10 Desktop",
          "Running WinAppDriver test automation via Appium, w/o starting WinAppDriver",
          "Section 1 Cheat Sheet and E-Book - Intro to Windows App Automation w/ Appium"
        ],
        "Locateing UI Elements for Test Automation in [Appium] WinAppDriver & UI Recorder": [
          "Section Intro - Finding & Manipulating UI Elements with [Appium] WinAppDriver",
          "WinAppDriver UI Recorder Object Inspector for Automated Testing",
          "Finding App User Mode ID to Launch UWP App w/ Appium WinAppDriver, Project Setup",
          "How to Click a Button with [Appium] WinAppDriver for automated testing in C#",
          "Reading Text from UI Element using AutomationID in [Appium] WinAppDriver",
          "SendKeys: Typing Text with [Appium] WinAppDriver for test automation",
          "ImplicitWait: Slowing UI Automation Scripts(also works for automated testing)",
          "Automated testing knowledge check about WinAppDriver UI Recorder and Locators",
          "Cheatsheet: Locate/Manipulate UI Elements with [Appium] WinAppDriver UIRecorder",
          "Launch \"Movies & TV\" Windows Application"
        ],
        "Appium Desktop Client UI Inspector": [
          "Introduction to Appium Desktop Client used for automation testing by QA Team",
          "Launching Appium Desktop Client UI Inspector for Windows Application Automation",
          "Appium desktop Client UI Inspector usage for Test Automation Explained",
          "How to use Desired Capabilities to affect Application Launch Behavior in WAD",
          "Important Reading: WinAppDriver FAQ",
          "Cheat Sheet Chapter 3"
        ],
        "Introduction to Visual Studio Unit Test Framework(MS Test) for Automated Testing": [
          "Section Intro - Visual Studio Unit Test Framework(MS Test) for Automated Testing",
          "Introduction to Ms Test Framework for Test Automation in [Appium]WinAppDriver",
          "Quizz Visual Studio Unit Test Framework(MS Test) for Automated Testing",
          "How to create and run your first automated test(for use w/ Appium WinAppDriver)",
          "How to see a Failed Test Automation Script",
          "How to use Assertions to Verify Automated Test Results With Assert Class",
          "Life cycle of an automated test in MsTest, Automated Testing Framework",
          "Demo: Life Cycle of an Automated Test in MsTest - Source Code Attached",
          "Cheat Sheet Chapter 4"
        ],
        "Using [Appium] WinAppDriver with MSTest Framework": [
          "Section Intro - Fusion: Combining [Appium]WinAppDriver & MsTest for Automation",
          "How to click an item in a ListView with Appium WinAppDriver Click, add new clock",
          "Using WebDriverWait .Until Method to Wait for UI Controls in C# Test Automation",
          "Debugging a test - FindElements* method call of Appium WinAppDriver",
          "How to Perform Right Click/ Context Click in Appium WinAppDriver & C# automation",
          "Using app Root Desktop session for selecting a context menu item in Appium",
          "Demo: Running the Clock Automated Test from Visual Studio Test Explorer",
          "Cheat-sheet Section 5"
        ],
        "Data Driven Automation Testing with Ms Test, Microsoft Excel, Appium WinAppDrive": [
          "Section Introduction - Data Driven Automation Testing w/ Ms Test, Excel, Appium",
          "Setting Up TestContext to Access Data in Visual Studio Unit Testing Framework",
          "Adding Support for Data Driven Testing to a Test for Sequential Data Variety",
          "Using Data Values from Test Context",
          "Demo: Run Data Driven Automated UI Test with Appium WinAppDriver & Visual Studio",
          "Cheat-Sheet Section 6"
        ],
        "WinForms Automation Testing with Appium WinAppDriver": [
          "Section Intro - Automated Testing WinForms Controls with Appium WinAppDriver",
          "Project Setup & UI Automation of Windows Checkbox with [Appium] WinAppDriver",
          "Appium 3 to Appium 4 project update for WinAppDriver Test Automation",
          "Click a Windows Radio Button & Get Selected Value in [Appium] WinAppDriver",
          "Inspecting a Windows Combo Box with [Appium] WinAppDriver for UI test automation",
          "Select an Item in a WIndows Combo Box with [Appium] WinAppDriver for automation",
          "Selecting Specific Item in a Combo Box's Children with [Appium] WinAppDriver",
          "Menu Item UI Automation, How to Click a menu item with [Appium] WinAppDriver",
          "Click a Menu Item Deep in Menu Hierarchy with Appium WinAppDriver for automation",
          "How to Access a DataGrid View using Appium WinAppDriver for test automation",
          "How to Click a Data Grid Child Control with Appium WinAppDriver UI Automation",
          "UI Automation of TreeView Control with Appium WinAppDriver, selecting tree nodes",
          "UI Automation of a Popup Dialog with Appium WinAppDriver",
          "Click an item in a ListBox by scrolling down to it with Appium WinAppDriver",
          "How to select multiple items in a ListBox using WinAppDriver",
          "Cheat Sheet WinForms Automation Testing with Appium WinAppDriver"
        ],
        "Appium WinAppDriver Test Automation General Scenarios": [
          "How to launch Ms Excel without splash screen, open a file with WinAppDriver",
          "Using ExcelDataReader to supply Excel test configuration data to automated test",
          "Read values from a DataSet for use in your Appium WinAppDriver test automation",
          "Using JSON data in automated testing in Appium WinAppDriver Automated Testing",
          "Cheat Sheet Chapter Appium WinAppDriver Test Automation General Scenarios"
        ],
        "Running Automated Tests Without Visual Studio, Generating Reports, Test Filters": [
          "Running Automated Tests Without Visual Studio, Generating Reports, Test Filters",
          "Running automated tests with vstest.console.exe, understanding test assemblies",
          "Generating an automated test run report in trx format for Appium WinAppDriver",
          "Using options \"Tests, TestFilter, lt\" to work with test automation and VSTest",
          "VStest.Console.exe command line help dump",
          "Cheat Sheet Run Automattion w/o Visual Studio, Generate trx Report, Test Filters",
          "Create a WinAppDriver Session from an Existing Application Window"
        ],
        "Bonus - Run Windows UI Automation on Azure DevOps Build Pipelines": [
          "Course Introduction: Run Windows UI Automation on Azure DevOps Build Pipelines",
          "Free e-book"
        ]
      },
      "requirements": [
        "A Windows 10 PC",
        "Basic understanding of programming in C# .Net",
        "Administrative access to install tools like Node, Appium, WinAppDriver, Visual Studio"
      ],
      "description": "Welcome to an excellent automation testing tutorial for beginners.\nWhat is WinAppDriver? Windows Application Driver (WinAppDriver) is a free test automation tool for testing Windows applications. Appium library uses WinAppDriver to perform automated operations on Windows desktop UI. Microsoft uses WinAppDriver for desktop application automation and functional software testing. This course is a WinAppDriver tutorial designed for everybody. Appium WinApp Driver is a free tool that provides APIs for many programming languages, including C# Dot Net, Java, and Python. The WinAppDriver is based on Appium, which was created by Selenium. Hence it is an industry-standard automation testing tool. Appium WinAppDriver is entirely compliant with WebDriver specifications(since it is based on Appium). Power Automate Desktop is not needed for Windows Application Driver test automation. Please note that WinAppDriver differs from AutoIt, and we don't need any familiarity with tools like AutoIt, Power Automate Desktop, PyWinAuto, or Robot Framework.\n\n\nWinAppDriver UI Recorder Download and Usage is also explained completely in this course.\nAutomated testing is very helpful for software testing teams. Automated testing makes your software development lifecycle (SDLC) agile and quick.\nIf you're searching for a web app driver, please note that WinAppDriver is a different topic, and the web application driver is also another. Mostly it is Chrome Driver or Firefox Driver.\nWindows Automation and Desktop Automation are at the heart of this course. In this course, you will learn about the free Windows application testing tool WinAppDriver and how to do Automation using WinAppDriver. You will also get example source code and step-by-step test automation examples. This course is about Appium WinAppDriver Windows Desktop UI Automation Testing in C# DotNet.\nAutomated testing is the way to go regarding desktop testing on Windows. Two popular tools for this are WinAppDriver and Appium. WinAppDriver is a Windows Application Driver that supports Selenium-like UI testing of Windows desktop applications. Appium, on the other hand, is a cross-platform mobile app automation tool that can also be used for desktop testing. WinAppDriver and Appium offer a powerful combination for automated desktop testing on Windows. These tools allow you to test your desktop applications for functionality, performance, and compatibility across different Windows versions and configurations. The best part is that you can automate the entire testing process, which saves you time and ensures consistent results.\nWinAppDriver provides the following things to facilitate Automated Testing:\nWinAppDriver is the software that can receive Appium commands and act as a UI remote control. WinAppDriver can perform different actions on the UI of a given Windows application for automation testing. It is possible to use WinAppDriver from any programming language, including but not limited to C#, Java, C++, JavaScript, and Python.\nWinAppDriver UI Recorder is a lightweight UI inspection tool that allows you to find various properties of Windows UI elements.\nAPI support for various programming languages, including C Sharp (C#), Java, Python, and many more, is available.\n\n\nMany students of this course have used it to learn Windows UI Automation concepts and perform in Python and Java automation. In addition, they found it to be a great WinAppDriver tutorial series.\nThis course is a complete answer to your Windows automated software testing questions. In this course, I will show you how to get started using Appium WinAppDriver in C# and how to go full-throttle test automation quickly.\nNote: Appium was created based on WebDriver, which is also the basis of Selenium; this way, if you start from Appium/WinAppDriver, you can quickly move forward to Selenium-based UI testing. Although, you will need to understand how DOM-based HTML websites work.\nThe best part is that this course is in C# Dot Net, and I will show you the techniques that work instead of typical open-source trial and error. For example, Appium-based Windows Application Driver (WinAppDriver) is a course for QA persons by QA persons.\nAppium is very popular in the automated tester community for mobile Automation. Appium for iOS and Android is already out there; Microsoft has joined the bandwagon by providing the necessary tooling to bring Windows application testing into the Appium world.\nI'll show you how to automate the testing of legacy Win32 Applications, deal with Unified Windows Platform (UWP) applications, and address its challenge to identify UI elements in C# (C Sharp) with WinAppDriver.\nThe first section covers tool installation in detail, and I'll show you how to download and install everything you need for test automation win WinAppDriver. This will include Visual Studio Community Edition, Node.js, Appium, and WinAppDriver.\nSection 2 introduces the Windows Application Driver (WAD) UI Recorder. Once the tools are installed, you'll set up your first UI Automation solution in C# .Net and add Appium WinAppDriver. Next, you'll write your first test automation program using C# (C Sharp) and Appium WinAppDriver in the next 5 minutes. Finally, I'll show you how to take a screenshot using Appium WinAppDriver from C# code, read a Windows Win32 application title, maximize a window, and quit an application started by Appium WinAppDriver test automation scripts.\nIn section 2, I'll show you how to perform UI Automation operations such as mouse clicking and typing with the keyboard (SendKeys). Then, you'll learn how to use Selenium implicit wait using C# in Appium/WinAppDriver scenarios.\nAppium Desktop Client is also covered; I will show you how to create a custom session in Appium Desktop Client to inspect elements of a Windows application through Windows Application Driver(WinAppDriver or WAD). You will also learn how to check the XML tree representing the UI elements of an application using Appium for test automation scripts.\nNext, I'll introduce you to the MS Test (Visual Studio Unit Testing) Framework if you want to create a unit test project in Visual Studio. You'll practically see the life cycle of an MSTest-based unit test and implement it using keywords like TestClass, ClassInitialize, TestMethod, TestInitialize, TestCleanup, and ClassCleanup in C#. I'll also teach you how to see if your automated tests are passed or failed(the TDD red-green cycle); I'll show you the Visual Studio TestExplorer window for this purpose. You'll also learn how to see test failure error details. These general test automation concepts can be used in different languages and environments and with various test automation tools.\nPlease note that you can also use other automation frameworks like NUnit and XUnit, which are not shown in this WinAppDriver tutorial.\nAfterward, I'll show you how to mix MS Test with (Appium) Windows Application Driver to create proper automated software testing scripts. In this section, I'll show you how to debug a test for identifying problems and devising solutions to complex problems (sometimes, you can't find a Windows Element beforehand). Finally, this section will provide helpful information about practical, functional UI testing using automated software tools.\n\nI will show the MS Test's data-driven testing in the next section. Then, I'll show you how to incorporate Excel data in Appium Windows Application Driver tests. This section will show you how to run the same set of tests with different data for testing various scenarios. But first, I'll show you how to use TestContext in automation testing.\nAppium C# WinAppDriver UI Automation Testing is the core focus of this course.\nThe last section of this course will be about automated testing of WinForms-based (Windows Forms) applications in WinAppDriver (Appium). I'll show you how to access the most commonly used Windows controls in RPA/UI Test Automation. WinForms Windows UI Elements (controls) related topics explicitly by this course are given below:\nCheckbox test automation\nRadio button test automation\nButton test automation\nDataGrid test automation\nPopup automated testing\nWinTree automated testing\nMenu Item automated testing\nIn the end, I hope you will find this course helpful in learning automated software testing and UI Automation in general for RPA-like scenarios with Microsoft C#, Appium-based WinAppDriver, and Visual Studio.\nThis course uses entirely FREE SOFTWARE TOOLS!\nEverything shown in this course can be run on Azure DevOps Pipelines through CI/CD.\nNote: WinApp Driver is incorrect. The correct abbreviation is WinAppDriver, which is a single word. The full name is Windows Application Driver.\nDesktop automation software testing is becoming increasingly popular among businesses of all sizes. This type of software testing allows companies to automate their testing processes, resulting in increased efficiency and accuracy. In addition, by using desktop automation software testing, businesses can streamline their testing efforts and ensure that their software functions correctly before it is released to customers. This can save companies both time and money in the long run, as they can identify and fix any issues before they become significant problems. Overall, desktop automation software testing is a valuable tool to help businesses improve their software development processes and deliver high-quality products to their customers.\nAppium is an open-source automation tool that is used for testing mobile applications. It provides a cross-platform solution for automating iOS, Android, and Windows devices. With Appium, developers can write automated tests using their preferred language and test framework. It also supports a wide range of testing types, including functional, performance, and compatibility testing.\nAre you a software tester looking to improve your skills and stay ahead in the industry? Join our test automation course and learn how to master automated testing. With our expert instructors and a comprehensive curriculum, you'll gain the knowledge and experience needed to excel in your career. Don't miss this opportunity to enhance your skills and increase your value as a software tester. Enroll now!\nTest automation is essential; learn it now!",
      "target_audience": [
        "QA persons wanting to learning automated testing",
        "Software developers wanting to learn UI test automation"
      ]
    },
    {
      "title": "QMetry Test Management v8 - Full Course (User + Admin)",
      "url": "https://www.udemy.com/course/qmetry-test-management-v8/",
      "bio": "QMetry Test Management is the best enterprise test management tool to run manual and automated test cases.",
      "objectives": [
        "Confidently manage test cases, stories, test runs, and defects",
        "Integrate QMetry Test Management seamlessly with JIRA, CI/CD tools, and any automation framework",
        "Customize real-time testing reports and dashboards to leverage in making testing decisions",
        "Cut down overall time and energy on test management",
        "Access any and all test artifacts in a single platform, with a single click",
        "Achieve better, scalable testing quality and productivity"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of testing lifecycle"
      ],
      "description": "QMetry Test Management is considered one of the best test management tools in the industry verticals. It enables continuous testing and delivery. It is a scalable, compliance-driven, secured and modular tool. With Agile friendly design and folder structure enablement, it is well-suited for traditional and Agile teams or teams that are in transition. The tool is future-ready with AI & ML capabilities.\nApart from test case authoring, reusability of test cases, manual as well as automated test execution, the tool offers -\nCreation of Custom Reports and Dashboards along with System Reports\nSmart and automated documentation for the test cases with built-in Exploratory Testing\nSeamless integrations with Jira, Rally and Azure.\nCI/CD tools like Bamboo/Jenkins and Automation frameworks.\nImport Test cases from Excel and Export test case/test execution details in PDF & Word format.\nShare - Comment - Email Test Assets to Collaborate within your team.\nIntroduction to Exploratory Testing, How to Record an Exploratory Session.\nUnderstanding Open APIs\nImport Automation Results to QMetry\nUnderstanding Automation Agent\nGenerate Planned/Target vs Actual Reports\nEnhance Collaboration - Share - Comment - Email Test Assets to Collaborate within your team\nUsing the ESignature feature for Test case and Test Execution Approval Workflow.\nLink Requirement to Test Cases, Test Cases to Test Suites, Test Suites to Defects and it's traceability.\nAdministrator the QMetry Instance.\nSet User Roles and Create Users.\nConfigure User Authorization methods like LDAP, SAML\nIntegrate Tools like Jira, Rally and Azure DevOps.\nCreating, Managing and Archiving Projects",
      "target_audience": [
        "QA professionals who seek to leverage their test artifacts to achieve better test management and testing quality at a large scale"
      ]
    },
    {
      "title": "Python Automation Package: Selenium for Web & API",
      "url": "https://www.udemy.com/course/loadrunner/",
      "bio": "Step by Step Python, Web Automation using Selenium | Basic to advance concepts | Framework",
      "objectives": [
        "you will learn to develop a workable strategy for load testing of an enterprise system"
      ],
      "course_content": {
        "Environment Setup- Python | Pycharm | PIP | Libraries": [
          "Why as a Tester we need to learn Python? What all places we can use Python",
          "Installation Roadmap : Python, Pycharm, PIP & Library",
          "Step 1 : Setup Python on Windows Machine with Environment Variable",
          "Step 2 : Setup Pycharm - Editor fort Python Programming",
          "Step 3 : Setup PIP : Package Manager for Python",
          "Step 4 : Install Libraries using PIP (Selenium & Other Libraries)",
          "Solution : Installed Library but not able to use on Pycharm"
        ],
        "Getting start with basic PYTHON Programming": [
          "First Python Code : Create Python File, Comments & Print on Console",
          "How to take user input and use it in programming",
          "How to Declare and use Variables in Python",
          "Constants and Type Casting in Python",
          "Standard datatypes in Python : Number, String, List, Tuple & Dictionary"
        ],
        "Control Execution using Condition Handling, Practical Examples and Exercise": [
          "Condition Handling using If - Handle Single Condition",
          "Condition Handling using If - Handle 2 Conditions",
          "Condition Handling using If - Handle Multiple Conditions",
          "Condition Handling using - Nested Conditions",
          "Condition Handling with Logical OR and Logical AND",
          "Condition Handling **** Task 1 - Find Largest and Lowest among 3 numbers",
          "Condition Handling **** Task 2 - Find number is complete divisible",
          "Condition Handling **** Task 3 - Find number of days in a month",
          "Condition Handling **** Task 4 - Find triangle -EQUILATERAL|SCALENE|ISOSCELES",
          "Condition Handling **** Task 5 - Find Grade by calculating percentage",
          "Condition Handling **** Task 6 - Check number is EVEN OR ODD"
        ],
        "Do Execution with --Loops -- | For, While, Break and Continue": [
          "Introduction of Loops - Why and Where to use Loops",
          "For Loop with Final Range - Run code until the given condition(value) reach",
          "For Loop with initial and final range -Run code between given range",
          "For loop with increment value - Run code with different increment value",
          "For loop with decrement value - Run code with different decrement value",
          "For loop with list - Running a loop on the List of values",
          "While Loop with increments - How to use while loop with increment condition",
          "While loop with decrement - How to use while loop with decrement condition",
          "Break Statement - When Loop in-between when a given condition match",
          "Continue Statement - Skip remaining part of Loop when condition match",
          "Else Statement - Execute some code once the loop is completed"
        ],
        "How to do String Handling -Must for Interview Preparation & Real Automation Work": [
          "What is String, How to Define String - Perform operation like Concat & Repeat",
          "String : Fetch Substring - By giving Start and End index values",
          "Common String Functions - Length, Capitalize, Upper and Lower",
          "Common String Functions -lStrip, rStrip and Strip",
          "Common String Functions - Replace Data, Find Data and Split Data",
          "Compare 2 Strings in Python with Practical Examples"
        ],
        "Complex Data Types | Work with List, Tuples and Dictionary": [
          "What is List - How to Insert, Fetch, Update and Remove data from List",
          "Common List function - Concatenate String and Find Length of String",
          "What is Tuple - Difference between List and Tuple",
          "Tuple advance operations - Count Values, Display Value and Merge Tuples",
          "What is Dictionary - How to define and use Dictionary in Python",
          "Dictionary Methods - Find all Keys & Value"
        ],
        "Functions in Detail | Learn how to write functions with different arguments": [
          "What is Function ? Why to write Function & How to create functions",
          "Basic thumb Rules to create functions with example",
          "Different types of functions : With Arguments and Without Arguments",
          "Write Functions with return value | Get output from functions",
          "Different types of arguments : Required, Keyword and Default"
        ],
        "Class in Python | How to implement Class, Constructors, Class Method and Objects": [
          "What is Class, How to Write Class and Members & Access members using Object",
          "Functions in Class (Class Methods): Access by using Class object",
          "Constructors : What is Constructor, How to write Constructors",
          "Constructors practical implementation : Why and Where we use constructors",
          "Access Class and Members in Different File using Class object"
        ],
        "Modules | What is Module | How to create Modules | Where to use Modules": [
          "What is Module | How to write Module and Module Members",
          "How to Use Modules with Practical Implementation",
          "Creating Project Structure | Define Folder Structure of Python Projects",
          "Difference between import and from-import in Python"
        ],
        "File Handling in Python : Read data from TXT, CSV and Other files": [
          "Read Data from File(.txt) | Open file in Read, Write or Append mode",
          "Read character by character and line by line",
          "Write data to File(.txt) | Overwrite and Append mode",
          "Common file methods"
        ]
      },
      "requirements": [
        "Loadrunner 12.5 version"
      ],
      "description": "Python in not just use for web browser automation but also can use for following\n\nRead | Search  & validate data in excel\nHave to pull text off of several web pages?\nCopy thousands of files from one location to another\nPerform repeatable tasks in single click\nRename multiple files & folders within a second.\nCourse Coverage\n\n\nStep by Step Setup\nWhy to Learn Python as Software Tester\nBasic Programming\nModules\nOOPS Concepts\nOpenPyXl\nWorking with Notepad and CSV\nPytest Framework\nInterview Question\nPractical Implementation\nPractice Exercises\nRealtime Scenario\nBest Practices\n\nAfter this course, you will be eligible to implement your knowledge to make Testing Utilities using Python and also ready to automation different types of application (Web, API) using Python, Most common tools available in market which support python are following, you will be ready to work on these tools after completing this course\nSelenium with Python\nAPI Testing using Python\nAppium with Python\nRobot Framework\n- Detailed Python Programming Concepts\n- Test Execution using Pytest Framework\n- Interview Preparation\n- Detailed Python Programming\n- Allure Reporting\n- No prior Automation or Programming knowledge is Required\nEnd to End Automation Frameworks\n-   Detailed Data Driven Framework using Excel\n-   End to End Implementation of BDD(Behavior Driver Development) framework with Behave\n-  Keyword driven framework implementation using Robot Framework",
      "target_audience": [
        "Quality Assurance Professionals"
      ]
    },
    {
      "title": "Learn Test Driven Development in Java",
      "url": "https://www.udemy.com/course/learn-test-driven-development-in-java/",
      "bio": "Learn everything you need to know about TDD, Test driven development tutorial for Java through real examples.",
      "objectives": [
        "By the end of this course, you will be able to use a test driven approach to successfully deliver Java applications",
        "In this course, you will learn how to design applications with testability in mind",
        "In this course, you will learn how the rapid feedback loop of a test driven cycle can give real productivity and quality benefits",
        "You will learn some common testing pitfalls to avoid when writing your tests",
        "You will learn how to apply test driven development to your existing code allowing you to start applying TDD immediately"
      ],
      "course_content": {
        "Introduction to TDD": [
          "What is TDD",
          "The Test Driven Development cycle",
          "Why TDD?"
        ],
        "Demonstrating TDD, through walkthroughs and exercises": [
          "Let's get started, introducing our example app",
          "Demonstrating the reverse polish calculator",
          "TDD walkthrough part 1",
          "TDD walkthrough part 2",
          "TDD walkthrough part 3",
          "Walkthrough summary, common questions"
        ],
        "Real world TDD Part 1 : Design enabling test": [
          "Introduction to real world testing",
          "Introducing SOLID design principles",
          "Single responsibility principle",
          "Open closed principle",
          "Liskov substitution",
          "Interface seggregation",
          "Dependency inversion"
        ],
        "Real world TDD Part 2 : Test doubles": [
          "Introducing test doubles",
          "Stubs",
          "Fakes",
          "Mocks",
          "Demonstrating Test Doubles",
          "Mock frameworks"
        ],
        "Testing legacy code": [
          "Dealing with legacy code",
          "Demonstration of testing legacy code",
          "Legacy code summary"
        ],
        "Test principles": [
          "Test principles",
          "Testing anti-patterns: The Singleton",
          "Testing anti-patterns: Create the World",
          "Testing anti-patterns: Completely Mocked",
          "Testing anti-patterns: The Exceptional Test",
          "Testing anti-patterns: Usually Passes",
          "Testing anti-patterns: One Big Test",
          "Test anti-patterns: The Slow Test",
          "Testing anti-patterns: Second class test"
        ],
        "Applying TDD": [
          "Applying Test Driven Development",
          "TDD Kata"
        ]
      },
      "requirements": [
        "Basic knowledge of Java"
      ],
      "description": "This “Java Training: Test Driven Development Tutorial for Java” course provides everything you need to know to get started with test driven development in Java.\nThis course covers test driven development from scratch, through video lectures, demonstrations of practicing a test driven approach, and through exercises for you to complete, allowing you to gain valuable experience in using TDD.\nFor more information on our “Java Training: Test Driven Development Tutorial for Java” courses, visit our course page.\nSign up for this Java Training course now and learn from the ultimate test driven development tutorial for Java.",
      "target_audience": [
        "Java software developers"
      ]
    },
    {
      "title": "Learn Cucumber BDD From Scratch+ Automation Framework Design",
      "url": "https://www.udemy.com/course/cucumber-from-scratch/",
      "bio": "Highest Rated Course on Cucumber BDD! Learn Cucumber with Java, Maven, JUnit, Selenium WebDriver, Page Object Model.",
      "objectives": [
        "What is Behavior Driven Development (BDD)?",
        "Concept of TDD vs BDD",
        "Learn Cucumber Coding through practical examples on live website",
        "Cucumber with Junit and Selenium",
        "Cucumber with serenity-cucumber4 maven plugin",
        "How to Create Cucumber Features?",
        "How to write Cucumber Gherkin Scenarios?",
        "How to write Cucumber Step Definition Files?",
        "Parameterization in Cucumber",
        "Cucumber Data Tables",
        "Cucumber Hooks",
        "Cucumber Tags",
        "Cucumber Framework Design with Page Object Model and Page Factory",
        "No PPTs. Coding Oriented Sessions"
      ],
      "course_content": {
        "Getting Started with Cucumber and BDD": [
          "Introduction to BDD",
          "Creating Cucumber Maven Project",
          "Cucumber Eclipse Plugin",
          "Creating Cucumber Feature Files",
          "Writing Gherkin Scenarios",
          "Creating Step Definitions",
          "JUnit Test Runner"
        ],
        "Cucumber Options": [
          "Features, Glue and Plugin",
          "Dry Run Option",
          "Strict Option",
          "Monochrome Option",
          "Tags Option",
          "Name Option"
        ],
        "Cucumber with Selenium WebDriver": [
          "Integrating with Selenium WebDriver",
          "Practicing Gherkins and Step Definitions",
          "Introduction to Global Hooks"
        ],
        "Parameters and Data Tables in Cucumber": [
          "Cucumber Parameters",
          "Step Data Table in Cucumber",
          "Scenario Outline (Data Driven Testing) in Cucumber"
        ],
        "Hooks and Tags": [
          "Tags Option Update - Must Read",
          "Cucumber Tagged Hooks",
          "Ordering (Prioritizing) Hooks",
          "Cucumber Tags",
          "Cucumber Global Hooks",
          "Summary So Far"
        ],
        "Cucumber Framework using Page Object Model": [
          "Creating Page Factory (WebElements Repository)",
          "Creating Action Pages",
          "Creating Common Action Pages",
          "Implementing Page Object Model",
          "Over to YOU",
          "Download Project Framework Repo"
        ],
        "Bonus Section: Implementing Cucumber Reporting Plugin": [
          "Adding Masterthought Reporting Plugin",
          "Capture Screenshot For Failed Steps",
          "Next Steps Article",
          "The Lifecycle of JIRA, Agile, and BDD (Cucumber) in Software Development"
        ],
        "Next Steps": [
          "Next Steps",
          "Thank You!"
        ]
      },
      "requirements": [
        "Basic knowledge of Java and Selenium is required to perform hands on exercises explained in this course",
        "A computer with JDK 10 and Eclipse IDE installed"
      ],
      "description": "Note: To enable captions, click on 'CC' at bottom right hand corner of the video player and select 'English'.\nThis course provides in depth coverage on Cucumber BDD. So, you can learn Cucumber Coding From Basics to Advanced Levels.\nOverall course outline:\nWhat is Behavior Driven Development (BDD)?\nConcept of TDD vs BDD\nCucumber with Junit and Selenium WebDriver\nLearn Cucumber Coding through practical examples on live website\nCucumber setup\nHow to Create Cucumber Features?\nHow to write Cucumber Gherkin Scenarios?\nHow to write Cucumber Step Definition Files?\nParameterization in Cucumber\nCucumber Data Tables\nCucumber Hooks\nCucumber Data Tables\nCucumber Framework Design with Page Object Model and Page Factory\nI believe in hands-on exercise oriented teaching. So, you won’t find any PPTs during the sessions. But, you will find dozens of real time scenarios used to elaborate Cucumber BDD concepts.\nFeel free to post your questions/feedback in the comments block provided under each session-video. I will make sure all of your queries are addressed.\n‘Course Curriculum’ section below will give you an idea about the depth and the overall coverage of this course. If you want to learn any other Cucumber BDD concept - which is not already covered in this course - then feel free to let me know via Udemy messenger.\nThis course is designed for you if you are:\na QE Automation Engineer OR\na Selenium WebDriver automation aspirant OR\na manual testing professional willing to jump start your automation carrier OR\na QTP/UFT professional wanting to learn a high demand skill OR\na QE Manager exploring better automation solutions for your project OR\na fresh grad looking to learn a quick new skill which has high demand in the job market OR\naspiring to learn coding and automation\nTraining program requirements/prerequisites:\nBasic knowledge of Java and Selenium is required for performing hands of exercises explained in course videos\nParticipants need to have a Windows 10 PC OR a MacBook with 8 GB (or more) memory\nJDK 10 and Eclipse IDE installation\n\n\nTo get the maximum benefit from the course, please take a look at following steps explaining 'How to take this course?'\nStep 1:  Schedule 30-45 minutes of your time daily for 5 days a week. 'Continuity' is the key.\nStep 2:  All sessions are divided in small videos of less than 20 minutes. Watch 2-3 videos daily.\nStep 3:  Hands-on exercise is very important. So, immediately try out the programs discussed in the session. Try them on your own. You can download these programs from lecture resources.\nStep 4: Assignments with answer keys are provided where-ever necessary. Complete the assignments before jumping on to the next sessions.\nStep 5:  If you come across any questions or issues, please feel free to contact me and I will make sure that your queries are resolved.\nWish you all a very happy learning.\nNote: All the course videos are in Full HD. For the best video streaming quality, please adjust the resolution from 'settings' at bottom right-hand corner of video player. Choose 1080p or 720p as per your network speed.",
      "target_audience": [
        "QE Automation Engineers",
        "QE Manager exploring better automation solutions for your project",
        "Fresh grad looking to learn a quick new skill which has high demand in the job market",
        "Manual tester willing to jump start your automation carrier",
        "QTP/UFT professional wanting to switch to a high demand testing tool",
        "Manual Testing Professionals",
        "Selenium Testers",
        "Automation Test Engineers",
        "Automation Aspirants",
        "Software Testing Professionals"
      ]
    },
    {
      "title": "Testing Next.js Apps with Jest, Testing Library and Cypress",
      "url": "https://www.udemy.com/course/nextjs-testing/",
      "bio": "Learn to test a real-world serverless React app with routes, authentication, database and more!",
      "objectives": [
        "Testing Next . js UI, API, routes, authentication and database interactions",
        "When to use unit testing, integration testing and end-to-end testing -- and why!",
        "Strategies for testing SSG, SSR, ISR and CSR (including cache updates and SWR revalidation intervals)",
        "How to use a test database for tests that involve data fetching and mutations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Technologies and Prerequisites",
          "create-next-app Using with-jest Example",
          "First Next.js Test",
          "Course Features: Code Quizzes and Side Notes",
          "Guide to the Rest of the Course"
        ],
        "Testing Definitions and Philosophy": [
          "Introduction to Testing",
          "Types of Tests",
          "What to Test",
          "Test Redundancy",
          "Test Granularity Guidelines",
          "My View on Snapshot Tests (hint: not my thing)",
          "Summary: Testing Definitions and Philosophy",
          "Testing Terms and Guidelines"
        ],
        "Course App and Next.js Data Fetching Strategies": [
          "Introduction to Course App and Next.js Data Fetching",
          "Demo of Course App",
          "Next.js Data Fetching Strategies",
          "Next.js Data Fetching Strategies",
          "WINDOWS USERS: important note about name of course repository",
          "CORRECTION to next lecture: generating random strings",
          "Installing the Course App",
          "Course App Code Notes"
        ],
        "UI Testing": [
          "Introduction and Technologies",
          "Testing a Static Page",
          "SIDE NOTE: Why add to the existing test? Why not create a new test?",
          "Testing SSG Props",
          "SIDE NOTE: About Fake Data for \"Popular Concert Venue\"",
          "Code Quiz! Band Component Error",
          "Decisions and Guidelines for the Tests So Far",
          "Introduction to Mock Service Worker",
          "IMPORTANT! Mock Service Worker version",
          "Setting up MSW with Next.js",
          "Adding a MSW Handler",
          "SIDE NOTE: Troubleshooting MSW Handlers",
          "Using MSW for a Test: Reservation Component",
          "Code Quiz! User Reservations",
          "Different MSW Responses per Test",
          "Code Quiz! Different MSW Responses per Test",
          "Summary: UI Testing"
        ],
        "Setting up a Test Database": [
          "WINDOWS AND LINUX USERS: adjustments to npm scripts",
          "Introduction to Test Databases",
          "Creating a Test Database",
          "Environment Variables",
          "Creating the Test DB and Environment Variables",
          "SIDE NOTE: Test DB example with cloud server",
          "Create a Method to Reset the Test DB",
          "Summary: Setting up a Test Database",
          "Test Database Concepts"
        ],
        "Testing Next.js Routes (using Cypress)": [
          "TROUBLESHOOTING: app won't build with Nextjs version 12.2 or above",
          "Introducing testing Next.js Routes and Cypress",
          "OPTIONAL: Introduction to Cypress",
          "UPDATE: Cypress 10",
          "WINDOWS USERS: Different `build: test` command required",
          "Setting up Next.js for Cypress",
          "SIDE NOTE: Running Continuous Integration Tests against Preview Deploy",
          "Setting up Cypress",
          "TROUBLESHOOTING: `npm run cypress:start` hangs",
          "SIDE NOTE: Running cypress without specifying a path",
          "IMPORTANT: Must use older version of Testing Library with Cypress 9",
          "First Cypress Test: Static Route",
          "Code Quiz! Static Route",
          "Testing Dynamic Routes",
          "Resetting the Database in Cypress",
          "SIDE NOTE: Why reset at the beginning of the test and not the end?",
          "Test Dynamic Route that was Present at Build Time",
          "Code Quiz! Test route that does not exist",
          "Test Route Created after Build",
          "Run all Cypress and Jest Tests",
          "TROUBLESHOOTING: `npm run cypress:run` hangs",
          "Summary: Testing Next.js Routes and Cypress"
        ],
        "Testing ISR and Data Updates": [
          "Introduction to Testing ISR and Data Updates",
          "Testing Data Comes from ISR Cache",
          "First ISR Cache Test",
          "SIDE NOTE: Next.js scripts",
          "Code Quiz! ISR Bands Page",
          "UPDATE: on-demand revalidation is out of beta!",
          "Updating the ISR Cache on Demand",
          "Writing a Cypress Plug-In for Environment Variable",
          "ISR Revalidation Test",
          "Clearing the ISR Cache",
          "Adding ISR Cache Clearing to Test",
          "Code Quiz! Revalidate ISR Cache",
          "SWR Revalidate on Interval",
          "Testing Revalidate on Interval",
          "Code Quiz! Revalidate on Interval",
          "Summary: Testing ISR and Data Updates"
        ],
        "Testing Authentication": [
          "Introduction to Testing Authentication",
          "Auth Wrapper in Course App",
          "Adding Sign-In Details to Cypress",
          "Testing Success Flow with Auth Wrapper",
          "SIDE NOTE: Why is this test so dang long?",
          "Code Quiz! Authentication Failure followed by Success",
          "Parametrizing Protected Page Tests",
          "Authenticating Programmatically",
          "SIDE NOTE: Resources for Authenticating Programmatically",
          "Code Quiz! Authenticating Programmatically",
          "Ticket Purchase End-to-End Test",
          "SIDE NOTE: SWR can't find updated text (de-duping interval)",
          "Summary: Testing Authentication"
        ],
        "Testing Next.js APIs": [
          "Introduction to API Tests",
          "UPDATE: slight change in syntax for next-test-api-route-handler v4",
          "First API Test",
          "Fixing Test Errors: Polyfill, resetDB, ignore DB directory in watchlist",
          "Testing a Route with a URL Param",
          "Testing a POST Route",
          "Mocking utils Module for Authentication",
          "SIDE NOTE: `export` Syntax for Mocked TypeScript Module in Jest",
          "Write Test using Mocked Module",
          "Code Quiz! User with No Reservations",
          "Code Quiz! Post a Reservation",
          "Fixing Issues with Parallel Tests using Shared Database",
          "SIDE NOTE: Example of Using Multiple jest.config.js Files",
          "Updating Mock Function Return Value: Testing Unauthorized Request",
          "Code Quiz! Updating Mock Function Return Value",
          "Testing Routes with Query String Params",
          "Code Quiz! Query String Params",
          "Summary: Testing Next.js APIs",
          "Congratulations and Thank You!"
        ],
        "Further Learning": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Next . js UI and API (particularly version 10+)",
        "React components and hooks",
        "RECOMMENDED: Jest, Testing Library for React, Cypress",
        "HELPFUL: Mock Service Worker"
      ],
      "description": "Learn how to test your Next.js app from top to bottom! Tests provide confidence that your Next.js app won't be released with embarrassing, costly bugs. Employers need developers who know how to write tests!\n\n\nComprehensive Next.js App Testing\nThis course teaches how to test all aspects of a Next.js application, including:\nUI unit tests\nAPI unit tests\nNext.js routes\nCached pages\nData updates (both to the cache and via SWR refresh interval)\nAuthentication\nEnd-to-End tests for a complete user flow\nThe course uses a cross-section of testing technologies, featuring:\nJest\nReact Testing Library\nMock Service Worker\nCypress\nCypress Testing Library\nYou'll also learn a wide array of testing techniques, such as:\nUsing a test database\nEnvironment variables\nJest module mocking\nTesting definitions and tradeoffs (not necessarily a technique, but helpful in making decisions about what to test!)\n\n\nPractice what you've learned\nThe course includes \"code quizzes\" -- challenges to write code based on the concepts you've just learned. For more concept-heavy sections (such as testing definitions and guidelines) the course provides multiple-choice quizzes.\n\n\nTest a pre-written app\nA Next.js app has already been written for the course, so the course content can focus on testing. The course tests a popular concert venue app called... Popular Concert Venue (the owners were apparently running low on creativity when they named the place). The app features shows from bands such as The Joyous Nun Riot and Avalanche of Cheese. Randomized, mad-libs style band descriptions and images add to the fun.\n\n\nProven Instructor\nThe instructor is a proven Udemy veteran, with reputation for clear explanations, Q&A responsiveness, conciseness, and useful practice activities. Here are some reviews from the instructor's other courses:\nA great course, probably the best testing course I've ever taken.\nAfter watching other courses on the same topic, this is the first one that I'm actually excited to dig into.\nThis course exceeded all my expectations. It has the right amount between practice and theory. The teacher is amazing and thoughtful and she answers the students.\nI have taken several courses on Udemy, and this is the best one where the teacher doesnt just lecture, but actually structures the class so that I learn the material.",
      "target_audience": [
        "Next . js developers who want to learn how to test all aspects of their app"
      ]
    },
    {
      "title": "Selenium WebDriver with Java -Basics to Advanced+Frameworks",
      "url": "https://www.udemy.com/course/selenium-real-time-examplesinterview-questions/",
      "bio": "\"TOP RATED #1 Master SELENIUM java 4 (Latest) course\" -5 Million students learning worldWide with great collaboration",
      "objectives": [
        "*****By the end of this course,You will be Mastered on Selenium Webdriver with strong Core JAVA basics",
        "****You will gain the ability to design PAGEOBJECT, DATADRIVEN&HYBRID Automation FRAMEWORKS from scratch",
        "*** InDepth understanding of real time Selenium CHALLENGES with 100 + examples",
        "*Complete knowledge on TestNG, MAVEN,ANT, JENKINS,LOG4J, CUCUMBER, HTML REPORTS,EXCEL API, GRID PARALLEL TESTING",
        "* Specialized Trainers who can help in answering students queries in part of your Course Journey",
        "\"Additional knowledge to understand Mobile Testing Database testing and Performance testing with Selenium",
        "You will be in a position to pick any website over internet and can automate it with all the possible test cases",
        "You will improve your coding skills in writing best optmized code for Automating testcases",
        "\"Last but not least\" you can clear any Interview and can Lead Entire Selenium Automation Project from Design Stage",
        "You should be able to verify Data Integrity with the GUI of the application",
        "You will be able to create GREAT LOOKING REPORTS to impress Clients",
        "Deeper understanding of Automation guidelines and code quality standards",
        "Includes a Practice Website to play around with all available Web driver functions to automate"
      ],
      "course_content": {
        "Selenium Introduction": [
          "***Course FAQ's-*** (Must Watch Lecture)",
          "Social proof for BEST SELLER in Selenium Category?**(Must Watch)**",
          "Selenium syllabus & How to reach Trainer for Queries?",
          "Selenium Features- What you need to know",
          "Selenium WebDriver Architecture Simplified",
          "Selenium Introductory Notes download",
          "Video Player Setting tips for Best Experience in viewing course"
        ],
        "Install Java & Selenium -Get Started with basic Steps of the Selenium WebDriver": [
          "Install Java & Eclipse - Setup Maven Project from Scratch",
          "Setting up Eclipse Maven Project with Selenium dependencies from Scratch",
          "Understanding the core concept of Browser driver classes and Webdriver Interface",
          "How to run tests in Google Chrome & Importance of Chromedriver.exe file",
          "Troubleshooting steps if you fail to invoke chrome browser with Selenium",
          "Getting Started with basic Selenium WebDriver methods",
          "How to run tests in Firefox and Edge browser with Gecko and edge drivers",
          "Running the tests in Microsoft Edge browser- Importance of edge driver",
          "Code Download",
          "Important Note about next section",
          "Important Note on OS compatibility",
          "Quiz - Check Your Knowledge"
        ],
        "Brush up Java Concepts for Selenium Automation": [
          "Course Strategy to learn Java basics for Selenium Automation",
          "Introduction to Java variables and Data types with examples",
          "What are Arrays in Java? How to initialize and retrieve the values of array",
          "Introduction to For loop to iterate over array of Strings and Integers",
          "Enhanced for loop declaration & using Conditional statements inside the loops",
          "Code download",
          "Array Exploration",
          "What is Arraylist and differences between Arraylist and Arrays",
          "Iterating over Arrays and Arraylists and its related methods",
          "Strings in Java - How to declare Strings & Important String methods",
          "How to create methods and access methods using Java class objects",
          "Code download"
        ],
        "CORE JAVA In depth for Manual testers and Beginners": [
          "7 hours Indepth Java learning with Interview Ques"
        ],
        "Locator Techniques& Tools used to identify Objects": [
          "Important Notes",
          "Importance of locators in Selenium WebDriver to identify the elements",
          "Identifying the Web elements with id and name locators with example",
          "Introducing Class name and Css Selector locators to identify elements",
          "Browser plugins- Selectorshub to identify and validate the elements on the page",
          "Working with Xpath and linktext locators and different ways of writing xpaths",
          "Building Customized Xpath and Css Selector locators based on html attributes",
          "Generating xpaths with parent to child tags traverse techniques"
        ],
        "Advanced Locators Identification & Interview Questions on Parsing Text": [
          "Generating Css selectors based on regular expressions - Example",
          "Code download",
          "Identifying web elements based on unique Tag name locators - example",
          "Generating xpaths based on the button texts on the page with the example",
          "Parse the String with Java methods to get the password dynamically from the page",
          "Code Download",
          "Running the tests in cross browser and how to inspect objects in Edge & Firefox",
          "Identify locators using Siblings with Xpath traverse - example",
          "How to Traverse from child element to parent element with xpath - Example",
          "Automate Browser navigations and window properties with Selenium Webdriver",
          "Code download",
          "Quiz - Check Your Knowledge"
        ],
        "Selenium Webdriver->Techniques to automate Web elements": [
          "Important Note",
          "Update with latest Selenium Version - Selenium Manager (Beta)",
          "Handling Static dropdowns with Select webdriver API",
          "Updated lecture on latest Dropdown looping UI",
          "Code download",
          "Handle Dynamic dropdowns with Webdriver API",
          "Parent-Child relationship locator to Identify the objects Uniquely",
          "Code Snippet download",
          "Handling AutoSuggestive dropdowns using Selenium",
          "AutoSuggestive code download",
          "Handling Checkbox and getting the size of them with Selenium",
          "Importance of Assertions in Automation testing and how to use them",
          "Code Snippet download",
          "Checkboxes exercise",
          "Handling Calendar UI in travel websites using Selenium",
          "Validating if UI Elements are disabled or enabled with Attributes",
          "UI(Dropdowns,EditBoxes,Error Valdiation) Assignment",
          "Code Snippet download",
          "End to End Automation using all UI Elements with selenium",
          "Exercise code download",
          "Handling Java Alerts using Selenium Webdriver",
          "Alerts code download",
          "Quiz - Check Your Knowledge"
        ],
        "Deep Dive into Functional testing with Selenium": [
          "Code formatting and Debugging",
          "Problem - Adding Items into Cart for Ecommerce App",
          "Sending Array of Products to Cart for checkout",
          "Building Programming Logic to process items in array for Cart",
          "Debugging the code to understand how flow is being built",
          "Fixing the problem of inconsistent locators and making tests clean",
          "code download"
        ],
        "Synchronization usage in Selenium webdriver": [
          "What is Implicit wait? Explain with real time scenario",
          "What is explicit wait? Explain with real time scenario",
          "Scenario to automate and necessity of waits in the example",
          "Practical examples on Implicit wait",
          "Practical examples on explicit waits",
          "code download",
          "Synchronization with Explicit wait - Assignment",
          "What is Fluent wait? Its advantages",
          "Building Customized methods using FLuent wait",
          "Practise example on Fluent wait"
        ],
        "Techniques to automate Ajax calls,Child Windows and IFrames": [
          "Handling Ajax/Mouse Interactions",
          "Actions class-real time example",
          "Window Handle concepts-real time example",
          "Live Example on working with Child windows",
          "Code download",
          "Window Handling Assignment",
          "How to handle Frames?",
          "Frames Techniques-real time example",
          "Frames Assignment",
          "Quiz - Check Your Knowledge"
        ]
      },
      "requirements": [
        "******You need NOT have java coding experience to start this course********* Even non Programming candidates can follow this course comfortably",
        "You will have Life Time instructor support to get solved all your queries. You can post your doubts in discussion board and we will get back with answer in less than 12 hours",
        "All Installation setup including Java knowledge is taken care as part of course",
        "Course includes real time projects with practical Solutions for the Robust Selenium Framework building",
        "Theoretical Material,Code dump and Interview Guide are available for download",
        "New : JOB ASSISTANCE after completion of course to make your Profile reach to Hundreds of Recruiters in my network.******",
        "Join in our Selenium Training community with (350 + lectures, 5 Million Students) Learning Together which you will not see in any other Selenium online course on Udemy.",
        "We have 5 dedicated Trainers who can help in answering students queries along with resume preparation , Interview preparation and Job assistance",
        "***Honored with BEST SELLER Tag by Udemy for our most trusted commitment to students***",
        "**\"40,000+ ratings with an average 4.6/5\"** which you will never see for any other course in Udemy"
      ],
      "description": "Course last updated on Aug 7th with Latest set of Selenium TestNG Framework Interview questions\nHave a Passion of learning Selenium but have no coding knowledge ? I will fulfill your wish with my easy teaching and life time query support  through QA Forum , Skype and Teamviewer\nThe one and only Selenium course (350+Lectures) in Udemy which conferred with the official BEST SELLER Tag and Highest Ratings -100,000+ 5 star Ratings)\nWatchout Lecture 2 which depicts our roaring Success in Udemy with Success stories\n-Includes: 50+ Hours     lectures with real time projects + OnDemand Skype, Teamviewer sessions  (Life time support)  including Job Assistance    + 5 Million Students learning forum and 100 Pages detailed Material which you will not find in any other online course\nThis course covers Java Basics core + Selenium Webdriver + Advanced Selenium + Interview Preparation + Framework design ( TestNG, ANT, Pageobject, Maven, Jenkins, Excel Datadriven, Cucumber, log4j ) + Selenium Grid + DataBase Testing + Performance Testing on Selenium scripts + Mobile testing Basics + Resume Preparation including       \" Life Time Support (On Demand skype sessions) + Material + Job Assistance- (US, India, Canada\n\n*One stop to become an Expert in Selenium from scratch *\nI noticed other courses using the same content as our course. Please be aware of them\nOn course completion You will be Mastered in Selenium Automation Testing and implementing Successfully in your work place or you will land on High Paying Job\n\nSo what makes this course Unique in the Market?\nWe assume that students have no experience in automation / coding and start every topic from scratch and basics.\nExamples are taken from  REAL TIME HOSTED WEB APPLICATIONS  to understand how different components can be automated.\nTopics includes:\nComplete Core java\nSelenium Webdriver- Major focus (20 hours+ content)\nLive Examples in Automating Web applications in all supported Browsers\nStrategy to handle Rich Web UI using Advanced WebDriver\nReal time challenges we face in WebDriver and solutions to handle it\nSelenium Grid\nLive projects on Selenium\nInterview questions discussion with solutions\nTestNG\nMaven\nANT\nJenkins\nLog4j\nTest Execution reports\nCucumber\nData driven framework\nHybrid Framework\nPage object Model Framework\nDataBase testing with Selenium\nPerformance testing with Selenium\nMobile Automation basics only!\nCLoud Automation with Sauce labs\nFramework Design from scratch (       TestNG, ANT, PageObject, Maven, Jenkins, Excel , Datadriven, Cucumber, log4j ,Client html reports)\nAll the Best! Happy Testing :)",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Freshers/Graudates who want to kick start their Carrier in IT World"
      ]
    },
    {
      "title": "Spring Security Master Class",
      "url": "https://www.udemy.com/course/spring_security_master_class/",
      "bio": "Learn how to implement the Spring Security module",
      "objectives": [
        "Understand how Spring Security fits into the Spring Ecosystem",
        "Understand Security Concepts",
        "Learn the Spring Security architecture",
        "Learn how to implement Spring Security",
        "Learn how to leverage Spring Boot test support including Junit 5, BDD, Mockito, MockMvc",
        "Learn how to leverage Spring Security JUnit test support",
        "Learn how to leverage various Authentication and Authorization features using Spring Security",
        "Learn how to implement Jdbc-based authentication and authorization",
        "Learn how to implement JPA-based authentication and authorization",
        "Learn how to implement Document-based authentication and authorization with MongoDB",
        "Learn Spring Security with a code-base that has been tested with 99% branch coverage",
        "Learn how to use the remeber-me service",
        "Learn x.509 client certificates"
      ],
      "course_content": {},
      "requirements": [
        "Must be familiar with the Java programming language... a minimum of an intermediate level of core Java is ideal",
        "Understanding of web applications is required",
        "Intermediate Springframework experience",
        "No Spring Security experience required",
        "SQL experience helpful",
        "JPA experience helpful",
        "MongoDB / Document database experience helpful",
        "JUnit experience helpful"
      ],
      "description": "Description\nThis course is a deep-dive into the Spring Security project. In this course, we will learn how to identify security issues with our applications and how Spring Security can help solve those issues.\nThis application has extensive testing and extensive documentation so you will completely understand each security task in each section and why that task is being done as well as what side-effects might occur due to the changes we make.\nWe will take a very incremental approach to each and every section task, so you will build your deep knowledge of Security and the Spring Security module and by the end of this course, you will have a deep theoretical as well as hands-on practical knowledge of all of the Security topics covered in this course.\n\n\nCourse Outline:\nBy the end of the course you will:\nDetail the topics of this course including:\nIntroduction to Application Security\nIntroduction to the Spring Ecosystem\nIntroduction to Spring Security\nHow to perform security-based tests in Spring\nTesting support for Spring-based Applications\nCustomizing Authentication\nLeverage JDBC for Authentication and Authorization\nLeverage Spring-Data JPA for Authentication and Authorization\nLeverage MongoDB and Spring-Data for Authentication and Authorization\n\n\nCourse Overview:\nSection 1: Introduction to this course\nSection 2: Introduction To Security\nSection 3: The Spring Ecosystem\nSection 4: Getting Started with Spring Security\nSection 5: Spring Security Testing\nSection 6: Customizing Authentication\nSection 7: Leveraging JDBC for Authentication and Authorization\nSection 8: Leveraging JPA for Authentication and Authorization",
      "target_audience": [
        "Intermediate to Advanced Spring Developers",
        "Spring developers interested in application security concepts",
        "Spring developers interested in adding security configuration to Spring Boot applications"
      ]
    },
    {
      "title": "Automotive HIL Testing-Hardware In Loop Concept from scratch",
      "url": "https://www.udemy.com/course/automotive-hil-testing-hardware-in-loop-concept-from-scratch/",
      "bio": "HIL, VT system, Vector cards(VT7001, 2516, 2004), V Test studio, ABS HIL, V Cycle , CANoe panel, PWM, VIL, ABS sensors",
      "objectives": [
        "Automotive developer and tester to get informative detail about model in loop, hardware in loop",
        "Vector Hardware in loop from scratch",
        "Rich level information regarding how to set up hardware in loop with Automotive ECU",
        "Test methods and Automation using VTStudio",
        "Important players in the Automotive industry for HiL",
        "create the HiL - Use case of Antilock braking system",
        "Anti lock braking system [ABS] - Electrical system circuit",
        "Wheel speed sensor, Brake pedal switch Circuit,Brake fluid switch",
        "Vector VT System cards - and GUI via CANoe",
        "VT7001 - Power supply card - walkthrough",
        "Handling Wheel speed information via VT2516",
        "VT System - Chassis walkthrough",
        "Final view of HiL and real harness",
        "Overview of VTestStudio, Automation using VTeststudio",
        "VT 2516 - Digital Signal card walkthrough",
        "HiL - Other components and Re-Configuration",
        "HiL components utilization and re-configuration",
        "Vehicle in Loop - ViL Overview"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Agenda"
        ],
        "Automotive Software Life Cycle and Emerging ASPICE process": [
          "ASPICE Quality process for Software Engineering Process"
        ],
        "A Closer look of V Model and mapping of testing concepts": [
          "Explanation in detail of V Model and mapping the testing concepts SIL,HIL,VIL"
        ],
        "Why Testing needed in Automotive": [
          "Test concepts of Automotive and needed of an ECO system"
        ],
        "Automotive ECO System for E\\E": [
          "Automotive ECO System for E/E, A detailed overview"
        ],
        "Hardware in Loop in Automotive": [
          "What is HiL",
          "Basic Elements of HiL",
          "Understand the HiL Need and Testing Type",
          "HiL - Input and Output (I/O)",
          "HiL - Device under Test [DUT]",
          "HiL - Gui, process, Automation"
        ],
        "Market Players in HiL": [
          "Important players in the Automotive industry for HiL"
        ],
        "Lets create the HiL - Use case of Antilock braking system": [
          "Anti lock braking system [ABS] - Electrical system circuit",
          "Various Scope of the HiL - using ABS",
          "ABS - ECU - A deeper look of components",
          "ABS - Wiring and signals",
          "ABS - Harness and pin details",
          "Brake pedal switch Circuit",
          "Brake fluid switch",
          "Wheel speed sensor",
          "Other Necessary Information from ABS",
          "Conceptual ABS - HiL",
          "HiL - Power supply handing",
          "Vector VT System cards - and GUI via CANoe",
          "VT7001 - Power supply card - walkthrough",
          "Automation of Power supply - Non VT",
          "Question related Powersupply Terminal",
          "Termnal: KL15 , KL30, KL50 - Part1",
          "Terminal: KL15 , KL30, KL50 - Part2",
          "VT2516_Digital Input Simulation",
          "Handling Wheel speed information via VT2516",
          "VT2004A - Analog Inputs handling",
          "VT System - Chassis walkthrough",
          "Additional VT Cards - General information",
          "VT_Cards in CANoe_Demonstration",
          "Dual ABS Connecter need for Real Load inputs in VT",
          "Final view of HiL [End to End]"
        ],
        "CANoe_Demonstration_Panel_Preparation_1": [
          "CANoe_Panel Preparation_1",
          "CANoe_Panel Preparation_2",
          "Mapping the System Variables to Panel"
        ],
        "Test Execution using the bench": [
          "Manual Test case definition",
          "Manual Test Execution"
        ]
      },
      "requirements": [
        "Basic Idea of Automotive Electronics, Overview of Automotive ECU's"
      ],
      "description": "Unlock the world of Automotive Hardware-In-Loop (HIL) Testing with our comprehensive course designed for both beginners and seasoned professionals. This in-depth course covers the foundational concepts and advanced techniques needed to master HIL testing from scratch. Learn how to integrate and validate automotive systems, simulate real-world driving conditions, troubleshoot complex issues, and ensure the highest levels of reliability and safety for vehicle systems.\nThroughout the course, you'll dive into the intricacies of HIL testing, exploring the latest tools and technologies that drive this essential field, all while receiving expert guidance from seasoned professionals. You'll develop a strong understanding of how to create accurate simulations, manage hardware-software interfaces, and apply best practices to ensure robust system performance.\nYou'll explore a variety of automotive systems, including ABS  understanding how HIL testing is used to validate each one. Learn how to design and implement test setups, configure vector based HIL systems, and use simulation models to test different scenarios and edge cases.\nBy the end of this course, you'll be proficient in HIL testing, equipped with the skills and knowledge needed to excel in the automotive industry. Whether you're looking to advance your career or deepen your expertise, this course will provide you with the tools and insights to succeed. Join us and take the first step towards mastering Automotive HIL Testing from scratch, becoming a key player in the development and validation of cutting-edge vehicle technologies.\n\nThis training covers the following objectives:\nSection 1:\nIntroduction\n- Will provide an introduction to HIL\n\nSection 2:\nAutomotive Software Life Cycle and Emerging ASPICE process\n- what is Software lifecycle in Automotive\n- ASPICE overview\n\nSection 3:\nA Closer look of V Model and mapping of testing concept\n- V model and where testing scope\n\n\nSection 4:\nWhy Testing needed in Automotive\n- Test concepts of Automotive and needed of an ECO system\n\nSection 5:\nAutomotive ECO System for E\\E\n\n\nSection 6:\nHardware in Loop in Automotive\n- What is HiL\n- Basic Elements of HiL\n- Understand the HiL Need and Testing Type\n- Input and Output (I/O)\n- Device under Test [DUT], Gui, process, Automation\nSection 7:\nMarket Players in HiL\n- Important market players in HIL\n\n\nSection 8:\nLets create the HiL - Use case of Antilock braking system\n-Anti lock braking system [ABS] - Electrical system circuit\n-Various Scope of the HiL - using ABS\n-ABS - ECU - A deeper look of components\n-ABS - Wiring and signals\n-ABS - Harness and pin details\n-Brake pedal switch Circuit\n-Brake fluid switch\n-Wheel speed sensor\n-Conceptual ABS - HiL\n-HiL - Power supply handing\n-Vector VT System cards - and GUI via CANoe, VT7001 - Power supply card - walkthrough, Automation of Power supply - Non VT\n-Handling Wheel speed information via VT2516\n-VT2004A - Analog Inputs handling\n-VT System - Chassis walkthrough\n-Additional VT Cards - General information\n-Final view of HiL and real harness\n-Automation using VTeststudio\n-Overview of VTestStudio\n-VT 2516 - Digital Signal card walkthrough\n-A sample test case in VTstudio\n\nSection 10:\nHiL - Other components and Re-Configuration\n\n\nSection 11\nVehicle in Loop - ViL Overview",
      "target_audience": [
        "Beginner in Automotive testing and development"
      ]
    },
    {
      "title": "ISTQB® Test Analyst Advanced Level (CTAL-TA) 2025",
      "url": "https://www.udemy.com/course/istqb-test-analyst-advanced/",
      "bio": "Get ready and practice questions for the ISTQB® Advanced Level Test Analyst certification (CTAL-TA)",
      "objectives": [
        "Identify and choose appropriate test design techniques for different applications",
        "Ability to evaluate requirements to determine domain validity",
        "Produce good quality test design specifications using the most effective test design techniques",
        "Apply suitable techniques to test quality characteristics such as performance, reliability, accessibility and usability."
      ],
      "course_content": {},
      "requirements": [
        "ISTQB® Foundation level certification is preferred to understand the course and is a must to take the exam"
      ],
      "description": "This course maps to the latest ISTQB® advanced level test analyst syllabus v3.1.2.\nThe course is up to date with the latest syllabus from ISTQB®\nThe ISTQB® Advanced Tester Certification—Test Analyst training course expands on the test design techniques and methods introduced in the ISTQB® Foundation certification course.\nThe course focuses on the key areas that are vital for successful test analysis and design: the testing process, test management, test design techniques, software quality characteristics, reviews, defect management and test tools.\nIt is very tough to prepare for the exam by yourself because of the lack of ISTQB® Advanced Level Test Analyst resources but this course is here to help you overcome this issue. I have included everything you might need to know to understand the syllabus of the CTAL-TA fully. I have included explanations to every topic in separate short videos plus sample questions for you to practice for the exam,\nThe course is filled with hands-on exercises to help you practice the methods and techniques taught in this course. Video explanations of the sample questions of why and how to pick the right answer in a short time. I have also included extra videos that I thought will help in speeding up the process of comprehending the syllabus.\nMy name is Maged Koshty, the managing director of ExpertWave. I have over than 30 years of experience in the software industry. I have a solid record in helping 1000s of students pass the ISTQB® Foundation exam and I am here to help you pass the ISTQB® advanced level test Analyst certification exam. I will teach you everything you need to know to pass the exam from the first trail, I will provide you with 100s of sample questions and I will answer any of your questions 24 x 7\nThis course covers the syllabus for the Advanced Test ِAnalyst certification and will help you prepare for the exam.\n\n\n\"This material is not accredited with the ISTQB®\".\nISTQB® is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "Anyone wishing to gain the ISTQB® Advanced Level Test Analyst",
        "Testers",
        "Business analysts",
        "Domain testers, customer and users"
      ]
    },
    {
      "title": "Instant Test Driven Development with Java, JUnit and Mockito",
      "url": "https://www.udemy.com/course/instant-test-driven-development-with-junit/",
      "bio": "Go from Zero to Hero with Java, JUnit and clean, tested code.",
      "objectives": [
        "Write unit tests with confidence. Understand the various patterns and techniques to apply in different situations.",
        "Go from Zero to Hero with your Java TDD skillz!"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of programming and Java."
      ],
      "description": "This course will get you up to speed with JUnit and TDD  in next to no time with a mixture of Instant Demos, Deep Dives and Philosophy lectures.\nIn the Instant Demo you'll quickly get a feeling for how things will work once you're an expert. No getting distracted by detail, just the real life feel of using the techniques.\nWith a Deep Dive we will unpack all the necessary detail to enrich your understanding.\nThe Philosophy lectures will give you the fundamentals from which you can grow your own knowledge.\nBuilding your knowledge from the inside out with realistic examples means you will understand TDD quickly and deeply. Hopefully this course will make you excited about what TDD can do for you.\nIncludes:\nJUnit 4.12\nMockito 2\nSpring Testing\nParameterized tests\nVarious other JUnit runners\nWritten by the author of The Coding Craftsman WordPress blog.",
      "target_audience": [
        "Java developer looking to become an expert in Test Driven Development and the JUnit ecosystem."
      ]
    },
    {
      "title": "Testing React apps with React Testing Library (RTL)",
      "url": "https://www.udemy.com/course/testing-react-apps-with-react-testing-library-rtl/",
      "bio": "Learn how to test React components with React Testing Library, the recommended library from Facebook for testing.",
      "objectives": [
        "The principles of Test Driven Development (TDD)",
        "Know what React Testing Library is and its differences with Enzyme",
        "Understand how Jest works with React Testing Library",
        "Query elements with getBy, queryBy, findBy, getAllBy, queryAllBy, findAllBy",
        "Simulate user interaction with the fireEvent and userEvent API",
        "Learn about coverage and debugging",
        "How to mock third party libraries like Axios",
        "How to use Typescript with a React app"
      ],
      "course_content": {},
      "requirements": [
        "Be famliarized with React components"
      ],
      "description": "Welcome to testing React components with React Testing Library! In this course, you will learn lots of things. You will learn:\nThe principles of Test Driven Development\nKnow what is React Testing Library (RTL) and its differences with Enzyme (another popular test framework for React)\nUnderstand how Create React App (CRA) works.\nUnderstand how Jest works with RTL\nHow to test with RTL and query elements with:\ngetBy, queryBy, findBy, getAllBy, queryAllBy, findAllBy\nHow to simulate user interaction with the fireEvent API\nHow to simulate user interaction with the userEvent API\nTesting components in isolation (unit tests)\nLearn about coverage and debugging\nHow to mock 3rd party libraries like Axios and mock a GET request\nLearn about the pitfalls of CRA\nYou will have all the fundamental tools to test any React component and have that coverage at 100%!\nHave fun, and never stop learning!",
      "target_audience": [
        "Web developers",
        "Full stack developers",
        "Developers interested in Test Driven Development",
        "Front-end developers"
      ]
    },
    {
      "title": "Selenium Mastery: Apply What You Learn Here Today By RicherU",
      "url": "https://www.udemy.com/course/selenium-webdriver-20-a-beginners-guide-to-selenium/",
      "bio": "Understanding how to use Selenium, JUnit, and Maven will give you value to your company that can't be replaced.",
      "objectives": [
        "Create an Enterprise Level Selenium Test",
        "Set Up JUnit and understand why to do so",
        "Explain to someone else why automated testing is so important.",
        "Install and configure all the tools necessary to run Selenium",
        "Set up a full stack testing framework",
        "Install and setup Maven",
        "Install and setup Jenkins",
        "Install and setup Serenity",
        "Install and setup Eclipse"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of any programming lanuage is helpful"
      ],
      "description": "\"I knew nothing about Selenium, Eclipse or even Java before I started this course. Now I feel confident I can take what I've learned and practice it in the working environment. Hoping more videos come soon. The teacher is very knowledgable.\" - Peter Kirby\nSelenium WebDriver is one of the hottest skills a person can learn today. If you learn Selenium and this suite of tools you will be key to any team. In learning these skills you can be the person to deliver Continuous Integration to your team.\nContinuous Integration is still not achieved in most companies today, and in this course you will learn the suite of tools that provide just that functionality.\nBeing a tester is one of the most important and rewarding jobs a person can imagine. Being an Automated Tester is 1 up from that. Imagine the mundane way that people feel every day running the same exact tests day in and day out from a test manual. Selenium removes the need for that to ever happen again. In this course you will learn the skills necessary to make you a key role in any company. We use Udemy as the website you are testing against so we know we are testing against something at a enterprise level.\nIn this course we talk about\nSelenium WebDriver 2.0\nJUnit\nMaven\nFireBug\nFirePath\nAnd even more tools to help you get to the next level as a tester almost immediately. Having an automated tester changed my life and made releasing my application almost instant.\nEnroll with confidence! Your enrollment is backed by Udemy's 30-day, no-questions-asked, money-back guarantee!",
      "target_audience": [
        "Any Entrepreneur creating a software application",
        "Any developer who wants a better career",
        "Any developer who wants to learn how to write automated tests for XTreme Programming"
      ]
    },
    {
      "title": "ISTQB® Test Management (CTAL-TM) V3.0/V 2012- Updated 2025",
      "url": "https://www.udemy.com/course/istqb-advanced-level-test-manager-ctal/",
      "bio": "Get ready and practice questions for the ISTQB® Advanced Level Test Manager certification (CTAL-TM)",
      "objectives": [
        "Prepare for the ISTQB® Certifie Tester Advanced Level certification - Test Manager exam (CTAL-TM)",
        "Advance your career by reinforcing your testing expertise.",
        "Learn through best practices and real examples",
        "Learn the most up-to-date testing software projects methodologies",
        "Deliver increased efficiency and effectiveness to your team",
        "It can help to reduce defects and raise the profile of your team.",
        "Learn from an industry recognized expert in software testing, quality and Project Management"
      ],
      "course_content": {},
      "requirements": [
        "The ISTQB® Foundation Certificate is a plus to understand the course and is a must to take the exam"
      ],
      "description": "This course contains the latest 2 versions of the ISTQB Test Manager syllabi: the ISTQB Test Manager 2012 and the new ISTQB Test Management  V3.0.\nYou can find the old version at the beginning and the newer version at the end of the course.\nYou need to study only one version.\nYou can still take the old exam according to the old version till May 2025.\n\n\nThe ISTQB® Advanced Tester Certification—Test Manager training course expands on the test techniques and methods introduced in the ISTQB® Foundation certification course and addresses those areas of the ISTQB® advanced syllabus specifically related to the Advanced Test Management certification.\n\nThe course focuses on the key areas that are vital for successful test management: the testing process, test management, standards, and test improvement processes, reviews, defect management, test tools & automation, incident management, and people skills.\nIt is very tough to prepare for this course by yourself because of the lack of ISTQB® Advanced Level Test Manager resources but this course is here to help you overcome this issue. I have included everything you might need to know to understand the syllabus of the CTAL-TM fully. I have included explanations to every topic in separate short videos plus sample questions for you to practice for the exam,\nThe course is filled with hands-on exercises to help you practice the methods and techniques taught in this course. Video explanations of the sample questions of why and how to pick the right answer in a short time. I have also included extra videos that I thought will help in speeding up the process of comprehending the syllabus.\nMy name is Maged Koshty, the managing director of ExpertWave. I have over 30 years of experience in the software industry. I have a solid record in helping 1000s of students pass the ISTQB® Foundation exam and I am here to help you pass the ISTQB® advanced level test manager certification exam. I will teach you everything you need to know to pass the exam from the first trial, I will provide you with 100s of sample questions and I will answer any of your questions 24 x 7\nThis course covers the syllabus for the Advanced Test Management certification and will help you prepare for the exam.\n\n\"This material is not accredited with the ISTQB®\".\nISTQB® is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "Anyone wishing to take the ISTQB® Certified Tester Advanced Level Test Manager examination.",
        "Test Managers, Test Leaders and Test Program Managers, .",
        "Testers wanting to improve their knowledge in test management methodologies and techniques.",
        "Anyone involved in testing software project projects (including testers, engineers, analysts, consultants, software developers, customers, everyone)."
      ]
    },
    {
      "title": "Software Testing",
      "url": "https://www.udemy.com/course/software-testing-course/",
      "bio": "Lear all about software testing from industry expert.",
      "objectives": [
        "Understand software testing and basic testing terms",
        "Understand software lifecycle and testing role",
        "Understand specialized testing",
        "Understand test design",
        "Understand test management",
        "Understand test automation & tools",
        "Understand other skills in testing",
        "Getting to the next level in software testing"
      ],
      "course_content": {},
      "requirements": [
        "Working knowledge of computers"
      ],
      "description": "Almost half the jobs in software field are in the area of software testing. However, there is almost nil education on software testing to students in their curriculum at colleges and institutes. Also, for people already in the testing job, they have had very little formal software testing training. Hence, those who train and prepare themselves in software testing will be better positioned to grab these jobs and grow their careers in this field. This Software Testing Course will formally train you in software testing.\n</p>",
      "target_audience": [
        "Software Test Engineers",
        "Software Test Managers",
        "Software Quality Engineers",
        "Software Quality Managers",
        "Fresh graduates"
      ]
    },
    {
      "title": "The Complete Quality Assurance Course- Learn QA from Scratch",
      "url": "https://www.udemy.com/course/the-complete-quality-assurance/",
      "bio": "Learn QA Software Testing both Manual and Automation. Become Developer in Test and Kick-start your Career in IT.",
      "objectives": [
        "Foundation of Quality Assurance - Manual and Automation",
        "QA Automation Best Practices",
        "Quality Assurance guidance for starting your first IT job",
        "How to Write Test Cases",
        "Software Development Life Cycle",
        "Agile Methodology",
        "JIRA",
        "How to Find Bugs",
        "Automation Testing",
        "How to start your career as QA Automation Engineer (Developer in Test)",
        "UI Front-End Testing with Selenium",
        "Back-End testing with Postman",
        "REST API Testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Software Industry Foundation and Terminology": [
          "SDLC - Software Development Life Cycle",
          "Agile Methodology",
          "Software SCRUM Team Members and Responsibilities"
        ],
        "QA Manual Basics": [
          "Different Types of Testing",
          "What is a Software BUG",
          "What is a Test Case",
          "How to Create Test Cases",
          "Black Box Testing",
          "White Box Testing",
          "Cross Browser Testing",
          "UAT - User Acceptance Testing",
          "JIRA - Bug Tracking Tool",
          "What is Regression Testing",
          "What is Exploratory Testing",
          "Volume vs Load Testing",
          "When Should You Automate?",
          "Interview Questions - Preparing for Your First Manual QA Job",
          "QA Salary - How Much Money QA Makes",
          "Make Money Testing Websites from Home"
        ],
        "C# or Java - Which One is Better": [
          "C# or Java - Which One is Better"
        ],
        "Introduction to Programming with C#": [
          "Intro",
          "Installing Visual Studio - Your Development Environment",
          "Understand Basic Programming",
          "Understand Variables",
          "Boolean - True or False",
          "Creating Simple Calculator",
          "Creating Simple Greeting Program",
          "If-else statements - Our First Code Logic",
          "Switch Statements",
          "For Loops",
          "While Loops",
          "Methods",
          "Arrays"
        ],
        "Automation Testing with Selenium and C#": [
          "Selenium Automation Introduction",
          "Installing Visual Studio - Your Development Environment (if you haven't already)",
          "What is Selenium",
          "Create Your First Project and Install Selenium",
          "First Steps in Selenium Automation with C#",
          "Use NUnit for Your Testing Automation Framework",
          "Assert in Selenium - Get Page Title and Assert the Result",
          "Element Selectors - ID, ClassName, XPath - Create Amazon Automation Program",
          "Facebook Automation Program"
        ],
        "Introduction to Programming with Java": [
          "Install Java JDK",
          "Install IntelliJ IDEA + Create Your First Java Application",
          "Understand Basic Programming using Java",
          "Variables",
          "Getting User Input",
          "Building a Basic Calculator",
          "Building a Basic Greeting Program",
          "If-else statements - Your First Code Logic",
          "Switch Statements",
          "For Loops",
          "While and Do While Loops",
          "Methods",
          "Arrays",
          "Classes and Access Modifiers"
        ],
        "REST API (Back-End) Testing with Postman": [
          "Installing Postman",
          "First Steps in Postman",
          "Create your first API Request",
          "Learn Collections",
          "Run Collections",
          "Variables in Postman",
          "Postman Scripting and Snippets",
          "Create Environments",
          "Create First Postman Test",
          "How to Debug",
          "Learn Workspaces"
        ],
        "BONUS: Cyber Security for Beginners | Learn Pen Testing & Ethical Hacking": [
          "Terminology",
          "What is Penetration Testing (Ethical Hacking)",
          "Why Do We Need Penetration Testing",
          "Who is Doing the Penetration Testing",
          "How to Perform Penetration Testing (Security Testing Steps)",
          "What Problems We Solve With Penetration Testing",
          "Most Common Penetration Attacks",
          "SQL Injection",
          "Cross-Site Scripting (XSS) Attack",
          "Tools for Penetration Testing",
          "What is OWASP",
          "Automated Scanning for Vulnerabilities using FREE Tool",
          "OWASP Resources",
          "OWASP Top 10 Vulnerabilities",
          "Web Security Testing Guide",
          "Testing Guide Checklist (Follow These Steps When Performing Security Testing)",
          "Mobile Applications Security Verification Standard (Mobile AppSec)",
          "Bug Bounty Programs - Everything You Need to Know"
        ],
        "BONUS Research: QA Salary - How Much Money QA Makes (Updated)": [
          "QA Engineer Salary in November 2023"
        ]
      },
      "requirements": [
        "You don't need any experience to start with this course. Everything will be explained for complete beginners."
      ],
      "description": "This course is updated frequently with new lessons, projects and resources!\nNovember 2023 - NEW!  New Section and Lecture Added - BONUS Research: QA Engineer Salary in November 2023\nOctober 2023 - NEW!  Downloadable Resources Added to the Introduction to Programming with C# Section - Variables, If-else Statements, Booleans, Loops and Arrays PDF materials.\nSeptember 2023 - NEW! Videos Added - Penetration Testing for Beginners | Learn Cyber Security & Ethical Hacking + Downloadable Resources Added\nMay 2023 - NEW!  Downloadable Resources Added - Performance Testing - Apache JMeter eBook\nApril 2023 - NEW!  Downloadable Resources Added - User Documentation for JIRA Software, JIRA Agile Basics, Regression Testing, Exploratory Testing, Beginner Guide To Software Testing (Automation Included)\nMarch 2023 - NEW!  Downloadable Resources Added - Black Box Testing, Black Box Testing Techniques, Testing the Software with Blinders on, Software Engineering - White Box Testing, Cross Browser Testing, User Acceptance Testing\nFebruary 2023 - NEW!  Downloadable Resources Added - Common Software Errors, Understanding Software Test Cases, How to Write Good Test Cases\nJanuary 2023 - NEW!  Downloadable Resources Added - Different Types of Software Testing\nDecember 2022 - NEW!  Downloadable Resources Added - Software Development Life Cycle, Agile Team Roles\nNovember 2022 - NEW!  Downloadable Resources Added - eBook \"Agile for Dummies\"\nOctober 2022 - NEW!  New Section Added -  Introduction to Programming with Java + Downloadable Resources!\nStart Learning Quality Assurance in 2023!\n★★★★★ \"The course is very informative and helpful. The tutor explains the subject very clear and in a friendly manner. I will watch it one more time. It definitely worth to buy. Success\"\n★★★★★ \"This is one of the best QA software testing courses, everything was useful and explained very well\"\n★★★★★ \"Great automation tips and tricks, definitely worth it!\"\n★★★★★ \"Useful, in-depth walkthroughs. Instructor is knowledgeable, genuine and speaks in a calm, paced manner\"\n★★★★★ \"The best course for starting out with testing software. Every beginner QA should watch this\"\n★★★★★ \"Thank you for this useful information! This course is easy, not too fast and not too slow. Everything is explained clearly and to the point. I recommend this course!\"\n★★★★★ \"A good beginner course for someone who is looking for a QA profession. Very nice presentation!! Thanks\"\n\nIn This Course:\nYou will learn different ways of Software Testing and everything you need to start your first job as Junior Automation Quality Assurance Engineer\nThis course will give you the foundation and confidence to enter the IT Industry as Automation QA Engineer or Manual QA Engineer\n\nYou WILL Learn:\nWhat is a Test Case and how to write a Test Case\nWhat is Software Development Life Cycle\nWhat is Agile - Scrum and Kanban\nDifferent Types of Testing\nWhat is a BUG?\nBlack Box Testing\nWhite Box Testing\nUAT - User Acceptance Testing\nRegression Testing\nCross Browser Testing\nJIRA - Bug Tracking Tool\nBasics of Programming\nWhat is Selenium in Automation\nCreate your First Automation Project with Selenium\nNUnit Automation Framework\nAssertions in Selenium\nElement Selectors - ID, ClassName, XPath\nREST API Testing with Postman (Back-End Testing)\nYou don't need any experience to enroll, you will be guided step by step through this course\nYou will also get Bonus Materials to help you from the beginning\nThis course requires work in the beginning - just like any other thing in life\nBut the best thing in the world is when your start making positive changes in your life\nThis course teaches you the simplest way to enter the IT field - Quality Assurance!\nIf You Are Someone Who:\nWant to Become Quality Assurance Engineer\nWant to learn Software Testing\nWant to Change Career\nWant to achieve Financial Freedom and Enjoy Life\nEnroll in the Course Today and Get Started!\n\nThis course comes with a 30-day 100% Money Back Guarantee, so if you aren't happy with your purchase, you can get a refund - no questions asked!\nYou will also get:\n- Support and Answers to All Your Questions During the Course\n- Lifetime Access\n- Certificate of Completion\nNow go Ahead and Click the Enroll Button\nI'll See You in the First Lesson!",
      "target_audience": [
        "Anyone who wants to become Quality Assurance Engineer",
        "Anyone who wants to learn Software Testing",
        "Anyone who wants to start their first job in the IT field",
        "Anyone who wants to become QA Automation Engineer (Developer in Test)"
      ]
    },
    {
      "title": "2025 -Understand Docker and using it for Selenium automation",
      "url": "https://www.udemy.com/course/understanding-docker-performing-selenium-automation/",
      "bio": "Learn docker and containers from complete ground up",
      "objectives": [
        "Understand the basics of Docker",
        "Understand how Docker works and spawn running and image as an container",
        "Working with multiple containers",
        "Working with docker compose and Docker file",
        "Running Selenium Tests in Parallel on Dynamic Selenium Docker Grid",
        "Creating Tests which can spawn Ephemeral Selenium containers",
        "Running Selenium tests within container along with Application containers"
      ],
      "course_content": {
        "Understanding the ABC of Docker": [
          "Introduction and Installation",
          "Understanding and working with Docker Images",
          "Understanding Docker Containers",
          "Working with Docker CLI",
          "Understanding Docker Architecture",
          "Working with Windows Containers",
          "Understanding Docker Volumes",
          "Working with Docker Volume using SQL Server Images",
          "Understanding Docker Networking",
          "Connecting two Containers with Docker Networking (Frontend and Backend)",
          "Pushing and Pulling your custom docker images with Docker Registry",
          "Building Docker Image - NodeJS application"
        ],
        "Running Selenium Test with Containerized Selenium Grid and Application": [
          "Introduction and demo of final implementation",
          "Understanding Application Under Test",
          "Writing simple Selenium C# test with XUnit",
          "Setting up Dynamic Selenium Grid to run within Docker Container",
          "[YouTube Video] - Dynamic Selenium Grid [Skippable]",
          "Writing DriverFixture to handle RemoteWebDriver Instance and IDisposable",
          "Problem while accessing Application running Inside Docker container - Grid Node",
          "Running Selenium Grid container along with Application containers",
          "Adding more selenium test and run the test inside Selenium Node container",
          "Introduction to Parallel Selenium Test with Different browsers types",
          "Creating Browser Options to run various browser type of choice in Grid Nodes",
          "Parallel Selenium Test on Ephemeral Docker Node container with App Container"
        ],
        "Selenium Tests project to run as an Container": [
          "Introduction",
          "Building Docker Image for Selenium Test Project",
          "Running Ephemeral Selenium Test Container",
          "Running Selenium Test container along with Application Container - Same Network",
          "Adding Docker Compose file to run everything within container",
          "Summary",
          "Complete Source code"
        ],
        "GitHub Actions Basics": [
          "Introduction",
          "Understanding GitHub Action Workflows",
          "Working with Jobs, Steps and run in GitHub Actions workflow",
          "Working with Multiple Jobs in Workflow",
          "Understanding Context and Environment variables with Expressions",
          "Creating .NET application and running them in GitHub Actions workflow",
          "Understanding Triggers in GitHub Actions workflow",
          "GitHub Strategies and Matrix execution to execute in various environment combo",
          "Enable more verbose information of GitHub Actions workflow for debugging"
        ],
        "CI/CD of Selenium Tests, Microservices containers with GitHub Actions": [
          "Introduction",
          "Problem running Docker-compose file in GitHub Actions workflow",
          "Creating Shell script to execute Selenium Test containers",
          "Running Shell script from GitHub Actions pipeline",
          "Waiting for Selenium Test container to execute in pipeline",
          "Running Selenium Grid Setup Test in GitHub Actions Pipeline",
          "Summary"
        ]
      },
      "requirements": [
        "Basic understanding on Virtual machines and operating systems",
        "Understanding of Selenium automation code",
        "Basic understanding of C# is a plus"
      ],
      "description": "Understanding Docker and using it for the Selenium automation course is designed in such a way that anyone with zero knowledge of docker and its related concepts can get up to the speed easily without much effort.\n\n\nThis course is divided into the following sections, to make learning more streamlined and easier\n1. Understanding the ABC of Docker\n· Basic commands\n· Working with Multiple Docker containers\n· Understanding simple examples with WordPress and MySQL\n· Understanding Docker file\n· Understanding Docker compose file\n2. Running Selenium Test with Containerized Selenium Grid and Application\n· Writing Selenium C# test\n· Writing Selenium test with Dynamic Selenium grid\n· Writing Driver Fixture and how to handle problems accessing the application\n· Parallel Selenium test execution\n· Parallel Selenium test with Multiple browsers\n3. Selenium Tests project to run as a Container\n\n\nAll these three sections are intrinsic, meaning they are interdependent on each other and hence sometimes students may need to go back and forth to get into some related concepts.\nThe first section helps you understand the basics of Docker and get up to the speed of dealing with Docker and its related commands, whereas in the second and third sections we are going to automate a 3-tier application with Selenium C#.\nWe will be using the industry-standard way to use automate an application with Selenium and run a dockerized Selenium docker container along with the Application using docker-compose",
      "target_audience": [
        "This course is designed for Developers and Testers",
        "Since this course talk about infrastructure, its also for Devops"
      ]
    },
    {
      "title": "Absolute Beginner POSTMAN Training",
      "url": "https://www.udemy.com/course/absolute-beginner-postman-course/",
      "bio": "Learn POSTMAN without any previous knowledge with this easy-to-follow course",
      "objectives": [
        "In the end of this course you'll be able to start working with POSTMAN",
        "You'll be able to create an end-to-end API testing projects using POSTMAN",
        "You will Download and Install POSTMAN",
        "You will understand POSTMAN UI",
        "You will create your first POSTMAN API Request",
        "You will learn how to CREATE a POSTMAN Collection",
        "You will learn how to RUN a POSTMAN Collection",
        "You will learn how to work with POSTMAN Variables",
        "You will learn how to work and setup POSTMAN Environments",
        "You will learn how to EXPORT POSTMAN Requests",
        "You will learn how to Run MULTIPLE REQUESTS in POSTMAN",
        "You will learn how to CREATE a MOCK SERVER in POSTMAN",
        "You will learn how to QUERY PARAMETERS in POSTMAN",
        "You will learn how to DEBUG a POSTMAN Request",
        "You will learn how to CHAIN REQUESTS with POSTMAN",
        "You will learn how to work with BASIC AUTHENTICATION in POSTMAN"
      ],
      "course_content": {
        "Let's Start": [
          "README before you start!.. Quick survey",
          "How do I download and install POSTMAN",
          "What is POSTMAN used for (UI Overview)",
          "Create API Request"
        ],
        "POSTMAN Collections": [
          "Create Collections",
          "Collection Runner"
        ],
        "Environment": [
          "Create Environment"
        ],
        "Manipulating Requests": [
          "Export requests in POSTMAN",
          "Run multiple Requests",
          "Chaining Requests in postman"
        ],
        "Mock Server": [
          "Create a Mock Server"
        ],
        "Query Parameters": [
          "How to Query parameters in postman"
        ],
        "Console Log": [
          "Console Log (Debug)"
        ],
        "Authorization in Postman": [
          "Basic Auth with Token"
        ],
        "Integration with Jenkins": [
          "Jenkins integration with POSTMAN"
        ],
        "Learning about Scripts": [
          "Test Scripts",
          "Snippets in POSTMAN"
        ]
      },
      "requirements": [
        "NO PRIOR KNOWLEGE OR EXPERIENCE WITH POSTMAN IS REQUIRED"
      ],
      "description": "- The course is mostly version independent so you don't have to install POSTMAN. You can use Web version, but it is recommended!;\n- Postman Chrome Extension is deprecated!\n\nThis is the Absolute Beginner POSTMAN Training!\n\n\nLearn how to use POSTMAN with ease while having fun!\nMy approach is to be practical and simple: we focus on real world examples. All the features presented is focused on getting the job done in the least amount of time possible. I'll be working in the latest version of the POSTMAN, and all the content is explained for all users.\n\n\nWhat will you learn?\nHow to download and install POSTMAN\nPostman GUI Overview\nCreation of Collections,\nWorking with Variables,\nUnderstanding of Environments\nIntegration with Jenkins\nRun from command-line and Test Scripts\n… and so much more!\n\n\nWhy is this course different?\nBy the end of this course you will be able to use POSTMAN with ease. You'll feel in control as you pursue and complete more ambitious projects. Whether you are contemplating a career change, considering freelancing opportunities, or developing a personal hobby, get started today on your POSTMAN journey!\n\n\nWho this course is for:\nThis course is PERFECT for beginner-level POSTMAN users.\nIf you’re an intermediate or advanced user, this course is NOT for you!\nThis course is NOT for students who want to learn about one particular topic in depth, for example, API Scripting Testing in POSTMAN. Instead, this is a comprehensive course that gives you a solid foundation on all the major topics in POSTMAN.",
      "target_audience": [
        "Beginner DevOps students curious about postman api",
        "Beginner QA Engineer curious about postman api",
        "Beginner Python developers curious about postman api",
        "Beginner Docker students curious about postman api",
        "Beginner Kubernetes students curious about postman api",
        "Beginner Jenkins students curious about postman api",
        "Beginner Maven students curious about postman api",
        "Beginner Gradle students curious about postman api",
        "Beginner Php developers curious about postman api",
        "Beginner Java developers curious about postman api",
        "Beginner Test Automation students curious about postman api",
        "Beginner Ruby developers curious about postman api",
        "Beginner API Testing students curious about postman api",
        "Beginner REST API students curious about postman api",
        "Beginner Manual Testing curious about postman api",
        "Beginner BDD students curious about postman api",
        "Beginner Webservices students curious about postman api"
      ]
    },
    {
      "title": "Automation testing with Puppeteer, Playwright and CodeceptJS",
      "url": "https://www.udemy.com/course/puppeteer/",
      "bio": "Learn E2E testing of Web Apps with Puppeteer, Playwright and CodeceptJS from complete ground up [2020 updated]",
      "objectives": [
        "Complete understanding of Puppeteer from ground up",
        "Understanding the basics of working different components of Puppeteer",
        "Understand Jest test runner framework",
        "Understand working with Cucumber and Cucumber reporting",
        "Understanding Page Object Model and advanced concepts of Puppeteer"
      ],
      "course_content": {
        "Puppeteer Basic and Getting started": [
          "Introduction and getting started with Puppeteer",
          "Installing Puppeteer in VS Code",
          "Writing super simple code with Puppeteer",
          "Working with Browsers and Pages in Puppeteer",
          "Working with connected and disconnected browsers in puppeteer",
          "Working with Keyboards and Mouse along with Mouse Hover",
          "Working with different Locators to identify UI elements from Page",
          "Working with Locator to navigate all pages in app and showing all menu texts",
          "Working with different Waiting Mechanism in Puppeteer",
          "Working with waits (Part B)",
          "Complete Source code"
        ],
        "Puppeteer distinguished features": [
          "Working with Page Traces",
          "Working with Page PDFs",
          "Working with Screenshots",
          "Working with Request Interceptions",
          "Working with Code coverage and Istanbul plugin",
          "Complete Source code"
        ],
        "Puppeteer Extended": [
          "Puppeteer Extended with Apify",
          "Complete Source code",
          "Record and Playback with Puppeteer",
          "Cross browser testing with Puppeteer (Firefox and Chrome)",
          "Complete Source code"
        ],
        "Jest with Puppeteer": [
          "Introduction to Jest",
          "Jest Installation with VS Code",
          "Understanding and working with Jest Matchers",
          "Working with Jest-Puppeteer",
          "Working with Jest and Puppeteer but without Jest-Puppeteer",
          "Complete Source code"
        ],
        "BDD with CucumberJS in Puppeteer": [
          "Introduction to CucumberJS with BDD",
          "Writing CucumberJS code",
          "CucumberJS Sharing code context",
          "Source code before world implementation",
          "Working with CucumberJS World to share context (Part A)",
          "Working with CucumberJS World to share context (Part B)",
          "Working with CucumberJS Hooks",
          "Working with DataTable in CucumberJS",
          "Complete Source code"
        ],
        "Page Object Model in Puppeteer": [
          "Introduction to Page Object Model in Puppeteer",
          "Writing Page Object Model",
          "Complete Source code"
        ],
        "Cucumber HTML Reporting for Puppeteer": [
          "Introduction and Installation of Cucumber HTML Reporting for Puppeteer",
          "HTML Reporting options",
          "Generating HTML report for export",
          "Complete Source code"
        ],
        "Extending Puppeteer with advanced coding practices": [
          "Introduction",
          "Creating and working with JS Classes",
          "Installing Babel JS Compiler",
          "Creating Library - Browser Library",
          "Creating Library - Puppeteer helper Library",
          "Replacing existing classes with libraries",
          "Created Page Object Model with Class Property with Custom Puppeteer Helper lib",
          "Created Page Object Model with Class Property with Custom Puppeteer Helper lib",
          "Complete Source code"
        ],
        "Puppeteer TidBits": [
          "Working with XPath and resolving common mistakes",
          "Working with FileUpload",
          "Debugging test code with VSCode",
          "Working with Accessibility testing with Puppeteer",
          "Device Emulation testing",
          "Working with MultiSelect using Puppeteer v2.0",
          "Complete Source code"
        ],
        "CodeceptJS with Puppeteer": [
          "Introduction to CodeceptJS",
          "Installing ang getting started with CodeceptJS",
          "Understanding CodeceptJS Syntax and using Puppeteer helper for CodeceptJS",
          "Generating report with CodeceptJS using Mochawesome",
          "BDD with CodeceptJS",
          "Parallel execution with CodeceptJS",
          "Complete Source code"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript is helpful",
        "Basic understanding of Web UI automation like selenium may be added advantage"
      ],
      "description": "[Updated to new course name]\nIn this course Automation testing with Puppeteer, Playwright and CodeceptJS we will learn a lot more details, not just about Puppeteer tool, but also the tools and techniques which can make puppeteer, even more, better for testing larger application.\nWe will start our discussion from a basic topic to more advanced concepts of the Puppeteer, Playwright, and CodeceptJS tools. So, basically, this course is updated to supported three tools in parallel such as\nPuppeteer\nPlaywright\nCodeceptJS\nThe reason for adding Playwright and CodeceptJS in the original Puppeteer course being, Playwright is an incarnation of Puppeteer tool and CodeceptJS act as a framework for both Puppeteer and Playwright, hence having knowledge in all these tools are a good combination for automating an application.\nPuppeteer\nIntroduction and Basics of Puppeteer\nDistinguished features of Puppeteer\nExtending Puppeteer\nJest with Puppeteer\nCucumber with Puppeteer\nPuppeteer with Firefox\nCucumber HTML Reporting  with Puppeteer\nPage Object Model with Puppeteer\nMigrating project from ES5 to ES6\nAdvanced concepts of Puppeteer\nPlaywright\nIntroduction and what is Playwright\nInstallation\nWriting super simple code and understand how Playwright is similar to Puppeteer\nCross-browser testing\nCodeceptJS support\nPlaywright CLI\nPlaywright Test Runner\nFolio - Custom Test runner framework\nCodeceptJS\nUnderstanding the framework\nHow to make use of CodeceptJS helpers\nCodeceptJS helper for Puppeteer\nCodeceptJS syntax\nReporting\nThe course covers topics that are not covered elsewhere on the internet and that makes the course more distinguished by itself.\nAs that said, at the end of this course, the source code repository in the course will act as a clear guideline of how to extend the course based on your requirements at your work.",
      "target_audience": [
        "QA",
        "BA",
        "Devlopers",
        "DevOps"
      ]
    },
    {
      "title": "React Testing Library and Jest: The Complete Guide",
      "url": "https://www.udemy.com/course/react-testing-library-and-jest/",
      "bio": "A complete, all-in-one guide to fully testing your React projects using React Testing Library and Jest.",
      "objectives": [
        "Everything you need to know about testing React Components using React Testing Library and Jest",
        "Understand how to simulate user events and data fetching in a test environment",
        "Verify your components the way your components work - before deploying them!",
        "Get practical, hands-on experience adding tests to a large React project",
        "Explore hidden aspects of testing that aren't covered in any other testing course",
        "Save time by building your own custom Jest matchers",
        "Focus on learning why best practices exist - and when to break them!"
      ],
      "course_content": {
        "Dive In - Let's Get Started!": [
          "How to Get Help",
          "Start Testing... Now!",
          "A Few Critical Questions",
          "Join Our Community!"
        ],
        "A Whirlwind Overview of Testing": [
          "Project Setup",
          "Required React Starter Files",
          "Adding the Form",
          "Handling User Input",
          "Rendering the List of Users",
          "Our First Test",
          "Element Query System",
          "Understanding ARIA Roles",
          "Understanding Jest Matchers",
          "test was not wrapped in act(...) Warning and Test Failure",
          "Simulating User Events",
          "Recording Function Calls",
          "Introducing Mock Functions",
          "Querying Elements by Labels",
          "Testing the UserList",
          "Getting Help with Query Functions",
          "Query Function Escape Hatches",
          "Another Query Function Fallback",
          "Testing Table Contents",
          "Avoiding BeforeEach",
          "Reminder on Async Await and act Warnings",
          "Testing the Whole App",
          "A Touch of Test Driven Development",
          "Feature Implementation"
        ],
        "Understanding Element Roles": [
          "Important Note about Chrome and RTL Book",
          "Introducing RTL Book",
          "A Few Notes on RTL Book",
          "Partial Role List",
          "Finding Elements by Role",
          "Finding by Accessible Names",
          "Linking Inputs to Labels",
          "Directly Assigning an Accessible Name",
          "Completed Roles Notebook"
        ],
        "Finding Elements with Query Functions": [
          "Deeper into Query Functions",
          "GetBy, QueryBy, FindBy",
          "More on Single Queries",
          "Multiple Element Variations",
          "When to use These Queries",
          "When to use Async Queries",
          "Completed Queries Notebook"
        ],
        "Query Function Suffixes": [
          "Query Criteria",
          "When to Use Each Suffix",
          "Completed Criteria Notebook"
        ],
        "Matchers in Jest": [
          "Diving into Matchers",
          "Introducing Custom Matchers",
          "Implementing a Custom Matcher"
        ],
        "Big Project Overview": [
          "Required Project Setup - Do Not Skip",
          "App Overview and Setup",
          "The Tech in This Project",
          "The Path Ahead",
          "A Process for Debugging",
          "Understanding Data Flowing Into the Component",
          "Developing a Test and a Fix",
          "Looping Over Assertions",
          "Flexible Queries"
        ],
        "The Mysterious 'Act' Function!": [
          "Another Bug!",
          "Analyzing the Data... Again!",
          "Adding Router Context",
          "Unexpected State Updates",
          "Act Included with React Testing Library",
          "Using Act (Hopefully Not!) with RTL",
          "Solving the Act Warning",
          "Module Mocks",
          "Absolute Last Ditch Act Solution",
          "Checking the Link Href",
          "Implementing the Feature",
          "Checking the Icon",
          "Checking the Link"
        ],
        "Handling Data Fetching in Tests": [
          "Easy Fix, Hard Test",
          "Options for Testing Data Fetching",
          "Using a Request Handler",
          "Initial MSW Setup",
          "Inspecting the Component State",
          "Effective Request Testing",
          "An Issue with Fake Handlers",
          "Easier Fake Routes - Here's the Goal",
          "Making a Reusable Create Server Function"
        ],
        "Tests Around Authentication": [
          "Testing Authentication",
          "Understanding the Auth API",
          "Order of Execution",
          "Scoping Test Hooks",
          "Act Warnings... Again!",
          "Assertions Around Auth Links",
          "Wait... It Doesn't Work!?",
          "Limiting Test Execution",
          "Using Debuggers in Tests",
          "Test Debugging in Action",
          "One Last Debugging Hint",
          "It Is a Caching Issue!",
          "Solving the Caching Issue"
        ]
      },
      "requirements": [
        "No testing experience is needed!"
      ],
      "description": "Congratulations! You've found the most popular, most complete, and most up-to-date resource online for learning how to test React apps with React Testing Library and Jest!\nThousands of other engineers have learned how to test, and you can too. This course uses a time-tested, battle-proven method to make sure you understand exactly how testing works, and will get you a new job working as a software engineer or help you build that app you've always been dreaming about.\nThe difference between this course and all the others: you will understand the design patterns used by top companies to test the largest React apps around.\nTesting is used to verify your code works as expected. This provides a set of unique benefits to any frontend:\nAuthor smaller, easier to understand codebases\nDeploy your code with confidence that it will behave correctly\nTest each portion of your app separately - limit the chance of interrupting your users\nAllow each of your engineering teams to work independently\nChange your codebase without worrying about breaking an existing feature\nTesting is a popular topic, but there is a lot of misinformation online. This course has been developed with input from top engineers to ensure total technical accuracy.\n----------------------\nWhat will you build?\nThis course focuses on testing components in a variety of different environments.  You will begin by writing tests for a small mini-project, just to get some quick initial experience.  From there, you'll learn about React Testing Library and all of its functionality by building a series of interactive cheatsheets.  You can use these cheatsheets as a future reference to easily remember the intricacies of testing.  Finally, you'll add tests to a rather large React app, complete with authentication, data fetching, and navigation.\nHere's a partial list of some of the topics you'll cover:\nCustomize your test environment by writing custom Jest matchers\nLearn how to debug your tests by fixing many bugs\nRun tests faster by implementing a fake data-fetching process\nUnderstand best practices by working on a large React project\nSee an exhaustive list of all the functionality packed into React Testing Library\nEnhance your element-selecting powers by using the ARIA Role system\nGet experience testing authentication and routing\nWrite more efficient tests by learning dozens of testing shortcuts\nFinally understand the most mysterious function in React - the 'act' function!\nLearn multiple ways of handling third-party libraries in a test environment\nUse Jest to 'mock' functions and libraries\nI spent the early years of my software engineering career writing tests non-stop.  Every single day, I practiced Test Driven Development to write thousands of lines of code while being mentored by top industry engineers.  Let me share this knowledge with you.  Testing is one of the topics I am most passionate about, and I want you to get as excited as I am.  Sign up today and join me!",
      "target_audience": [
        "Software engineers looking to better understand the world of testing"
      ]
    },
    {
      "title": "Learn Agentic AI – Build Multi-Agent Automation Workflows",
      "url": "https://www.udemy.com/course/agentic-ai-for-automation-multi-agent-autogen/",
      "bio": "Build Autonomous AI Agents with AutoGen & MCP –End-to-End Agentic AI Workflows with 6 Agents for Real-World Automation",
      "objectives": [
        "Get a detailed understanding of LLMs, AI Agents, MCP, Multi-Agent Systems, and Agentic AI",
        "Build Multi Agentic workflows using Microsoft AutoGen Framework",
        "Develop Specialized Agents such as Jira Agent for Bug analysis, Playwright Agent for browser Automation, API Agent for testing, DB Agent for data analysis",
        "Build intelligent, autonomous AI agents that collaborate, self-correct, and execute complex tasks without constant human intervention",
        "Understand the power of Context Engineering to enable AI agents to work effectively toward defined goals",
        "Gain a thorough understanding of AutoGen framework concepts including Assistant Agents, human-in-the-loop collaboration, termination strategies, and state-savin",
        "Build an Agent Factory design pattern to create reusable specialized agents for multi-purpose use",
        "Get in-depth knowledge of MCPs and how their configurations are defined for real-world applications"
      ],
      "course_content": {},
      "requirements": [
        "None. Basic knowledge of Python helps, but it is also covered in the last section of the course as optional learning."
      ],
      "description": "Welcome to the future of AI automation – Agentic AI with the AutoGen Framework. This course is your ultimate guide to building intelligent, autonomous AI agents that collaborate, self-correct, and execute complex tasks without constant human intervention.\nEven if you're new to this space, we start from the absolute basics—no prior knowledge of agent frameworks is required.\nYou’ll start by mastering the core foundations – Large Language Models (LLMs), AI Agents, Multi-Agents, and the Model Context Protocol (MCP), which serves as the backbone for agent-to-tool communication. Next, you’ll learn how to engineer contexts and craft prompts that unlock the true potential of your AI agents.\nThrough hands-on projects, you’ll build real-world agents like Browser Automation Agents, Database Agents, API Agents, and Jira Agents. We’ll go beyond theory with advanced collaboration patterns, including multi-agent group chats, context-driven workflows, and automated validation.\nBy the end, you’ll have the skills to create production-ready agentic systems using the Agent Factory Pattern, empowering you to design reusable, scalable, and highly efficient AI workflows.\nIf you’re ready to level up from AI users to AI builders, this course will give you the tools and mindset to lead the next wave of AI innovation.\nThis course uses Python Stack & Python basics has been thoroughly discussed in the last section of the course for brush up.",
      "target_audience": [
        "AI Engineers",
        "QA Engineers",
        "Developers",
        "Software Engineers",
        "Business Analyst /Managers"
      ]
    },
    {
      "title": "ISTQB Foundation Level (CTFL) V4.0 + Practice Exams - 2025",
      "url": "https://www.udemy.com/course/certified-tester-foundation-level-ctfl/",
      "bio": "Be an ISTQB certified tester and Learn the basics of Software testing principles and techniques",
      "objectives": [
        "Prepare for the ISTQB® foundation level certification exam (CTFL)",
        "Understand the key issues in testing software applications.",
        "Learn how to design tests that adequately cover requirements and business events.",
        "Advance your career by reinforcing your testing expertise.",
        "Learn from an industry recognized expert in software testing and quality"
      ],
      "course_content": {},
      "requirements": [
        "A basic software life cycle background is highly recommended",
        "very basic software programming is needed"
      ],
      "description": "The course is a complete explanation of the ISTQB Foundation Syllabus V4.\n\n\n\n\n\"Watched the course through once and took notes of things that seemed important. Watched back a few of the videos based on practice tests. Passed with no other tools. Thanks Maged!\"---Paul Dodkins\n\n\"I had my exam yesterday, and this course really helped me! The curricula is very well structured, with spot-on examples and explanations. Moreover, the instructor is VERY responsive and dedicated. I recommend this course to anyone who wants to get this certification! Update: I passed my exam! Thanks Maged for this course!\"---Cristina Segarceanu-Popa\n\n\"I am deeply thankful to Mr. Maged for this course that helped me pass the ISTQB exam on the first try. I attended this course and practiced “ISTQB Foundation Level Practice Exams” from the same instructor, without reading any extra material!!! In fact, the syllabus couldn't get me focused. It's true Maged has a slight accent, but that didn't bother me at all, you get used to it after 2 videos. I highly appreciate his response time on the chat board - half a day - and the details he provides for all questions.\"---Oana Deliu\n\nWhy this course is shorter than the others?\nLet me assure you that this ISTQB CTFL course is complete. All the students who have taken this ISTQB CTFL course have passed the exam from the first trial. and the best thing about it is that they do it with minimum effort.\nI did provide this  ISTQB CTFL course hundreds of times before, and I have 1000s of graduated students.\nYou have nothing to lose, if you don't like it, you have 30 days money-back guarantee.\n\n\nThis course is designed for people seeking foundation-level certification based on the ISTQB certification program.  The terms used in this course are taken from the current ISTQB glossary.\nI have helped thousands of people get into the IT field as testers by just getting them certified using this course. I also have helped many people get a better job in a better company by taking this course.\nBesides learning the basics of software testing and the effect of testing and quality on the overall software life cycle, I'll concentrate heavily on helping you pass the exam from your first trial. and I do that by solving hundreds of questions with you and giving you exam tips in every area. and being with you answering all your questions all the time\nIf you face any sample question anywhere that you need to understand its answer, Kindly post it on the discussion board and I will be happy to answer it for you as soon as possible.\n\n\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "Testers, test analysts, test engineers, test consultants, test managers, user acceptance testers and software developers. This Foundation Level qualification is also appropriate for anyone who wants a basic understanding of software testing, such as project managers, quality managers, software development managers, business analysts, IT directors and management consultants."
      ]
    },
    {
      "title": "Learn Java Unit Test: Mockito & Powermock Complete Tutorial",
      "url": "https://www.udemy.com/course/learn-java-unit-test-mockito-powermock-complete-tutorial/",
      "bio": "JUnit 5 with Mockito and JUnit 5 with Powermock absolutly tutorial on JUnit 5 framework Java 16 and JoCoCo maven plugin",
      "objectives": [
        "Know the unit test F.I.R.S.T principles",
        "How to write the correct unit test in Java",
        "Fully understand the Mockito 3.x usage",
        "Fully understand the Powmock usage",
        "Fully understand the TDD methodology",
        "Unit test coverage by JoCoCo"
      ],
      "course_content": {
        "Introduction": [
          "Course Overall Introduction",
          "Requirements"
        ],
        "Overview understand mocking in unit test": [
          "Unit test F.I.R.S.T Principles introduction",
          "What is mocking",
          "Desgin the simple user account login web application",
          "Development the user login web application",
          "Unit test the user success login function with mockito",
          "Unit test the user failure login function with mockito"
        ],
        "Mockito complete tutorial": [
          "Mockito development environments setup",
          "How to create the mock object(4 approach)",
          "Mockito deep mock tutorial background",
          "Mockito deep mock and configure return value behavior practice",
          "Mockito Stubbing Statement- when...thenReturn & doReturn...when",
          "Mockito Stubbing statement - doNothing...when",
          "Mockito Stubbing statement - doNothing...when realistic example",
          "Mockito Stubbing statement- when...thenThrow & doThrow...When",
          "Mockito Stubbing statement- when...thenAnswer & doAnswer...when",
          "Mockito Stubbing statement - callRealMethod",
          "Mockito Stubbing statement - multiple return values",
          "Mockito Stubbing statement - Cascading code style",
          "Mockito Stubbing statement summary",
          "Mockito Spy: spy() and @Spy annotation",
          "Mockito Spy - Precautions",
          "Mockito argument matcher tutorial",
          "Mockito custom argument matcher",
          "Mockito verify method invocations",
          "Mockito verify with VerificationMode",
          "Mockito verify Interactions",
          "Mockito ArgumentCaptor",
          "Mockito @Captor annotation",
          "Mockito @InjectMocks annotation"
        ],
        "Mockito Bonus(Mockito inline module and BDD)": [
          "Mockito support BDD style code",
          "Unit test the static modifier method with mockito inline module",
          "Unit test the final modifier method with mockito inline module",
          "Appendix materials"
        ],
        "Powermock complete tutorial": [
          "WHAT is Powermock(Powermock overall introduction)",
          "WHY Powermock(powermock make all source code testability)",
          "Powermock development environments setup",
          "Powermock quick start",
          "Powermock mock the local variable @PrepareForTest",
          "Powermock whenNew...thenReturn stubbling statement",
          "Powermock mock static method @PrepareForTest -1",
          "Powermock mock static method @PrepareForTest -2",
          "Powermock mock final class with @PrepareForTest",
          "Powermock mock private method and verify",
          "Powermock Spying"
        ],
        "Powermock Bonus(Maven JoCoCo Plugin for unit test coverage)": [
          "JoCoCo introduction",
          "JoCoCo for unit test coverage report on-the fly instrumentation",
          "JoCoCo for unit test coverage report offline instrumentation",
          "Appendix Materials"
        ],
        "Course PPT & source code": [
          "ppt & source code"
        ]
      },
      "requirements": [
        "Basic knowledge of unit testing(Junit 5)",
        "Basic Java knowledge (version 1.8 or above)",
        "Basic Knowledge of Maven",
        "Experience of Intellij IDEA"
      ],
      "description": "**** Please enable the vedio cc function (captions ) *****\nLearn Java Unit Test: Mockito & Powermock Complete Tutorial contains below agenda, this course base on JAVA 16 and latest mockito 3.x version and latest powermock most detials guidance how to write the unit test code.\n1. overview understand mocking\n1.1 F.I.R.S.T Principles introduction\nFast\nIsolated\nRepeatable\nSelf-validating\nTimely\n1.2 what is mocking\n1.3 simulate the user login application\n1.4 unit test the user login function with mockito\n2. Mockito details tutorial\n2.1 how to mock objects\n2.2 deep mock\n2.3 mock object stubbling statement\nwhen...thenReturn\ndoReturn...when\ndoNothing...when\nwhen...thenThrow\ndoThrow...When\nwhen...thenAnswer\ndoAnswer...when\nwhen...thenCallRealMethod\ndoCallRealMethod...when\n2.4  Stubbing statement - multiple return values\n2.5 Stubbing statement - Cascading code style\n2.6 Spying\n2.7 Mockito argument matcher\n2.8 verify method invocations\n2.9  verify with VerificationMode\n2.10 Mockito verify Interactions\n2.11 Mockito ArgumentCaptor & @Captor\n2.12 @InjectMocks\n3. Mockito Inline  Module\n3.1 Mockito & BDD code style\n3.2 Mockito mock static method\n3.3 Mockito mock final classes & methods\n4. Powermock details tutorial\n4.1 what is powermock\n4.2 why need powermock\n4.3 powermock mock local variables\n4.4 powermock mock  static methods\n4.5 powermock mock final classes & methods\n4.6 powermock mock private methods\n4.7 powermock spying\n5. JoCoCo\n5.1 JoCoCo for unit test coverage report on-the fly instrumentation\nJoCoCo for unit test coverage report offline instrumentation",
      "target_audience": [
        "Java Developer",
        "JVM(Scala,Groovy,Koltin) Language Develop Engineer",
        "QA Developer",
        "Devops Engineer"
      ]
    },
    {
      "title": "Fundamentals of Software Testing Course",
      "url": "https://www.udemy.com/course/fundamentals-of-software-testing-course/",
      "bio": "Beginners Guide for Software Testing | Learn Software Testing, Manuel Testing, QA Testing, Automation Testing everything",
      "objectives": [
        "Fundamentals of Software Testing",
        "How Software Testing Carried out in Real life IT industry",
        "Everything a software tester should know | Manual Testing Automation testing , Unit testing API testing Black box testing , Grey box testing System Testing all",
        "Different Types of Software Testing | Software Testing Levels | Software Testing Methods"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Software Testing Course"
        ],
        "Software Testing Phase": [
          "Software Testing Phase of SDLC",
          "Challenges of Software Testing Phase of SDLC",
          "Testing Methods used in Software Testing",
          "Testing Levels in Software Testing"
        ],
        "Types of Testing": [
          "Types of Software Testing",
          "Functional Testing",
          "Load Testing",
          "Performance Testing",
          "Security Testing",
          "Integration Testing",
          "Useability Testing",
          "Compatibility Testing",
          "Regression Testing",
          "Sanity Testing",
          "Accessibility Testing",
          "Unit Testing",
          "System Testing",
          "User Acceptance Testing (UAT)",
          "Non-functional Testing",
          "QA Testing | Quality Assurance Testing",
          "API Testing",
          "A/B Testing | AB Testing",
          "Globalization Testing",
          "Compliance Testing",
          "Exploratory Testing",
          "Automation Testing"
        ],
        "Conclusion": [
          "Course Wrap up"
        ]
      },
      "requirements": [
        "No prerequisite for taking this course"
      ],
      "description": "Welcome to the Fundamentals of Software Testing course, This is the course that covers everything that you need to know about software Testing in the IT industry or everything any software tester should be aware of.\n\nIn this course you will learn all the fundamentals that you need to know about Software Testing from basics to more advanced concepts, so by the end of the course you will have a thorough idea of what actual software testing is and how software testing is carried out in the Real life IT projects.\nif you have been searching for a comprehensive, Easy to follow and well-organized, and practical course that takes you from zero to hero then this is the right Software Testing course for you.\nno prior knowledge of Testing is needed to take this course. Everything you need is right here so you don't need to jump back and forth between the random tutorial.\nWe will start with understanding the Software Testing phase of SDLC, what activities are part of this phase, and all the challenges of the testing phase.\nthen will move towards Testing in deep where we will understand the basics of testing including different testing methods, Different Testing levels and then we will cover the different types of testing,\n\nCourse Curriculum :\n\nSoftware Testing in the SDLC process\nSoftware Testing Phase of SDLC\nChallenges of the Software Testing Phase in the SDLC Process\n\n\nSoftware Testing Methods\nManual Testing\nAutomated Testing\nContinuous Testing\nBlack box testing\nGrey Box Testing\nWhitebox testing\n\n\nSoftware Testing Levels\nUnit Testing\nIntegration Testing\nSystem Testing\nAcceptance Testing\n\n\nTypes of Software Testing\nFunctional Testing\nmanual testing\nLoad Testing\nPerformance Testing\nSecurity Testing\nIntegration Testing\nUsability Testing\nCompatibility Testing\nRegression Testing\nSanity Testing\nAccessibility Testing\nUnit Testing\nSystem Testing\nUser Acceptance Testing (UAT)\nNon-functional Testing\nQA Testing | quality assurance\nAPI Testing\nAB Testing\nGlobalization Testing\nCompliance Testing\nExploratory Testing\nAutomation Testing\n\n\n\nalong the way, I will explain each and every concept involved in the software testing we will learn what, why, and how each concept is.\nIn this course, I assume you know absolutely nothing about Software Testing, and that's perfectly fine because I am going to cover software testing from scratch.\n\nAll these things we will learn via the Real Life examples and case studies. All of the above things are covered in just over 14+ hours of high-quality content. This is equivalent to a book with more than a thousand pages! in a very clear and concise manner doesn't waste a single minute of your precious time!\n\n\nYou're not going to get this information in One Place Anywhere over the Web.\n\n\nAnd on top of all these, you'll get:\n\n\nClosed-captions generated by a human, not a computer! Currently, only the first few sections have closed captions but new captions are being added every week.\n\n\nOffline access: if you are traveling or have a slow connection, you can download the videos and watch them offline.\n\n\nDownloadable resource\n\n\nPREREQUISITES\n\n\nThere is no such Prerequisite for this course anybody who has an interest in learning the Software development process can take up this course. We will learn everything from scratch in this course.\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\n\n\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you are not happy for any reason, contact Udemy for a full refund within the first 30 days of your enrolment. All your money back, no questions asked.\n\n\nABOUT YOUR INSTRUCTOR\nI am Yogesh and I am going to be your instructor for this course. I am a software engineer with decades of experience working in Multinational IT companies. Till now I have taught thousands of students about Software development and the life Cycle.\n\n\n\n\nif you follow along with me in this course, It's my promise to you that you will have end-to-end knowledge of Software testing.\nAre you ready to jumpstart your career in Software testing Hit the enroll button and let's get started.",
      "target_audience": [
        "Software Tester who wants to understand the software testing in brief",
        "People who are working in the IT field",
        "Students who are wanted to take Software Testing as a career",
        "Anyone who want to learn fundamental of software testing"
      ]
    },
    {
      "title": "Robot Framework Test Automation - Level 1 ( Selenium )",
      "url": "https://www.udemy.com/course/robot-framework-level-1/",
      "bio": "Robot Framework 5.0 is the fastest & easiest way to do Selenium, API, and database test automation!",
      "objectives": [
        "Install & configure the Robot Framework test automation tool plus libraries like Selenium, API, database, and more",
        "Create & run your first Robot Framework test automation script (Selenium Webdriver example)",
        "Understand the basics of many Robot Framework test automation libraries (Selenium Webdriver, API, Database, XML, Files, etc.)",
        "Use the page object pattern to create more reusable, easier to interpret test automation scripts",
        "Run/execute Robot Framework automated tests in many different ways, including from a command window, batch files, Jenkins, and Windows task scheduler",
        "Create user defined keywords to express your tests in business domain terms instead of cryptic Selenium Webdriver code"
      ],
      "course_content": {},
      "requirements": [
        "This course assumes you have a software testing background and you know how to create a manual test case (containing a verification) as a basis for your automated tests.",
        "No previous programming or Selenium Webdriver or test automation experience is necessary"
      ],
      "description": "Join OVER 85,000 successful students in this legendary course!\nUDPATED in November 2022 for Robot Framework 5.0!\nIf you have been planning to learn or use Selenium test automation... start here!\nDrowning in an ever-expanding collection of regression test cases? You need to automate them! If you have been too intimidated to learn test automation due to a lack of Selenium programming skills, you'll be thrilled to discover how easily Robot Framework will allow you to automate your tests.\nRobot Framework is a pre-built test automation framework. By comparison... Robot Framework is much easier to learn than Selenium Webdriver (with Java, Python, C#, or PHP) because your scripts are written with English words instead of code.\nIf you're already an experienced user of Selenium Webdriver, Cucumber, or QTP/UFT, you'll quickly learn how elegant and capable Robot Framework is compared to those tools.\nThis 6+ hour video course will:\n\nProvide an overview of the free, open source Robot Framework test automation tool\nTeach you how to install & configure Robot Framework plus libraries for Selenium, API, database, and more\nHelp you create & run your very first Robot Framework Selenium test automation script in just minutes\nShow you exactly how to create a Robot Framework Selenium Webdriver test automation script more easily\nShow you how to make a simple test automation script much more efficient & readable\nHelp you discover how Robot Framework's variables & page objects can make your test automation scripts more flexible\nWalk you through the basics of testing web (Selenium), API, database, XML, and files tests\nThere is no faster or more intuitive way to learn Robot Framework and Selenium Webdriver test automation!\nThe course assumes you know absolutely nothing about Robot Framework test automation, and walks you through each detail of installation & setup to get you heading in the right direction immediately. The crisp, clear, articulate audio will ensure you quickly understand every detail.",
      "target_audience": [
        "If you need to perform automated tests on a wide variety of browsers, mobile devices, APIs, databases, and file systems, this course is for you. Manual testers with no programming background will love how easy Robot Framework is to learn & use. Even if you're an experienced Selenium Webdriver or Cucumber user, you will appreciate how capable & elegant Robot Framework is for test automation."
      ]
    },
    {
      "title": "Postman - Learn API Testing from Scratch with Live Projects",
      "url": "https://www.udemy.com/course/postman-api-automation-testing-with-javascript/",
      "bio": "Basics to Advanced Postman Automation tutorial from scratch to learn API /Web Services testing with CI/CD Integration",
      "objectives": [
        "Understand how to Perform API Testing with Postman",
        "Complete knowledge on Postman tool and its features",
        "Learn how to Automate Rest API's with Json parsers in easy way using Postman",
        "Learn Soap WebServices Automation with XML Parsing through Postman",
        "Understand how to use ready made features like Environments, variables, Workflows, collection runners, Data driven testing for Automation",
        "Learn usage of Newman tool with Postman and running tests through CLI commands",
        "Integrate Postman Automation with Jenkins CI/CD Integration with neat HTML reports of Automation results",
        "Understand how to collaborate with in team on Postman source code including Version control features"
      ],
      "course_content": {
        "Introduction to Postman tool for testing API's in Collections": [
          "Introduction to Postman Tool and its features",
          "Important resources information to learn API Basics"
        ],
        "Getting Started with Postman tool with its setup and Sample Project to Automate": [
          "Install Postman tool and create new Workspace in Postman Account",
          "What are Collections in Postman and how to create http requests under it",
          "Build Library API requests in Postman tool and validate responses",
          "Knowledge Check for Section-2"
        ],
        "Importance of Postman Variables and Environments for Automation Testing": [
          "Walk through the Automation Scenarios Scope for the Library API's",
          "What are Environments in Postman? How to create them",
          "How to create variables in Postman with different Scopes",
          "Getting started with Scripting in the Postman",
          "How to dynamically generate values from variables into input Payload requests",
          "Knowledge Check on Section-3"
        ],
        "Postman Scripting Editor types and Response Assertion validations": [
          "Assertions in Postman and how to use that in Scripting window",
          "Running set of tests together in the Collection as automated runner",
          "Validating Json response with the Input data of other API through Automated code",
          "What is Json Schema and how to validate it with Postman Scripting",
          "Knowledge Check on Section-4"
        ],
        "Data Driven Testing with Postman and Dynamic Workflow Executions": [
          "Functional logic validations with Postman Scripting Assertions",
          "How to perform Data driven testing from CSV to Postman requests Scripts",
          "How to handle Error handling Scenarios in API Tests with Postman",
          "How to prepare workflow of Execution Smartly with Postman Scripting",
          "Library API Automation Project code download"
        ],
        "Handling OAuth 2.0 Authenticated Google API's with Postman": [
          "Introduction to OAuth 2.0 and different Grant types",
          "Understand Grant Type Authorization flow with real time example",
          "Flow procedure in achieving OAuth 2.0 Authentication mechanism",
          "Details on Practise OAuth 2.0 project to retrieve Courses list",
          "API Contract and Code download"
        ],
        "End to End example of Parsing Complex Nested Json responses": [
          "Preparing Automation Scripting to grab the Access token into Actual request",
          "Learn Java Script filter map reduce functions to parse array",
          "How to parse Complex Nested Json response through Json object",
          "Solving Functional validations by parsing nested json through JS functions",
          "Retrieving Course titles from Web Automation Json object through Postman Script",
          "OAuth Automation Project code download"
        ],
        "Mock Servers & Schema validations with Postman": [
          "What is Json Schema? How to validate the given Schema",
          "Sample Json response & Generate Schema from given Json - Example",
          "How to automate the Jso Schema validation through Postman",
          "What are Mock servers? Why do we need them in real time projects",
          "Create Mock Servers in Postman and create sample examples",
          "Functional Mocking Examples through Postman - Part 1",
          "Functional Mocking Examples through Postman - Part 2"
        ],
        "Soap WebServices Automation through Postman for XML response validations": [
          "Understand Soap WebServices to automate through Postman tool",
          "Create Soap Collection to start testing Soap WebServices in Postman",
          "Postman Script to parse Soap XML responses and validate the data",
          "How to Parse complete Soap XML response as string for Assertion validations",
          "Soap Project Automation Code download"
        ],
        "What is Newman? Importance of Newman for end to end API Automation": [
          "What is Newman and importance of it in Postman Automation Execution",
          "How to run Postman scripts from Newman CLI commands"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Postman - The Most popular API tool to build Automated API/WebServices Tests with very minimal code in quick and easy way.\nThis tool comes with Powerful JavaScript editor  (Postman object) which helps us to perform various assertions inside the tool to validate your API Tests.\nThis course starts from the scratch with Postman fundamentals and then gives you the deeper understanding on various ready made Postman features to build  Framework like Variables, Environments, Workflows, Data driven components and Pm object which helps to quickly Setup Automation lab for Testing.\nPostman Supports various types of Services like  Rest API's , Soap Web services, GraphQL Testing. etc. There is discussion on how to automate all these services types with the examples in the course.\nThis tool comes with Powerful Integration of NewMan tool to run the Automated Tests from CLI which can also be Integrated with Jenkins for CI/CD Integration.\nAll the above features are clearly demonstrated in the course with real time examples from Scratch along with API Authorizations like OAuth.\nBelow is high level content this Course Covers -\nPostman Setup\nCollections in Postman\nEnvironments in Postman\nVariables and their Scope\nGlobal, Collection, local variables and their usage\nDynamically generated variables in Postman\nUnderstand Rest API Automation with Postman\nAssertions in Postman\nCollection Test Runner in Postman\nValidating Json responses\nJson Schema validations in Postman\nData Driven testing with Postman\nError handling Scenarios in Postman\nWork flow execution methods in Postman\nParsing complex Json responses with Pm object\nUnderstand Soap WebServices Automation with Postman\nOAuth 2.0 Authentication Automation with Postman\nWhat is Newman and running tests through Newman\nNewman CLI options configuration\nPrepare HTML reports for Postman Automation execution\nIntegration Postman Automation to Jenkins for CI/CD Integration\nTeam collaboration with Postman\nVersion control Management with Postman\n\n\nGood Luck and See you in the Course :)",
      "target_audience": [
        "QA Engineers",
        "Automation Testers",
        "API testers",
        "Software Engineers"
      ]
    },
    {
      "title": "Protractor: End to End testing framework for AngularJS Apps",
      "url": "https://www.udemy.com/course/angularjs-protractor-tutorial/",
      "bio": "Protractor Tutorials on End-to-End testing on AngularJS websites. A wrapper over Selenium WebDriverJS library.",
      "objectives": [
        "Automate any Angular and non AngularJS websites using Protractor",
        "Learn various new locator strategies",
        "crack protractor interviews"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Javascripting"
      ],
      "description": "With a sudden increase in AngularJS websites current market demand is moving towards Protractor for automation. Now before we proceed further we first need to understand what exactly is Protractor?\nProtractor is an end to end testing framework specially designed to perform automation testing on AngularJS based web applications. Protractor API works as a wrapper over the most powerful Selenium WebDriver API and is built on top of WebDriverJS that uses native events and browser specific drivers to interact with web based application as a normal user would do.\nThere's a massive increase in locator strategies in Protractor which also allows you to test AngularJS specific elements including the existing locator that we get from WebDriver API without configuring or putting any extra effort. Waits and Syncs are handled in a more effective manner so we need to to worry about sync issues as well.\nProtractor is one of the end to end testing framework in AngularJS\nAdditional Locator strategies:\nBy binding\nBy repeater\nBy textarea\nBy model\nWebElement all\nWaitForAngular\nWebElement evaluate, etc.\nAbout course coverage:\nEnd to end testing on AngujarJS websites\nHandling elements on a Non-Angular websites\nDifferent locator techniques\nWriting Protractor tests\nJasmine concepts\nCreating test cases and test suites\nParallel and Multiple browser execution\nFramework designing using Page Object Model design pattern\nCreating common utilities",
      "target_audience": [
        "Manual testers",
        "Test Managers",
        "Automation Testers with Selenium knowledge",
        "AngularJS developers"
      ]
    },
    {
      "title": "Mastering Selectors/ Locators for Automation Testing!",
      "url": "https://www.udemy.com/course/mastering-locators/",
      "bio": "Master XPath, CSS selectors and more! - A core skill for Selenium Webdriver and all other forms of automation testing!",
      "objectives": [
        "Understand XPath and CSS Selectors in detail",
        "The different types of of XPath and CSS Selectors",
        "Full understand how to construct XPath and CSS Selector when there is no unique attribute available",
        "How XPath and CSS Selectors are used in Selenium",
        "The different types of methods available with XPath and CSS Selectors",
        "The differences between CSS and XPath selectors"
      ],
      "course_content": {
        "Introduction - Selectors & Test Automation Frameworks": [
          "Selectors & Test Automation Frameworks"
        ],
        "Why are Selectors / Locators so Important?": [
          "Why are Selectors / Locators so Important?"
        ],
        "System Under Test - (SUT)": [
          "System Under Test - (SUT)",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)"
        ],
        "DOM & Elements": [
          "DOM & Elements - Part 1/2",
          "DOM & Elements - Part 2/2",
          "DOM & Elements - Quiz"
        ],
        "CSS vs XPath": [
          "CSS vs XPath - Part 1/2",
          "CSS vs XPath - Part 2/2",
          "CSS vs XPath - Quiz"
        ],
        "Selector Tools": [
          "Selector Tools - Overview"
        ],
        "CSS Selectors - Introduction": [
          "CSS Basics- Intro",
          "CSS Basics - Quiz"
        ],
        "CSS - Combinators": [
          "Descendant & Direct Descendant",
          "Adjacent & Far Sibling",
          "Contains Both Classes",
          "CSS Combinators - Quiz"
        ],
        "CSS - Attribute Selectors": [
          "Exact, Ends in, Begins with & Contains",
          "CSS Exact, Ends in, Begins with & Contains - Quiz"
        ],
        "CSS - Pseudo Classes": [
          "Disabled, Enabled & Checked",
          "nth-child, nth-last-child & nth-of-type",
          "first-child & last-child",
          "CSS Pseudo Classes - Quiz"
        ]
      },
      "requirements": [
        "Minimal HTML & CSS knowledge is an advantage (but not mandatory)",
        "Minimal Selenium Webdriver or general automation knowledge would be an advantage (but not mandatory)"
      ],
      "description": "Selectors/ locators is at the heart of automation testing. Learning how to identify them (without relying on tools) is a critical skill to becoming an automation tester.\nLocators in Selenium, Cypress, WebdriverIO... can be referred to as one of the most critical components required to build effective and robust automaton tests, in turn making your tests become allot less Flaky. Its ideally the building block of all automation tests / scripts. It helps locate the GUI elements through which multiple user actions can be performed. These are one of the important parameters for scripting, and if they end up to be incorrect or brittle, they may lead to script failure. A good scripting base foundation requires elements to be located appropriately\nTools cannot be relied upon, as they do not often provide the most efficient selector/ locator available. Identifying selectors/ locators is also a common question asked in coding exercise during interviews.\nThis course teaches you:\nHow to identify selectors/ locators like a pro\nUnderstand the difference between the different types of locators\nThe best approach to identify them\nHow to write your own custom locators\nHow to prepare for interview questions relating to selectors/ locators\nHow to gain confidence in writing selectors/ locators so you do not need to rely on tools\nAnd more\nBy the end of this course you will be able to confidently identify and write your own custom locators without needing to rely on tools. This will provide you with the confidence and knowledge to write high quality Selenium test scripts.\nCome master this core skill, today!",
      "target_audience": [
        "Complete beginners with no prior knowledge on XPath and CSS selectors",
        "Manual Testers that would like to learn a core skill used by automation testers",
        "Selenium testers that would like to improve their XPath and CSS knowledge",
        "Selenium testers that would like to refresh their Xpath and CSS knowledge",
        "Anyone that's wanting to learn how to identify elements using the conventional selector / locator approach"
      ]
    },
    {
      "title": "Software Testing Simplified: 5 Steps To Land A Job In QA",
      "url": "https://www.udemy.com/course/land-a-job-in-qa-even-without-experience/",
      "bio": "Learn core skills needed for manual software testing and tips to land a job fast even without prior experience.",
      "objectives": [
        "Understand if software testing is a right career choice for you and if you will enjoy doing this job.",
        "Get a taste of software testing.",
        "Learn and practice core testing skills.",
        "Know the tools required for software testing.",
        "Learn a fast way to look for, apply and land a job with or without experience.",
        "New and innovative ways to search for a job in the current market and next few years to come. This applies to any field and not just testing."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What is your background?",
          "Course Outline"
        ],
        "Step 1 - Develop the right traits": [
          "5 Traits that will make you successful in this job"
        ],
        "Get hands-on experience": [
          "Why software testing and requirements"
        ],
        "Software development life cycle (SDLC)": [
          "SDLC",
          "Roles and responsibilities",
          "Demo - Test cases",
          "Types of testing",
          "Practice tests",
          "Reporting"
        ],
        "Tools": [
          "Must know tools."
        ],
        "Job search": [
          "Job search secrets",
          "Testing job description and must know skills",
          "Best resume tips",
          "Interview tips to make you confident for any job"
        ],
        "Summary": [
          "Summary and thank you notes."
        ],
        "BONUS: Artificial Intelligence/AI's role in Software Testing (NEW - Nov 2023)": [
          "Role of AI in Software Testing jobs",
          "Practice Test: How to use AI tools in manual software testing roles",
          "Conclusion"
        ]
      },
      "requirements": [
        "No prior software development/testing knowledge is required to do this course.",
        "Anyone with any background and experience level can do this course."
      ],
      "description": "Software Testing Crash Course: A Fast-Track to Your Dream Job (NEW Chapter on AI)\n\n\nWill AI tools replace software testers and make software testing job extinct?\nHow to navigate the changing landscape of technology and adapt\nPractice lesson on how to use AI tools in software testing job\n\n\nNOTE: THIS IS A CRASH COURSE!\n\n\nCourse Description:\nAre you new to software testing and want to learn the basics quickly and easily? This course is for you!\nIn less than 2 hours, you'll learn the core concepts of software testing, including:\nThe most important traits that you need to develop as a software tester\nCore skills that you need to develop, with practical hands-on lessons\nSoftware development life cycle, roles and responsibilities of various players, types of testing, test cases, test plans, test execution, defect management, and test reporting\nJob search tips that anyone can follow to land a job faster, even without applying\nResume and interview tips that will make you visible and confident to your potential employers\nUse of AI in Software Testing\nThis course is NOT comprehensive, but it's the perfect way to get started in software testing. You'll learn the most important things you need to know to land your dream job, and you'll even get some practice lessons to help build your portfolio.\nHere are just a few of the benefits of taking this course:\nLearn the basics of software testing in less than 2 hours\nGain the skills and knowledge you need to land a job as a software tester\nBuild your portfolio with practice lessons\nGet job search, resume, and interview tips from a seasoned professional\nYou will get over the fear of AI replacing the jobs and use AI to your advantage.\nDon't wait any longer! Enroll in the Software Testing Crash Course today and start your journey to a rewarding career in software testing.",
      "target_audience": [
        "Beginners who are curious about pursuing a career in software testing.",
        "Someone who wants to know the clear path and steps to land a testing job.",
        "This is not for someone who is looking for a bootcamp style or comprehensive course."
      ]
    },
    {
      "title": "Web Services Testing using SoapUI",
      "url": "https://www.udemy.com/course/web-services-testing-using-soapui/",
      "bio": "Become an expert in web services testing using the popular tool SoapUI",
      "objectives": [
        "Master SoapUI testing tool",
        "Become an expert in web services testing"
      ],
      "course_content": {
        "Intro": [
          "SoapUI Syllabus",
          "Introduction to Web Services",
          "Web Services and SoapUI",
          "Introduction to SoapUI"
        ],
        "Basic": [
          "SoapUI FAQs",
          "Installing SoapUI",
          "SoapUI Overview",
          "SoapUI Functional Testing",
          "Security Testing using SoapUI",
          "Installing local web services",
          "SoapUI Test Structure"
        ],
        "Mid Level": [
          "Test Structure: Test Steps",
          "Test Structure in SoapUI",
          "Tips for SoapUI beginners",
          "Intro to datadriven testing",
          "Getting started with datadriven testing",
          "Data parameters",
          "JDBC connection",
          "Introduction to Groovy language"
        ],
        "Advanced": [
          "Java VS Groovy comparison",
          "Getting started with Groovy scripting",
          "Groovy scripting in SoapUI",
          "Creating mock services",
          "CDATA overview",
          "Event Handlers",
          "Rest services",
          "Performance Testing",
          "Load Testing",
          "Continuing load testing",
          "SoapUI Reporting",
          "Customizing SoapUI reporting",
          "Summary"
        ]
      },
      "requirements": [
        "Basic knowledge of software testing fundamentals",
        "Passion to learn web services"
      ],
      "description": "This is another award winning and popular course from us and we are showcasing it on Udemy for the first time. Just like our other courses, we have kept all the intro and basic course videos for free and available for preview for your convenience so please feel free to explore and test drive it. If you want to become a master in Web Services Testing using SoapUI, look no further and don't lose the opportunity.\nWeb services are basically application components that communicate over open protocols. HTTP and XML are the baseline for web services. The invention of web services opened new doors for modern web application. Nowadays, we cannot imagine any software or web applications without web services. It has become a crucial part of modern web development. Web services testing is becoming a major part of quality assurance. QA teams require to keep web services in mind while planning for testing web applications. This is why web services testing skills have become very popular in today’s IT market. It is still a new technology in the market. As a result, web services testing using SoapUI tool has become one of the most in demand jobs in QA field. Many companies are still facing troubles to find required expertise in web services testing and SoapUI. Finding a end-to-end SoapUI training solution has not been easy yet. We have brought a compact SoapUI training solution that can be affordable to everyone. Our set of SoapUI and Web service training video covered all basic and advanced level concepts of SoapUI including introduction, SoapUI FAQs, Installing SoapUI, Function testing, security testing using SoapUI, Installing local web services, SoapUi tets structure, secret tips for beginners, datadriven testing using SoapUI, JDBC connection, Groovy language, Groovy scripting in SoapUI, creating mock services, CDATA, event handlers, testing REST services, load and performance testing using SoapUI, and creating customizing reports.",
      "target_audience": [
        "software testers",
        "Beginners in software testing field"
      ]
    },
    {
      "title": "API Test Automation | POSTMAN | SOAPUI | KATALON | JMETER",
      "url": "https://www.udemy.com/course/api-test-automation-beginners-hands-on-training/",
      "bio": "Step-by-Step training on API Basics, API Testing, API Automation, Postman, SoapUI, Katalon Studio, JMeter with Examples",
      "objectives": [
        "Basics of API",
        "How APIs work",
        "Basics of SOAP and REST",
        "API Test Automation from scratch",
        "SoapUI for API testing",
        "Postman for API testing",
        "Katalon Studio for API testing",
        "Data Driven Testing",
        "Command Line",
        "JMeter for API testing",
        "How to MOCK APIs",
        "Best Practices for API testing and Automation"
      ],
      "course_content": {
        "ABOUT INSTRUCTOR AND THE COURSE": [
          "Video message from Raghav",
          "About Raghav and this course ***Must Watch***"
        ],
        "INTRODUCTION": [
          "Introduction | What is a API Web Service | SOAP & REST",
          "API Testing Introduction |Why | Advantages | Tools"
        ],
        "SOAPUI | GETTING STARTED": [
          "SOAPUI | Introduction & Setup",
          "SOAPUI | GUI & Features"
        ],
        "UPDATE FOR DEMO APIS": [
          "401 Unauthorized Missing API key in ReqRes APIs"
        ],
        "SOAPUI | SOAP & REST PROJECTS": [
          "First REST Project",
          "Assertions in SoapUI",
          "Examples | GET, POST, PUT, DELETE REST API Requests",
          "Sample SOAP API Testing Project",
          "Sample SOAP API Testing Project 2"
        ],
        "SOAPUI PROPERTIES": [
          "Properties in SoapUI"
        ],
        "GROOVY SCRIPTS": [
          "Introduction to Groovy Sripts",
          "Groovy Scripts to GET and SET Properties"
        ],
        "SAMPLE PROJECTS": [
          "Sample SOAP Project",
          "Sample REST Project"
        ],
        "SOAPUI | REQUEST , TEST CASE , TEST SUITE , PROJECT": [
          "How to run a Request | GUI, Groovy, CMD",
          "How to run Test Case | GUI, Groovy, CMD",
          "How to run Test Suite | GUI, Groovy, CMD",
          "How to run a Project | GUI, Groovy, CMD"
        ],
        "LOGS": [
          "Logs in SoapUI"
        ]
      },
      "requirements": [
        "No prior experience is required. We will start from the very basics and go Step by Step",
        "Anyone with basic computers knowledge can take this course"
      ],
      "description": "Welcome to the ultimate hands-on course on API Test Automation! This comprehensive course is designed for beginners and experienced testers alike, providing you with the skills and knowledge needed to excel in API testing and automation using the most popular tools: Postman, SoapUI, Katalon Studio, and JMeter\nThis course offers a complete hands-on experience in API Test Automation\n\n\nWhat You Will Learn:\nBy the end of this course, you will be able to:\nUnderstand the Basics of APIs: Gain a solid foundation in what APIs are and how they function.\nAPI Testing & Automation Fundamentals: Learn the essential concepts of API testing and automation.\nCreate API Test Automation Frameworks: Discover how to design and implement robust API test automation frameworks.\nAPI Test Automation with SoapUI: Master the use of SoapUI for effective API test automation.\nAPI Test Automation with Postman: Learn how to leverage Postman for efficient API testing and automation.\nAPI Test Automation with Katalon Studio: Explore Katalon Studio and its capabilities for API test automation.\nAPI Performance Testing with JMeter: Understand how to conduct performance testing on APIs using JMeter.\nThroughout the course, you will learn valuable tips, tricks, and best practices that will empower you to create effective API testing and automation projects.\n\n\nCourse Highlights:\nHands-On Learning: Engage in practical exercises and real-world examples that reinforce your understanding.\nComprehensive Coverage: Gain in-depth knowledge of each tool and its application in API testing and automation.\nBest Practices: Learn industry best practices to enhance your testing processes and frameworks.\n\n\nWhy take this course?\nBy the end of this training, you’ll be able to design and implement complete API testing solutions.\nLearn how to handle real-world projects with confidence.\n\n\nWhether you are looking to kickstart your career in API testing or enhance your existing skills, this course is the perfect opportunity to gain practical experience and confidence in API test automation.\nLet’s get started on your journey to mastering API Test Automation!\n\n\nNever Stop Learning\nRaghav",
      "target_audience": [
        "Anyone who wants to learn API Test Automation from scratch",
        "Users who wants to learn API Basics and Testing Frameworks",
        "Users who wants to learn API Testing with Postman, SoapUI, Katalon Studio, JMeter"
      ]
    },
    {
      "title": "UiPath 2025 - Test Automation",
      "url": "https://www.udemy.com/course/uipath-test-automation/",
      "bio": "A test automation tool BETTER THAN SELENIUM!",
      "objectives": [
        "Install UiPath test automation platform on Windows",
        "Create UiPath test automation projects",
        "Create UiPath test steps using UiPath Studio Pro",
        "Publish automated tests into UiPath Orchestrator",
        "Create test sets in UiPath Orchestrator",
        "Run UiPath automated tests and trigger tests at a scheduled time",
        "Verify UiPath automated test outcomes",
        "Share automation components with UiPath RPA robots"
      ],
      "course_content": {
        "Intro to UiPath test automation": [
          "About Me",
          "Course roadmap",
          "UiPath test automation vision",
          "RPA vs. test automation",
          "What is a test automation framework",
          "UiPath vs. other popular test automation frameworks",
          "UiPath Studio demo",
          "UiPath Infrastructure & license overview",
          "Who can use the \"free\" version of UiPath",
          "Where to go for the fastest technical assistance"
        ],
        "UiPath Community Edition Installation (Windows)": [
          "UiPath installation Overview",
          "Install the UiPath platform",
          "Enable the \"Test Manager\" feature",
          "Validate your UiPath installation - create a bot!",
          "Install more UiPath activities",
          "Examine the installed Activities",
          "Setup UiPath browser extensions manually",
          "UiPath automatic version upgrades"
        ],
        "Explore UiPath test automation features": [
          "Create & open UiPath test automation project",
          "RPA Project vs. Test Automation Project",
          "QUICK START: Test automation features",
          "UiPath Studio - full interface tour"
        ],
        "Create, publish, and run tests": [
          "Overview",
          "Create 3 tests",
          "Run the tests locally",
          "Publish tests to Orchestrator",
          "Run a test set",
          "Update a test, re-publish, and re-run",
          "Schedule a test set"
        ],
        "Intro to UiPath Test Manager": [
          "Overview",
          "Test Manager interface tour",
          "Tour of demo/practice website",
          "Create requirements",
          "Create (manual) test cases",
          "Assign test cases to requirements",
          "Create a test set",
          "Execute tests manually",
          "EXERCISE: Create 2 more test cases",
          "SOLUTION: Create 2 more test cases"
        ],
        "Connect Test Manager, Studio, and Orchestrator": [
          "Connect Studio to Test Manager",
          "Create and link 4 automated tests",
          "Add verifications and publish tests",
          "Execute automated tests from Test Manager!"
        ],
        "Build \"quick & dirty\" automated tests": [
          "Overview",
          "Modify some default settings",
          "Finish \"Login with valid credentials\"",
          "Finish \"Login with invalid credentials\"",
          "Finish \"User can logout\"",
          "Finish \"Create new customer\"",
          "Publish and run from Test Manager"
        ],
        "Best practice recommendations": [
          "Overview",
          "Schedule test set in Orchestrator",
          "Parameterize tests with arguments",
          "Cross-browser testing",
          "Debugging tests",
          "Error handling",
          "Centralize & reuse locators",
          "Centralize & reuse workflows"
        ],
        "Next steps": [
          "Next Steps",
          "Discount links to my UiPath courses!!"
        ]
      },
      "requirements": [
        "User proficiency with Windows operating system",
        "Be familiar with the roles that MS Excel spreadsheets, MS Word, websites, and software applications fill in daily business life",
        "Consider taking the \"RPA Tech Primer\" course before (or in parallel) if you have weak tech skills",
        "Understand the basics of software testing (steps & verifications)"
      ],
      "description": "Selenium test automation has always been a bit hard to learn, has limited capabilities, and yields less than desirable results. In my Robot Framework courses, I teach how to use a free, pre-existing framework to make Selenium test automation much easier.\nNow that the wildly popular UiPath RPA platform offers test automation features, Selenium test automation has never been easier or more powerful!!!\nAll UiPath skills are HOT. I received a quote from a vendor recently and they are asking $207/hr. for their resources. Wow!\nIn this succinct & powerful course, 4-time UiPath MVP Bryan Lamb will provide you with the most critical UiPath skills for test automation including:\nUiPath platform installation\nUiPath Studio orientation\nCompare UiPath’s test automation vs. Selenium\nShow similarities & differences between an RPA process and a test automation project\nTest case structure\nExecuting automated tests locally and via the Orchestrator server\nSharing reusable automation workflows between RPA and test automation (this is HUGE!)\nHow to easily run tests on different browsers\nHow to easily create, publish, and run POWERFUL automated tests, and even PARAMETERIZE and SCHEDULE them to run any time you want on multiple machines concurrently without having to rely on a separate CI tool like Azure DevOps or Jenkins\nMy goal is to help you get up and running with UiPath test automation faster than any other method, so you can start saving time & money at your company, maximize the value of your UiPath tools & shared workflows, and level up your career!\nI will continuously add more content to this course over time. You'll be notified via email every time I make updates. Your satisfaction is SO important to me, so please let me know if there are any specific topics you'd like me to add to the course.",
      "target_audience": [
        "Manual testers who want to learn test automation with UiPath",
        "UiPath RPA developers who want to learn test automation",
        "Selenium Webdriver test automation engineers wanting a better & faster tool"
      ]
    },
    {
      "title": "Expert's Practical Guide of API Testing using Postman-2025",
      "url": "https://www.udemy.com/course/testing-using-postman/",
      "bio": "Be an API Testing Expert using Postman(Manual & Automation) with Newman, Jenkins, Reporting, JavaScript, DataDriven Fram",
      "objectives": [
        "Detailed knowledge of API Testing using POSTMAN and its implementation while working as an API Tester",
        "Ready to face API Manual & Automation testing interviews & also answer scenario based questions",
        "Detailed understanding of RestAPI, Different Methods(GET, POST, PUT, DELETE, PATCH) & JSON Format",
        "Detailed understanding of advance concepts like Collections, Environment, Mocking, Monitoring & Newman",
        "Good understanding of JavaScript programming to handle different scenario"
      ],
      "course_content": {
        "Postman Introduction | Basics of API Testing": [
          "Course Outline & Complete Information -> Must for everyone",
          "Introduction to Postman (One of most popular tool for REST API testing)",
          "Postman Setup : Step by Step Setup Instructions",
          "Postman window walkthrough",
          "Setup Sample API Application for Practice",
          "Its Time for QUIZ : Check Your Knowledge"
        ],
        "Introduction & Types of WebServices | Pre-Requisites of API Testing": [
          "Introduction about this Section",
          "Introduction to WebService with Examples",
          "Some common examples of WebService",
          "Different type of WebService : Soap and Rest",
          "Introductions to MicroServices",
          "Rest API : common Methods - GET, POST, PUT, DELETE",
          "Pre-requisites before starting API Testing",
          "Basic JSON understanding : How to write and Understand JSON file",
          "JSON Path basics : To Fetch and Validate JSON keys-values",
          "JSON path advance : To Fetch and Validate JSON keys-values",
          "Its Time for QUIZ : Check Your Knowledge"
        ],
        "PROJECT - 1 : Manual Testing of REST API using POSTMAN": [
          "Basic GET request : Fetch data from application",
          "Basic POST request : Insert New data to Application",
          "Basic PUT request : Update Data of Application",
          "Basic DELETE request : Delete application Data",
          "End to End test case with verifications"
        ],
        "Apply Validation : Validate data coming in Response": [
          "Add Verification : Status Code, Body Data & Response time",
          "Validate Header Content",
          "Validate Data using JSON Path",
          "Add Student Address : Check Complex JSON",
          "Add Student Address : Validate JSON content using JSON Path",
          "Its Time for QUIZ : Check Your Knowledge"
        ],
        "Advance Postman Concepts : Collections | Environment | Global": [
          "What is collections & How to Implement Collection",
          "Save Request to Collections",
          "Common operation on Collection",
          "Collection Documentation",
          "Run Collection using Collection Runner"
        ],
        "Move to API Automation : Environment | Request Chaining | Globals": [
          "What is Environment | Why to use Environment",
          "How to Setup Environment and Use environment data in testcases",
          "Execute Cases to Different Environment",
          "Share Collection with Environment File",
          "Set and Get environment data using Programming",
          "Request Chaining : Pass data from Response to Next Request",
          "Setup Global and use in testcase (Set Configuration Data)"
        ],
        "Use Postman API : Write JavaScript Coding in Postman": [
          "Start coding in Postman : Simple print data to Console",
          "Condition Handling : If - else conditions",
          "Looping : Execute code multiple time - For Loop",
          "Postman API : request object - Fetch Data, URL and Method of Request",
          "Postman API : responseBody object - Fetch Response Body, Parse Json Data",
          "Postman API : responseTime and responseCode",
          "Work on environment variable by coding",
          "Work on global variable by coding",
          "Write End to End Scenario : Add Student --> Add Technical Skills --> Add Address",
          "Chaining Requests : Fetch Response Data and Use it as input in further request",
          "SOAP WebService Testing using Postman"
        ],
        "Authorization : Authenticate User before processing the Request": [
          "Basic Authorization : Pass username and password with request",
          "oAuth Authorization : Use Authorization token to get access"
        ],
        "Setup complex API Application : JIRA": [
          "Setup API application on your local machine : JIRA",
          "Create user in JIRA with Basic Authentication",
          "Remove User from JIRA"
        ],
        "Postman Advance Features": [
          "Setup & Use Monitors : For Monitoring Health checkup of our API",
          "Service Mocking : Use Mocking to Keep on working in case of Downtime"
        ]
      },
      "requirements": [
        "Basic understand of Manual Testing Concepts and Implementation",
        "Basic understand of Writing TestCases and Test Scenario.",
        "Basic understanding of Requirement Documents, How to read and understand requirements"
      ],
      "description": "Course Updates\nSep 2024   :   Added complimentary videos of API Testing using JMeter, Take Postman API Test Cases into JMeter and do Performance Testing\nNov 2023   :   Added QUIZ\nMay 2023   :   Added JavaScript Videos\n\n\nPOSTMAN is one of the most popular tool used by software development & testing teams in many companies. It is a very handy tool used by Developers/Testers when building or Testing RESTful web services\n\nIn this course, you will learn many functionalities of the POSTMAN tool with practical examples. Below are some of the highlights of this course.\n\nBASICS OF API TESTING AND AUTOMATION\nLearn how to send  REST Requests using POSTMAN\nWhat is API, Different Between SOAP and REST API\nDifferent CRUD Operation and Its Implementation\nGET | POST | PUT | DELETE\nBasic understanding of Micro Services\nPerform data driven testing\nOrganize requests using Collections\nAuthentication approaches (BASIC,OAUTH)\nHow to Handle Header & Pre-requisite\n\n\nADVANCE CONCEPTS\nScripting in POSTMAN using JavaScript\nCollections\nImport & Export for Sharing\nEnvironment & Global\nIntegrate POSTMAN with NEWMAN\nAdvance Reporting\nService Mocking\nService Monitoring\nCode Management\nCollection Runner\nChecking Logs\nWrite Basic to Advance Java Script\nAssertions\nRequest Channing\nAPI Testing using JMeter\nConvert Postman Script to JMeter\n\n\nREALTIME SCENARIO\nEnd to End Student Student Enrollment\nRequest Chaining\nFinal execution with report generation and analysis\nRun API tests in Jenkins\nCode Management using GIT\nScenario implementation on RealTime API Application\nEnd to End Scenario building and once click execution\nCollection Execution from command prompt",
      "target_audience": [
        "Developers, SDET's, Devops, IT Professionals working on API",
        "Manual testers/QA/Testing Professionals looking to automate Restful API Testing",
        "Professionals/Automation Testers looking to test RestAPI application/WebServices",
        "Professionals looking to Unit Test API Testing"
      ]
    },
    {
      "title": "Best Software QA Testing Training H2K Infosys Live Classes",
      "url": "https://www.udemy.com/course/best-software-qa-testing-training-by-h2k-infosys/",
      "bio": "QA Software Testing Training Course live classes only, Live Project, ALM, SQL, UNIX, Resume prep,Interview questions",
      "objectives": [
        "Know how to test the software",
        "Able to go for interview on software QA Testing",
        "student can practice on real time like projects",
        "Student will learn how to write SQL queries using TOAD tool",
        "SDLC, STLC, Agile, Test Plan, Test cases and other QA Testing related topics.",
        "This course also covers UNIX / Linux as a QA Tester.",
        "For more in depth knowledge of Quality Assurance Testing and to be proficient as a QA Analyst, enroll in our instructor-led live training at H2K Infosys. Benefits of our Instructor-led live QA Training are: Complete solutions for Software QA Testing including Manual and Automation Testing, ETL Testing, WebServices Testing, Mobile Apps Testing. Interaction with faculty for detailed explanations, Question and answers. QA Testing on different environments including SAP, ETL, Web Services and Mobile App Testing Domains covered: Banking, Healthcare, and Telecom. Testing tools installation assistance from the Technical Team Guidance on resume and interview preparation. Unlimited Live mock interview sessions, Resume prep and reviews, Live project work sessions and more."
      ],
      "course_content": {},
      "requirements": [
        "Student should have basic knowledge in computers can enroll for this course. This course covers from basics to advanced level of Software QA Testing.",
        "Better to have good knowledge in Microsoft Word and Excel to write test cases. Practice is important for you to implement what you learned from this course.",
        "Best software qa testing online training course required good laptop ( 4 gb to 6gb RAM) to install Quality center / ALM to write Test cases, TOAD to practice SQL queries."
      ],
      "description": "We only provide instructor led Live Online classes with 100% placement assistance with REAL TIME projects, Live Mock interviews, Resume preparation, more. Contact today to avail special discounts up to 40%\nThis Software QA Testing Training Course covers Manual Testing Concepts like Software Testing Life cycle, SDLC, Testing Types, Manual Testing concepts, Agile, Defect Life Cycle, Quality Center(HP ALM), SQL, UNIX / Linux,  Real time like Live Project, Resume prep guidance and Interview questions are covered\nLEARN THE BEST SOFTWARE QA TESTING TRAINING from Software QA Testing experts.\n***** Best Reviews on Udemy in the Software Testing category!\n***** Best H2k Infosys reviews from thousands of students in Facebook, Google Plus, Kudzu and more.\n\n*****     Excellent!!! Priya is a wonderful trainer, she really knows the subject well, and also helping us. Her teaching has helped me a lot to learn the subject, also she makes the class very interactive, so its not a 1-way classroom. She would always reply to all the questions. I really like the way she teaches!!!\nAfter completion of automation testing classes, I feel confident of the subject. I feel I know the subject and can go ahead with a career in this field. Thanks Priya for all your help!  Reviewed By Shreya Sengupta\n*****    I have attended Priya's class.She makes all topics so simple and clear. She has patience in answering all the questions. If anybody looking for QA course, I definitely recommend her for further class. She is really very good instructor. Reviewed By Siyaram Sah\n\n\n*****  Priya is a wonderful trainer, she really knows the subject well, and also helping us. Her teaching has helped me a lot to learn the subject, also she makes the class very interactive. She would always reply to all the questions. I really like the way she teaches!!!  Reviewed by sreekanth reddy\n\n*****  All these words are from the depth of my heart. Thank you so much for teaching us so well. I am not getting words to thank you. Keep up the great work!  \"I attended Sudheer’s Selenium class (multiple times ). He is a very sincere and dedicated teacher. He has thorough knowledge of the subject and he explains everything very clearly. I just wanted to say BIG THANK YOU to him from the bottom of my heart. I will attend his classes again because his classes are very interesting and informative :).\"  Thank you H2K Infosys for having great faculties. Reviewed by Anjali\n********\nReal time Practical, hands on,  job oriented QA Testing training from H2K Infosys.\nQA testing course has most of the topics that require you to learn and become a best Software QA Tester.This software testing QA training course syllabus is designed by experienced QA Testing professionals to help the students who don't have any IT background but they can learn this course and become Software QA Testers. This QA Testing training starts from the basics of software testing topics like Software Testing Life Cycle, Software Development Life Cycle etc. to advanced topics like creating a test plan, Agile, UNIX, SQL, HP ALM ( Quality Center) and more.\nCourse Benefits:\n\nSyllabus: We came up with a unique list of topics that will help you gradually work your way into the testing world.\nPractice sessions: Assignments in a way that you will get to apply the theory you learnt immediately.\nVideo sessions of Instructor led live training sessions\nPractical learning experience with live project work and examples.\nSupport: Our Team is going to be available to you via email or the website for you to reach out to us.\nOver 20+ Lectures HD content from experienced ISTQB certified faculty and keep adding more videos to this course.\nLearn Software Testing and Automation skills from a professional trainer from your own desk.\nPractical training starting from basics to advanced testing techniques.\nBeginners to advanced level users.\nCourse completion Certificate if you need one, please email to training@h2kinfosys.com after completing 100% .",
      "target_audience": [
        "If you are interested to become Software QA Tester, this is the right course.",
        "Anyone who has basic knowledge in computers can enroll for this course."
      ]
    },
    {
      "title": "REST Assured Fundamentals",
      "url": "https://www.udemy.com/course/rest-assured-fundamentals/",
      "bio": "Learn the fundamentals of REST Assured to add API Automation Testing to your Java code",
      "objectives": [
        "Use all of the core features of REST Assured",
        "Test two sample API applications, including one developed especially for this course",
        "Advanced use of REST Assured to extract explicit data from a HTTP response"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites are needed for the course, but you will get more out of it if you know some basic Java",
        "Basic knowledge of how APIs work will be helpful, but not required"
      ],
      "description": "This course on REST Assured assumes that you have some basic knowledge of Java and API testing, and cuts through all the filler of other courses to get you up and running with REST Assured quickly.\nEven if you have little to no knowledge of Java and API testing, you can still follow along with this course.\nThe course makes use of two different API applications to test against, including one that was created specifically for this course and supports both JSON and XML queries.\nThis course covers all the fundamentals of REST Assured, including:\n\n\nRequest & Response Specifications\nSetting up a Base Class for API testing defaults\nMeasuring Response time in REST Assured\nCovers all HTTP Verbs (GET, POST, PUT and DELETE) - for both JSON and XML\nAdvanced assertions using Groovy GPATH\nTesting and validating against both XML and JSON Schemas\nAnd many many more concepts\nIf you want a course that will get you up and running with REST Assured and learning the fundamentals of this awesome DSL for Java API Testing, this is the course for you.\nThis course has recently been re-recorded for a third time, and is one of the most popular API testing courses available on Udemy.\nEnroll today and join almost 10,000 students learning about REST Assured and adding API automation to Java projects.",
      "target_audience": [
        "Anyone who wants to learn the fundamental features of REST Assured quickly and efficiently",
        "Students with an interest in API Automation"
      ]
    },
    {
      "title": "manual software testing mastery with Generative AI 2025",
      "url": "https://www.udemy.com/course/quality-assurance-mastery-manual-software-testing/",
      "bio": "Become manual software testing Engineer. QA Masterclass for Junior QA Engineers.",
      "objectives": [
        "Become Quality Assurance Engineer as a Complete Beginner. QA Masterclass for Junior QA Engineers.",
        "Foundations of Quality Assurance",
        "Quality Assurance guidance for starting your first IT job",
        "How to write test cases",
        "Manual Testing Basics",
        "How to find bugs",
        "Learn Mobile Application Testing and become a Mobile App Tester! Android Studio",
        "Understand the basics of Generative AI and its real world use cases",
        "Using Gen AI in Automation and Manual Software Testing"
      ],
      "course_content": {},
      "requirements": [
        "you don't need any experience to start with this course. Everything will be explained for complete beginners."
      ],
      "description": "Learn Mobile Application Testing and become a Mobile App Tester! Android Studio.\nManual Software Testing with Generative AI Guide to Web Application Testing for Beginners from scratch. Quality Assurance is a must need in today s era of technology. Meeting the expected quality of an application has become an essential factor for organizations. This is where software development and software testing concepts come into play. Organizations need to follow certain quality assurance standards in order to survive in the market competition. It is must required to understand software development life cycle before executing software testing concepts. We often ignore software testing fundamentals and manual testing concepts which is hugely harmful. IT professionals can never reach the expected level of success without a strong foundation in software development and software testing concepts. Also, it has not been easy to find project oriented and real-time training in software testing fundamentals. However, we all need to learn the basics of quality assurance and testing before jumping into any sort of automation. In this course, we took a hands-on and step by step approach to make it easier for IT professionals to master software testing core concepts. This course includes basic and advanced QA training videos with practical examples of different aspects of testing including software development life cycle (SDLC), overview of specific roles and real-time work environment for a software tester, different types of testing, creating comprehensive test plans, and test cases.",
      "target_audience": [
        "Anyone who wants to earn big Money without any technical knowledge."
      ]
    },
    {
      "title": "Automation with Ansible Playbooks – Hands-On!",
      "url": "https://www.udemy.com/course/automation-with-ansible/",
      "bio": "This course introduces Ansible to beginners and system administrators, helping them enhance their automation skills.",
      "objectives": [
        "Introducing Ansible-Overview of Ansible Architecture",
        "Implementation of Ansible Playbooks",
        "Automate Linux Patching using Ansible",
        "Project Labs to gain a better understanding of using Ansible Playbooks for patching Linux servers",
        "Managing Variables & Inclusions",
        "Various labs on implementing playbooks from a real IT industry environment",
        "Gain sufficient skills to perform core system administration Automation",
        "Implementing Tasks Controls",
        "Ansible Installation",
        "Online/Offline Ansible installation",
        "Ansible Conditionals",
        "Ansible Modules",
        "Industrial Live overview of Automation tool using Ansible with Shell Scripting",
        "Ansible Handlers/Loops",
        "Deploying Ansible and writing Yaml files",
        "Students would be able to create Ansible Roles"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Ansible",
          "What is Ansible",
          "Ansible limitations",
          "Ansible Architecture",
          "Ansible Setup",
          "Lab Practice Session",
          "Recap",
          "Quiz"
        ],
        "Ansible Control Node Components": [
          "Ansible Control Node Components",
          "Control & Managed Node",
          "Ansible Inventories",
          "Quiz"
        ],
        "Deploying Ansible in an AWS Cloud Environment": [
          "Introduction to Setting Up Ansible in AWS",
          "Launch EC2 Instance for Ansible Control Node",
          "Install Ansible on Control Node",
          "Setup Managed Hosts: Two Ubuntu Clients",
          "Configure SSH on Clients",
          "Edit hosts to Add Managed Hosts",
          "Generating an SSH Key for Passwordless Access",
          "Create a Host Inventory File for Managed Clients",
          "Using Ad-Hoc Commands to Test Connectivity",
          "Practicing Ad-Hoc Commands in Ansible",
          "Understanding the Purpose of --become in Ansible"
        ],
        "Ansible Setup": [
          "Ansible Installation - Lab 1",
          "Ansible Installation - Lab 2",
          "Ansible Installation - Lab 3",
          "Ansible Installation - Lab 4",
          "Quiz"
        ],
        "Customizing Ansible's Behavior": [
          "Customize Ansible's behavior",
          "Lab Session on Privilege Escalations",
          "Quiz",
          "Project Lab: Customizing Ansible's Behavior using /etc/ansible/ansible.cfg"
        ],
        "AD Hoc Commands in Ansible": [
          "Practice Lab Session - 1",
          "Practice Lab Session - 2",
          "Practice Lab Session - 3",
          "Command & Shell Module Differences",
          "Quiz",
          "Project Lab: Ad Hoc Commands in Ansible"
        ],
        "Implementing Playbooks": [
          "Implementing Playbooks",
          "Lab-Implementing Playbooks",
          "Playbook for copying a file",
          "Lab - Copy a file with conditions",
          "Quiz",
          "Project: Implementing Playbooks in Ansible"
        ],
        "Modules in Ansible": [
          "Introduction of Modules in Ansible",
          "Lab-Invoking Modules",
          "Idempotent Behaviour of Modules",
          "Lab-Idempotent Behaviour of Modules",
          "Quiz",
          "Lab Project: Exploring Modules in Ansible"
        ],
        "Implementing Multi tasks in Playbook": [
          "Multiple tasks in Ansible Playbook",
          "Lab - Multi task Playbook - 1",
          "Lab - Multi task Playbook - 2",
          "Syntax Verification & Dry Check for Ansible Playbook",
          "Apache Web Server Installation - 1",
          "Apache Web Server Installation - 2",
          "Apache Web Server Installation - 3",
          "Quiz",
          "Project Lab: Implementing Multi-Tasks in Ansible Playbook"
        ],
        "Managing Variables in Ansible": [
          "Managing Variables in Ansible",
          "Lab-Managing Variables",
          "Hosts & Group variables",
          "Lab on Host & Group Variables",
          "Lab on Variables",
          "Ansible Facts",
          "Quiz",
          "Lab Project: Variables in Ansible"
        ]
      },
      "requirements": [
        "PC or Laptop with internet Connection",
        "There is no formal prerequisites for this course; however, previous system administrator experience on other operating system would be very beneficial."
      ],
      "description": "Mastering Ansible Step by Step\n\n\nCourse Contents\n\n\nIntroducing Ansible\nOverview of Ansible Architecture\nAnsible Components\nOverview of Ansible Deployments\nDescribing Ansible Inventory\nSummary\nDeploying Ansible\nInstalling Ansible\nGuided Exercise: Installing Ansible\nManaging Ansible Configuration Files\nGuided Exercise: Managing Ansible Configuration Files\nRunning Ad Hoc Commands\nGuided Exercise: Running Ad Hoc Commands\nManaging Dynamic Inventory\nGuided Exercise: Managing Dynamic Inventory\nLab: Deploying Ansible\nSummary\nAnsible Setup in AWS Environment\nIntroduction to Setting Up Ansible in AWS\nLaunch EC2 Instance for Ansible Control Node\nInstall Ansible on Control Node\nSetup Managed Hosts: Two Ubuntu Clients\nConfigure SSH on Clients\nEdit hosts to Add Managed Hosts\nGenerating an SSH Key for Passwordless Access\nCreate a Host Inventory File for Managed Clients\nUsing Ad-Hoc Commands to Test Connectivity\nPracticing Ad-Hoc Commands in Ansible\nUnderstanding the Purpose of --become in Ansible\nAnsible Installation on Red Hat Linux 8\nOverview of Ansible Installation\nOnline Ansible Installation\nUser's Account Setup for Passwordless Authentication\nOffline Ansible Installation ( When there is no internet available on Control Node )\nImplementing Playbooks\nWriting YAML Files\nGuided Exercise: Writing YAML Files\nImplementing Modules\nGuided Exercise: Implementing Modules\nImplementing Ansible Playbooks\nGuided Exercise: Implementing Ansible Playbooks\nLab: Implementing Playbooks\nSummary\nManaging Variables and Inclusions\nManaging Variables\nGuided Exercise: Managing Variables\nManaging Facts\nGuided Exercise: Managing Facts\nManaging Inclusions\nGuided Exercise: Managing Inclusions\nLab: Managing Variables and Inclusions\nImplementing Task Control\nConstructing Flow Control\nGuided Exercise: Constructing Flow Control\nImplementing Handlers\nGuided Exercise: Implementing Handlers\nImplementing Tags\nGuided Exercise: Implementing Tags\nHandling Errors\nGuided Exercise: Handling Errors\nLab: Implementing Task Control\nSummary\nAnsible Roles\nAbout Ansible Roles\nHow do we create Ansible Roles\nLab Session to create roles\nIndustrial project to Automate Patching on Multiple Linux Server using Ansible Playbook\nOverview about Linux Patching\nAutomate Linux Patching using Ansible\nVerify application/Database processes are running or not\nDecision point to start patching\nUpgrade all the packages on the server\nCheck if reboot required after the kernel update\nInstall the specific kernel version using Ansible Playbook.\nVarious Labs to understand the Ansible Playbook for patching\nIndustrial project for Stop/Start Control M appl/db\nOverview of project\nDesigning of Ansible playbooks\nLab Sessions\nCreate Automation tool using Ansible & Shell\nOverview of Automation Tool\nConcept of Automation Tool\nCommunication between Ansible Server with managed hosts\nFront look of Automation Tool\nWhat we are achieving from this Automation tool.\nPre-validation Configuration (To capture pre-change configuration details)\nUser Administration\n1. User Creation\n2. User Removal\n3. Group Add\n4. Password Reset\nRun Ad Hoc Command\nHealth Check Statistics\n1. Memory Utilization\n2. CPU Utilization\n3. Overall I/O Activities\n4. Reports run queue and load average\n5. Top Memory Consuming processes\n6. Top CPU Consuming Processes\n7. Shared Memory\nDesign of Automation Tool\nDesign Front Look using case statement\nPractice Lab Session on case Statement -1\nPractice Lab Session on case Statement -2\nColor Fonts in desinging the tool\nHeadline & Selecting the target servers\nLab sessions\n\n\nShell Scripting\n1. If..else..elif statement\n2. Loops\n3. Sed – Stream Editot\n4. Awk\n\nThe case esac statement\nLast lecture",
      "target_audience": [
        "IT professionals across a broad range of disciplines who need to perform essential administration tasks and automation.",
        "Graduate Students and also for those who are looking for a job in Automation using Ansible (RedHat Linux) & wants to get hands-on practical experience on Automation & build up a base on Ansible."
      ]
    },
    {
      "title": "The Complete WebdriverIO Course- Automation Testing Bootcamp",
      "url": "https://www.udemy.com/course/automation-testing-javascript-webdriverio-selenium-more/",
      "bio": "Automation testing with the WebdriverIO next-generation framework using JavaScript & Node.js",
      "objectives": [
        "WebdriverIO in detail using JavaScript and NodeJS",
        "How to create a highly advanced framework using WebdriverIO",
        "The basics all the way to advanced subjects",
        "Advanced reporting and continuous integration using Jenkins",
        "Everything you need to know to write automation tests using WebdriverIO"
      ],
      "course_content": {
        "Introduction": [
          "What is WebdrverIO?",
          "WebdriverIO API",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)",
          "WebdriverIO Community",
          "How Course Attachment Code Examples are Structured"
        ],
        "Setup Development Environment": [
          "Nodejs - Setup",
          "Visual Studio Code & Extensions - Setup",
          "Chrome & Firefox - Setup",
          "Git - Setup",
          "Project & Package.json - Setup",
          "Important Update - [Please Read]",
          "WebdriverIO Wdio - Setup",
          "Keeping WebdriveIO Up to Date"
        ],
        "Wdio - Testrunner": [
          "Wdio - Testrunner"
        ],
        "Simple Real World Scenario": [
          "System Under Test",
          "What is Mocha? & How can we Leverage Mocha?",
          "Capturing Test Requirements",
          "API Commands & Auto Completion",
          "First Test - Creation - Part 1_2",
          "First Test - Creation - Part 2_2",
          "The Test Challenge",
          "The Test Challenge - Solution",
          "Recap and Improvements",
          "Wdio Browser Object - Inspection"
        ],
        "Synchronous vs Asynchronous - (Understanding Asynchronous JS)": [
          "WebdriverIO - Sync vs Async Mode",
          "Synchronous vs Asynchronous - Overview",
          "Synchronous - Example",
          "Asynchronous - Example",
          "WebdriverIO Sync vs Async - Example"
        ],
        "Locating Elements": [
          "Locating Elements - Examples",
          "$ - findElement",
          "$$ - findElements"
        ],
        "Waits and Timeouts": [
          "pause",
          "waitForClickable",
          "waitForDisplayed",
          "waitForExist",
          "waitUntil"
        ],
        "Assertions": [
          "Introduction",
          "Expect vs Jest"
        ],
        "Debugging": [
          "Console.log & Wdio Logging",
          "Debug",
          "REPL"
        ],
        "Advanced Element Interactions": [
          "Inputs",
          "Drop-down Lists",
          "State Commands",
          "Actions",
          "Handling Windows",
          "IFrames",
          "Alerts",
          "File Upload",
          "JS Execute"
        ]
      },
      "requirements": [
        "A basic understanding of programming would be useful (but not necessary)",
        "A basic understanding of testing would be useful (but not necessary)"
      ],
      "description": "OVER 5000 STUDENTS ENROLLED ON THIS COURSE TO DATE\n\n\nWhat is WebdriverIO?\nWebdriverIO is an open-source testing automation framework written in JavaScript and running on NodeJS. It is particularly useful for testing web applications. It supports both Behavior Driven Development (BDD) and Test Driven Development (TDD),  making it a highly preferred choice for automation testers.\n\n\nWhy this course?\nThis course is designed to be effective, efficient and easy to follow. I have been teaching for several years on Udemy with over 6 highly successful courses to date. I have refined this course using proven teaching techniques. This course is carefully structured from start to finish and I provide downloadable code examples after each coding lecture.\n\n\nWhat has been updated?\nEverything! I have rebuilt this course from scratch using one of the latest versions of WebdriverIO. This means the material covered is relevant, making use of WebdriverIO's latest features.\n\n\nWhat does this course cover?\nAll major topics are covered in detail using the below structure:\nIntroduction\nWebdriverIO setup\nWDIO TestRunner\nSimple real world scenarios\nSynchronous vs Asynchronous - (Understanding Asynchronous JS)\nLocating Elements\nWaits and Timeouts\nAssertions\nDebugging\nAdvanced Element Interactions\nReporting\nAdvanced Real World Example\nAdvanced Concepts\nJenkins CI and More!\n\n\nWhat to expect by the end of this course?\nYou will be completely confident building automation frameworks using WebdriverIO and a whole host of complementing technologies. This is the only course you need to learn Automation Testing using the WebdriverIO framework.",
      "target_audience": [
        "Beginner automation testers",
        "Intermediate automation testers",
        "Expert automation testers",
        "Anyone interested in Automation Testing",
        "Manual testers (QA's) who want to become an Automation Tester (SDET)",
        "Those interested in emerging testing technologies that is rapidly growing in popularity",
        "Anyone interested in the WebdriverIO framework"
      ]
    },
    {
      "title": "Master Selenium Automation Testing | Basic to Advanced Level",
      "url": "https://www.udemy.com/course/master-selenium-automation-testing-basic-to-advanced-level/",
      "bio": "Learn to implement automation testing using selenium and build industry standard automation frameworks from scratch",
      "objectives": [
        "This course is all you need to crack any job interview of Selenium automation testing or to work as an selenium automation expert",
        "Java Programming Language required for test automation",
        "Basic to advanced level Selenium automation Tool",
        "Basic to advanced level TestNG Testing Framework and integration with Selenium automation tool",
        "Industry standard design patterns to write effective code",
        "Industry standard Frameworks which students can implement on their own from scratch",
        "Integration with tools like MAVEN (Build Management Tool), Git (Code Repository), AutoIT (Windows based automation tool)",
        "Running and scheduling selenium code and frameworks using CI/CD tools like Jenkins",
        "Multiple assignments to implement all your learnings with practical examples",
        "Regular updates to match the industry standards"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Manual Testing",
        "Basic understanding of Java and Object oriented concepts are required"
      ],
      "description": "Over the last decade, the Selenium automation tool has gained a lot of popularity in the automation testing world due to its unique features like - Multiple operating support, multiple language support, multiple browsers support, open-source, and community support.\nMNCs to Startups all big and large organizations are investing a lot in automation testing which has raised the demand of automation experts. Almost all job openings of software testing in any part of the world do ask for Selenium expertise.\nThis course is created keeping the current automation testing situation of the world in mind.\nThe course curriculum is structured in an order that you will --\nSelenium automation tool as a subject,\nTesting Framework - TestNG,\nDesign Patterns to write effective code,\nIndustry Standard automation frameworks built from scratch,\nIntegration with tools like Maven (Build management tool), Git (Code repository),\nIntegration with CI/CD (Jenkins)\nMultiple quizzes added in the course to help you learn and understand the concepts better.\nMultiple assignments that will help you implement your learnings with real-time examples.\nWe will keep updating the course for our students with new assignments and topics that enhance your implementation skills.\nMy decade of experience of implementing automation in real-time projects and experience in teaching over 2000 students from all parts of the world in LIVE classes is used while creating this course for you. I know what students are looking for and what should be the IDEAL PACE for them to learn.",
      "target_audience": [
        "Working professionals from manual testing field looking to transform as automation experts",
        "Beginners in automation testing",
        "Fresh graduates who are looking to start their career into IT",
        "Professionals who are restarting their career into IT after a break"
      ]
    },
    {
      "title": "Selenium WebDriver + Java. Complete step by step course.",
      "url": "https://www.udemy.com/course/selenium-webdriver-java-complete-step-by-step-course/",
      "bio": "Complete course where you will learn automation testing using Selenium WebDriver + Java from scratch.",
      "objectives": [
        "Complete understanding of basic to expert Java concepts with practical implementation",
        "Automate tests using Selenium WebDriver and Java",
        "You will have required skills to automate any web application",
        "With all this knowledge gained, you should be easily able to clear Selenium Automation interviews"
      ],
      "course_content": {},
      "requirements": [
        "**** NO AUTOMATION / CODING EXPERIENCE required as everything is taught from the scratch",
        "Java concepts are covered in the course, no experience needed"
      ],
      "description": "This course includes a wide range of topics from Selenium WebDriver Basics and Advanced, Java Concepts, TestNG Framework, Automation Framework Design.\nEnroll in this course to get a thorough overview of automation, frameworks, Selenium WebDriver!\nI don't waste time on a lot of configuration\nI don't waste time on unnecessary topics\nI focus on making Selenium WebDriver automate user actions\nI focus on conceptual and technical concepts\nI focus on applying our knowledge to build complete, realistic tests",
      "target_audience": [
        "Manual Testers who wants to switch to Automation testing",
        "Anyone who wants to learn how to test web applications",
        "Test Managers",
        "Fresh Graduates who want to make a dream career in software engineering"
      ]
    },
    {
      "title": "Fundamental Principles of Test Automation",
      "url": "https://www.udemy.com/course/fundamental-principles-of-test-automation/",
      "bio": "What to know before you get started with software test automation",
      "objectives": [
        "Software Test Automation"
      ],
      "course_content": {
        "Introduction To Test Automation": [
          "Introduction",
          "What is Test Automation",
          "Common Myths of Test Automation"
        ],
        "Test Cases & Automated Tests": [
          "Test Cases",
          "Which Tests to Automate",
          "Test Maintenance"
        ],
        "Programming": [
          "Programming for Test Automation"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Test Automation has become the testing standard for software projects. Most projects already have some form of test automation or plan to add it to maximize the testing effort. There are a lot of misconceptions about what test automation is and what it can do for a software project as well as uninformed individuals attempting to do test automation without a proper understanding.\nThis course is designed to give individuals with little knowledge of software test automation a broad understanding of the key principles that lead to a successful career in test automation. After taking this course you will have an understanding that will allow you to begin or continue on the path to becoming a Software Test Automation Engineer.\nThroughout this course you will learn what test automation is and what it can and cannot do for a testing project. You will also learn about how to select the appropriate tests to automate as well as the concepts of test decay and how to minimize it with maintenance. We wrap up the course with an introduction into programming and specifically which language to learn if you are just starting out and which concepts are necessary to know for test automation.",
      "target_audience": [
        "Manual QA Testers",
        "Beginner Test Automation Engineers",
        "QA Managers"
      ]
    },
    {
      "title": "Selenium Webdriver course with Java for Beginners",
      "url": "https://www.udemy.com/course/selenium-webdriver-course-with-java-for-beginners-with-java/",
      "bio": "Selenium 3.0 Web driver course with Java , Maven and TestNG Framework for Beginners",
      "objectives": [
        "Writing automation scripts for web applications using Java & Selenium libraries"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge on HTML/CSS",
        "Passionate about programming"
      ],
      "description": "By end of this course, you will be familiar in writing selenium scripts for automating browser application testing. The course has been prepared in such a way that you can learn this course starting from basics to advanced topics in a progressive way. Course has assignments/quizzes for you to practice and strengthen your knowledge.\nBy end of this course, you will become an expert in:\n· Java Basics to advanced concepts required for testers\n· Writing selenium scripts to interact web elements like text boxes, drop downs, radio buttons, buttons\n· Writing selenium scripts to automate web pages validation\n· Set up Maven project for with Log4J and Selenium\n· Understand Project Model Object (POM) architecture\n· Working with Log4J and TestNG frameworks.\n· Writing selenium scripts for end-end scenarios.\nCourse Highlights:\n· \"We respect your time\"- all the videos are short and straight to point without wasting your valuable time.\n· Assignments - Given assignments along with required resources, which will help you practice your learning.\n· Short and precise videos\n· Checkpoint questions\nSupport:\nI offer full support, answering any questions you have. You can reach out me via forum or email.\nThis means you’ll never find yourself stuck on one lesson without progress. With my hand-holding guidance, you’ll learn smoothly through this course without any major issues.",
      "target_audience": [
        "Testers/Developers who want to to automate web application testing"
      ]
    },
    {
      "title": "Appium - Mobile Testing with Latest 2.0 and Live Projects",
      "url": "https://www.udemy.com/course/appium-selendroid-tutorials/",
      "bio": "260+ Lectures, 65+ Hours of inDepth training on Mobile apps automation for IOS and Android using Appium on Real Devices",
      "objectives": [
        "By the end of the course you will be as much trained to automate any mobile based Native, Hybrid & Web application using Appium",
        "Many pdf files, course code and other reference material will be provided along with the video lectures"
      ],
      "course_content": {},
      "requirements": [
        "No prior Java / coding knowledge required as everything is taught from the scratch",
        "All topics are covered in detailed with live programming in the lectures which will make you feel as in you are studying in a live class room",
        "Basic understanding of WebDriver is required"
      ],
      "description": "One single course to Master Mobile automation testing for IOS and Android  2023\nFIRST COURSE TO COVER MAXIMUM TOPICS ON ANDROID AND IOS WITH MOBILE AUTOMATION FRAMEWORKS IN DEPTH\nUpdate: New Lectures added based on Latest Appium 2.0 (2023)\nUpdate: Master Mobile Automation framework added for IOS and Android\n\n\nWhat makes this course unique from others\n65+ hours of Latest and unique content, 260+ Lectures which you will not find in any other Appium courses on Udemy\n\n\nRECENT UPDATES:\nAdded the lectures from Recent API Updates i.e. 2.0\nAdded Lecture on Appium Grid - Parallel execution on Multiple Devices\nAdded lectures on Mobile Automation Master Framework - One Framework to Automate All Types of Native, Hybrid & WebApp with integration of Page Objects, Page Factory and Cucumber BDD\n\n\nAs the mobile market is growing so there's a demand of Mobile application testers increasing like anything across the Globe.\nAppium: supports Mobile application testing on Native, Hybrid & WebApps for Iphone, Ipads & Android real device and Emulators / Simulators.\nThese are the unique Appium training tutorials in market that will help you in learning Mobile apps automation testing for IOS and Android in very simple way\nI have covered examples on both Simulators / Emulators and Real IOS & Android Devices.\nNot just the video lectures you will see the entire coding part done  step by step and the lectures are explained in a very detailed and  practical approach is taken in every example by the trainer.",
      "target_audience": [
        "Manual Testers who wants to switch to Automation testing and Learn mobile apps testing",
        "Automation testers who wants to enhance their current skills",
        "Test Managers",
        "Selenium Testers who wants to Learn Mobile Apps testing"
      ]
    },
    {
      "title": "Learn Manual Software Testing + Agile with Jira Tool",
      "url": "https://www.udemy.com/course/learn-manual-software-testing-with-live-project-jira-tool/",
      "bio": "Manual Testing, STLC, Agile, Jira, e-Commerce Project",
      "objectives": [
        "At the end of this course, you will be able to understand Software Testing Concepts and the complete cycle of Manual Testing.",
        "You will be seeing the live project and will be able to start the career in the Software Quality Assurance filed.",
        "You will know how to use Jira tool in Agile Process.",
        "You will know how to track Project activities in Jira.",
        "You will know how to report bugs in Jira.",
        "You will know how to write test cases and Update status in Jira."
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Computer."
      ],
      "description": "This course is designed for beginners aspiring to kickstart a career in Software Testing. Upon completion, participants will acquire comprehensive knowledge of Software Testing Types, Real-Time Testing Processes, and hands-on experience in Agile and Scrum Projects.\nKey Topics Covered:\nModule-1: Software Testing Concepts\nUnderstanding Software Development Life Cycle (SDLC) and Software Testing Life Cycle (STLC)\nDistinguishing between Project and Product in the context of testing\nExploring V-Model and the roles of QA (Quality Assurance), QC (Quality Control), and QE (Quality Engineering)\nDifferentiating between White Box and Black Box Testing\nDelving into Static Testing and Dynamic Testing\nConceptualizing Verification and Validation in software testing\nSystem Testing Types, including GUI Testing and Functional vs. Non-Functional Testing\nTest Design Techniques and strategies like Re-Testing, Regression Testing, Exploratory Testing, Adhoc Testing, Sanity, Smoke Testing, and End-To-End Testing\nUnderstanding Software Testing Life Cycle (STLC) phases, including Use case, Test scenario, Test case, Test Environment, Execution, Defect Reporting, Test Closure, and Test Metrics.\nModule-2: Software Testing  Project\nIntroduction to  project\nExtracting Functional Requirements from Functional Requirement Specifications (FRS)\nCreating comprehensive Test Scenarios and Test Cases\nExecution of Test Cases\nReporting and Tracking Bugs\nTest Sign-off\nPhase-3: Agile Testing + Jira Tool\nAgile/Scrum Process:\nOverview of Agile and Scrum methodologies\nUnderstanding Scrum Teams, Sprints, and User Stories\nEstimating User Stories and defining 'Definition of Done' and 'Definition of Ready'\nExploring Sprint Activities such as Sprint Planning, Backlog Refinement, Sprint Review, and Sprint Retrospective\nJira Tool:\nInstallation and Configuration of JIRA\nProject creation in Jira and user management\nCreating Backlog, Epic, and User Stories in JIRA\nSprint creation and management\nUnderstanding the Sprint life cycle in JIRA\nBug creation in Jira\nWriting test cases in JIRA with Zephyr plugin\nCreating Test Cycles and executing/updating Test Cases in Jira",
      "target_audience": [
        "Students willing to start their professional career as a “Test Engineer”, Fresh Graduates, Non IT Professionals."
      ]
    },
    {
      "title": "Zero to Hero in Jest Unit and Integration Testing with React",
      "url": "https://www.udemy.com/course/zero-to-hero-in-jest-unit-and-integration-testing-with-react/",
      "bio": "Learn to write Unit and Integration Test for your React JS application with Jest Testing Library",
      "objectives": [
        "What is Jest testing library and how to use it to write Unit and Integration test for any React Js application.",
        "How Software development and testing takes place in a real live project in any company",
        "What are Behavior driven development (BDD) and Test driven development(TDD) and the difference between the two techniques.",
        "We will also learn to create react app and functional components. Then write tests for these components.",
        "We will also see how to Mock real API calls for our integrating test.",
        "We will learn to create Backend Node Express API",
        "We will learn to make API calls from React app to our backend",
        "How to debug your test"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction and Course Overview",
          "Know Your Instructor & Get Help/Support",
          "Install Visual Studio Code editor",
          "Installing NodeJS runtime",
          "Why we need Testing and SDLC",
          "BDD vs TDD Testing Approach",
          "Types of Testing - UT, IT, E2E"
        ],
        "Writing First Test Case": [
          "Creating React App and Adding Testing Capability",
          "Creating Some DOM elements for Basic Testing",
          "Writting and Running our First Test",
          "How to get the Role of an Element",
          "Understanding difference between getBy queryBy and findBy",
          "Code Hands-on for getBy queryBy"
        ],
        "Writing Tests for Feedback Form Component": [
          "Requirements for Unit Test Cases",
          "Setup project structure and install react extension",
          "Test case for Feedback Form Onload Scenario",
          "Grouping similar Tests in one Describe block",
          "Adding user interaction to our Test with the help of fireEvent"
        ],
        "Developing the Feedback Form": [
          "Understanding React Project Flow and Structure",
          "State variable and useState hook",
          "React Functional component and JSX",
          "Developing the Feedback Form",
          "Testing the Application manually and with Unit test",
          "Using userEvent to test user interaction"
        ],
        "Writing Tests for Feedback Overview Component": [
          "Unit test Requirement for Feedback Overview component",
          "Feedback Overview Test for No Feedback Found",
          "Feedback Overview Test for 2 Feedback Found"
        ],
        "Developing Feedback Overview Component": [
          "Developing the Feedback Overview Component and Passing data",
          "Executing the test cases",
          "How to Improve your test cases"
        ],
        "Writing Integration Test": [
          "Requirements for Integration test scenarios",
          "Implementing Integration test Scenario 1",
          "Implementing Integration test Scenario 2"
        ],
        "Developing Frontend and Backend functionality of Adding new Feedback": [
          "Developing the functionality of adding new feedback",
          "Requirements overview for Mocking API calls",
          "Installing MSW library",
          "Creating MSW handler for create feedback",
          "Setting up the mock server",
          "Update the Integration test based on API call",
          "Make API call for saving feedback via fetch method",
          "How to Debug the Test case",
          "Deep dive into understanding the Integration test and Mock server flow",
          "Backend Node API and testing Frontend with Real backend"
        ]
      },
      "requirements": [
        "Basics of Javascript"
      ],
      "description": "In this course you will learn about jest testing library and how to use it to write Unit and Integration test for any react Js application.\nWe will start by learning how does software development and testing takes place in a real live project in any company.\nThen we will learn about the importance of automation tests and importance of writing unit and integration tests.\nWe will then learn about Behavior driven development (BDD) and Test driven development(TDD) and the difference between the two techniques.\nWe will also learn to create react app and functional components. Then write tests for these components.\nWe will also see how to Mock real API calls for our integrating test.\nAll these and much more we will learn in handson based approach in a step by step manner.\nFollowing is the sequence we will cover the various topics:\n0-Introduction video - Course Overview\n1-Why we need Testing and SDLC\n2-BDD vs TDD Testing Approach\n3-Types of Testing - UT, IT, E2E\n4-Creating React App and Adding Testing Capability\n5-Creating Some DOM elements for Basic Testing\n6-Writting and Running our First Test\n7-How to get the Role of an Element\n8-Understanding difference between getBy queryBy and findBy\n9-Code Hands-on for getBy queryBy\n10-Requirements for Unit Test Cases\n11-Setup project structure and install react extention\n12-Test case for Feedback Form Onload Scenario\n13-Grouping similar Tests in one Describe block\n14-Adding user interaction to our Test with the help of fireEvent\n15-Understanding React Project Flow and Structure\n16-State variable and useState hook\n17-React Functional component and JSX\n18-Developing the Feedback Form\n19-Testing the Application manually and with Unit test\n20-Using userEvent to test user interaction\n21-Unit test Requirement for Feedback Overview component\n22-Feedback Overview Test for No Feedback Found\n23-Feedback Overview Test for 2 Feedback Found\n24-Developing the Feedback Overview Component and Passing data\n25-Executing the test cases\n26-How to Improve your test cases\n27-Requirements for Integration test scenarios\n28-Implementing Integration test Scenario 1\n29-Implementing Integration test Scenario 2\n30-Developing the functionality of adding new feedback\n31-Requirements overview for Mocking API calls\n32-Installing MSW library\n33-Creating MSW handler for create feedback\n34-Setting up the mock server\n35-Update the Integration test based on API call\n36-Make API call for saving feedback via fetch method\n37-How to Debug the Test case\n38-Deep dive into understanding the Integration test and Mock server flow\n39-Backend Node API and testing Frontend with Real backend",
      "target_audience": [
        "Anyone who wants to become a Professional Fullstack developer that understands the importance of writing tests for your application"
      ]
    },
    {
      "title": "Java Script for Software Testers-for Protractor/TestComplete",
      "url": "https://www.udemy.com/course/java-script-for-software-testers/",
      "bio": "JavaScript (Node JS) environment Setup, Write basic to advance scripting, Execute using Node.js,Get ready for Protractor",
      "objectives": [
        "** Will be ready to work for automation using JavaScript programming language ***",
        "** Testers can start work on tools like Selenium, Protractor, TestComplete etc ***",
        "** Ready to face automation interviews questions ***"
      ],
      "course_content": {},
      "requirements": [
        "You should have basic knowledge of HTML",
        "Not specific prerequisite for Software Testers to start this course"
      ],
      "description": "What is JavaScript ?\nJavascript is a dynamic computer programming language. It is lightweight and most commonly used as a part of web pages, whose implementations allow client-side script to interact with the user and make dynamic pages. It is an interpreted programming language with object-oriented capabilities.\nCourse Include\nJavaScript Setup - Node JS\nJavaScript Basics\nBasic programming practice\nLots of programming exercise\nUse of JS in automation tools like (Protractor)",
      "target_audience": [
        "Freshers looking opportunity in UI Automation",
        "Manual Tester looking to jump in to JavaScript automation"
      ]
    },
    {
      "title": "ISTQB Agile Tester Sample Exams",
      "url": "https://www.udemy.com/course/istqb-agile-tester-sample-exams/",
      "bio": "The best way to prepare for the ISTQB Agile Tester Exam",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "These are some of the reviews of the students who used these sample exams to prepare for the exam:\n\n\"This course proved helpful for me for preparation of exam. I passed the exam :) , Well done Mr. Tarek Roshdy!\"\nZakria Riaz Dar\n\n\n\"This course helped me to clear the AGILE exam last week with a score of 77.5.I strongly recommend it. I'll be using your material to prepare for the ASTQB Mobile exam. Thanks Tarek Roshdy\"\nPeter Sage\n\n\n\"This sample questions were the best i ever found. After i completed this exams i have successfully passed the exam with a good rate. I 100% recommend that course and thank to Mr.Tarek for his effort, time and the continuous support.\"\nHesham Belal\n\n\n\"I passed the exam after solving these exams , covers the syllabus in a very professional way .handle all kinds of questions .\"\nAhmed Zanoon\n\n\n\"I got my certification. This course was helpful for that. Thanks!\"\nKavitha Samraj\n\n\n\"awesome course exams help me to practice and to test my study really awesome\"\nMohamed Magdy Attia\nWhy should you choose these sample exams?\n\n\nDuring my career, I have helped more than 1000 students to prepare for the ISTQB exams. I have more than 800 hours of teaching experience, giving lectures on the different ISTQB Certificates (Foundation Level-Agile Tester-Mobile Tester). That's why I can guarantee you that this course will help you in passing the exam. If you have any question, don't hesitate to contact me.",
      "target_audience": [
        "Agile Tester",
        "Software Testers",
        "Automation Engineers",
        "Software Engineers"
      ]
    },
    {
      "title": "QA manual testing from the beginning",
      "url": "https://www.udemy.com/course/qa-manual-testing-from-the-beginning/",
      "bio": "This course will give you the complete overview on QA manual testing.",
      "objectives": [
        "Software testing life cycle",
        "Test Plan preparation",
        "Test case preparation",
        "Software testing techniques : BVA, ECP , state transition",
        "Bug Reports",
        "Test summary reports",
        "Test management",
        "Black box testing",
        "Test execution",
        "Test techniques",
        "Sample templates for Test plan, test cases,STLC",
        "Interview questions with the answers"
      ],
      "course_content": {
        "Introduction video": [
          "Introduction video"
        ],
        "QA basics": [
          "Software Development Life Cylce",
          "Why Testing?",
          "Understanding testing",
          "Software testing life cycle",
          "Why tester ?",
          "Roles and Responsibilities of a tester"
        ],
        "Functional testing": [
          "Functional testing Part I",
          "Functional testing Part II",
          "Functional testing Part III",
          "Functional testing Part IV"
        ],
        "Black box testing techniques": [
          "Black box testing techniques",
          "Equivalence class partioning",
          "Boundary value analysis",
          "Decision and state transition table"
        ],
        "White box testing": [
          "White box testing - statement coverage",
          "White box testing - decision coverage"
        ],
        "Test Deliverables": [
          "Experience based testing",
          "Test Planning",
          "Test Estimation",
          "Test Metrics",
          "Test Summary"
        ],
        "Test Case Preparation and execution": [
          "Test Case",
          "Test case execution",
          "Test Management",
          "Defect Life Cycle"
        ],
        "Interview questions with the answers": [
          "Interview questions with the answers"
        ]
      },
      "requirements": [
        "Nothing"
      ],
      "description": "This course is designed for QA manual testing and is easy to learn manual testing concepts test estimations, test plan, test cases, test techniques, test execution, testing types, test management, test summary report, bug report etc.. All the concepts are explained in detail to understand easily.\nThe entire course will be covered through 27+ videos.\nThis course also includes test plan , test case , bug report templates. You can use these for your practice purpose to get the real time experience.\nAll the required templates will be provided for the reference.",
      "target_audience": [
        "Freshers",
        "Manual test engineers"
      ]
    },
    {
      "title": "Jenkins Tutorial For Beginners (DevOps and Developers)",
      "url": "https://www.udemy.com/course/jenkins-tutorial-for-beginners-devops-and-developers/",
      "bio": "Learn How to Create And Schedule jobs in Jenkins, the standard in open-source CI (continuous integration) tools.",
      "objectives": [
        "Learn the fundamentals of Jenkins",
        "Best practices of working with Jenkins",
        "Jenkins Pipelines",
        "Use Jenkins for Continuous Integration",
        "Launch Builds on Slave Nodes",
        "Schedule Builds",
        "Create and Manage Builds",
        "User Management in Jenkins"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Jenkins"
        ],
        "Install Jenkins": [
          "How to install Java JDK 10 on Windows 10 ( with JAVA_HOME )",
          "How to install Jenkins on Windows 10",
          "How to install Jenkins on Ubuntu 18.04 (Debian Linux)",
          "How to install Jenkins Mac",
          "How to install Java JDK on Windows 1q ( with JAVA_HOME )"
        ],
        "Install Ubuntu With VirtualBox (optional)": [
          "Install Ubuntu 18.04 With VirtualBox",
          "How Install VirtualBox Guest Additions on Ubuntu 18.04 Guest"
        ],
        "Getting Started with Jenkins": [
          "Creating First Jenkins job",
          "How to Trigger a remote build + Job chaining In Jenkins"
        ],
        "Jenkins Integration with GIT and GitHub": [
          "How to Install and Configure Git and GitHub on Ubuntu 18.04 (Linux)",
          "Git and GitHub Integration with Jenkins (SCM)"
        ],
        "Manage Users And Plugins": [
          "How to create Users",
          "Install Jenkins plugins",
          "Using the Role-Based Authorization Strategy + Manage Roles",
          "Configuring the System Environment"
        ],
        "Jenkins Integration with Maven": [
          "How to install Maven on Ubuntu 18.04 LTS (Linux)",
          "How to setup Jenkins for a Maven project"
        ],
        "Sending Email Notifications": [
          "How to send Email Notifications from Jenkins"
        ],
        "Jenkins PipeLine": [
          "What is a Jenkins Pipeline + How to create Jenkins Pipeline",
          "Pipeline script from SCM + Using Jenkinsfile in Github Project"
        ],
        "Creating Master Slave Nodes": [
          "How to Enable SSH in Ubuntu Linux (Install openssh-server)",
          "Install Putty on Windows",
          "Creating and Configuring Slaves/Nodes using SSH",
          "Launch agent via Java Web Start (Windows Slave)"
        ]
      },
      "requirements": [
        "Basic Knowledge of Git, Java, Maven, Linux helpful but not necessary to get the most out of this course",
        "Very basic understanding of programming"
      ],
      "description": "This course Jenkins Tutorial is For Beginners, DevOps and Software Developers. Learn how to use continuous integration with Jenkins. Take your DevOps skills.\nJenkins is an open source automation server written in Java. Jenkins  detects changes in Subversion/GIT..., performs tasks, repeatedly such as Build, Test, Deploy, Package, Integrate.. Jenkins   is A fork of the original Hudson project an is Under development since 2005.  Jenkins plugins extensibility makes Jenkins to adapt to many systems. Jenkins provides everything for a robust continuous integration system which helps a lot for team that practice Agile  Jenkins continuously providing access to the working copies of software which supports the Agile principle.\nThe goal of this course is to provide you with a working knowledge of Jenkins CI (continuous integration) tool. We'll start with the basics, starting from installing Scala on different Operating Systems like Window, Mac and Linux.\nI believe the best way to learn is to understand how a tool works and what it does for you, look at examples, and then try it yourself. That's how this course is built, with the goal to help you both learn and understand Jenkins .",
      "target_audience": [
        "Programmers and Developers",
        "Beginner DevOps",
        "Students"
      ]
    },
    {
      "title": "Mobile Automation With Robot Framework And Appium",
      "url": "https://www.udemy.com/course/mobile-automation-with-robot-framework-and-appium/",
      "bio": "Learn how to easily automate mobile applications with Robot Framework and Appium",
      "objectives": [
        "Learn the basics about Automation with Robot Framework",
        "Learn the basics about Appium",
        "Identify mobile interface elements using element inspector",
        "Create simple and more complex test cases in Robot Framework to automate a mobile application"
      ],
      "course_content": {
        "Introduction To The Course": [
          "About This Course"
        ],
        "Beginners tutorial on Robot Framework": [
          "About Robot Framework",
          "How To Install Robot Framework",
          "Install And Configure Pycharm",
          "Configure Robot Project",
          "Settings Section",
          "Test Cases Section",
          "Robot Command And Logs",
          "Variables, Lists And Dictionaries",
          "Keywords Section",
          "Resource Files",
          "Fix Intellibot Plugin For Pycharm"
        ],
        "Android automation with Robot Framework and Appium": [
          "Install Environment On Windows",
          "Configure Devices And Emulators",
          "Open Application With Robot Framework And Appium",
          "Locate Elements On Android Interface",
          "Automate The Login Process",
          "Create User Defined Keywords",
          "Conditional Statements Inside Keywords",
          "Appium Server Capabilities And Parallel Executions",
          "Automate The Chat Application",
          "Bonus video - How to remotely connect your phone to adb"
        ]
      },
      "requirements": [
        "No previous coding experience needed",
        "Basic PC skills",
        "Basic Windows and Linux (optional) usage skills"
      ],
      "description": "In this course you will learn the basics about Robot Framework, Appium, ADB and mobile webdrivers.\nYou will then learn about how a mobile application is automated and what are the best practice in automation.\nFinally, we will learn about creating simple and complex test cases from scratch in order to create a test suite for your application.",
      "target_audience": [
        "Everyone who wants to discover a quick and easy method to automate mobile applications",
        "QA engineers who want to start an automation project"
      ]
    },
    {
      "title": "Build a Forensic Virtual Machine",
      "url": "https://www.udemy.com/course/surviving-digital-forensics-paladin-virtual-machine/",
      "bio": "Learn how to build a virtual SIFT Workstation",
      "objectives": [
        "Learn how to set-up Virtualbox for a Sift Workstation",
        "Learn how to install Ubuntu on Virtualbox",
        "Learn how to resolve common issues with Virtualbox",
        "Learn how to install the Sift Workstation using the new CLI"
      ],
      "course_content": {
        "Overview & Getting Started": [
          "Welcome & Introduction"
        ],
        "Creating a Virtual Forensic Machine": [
          "Setting up your Virtual Hardware",
          "Installing Ubuntu on Virtualbox",
          "Finishing the Ubuntu installation",
          "Guest Additions and Shared Folders",
          "Creating a SIFT Workstation"
        ]
      },
      "requirements": [
        "Mac or PC",
        "VirtualBox Software (free)",
        "Ubuntu v16.04 (free)",
        "Sift Workstation (free)"
      ],
      "description": "Updated for the new SIFT CLI Method\nThis class will teach you how to create a forensic virtual machine using freely available tools. Follow step-by-step instructions to set-up your virtual hardware, install Ubuntu Linux (version 16.04) and install the new SIFT Workstation.\nThe SIFT workstation is a pre-made computer forensic platform loaded with Linux-based forensic tools. Take advantage of one the best computer forensic platforms available and have it at the ready as a virtual machine for when you need it.",
      "target_audience": [
        "Computer Forensic Examiners",
        "IT Professionals",
        "Students"
      ]
    },
    {
      "title": "Master Cypress in 15 minutes a day",
      "url": "https://www.udemy.com/course/master-cypress-in-15-minutes-a-day/",
      "bio": "Learn how to improve your software quality with end to end testing using Cypress",
      "objectives": [
        "How to start testing with Cypress",
        "How to run Cypress tests on a continuous integration server",
        "Intercept AJAX responses when required",
        "Learn how to do visual regression testing",
        "See how you can extend Cypress with additional functionality",
        "Use TypeScript to write your Cypress tests"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Goals",
          "What is Cypress",
          "Personal Introduction"
        ],
        "Getting started with Cypress": [
          "Writing your first Cypress test",
          "Adding a package.json",
          "Fixing a broken Cypress installation",
          "The most important commands",
          "Adding IntelliSense",
          "Mocha hooks",
          "Cypress configuration",
          "Selecting DOM elements",
          "Querying by text",
          "Aliasing"
        ],
        "Interacting with Elements": [
          "Interacting with Elements - Section Introduction",
          "Clicking DOM elements",
          "Typing text",
          "Radio buttons & checkboxes",
          "Select elements",
          "Manipulating the value",
          "Validating the value"
        ],
        "Network Requests & Cypress": [
          "Network Requests & Cypress - Section Introduction",
          "The book search application",
          "Intercepting AJAX Requests",
          "Cypress.minimatch()",
          "cy.route() & cy.server()",
          "Waiting for a response",
          "Faking AJAX responses",
          "Intercepting the response",
          "Making network requests"
        ],
        "Continuous Integration": [
          "Continuous Integration - Section Introduction",
          "CI using GitHub Actions",
          "Cypress Continuous Integration Steps",
          "Using a Docker container",
          "Flaky tests",
          "The Cypress Dashboard",
          "Local GitHub Actions"
        ],
        "Extending Cypress": [
          "Extending Cypress - Section Introduction",
          "Adding Custom Commands",
          "Adding Child Commands",
          "Writing Dual Commands",
          "Logging Custom Commands",
          "Better Command Logging",
          "Adding Custom Tasks",
          "Combining Tasks & Commands"
        ],
        "Cypress Testing Library": [
          "Cypress Testing Library - Section Introduction",
          "Installing Cypress Testing Library",
          "Using cy.findByRole()",
          "Using accessibility roles",
          "Reusing a query result",
          "Choosing a Query"
        ],
        "Tip & Tricks": [
          "Tip & Tricks",
          "IntelliSense in Visual Studio Code",
          "Configuring ESLint",
          "Faking Math.random()",
          "Overriding the Cypress configuration",
          "Data driven tests"
        ]
      },
      "requirements": [
        "A basic understanding of JavaScript, HTML and CSS selectors"
      ],
      "description": "Are you tired of receiving emails from frustrated users about your web application being broken? Cypress, the JavaScript End-to-End Testing Framework, is here to help you prevent those issues and ensure your web application runs smoothly. Cypress is a powerful tool that makes it easy to create automated tests for your web application, and this course is designed to help you master it.\n\n\nIn this course, you'll learn everything you need to know to get started with Cypress and create your first useful tests. We'll start with the basics of Cypress, but we won't stop there. You'll also learn how to make tests for data-driven applications more reliable and even faster, and how to expand Cypress with extra functionality. We'll do that both by adding additional plugins as well as writing our own extensions. You'll learn how to test applications using third-party authentication services and how to include all that as part of your continuous integration build, helping you prevent errors in code from ever deploying to production.\n\n\nMy name is Maurice de Beijer, and I'm excited to teach you all about using Cypress. I've been using Cypress successfully in many of my projects, and I can't wait to share my knowledge and experience with you. Whether you've never written automated end-to-end tests before or you're already familiar with Selenium, this course is for you. I'll start from the beginning, and show you how to get up and running with Cypress in no time. Even if you're not sure if automated end-to-end testing is for you, I'll show you how to get quick benefits for a minimal amount of work.\n\n\nBy the end of this course, you'll have a solid understanding of Cypress and how to use it to create effective automated tests for your web application. You'll be able to prevent errors in code from ever deploying to production and ensure your web application runs smoothly. Join this course and take your testing game to the next level.",
      "target_audience": [
        "Developers and software testers interested in creating automated end to end tests"
      ]
    },
    {
      "title": "REST API Automation With REST Assured - A Complete Guide",
      "url": "https://www.udemy.com/course/rest-api-automation-with-rest-assured-part-2/",
      "bio": "Learn every topic in Rest-Assured with Real World Examples & Test Automation Framework development with CI !!",
      "objectives": [
        "File Uploads ,File Downloads , Sending SOAP Requests, Sending requests via proxy server using Rest Assured",
        "**TEST AUTOMATION FRAMEWORK DEVELOPMENT & CI WITH GIT,JENKINS***",
        "OAUTH1 Authentication with Twitter, Authentication OAUTH2 with Paypal in Rest Assured",
        "Authentication with Spring Security & CSRF Token based apps in Rest Assured",
        "Logging, request/response specifications, RootPath",
        "JSONPath, XMLPath, JSoup Libraries for extracting data",
        "Hard Asserts, Soft Asserts,Multiple Asserts , complete JSON Body Assertions using JSONAssert Library",
        "Continuous Integration with GitHub & Jenkins",
        "Allure Reports Implementation in TestFramework & configuration with Jenkins"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction",
          "****RATING THE COURSE EARLY ON****"
        ],
        "Setting up the Student Sample Application": [
          "Launching the 'Students' Sample Application",
          "IMPORTANT: For users using Java 17+",
          "Installing Docker on Windows OS",
          "Installing Docker on MacOsx",
          "Launching Student app docker image"
        ],
        "Writing Tests using REST Assured": [
          "Project setup using maven, junit, & rest-assured",
          "Popular test writing styles in Rest Assured",
          "Writing our first using Rest Assured",
          "Static import of Rest Assured methods",
          "Passing QueryParams in GET Request",
          "Passing Path Params in GET Request",
          "Reusability with RestAssured constants(port, baseURI ,basePath)",
          "POST request with payload as String",
          "POJO creation & Java object payload with Gson",
          "Creating Fake Test Data with Java Faker library",
          "Updating Student information with PUT request",
          "Update partial info (PATCH request)",
          "Delete a student using DELETE Request",
          "Code for download"
        ],
        "Logging Request and Response Data in Rest Assured": [
          "Logging Request Information",
          "Logging Request Information based on Test Status",
          "Logging Response Information"
        ],
        "Extract data from Json response using JSONPath": [
          "Bestbuy API playground setup",
          "(ALTERNATIVE)-Launching Bestbuy API playground docker image",
          "Brief overview on extracting information from response",
          "Extracting response information with Jayway JsonPath library-p1",
          "Extracting response information with Jayway JsonPath library-p2",
          "Jayway JsonPath Info",
          "Extracting response information with JsonPath(JsonSlurper)-p1",
          "Extracting response information with JsonPath(JsonSlurper)-p2",
          "RestAssured JsonPath Useful links",
          "Code for download"
        ],
        "(WALMART API-OLDER EXAMPLES) -JsonPath Response extraction": [
          "Walmart Search API Walkthrough",
          "**********WALMART API KEY: IMPORTANT, PLEASE READ********************",
          "Extracting data from response using JsonPath-Part1",
          "Extracting data from response using JsonPath-part2",
          "Extracting data from response using JsonPath-part3",
          "Extracting data from response using JsonPath-part4"
        ],
        "Extract data from xml response using XML Path": [
          "**********WALMART API KEY: IMPORTANT, PLEASE READ********************",
          "Extracting data from response using XMLPath-part1",
          "Extracting data from response using XMLPath-part2"
        ],
        "Assertions in REST Assured using Hamcrest Library": [
          "Adding single assertion to tests",
          "Adding Multiple Assertions To Tests",
          "Soft Assertions In Rest-Assured"
        ],
        "JSONAssert Library for asserting on complete JSON Responses": [
          "Asserting on complete JSON Response"
        ],
        "Root Path in REST Assured": [
          "Setting Root Path in REST Assured"
        ]
      },
      "requirements": [
        "This course requires that the user has some basic programming knowledge in Java",
        "Basic understanding of RESTful Services"
      ],
      "description": "**COMPLETE GUIDE FOR REST ASSURED WITH REAL-WORLD API'S, THROUGH COVERAGE ON FRAMEWORK DEVELOPMENT**\nIn the 21st century, almost all web applications use web services to communicate or interact with each other. Most modern-day web services are built on Representational state transfer (REST) architecture; REST has gained a lot of popularity and it will continue to do the same due to its simplicity in comparison with other technologies.\nIt is very important for software QA engineers, automation engineers, and software developers to understand the importance of Web Services testing and more importantly how to automate these tests. Automating Application Program Interface (API) tests are critical and crucial for most projects due to the fact that API tests are far more stable, reliable and fast.\nIn this course, you will be provided with the tools and techniques needed to be successful with REST API automation. We will be focusing on the important topics listed below:\nIntroduction to REST Assured, which is a popular open-source library used for API test automation. Learn to write tests for GET, POST, PUT, PATCH and DELETE operations using a sample application provided in the course\nUnderstand and use JSONPath, XML Path (with Groovy syntax) to assert and extract the response\nSimplify writing JSONPath by using Root path feature\nPractical examples demonstrating different Rest Assured topics (Request Specification, Response Specification, Logging, Parameters, File Download etc.)\nLogging Request and Response information based on test status\nAvoiding writing repetitive code by using Request/Response specification concepts\nAdding multiple assertions to a single test\nSoft Assertions in Rest Assured\nFile Download\nFile Upload using the multipart method\nWork with real-world examples such as Walmart Search API, PayPal Payment Service\nUse PayPal Web Service to learn different concepts like Authentication using OAuth 2.0, passing of access tokens to different requests, and executing GET, COMPLEX POST requests\nUse OAuth 1.0 authentication with Twitter to create Tweets, read tweets using Rest-Assured\nAuthenticating into applications which implement Form Authentication using Spring Security\nAuthenticating into applications that implement Form Authentication using Spring Security & CSRF token implementation.\nSending Soap Requests using Rest-Assured\nSending requests via Proxy Server\nParsing HTML Data using JSOUP Library\nUsing JSONAssert Library to assert on complete JSON responses\nLearn to use setup & configure Allure Reports\nProvide beautiful DisplayNames, Descriptions, link information in your reports\nAdd detailed test step information & attachment information in the reports\nFRAMEWORK DEVELOPMENT WITH JAVA, JUNIT, ALLURE REPORTS\nContinuous Integration(CI) with Git, Github & Jenkins\nAt the end of this course, you will feel at \"Rest\" and will be \"Assured\" to take up API Testing, API Automation and successfully execute it in your organization!",
      "target_audience": [
        "QA Engineers who want to learn how to write API automation",
        "Automation Engineers, SDET's who want to learn an additional Java testing library for RESTful APIs",
        "Software developers who would like to learn the art of API test automation using REST Assured"
      ]
    },
    {
      "title": "Selenium Webdriver with PYTHON & PYTEST - Best for beginners",
      "url": "https://www.udemy.com/course/selenium-using-python/",
      "bio": "#1 LATEST - Learn Basic Python & Selenium Python Automation from Basics to Advanced level with Framework on LIVE Project",
      "objectives": [
        "Complete basic PYTHON Knowledge with Practicals",
        "Complete knowledge on Python Automation using Selenium WebDriver",
        "Complete Python Unit Test Frameworks - Pytest which will helpful for Unit, Integration and System Testing",
        "Complete Selenium Python API Methods with real time practicals on LIVE Websites",
        "You will Learn to build a framework from scratch",
        "You will Learn Allure reporting framework",
        "You will Learn loggers for logging details into reporting",
        "You can able to build a basic framework from scratch from beginners to advance level with full confidence",
        "Learn Complete UI Automation using Python Selenium and build your own Framework",
        "Covered from Very very Basics so that Anyone can follow this course and start career in Automation Testing",
        "This will help you to switch from Manual Testing to Automation Testing - with very very easy guidance & learning"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course (Must watch till end)",
          "Demo to the Course (Must watch till end)",
          "Humble Request !!",
          "Better Learning Experience - Must for new to Udemy | Optional who know",
          "How to Reach out to Instructor ?"
        ],
        "Set up & Prerequisites": [
          "Download & Setup Python for Mac/Linux",
          "Download & Setup Python for Windows",
          "Special Setup for Windows User - (Option & If above is Not working)",
          "Download & setup Pycharm",
          "What is PIP & it's uses",
          "Using PIP & Practice"
        ],
        "Python Very Basics Concepts": [
          "Creating new Python Project in Pycharm",
          "Creating Python File & first program",
          "PYTHON Identifier",
          "Python Comments & System inputs"
        ],
        "Python Data Types": [
          "Data types in PYTHON",
          "Declare & working with single data type",
          "Declare & working with Multiple data type",
          "List | Tupple & Dictionary Concepts"
        ],
        "Operator in Python": [
          "Python Operators",
          "Working with all the python operator"
        ],
        "Python Statements & Flow control": [
          "If Else use in Python",
          "For loop in Python",
          "For loop with Range in Python",
          "While loop in Python"
        ],
        "Python function & Switch Case": [
          "Python function with Practicals",
          "Handling multiple cases using switch",
          "Handling multiple cases using switch Part - II"
        ],
        "Python OOPs Concepts": [
          "Basic OOPs Principal & Class & Object",
          "Default Constructor in Python",
          "Parameterized Constructor in Python",
          "Inheritance in Python",
          "Class & Instance variable in Python"
        ],
        "Python String Concepts": [
          "String Basic Concepts in Python",
          "String Basic Function Part - II"
        ],
        "Exception handling in Python": [
          "Handling Exception in Python",
          "Raising exceptions in PYTHON",
          "String Basic Function Part - I",
          "Exception Handling in PYTHON",
          "Exception Handling with Try-except-else",
          "Exception Handling with Try-Except-Else-Finally"
        ]
      },
      "requirements": [
        "You don't need any Python coding experience to start this course - Even non Programming candidates can start easily",
        "You will have Life Time instructor support - You can contact me any time for your Queries",
        "Covered from very very basics & assume like you don't know anything about python-selenium",
        "All class notes & Live practical codes will be given for reference."
      ],
      "description": "Learn SELENIUM with PYTHON from Scratch starting from Basics concepts to Framework design\n\n\nBest Course for Beginners as Everything is covered from scratch - No prerequisites is needed to start this course.\nWe have assume you don't know anything about PYTHON & SELENIUM & started with very very basics.\nYou can refer the course contents - we have broken down in small small pieces so that anyone can learn in easy way.\n\n\nWhy this Course ?\nPython is one of the most popular programming languages for automation, Artificial Intelligence (AI), web security, and web applications. With companies constantly upgrading to new technologies, there's a growing demand for skilled Python developers, especially those with expertise in Selenium automation testing. This course provides an opportunity to learn these in-demand skills and land your dream job in test automation and web development.\nThis course is designed with beginners in mind, offering a step-by-step guide to learning Python and Selenium automation from scratch. Whether you're starting with no experience or need a structured framework to enhance your skills, this course is perfect for you.\n\n\nThis Course has design in below way - this course Unique & help beginners to learn in easy way\n- Covered Basic PYTHON, So that anyone can start and learn easily\n- Covered All Basics Selenium Concepts along with Live Application\n- Multiple Pictorial representation, PPT & Image is being used to help beginners to learn in Easy way.\n- Covered All Basic PYTEST framework from scratch\n- Covered Building framework from Scratch for a beginner after Learning Basic Python-Selenium\n- Covered Page Object Model, Utility, TestBase & OOPS concepts as part of Framework.\n- Covered Allure Reporting for Reporting result from scratch\n- Covered Loggers for logging the details in report which company uses in Real time Project.\n- Life Time Query Support\n\n\nCourse Highlights:\nPython Basics for Automation\nLearn the fundamentals of Python programming, tailored for automation testing. Whether you're a complete beginner or transitioning from another language, this course starts from basic Python concepts and builds a solid foundation.\nSelenium WebDriver Automation\nMaster the Selenium WebDriver framework for automated browser testing. Learn web automation techniques to test web applications across different browsers using Python.\nInteractive Learning with Real-Life Projects\nWork with live applications and real-world scenarios to gain practical experience. Hands-on Python-Selenium projects will ensure you can apply what you've learned to actual testing environments.\nVisual Learning with Pictorial Representations & PPTs\nMultiple diagrams, images, and PowerPoint presentations help you understand complex concepts in a simple and visual way. Ideal for beginners who want to grasp the core ideas faster.\nPyTest Framework from Scratch\nLearn how to set up and work with PyTest, one of the most popular Python frameworks for unit testing and automated test execution. Understand how to write test cases and organize your tests effectively.\nBuild Your Own Test Automation Framework\nLearn to build a Python-Selenium test automation framework from scratch, including Page Object Model (POM), Utility classes, TestBase setup, and OOPS concepts. Gain real-world skills to structure and scale automation projects.\nAllure Reporting for Test Results\nLearn how to generate Allure reports to track and display your test results. Allure is widely used in the industry for generating beautiful and detailed test reports, ensuring professional-quality automation results.\nLogging with Loggers for Real-Time Project Use\nDiscover how to implement loggers for tracking test execution in your automation scripts. Learn how companies use logging for debugging and monitoring in real-time projects.\nLifetime Query Support & Guidance\nGet lifetime access to the course content and query support from the instructor. Whether you have doubts on Python, Selenium, or automation frameworks, get timely assistance as you learn.\n\n\nTopics includes:\n\nPython Introduction\nPython Download & Setup for Mac & Window\nDownload & Install Pycharm\nPIP with Examples\nCreating Python basic Project & First Test\nPython Very very basic concepts like - identifiers, comments & system input etc.\nPython Data Types\nPython Operator\nPython Statements & Control flow like - for loop, if-else, switch-case & while etc.\nPython Exception Handling\nPython OOPS Examples\nVery very basic of Selenium - like how selenium work & write first program (Best for beginners)\nAll Basic Selenium methods & API to perform different actions on webpage (Best for beginners)\nSelenium Locators - Complete locators are covered\nComplete XPATH & CSS is covered, VVI for UI Automation (Best for beginners) - No other Course have this, refer contents\nSelenium Multi Browser Execution\nPython Selenium API Methods\nAdvanced Selenium User interactions\nEnd to end Practise Examples to Automate live Application\nPytest - Basic Unit Testing Framework\nPytest Fixtures basic to expert\nPytest Parameterization\nPytest Annotations, Command Line Arguments\nPage object Model Design Pattern\nEnd to end Framework design from scratch like a beginners (Best for beginners)\nAllure Reporting\nLoggers\nand Many more to come.\nMost Enrolled from below categories:\nPython Selenium Automation Course\nLearn Python for Automation Testing\nSelenium WebDriver with Python\nAutomation Testing with Selenium\nTest Automation Framework with Python\nPyTest Framework from Scratch\nBuild Automation Frameworks with Selenium\nPage Object Model in Python Selenium\nAllure Reporting for Selenium Automation\nLogging in Python Selenium Tests\nPython for Web Automation\nAutomated Testing with Selenium WebDriver\nSelenium for Beginners\nReal-Time Automation Testing Projects\nQA Automation with Python\nSelenium Automation Test for Web Applications\nPython SDET Training\nTest Automation Certification with Selenium\nLearn Test Automation for Web Applications\nWho Can Enroll in This Course?\nBeginners who want to learn Python programming and automation testing from scratch.\nManual testers looking to transition into test automation using Python and Selenium.\nDevelopers and QA engineers wanting to improve their web automation skills with Selenium.\nAspiring SDETs (Software Development Engineers in Test) aiming to specialize in Python-based automation.\nStudents or professionals preparing for a career in software testing or QA automation.\nAnyone interested in gaining expertise in web application testing, browser automation, and test frameworks using Python and Selenium.\nWhy Choose This Course?\nNo prior experience required – Learn Python and Selenium from scratch.\nHands-on projects and real-time examples for practical experience.\nLifetime access to course material and query support.\nLearn to build an automated test framework with Page Object Model, OOPS concepts, PyTest, and more.\nLearn industry-standard tools like Selenium WebDriver, Allure reporting, and logging frameworks.\nPrepare for ISTQB Certification or start your career in test automation with Python.\n\nOn completion on this course You will be Mastered in Web Automation using Selenium with Python and can build a framework from scratch & use it in your company or land to High Paying Job.\n\n\nAll the Very Best !\nKeep Learning :: Keep Growing\nPankaj G",
      "target_audience": [
        "Manual testers who want to learn Automation in easy way using Python",
        "Freshers/Graduates who want to start their Carrier to Journey in IT World",
        "Beginners interested in learning Python-Selenium",
        "Want to Update skills & Job change"
      ]
    },
    {
      "title": "Android Testing: Unit Tests, Hilt, ViewModels and more!",
      "url": "https://www.udemy.com/course/android-testing/",
      "bio": "Learn Android Testing with Kotlin: Unit tests, Hilt testing, ViewModel, Fragment, Room, Repos, Test Doubles included!",
      "objectives": [
        "Android Testing",
        "Unit Tests",
        "Integration & UI Tests",
        "Testing with Hilt",
        "ViewModel Testing",
        "LiveData Testing",
        "Fragment Testing"
      ],
      "course_content": {
        "Introduction to Testing": [
          "Introduction",
          "Different Kinds of Testing",
          "Simple Application",
          "First Unit Test",
          "What is TDD?",
          "Test Introduction App GitHub Link"
        ],
        "Building Application": [
          "ArtBook Introduction",
          "ArtBook Setup",
          "All Views",
          "Navigation and ViewBinding",
          "Room",
          "API",
          "Hilt",
          "Repository",
          "ViewModel",
          "Fragment Factory",
          "Adapter",
          "Art Fragment",
          "Finishing Application"
        ],
        "Advanced Testing": [
          "Test Doubles",
          "Testing LiveData",
          "Testing Room",
          "Hilt Testing",
          "First Fragment Test",
          "Espresso and Mockito",
          "RecyclerView Test",
          "GitHub Link for ArtBook Application",
          "Bonus"
        ]
      },
      "requirements": [
        "Intermediate Android Programming Knowledge",
        "Intermediate Kotlin Knowledge",
        "Ready to go Android Studio setup"
      ],
      "description": "Welcome to the Android Testing Course!\nIf you are an Android Developer who is looking for to learn about testing your mobile applications, you came to the right place!\nThis course is for Android Developers who at least have intermediate knowledge for Kotlin and Android Development. We will learn about testing and create an application from scratch with using Jet Pack components to test it as well. All course will be completely hands-on experience.\nCourse is presented by Atil Samancioglu who serves more than 250.000 students worldwide on Mobile Application Development & Cyber Security. Atil also teaches Android Development in Bogazici University. Course is made with cooperation of Codestars, serving more than 1.5 million students worldwide!\nSome of the topics that we are going to cover during the course:\nUnit Tests\nIntegration & UI Tests\nTesting with Hilt\nTesting Fragments\nTesting ViewModels\nTesting LiveData\nTest Doubles\nMockito & Espresso\nJUnit\nTesting Room\nTDD Principles\nTesting Navigation\nIf you are on your way to become a professional Android Developer, this course has everything you need, especially in the testing side of things. We will create an application called Art Book from scratch and test it together to practice everything that you need to know about testing Android applications.\nAll codes will be shared by us via GitHub and you can ask any question via Q&A to reach the instructor.\nHappy coding!",
      "target_audience": [
        "Android Developers who want to learn about testing mobile applications",
        "Android Devs who want to enhance their skills on JetPack components",
        "Android Devs who want to learn about testing with dependency injection frameworks (Hilt)"
      ]
    },
    {
      "title": "Selenium WebDriver - Working With Elements",
      "url": "https://www.udemy.com/course/selenium-working-with-elements/",
      "bio": "Master web element identification, manipulation, and interrogation using Selenium WebDriver",
      "objectives": [
        "Identify web elements using Selenium WebDriver",
        "All the different locator strategies for Selenium WebDriver",
        "Master XPath",
        "Navigation with Selenium WebDriver",
        "Web element manipulation",
        "Web element interrogation",
        "Mouse and keyboard actions with Selenium WebDriver",
        "Performing actions such as drag n' drop, drawing, hovering",
        "Implicit and Explicit waits",
        "How to properly handle element identification so that your tests are not flaky",
        "Expected Conditions in Selenium WebDriver"
      ],
      "course_content": {},
      "requirements": [
        "You should have some flavor of Visual Studio installed, Community edition is fine",
        "You should have basic understanding of C# and Visual Studio",
        "You should have ChromeDriver and Chrome browser installed"
      ],
      "description": "Are you struggling with working with HTML using Selenium WebDriver? Do you know how to easily identify an element using Selenium WebDrriver? Do you know how to manipulate that web element? Do you know to to perform a drag n' drop on an element? If not, then these are just a few of the questions that will be answered in this course.\nThis course is a complete guide on working with web elements in Selenium WebDriver! Once you are finished with this course, you will know how to work with any web elements, any time, on any web application.\n\"Relevant content that I will be able to apply to my automation tests *immediately*, a VERY effective presentation approach (evolving the same example and comparing/contrasting), and an excellent teacher / presenter. Thank you so much for your time and sharing your knowledge Nikolay!.\" -Krissy\nWhat will you learn?\n- Basics of HTML\n- All the different locator strategies for Selenium WebDriver\n- How to identify web elements using Selenium WebDriver\n- Master XPath\n- Navigation with Selenium WebDriver\n- Web element manipulation\n- Web element interrogation\n- Mouse and keyboard actions with Selenium WebDriver\n- Performing actions such as drag n' drop, drawing, hovering\n- Implicit and Explicit waits\n- How to properly handle element identification so that your tests are not flaky\n- Expected Conditions in Selenium WebDriver\nWhat my students are saying:\n\"The best tutorials I have ever seen, simply awesome. I take off my hat in front of you, you are an gorgeous professor, I am speechless to express how satisfied I am with these tutorials.\" -Lisbey\n\"I've been searching for good Selenium C# videos since December 2014. I've been using the IDE but now it's mandatory that I use webdriver. Just in the past few videos I have been provided with more useful information than I've discovered independently in 23 months. Thank you for creating this series\" -Kay",
      "target_audience": [
        "Automation Engineers looking to improve their Selenium knowledge",
        "QA individuals looking to get started with Selenium"
      ]
    },
    {
      "title": "Performance Testing using LoadRunner 12.50",
      "url": "https://www.udemy.com/course/performance-testing-using-microfocus-loadrunner-basics-advanced/",
      "bio": "(30 Day Money Back Guarantee) - Extensive, Hands-on Training with Real Time Project, Material and Query Support.",
      "objectives": [
        "Students reported that they were able to troubleshoot the issues faced in the real projects after taking this class",
        "Even if you are using any other performance testing tool, this course will provide you core guidelines for utilizing it for maximum benefits in less time.",
        "By end of the course you will learn to develop a workable strategy for load testing of an enterprise system and be ready to handle any performance testing project using LoadRunner tool"
      ],
      "course_content": {
        "Introduction to Performance Testing": [
          "Hand out / Course Material for the Course",
          "Access to Instructor - Kumar Gupta",
          "Software Testing",
          "Why Performance Testing",
          "Why Applications Become Slow",
          "What is Perfomance Testing",
          "VUsers",
          "Introduction to performance testing - quiz"
        ],
        "Software Architecture": [
          "Running Notes for this course created by the Students",
          "What is Architecture?",
          "The Importance of Architecture for Performance Testing",
          "What is A Server",
          "Understanding Servers",
          "Application Layers",
          "Two Tier Architecture",
          "Three Tier Architecture",
          "N Tier Architecture",
          "Know your Servers and Host Machines",
          "Protocol",
          "Software Architecture - Quiz"
        ],
        "Installation of LR (LoadRunner)": [
          "Installation of LoadRunner"
        ],
        "Performance Testing": [
          "What is Performance Testing",
          "What is Performance Testing Part-2",
          "Terminology of PT",
          "Performance Testing Vs Performance Engineering",
          "Performance Testing Life Cycle (PTLC)",
          "Performance testing - Quiz"
        ],
        "NFR Gathering": [
          "NFR Gathering",
          "NFR Gathering Part-2",
          "NFR Gathering - Quiz"
        ],
        "Work Load Modelling": [
          "Work Load Modelling",
          "Work Load Modelling Part-2",
          "Work Load Modelling Part-3",
          "Little's Law",
          "Little's Law Part-2",
          "WLM Quiz"
        ],
        "Introduction to LoadRunner": [
          "Components of Loadrunner",
          "VUGen",
          "Controller",
          "Analyzer",
          "LR Architecture",
          "Where are LR Components Installed?",
          "Calculation of LG's",
          "LR Basic Flow",
          "Introduction to LoadRunner - quiz"
        ],
        "VUGen": [
          "VUGen Panes and Layouts",
          "Steps to Create a Script",
          "Protocol Advisor",
          "VUGen Recording Events Part1",
          "VUGen Recording Events Part2",
          "VUGen_Recording Events_Part3",
          "Why Protocol Needs to be set in VUGen?",
          "Protocol advisor",
          "VUGen LR Functions_Cache and cookies",
          "VUGen: Understanding Piece of code",
          "VuGen: Run-Time Settings (RTS)",
          "Recording Script Using VUGen",
          "HTTP Methods",
          "VuGen: Playback",
          "VUGen: Playback with Comments",
          "VuGen: Playback with Transactions",
          "Call Actions",
          "HTML Based Script And URL Based Script Part 1",
          "HTML Based Script And URL Based Script Part2",
          "HTML Based Script And URL Based Script Part3",
          "Check Points",
          "Text Check Points Part 1",
          "Text Check Points Part2",
          "Image Check Points",
          "Rendezvous Point",
          "VuGen - Quiz"
        ],
        "C Functions": [
          "C Functions",
          "C Functions: Datatypes",
          "C Functions: Declaration of Variables",
          "C Functions: Programming",
          "C Functions: Script Storage",
          "C Functions: Declaration of Strings",
          "C Functions: Comparison of Two Strings",
          "C Functions: Strcmp Function",
          "C Functions: Conversions - Part1",
          "C Functions: Conversions - Part2",
          "C Functions: Conversions Part3",
          "C Functions: Conversions Part4",
          "Where do we use conversions - Part 1",
          "Where do we use conversions - Part2",
          "Where do we use conversions - Part3",
          "C Functions - Quiz"
        ],
        "Parameterization": [
          "Purpose of Parameterization",
          "How to do Parameterization - Part1",
          "How to do Parameterization - Part2",
          "How to do Parameterization - Part3",
          "Parameterization - Part1",
          "Parameterization - Part2",
          "Parameterization - Part3",
          "Parameterization - Part4",
          "Parameterization - Quiz"
        ]
      },
      "requirements": [
        "Basic Computer knowledge",
        "Any Basic scripting language knowledge"
      ],
      "description": "Welcome to \"Isha Training Solutions\"\n**************UPDATED THE COURSE ON 2nd Sept 2018**************\nModified the installation files <Both 12.53 and 12.50> and provided more clarity on the mode of installation\n*****************************************************************\n\n\n**************UPDATED THE COURSE ON 26 JULY 2018****************\nADDED FOLLOWING\nQuiz for each section\nAdded a new section called \"Miscellaneous section\" and added a video demonstrating a script to \"Merge 2 arrays\"\n*****************************************************************\nI am able to Record, Replay back, Add transactions & Add Check Points, then why should I take this course?\nThis course is much deeper than just record and playback.\nStudents reported that they were able to troubleshoot the issues by themselves after attending the course.\nAlso, reported that the course helped them to break the interviews confidently.\nLots of C functions, LR functions, conversions etc...will be discussed.\nIf you are lead, you will understand which NFR's to collect from client and exact process to follow during project implementation. (PTLC).\n*****************************************************************\nHere is our all new and improved Performance testing with LoadRunner training course of 33+ hours conducted by the LoadRunner expert having 14+ years of practical industry experience!\nLearn all the basic and advanced performance testing concepts with hands-on practical examples. The course syllabus is designed by considering the current job market trends and industry requirements.\nPerformance Tester is in high Demand!!!!\nAt the end of the course be ready to handle any performance testing project using LoadRunner tool. Even if you are using any other performance testing tool, this course will provide you core guidelines for utilizing it for maximum benefits in less time.\n****************************************************************************************\nMy other courses on Udemy\nApache Jmeter - Basics to Intermediate level\nAdvance LoadRunner Scripting for HTTP/HTML Protocol\nWebServices Performance Testing Using Loadrunner(SOAP &REST)\nLoadrunner 12.50 SAPGUI Protocol scripting\n****************************************************************************************\n\n\nPls email me on kgupta.testingtraining@gmail.com for any questions / concerns. For immediate response, pls Whatsapp me on +91-8019952427.\nA real time project is also added to this course. Once, you have completed the course, you can check your knowledge on the LoadRunner tool by completing this project",
      "target_audience": [
        "Perfect for beginners to experienced level professionals who want to make career in performance testing",
        "Performance Testers, Software Testers, QAs, Developers, BAs, Leads, and Managers",
        "Entry level candidates who wants to learn Performance testing using LoadRunner",
        "You can start this course with basic Manual Testing skills",
        "Best QA testing career option for those who want to be in automation testing with basic programming skills"
      ]
    },
    {
      "title": "Selenium WebDriver 4 With Python - Novice To Ninja [2024]",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-python3/",
      "bio": "Join the \"Top Rated Selenium 4 (Latest) Course\" to learn automation framework from scratch using real web application",
      "objectives": [
        "***** At the end of this course, you will have detailed understanding of Web Automation Frameworks",
        "You will be able to EXPLAIN, DESIGN and IMPLEMENT structured AUTOMATION FRAMEWORKS",
        "***** You should be able to lead any Selenium Automation Project on your own",
        "You will have required skills to automate any web application",
        "You will be able to get hands on Python Programming Language",
        "***** You will be able to understand and write efficient testing code",
        "You will be able to perform CROSS-BROWSER testing",
        "You will have good understanding of Unittest and Pytest Frameworks",
        "If you are looking for a job, with all this great knowledge you should be easily able to clear Selenium Automation interviews"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Selenium?",
          "Selenium WebDriver Architecture - How It Works?",
          "Instructor Introduction",
          "How To Reach Me Anytime? *** MUST WATCH ***"
        ],
        "Setup And Configuration": [
          "Python Installation - Windows",
          "Configuration Of Python - Windows",
          "Python Installation And Setup - Mac",
          "First Project Creation And PyCharm Installation",
          "*** Must Watch Lecture Before Moving Forward ***",
          "Package Management Using PIP",
          "Installing iPython"
        ],
        "Understanding Variables And Data Type": [
          "Python Terminal Walkthrough",
          "Understanding Objects And References",
          "Variables Rules",
          "Numbers Data Type And Math Operations",
          "Numbers - Exponentiation And Modulo",
          "Arithmetic Order Of Precedence",
          "Boolean Data Type",
          "Working With Strings",
          "String Methods - Part 1",
          "String Methods - Part 2",
          "More String Slicing And Indexing",
          "Strings Formatting",
          "Strings Quiz *** Test Your Knowledge ***"
        ],
        "Advanced Data Types": [
          "List And Accessing The Elements",
          "List Methods",
          "List Quiz *** Test Your Knowledge ***",
          "Working With Dictionary",
          "Nested Dictionary",
          "Dictionary Methods",
          "Dictionary Quiz *** Test Your Knowledge ***",
          "Working With Tuple",
          "Tuple Quiz *** Test Your Knowledge ***"
        ],
        "Comparison And Boolean Operators": [
          "Working With Comparators",
          "Understanding Boolean Operators",
          "Boolean Operators - Order Of Precedence",
          "Comparison And Boolean Operators Quiz *** Test Your Knowledge ***"
        ],
        "Program Control Flow": [
          "Conditional Logic - If Else Conditions",
          "While Loop Demo",
          "Break Continue And While/Else",
          "For Loop Demo",
          "Iterating Multiple Lists - Using the Zip Function",
          "Using Range Function In For Loop"
        ],
        "Functions/Methods - Working With Reusable Code": [
          "Understanding Methods",
          "Working With Return Values",
          "Working With Positional / Optional Parameters",
          "Understanding Variable Scope",
          "More Built-In Functions",
          "Practice Exercise With Solution *** Homework ***"
        ],
        "Classes - Object Oriented Programming": [
          "Understanding Objects / Classes",
          "Create Your Own Object",
          "Create Your Own Methods",
          "Inheritance",
          "Method Overriding",
          "Practice Exercise With Solution *** Homework ***"
        ],
        "Exception Handling": [
          "Exception Handling Demo",
          "Finally And Else Block",
          "Practice Exercise With Solution *** Homework ***"
        ],
        "Modules": [
          "Builtin Modules",
          "Create Your Own Modules"
        ]
      },
      "requirements": [
        "Windows/MAC computer",
        "Browsers (Firefox or Chrome)",
        "***** NO AUTOMATION / CODING EXPERIENCE NEEDED, beginners will be easily able to follow this course",
        "Python Programming Language concepts are covered in the course, no experience needed",
        "All the required installation are covered in the lectures and documentation has been uploaded to the course"
      ],
      "description": "** Best Selenium WebDriver With Python Programming Language Course with latest Selenium 4 version **\n** Complete Framework Implementation From Scratch **\nThis course includes a wide range of topics from Selenium WebDriver Basics and  Advanced, Python Programming Concepts, Unittest And Pytest Framework, Automation Framework Design (Page Objects, Data Driven, Reading CSV Files), Logging Infrastructure, Cross-Browser Testing, Interview Preparation. All materials including code files\n\nYou achieve two targets with one single course\nComplete Python Programming Language\nSelenium WebDriver Automation\nWhy Python Programming Language?\nPython Programming Language is the fastest growing programming language within both the fields, development and testing. QA industry is rapidly progressing to move on with Python Programming Language for all the automation needs because of the flexibility it offers.\n\n** One stop place to become an Expert in Web Automation Framework related technologies from scratch **\nWe start from Beginners  level and go through Advance level. This is a single course for  everything you need to know related to Web UI Automation.\n\n\n** WHAT MAKES THIS COURSE BEST ON UDEMY?  **\nWe assume that students have no experience in automation/coding and start every topic from scratch and basics.\nExamples are taken from TESTING REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated, that will give  you idea of industry level framework and give you confidence.\nNO PRIOR CODING OR AUTOMATION EXPERIENCE NEEDED, this course covers all the necessary topics.\nGet more than 31 hours of unique content with real example code files provided to refer and learn with examples.\nGet awesome Support, on demand desktop session on Team Viewer and Skype.\nJoin the group of more than 100,000 students learning from us in different courses with positive feedback.\nAre you looking to step into automation industry with the latest technologies in market?\nAre you keen to learn GUI automation using Selenium WebDriver With Python Programming Language and other latest framework technologies?\nInterested in learning how Selenium WebDriver is used in projects?\nPlease take a look at the complete curriculum to get an idea of topics covered in this course.",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career on test automation",
        "Quality Assurance Automation professionals to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "Top Software Manual Testing Live Project with Complete Guide",
      "url": "https://www.udemy.com/course/software-manual-testing-live-project/",
      "bio": "Live Project with Real time work Experience - Used Realtime PRD, Sprint, Test cases execution, Bug, JIRA Covered QA Life",
      "objectives": [
        "Live Project with Real time work Experience",
        "- Top rated Live Project to gain 2-4 Year of work experience.",
        "How QA go through PRD & start test process",
        "QA Project Onboarding Process",
        "How QA Write & Execute Test cases on Real time Project",
        "How to Raise Bug in JIRA with Real time execution on Project",
        "Real time feeling of working as a QA in a Company",
        "Real time work experience with working Agile Model in a Sprint.",
        "Complete task & process how QA work in Live Project.",
        "Project Release Process & How Company Go Live in the market",
        "- Live + Online Query session if Required",
        "- One can Practice Interview and MCQ via quizzes"
      ],
      "course_content": {},
      "requirements": [
        "Basic Software Manual Testing Concepts rest everything has been covered.",
        "No Programming or Paid tool required to learn this - We have used completely Open source & free tools"
      ],
      "description": "Live Software Testing Project\nTop Software Manual Testing Live Project with Complete Explanation.\nThis is the hottest Course on Udemy to Gain Real time QA Work experience on live Project !\nGain 2-4 Year Real time QA Work Experience.\n\n\nLong Story short - If you are looking for Software Testing Live Project - You can go for it without any second thoughts.\n- Best for Beginner course for Live Project on Software Manual Testing with Real Work Experience !!\nWhere You will not understand only Theory But You will experience how to work as a QA in a company !!\nThat level of contents this course has - You can Just refer course contents & you will understand.\nIf you are a beginner - Just go a head  nothing can beat you ^^\n\n\n- No Lengthy 50-100 hr course material ONLY 6 hr & get all the basics required to learn Live Project.\n\n\nQueries - Why this is top Rated/Demanded Course ? Why I should go for it ?\nAns:\n- Live Project Covered from Scratch so that anyone can start.\n- Explained in simple & easy way with Real time work experience.\n- This Project Covered real work which QA do in an Organisation.\n- You will get 2-4 Year QA Exposures & have clear understanding what QA does on day to day basis.\n- You will Get to Know how QA go through Sprint & PRD & write Test cases.\n- You will get to know how to execute Test cases in Real time QA Project.\n- You will experience how QA raise bugs in Real time.\n- You will get to Know how QA Prepare Release Notes, Test Summary Report etc.\n- You will Understand Complete QA Process that how QA Works in a Project.\n- You will get to know how to Use JIRA tools for QA purposes.\n- You will get to Know how QA release software in real time.\n- You will understand how Project go Live into the market after Testing.\n- Complete Guide on how to Prepare Your best Resume for Fresher as Well as Experience of 2-4 Years.\n- 200+ Interview Questions has been given, which you can prepare and master the interview process.\n- How to search Job after Preparation & Best Practice to follow.\n\n\nNot only that It covered many more topic which QA used in real Project Testing.\nYou can Just Go through the contents & you will be able to decide that this will be best match for You !!\nHave Covered almost all the Task which QA Does in Real time Testing Projects.\n\n\nHow This Course is Structured:\nBest for Beginners - Assumed Like You are a Beginners to Live Project.\nIf you are a Freshers & going through this Project after basic manual Testing course - This will be very much booster for you & you will be in high demand out of many candidates who has not any live project experience.\nVery Easy explanations & stuff you learn will be easy to apply to your own situation/company.\nTo reinforce learning, we have exercises and assignments scattered throughout the course so you can learn by doing yourself.\nWe'll be actively involved in the discussion board answering any questions you might have! Don't be afraid to ask!\nI will be very supportive throughout this course and you can always reach out to me over email & I will do all possible support.\nWho Can Enroll in This Course?\nBeginners in Software Testing who want to learn the QA process from scratch and gain real-world experience in manual testing.\nFreshers entering the field of software testing and seeking to stand out by gaining hands-on experience through a live project.\nAspiring QA professionals who wish to get familiar with real-time project work and understand the day-to-day tasks of a QA engineer.\nSoftware testing enthusiasts looking to gain an in-depth understanding of the complete QA lifecycle, including writing test cases, raising bugs, and preparing release notes.\nManual testers who want to upskill with live project experience to boost their employability.\nTest Engineers who want to transition into real-time testing roles and gain project exposure to add value to their resumes.\nQA Interns or Junior QA testers looking for practical experience on real projects and guidance on how to execute test cases and work in sprints.\nProfessionals looking to prepare for interviews in the QA or Software Testing field with a focus on real-time experience.\nSoftware Developers who want to understand the QA perspective and improve collaboration with testing teams.\nCareer Changers aiming to shift from other roles into manual software testing with live project experience.\nExperienced professionals (2-4 years) wanting to refresh their knowledge of the latest QA practices and real-world testing scenarios.\n\n\nWhy This Course Is Perfect for You?\nLearn manual software testing with a live project, covering real-world tasks QA engineers face daily.\nGet a 2-4 years’ worth of QA experience by practicing real-time activities like writing test cases, executing tests, and raising bugs.\nUnderstand the complete QA process, from sprint planning to release notes and test summaries.\nLearn to use industry-standard tools like JIRA for test management and bug tracking.\nPrepare for QA interviews with 200+ interview questions and tips to craft a standout resume.\nEasy-to-follow content with step-by-step guidance for beginners and practical assignments to reinforce learning.\n\n\nKey Enrolments are from below categories:\nSoftware Testing Live Project\nManual Testing Live Project\nQA Engineer Real-Time Experience\nLive Project for Beginners in Software Testing\nSoftware Testing Project with Real-Time Experience\nComplete QA Process Training\nLive Software Testing Experience for Freshers\nManual Testing with Real-World Scenarios\nTest Case Writing and Bug Reporting\nQA Career Starter Pack\nSoftware Testing for Beginners\nJIRA for QA Professionals\nHow to Execute Test Cases in Real-Time Projects\nQA Testing Interview Preparation\nQA Project Experience for Job Seekers\nReal-Time Project Experience in QA\nSoftware Testing for Career Transition\nManual Testing Career for Freshers\nJob Ready QA Skills\nQA Engineer Training from Scratch\nPrepare for QA Jobs with Live Testing Project\nSoftware Testing Internship for Freshers\nManual Testing & Live Project Training\nQA Resume & Interview Preparation\n2-4 Years QA Work Experience in a Live Project\n\n\nJoin me in this course and kickstart your QA career with real-world experience!\n\n\nAll the Very Best\nPankaj Gupta.",
      "target_audience": [
        "Software Manual Tester",
        "Manual QA with Experience of 2-4 Year !",
        "QA looking for Live software Testing Project.",
        "Want to know how Agile & Scrum used in JIRA",
        "Real time feel of working as a QA in a Company",
        "Anyone who want to start a career in software testing and fill gaps",
        "Anyone who want to learn live Project & Prepare for interview."
      ]
    },
    {
      "title": "Cypress : QA Automation for Beginners (V10+)",
      "url": "https://www.udemy.com/course/cypress-test-automation-training-for-beginners/",
      "bio": "Functional, API & Visual Testing",
      "objectives": [
        "Understand Cypress from Scratch",
        "Build fast and reliable Automation tests for any Web Applications using Cypress",
        "You will be able to create UI and API Automation Tests",
        "You will learn the integration of Cypress with Test Management Tools (TestRail)",
        "You will learn how to do Visual Testing using Cypress"
      ],
      "course_content": {},
      "requirements": [
        "Some knowledge of programming",
        "Some Knowledge about QA"
      ],
      "description": "QA is a subset of the software development life cycle (SDLC), and QA automation means using automated testing tools to run tests on the software being developed and report on the results.\n\nAutomation testing handles many of the time-consuming tasks that were previously carried out by manual testers. It’s especially useful for continuous integration and continuous delivery, where software is developed, tested, and deployed multiple times per day, rather than in stages.\n\nCypressio is one of the most trending testing tools in the software testing industry! It is fast, easy, and reliable to script (using Javascript) and run automated tests in browsers such as Microsoft Edge, Chrome, Firefox, and others.\n\n\nWhat you'll learn:\nIntroduction and how to start with Cypress.\nCreating your first project and adding test cases.\nAPI Testing.\nIntegration with tools like TestRail & Applitools\nIn this course all information is presented in an easy straightforward way so any non-tech person can start with Cypress automation tool, also any software engineer who is looking to enrich his knowledge related to test automation is the right course for you.\nIf you don't have prior work experience in cypress projects, this course is made purely to help you.\n\n\nI hope you enjoy the course. Happy Learning!",
      "target_audience": [
        "Software Testers",
        "Beginner QAs interested to learn Automation Tool",
        "Automation Testers"
      ]
    },
    {
      "title": "Data Warehouse / ETL Testing",
      "url": "https://www.udemy.com/course/data-warehouse-etl-testing/",
      "bio": "ETL Testing",
      "objectives": [
        "Master the Command Line and Dozens of Commands",
        "Become an Independent User of the Linux Operating System",
        "Creating, renaming, moving, and deleting files and directories",
        "Understand the basic and Intermediate concepts of databases and MySQL",
        "Learn how to create database tables using SQL commands",
        "Learn SQL operators to write complex SQL queries",
        "Learn about different SQL functions and constraints including NULL values",
        "Foundational Data warehousing concepts",
        "Learning all the concepts and terminologies related to the Data warehouse , such as the OLTP, OLAP, Dimensions, Facts, Star Schema, Snowflake Schema",
        "Data Warehouse Architecture, Data Mart, Data Warehouse Schema and SCDs",
        "You would also learn the basics of Data Modelling Data design",
        "Gain an in-depth understanding of Data Warehouse WorkFlow and comparison between Database Testing and Data Warehouse Testing",
        "Get to know what is ETL Testing and RDBMS Concepts",
        "Understand different ETL Testing scenarios like Constraint Testing, Source to Target Testing, Metadata check,Data Mismatch Check,Data Completeness Validation"
      ],
      "course_content": {},
      "requirements": [
        "Passion and curiosity to learn something new technology",
        "No technical knowledge required",
        "A computer with internet connection"
      ],
      "description": "Data Warehouse / ETL Testing is a testing method in which the data inside a data warehouse is tested for integrity, reliability, accuracy and consistency in order to comply with the company’s data framework. The main purpose of  testing is to ensure that the integrated data inside the data warehouse is reliable enough for a company to make decisions on.\nThe Data Warehouse/ETL testing course videos contain Data warehouse Testing, ETL Testing Scenarios, Data checks and many more complex topics explained in a detailed manner which will be helpful to compete with other Organizations. Usually ETL Testing verifies whether the ETL process is working properly.\nETL Testing is a crucial part of ETL because ETL is typically performed on mission critical data.\n\n\n23+ hours of on demand videos\nClarifications through community\nRight blend of concepts and hands-on\nIn this course, you will:\nThe difference between Data and Information\nWhy do we need Data?\nLearn the ins and outs of SQL syntax\nWhat is RDBMS and its History?\nDatabase Objects and Database Design\nLearning about the Keys and Constraints\nExplaining the Normalization and its types\nUnderstanding the Transactions and its types\nHow to write SQL queries to Manipulate data\nHow to write SQL queries to insert, update and delete data into database\nAnalyze data using Aggregate Functions\nTesting\nLife Cycle of STLC\nTypes of Testing\nWhat is ETL?\nData Checks\nWhat is Validation?\nValidation Checks\nTypes of Checks",
      "target_audience": [
        "Beginners who want to learn the complete concepts of ETL from very Beginning",
        "Database developers and database administrators.",
        "Students who wish to learn a new skill to develop their career.",
        "Professionals who wish to learn a new skill to develop their career."
      ]
    },
    {
      "title": "Playwright Automation: The Ultimate Guide + Framework",
      "url": "https://www.udemy.com/course/playwright-for-test-automation-the-ultimate-guide/",
      "bio": "Build Efficient and Scalable Test Automation Frameworks with Playwright & JavaScript/TypeScript",
      "objectives": [
        "Understand and Implement Playwright Fundamentals",
        "Create a Playwright Test Framework with Page Object Model (POM)",
        "Work with Web Elements and Locators",
        "Debug and Optimize Playwright Tests",
        "Write Assertions and Handle Assertions Failures"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Course Overview",
          "Introduction & Setup",
          "Important Information!"
        ],
        "Running and Debugging Tests": [
          "Running Playwright Tests",
          "Debugging Playwright Tests and Using Trace Viewer"
        ],
        "Writing Playwright Tests": [
          "Writing and Structuring Your First Playwright Tests",
          "Understanding and Writing CSS Selectors",
          "Finding Web Elements Using the locator() Method",
          "Using User-Facing Locators in Playwright",
          "Complex Locators and Filtering Techniques in Playwright"
        ],
        "Working with Web Elements": [
          "Extracting Values and Text from Web Elements",
          "Writing Assertions in Playwright",
          "Auto-Waiting and Handling Timeouts"
        ],
        "Interacting with Web Elements": [
          "Input Fields",
          "Interacting with Checkboxes and Radio Buttons",
          "Selecting Options: Dropdowns and Lists",
          "Handling Browser Alerts and Pop-ups",
          "Implementing Drag and Drop Actions"
        ],
        "Practice & Implement": [
          "Practice 1",
          "Practice 2",
          "Refactoring and Improvements"
        ],
        "Creating a Scalable Playwright Framework Using Page Object Model": [
          "Project Setup and Building the Login Page Object",
          "Building the Products Page Object Model",
          "Adding the Login Fixture for Authentication",
          "Framework Recap"
        ],
        "JavaScript Basics and Core Concepts (Optional Section)": [
          "Introduction to the javascript section",
          "Setting Up Your JavaScript Environment",
          "Variables and Data Types",
          "Operators and Expressions",
          "Control Flow - Conditionals",
          "Control Flow - Loops",
          "Working with Strings",
          "Functions",
          "Objects and Arrays",
          "Error Handling",
          "JavaScript Asynchronous Programming",
          "JSON and Data Parsing"
        ]
      },
      "requirements": [
        "No prior knowledge is required. This course teaches you from scratch, even for complete beginners."
      ],
      "description": "Welcome to Playwright for Test Automation: The Ultimate Guide! This course is designed for both beginners and experienced testers who want to master Playwright, one of the most powerful tools for modern test automation. You will start by setting up your test automation environment and quickly dive into Playwright’s features, including writing, running, and debugging tests in different browsers.\nThroughout the course, you’ll get hands-on experience with essential test automation concepts such as Page Object Model (POM), locators, assertions, and handling dynamic web elements. You will learn how to structure your tests, perform browser interactions, handle alerts, dropdowns, and input fields, and much more. Whether you are testing static websites or modern web applications, Playwright has you covered with its cross-browser support, making it the go-to choice for automating web interactions.\nIn addition to basic concepts, the course will introduce you to advanced Playwright features such as auto-waiting, timeouts, and working with trace viewers to debug and improve your test automation scripts. You’ll also learn how to create scalable, maintainable frameworks using Playwright, leveraging fixtures and best practices to make your tests efficient and reliable.\nBy the end of this course, you will have the confidence to build your own Playwright test automation framework, automate complex web applications, and run tests with ease across multiple browsers.\nWhether you’re looking to improve your skills in web test automation or start your journey into Playwright, this course provides all the tools and knowledge you need to succeed. Join now and start automating with Playwright!",
      "target_audience": [
        "Beginners to automated testing who want to learn Playwright from scratch",
        "Manual testers transitioning to automation testing",
        "Developers who are interested in automating their web application tests",
        "Anyone who wants to automate web elements, debug tests, and build a testing framework using Playwright"
      ]
    },
    {
      "title": "Test Management Tools Package[ ALM , TestLink, JIRA ]",
      "url": "https://www.udemy.com/course/testmanagementpack/",
      "bio": "Including Licensed and Free Test Management tool",
      "objectives": [
        "Ready to work on any test management tool",
        "Ready to handle managerial activities in your project"
      ],
      "course_content": {
        "Setup ALM account": [
          "Setup ALM account"
        ],
        "Requirements": [
          "Create Requirement Folder Structure",
          "Create Requirements",
          "Requirement Tab Feature"
        ],
        "Create Test Case : Test Plan": [
          "Create Folder Structure",
          "Create Test Case",
          "Create Test Steps",
          "Link Test Case with Requirements"
        ],
        "Execute Test Case : Test Lab, Test Run": [
          "Create Test Set(Test Suite)",
          "Execute Test Set",
          "Link Defect to Test Case",
          "Set Execution flow",
          "Test Run Tab"
        ],
        "Defect Section": [
          "Report a new Defect",
          "Supported Attachments",
          "Defect - View, Attachment, Sorting",
          "Defect - History, Flagged, Pinned, Search"
        ],
        "Test Link : Free Test Management Tool": [
          "Test Link : Setup",
          "Agenda of Course",
          "Create Project in Test Link",
          "Generate Test Plan in Project",
          "Working with Build and Release",
          "Work with Test Suite",
          "Create Test Case",
          "Create Test Steps",
          "Execute Test Case"
        ],
        "Test Link : Advance Features": [
          "Search Case and Create User",
          "Assign test case to Tester",
          "Keyword Management"
        ],
        "Test Link : Reporting": [
          "Test Plan Report",
          "Test Report",
          "Other important reports"
        ],
        "JIRA : Bug Tracking and Test Management tool": [
          "Jira dashboard and update profile",
          "Search issue in Jira",
          "Report a new Defect",
          "Defect life cycle : In case of valid defect(Developer Accept It)",
          "Defect life cycle : In case of valid defect(Developer Reject It)"
        ],
        "Task Management in JIRA": [
          "Create Development task",
          "Workflow of Jira task",
          "Create testing task & workflow",
          "Log Working hours",
          "Create Sub task"
        ]
      },
      "requirements": [
        "Windows machine with at least 2 GB ram"
      ],
      "description": "Test management most commonly refers to the activity of managing the computer software testing process. A test management tool is software used to manage tests (automated or manual) that have been previously specified by a test procedure. It is often associated with automation software.\nThis Course covers basic to advance concept of test management\nAny workflow: a great choice for any team, whether you use an agile or traditional approach.\nAny team size: teams of one to 1000s of testers love working with TestRail every day.\nAny method: manage your functional, exploratory and automated tests with ease.\nWe also covers\nManage requirements, features and use-cases\nCreate, edit and execute test-cases\nTrack bugs, enhancements, risks and issues\nMap tests to requirements to track coverage\nSupport for template test cases\nLink bugs to test steps during test execution\nDrill down from requirements to tests and incidents",
      "target_audience": [
        "Testing looking opportunity in project managemeny",
        "Freshers looking opportunity in software testing"
      ]
    },
    {
      "title": "Java for Software Testing Professionals - Basics to Advanced",
      "url": "https://www.udemy.com/course/java-for-software-testing-professionals-basics-to-advanced/",
      "bio": "Upgrade yourself to automation.Complete Java guide for beginners from basics to advanced for Java developers and testers",
      "objectives": [
        "Core Java programming from basics to advanced",
        "OOPS concepts in JAVA",
        "Regular Expressions in Java",
        "Collections in JAVA",
        "Exception Handling in JAVA",
        "Input-Output operations in JAVA"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Introduction to JAVA",
          "JAVA downloading and Installation",
          "Java intro",
          "JAVA Virtual Machine (JVM)",
          "Difference between JDK, JRE and JVM",
          "JVM quiz"
        ],
        "JAVA Programming Basics": [
          "Writing First JAVA program",
          "First Java Program",
          "Introduction to Eclipse IDE",
          "Keywords",
          "Variables",
          "Understanding Data Types",
          "Data Types",
          "String"
        ],
        "Operators": [
          "Arithmetic Operators",
          "Assignment Operator",
          "Increment operator",
          "Logical Operator"
        ],
        "Control-Flow Statements": [
          "if-else",
          "nested if",
          "if-else-if",
          "switch-case",
          "Example program"
        ],
        "Looping in JAVA": [
          "forLoop",
          "While Loop",
          "do-while Loop",
          "Continue Statement",
          "Break Statement",
          "Nested-loop"
        ],
        "Object Oriented Programming (OOP) in JAVA": [
          "Objects",
          "Objects Example",
          "Class",
          "Methods- Declaration, Parameterization, Returning Value",
          "Working with object with Real Life Sceanario",
          "Constructor",
          "Static-Variable",
          "Static-Method"
        ],
        "Collections": [
          "Introduction to Array-List",
          "Working with Array-List",
          "Basic Array",
          "HashMap"
        ],
        "Access Modifiers": [
          "Understanding the concept of package",
          "Default access modifier",
          "private access modifier",
          "Inheritance in Java",
          "Protected and Public access modifier"
        ],
        "Polymorphism": [
          "Introduction to Polymorphism",
          "Method - Overloading",
          "Method - OverRiding"
        ],
        "super - keyword": [
          "super - part 1",
          "super - part 2",
          "super - part 3"
        ]
      },
      "requirements": [
        "No prior knowledge of programming is needed."
      ],
      "description": "Complete  java guide for\nFresh graduates -  Covers basics java to help you get started with Java programming\nSoftware testing professionals -  Covers just enough java concepts to develop Test Automation framework and for all your testing needs\nfor newbies - Covers basics java to help you get started with Java programming\n\n\n**Hand Written explanation for best understanding.\nAbout me : I have been working in IT-Software Testing industry from last 15 years and i have put all those experience and industry standard knowledge into this course. The course filled with industry standard approach, implementation,examples and interview QA\nWelcome to Java for Software Testing Professionals - Basics to Advanced\nLearn java from basics with simple techniques and examples. Java is essentials for IT career whether you are developer or Software Testers.\nThis course below topics and more\nUnderstand how java program is executed\nJVM, JDK , JRE\nEclipse IDE\nKeywords\nvariables\nData Types\nString data type\nArithmetic operators\nAssignment operators\nIncrement operators\nLogical operators\nConditional statements\nswitch case\nLoops in java\ncontinue, break statements\nOOPS concepts in java\nClass\nMethods\nConstructor\nstatic variables\nstatic methods\nJava collections\narray list\narray\nHashMap\nAccess Modifiers\npackage\nInheritance\nPolymorphism\nMethod overloading\nMethod overriding\nsuper keyword\nthis keyword\nfinal keyword\nEncapsulation\nabstract class\nabstract method\ninterface\nregular expression\nexception handling\nInput/Output operations\nRead/Write Microsoft Excel File\n\n\n\nBy the end of this course:\nYou will know how to use java program to derive development and testing solutions\nYou will be able to design and develop test automation frame works\nYou will be able to crack Java based interviews\n\n\nTake a look at the course description to get detailed information about course coverage.\nEnroll now and will see you inside\nHappy Learning\nSubhash Chandra",
      "target_audience": [
        "Anyone who wants to learn java programming from basics",
        "Testing Professionals looking to upgrade their skills to Automation , java programming",
        "Beginner Java developers to brush-up basic java skills"
      ]
    },
    {
      "title": "Game Testing Masterclass",
      "url": "https://www.udemy.com/course/game-testing/",
      "bio": "A Comprehensive Guide to Launch Your Career as a Game Tester: Level Up Your Career with a Game Tester's Toolkit",
      "objectives": [
        "Game tester's job and game development lifecycle",
        "Foundations of testing",
        "Testing techniques",
        "Testing game features",
        "Testing tools"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pros and cons of game testing",
          "Role of a game tester",
          "Bug vs Feature",
          "Game development life cycle (GDLC)",
          "Chapter 1"
        ],
        "Foundations of testing": [
          "Testing principles",
          "Testing types",
          "Test documentation",
          "Chapter 2"
        ],
        "Testing techniques": [
          "Equivalence class partitioning",
          "Boundary value analysis",
          "State transition",
          "Combinatorial testing",
          "Combinatorial testing tool",
          "Use cases",
          "Experience-based test techniques",
          "Game-specific test techniques",
          "Chapter 3"
        ],
        "Testing game features": [
          "Game mechanics",
          "Sound testing",
          "Level testing",
          "Peripherals and localization testing",
          "Crashes and performance testing",
          "Compatibility and network testing",
          "Accessibility, compliance and chaos testing",
          "Chapter 4"
        ],
        "Testing tools": [
          "Environments, in-game tools and screen-recording tools",
          "Test management",
          "Jira search",
          "JQL and Jira filters",
          "Jira bug reporting",
          "Chapter 5",
          "Final test",
          "Conclusion"
        ]
      },
      "requirements": [
        "No testing experience is required. This is a comprehensive guide to launch your career as a game tester"
      ],
      "description": "Welcome to the Game Testing Masterclass. A Comprehensive Guide to Launch Your Career as a Game Tester\nIn my course, you can expect a blend of real-world scenarios, industry best practices, and practical tips that I've gathered throughout my career. My goal is to bridge the gap between theory and application, providing you with the skills and knowledge needed to thrive in the dynamic field of game testing. That is why the course contains not only lectures but also assignments filled with questions for you to test your knowledge.\nKey Topics Covered:\n1. Introduction: Understanding the Role of a Game Tester and the Game Development Lifecycle\nExplore the vital role of a game tester in the game development process\nGain insights into the intricacies of the game development lifecycle\n2. Foundations of Testing:\nEstablish a solid foundation in the principles and theories of testing\nDelve into the significance of quality assurance in the gaming industry\nNavigate through key concepts, terminology, and industry best practices\n3. Testing Techniques:\nMaster a diverse array of testing methodologies tailored for game environments\nDevelop skills in manual and testing\n4. Testing Game Features:\nImmerse yourself in the exciting world of testing different game features\nLearn different types of bugs in different game test areas from mechanics to sound\n5. Testing Tools:\nExplore tools used in the game testing landscape\nWho Should Enroll:\nIndividuals aspiring to pursue a career as game testers\nQuality assurance enthusiasts transitioning into the dynamic field of game testing\nAnyone fascinated by the gaming industry and keen to contribute to its quality\nEmbark on your journey to becoming a skilled game tester today. Enroll in \"Game Testing Masterclass. A Comprehensive Guide to Launch Your Career as a Game Tester\" and unlock the secrets to delivering exceptional gaming experiences!",
      "target_audience": [
        "People interested in testing games and learning principles, techniques, and tools used in day-to-day game tester's job"
      ]
    },
    {
      "title": "Cypress End-to-End Testing - Getting Started",
      "url": "https://www.udemy.com/course/cypress-end-to-end-testing-getting-started/",
      "bio": "Learn how to use Cypress to design, build and run powerful and realistic end-to-end (E2E) tests with ease.",
      "objectives": [
        "Add end-to-end testing workflows to projects",
        "Define and use core Cypress concepts & techniques",
        "Design and run automated end-to-end tests with Cypress",
        "Implement realistic website user workflows with Cypress"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course!",
          "What is Cypress & End-to-End Testing? And Why Should You Care?",
          "Installing & Using Cypress",
          "How Cypress Tests Are Organized & Stored",
          "Adjusting Our First Test",
          "Writing A More Realistic Test",
          "About The Course",
          "Course Resources (Slides, Code, Discord)"
        ],
        "Cypress Basics - Core Features & Syntax": [
          "Module Introduction",
          "Project Setup",
          "Creating Suites & Tests",
          "Visiting Pages inside of E2E Tests",
          "Let the IDE (VS Code) Help You",
          "Selecting Elements & Evaluating Test Results",
          "Selecting By Text",
          "Implicit and Explicit Assertions",
          "get() vs find()",
          "Why You Need To Simulate User Interaction",
          "Simulating User Interaction",
          "Proper Assertions Are Key!",
          "Time To Practice!",
          "Simulating Keyboard Typing & Writing Good Assertions",
          "Checking For Partial Text",
          "Selecting Dropdown Values",
          "Cypress Tests Run In Isolation",
          "Time For More Queries",
          "Summary"
        ],
        "Diving Deeper: Element Selection, Assertions & More": [
          "Module Introduction",
          "Project Setup",
          "Selecting Elements - The Best Practice Way",
          "Testing Page Navigation",
          "More on Selecting Elements",
          "Repetition and More Assertions",
          "Chaining Commands",
          "Working with Values & Aliases",
          "Getting More Direct Element Access via then()",
          "A Closer Look At then()",
          "Simulating Special Key Presses",
          "Another Example",
          "Losing & Gaining Focus",
          "Aliases In Action",
          "Using Cypress Studio For Test Evaluation",
          "Running Tests Without Cypress Studio & Working with Screenshots + Videos",
          "Changing Subjects",
          "Taking Screenshots",
          "should() instead of then()",
          "Summary"
        ],
        "Configuration & Customization": [
          "Module Introduction",
          "Project Setup",
          "The Global Config File",
          "Understanding Timeouts",
          "Global vs Local Config",
          "Setting the Test Browser",
          "Configuring the baseURL",
          "Sharing Logic with Test Hooks",
          "Introducing Custom Commands & Queries",
          "Creating a Custom Command",
          "Creating a Custom Query",
          "Understanding Tasks",
          "Summary"
        ],
        "Working with Stubs, Spies, Fixtures & Manipulating the Clock": [
          "Module Introduction",
          "Starting Project",
          "Understanding the Problem",
          "Understanding Stubs",
          "Creating & Using a Stub",
          "When Empty Stubs Are Not Enough",
          "Adding a Fake Stub Implementation",
          "Using Stubs Across Tests",
          "Stubs with Return Values",
          "Evaluating Stub Arguments",
          "Using Fixtures",
          "Understanding Spies",
          "Creating & Using Spies",
          "The Problem With Timers",
          "Manipulating the Clock",
          "Summary"
        ],
        "Network (HTTP) Requests, Databases & Authentication": [
          "Module Introduction",
          "Starting Project",
          "Writing a First (Problematic) Test",
          "The Problem with Tests & Databases",
          "Creating a Test Database",
          "Seeding the Test Database Before Every Test",
          "Another Database-dependent Test",
          "Understanding & Using Interceptors",
          "You Can't Always Use Interceptors",
          "More Intercepting!",
          "Testing APIs with Test Requests",
          "Summary: Different Network Request Strategies",
          "Testing Authentication Flows & Asserting Cookie Values",
          "Adding a \"Login\" Test",
          "Creating a Reusable Login Command",
          "Accessing Interceptor Request & Response Data",
          "Summary"
        ],
        "Roundup & Next Steps": [
          "Roundup & Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is required",
        "Basic web development knowledge is required (no specific framework)",
        "NO prior Cypress knowledge is required"
      ],
      "description": "Automated testing is a vital part of modern application development. Of course, website development is no exception here - you must be able to run automated tests to efficiently detect bugs and regressions.\nThis course teaches you how to write and run end-to-end (E2E) tests with Cypress - one of the most popular web development E2E testing tools you can use these days!\nYou will learn:\nWhat exactly Cypress is and why E2E testing matters\nHow to install and use Cypress\nHow to write and run E2E tests with Cypress\nHow to simulate realistic website user flows by selecting elements and simulating user interaction (button clicks, keyboard typing & more)\nHow to write good assertions (and what assertions are)\nWhich core features and concepts Cypress offers\nHow to use basic and more advanced Cypress concepts\nHow to efficiently test third-party code\nHow to deal with network (HTTP) requests and databases\nHow to test user authentication flows\nAnd much more!\nAll these topics will be taught from the ground up, with no prior Cypress knowledge required! You do need basic web development and JavaScript knowledge though.\nThis course focuses on the core Cypress concepts and explores all basic as well as various more advanced Cypress features.\nBy the end of this course, you'll have a solid set of Cypress fundamentals and you'll be ready to dive deeper into Cypress and end-to-end testing!",
      "target_audience": [
        "Intermediate web developers who have no or very little (end-to-end) testing experience",
        "Web developers who want to add automated end-to-end tests to their projects"
      ]
    },
    {
      "title": "2025 - Automation framework with Selenium Java (Advanced)",
      "url": "https://www.udemy.com/course/automation-framework-with-selenium/",
      "bio": "Learn developing advanced framework for selenium like never before with complete customization of code",
      "objectives": [
        "Understand how to design an custom automation framework",
        "Understand develop various components for automation framework in industry standard",
        "Understand developing generic Page Object Model practice using Generics in Java",
        "Understand developing generic Page Navigation concepts of POM using Generics in Java",
        "Understand and work with custom testrunners for TestNG",
        "Understand and writing custom controls for Selenium automation by learning internals of Selenium API indepth"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Types of frameworks",
          "Types of Framework Model",
          "Summary"
        ],
        "Designing automation framework": [
          "Introduction to framework design",
          "Introduction to framework design (Contd)",
          "Framework Design Prerequisite",
          "Starting our framework design in IntelliJ",
          "Refactor"
        ],
        "Developing Base Components": [
          "Introduction",
          "Writing simple code with Selenium",
          "Understanding Page Object Models (POM)",
          "Page Object Model Simplicity",
          "EA Employee App available Online - Which is discussed in NEXT lecture",
          "Introducing ExecuteAutomation Employee App",
          "Handling WebDriver Instance Object",
          "Page Navigation in Page Object Model",
          "Page Navigation without Generics",
          "Page Navigation with Generics",
          "Handling different browser types (Part A)",
          "Handling different browser types (Part B)",
          "Summary"
        ],
        "Developing Utilities components": [
          "Introduction",
          "Developing Excel Utilities (Part A)",
          "Developing Excel Utilities (Part B)",
          "Introduction to developing Log Utilities",
          "Developing Log utilities with Log4j2 (Part A)",
          "Developing Log utilities with Log4j2 (Part B)",
          "Developing custom Log Utility",
          "Developing Database Utility",
          "Alert: If you are not interested in upcoming two lectures - You are free to Skip",
          "Developing Reporting Utility (Part A)",
          "Developing Reporting Utility (Part B)",
          "Summary"
        ],
        "Developing Config Components": [
          "Introduction",
          "Developing configuration component (Part A)",
          "Developing configuration component (Part B)",
          "Refactoring code",
          "Summary"
        ],
        "Developing Test Layer": [
          "Introduction",
          "Refactor - To make existing code BDD ready",
          "Creating and working first cucumber scenario",
          "Creating and working with cucumber scenario (Contd)",
          "Creating and working with additional cucumber scenario",
          "Developing Cucumber Utility (Part A)",
          "Developing Cucumber Utility (Part B)",
          "Test Runner and customizing it for running in TestNG",
          "Test Runner and customizing it for running in TestNG with TestNG.xml",
          "Customizing custom TestNG runner"
        ],
        "Developing Custom controls of Selenium for framework": [
          "Introduction and getting started with custom controls",
          "Working with custom control wrapper",
          "Working with custom control wrapper (Contd)",
          "Creating custom control to support Page Object Model",
          "Creating custom control API package",
          "Creating custom control API package (Contd)",
          "Implementing custom control for POM with existing code",
          "Implementing custom control for POM with existing code (Contd)",
          "Important: Custom controls are extended even further in Section 11",
          "Summary"
        ],
        "On-going framework development": [
          "Introduction",
          "Extending Reporting with EARS (Part 1)",
          "Extending Reporting with EARS (Part 2)",
          "Writing generic reporting call for EARS in TestInitilize"
        ],
        "Season 2 - Course upgrade and Tidbits": [
          "Introduction to Season 2",
          "Changes to framework structure and upgrade",
          "Adding Selenium Wait library (Part 1)",
          "Adding Selenium Wait library (Part 2)",
          "Cucumber Utilities upgrade",
          "Cucumber Utilities upgrade (Contd)",
          "Complete source code",
          "Converting framework to Maven Standard",
          "Adding Cucumber reporting with Maven command support",
          "Complete source code",
          "Adding Java 10 support to our framework",
          "Complete source code"
        ],
        "Selenium Grid and Parallel Execution support": [
          "Introduction to Selenium Grid and Parallel Support",
          "Modifying the framework to support Selenium Grid by using Static RemoteWebDriver",
          "Modifying the framework to support Selenium Grid in proper way",
          "Test Settings and Maven Support for Selenium Grid in our framework",
          "Running Parallel Test with TestNG and Maven command line",
          "Complete source code"
        ]
      },
      "requirements": [
        "Anyone who is going to take this course MUST have good knowledge on Java",
        "Must have basic knowledge on Selenium",
        "Must have basic knowledge on OOPs concepts",
        "Good understanding of database queries"
      ],
      "description": "Welcome to the Udemy's highest-rated course Automation framework with Selenium Java (Advanced) course. In this course, we will develop each and every component required for a perfect test automation framework with industry-standard coding practices.\n\n\nCucumber 6\nSelenium 4 alpha 6\nCucumber TestNG\nExtent Report\nCustom Selenium controls\nThe course includes more than 100+ lectures with 12+ hours of content just on framework development instead of ancillary things\nIn this course, we will start our discussion with\nDesigning a perfect automation framework\nUnderstanding to develop various components for automation framework like\nUtilities\nBase components\nConfigurations\nTest runners\nUnderstand developing generic Page Object Model practice\nUnderstand developing generic Page Navigation concepts of POM\nUnderstand and work with custom test runners for TestNG\nSupport of TestListeners\nExtending test listeners for custom reporting with Extent report\nUnderstand and writing custom controls for Selenium automation\nExtending custom controls with Fluent way of writing code\nHanding intelligent wait handling\nWriting code using Cucumber with BDD fashion\nBringing all the best industry standard practices\nParallel Execution support with multi-thread handling and Selenium grid\nSupport of running test with Zalenium in Docker container\nSupport of Extent report with Parallel execution along with BDD cucumber format\nCreating html reporter with single instance test support\nSupport of Parallel execution support\nSupport of latest version of Cucumber 6 and Selenium 4\nThis framework has so much of codes and resources, which helps to understand each and every section much clearer and easier.\n\n\nWhat makes this course so special ?\nThe11+ hours  curriculum of this course is designed not just by randomly picking some of the topics what I know.\nRather the course has evolved over a period of time (12+ years) by giving trainings to more than 300,000+ professional (both online and corporate training) and working on automation testing field (18+ years)\nHence the course is much refined version, meaning the course won't deviate from the topics of the course\n\n\nMost of the sections in this course are not detailed anywhere as an online training so far",
      "target_audience": [
        "Manual and Automation QA",
        "Developers",
        "Business Analyst"
      ]
    },
    {
      "title": "Mastering Postman: A Comprehensive API Testing Course",
      "url": "https://www.udemy.com/course/mastering-postman-a-comprehensive-api-testing-course/",
      "bio": "A Practical Guide to API Testing with Postman: From Basics to Mastery",
      "objectives": [
        "Understand Postman, install it, and navigate the user interface.",
        "Create various API requests (GET, POST, PUT, PATCH, DELETE) in Postman.",
        "Create and manage collections for efficient API testing.",
        "Utilize variables, scripting, and environments in Postman.",
        "Master scripting for pre-request and test scripts, and debug effectively.",
        "Perform data-driven testing using Postman.",
        "Add authorization to API requests, understand authentication methods, and manage credentials securely."
      ],
      "course_content": {
        "Introduction to Postman": [
          "What is Postman",
          "Installing and Setup Postman"
        ],
        "Making API Requests": [
          "Making Get Request",
          "Making Post Request",
          "Making Put and Patch Request",
          "Making Delete Request"
        ],
        "Working with Collection": [
          "Creating and Organizing Collection"
        ],
        "Variables and Environment": [
          "How to Add and Refer Variables",
          "Get and Set Variables with Scripting",
          "Managing Environments in Postman"
        ],
        "Scripting in Postman": [
          "Scripts in Postman",
          "Debugging Scripts in Postman"
        ],
        "Advanced Testing Techniques": [
          "Create Your First Test",
          "Data-Driven Testing in Postman"
        ],
        "API Authentication and Authorization": [
          "Adding Authorization to API Requests in Postman"
        ],
        "Quiz Challenge": [
          "Postman Quiz"
        ]
      },
      "requirements": [
        "No Prior Postman Experience Required",
        "A positive attitude, eagerness to learn, and a commitment to practicing the skills",
        "No testing knowledge required",
        "No software development knowledge required"
      ],
      "description": "Unlock the power of API testing with \"Mastering Postman,\" your comprehensive guide to becoming a proficient API tester. In today's digital landscape, APIs (Application Programming Interfaces) are the backbone of modern applications, making the ability to test them effectively a critical skill for developers, testers, and quality assurance professionals.\nThis hands-on course takes you on a journey from Postman novice to API testing expert. Whether you're a seasoned developer or just starting in the field, you'll gain the knowledge and practical skills needed to excel in API testing.\n\n\nWhat You'll Learn:\nIntroduction to Postman: Get acquainted with Postman, install it, and become comfortable with its user-friendly interface.\nMaking API Requests: Learn to create various API requests, including GET, POST, PUT, PATCH, and DELETE, to interact with APIs.\nWorking with Collections: Streamline your workflow by creating and organizing collections of API requests.\nVariables and Environment: Harness the power of variables, scripting, and environments in Postman for dynamic testing scenarios.\nScripting in Postman: Master scripting techniques for pre-request and test scripts, and gain the ability to debug effectively.\nAdvanced Testing Techniques: Perform data-driven testing to validate API behavior with different inputs and scenarios.\nAPI Authentication and Authorization: Securely add authorization to your API requests and understand various authentication methods.",
      "target_audience": [
        "Software Developers looking to enhance their API testing skills.",
        "Quality Assurance (QA) Engineers interested in mastering API testing techniques.",
        "Web Developers seeking to validate and debug APIs effectively.",
        "Testing Professionals aiming to improve their proficiency with Postman.",
        "IT Professionals and System Administrators exploring API testing for system integrations.",
        "Students and Tech Enthusiasts eager to learn about API testing and Postman.",
        "Professionals transitioning into software development or quality assurance roles.",
        "Anyone interested in mastering API testing and enhancing their career prospects."
      ]
    },
    {
      "title": "API Testing : REST API Testing using Python for Beginners",
      "url": "https://www.udemy.com/course/rest-api-rest-api-testing-using-python-for-beginners/",
      "bio": "API Testing and Fundamentals | REST API testing using Python | Difference between RESTful API vs SOAP API",
      "objectives": [
        "End to END API testing using Python.",
        "Learn the SOAP WSDL,UDDI and REST Principles.",
        "Learn the Concepts and working of HTTP Protocol.",
        "Understand the various methods of API like GET, POST, PUT and DELETE.",
        "Learn how to perform real time REST API testing using PYTHON Modules.",
        "Learn how to automate the API testing using PyTest Python module.",
        "Learn the architecture of REST and SOAP API."
      ],
      "course_content": {
        "Introduction": [
          "General Instructions",
          "Web Services and API",
          "Types of API",
          "REST Architecture Part 1",
          "REST Architecture Part 2",
          "SOAP API",
          "WSDL and UDDI in SOAP",
          "Difference between REST and SOAP",
          "What existed before REST/SOAP"
        ],
        "Understand HTTP Request": [
          "Overview of HTTP",
          "3-Way TCP Handshake",
          "Request Header/Body",
          "Response Header/Body",
          "HTTP Status Code",
          "HTTP Caching",
          "JSON Fundamentals",
          "XML Fundamentals"
        ],
        "Types of REST API Methods": [
          "GET Method",
          "POST Method",
          "PUT Method",
          "DELETE Method"
        ],
        "Python Modules for API Testing": [
          "Python Modules",
          "Requests Module",
          "JSON/JSONPATH Module & Assertion Part 1",
          "JSON/JSONPATH Module & Assertion Part 2"
        ],
        "API Testing using Python": [
          "GET REST API Testing",
          "POST REST API Testing",
          "PUT REST API Testing",
          "DELETE REST API Testing"
        ],
        "PyTest Module: Test Automation": [
          "API test using PyTest module",
          "End to End testing using PyTest module",
          "Quiz"
        ]
      },
      "requirements": [
        "No prerequisite software required. You should be able to use PC/laptop comfortably.",
        "Basic Knowledge of Python is Required.",
        "No Prior Knowledge of API Testing Required."
      ],
      "description": "API testing using Python:\n*** This Course purchase includes video lectures, practice files, quizzes, & assignments, 1-on-1 instructor support***\nPlease note that this course will be continuously getting updated with more videos to keep you up to date on API. You will find lot of new lecture covering new features in the area of  API Testing.\nThis course is designed for the beginners and freshers to gain knowledge on concepts of REST and SOAP API and  to perform the REST API testing using Python modules like REQUESTS, JSON , JSONPATH and PYTEST. The professionals who have zero knowledge or very less knowledge on API, will find this course extremely useful.\nLearning REST API and API testing also helps you to become better QA analyst , API Architect and eventually would help you to get into the field of building the applications using API and Python.\nI will Guide you through a STEP by STEP approach on how to test the REST API. I will also explain about the architecture and the concepts of both REST and SOAP API. I will first start with the concepts of Web Service and then will explain the architecture of REST and SOAP API. I will then explain the fundamentals of HTTP request  and explain the internal working of HTTP requests using various methods like GET, POST, PUT and DELETE. Then, I will be working on PYTHON Modules and will show how API testing could be done using simple PYTHON code. In the end we will automate the API testing process using Python PYTEST module.\nYou should be able to complete this course in 1-3 days time, if you dedicate 2 hours of your time daily and this journey will take you from zero to Hero.\nImportant Topics covered:\nFundamentals of Web Services\nArchitecture of REST and SOAP API\nWSDL, UDDI in SOAP\nComplete REST Principles\nConcepts of HTTP\nHTTP 3 Way handshake\nHTTP Status code and Methods.\nPython Modules (REQUESTS, JSON and JSONPATH)\nPython coding to perform API Testing.\nAutomate the API Testing using Python PYTEST module\nBriefly, The knowledge of REST API and REST API testing is a must for IT professionals and this course is one stop shop for gaining this necessary and in-demand skill.\nTrust me, I will make sure you have an awesome learning experience and will hold your hand and take you step by step!!!\nHappy API Testing :-)",
      "target_audience": [
        "Beginner who want to understand the concepts of REST and SOAP API.",
        "Anyone with a basic knowledge of Python, wanting to perform API testing.",
        "Anyone who want to perform end to end REST API Testing.",
        "Aspirants seeking career opportunities in REST API and API Testing."
      ]
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/e2e-cypress/"
    },
    {
      "title": "Cucumber Selenium MasterClass: Design BDD Cucumber Framework",
      "url": "https://www.udemy.com/course/cucumber/",
      "bio": "Cucumber BDD Selenium Automation Testing, Design Cucumber Framework with Java form Scratch. Powerful cucumber Testing",
      "objectives": [
        "Understand how Cucumber BDD(Behaviour driven development) approach works with the Selenium WebDriver & knowledge of gherkin syntax",
        "Understand working with Cucumber and Cucumber reporting.",
        "Cucumber Gherkin understanding for Feature file and mapping with Step Definition file.",
        "By end of this course , You will be able to develop Cucumber Automation Testing Framework for any Web/Mobile/API Automation testcases",
        "Automating the Web based application using Cucumber, Selenium WebDriver 3.0, Java, Eclipse, Maven",
        "How to use Cucumber Framework for Selenium Webdriver Automation Testing."
      ],
      "course_content": {
        "**Cucumber BDD Framework** in Selenium": [
          "Introduction to Cucumber Framework",
          "SetUp Java on Mac Machine",
          "SetUp Eclipse IDE on Mac Machine",
          "Course Chat with Students and Tech Community",
          "SetUp Java & Eclipse on Windows Machine",
          "Cucumber Framework Code: Git Location",
          "Cucumber Component Terminology",
          "Configure Cucumber in Eclipse",
          "My Motivation Factor",
          "Implement Feature File in Cucumber",
          "Execute Test in Cucumber Framework",
          "Script Test Definition",
          "Create Report in Cucumber",
          "Cucumber Options *Test Runner*",
          "dryRun & Monochrome in Cucumber",
          "Format & Strict Cucumber Option"
        ],
        "Cucumber Framework With Data Driven Concept": [
          "Data Driven Test with Feature File",
          "Data Driven Test with Examples Annotation",
          "Data Driven Test with Complex Data Set",
          "Data Driven Test with Data Table",
          "Data Driven Test with Multi DataTable"
        ],
        "Cucumber Framework : Tags, Hooks": [
          "Tags in Cucumber BDD Framework",
          "Hooks in Cucumber"
        ],
        "Cucumber Framework : Page Object Model": [
          "Cucumber POM Architecture",
          "Cucumber Framework : POM - Design Base Class",
          "Cucumber Framework : POM - Design Page Objects",
          "Cucumber POM: Design Feature File",
          "Cucumber Framework : POM - Design Steps & Execution"
        ]
      },
      "requirements": [
        "You Don't need to have Core java basic coding experience to start this course. We will cover from scratch.",
        "You will have instructor support to get solved all your queries."
      ],
      "description": "Best Selenium with Java and Cucumber Automation Testing Course on Internet is organized by Anshul Chauhan. We provide the most learning environment for major technical Selenium Webdriver with Cucumber and Java at affordable prices.\nThe best Selenium with Cucumber Testing on Udemy offers the best technical IT training for the regarding Selenium with Cucumber. We provide basic and advanced level Selenium with Cucumber Training with proper practical knowledge.\n\n\nCucumber BDD, Behavior-driven development, acceptance testing, and test-driven development is one of the latest, most important trends in software delivery. Learn how to implement BDD Cucumber software delivery with the Cucumber framework using Java, Selenium, and JUnit. Apply your knowledge to a real-world application.\nIn this course, you will how to\nWrite a feature file\nApply Gherkin syntax\nOutline a Given-When-Then scenario\nParameterize data into scenarios\nPass data from steps to glue code\nIntegrate Cucumber with Selenium\n\n\nAll the above topics are discussed from the scratch level with lots of Practical examples for better understanding..\nI wish you good luck!",
      "target_audience": [
        "Software Developers",
        "Test Engineers & Automation Testing Engineers",
        "Managers and Product Owners",
        "DevOps Engineers",
        "QA / Testers"
      ]
    },
    {
      "title": "Gherkin Language - The Master Guide",
      "url": "https://www.udemy.com/course/gherkin-language-the-master-guide/",
      "bio": "Learn Gherkin and Cucumber from beginner with BDD made easy",
      "objectives": [
        "Learn all about the Gherkin language from beginner to expert!",
        "Learn all the Gherkin keywords and how to use them appropriately",
        "Learn how to apply the language to an example use-case with example e-commerce site",
        "How to write requirements using business domain language",
        "Learn about Features, Scenarios, Scenario Outlines",
        "DataTables, Backgrounds and so much more!"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Who is this course for?",
          "IMPORTANT NOTE!"
        ],
        "How Gherkin Helps Business": [
          "Module Introduction",
          "What is BDD? What is Gherkin and Cucumber? How they fit together",
          "Why learn Gherkin?",
          "Gherkin a universal language",
          "Gathering business requirements with Gherkin",
          "User stories with Gherkin",
          "Testing with Gherkin",
          "Single source of truth",
          "Gherkin Workflow",
          "Module Summary"
        ],
        "Beginner GHERKIN - Basic Must Learn Keywords ** 2025 COURSE **": [
          "Feature Keyword - What it is and how to use it",
          "Online Gherkin Editor or Visual Studio Code - Your Choice",
          "Scenario Keyword - Describes the Scenes of our Tests",
          "Given Keyword - Setting up the Scene of our Test",
          "When Keyword - Deciding the Action of the User",
          "Then Keyword - Asserting the Result of the Test"
        ],
        "Optional Keywords of Gherkin ** 2025 COURSE **": [
          "Optional Keyword And - Grouping steps together",
          "Optional Keyword But - When things are not what they seem",
          "Comparison between And and But keywords",
          "* (Asterix) Keyword - the Wildcard When You're Feeling Lazy",
          "PRACTICE QUIZ: Guess the Keyword",
          "PRACTICE CHALLENGE - Rewrite Scenario with And or But",
          "REALWORLD SCENARIO 1 - Reset Password",
          "REALWORLD SCENARIO 2 - Expired Promo Codes for Shopping Cart",
          "PRACTICE CHALLENGE 2 - Rewrite Scenario with And and But",
          "PRACTICE CHALLENGE 3 - Rewrite Scenario with And and But",
          "Summary of Basic Keywords"
        ],
        "Intermediate GHERKIN - Multiple Tests and Background Setup ** 2025 COURSE **": [
          "Background Keyword - Sharing the Setup with all our Tests",
          "Scenario Outline Keyword - Multiple Tests in One Scenario",
          "Background with Scenario Outline and Examples",
          "Understanding Gherkin Data Tables",
          "Rule Keyword",
          "Execution of Background Order with Rules",
          "Execution of Background Order with Rules with other situations"
        ],
        "Gherkin - the Other Bits ** 2025 COURSE **": [
          "Gherkin Tags - Categorising Tests",
          "Comments and Long Descriptions",
          "Gherkin and Multi Language Support",
          "End of Module Quiz",
          "Gherkin Practice Test"
        ],
        "Applying Gherkin knowledge": [
          "Module Introduction",
          "Adding example Scenarios",
          "Examples with Given, When and Then",
          "Introducing AND keyword",
          "Reusing Scenario steps",
          "Introducing BUT keyword",
          "Features and Scenarios",
          "Combining When keywords together",
          "Gherkin Challenge #1",
          "Gherkin Challenge #1 Solution",
          "Comments in Gherkin",
          "Making lists in Gherkin",
          "Giving features descriptions",
          "Gherkin Challenge #2",
          "Making variables in Gherkin",
          "Making variables in Gherkin continued",
          "Gherkin Challenge #3",
          "Gherkin Challenge #3 Solution",
          "Introduction to Background in Gherkin",
          "All about Data Tables",
          "Data Table walk through",
          "When and Data Tables combined",
          "Scenario Outline keyword",
          "More about Scenario Outline",
          "All about Tags",
          "Use cases with Tags",
          "Module Summary"
        ],
        "BONUS: Testing Microservices and APIs Real Life Examples- ** NEW SECTION 2025 **": [
          "Testing API with JSON for User Creation",
          "Testing API with JSON for User Authentication",
          "Testing API to API communication",
          "Testing API with Malformed Data",
          "Testing API Payload that is Too Large",
          "Testing API Race Conditions",
          "Rejection of blank null inputs when testing APIs",
          "Handling Missing Resources Errors Gracefully.",
          "Real Life FinTech Industry -Handling Duplicate Transactions",
          "Real Life Hotel Industry - Handling Duplicate Bookings",
          "Real Life ECommerce - Handling Database Inconsistences",
          "Real Life Automotive Industry - Conflicting GPS Sensor Data",
          "Real Life Health Care - Conflicting Patient Records"
        ],
        "EXTRA! Fix My Gherkin - Practice what you have learnt": [
          "Module Introduction",
          "Online Editor",
          "Challenge 1",
          "Challenge 1 Solution",
          "Challenge 2",
          "Challenge 2 Solution",
          "Challenge 3",
          "Challenge 3 Solution",
          "Challenge 4",
          "Challenge 4 Solution"
        ],
        "Conclusion": [
          "Thanks for learning",
          "What next?",
          "BONUS: Other courses"
        ]
      },
      "requirements": [
        "No knowledge of Gherkin - This course will teach you all you need to know!",
        "No programming experience needed"
      ],
      "description": "** MASTER GHERKIN - Learn how to write Behaviour Driven Development (BDD) requirements and tests **\n\n\nWhy is this course for you?\nThis course will teach you all you need to do to become a competent with the Gherkin language with Cucumber, the most important language for writing for Behavioural Driven Development (BDD). This is an essential skill to master for any Subject Matter Expert, Business Development professional, Testing professional and developer.\nThis course will teach you all you need to know about the Gherkin language from beginner, right up to confident!\nUnlike other courses, you will not only learn the basics of the language, but we will use a real use business case of a e-commerce store to demonstrate how to use the language!\nIncludes fully professionally provided Captions in English (not the automatic ones)\n\n\nNOTE: **This course will focus writing tests with Gherkin in feature files - but will not cover any aspect of back end implementation. This is not in the scope of this particular course. This is because this course is dedicated to learning just the Gherkin language. Since implementation of steps can be with any languages eg Java, Javascript, .NET - this is not the focus of this course**\n\n\n** INCLUDES PRACTICE TESTS - SO YOU CAN SEE HOW WELL YOU UNDERSTOOD **\n\n\nWHAT ARE WE GOING TO LEARN?\n1. How Gherkin Helps Businesses\n- Learn what is Gherkin, how it relates to Cucumber. Why learn Gherkin?\n- How it fits in to a BDD Behavioural Driven Development cycle.\n- Business Analysts/SME: Gathering requirements for a business with Gherkin\n- Testing Leads: Writing User Stories with Gherkin and testing plans with Gherkin\n- Gherkin as a Universal Language to prevent misunderstandings in the business between members\n- Gherkin as a Single Source of Truth and the Gherkin Workflow\n\n\n2. Learn Gherkin Language\nAn essential module - to learn all about the Gherkin language\n- Learn all the keywords of the Gherkin language, and why they are used\n- Test yourself with a little Quiz to see how well you have learnt the language\n\n\n3. Applying the Gherkin Language\nA unique part of the course!\n- Learn how to apply the Gherkin language to a real life common business scenario.\n- Learn how to combine the keywords together to overcome typical situations\n- Testing your knowledge as you go with Challenges\n\n\n4. **EXTRA** Fix my Gherkin!\nA unique module to test your knowledge of Gherkin full of challenges and apply your knowledge. I supply some Gherkin and it is your challenge to re-write the Gherkin and improve it further!\n\n\nBy the end of the course, you will become very sufficient with using Gherkin. Don't forget, if you are not entirely happy with the course, you have the 30 day Money-Back-Guarantee.\nIf you are serious about learning the skill required to become confident at writing Business Requirements and Test Scripts using Behavioural Driven Development, then this is the ONLY course you need to master Gherkin!",
      "target_audience": [
        "Automation Testing Professionals and other testing professionals",
        "Developers",
        "Business Analysts",
        "Managers"
      ]
    },
    {
      "title": "ISTQB Agile Technical Tester - Advanced Level",
      "url": "https://www.udemy.com/course/agile-technical-tester/",
      "bio": "Become a certified Agile technical tester",
      "objectives": [
        "Learn Requirements engineering techniques",
        "Understand how testing is done in agile projects",
        "Understand different Test Automation Methods",
        "Continuous Integration, Continuous Delivery, & Continuous Testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Target Audience",
          "Course Content & Business Outcomes",
          "Exam Structure",
          "Table of Contents"
        ],
        "Chapter 1: Requirements Engineering": [
          "Chapter 1 Overview",
          "Difference between Epics, User Stories, & Acceptance Criteria",
          "Practical Activity: Creating User Stories & Epics in Jira",
          "Requirements Engineering Techniques",
          "Analyzing User Stories & Epics using Requirements Engineering Techniques",
          "Story Mapping",
          "Story Mapping Practical Exercise",
          "User Stories Document for Story Mapping",
          "Storyboards",
          "Personas",
          "Diagrams",
          "Use Cases",
          "Requirements Engineering Process",
          "Identifying Acceptance Criteria using Requirements Engineering Techniques",
          "Quantitative Questionnaires",
          "Qualitative Questionnaires",
          "Qualitative Interviews",
          "Other Techniques",
          "Invest & Smart Technique",
          "Chapter 1: Requirements Engineering Quiz"
        ],
        "Chapter 2: Testing in Agile Projects": [
          "Chapter Overview",
          "Test-driven Development Part 1",
          "Test-Driven Development Part 2",
          "Behavior-driven Development",
          "Extracting Scenarios from User Stories",
          "Zephyr Scale & Cucumber BDD Example",
          "Behavior-Driven Development",
          "Acceptance Test-Driven Development (ATDD)",
          "Experience-based Testing in Agile",
          "Aspects of Code Quality",
          "Chapter 2: Testing in Agile Projects Quiz"
        ],
        "Chapter 3: Test Automation": [
          "Chapter Overview",
          "Data-driven Testing",
          "Keyword-driven Testing",
          "Applying Test Automation to a Given Test",
          "Level of Automation",
          "Chapter 3: Test Automation Quiz"
        ],
        "Chapter 4: Deployment & Delivery": [
          "Chapter Overview",
          "Continuous Integration, Continuous Testing, and Continuous Delivery",
          "Service Virtualization",
          "Chapter 4: Deployment & Delivery Quiz"
        ],
        "Sample Exam": [
          "Official Sample Exam",
          "Official Sample Exam Answers",
          "Sample Exam 1",
          "Sample Exam 2"
        ]
      },
      "requirements": [
        "Be a certified ISTQB Foundation Level tester",
        "Hold the ISTQB Agile Tester Certificate"
      ],
      "description": "Audience\nThe Advanced Level Agile Technical Tester qualification is aimed at people who have already achieved an advanced point in their careers in software testing and wish to develop further their expertise in technical testing aspects in an agile context. The modules offered at the Advanced Level cover a wide range of testing topics.\nWhat are the entry criteria?\nTo receive Advanced Level certification in the module “Agile Technical Tester”, candidates must hold a valid Certified Tester Foundation Level certificate and a valid Certified Tester Foundation Level Agile Tester certificate. Refer to the relevant Exam Board to determine the specific practical experience criteria.\n\n\nBusiness Outcomes\nApply Agile techniques to ensur tests that provide adequate coverage\nDefine testable requirements within Agile Team\nCreate and implement various Agile Test approaches using appropriate techniques\nSupport and contribute to test automation activities in an Agile project\nSupport continuous integration in an Agile Team\nSupport Agile Team in continuous delivery and deployment\nLearn the service virtualization concepts\nWork with, and share information with, other team members using effective communication styles and channels\n\n\nLearning Objectives\nAnalyze user stories and epics using requirements engineering techniques\nDescribe the requirements engineering techniques and how they can help testers\nCreate and evaluate testable acceptance criteria for a given user story using requirements engineering and test techniques\nDescribe the elicitation techniques\nApply test-driven development (TDD) in the context of a given example in an Agile project\nUnderstand the characteristics of a Unit test\nUnderstand the meaning of the mnemonic word FIRST Apply behavior-driven development (BDD) in the context of a given user story in an Agile project\nUnderstand how to manage guidelines for a formulation of a scenario\nAnalyze a product backlog in an Agile project to determine a way to introduce acceptance test-driven development\nAnalyze the creation of a test approach using test automation, experience-based tests and back-box tests created using other approaches (including risk-based testing) for a given scenario in an Agile project\nExplain differences between Mission critical and non-critical\nAnalyze user stories and epics to create test charters, and interpret their results\nUnderstand the use Experienced-based techniques\nUnderstand the importance of refactoring test cases in Agile projects\nUnderstand practical task-list for Refactoring Test cases\nAnalyze code as part of a code review to identify defects and technical debt\nUnderstand Static code Analysis\nApply data-driven and keyword-driven test techniques to develop automated test scripts\nUnderstand how to apply test automation to a given test approach in an Agile environment\nUnderstand the test automation\nUnderstand differences between various test approaches\nUnderstand the factors to consider when determining the level of test automation needed to keep up with the speed of deployment\nUnderstand the challenges of test automation in agile settings\nApply continuous integration (CI) and summarize its impact on testing activities\nUnderstand the role of continuous testing in continuous delivery and continuous deployment\nUnderstand the concept of service virtualization and its role in Agile projects\nUnderstand the benefits of service virtualization",
      "target_audience": [
        "Software Testers",
        "Test Engineers",
        "Test Managers",
        "Quality Analysts"
      ]
    },
    {
      "title": "Automated Software Testing with WebdriverIO",
      "url": "https://www.udemy.com/course/automated-software-testing-with-webdriverio/",
      "bio": "Learn Next Generation Selenium Testing with Node.js and Typescript Framework - From Beginner to Expert (6500+ students)",
      "objectives": [
        "Master the powerful WebdriverIO framework from beginner to advanced (Typescript included)",
        "Build a robust automation framework using the best practices of the Page Objects Model",
        "Learn how to handle all kinds of web elements and selectors and how to structure your code",
        "Put your skills into practice with real-world end-to-end testing examples and challenging exercises",
        "Integrate your automation tests with CI/CD pipelines using Jenkins, and streamline your testing process for faster and more efficient releases",
        "Get exclusive access to professional tips, tricks, and best practices from industry experts, and stay ahead of the curve with the latest automation techniques",
        "Learn how to integrate WebdriverIO with popular BDD frameworks like Cucumber and CodeceptJS, and take your test automation to the next level",
        "Explore 3rd party integrations and take advantage of a wide range of tools and features to enhance your automation tests"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Why WebdriverIO ?",
          "Project Setup",
          "Alternative Install Script",
          "WDIO Overview",
          "Setup Commands Autocomplete",
          "Prettier Formatting Setup"
        ],
        "WebdriverIO Fundamentals - Basic": [
          "Quick Demo",
          "Load Website",
          "Pause the Test",
          "Assert Page Title & URL",
          "Failed Assertions Example",
          "Assert Web Elements",
          "Selectors",
          "Automate Forms & Inputs",
          "Automate Select & Check boxes",
          "Set Browser Window Size",
          "Dynamic Waiting",
          "Devices Emulation",
          "Screenshots",
          "Source Codes"
        ],
        "WebdriverIO Fundamentals - Advanced": [
          "Section Introduction",
          "File Upload",
          "Before & After Hooks - Part 1",
          "Before & After Hooks - Part 2",
          "Custom Commands - Part 1",
          "Custom Commands - Part 2",
          "Custom Commands - Part 3",
          "Custom Commands - Part 4",
          "Overwrite Native Commands",
          "Reload Session",
          "Create New & Switch Browser Windows",
          "Network Throttling",
          "Execute Javascript Code - Sync",
          "Execute Javascript Code - Async",
          "Source Codes"
        ],
        "WebdriverIO Fundamentals - E2E Testing": [
          "Section Introduction",
          "E2E Tests - Login Flow",
          "E2E Tests - Forgotten Password",
          "E2E Tests - Search",
          "E2E Tests - Send Feedback Form",
          "E2E Tests - Product Order Part 1",
          "E2E Tests - Product Order Part 2",
          "E2E Tests Recapitulation",
          "WebDriverIO Fundamentals Quiz",
          "Source Codes"
        ],
        "Page Objects Pattern + Typescript Framework": [
          "Intro to Page Objects Model",
          "Project & Typescript Setup",
          "Hands On Page Objects - Part 1",
          "Hands On Page Objects - Part 2",
          "Hands On Page Objects - Part 3",
          "Hands On Page Objects - Part 4",
          "Hands On Page Objects - Part 5",
          "Inheritance & Abstract Page",
          "Driver Helpers",
          "Data Helpers",
          "Source Codes"
        ],
        "BDD with Cucumber Framework": [
          "Cucumber Framework Overview",
          "Cucumber Project Setup",
          "Node Version Check",
          "Autocomplete Setup",
          "Cucumber with Page Objects - Part 1",
          "Cucumber with Page Objects - Part 2",
          "Features",
          "Step Definitions",
          "Framework Improvements",
          "BDD E2E Tests - Search",
          "BDD E2E Tests - Feedback Form",
          "Source Codes"
        ],
        "Integration with CodeceptJS": [
          "Project Setup",
          "Install Packages",
          "Codecept Init",
          "Start Selenium Server",
          "First End-to-End Test",
          "Headless vs Headfull",
          "Smart Waiting",
          "Assertions & Screenshots on Fail",
          "Multiple Test Files & Scenarios",
          "CodeceptJS Run Command & Reporting",
          "List of Reporters",
          "Page Objects Pattern",
          "Where to go next?"
        ],
        "Visual Regression Testing (coming next)": [
          "What is PercyIO ?",
          "Videos waiting for Approval"
        ],
        "Continuous Integration": [
          "What is CI / CD",
          "Jenkins vs Circle vs Travis",
          "Setup a Jenkins Build",
          "Parameterized Jenkins Build",
          "Jenkins Overview",
          "Bonus: Jenkins Server Script"
        ],
        "Cloud Testing with BrowserStack": [
          "Connect tests to Browserstack"
        ]
      },
      "requirements": [
        "To take this course, participants should have basic programming knowledge. Knowledge of Javascript is a great advantage",
        "Participants are required to have NodeJS installed",
        "Should also have access to a text editor, with VS Code being recommended"
      ],
      "description": "Ready to master modern web automation and testing with one of the most powerful next-gen tools available? If you're looking to level up your skills and gain real-world experience using a cutting-edge Selenium-based framework, this hands-on course on WebdriverIO is exactly what you need.\nDesigned to be as practical and beginner-friendly as possible, this comprehensive course dives straight into coding exercises and projects right from the start. All you need is a basic understanding of programming—preferably in JavaScript—along with Node.js and a code editor. Whether you're a budding QA engineer, a developer wanting to add automation to your skillset, or simply curious about how modern testing works, you'll find immense value here.\nThroughout the course, you’ll learn how to install, configure, and manage multiple testing projects using WebdriverIO. You'll explore how to interact with web elements through the WebdriverIO API and implement the Page Object design pattern—a widely adopted best practice in test automation. You’ll even build your own automation framework using TypeScript, gaining valuable experience with typed codebases.\nBut we don’t stop there. You’ll also be introduced to behavior-driven development (BDD) using two popular tools: CodeceptJS and Cucumber. Plus, you’ll perform visual regression testing using Percy, and integrate your automation setup with Jenkins for continuous integration and robust testing pipelines.\nWe’ll also take your skills to the cloud with cross-browser testing on BrowserStack, and share real-world tips, techniques, and insights from experienced automation professionals.\nThroughout the course, you’ll enjoy a supportive, collaborative learning environment, where you're encouraged to ask questions, share insights, and get help when needed—from both the instructor and fellow students. Stuck on something? You can always post in the Q&A or send a private message to get personalized guidance.\nRemember, the journey to becoming a skilled automation tester is a process—and this course is designed to support you every step of the way. So don’t wait—enroll now and take the first step toward becoming a confident WebdriverIO automation expert!",
      "target_audience": [
        "Selenium Testers",
        "Manual Testers",
        "Test Developers",
        "Javascript Developers",
        "QA Engineers"
      ]
    },
    {
      "title": "WebdriverIO E2E Test Framework (Web+API +DB) - 2025",
      "url": "https://www.udemy.com/course/webdriverio-e2e-test-framework-from-scratch/",
      "bio": "Build an integrated test framework with WebdriverIO, TypeScript, Cucumber , API , DB, Allure & Git",
      "objectives": [
        "Learn JavaScripts basics",
        "Build an integrated test automation framework(Web, API, DB and More) from scratch",
        "Automate E2E tests - not just web",
        "Page object model design pattern",
        "Integrate Cucumber, API, Git and GitHub Actions",
        "Best practices in automating E2E tests",
        "Customise WDIO runner with test scope like smoke & regression. Run mode (foreground or background) and log level",
        "Advanced web interactions such as web table and scrolling",
        "Add additional browser options such as SSL, headless mode, window size..etc",
        "Error handling, debugging and REPL",
        "Manage different environments",
        "Set up logger",
        "Build a global reporter",
        "Run tests in GitHub Actions",
        "Real time use cases and automation approach"
      ],
      "course_content": {
        "WebdriverIO Introduction": [
          "Course Introduction",
          "Note on next video",
          "1 Minute Demo(without voiceover)",
          "What is Webdriver IO?",
          "Capabilities and Commonly Asked Questions"
        ],
        "Installation and project set up": [
          "PLEASE READ !",
          "Nodejs and NPM installation",
          "VSCode installation",
          "First node project - \"Hello, World!\"",
          "Install Webdriver IO",
          "WDIO Test Runner Config - overview",
          "Create Project Structure",
          "Install VSCode Marketplace Extensions",
          "Note on JavaScripts Basics"
        ],
        "Run First WDIO Test": [
          "Run first demo feature",
          "Possible errors when running first test",
          "Complete first test"
        ],
        "Git Integration": [
          "Install git - Mac",
          "Install git - Windows",
          "Set up a repo in GitHub",
          "Set up git locally",
          "Commit changes in git"
        ],
        "Web Automation - Locator Strategy": [
          "Selectors overview",
          "Selectors demo"
        ],
        "Handling Web Elements": [
          "Inputbox - type, clear, slow typing",
          "Dropdown",
          "Checkbox",
          "Windows handling",
          "Alerts/Pop up windows",
          "File upload",
          "Frames",
          "Key press",
          "Basic scrolling"
        ],
        "Web Interactions - Advanced": [
          "Iterating over list of elements - Part 1",
          "Iterating over list of elements - Part 2",
          "Web table - Part1",
          "Web table - Part2",
          "Advanced Scrolling",
          "Understanding waits and timeouts",
          "Use of WaitUntil() - Dynamic wait",
          "Reload and Refresh, Back, Forward - When to use it?",
          "How to debug WDIO sessions?",
          "What is REPL and how to use it?"
        ],
        "Browser args and capabilities": [
          "Understanding browser capabilities and args"
        ],
        "Run Headless": [
          "Set up scripts in package.json",
          "Running test headless mode"
        ],
        "Run Parallel": [
          "Parallel Run Demo 1 - Run multiple features"
        ]
      },
      "requirements": [
        "None - If you are beginner start from JavaScript for beginner section"
      ],
      "description": "What's unique about this course?\nBuilt completely based on REAL TIME PROJECT IMPLEMENTATION & WORKING EXPERIENCE of automating E2E tests\nIntegrated framework with Web + API + DB + File handling and more with page object design pattern\nUsing this framework one can confidently build an E2E test framework from ground zero\nUses Async mode which has LONG TERM SUPPORT\nCucumber(BDD), Cross-browser testing and GitHub Actions and more\nLogger and global reporter that makes easier to debug and fix tests and produce accurate test report\nTips and tricks to overcome different project implementation challenges\n\n\nWhy Webdriverio?\nIt's becoming common to adopt to a Node.js based test framework in many organisations due to having \"one team one language\" concept where most of the modern web and backend services are built using JavaScript and Node.js and therefore there is a flexibility to extend unit tests and integrate with CI/CD pipeline seamlessly - For all these reasons, Webdriver IO is a great choice for automating integration/E2E tests.\nWebdriverIO(also known as WDIO) is the established test framework for Node.js. It has got powerful runner that supports Cucumber, Mocha and Jasmine and loaded with many features that makes easier to use.\nWDIO can be run on  WebDriver or Chrome DevTools Protocol - this means it has a full control over all browser elements to interact with. It is highly extendable that makes easier to automate E2E tests, not just web.\n\n\nIs automating web application just enough?\nIt’s hard to find a project that just automates only web applications, the scope of automation is widen to integrate Web with API, database and files and even more. If this is what you are looking for, you have landed in the right place. This course is having everything you need to know to build an highly extensible integrated framework that can accomodate different applications components.\n\n\nWhat topics are covered? (All that you need to know work in real projects):\nIntroduction\nInstallation and project set up\nRun first webdriverio test\nGit Integration\nLocator Strategy\nHandling Web Elements\nWeb Advanced Interactions\nBrowser args and capabilities - USER STORY starts\nRun Headless\nRun Parallel\nManaging different environments\nCucumber Integration\nCucumber Advanced integration\nSet up logger\nReporter\nException handling\nSet up Global Reporter\nFramework Building Blocks & Page Object Model\nAPI Testing Integration [ADDONS:You are start building helpers from here]\nBuild E2E Tests\nCross Browser Testing\nCI Integration\nDB Integration\nJavaScript for beginners (basics)\nGrid for cross-browser testing (upcoming)\n\n\nThis course is designed such a way that anyone who wants to learn or implement Node.js based E2E test framework in their current role as a QA engineer or Automation tester can build it from scratch.",
      "target_audience": [
        "Anyone who wants to build a modern nodejs based test framework",
        "Functional testers who want to pursue Automation testing",
        "QA Engineer",
        "Automation Testers",
        "Graduates/Students who want to pursue career in testing"
      ]
    },
    {
      "title": "Loadrunner 12.50 SAPGUI Protocol scripting",
      "url": "https://www.udemy.com/course/scripting-for-sap-gui-protocol-using-hp-loadrunner-1250/",
      "bio": "Extensive, Exhaustive and Hands-on Training with Material and Query Support.",
      "objectives": [
        "Students reported that they were able to troubleshoot the issues faced in the real projects after taking this class",
        "As most of the companies (& Interviewers) are expecting Performance Testers to have knowledge on multiple Protocols; this course will give wonderful opportunity to get very good working knowledge on SAP GUI Protocol using loadrunner",
        "By end of the course you will learn to develop a VuGen Scripts for SAP systems and be ready to handle any performance testing project using LoadRunner tool",
        "Even if you are using any other performance testing tool, this course will provide you core guidelines for utilizing it for maximum benefits in less time."
      ],
      "course_content": {
        "Introduction to LoadRunner": [
          "Hand out / Course Material for the Course",
          "LoadRunner Architecture",
          "Where to install LoadRunner Components?",
          "Understanding Load Generators"
        ],
        "LoadRunner Installation": [
          "Installation of LoadRunner"
        ],
        "Introduction of SAP": [
          "SAP Architecture",
          "Installation of SAP Logon Lanchpad",
          "Get you Free SAP User access",
          "Providing Connection String to SAP Login LaunchPad",
          "Understanding Communication Between SAP Client and SAP Server",
          "SAP Access - Understanding 3 levels of Access - Video",
          "SAP Access - Understanding 3 levels of Access - Information",
          "SAP Access - Get your free Logon ID",
          "Understand SAP MM Module - Create Purchase Requisition",
          "Understand SAP MM Module - Create Purchase Order",
          "Understand SAP MM Modules - A look into Other Business processes"
        ],
        "Recording and Playback using VuGen - Virtual User Generator": [
          "Enable SAPGUI Scripting on SAP Servers",
          "Significance of Enabling SAPGUI Scripting in VuGen",
          "VuGen - Record / Playback",
          "VuGen - Understanding SnapShot View",
          "VuGen - Understating Objects",
          "VuGen - Using Control-ID's directly in the Script",
          "VuGen - Step By Step Execution"
        ],
        "Making Enhancements Using VuGen (Virtual User Generator)": [
          "VuGen - Programmatically adding Objects",
          "VuGen - Inserting Transactions",
          "Checking Transaction Response Times",
          "Rendezvous Point",
          "Parameterization",
          "VuGen - Password Encryption"
        ],
        "Doing C Programming with VuGen": [
          "Introduction to C Programming",
          "Understanding Integers - Part1",
          "Understanding Integers - Part2",
          "Understanding Strings",
          "LR Parameter",
          "Conversion - Part1",
          "Conversion - Part2",
          "Conversion - Part3"
        ],
        "Further Enhancements Using VuGen (Virtual User Generator)": [
          "Retrieve Information - Understanding strcmp Function",
          "Performing - Retrieve Information",
          "Error Handling - Understanding strstr Function",
          "Performing Error Handling"
        ],
        "VuGen - Verification Points": [
          "Verification Point - Part1",
          "Verification Point - Part2",
          "Verification Point - Part3",
          "Verification Point - Part4"
        ],
        "VuGen - Control ID to LR Parameter": [
          "Storing the Control ID to LR Parameter"
        ],
        "VuGen - File Operations": [
          "File Operations - Introduction",
          "File Operations - Writing the Code",
          "File Operations - executing the Code",
          "File Operations - Understanding Access mode",
          "File Operations - Implementing in Purchase Requisition Business Process"
        ]
      },
      "requirements": [
        "Prior Knowledge of LoadRunner - Basic Level",
        "Any Basic scripting language knowledge"
      ],
      "description": "Welcome to \"Isha Training Solutions\"\nFirst of all, I would like to thank Udemy Students for making my first course \"Performance testing Using LoadRunner (Basics + advanced)\" a hugely successful\nWe, at Isha, continue to strive hard to create new courses for Performance Testers.  As part of this efforts, we have come up with a new course \" Scripting for SAP GUI Protocol Using HP LoadRunner 12.50 (Basics + Advanced)\".\nAt the end of this course, you not only can confidently handle interviews but also handle Performance Testing projects pertaining to SAP-GUI protocol.\nLearn all the basics and advanced concepts with Hands-on examples. All the intricacies and challenges typically faced by performance testers, is covered as part of this course.\nThis course mainly focuses on scripting part using VuGen.\n\n\nFollowing is covered as part of the course\n1) Installation of Loadrunner\n2) Installation of SAP\n3) Recording\n4) Playback\n5) General issues / concerns while scripting\n6) Scripting challenges with case studies\n7) Controller execution\n8) Analysis\n\n\nPls email me on kgupta.testingtraining@gmail.com for any questions / concerns. For immediate response, pls Whatsapp me on +91-8019952427.\n\n\n****************************************************************************************\nMy other courses on Udemy\nApache Jmeter - Basics to Intermediate level\nAdvance LoadRunner Scripting for HTTP/HTML Protocol\nWebServices Performance Testing Using Loadrunner(SOAP &REST)\nPerformance Testing using LoadRunner 12.50\n****************************************************************************************\n\n\nI am able to Record, Replay back, Add transactions & Add Check Points, then why should I take this course?\nThis course is much deeper than just record and playback.\nStudents reported that they were able to troubleshoot the issues by themselves after attending the course.\nAlso, reported that the course helped them to break the interviews confidently.\nLots of C functions, LR functions, conversions etc...will be discussed.\n\n\n***************************************************************************************",
      "target_audience": [
        "Anyone who has worked with LoadRunner Tool before",
        "Anyone who has basic knowledge on loadrunner",
        "Anyone who wants to strengthen their resume by adding additional protocol",
        "Anyone who wants to get a good hands-on knowledge on SAP GUI Protocol (using LoadRunner)",
        "Anyone who wants to master SAP-GUI protocol using LoadRunner"
      ]
    },
    {
      "title": "Rest Assured REST API Test Automation Framework development",
      "url": "https://www.udemy.com/course/rest-assured-rest-api-test-automation-framework-development/",
      "bio": "Rest-Assured Rest API Test Automation framework design and development from basics +Soap ui free version+Web Service+DB",
      "objectives": [
        "REST API WebService Concepts",
        "REST API Testing methodology",
        "Soap UI Tool",
        "Rest-Assured Automation Framework Development",
        "Java"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction to Course"
        ],
        "Introduction to WebServices": [
          "What is API",
          "What is Web Service",
          "How Web-Service connected to Web-Site",
          "How Web-Service works",
          "Difference between API and Web-Service",
          "How to learn Web Service Testing"
        ],
        "REST API Concepts": [
          "Introduction to REST",
          "Understanding JSON (JavaScript Object Notation)",
          "REST API WebService Environment Set Up",
          "MySQL DB Set Up for REST API WebService",
          "How to run REST API WebService locally in your system",
          "SoapUI Installation",
          "Request-Response in REST API",
          "Understanding the Concept of End-Point",
          "Understanding Resource in REST API",
          "HTTP Status Code in REST API",
          "Query Parameter",
          "GET Request with Path Parameter",
          "PUT Request",
          "Delete Request",
          "Adding Order Resource",
          "Adding Product Resource"
        ],
        "Java": [
          "Introduction to JAVA",
          "Java downloading and Installation",
          "Java Virtual Machine",
          "Difference between JDK, JRE and JVM",
          "Writing first Java Program",
          "Introduction to Eclipse",
          "Keywords",
          "Variables",
          "Understanding Data Types",
          "Data Types",
          "String",
          "Arithemetic Operator",
          "Assignment Operator",
          "Increment Operator",
          "Logical Operator",
          "If-Else statements",
          "nested If",
          "If-Else-If",
          "Switch-Case",
          "Example Program",
          "For loop",
          "While loop",
          "do-while loop",
          "Continue statement",
          "Break statement",
          "Nested loop",
          "OOPS - Understanding Objects",
          "Classes",
          "Methods- Declaration, Parameterization, Returning Value",
          "Working with object with Real Life Sceanario",
          "Constructor",
          "Static Variable",
          "Static Method",
          "Introduction to Array-List",
          "Working with Array List",
          "Basic Array",
          "Hash Map",
          "Understanding the concept of package",
          "Default access modifier",
          "Private access modifier",
          "Inheritance in Java",
          "Protected and Public access modifier",
          "Introduction to Polymorphism",
          "Method - Overloading",
          "Method - OverRiding",
          "this keyword",
          "final keyword",
          "Encapsulation",
          "Abstract class and method",
          "Interface",
          "Understanding Exceptions",
          "Exceptions Handling",
          "Multiple Catch Block",
          "Finally Block",
          "Creating File",
          "Read File",
          "Append File",
          "Read data from Microsoft Excel Application",
          "Write Data to Microsoft Excel Application"
        ],
        "Introduction to Rest-Assured": [
          "Compatible Eclipse Version",
          "intro",
          "GET Request",
          "GET Query Request",
          "POST Request",
          "JSON Parsing - Introduction",
          "Test Case Automation",
          "JSON path Parsing",
          "Jayway JsonPath parsing",
          "JSON path Assertion",
          "Response Assertion",
          "Logging",
          "TestNG introduction",
          "Authorization Concept",
          "Data Driven Testing",
          "Request Body Parameterization"
        ],
        "Framework Design and Development": [
          "Introduction to Framework",
          "Core HTTP Methods development",
          "Assertion and Verfication Logic implementation",
          "Test-Steps Logic implementation",
          "Test Case development",
          "Test Case Execution",
          "Test Case Execution Flow Explanation",
          "TestNG Listeners",
          "Data Logging Logic implementation",
          "Authorization Logic implementation",
          "Test Result Reporting Logic implementation",
          "Logs hyperlink Logic implementation",
          "Command line execution",
          "Passing parameters"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Complete A to Z course for learning the REST API Web-Service  Automation testing  using\nSoap UI & Rest-Assured Open Source Java libraries  from basics to advanced concepts.\n\n**ONLY COURSE IN UDEMY PROVIDES OFFLINE REST API WEB-SERVICE CONNECTED TO DATABASE FOR LEARNING PURPOSE. HELPS IN BETTER UNDERSTANDING OF API & DB CONNECTIVITY\n**Hand Written explanation for best understanding.\n\n\nAbout me : I have been working in IT-Software Testing industry from last 15 years and i have put all those experience and industry standard knowledge into this course. The course filled with industry standard testing approach, implementation and examples.\nWelcome to REST API Web-Service Testing  using SOAP UI tutorial.\nCurrently API is a booming technology it exists everywhere like Social media, Mobile platform, cloud computing etc,.\nNow its a good opportunity to make promising career in API testing.\nThis course below topics and more\nWhat are the API & Webservices\nHow to Test the Webservices using Soap UI\nWhat is Rest API\nJSON\nRequest-Response\nSoap UI tool\nPath parameter\nQuery Paramter\nHTTP status codes\nJAVA\nUnderstand how java program is executed\nJVM, JDK , JRE\nEclipse IDE\nKeywords\nvariables\nData Types\nString data type\nArithmetic operators\nAssignment operators\nIncrement operators\nLogical operators\nConditional statements\nswitch case\nLoops in java\ncontinue, break statements\nOOPS concepts in java\nClass\nMethods\nConstructor\nstatic variables\nstatic methods\nJava collections\narray list\narray\nHashMap\nAccess Modifiers\npackage\nInheritance\nPolymorphism\nMethod overloading\nMethod overriding\nthis keyword\nfinal keyword\nEncapsulation\nabstract class\nabstract method\ninterface\nregular expression\nexception handling\nInput/Output operations\nRead/Write Microsoft Excel File\nRest-Assured concepts\nHTTP requests in Rest Assured\nJson parsing\nJson path\nJayway Jsonpath\nJsonpath Assertion\nResponse Assertion\nRequest-Response Logging\nAuthorization implementation\nData Driven testing\nRequest body parameterize\n\n\n\n\nThis comprehensive course cover.\n\nREST API web-service testing using Soap UI and Rest-Assured\nCore Java from basics\nThe SPECIAL thing about this course is, you will get  industry standard downloadable REST API web-service connected to Mysql database which can be executed on your own system without need of internet. You will know how API web-service interacts with back-end database.\nYou don't need to depend on free online API Web services available on internet for learning purpose.\nThis course is for someone who want make good career in API testing.\nYou don't need to have previous knowledge on WebService as course cover from basics.\nI value your time, So course is medium paced and on-to the point without much dragging to avoid boredom.\n\n\nBy the end of this course:\nYou will know how to test REST API web-service\nYou will be having REST API web-service knowledge equivalent to industry standard experienced tester.\n\n\nTake a look at the course description to get detailed information about course coverage.\nEnroll now and will see you inside\nHappy Learning\nSubhash Chandra",
      "target_audience": [
        "Beginner who wants to learn REST API Webservice",
        "Begineer who wants to learn REST API Testing using SOAP UI Tool",
        "Begineer who wants to learn REST API Automation Testing using Rest-Assured"
      ]
    },
    {
      "title": "JMETER - Master Performance & Load Testing(Basics + Advance)",
      "url": "https://www.udemy.com/course/jmeter-tutorial/",
      "bio": "Jmeter Tutorials - Complete guide for end to end performance testing of a Web application using JMeter tool and features",
      "objectives": [
        "do performance testing of any web based application",
        "integrate various apis like Selenium, JDBC, SOAP/REST to extend the performance testing framework",
        "Crack interviews related to JMeter performance testing"
      ],
      "course_content": {},
      "requirements": [
        "Everything is covered from scratch till advance level. You should know only basics of testing before you start with the course"
      ],
      "description": "JMeter Tutorials\nCOURSE RECENTLY UPDATED WITH JMETER 5.0 SERIES AND LIVE PROJECTS\nWhat is J-Meter?\nJMeter is an open source performance and load testing automation tool. Very widely used in industry and can be integrated with various other apis like: Selenium, SOAP/REST, Databases JDBC, FTP, MAIL for sending request and receive the response to measure the complete performance of a Web Application. There are many features available in JMeter like Threads that are virtual users and helps in putting load to the servers, listeners for generating reports, bean shell scripting for manipulating logics, timers, assertions, logic controllers etc to form up a good performance testing framework.\nIn this course we will be learning in-depth of JMeter tool and will also integrate with BlazeMeter to perform extensive amount of performance and load testing.\nThe course is specially designed for a perform have zero programming and performance testing experience and everything in the tool is covered from scratch till expert level.\nAfter going through the course you can easily measure performance of any WebBased application and can crack performance testing related interviews.\nRecent addition: - JMETER 5.0\nSECTION 9 is the recent added section which covers the Latest JMeter 5.0 series which is explained in the Live Online training program. So you will get real time exposure on Learning JMeter and working on Live projects in this section.\nOnce you go through the complete training program you should be able to justify 2+ years of your current experience in JMeter and should be able to crack Performance testing interviews easily.",
      "target_audience": [
        "Manual Testers",
        "Test Leads",
        "Test Managers",
        "Automation Testers who want to enhance their knowledge in performance testing"
      ]
    },
    {
      "title": "Performance Testing Foundations",
      "url": "https://www.udemy.com/course/performance-testing-foundations/",
      "bio": "Learn everything you need to kick-start your Performance Testing projects. JMeter, Gatling, k6, Postman and more!",
      "objectives": [
        "You will take your first steps into performance testing",
        "Be able to demonstrate your understanding of performance testing to future employers",
        "Learn performance testing best practices and tools",
        "Practice with JMeter, Gatling, k6, Postman tools with live projects."
      ],
      "course_content": {
        "Introduction": [
          "Purpose of the Course",
          "Working with Subtitles"
        ],
        "Fundamentals of Performans Testing": [
          "What is Performance Testing",
          "Why is Performance Testing Important",
          "Performance Test Process",
          "First Performance Test and Frequently Used Terms"
        ],
        "Performance Test Types": [
          "Load Testing",
          "Stress Testing",
          "Endurance-Soak Testing",
          "Spike Testing",
          "Scalability testing"
        ],
        "Tools and Demos": [
          "Project URLs",
          "What is Apache JMeter?",
          "Apache JMeter Tool Demo",
          "What is Gatling?",
          "Gatling Tool Demo",
          "What is K6?",
          "K6 Tool Demo",
          "Postman for Performance Testing",
          "Enterprise Performance Testing Tools",
          "Application Performance Monitoring (APM) Tools"
        ]
      },
      "requirements": [
        "A computer with either Windows, Mac or Linux to install all the free software and tools needed.",
        "Basic Software Testing experience is nice to have but not a must."
      ],
      "description": "Welcome to the Performance Testing Foundations.\n\n\nThis course is designed to teach you the foundations of performance testing, starting with the core performance testing techniques and showcasing various tools that you can use for your own projects. By the end of this course, you will have a clear understanding of how to conduct a performance test and which tools are suitable for different scenarios. We will provide an overview of multiple tools, such as JMeter, Gatling, K6, Postman, each suited for different types of projects and protocols.\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to start performance testing projects.\n\n\nThe course includes over two hours of 1080P (HD) video tutorials with high-quality sound. All the videos are hand edited, and unnecessary parts are removed. You will only learn \"what you need to learn\" to become successful!\n\n\nAll videos have hand-edited subtitles. We spent many hours correcting all the subtitles to help you have a smooth learning experience.\n\n\nWhy should you take this course?\nDo you want to learn and conduct Performance Testing but don't know where to start? Are you a software tester looking to expand your knowledge of performance testing, or are you a software engineer aiming to enhance your skills? This course is designed for you. By the end of the course, you will have acquired all the knowledge necessary to initiate your Performance Testing projects.\n\n\nSign up today, and look forward to:\nOver 2 hours of HD video content.\nAll the knowledge you need to start performance testing projects\nJMeter, Gatling, k6, Postman project examples\nInteractive whiteboard lessons.\nLearn the latest IT industry topics and stay up to date.\n\n\nThere's no risk!\nThis course comes with a full 30-day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, you will receive a 100% refund.\n\n\nReady to get started?\nEnroll now using the \"Add to Cart\" button on the right, and start your performance testing journey! Or, start watching the preview feature so you know you're 100% certain this course is for you.\nSee you at the course!",
      "target_audience": [
        "This course is perfect for software testers who want to enter into performance testing world.",
        "For developers who want to learn more about performance testing",
        "For beginners who want to learn more about performance testing and future job opportunities."
      ]
    },
    {
      "title": "ISTQB Mobile Application Tester Sample Exams",
      "url": "https://www.udemy.com/course/mobile-application-tester/",
      "bio": "The best way to prepare for the ISTQB Mobile Application Tester Exam",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "What is special about those sample exams?\nThose exams are created by a group of certified software testers, that's why you will find different styles of questions with different learning objectives. The exams are divided based on chapters, so you can study chapter 1 and solve its questions then move to chapter  2 and solve its questions and so on in all chapters.\n\n\nWhy should you choose these sample exams?\nDuring my career, I have helped more than 1000 students to prepare for the ISTQB exams. I have more than 800 hours of teaching experience, giving lectures on the different ISTQB Certificates (Foundation Level-Agile Tester-Mobile Tester). That's why I can guarantee you that this course will help you in passing the exam. If you have any question, don't hesitate to contact me.\n\n\n\n\nWhat is special about those sample exams?\nThose exams are created by a group of certified software testers, that's why you will find different styles of questions with different learning objectives. The exams are divided based on chapters, so you can study chapter 1 and solve its questions then move to chapter  2 and solve its questions and so on in all chapters.\n\n\nWhy should you choose these sample exams?\nDuring my career, I have helped more than 1000 students to prepare for the ISTQB exams. I have more than 800 hours of teaching experience, giving lectures on the different ISTQB Certificates (Foundation Level-Agile Tester-Mobile Tester). That's why I can guarantee you that this course will help you in passing the exam. If you have any question, don't hesitate to contact me.",
      "target_audience": [
        "Software Testers",
        "Test Engineers",
        "QA Engineers",
        "Test Leaders"
      ]
    },
    {
      "title": "Robot framework REST API testing with JSON schema",
      "url": "https://www.udemy.com/course/robot-framework-api-testing-with-json-schema-basic-course/",
      "bio": "Learn to automate your Rest API tests with robot framework, python and JSON schema - with hands on exercises!",
      "objectives": [
        "Test REST api JSON responses automatically against a self designed JSON schema",
        "Build up a basic structure for a new robot framework test project",
        "Build GET/POST/DELETE requests with the robot framework request-library",
        "How to read and write JSON schemas",
        "Write, run and debug robot framework testcases in VScode with the robot framework language server",
        "Test an API with datadriven tests and valid suite setups/teardowns",
        "Understand the basic usage of postman",
        "Understand how schema tests are used to test data structure of responses"
      ],
      "course_content": {
        "Introduction and installation": [
          "Introduction",
          "Getting the code and install virtual env",
          "Activate virtual env and inspect folders",
          "Install packages and setup VScode",
          "Inspect and run the API under test",
          "Install, configure and use postman",
          "Deepdive in the API calls with postman"
        ],
        "The theory part.": [
          "Intro Section 2",
          "Different test styles",
          "What is a JSON schema?",
          "A simple JSON schema quiz",
          "Build your own JSON schema",
          "Possible API tests"
        ],
        "Setting up some code to write our first tests": [
          "Intro Section 3",
          "Build up a basic structure in VScode",
          "Writing our first test without JSON schema",
          "Writing the JSON schema python function",
          "Integrate the JSON schema function to our first test",
          "Your turn - write a negative POST login test",
          "Solution - write a negative POST login test"
        ],
        "Write some more advanced tests": [
          "Intro Section 4",
          "A little hint if you want to do more on your own",
          "Writing the GET /users/<id> test",
          "Writing a GET /users?filter=all test",
          "Writing a POST /users test",
          "Your turn - write the POST users /negative test",
          "Solution - write the POST /users negative test",
          "Your turn - write the DELETE /users/<id> test",
          "Solution - write the DELETE /users/<id> test",
          "Your turn - write a datadriven unauthorized test",
          "Solution - write a datatriven unauthorized test"
        ],
        "Looking back and forward": [
          "Lookback, outlook and a huge thank you!"
        ]
      },
      "requirements": [
        "You need to have a basic understanding of robot framework",
        "You do easier with some basic understanding of python",
        "You need to know the basics of REST API's and request types like GET/POST/DELETE"
      ],
      "description": "Are you tired of testing API's manually? Or testing it automatically but you are struggling to validate big API responses?\nThis course is designed for people, that have a basic understanding of testing API's manually and/or automated, but are searching for the next step how to automate API tests more convenient and by getting more information from the tests. In this basic course, you will learn to write automated API tests in robot framework by using python and the JSON schema with the simplest learning method - with a lot of practice. Using a self written API, which is designed specifically for this course, we will be automating a total of 8 different kinds of tests together.\nThe API will be downloaded and hosted by yourself, so you can always access and test against it. It is designed to be able to receive GET, POST and DELETE requests, so you learn by yourself how to read, write and delete data from it.\n\n\nI will guide you in this course to learn things like:\n\n\nInstall and learn the basics of postman\nTest an API manually with postman\nWhat a JSON schema is and how to write/read it\nHow to use the JSON schema within testing\nHow to setup a basic project in robot framework\nWrite python code and use it as a library in robot framework\nWrite, run and debug robot framework code against an API\nUse the robot framework requests library with inbuilt status code verification\nWrite robot framework tests against the API by using GET/POST/DELETE requests\nVerify the format of bigger JSON loads\nModify JSON schemas to get even more out of it\nThis course will walk you through installing everything that is needed, setting up the test API as well as creating a robot framework API testing project from scratch. After this, you will know how you are able to test even bigger API's and big requests and responses!",
      "target_audience": [
        "Everyone who knows a little of robot framework and wants/needs to automate API tests",
        "Test automation engineers who did not yet test API's",
        "API testers and test automation engineers who struggle to test bigger API responses",
        "API testers and test automation engineers who are interested in how to test an API with JSON schemas"
      ]
    },
    {
      "title": "Advance Jmeter : Performance Testing using Jmeter",
      "url": "https://www.udemy.com/course/advance-jmeter-performance-testing-using-jmeter/",
      "bio": "Recording, Execution, Connection with Blazemeter",
      "objectives": [
        "Ready to face advance performance testing interviews",
        "Automate Webbased as well as Web service performance testing"
      ],
      "course_content": {},
      "requirements": [
        "Should have basic knowledge of Jmeter",
        "Should have basic knowledge of beanshell"
      ],
      "description": "JMeter is the most demanding open source performance and load testing automation tool.\nJmeter support many protocols incluging Http, FTP, SMTP, Soap, REST etc.\nAim of this course is to cover advance concepts of Jmeter & performance testing also cover many interview question which are asked in interviews\n\nThis Advance course is mainly design for performance testing professionals, who already have basic knowledge of Jmeter, This course is mainly targeting following areas\n\nCorrelation\nSOAP / REST performance testing\nNew ways to record automation scripts\nAnalyse graph\nWorking with logs\nBeanshell Advance\nHeader Manager\nURL Rewriting\nPick Data from Excel and Database\nSave results in Excel format\nWe also cover distributed testing using Jmeter\nThis course is specially designed for PerformanceTesting professionals, This will take students from basic level to advance in decent pace videos.\n\nAfter going through the course you can easily measure performance of any REST & Web based application.",
      "target_audience": [
        "Testers looking opportunity in performance testing",
        "Performance testers looking opportunity in Testing"
      ]
    },
    {
      "title": "ZeroToHero Cucumber BDD Basics + Advanced +Framework design",
      "url": "https://www.udemy.com/course/cucumber-java-tutorial/",
      "bio": "*2024* Cucumber BDD Pro: From Basics to Advanced with Selenium, Java, TestNG, JUnit, Step-by-Step Framework Development",
      "objectives": [
        "Master the art of building robust Cucumber automation frameworks from scratch.",
        "Learn to create reusable, efficient feature files and step definitions for web application testing.",
        "Gain hands-on experience with JUnit and TestNG integration in Cucumber projects.",
        "Understand how to implement design patterns like Singleton in automation frameworks.",
        "Experience hands-on learning with real-time examples for every automation concept.",
        "Apply automation techniques instantly with examples drawn from real projects.",
        "Gain confidence in automation by working through real-time examples and scenarios."
      ],
      "course_content": {},
      "requirements": [
        "No Java, Selenium and Cucumber knowledge is required, you will learn everything in this course.",
        "Course includes real time examples of website which you can use for practice.",
        "Start learning instantly with no prior software installation needed."
      ],
      "description": "Welcome to \"Learn Cucumber BDD from Scratch to Advanced with Selenium, Java, TestNG, JUnit, and Step-by-Step Framework Development\"!\nAre you ready to master Cucumber BDD and build robust automation frameworks from scratch? This comprehensive course is designed to take you from a beginner to an advanced level, guiding you through every step of the process.\nWhat You'll Learn:\nCucumber BDD Fundamentals: Understand the core concepts of Behavior-Driven Development (BDD) and how Cucumber can streamline your testing process.\nSelenium WebDriver: Gain hands-on experience with Selenium for automating and integrating web applications with Cucumber.\nJava for Automation: Learn to use Java effectively for writing and managing your test scripts and automation code.\nTestNG & JUnit: Discover how to leverage TestNG and JUnit to run your tests, manage test execution, and organize your test cases.\nMaven: Understand how to use Maven for project management and dependency management in your automation framework.\nFramework Development: Follow a step-by-step guide to developing a robust and scalable test automation framework from scratch, incorporating best practices and real-world examples.\nCourse Highlights:\nInteractive Learning: Use real-time examples and hands-on projects that mirror industry scenarios.\nNo Software Installation Required: Start learning immediately without the hassle of installing additional software.\nComprehensive Coverage: From foundational concepts to advanced techniques, get a complete understanding of Cucumber BDD, Selenium, Java, TestNG, JUnit, and Maven.\nFramework Development: Build and refine a complete automation framework, gaining practical experience in framework design and implementation.",
      "target_audience": [
        "Test Engineer",
        "Software Tester",
        "Manual Tester",
        "Automation tester"
      ]
    },
    {
      "title": "React - testing",
      "url": "https://www.udemy.com/course/react-testing-app/",
      "bio": "Testing react applications with Jest and React Testing Library",
      "objectives": [
        "Testing React application",
        "Jest framework",
        "React Testing Library"
      ],
      "course_content": {},
      "requirements": [
        "Knowing React framework"
      ],
      "description": "This course is not just a theory and bullet points about testing React. In this course, we test real application and you will gain not just knowledge but also practice.\nWe will focus on testing web application in React. I will explain why it's worth testing and what tools we should pick for testing react application. We will be talking about many different aspects of testing: Unit tests, integration tests, snapshots, test runner, describe, before and after tests, skip tests, loops, matchers, truthy and falsy, render component, fire event, mocking, fetching API, act, wait and many more. After this tutorial, you will be able to handle many obstacles with testing the dynamic applications in React. We will write a lot of different tests to cover different technics and ways to select certain elements and interact with them.\nThe first tool that we will learn will be Jest. I will show you how to run tests and write them. At this level, we will write tests without React application. We will focus on Jest only and use it as our test runner.\nAfter we will know what is Jest and how it works, we will install our first application with React Testing Library. I will show you how that library works and what options do we have with it. We will render our components and we will trigger different events.\nThe main section of this tutorial will be testing the real React app. We will have a ready app, written in React and we will start using different technics to test our components. We will be using the newest trends in React like hooks with useState and useEffect. When you finish that chapter, you will know what kind of problems you might have when writing your own tests for React and more importantly, how to solve them with Jest and React Testing Library.",
      "target_audience": [
        "React Developers"
      ]
    },
    {
      "title": "Introduction to METS the Minimal Essential Testing Strategy",
      "url": "https://www.udemy.com/course/metstesting/",
      "bio": "METS is an effective, agile testing approach that can stand alone or enhance your existing software testing efforts.",
      "objectives": [
        "Fundamentals of Software Testing",
        "Quality Assurance Techniques",
        "Test Strategy",
        "METS Testing",
        "Test Planning"
      ],
      "course_content": {},
      "requirements": [
        "Interest in Testing"
      ],
      "description": "METS is built upon the principle that testing can be prioritized from Critical to High, Medium, and Low tasks. This prioritization provides great flexibility to reduce as much risk as possible within the timeframe given. METS is an essential testing strategy utilized by Quality Assurance organizations around the world. METS is a dynamic approach that grows with the maturity of your software and team. METS easily complements existing test methodologies already implemented.",
      "target_audience": [
        "Testers",
        "Test Engineers",
        "Quality Assurance Engineers",
        "Director of Quality Assurance wanting to quip their team well."
      ]
    },
    {
      "title": "Learn how to become an amazing QA Professional Tester",
      "url": "https://www.udemy.com/course/qa-testing-not-only-for-professionals/",
      "bio": "Learn QA SW Testing with live examples and introduction to JIRA, BUGZILLA, JMeter + interview, job opportunities",
      "objectives": [
        "To know everything about QA SW Testing to pass entry interviews.",
        "Will receive and improve the required tools and knowledge for success.",
        "To start working in SW QA Testing field without any experience or to improve the QA skills for the new job opportunities.",
        "To become real professional even if you are new to QA field or experienced QA tester.",
        "To receive successful Tips and support information to find a job of your dream."
      ],
      "course_content": {},
      "requirements": [
        "Interest in leaning new career and changing the life.",
        "Looking for the new dream job and building the professional career"
      ],
      "description": "Hello Guys,\nThe main idea of this course is to teach the students to become the real QA professionals in the short time possible and to be able to pass any entry interview for manual QA test position. To be professional means to have the only required knowledge and skills to test any product in the world.\n*** In order to build a house you need to create a strong foundation for the future. That is why you could not study Automation testing without having the basic knowledge of QA SW Testing field. ***\nAfter this course the students will be confident with writing the test cases and execute the test methods for any device, equipment under the test in the real life. And the most important that all required experience will be reached after 2 - 2.5 hours of training only.\nWhy to take 3 - 10 length hours QA SW Testing courses?\n\nThis two hours training will teach you everything to become a real professional in a short period of time even if you don't have any experience:\nLearn inside tips to become a real professional in the QA Testing field in the shortest amount of time possible.\nHelp you to receive the all required and immediate knowledge, techniques, tools to succeed.\nDiscover and see the real testing examples of the real products\nHands-on step-by-step guidance that shows you exactly what to do and how to implement your received knowledge.\nFollow a simple formula to become a real professional in QA SW Testing field with the immediate chance to be hired to the IT/Hi-Tech industry.\nHelps you to pass the entry examinations (questions/answers examples) and interviews to IT/Hi-Tech companies.\nGives you the Tips and successful tools to succeed in building new and existed career.\nSee what other students are saying about this course:\n1. David Ortiz\nGreat course. I learned so much and I am glad I took it. Now I can implement it at work!!!\n\n2. Adams Jubril\nthis is straightforward class and understanding anyone who is new to QA testing..Thanks\n\n3. Vyosi75\nGreat explanation, very easy to understand, lots of useful information.\n4. Bobby Travis\nInstructor is thorough and well spoken, easy to follow.\n5. Andrey Feigin\nGood value for money!!! Really glad that bought this course. A lot of interesting and useful info.\nWhy would you like to become the QA SW Tester?\nHow about to receive a job of your dream that can set up you quickly in the life with respectful income!\n\nHow about to become a real professional without any experience!\nHow about to join to the industry that spending billions on quality of the products!\n\n\nYou would like to take this course if you are a fan of modern new technologies.\nDo you know that QA Testers are responsible for success of Facebook, Twitter, Google, YouTube and everything what have been developing for the human in Software field till Today?\nThis is your time to join to the great society, calling IT/Hi-Tech community and to create a new technology that people will love and use every day.\n\n\nThere are enough people dealing with the QA Software Testing, but not everyone is a real professional. We will see together what should be done in order to succeed and to become real professional QA SW Tester, also without any experience.",
      "target_audience": [
        "All levels students who wants to make a real career in SW QA Testing field",
        "All levels students who desires to receive the required skills in SW QA Testing field and to become a real professional."
      ]
    },
    {
      "title": "Karate DSL: API Automation and Performance from Zero to Hero",
      "url": "https://www.udemy.com/course/karate-dsl-api-automation-and-performance-from-zero-to-hero/",
      "bio": "API Automation Testing, Performance and Load Testing with Karate DSL and Gatling framework. API testing made simple.",
      "objectives": [
        "How to automate API testing",
        "Performance and Load testing with Gatling",
        "JSON Manipulations",
        "Test-Data Generation",
        "Creating Strong Assertions",
        "User-Flow Simulation using APIs"
      ],
      "course_content": {},
      "requirements": [
        "Windows or Mac computer",
        "Basic understanding of programming (any language)",
        "Basic experience with Java or JavaScript would be a plus"
      ],
      "description": "Karate DSL - a framework for API automation testing, Performance, and Load testing. This framework is running on Java and using Apache HTTP client to perform Http connections. For the performance testing, Karate DSL has a very nice integration with the Gatling framework.\nKarate has its own scripting language (DSL - Domain Specific Language), which is pretty simple and can be picked up by people who don't have coding experience. It looks like the Cucumber framework, but it only looks like that. The framework has a predefined set of scripting commands for any operation you might need during interaction with APIs. Also, the framework has native support of JAVA and JavaScript programming languages, so you can create any custom methods and use it in Karate if you need it.\nThe key advantages of the framework:\nOwn easy scripting language. You don't need to have coding skills to start writing tests\nNative JavaScript support and JSON objects (forget about parsers)\nVery powerful assertions and JSON schema validation\nParallel execution (it's very fast)\nIntegration with Gatling for Performance testing\nWhat you will learn:\nBasics: what is API and JSON objects. You ll have a clear understanding of the concept of how API works and how to work with JSON objects\nHow to set up and configure Karate framework from scratch\nHow to perform GET, POST, PUT, DELETE requests\nHow to make powerful assertions for API responses, traverse through JSON objects, fuzzy matching assertions, and JSON schema validation\nHow to chain API calls, re-use API response to form new API request\nHow to generate random test data, use this test data in API requests\nHow to handle authorization headers, access tokens\nBefore/After hooks, parallel test execution, conditional testing, data-driven testing\nHow to use Karate scripts for Performance and Load Testing with Gatling framework\nKarate DSL is a really great framework for API Automation and my Number 1 choice.",
      "target_audience": [
        "Quality Engineers",
        "QA Automation Engineers",
        "Developers who need quickly automate API regression testing"
      ]
    },
    {
      "title": "Master JMeter from Basics (Performance + Load + API Testing)",
      "url": "https://www.udemy.com/course/master-jmeter-from-basics-performance-load-api-testing/",
      "bio": "10+ hours of JMeter Learning from basics to advance. Best JMeter Tutorial you will get.",
      "objectives": [
        "Working of JMeter",
        "Developing Test Scenarios in JMeter",
        "Ways how to do performance Testing with JMeter",
        "Generate different types of Reports",
        "Integration of JMeter with Selenium",
        "JMeter advance Concepts",
        "Practicing Sessions",
        "Detail knowledge of JMeter Components"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Performance Testing"
        ],
        "Install JMeter": [
          "Install Java",
          "Install JMeter"
        ],
        "Overview of JMeter": [
          "JMeter Components",
          "Jmeter Menu"
        ],
        "Recording Scripts in JMeter": [
          "Recording by Chrome Browser",
          "Firefox JMeter Scripts Generation",
          "Recording with Blazemeter",
          "JMeter Basic"
        ],
        "Basic Features": [
          "Test Plan",
          "Simple JMeter Template",
          "Thread Groups",
          "Sample demo website"
        ],
        "Samplers": [
          "HTTP Requests",
          "FTP Requests",
          "OS Sampler",
          "Test Action Sampler"
        ],
        "Logic Controllers": [
          "Simple Controller",
          "Loop Controller",
          "Random Controller",
          "Random Order Controller",
          "If Controller",
          "Runtime Controller",
          "InterLeave Controller",
          "Once Only Controller",
          "Module Controller",
          "Controllers Quiz"
        ],
        "Timers": [
          "Constant Timers",
          "Gaussian Random Timer",
          "Uniform Random Timer",
          "Synchronizing Timers",
          "Constant Throughput Timers"
        ],
        "Assertions": [
          "Size Assertions",
          "Duration Assertions",
          "HTML Assertions",
          "Response Assertions",
          "Assertions Quiz"
        ],
        "Threads": [
          "Running Threads Sequentially",
          "SetUp & TearDown Thread Group",
          "Installing plugins in JMeter",
          "Stepping Up Thread Group",
          "Ultimate Thread Group",
          "Thread group"
        ]
      },
      "requirements": [
        "No prior knowledge is needed",
        "Basic knowledge of Software Testing is helpful"
      ],
      "description": "JMeter is the most popular tool when we talk about Performance Testing. Apart from Performance Testing JMeter is also used for API Testing. The main advantage all above is it is free. It helps to test this performance by simulating a number of users. Once the functionality of the application has been tested successfully and end to end flow is working then we must test the performance before releasing it market.\nThis JMeter course covers every aspect you need to learn & master JMeter.",
      "target_audience": [
        "Anyone interested to learn Performance Testing using JMeter"
      ]
    },
    {
      "title": "Master XPath and CSS Selectors for Selenium WebDriver",
      "url": "https://www.udemy.com/course/xpath-and-css-selectors/",
      "bio": "Master XPath & CSS Selectors – The Ultimate Guide to Locating Elements in Selenium WebDriver.",
      "objectives": [
        "HTML Basics",
        "Locating Elements Using ID, Name, Class",
        "Creating XPath",
        "Creating CSS Selectors",
        "Using Locaters in Selenium WebDriver Scripts",
        "Using XPath and CSS in Selenium WebDriver Scripts"
      ],
      "course_content": {
        "Locating Elements": [
          "HTML Basics",
          "How to Inspect WebElements?",
          "Find Elements By ID and Link Text",
          "Find Elements By Name and Class"
        ],
        "XPath Basics": [
          "***NEW***SelectorsHub Chrome Extension",
          "SelectorsHub Tool",
          "ChroPath (Deprecated. Use SelectorsHub Instead)",
          "Create XPath Using Attributes",
          "Create XPath Using Text",
          "XPath for Dynamic Elements"
        ],
        "XPath Axis": [
          "XPath Using Parent - Child Relationship",
          "XPath Using Ancestor - Descendant Relationship",
          "XPath Using Preceding - Following Relationship",
          "Absolute XPath Vs Relative XPath"
        ],
        "CSS Selectors Basics": [
          "What is CSS and CSS Selectors?",
          "Create CSS Selectors Using Attributes",
          "CSS Selectors for Dynamic Elements",
          "Create CSS Selectors Using Multiple Attributes"
        ],
        "CSS Selectors Advance": [
          "Advance CSS Selectors",
          "Creating CSS Selectors Using Child-Node Numbering",
          "How to Retrieve a Collection of WebElements?",
          "Handling WebElements Collection",
          "Visible vs Hidden WebElements",
          "WebElements Within Another WebElement"
        ],
        "Bonus: XPath & CSS in 2025: Best Practices, Dynamic Elements & Interview Prep": [
          "XPath vs CSS Selectors in 2025: Which One Should You Use and When?",
          "Top 20 XPath & CSS Selector Interview Questions (with Real-Time Examples)",
          "Handling Dynamic Elements Using Advanced XPath & CSS Techniques"
        ],
        "Next Steps": [
          "Next Steps",
          "Next Steps Article"
        ]
      },
      "requirements": [
        "No prior coding experience required. Anyone willing to learn XPath and CSS Selectors can take this course."
      ],
      "description": "(Please Read) Note: ChroPath extension for Chrome, which is used in this course to inspect the elements, is no more available on Chrome. Please use SelectorsHub extension for the same purpose. Installing and using SelectorsHub is very similar to as that of ChroPath.\nFor the best video streaming quality, please adjust the resolution from 'settings' at bottom right-hand corner of video player. Choose 1080p or 720p as per your network speed.\nThis course covers:\nWebPage HTML Structure Basics\nElement Locating Strategies\nLocating Elements By ID\nLocating Elements By Name\nLocating Elements By Link Text\nLocating Elements By Partial Link Text\nLocating Elements By Class\nHands on Exercises on Locaters\nXPath - Basics\nXPath - Axes\nCSS Selectors - Basics\nCSS Selectors - Advance\nTo get the maximum benefit from the course, please take a look at following steps explaining 'How to take this course?'\nStep 1:  Schedule 30-45 minutes of your time daily for 5 days a week. 'Continuity' is the key.\nStep 2:  All sessions are divided in small videos of less than 20 minutes. Watch 2-3 videos daily.\nStep 3:  Hands-on exercise is very important. So, immediately try out the programs discussed in the session. Try them on your won. You can download these programs from lecture resources.\nStep 4: Assignments with answer keys are provided where-ever necessary. Complete the assignments before jumping on to the next sessions.\nStep 5:  If you come across any questions or issues, please feel free to contact me and I will make sure that your queries are resolved.\nWish you all a very happy learning.\nNote: All the course videos are in Quad HD. For the best video streaming quality, please adjust the resolution from 'settings' at bottom right-hand corner of video player. Choose 1080p or 720p as per your network speed.",
      "target_audience": [
        "Anyone who wants to learn Element Locating Strategies in Selenium WebDriver",
        "Manual Testing Professionals",
        "Selenium Testers",
        "Automation Aspirants",
        "QE Testing Professionals",
        "Automation Test Engineers",
        "QE Automation Engineers",
        "Software Testing Professionals"
      ]
    },
    {
      "title": "Web Automation and Testing using Playwright",
      "url": "https://www.udemy.com/course/playwright/",
      "bio": "Reliable end-to-end testing for modern web apps",
      "objectives": [
        "Understanding core concepts of Playwright",
        "Playwright API to interact with chromium, firefox and webkit browser engines",
        "Exploring libraries and browser extensions related to Playwright",
        "Test Frameworks for JS, TS and Java: Playwright Test, Jest-Playwright and JUnit",
        "Enhancing test framework using Page object model, Cucumber and more",
        "Running Playwright Tests in CI/CD Pipelines",
        "JavaScript concepts"
      ],
      "course_content": {},
      "requirements": [
        "None - everything you need is included in the course"
      ],
      "description": "Microsoft's Playwright is built to enable cross-browser web automation that is ever-green, capable, reliable and fast. It is developed by the same team that developed Puppeteer and hence it is leveled up Puppeteer.\nThis course will teach you Playwright, which is believed to become one of the most popular web automation tools in the near future. The course will start from the very basics, you do not need to have any experience with any web automation tool, test frameworks and not even JavaScript. Everything you will need is covered in the course.\nBe an early adopter and stay ahead in the game.",
      "target_audience": [
        "Developers who need to perform web automation or web scraping",
        "Software Testers who want to learn one of the most popular upcoming testing tool"
      ]
    },
    {
      "title": "Webservice / API testing-SoapUI Free Version | By Groovy",
      "url": "https://www.udemy.com/course/soapui-free/",
      "bio": "Detailed Groovy scripting | Code Management | Rest API Testing | Coding Coverage",
      "objectives": [
        "Ready to automate Soap and Rest realtime services",
        "Ready to face web service automation interviews"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Software Testing",
        "Basic knowledge of Web Services"
      ],
      "description": "For REST, SOAP and other popular API and IoT protocols, SoapUI Pro provides the industry's most comprehensive and easy-to-learn functional testing capabilities. Based on open core technology proven by millions of community members, SoapUI Pro helps you ensure that your APIs perform as intended, meet your business requirements, timeframes, and team skill sets right from day one.\nCoverage in this course.\n1. All Basic to Advance features of SoapUI(Free Version)\n2. Service Mocking\n3. Groovy Details\n4. Soap and Rest Services\n5. Report Generation\n6. Code Management",
      "target_audience": [
        "Software Testing looking opportunity in API Automation",
        "Any professional looking to start career in API automation"
      ]
    },
    {
      "title": "Learn XPath in simple steps",
      "url": "https://www.udemy.com/course/letcode-xpath/",
      "bio": "Complete master course to find XPath in any complex application",
      "objectives": [
        "Learn XPath basic in step by step",
        "Absolute VS Relative XPath",
        "XPath using Attributes",
        "Best practices while writing XPath",
        "Conditional XPath",
        "XPath Collections",
        "XPath Functions",
        "XPath using Text",
        "Child, Parent & Ancestor",
        "Axes XPath",
        "Wildcard in XPath",
        "SVG XPath"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Absolute VS Relative XPath"
        ],
        "XPath using Attributes": [
          "XPath using Attributes",
          "Best practices while writing XPath"
        ],
        "Conditional XPath": [
          "Conditional XPath"
        ],
        "XPath Collections": [
          "XPath Collections"
        ],
        "XPath Functions": [
          "XPath Functions"
        ],
        "XPath using Text": [
          "XPath using Text"
        ],
        "Child, Parent & Ancestor": [
          "Child, Parent & Ancestor"
        ],
        "Axes XPath": [
          "Axes XPath"
        ],
        "Wildcard in XPath": [
          "Wildcard in XPath"
        ],
        "SVG XPath": [
          "SVG XPath"
        ]
      },
      "requirements": [
        "Hunger to learn XPath",
        "Mostly dedicated to Test Automation Engineer"
      ],
      "description": "XPath is the widely used locator strategy in the world of test automation. This course can make you understand the XPath concept very easily.\nAs an Instructor I know that only the tutorial is not sufficient, so check the video resources to grab a testing practice site.\nI build a practice site where you can practice most of the demos used in the course.",
      "target_audience": [
        "Test Automation Engineer",
        "Selenium Enthusiast",
        "Protractor Enthusiast",
        "Web Automation Engineer"
      ]
    },
    {
      "title": "Selenium WebDriver JAVA |Best for Beginners |Real Frameworks",
      "url": "https://www.udemy.com/course/selenium-with-java/",
      "bio": "SELENIUM WEBDRIVER Automation with JAVA, BDD Behavior Driven Framework, End to End integration to Jenkins,CI/CD Github",
      "objectives": [
        "BASIC --> Advance --> Expert Level knowledge of JAVA PROGRAMMING FROM TESTERS point of view and its implement in Automation",
        "Expertise on Selenium WebDriver Basics + Advance concepts with Practical implementation to become Job Ready",
        "Confident to Automate Web Application using Selenium WebDriver and Java + Best Practices as per Industry Standards",
        "Can automation any REALTIME application and be able to design FRAMEWORKS from scratch",
        "Details understanding of advance concepts like OOPS, Excel Handling, DB Handling etc",
        "Detailed knowledge of supporting Tools and Libraries like MAVEN, JUNIT, TestNG, Cucumber",
        "Regularly updated latest Interview Questions & Programming Exercise with Solution",
        "Framework Implementation from scratch : Data driven framework, BDD Framework using Cucumber"
      ],
      "course_content": {
        "Selenium Basics | Selenium Introduction and its Components": [
          "Selenium Introduction with Advantages-Disadvantages & Components in Selenium",
          "Course Roadmap : Must to View for Everyone",
          "Setup Selenium IDE on Firefox & Chrome for Record & Playback",
          "Selenium IDE : Record and Play in Selenium",
          "Test Your Knowledge : Selenium Basics",
          "Set-1 : Basic Interview Questions"
        ],
        "Setup Programming Environment": [
          "Java(JDK) Installation on Windows Machine",
          "Eclipse Installation : Editor for Java Programming"
        ],
        "Eclipse & Java Introduction | Lets Start basic programming": [
          "Introduction to Eclipse : Environment Walkthrough",
          "Start Java programming - Project & Package",
          "Basic Programming : Learn how to write Variables & Constant",
          "Class in Java | How to implement Class, Constructors, Class Method and Objects",
          "Methods(Functions) in Detail : Different types of Methods",
          "Constructor | What is Constructor and How to Write Constructor",
          "Where to use Constructors | Practical Implementation of Constructor",
          "Take data from user at runtime",
          "Java Basics",
          "Practice Exercise ****** Mathematical Calculation with Solution",
          "Practice Exercise ****** Mathematical Calculations -Solution attached",
          "Practice Exercise ****** Mathematical Calculations - Solution attached",
          "Practice Exercise ** Number Swap with Solution"
        ],
        "Condition Handling using with Practical Example | Looping & String Handling": [
          "Simple Condition Handling - IF - Else (Handle 2 conditions)",
          "Multiple Condition Handling (If - Else if - else) with practice exercise",
          "Condition handling with Logical OR / AND",
          "Nested Condition Handling (Condition inside Condition)",
          "Solution of following Exercise: Download attached project",
          "Practice Exercise ****** Largest amount 3 numbers",
          "Practice Exercise ****** Number Divisible",
          "Practice Exercise ****** Days in a month",
          "Practice Exercise ****** Type of Triangle",
          "Practice Exercise ****** Check Grade"
        ],
        "Step by Step Looping | For - While - Do While - For Each": [
          "For Loop : Run Loop with increment and Decrement Order",
          "While Loop",
          "Do while loop",
          "For Each loop : Advance For Loop for Group of Data",
          "Nested Loop : Loop inside Loop",
          "Following Programming Exercise Solution : Download attached project",
          "Practice Exercise ****** Number Value Interchange",
          "Practice Exercise ****** Print Fibonacci Series",
          "Practice Exercise ****** Check Prime Number",
          "Practice Exercise ****** Print * Triangle",
          "Practice Exercise ****** Print Table"
        ],
        "String Handling : What is String, Use different functions available in String": [
          "String Handling - Part1 : What is String -String Functions(Length, Upper, Lower)",
          "String Handling - Part2 : String Functions- Replace, SubString, Split, Concat",
          "String Handling - Part3 : String Comparison",
          "Following Programming Solution : Download Code & Use it while learning",
          "Practice Exercise ****** Reverse String",
          "Practice Exercise ****** Check String Palindrome",
          "Practice Exercise ****** Concatenate and Find Length",
          "Practice Exercise ****** Word Count in a String",
          "Practice Exercise ****** Find Spaces in String",
          "Practice Exercise ****** Compare String",
          "Practice Exercise ****** Compare Last Few Characters",
          "Practice Exercise ****** Compare First Few Characters"
        ],
        "Working with Arrays | Hold Multiple Data with Same name": [
          "Array In Java",
          "Multi dimension Array",
          "Following Exercise : Download Code & Use it while learning",
          "Practice Exercise ****** Sum of All Values",
          "Practice Exercise ****** Array Sorting",
          "Practice Exercise ****** Find Largest & Smallest Value",
          "Practice Exercise ****** Find Second Largest & Smallest Value",
          "Practice Exercise ****** Search Data in Array"
        ],
        "File Handling in Java: Read data from TXT, CSV and Other files": [
          "Read file by File Reader",
          "Read data by Buffered Reader",
          "Write data by File Writer",
          "Write data by BufferedWriter",
          "Download Code & Use it while learning",
          "Practice Exercise ****** Read and Write File",
          "Practice Exercise ****** Read ODD or EVEN Lines only",
          "Practice Exercise ****** Don't display error lines",
          "Practice Exercise ****** Copy Error Lines",
          "Practice Exercise ****** Copy and Write in upper Case"
        ],
        "Selenium Documents": [
          "String handling in Java",
          "Read data by File Reader(code)",
          "Read data by Buffered Reader(code)"
        ],
        "Access Modifiers : Access Class members at different places": [
          "public modifier",
          "private access modifier",
          "default / package access modifier",
          "protected access modifier",
          "Access Modifiers - at class level"
        ]
      },
      "requirements": [
        "NO PREREQUISITE : No programming or coding experience/knowledge required",
        "NO PREREQUISITE : No automation experience is required",
        "Basic understanding of Manual Testing, Processes, Functional & Regression Testing",
        "Should be ready to invest at least 30mins a day for practice and concept implementation"
      ],
      "description": "Recent Updates\nMar 2024 : Added/ Updated BDD Framework Videos\nMay 2023 : Added New Java Videos (Maven, Database Handling)\nJan 2022 : Added and Updated videos of Junit and Test NG\n\n\nThis course includes automation testing using Selenium WebDriver / SELENIUM JAVA (Selenium 4)\nBasics and Advanced, Java Concepts, TestNG Framework, Automation Framework Design (Page Objects, Page Factory, Data Driven, Reading Excel Files)\nBest reporting tool - Advanced Reporting using ReportNG and XSLT\nParallel execution with Selenium Grid | Maven Build Management, Continuous Integration with Jenkins, Code management with Git integration\nThis course will take you from basic to expert level step by step, we are covering all java concepts which are required for daily selenium activities and also for preparing selenium interview\nJava Basics: Variables, If-Then-Else, For loop, While loop, Arrays, Classes, Inheritance, Objects, Constructors, Methods, Working with Excel file and database\nCollection API, OOPS, Properties file etc\nBest course for learning Automation Testing, qa automation, Selenium Testing Framework, BDD Behavior Driven Development, Cucumber Software.\n\nSelenium WebDriver Basics: Commonly used methods and locator types, Id, Name, Class Name, Link Text, Partial Link Text, Xpath, Css Selector\nAjax Handling,  Multi window handling, Actions class,  Implicit wait, Explicit wait.\nAfter completing the the course you will be able to write automated tests using selenium and java\n\n\nSelenium Coverage\n\n\n1.   Selenium Introduction & Setup\n2.   Step by Step Environment Setup\n3.   Selenium Components\n4.   WebDriver Basics\n5.   WebDriver Implementation & Best Practices\n6.   Page Object Model (PageFactory)\n7.   Data Driver Framework\n8.   End to End BDD Framework\n9.   Reporting Options\n10.  Code Management using GIT\n11.  CI/CD using Jenkins\n\n\nJava Coverage\n\n\nIn this course we prepare student for all automation challenges, it gives coverage of almost all basic and advance concepts of java which are required to work on different automation tool.\nHere you will cover basic concepts like Class, Object, String, Loop and advance concepts like File Handling, working with Excel, Database connectivity, Collection API.\nHere we cover OOPS in details which makes you working as well as interview ready.\nAdvance concepts like Exception Handling, Excel handling\nFile Handling & Excel Handling\nWorking with JUnit & TestNG\nWorking with Maven\nMany Programming Exercise and Quiz\nAccess Modifiers, Keywords\nDebugging\nInterview Questions and Tips\n#Selenium  #webdriver #Java #testng #automation #testing #qa",
      "target_audience": [
        "Any professional who wants to learn Selenium-Java in easy steps with practical approach",
        "Software QA /Testers who want to start career in Automation",
        "Manual Testers Looking Opportunity in Selenium with Java",
        "Any professional want to automation different types of application using Java Programming & Selenium",
        "Freshers looking for opportunity in Software Testing/Automation Testing",
        "Any professional who want to learn Selenium-Java from scratch to expert level"
      ]
    },
    {
      "title": "Unit testing for Go developers",
      "url": "https://www.udemy.com/course/unit-testing-go-developers/",
      "bio": "Learn how to test your Go code with real world examples",
      "objectives": [
        "Learn the concepts of unit testing",
        "Learn the Go testing package",
        "Learn Testify, the most used teste library in Go",
        "Learn using real world examples"
      ],
      "course_content": {
        "Introduction and Basic concepts": [
          "Welcome!",
          "The structure of a Software Test",
          "Our first test using Golang",
          "Arrange, Act and Assert"
        ],
        "Golang Testing Essentials": [
          "Course resources",
          "The go test command and test caching",
          "Improving your Test Failure Messages",
          "Table Driven Tests, avoid repeated test code",
          "Improving our tests with Sub Tests",
          "Avoiding inconsistent tests with Fatal method",
          "Mocking dependencies",
          "Unit and Integration Tests, difference explained",
          "Integration and Unit test difference exercices",
          "Mocking exercices"
        ],
        "Testify, taking our tests to the next level": [
          "Idiomatic Assertions",
          "Mocking made easy with mock.Mock"
        ],
        "Mastering the most used Mocking types (Test Doubles)": [
          "Stubs: User registration example",
          "Mocks: Asserting method calls",
          "Mock and Dummy Object: Credit card fraud prevention example"
        ],
        "Conclusion": [
          "Thank you!"
        ]
      },
      "requirements": [
        "Programming Logic",
        "Basic knowledge in Go"
      ],
      "description": "In this course, you will learn how Go developers are testing their Go code in the companies. We will use only real world problems and we will show all the examples using code.\nYou will learn the concepts of unit testing, the Go testing package and Testify, the most used library for tests in Go.\nIf you came from another languages. I'm sure you are trying to figure out how to apply the same concepts using Golang, in this course we will answer all your questions.\nAnd if Go is your first language or you don't know much about unit testing, don't worry, we will cover everything, from the basic to advanced.",
      "target_audience": [
        "Developers and students that want test their Go code"
      ]
    },
    {
      "title": "Playwright Python and Pytest for Web Automation Testing",
      "url": "https://www.udemy.com/course/playwright-python-pytest/",
      "bio": "Unleash the Power of Playwright and pytest for Web Automation Testing and API Testing",
      "objectives": [
        "Write python scripts to launch browsers and automate tasks performed usually on websites",
        "Locate web elements using various methods like element role, inner text, form label or placeholder, CSS selectors, and XPath",
        "Perform actions on web elements like hover, click, fill form, select option, upload files, and use keyboard shortcuts",
        "Handle events like auto-waiting, custom waiting for an element to load, page navigations, requests, and downloads",
        "Log in to websites and authenticate yourself using your account like Google accounts",
        "Write a script to automate inbox mail checking for new emails and report the same",
        "Use pytest to write and run test cases and define custom pytest fixtures to share test state/data",
        "Utilize playwright tools like taking screenshots, recording videos, trace viewer, and auto code generator",
        "Apply best practices like web-first assertions, Page Object Models (POM), request interceptions and Parallelism",
        "Test API endpoints, define custom API request context, handle API responses, and mock API custom data",
        "Deploy automated tests using Github CI",
        "Practice Behaviour Driven Development (BDD) with playwright and python behave"
      ],
      "course_content": {
        "Getting Started": [
          "Installation",
          "Playwright Website",
          "Launch Browser",
          "Click Link",
          "Overview"
        ],
        "Locators": [
          "Playwright in Python REPL",
          "Role Locator",
          "Input Field Locator",
          "Inner Text Locator",
          "Alt Text Locator",
          "Title Locator",
          "CSS Selectors",
          "CSS Selectors - Hierarchy",
          "CSS Selectors - Pseudo Classes",
          "XPath Locators",
          "XPath Functions",
          "Other Locators"
        ],
        "Actions": [
          "Mouse Actions",
          "Fill Input Fields",
          "Radios, Checkboxes and Switches",
          "Select Option From Option Menu",
          "Dropdown Menu",
          "Upload Files",
          "Keyboard Shortcuts"
        ],
        "Events": [
          "Auto Waiting",
          "Page Navigation Events",
          "Custom Waiting",
          "Event Listeners",
          "Handling Dialogs",
          "Download Files",
          "What Is Sync and Async?",
          "Async Playwright"
        ],
        "Authentication": [
          "Log In With Google Account",
          "Save Authentication State",
          "Reuse Authentication State",
          "Google Login Issue"
        ],
        "Automated Mail Checker": [
          "Automatic Mail Checker",
          "Project Setup",
          "Locate New Emails",
          "Locate Email Data",
          "Combine Locators",
          "Email Check From Terminal"
        ],
        "pytest": [
          "Testing with pytest",
          "Writing Test",
          "Running Test",
          "Type Hinting",
          "Test State Example",
          "Create pytest Fixture",
          "Using Fixture In Test Cases",
          "Fixture Scope"
        ],
        "pytest-playwright Plugin": [
          "Install pytest-playwright plugin",
          "Writing Test with Playwright",
          "Running Test",
          "Pytest Config File",
          "Test Hook"
        ],
        "Playwright Tools": [
          "Take Screenshot",
          "Record Video",
          "Trace Generator and Viewer",
          "Playwright Codegen"
        ],
        "Web-First Assertions": [
          "Page Assertions",
          "Element State Assertions",
          "Inner Text Assertions",
          "Attribute Assertions",
          "Input Field Assertions",
          "Checkbox Assertions",
          "Option Menu Assertions"
        ]
      },
      "requirements": [
        "Python",
        "HTML"
      ],
      "description": "Playwright is a modern, fast and reliable browser automation tool from Microsoft that enables testing and automation across all modern browsers including chromium, firefox and webkit. Pytest is a popular Python testing framework that offers a simple and flexible way to write and run tests. In this course, you will learn how to blend Playwright capabilities into the Pytest framework with the use of pytest-playwright plugin.\n\n\nThis course is designed for beginners in mind! It's alright if you don't anything about web automation! We will cover all the basics of Playwright and Web Automation Essentials, step by step -\n\nDifferent method to locate web elements like role, text, css selectors, xpath, etc.\nPerform actions on web elements like clicking, filling forms,\nEvents like Auto-waiting, page navigation, downloads, etc.\nAuthentication with your google account\n\n\nAs a bonus, we will develop a script to automatically check for new emails in our inbox and report them back i.e. automated mail checking!\n\n\nAfter learning web automation, we will start with testing. Again, it's alright if you're new to automation testing or testing at all! You'll go from writing a basic test to deploying automated tests -\n\n\nBasics of testing with pytest\nPlaywright pytest plugin\nPlaywright Tools like trace viewer, codegen, etc.\nWeb-first assertions using expect( )\nSolve modern testing problems with UI Testing Playground\nPlaywright fixtures, custom setup/teardown using test hooks, , etc.\nImplement Page Object Model (POM)\nHandle network events\nREST API Testing, authentication and API request context\nOptimizations techniques like Parallelism\nDeploy automated tests to CI\nParameterize tests with predefined test data\nBehaviour Driven Development with python behave\nand more...\n\n\nBy the end of the course, you will be able to write automated tests and perform fast, reliable, and capable testing and automation using Playwright and Pytest.",
      "target_audience": [
        "Beginner python developers who wish to learn web automation testing",
        "Automation testers who wish to learn about Playwright"
      ]
    },
    {
      "title": "Automated visual testing with Selenium and TestNG",
      "url": "https://www.udemy.com/course/automated-visual-testing-with-selenium-and-testng/",
      "bio": "Assure your web app is looking perfectly",
      "objectives": [
        "Install and configure Intellij IDEA",
        "Create Maven projects: pull dependencies, install plugins",
        "Set up Selenium WebDriver",
        "Set up TestNG project",
        "Develop screenshot utility for taking screenshots the entire pages as well as specific elements on the page",
        "Compare images and generate image with highlighted differences",
        "Make well structured regression suite using TestNG and run it from xml file and Maven",
        "Generate stunning regression HTML reports with attached screenshots"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Configure your project": [
          "Install Intellij IDEA",
          "Create Maven project",
          "Adding dependencies to Maven project",
          "Configure Selenium"
        ],
        "Create screenshot utility": [
          "Before we start development",
          "Take screenshot of the entire page",
          "Take screenshot of the specific element",
          "Comparing screenshots - part 1",
          "Comparing screenshots - part 2",
          "Preparation the baseline images"
        ],
        "Visual regression": [
          "Create regression pre-requisites",
          "Creata data driven visual tests",
          "Reporting - part 1",
          "Reporting - part 2",
          "Reporting improvement",
          "Attach screenshots to the report",
          "How to run automated regression?"
        ],
        "Bonus section": [
          "Improve takePageScreenshot method"
        ],
        "Completion": [
          "Completion"
        ]
      },
      "requirements": [
        "Java must be installed",
        "Basic knowledge in Java and Selenium is preferable but not required"
      ],
      "description": "\"Automated visual testing\" is a buzz word in the IT industry nowadays. In this course I would like to show you what it is and how you can significantly benefit from it.\nAutomated visual testing is a great complement to functional tests. If something works, it does not mean that it looks fine. Moreover, if something is displayed on the page, it does not necessarily mean that it is displayed in the proper place. Here visual regression can help you.\nLet me show you a short example.\nUsually visual regresison is about comparing two images.\nThe first one is baseline image. This image is the screenshot of the page when it was thouroughly manually tested and was perfect.\nThe second one is the current appearance of your page. You can take screenshots on daily basis, for example.\nIf some visual differences are detected then you get report where detected differences are highlighted in red.\nThus you can be sure that your web site is looking great and user interface is not broken by new development. This kind of testing can significantly enhance overall quality of your products.\nI hope you liked an idea of automated visual testing. So welcome to my course!",
      "target_audience": [
        "Automation Engineers who want to expand their skillset",
        "Manual Testers who want to learn how to configure testing projects and implement them",
        "Everyone who is interested in automated testing, not only visual one",
        "Everyone who wants to significantly benefit from automated visual testing and reduce manual efforts"
      ]
    },
    {
      "title": "The Complete 2025 Software Testing Bootcamp",
      "url": "https://www.udemy.com/course/testerbootcamp/",
      "bio": "Your Step-by-Step Guide to Becoming a Professional Software Tester",
      "objectives": [
        "Master manual software testing fundamentals",
        "Develop essential skills in writing test cases and scenarios",
        "Master black-box testing techniques like equivalence partitioning and boundary value analysis",
        "Understand Agile project management, key principles, Scrum practices, and how to apply Agile testing effectively.",
        "Learn how to use Jira for project management",
        "Master Zephyr Scale for creating, managing, and tracking test cases and cycles within JIRA.",
        "Learn how to execute test cases efficiently",
        "Acquire knowledge of mobile testing and its unique challenges",
        "Understand API testing fundamentals and hands-on experience with Postman",
        "Gain foundational knowledge of test automation with Selenium WebDriver, enabling you to create and execute automated tests for web applications.",
        "Understand how to use Selenium IDE for codeless test automation and explore Katalon Studio for building automated tests efficiently",
        "Basics of Performance Testing using JMeter",
        "Understand SQL fundamentals for testers and how to use it for data validation",
        "Get practical experience with freelance testing websites and how to find work",
        "Learn white-box testing techniques such as statement, decision, and path coverage",
        "Develop a professional CV tailored to the software testing industry",
        "Discover different software testing certifications and learn the best practices to prepare effectively and increase your chances of success"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "About Course Content",
          "About the Instructor",
          "Note About Course Content",
          "Course Slides & Study Material",
          "Course Study Plan"
        ],
        "Roles in the Software Development Team": [
          "Requirements engineers",
          "Ui/UX Designers",
          "Front-End, Back-End, & Mobile Developers",
          "Project Manager & Scrum Master",
          "Roles in the Software Development Team Quiz"
        ],
        "How Software is Developed - Software Development Lifecycle Models": [
          "Waterfall Model",
          "V-Model",
          "Agile Software Development",
          "Incremental & Iterative Development",
          "Introduction to Scrum",
          "Difference between Sequential, Iterative, & Incremental Development",
          "Summary",
          "How Software is Developed - Software Development Lifecycle Models Quiz"
        ],
        "Basic Concepts of Software Testing": [
          "What is Software Testing?",
          "Difference between Static & Dynamic Testing",
          "Validation & Verification",
          "Objectives of Testing",
          "Testing & Debugging",
          "Test Process",
          "Test Levels",
          "Testing Types",
          "What's Next",
          "Basic Concepts of Software Testing Quiz"
        ],
        "Test Scenario Writing": [
          "Creating Test Scenarios",
          "Tools to help in creating Test Scenarios",
          "Setting Up Trello",
          "Facebook Valid Sign Up Test Scenarios Part 1",
          "Facebook Valid Sign Up Test Scenarios Part 2",
          "Facebook Invalid Sign Up Test Scenarios Part 1",
          "Facebook Invalid Sign Up Test Scenarios Part 2",
          "Facebook Invalid Sign Up Test Scenarios Part 3",
          "Facebook Login Valid Scenarios",
          "Facebook Invalid Login Scenarios",
          "Search Functionality [Udemy Test Scenarios]",
          "Category Search [Udemy Test Scenarios]",
          "Course Search [Udemy Test Scenarios]",
          "Instructor Search [Udemy]",
          "Test Scenario Conclusion",
          "Test Scenario Writing Quiz"
        ],
        "Black-Box Test Techniques": [
          "Introduction to Black-Box Techniques",
          "Equivalence Partitioning Definition",
          "Equivalence Partitioning Examples",
          "Equivalence Partitioning Practical Examples",
          "Boundary-Value Analysis",
          "Boundary-Value Analysis Example #1",
          "Note About Next Lecture",
          "Boundary-Value Analysis Example #2",
          "Notes About Equivalence Partitioning & Boundary-Value Analysis",
          "Decision Table Testing",
          "Decision Table Testing Example",
          "State-Transition Testing",
          "Pairwise Testing",
          "Black Box Techniques Summary",
          "Black-Box Test Techniques Quiz"
        ],
        "Test Case Writing": [
          "How to Write a Test Case",
          "Preparing Google Sheets to use for Test Case Writing",
          "Writing First Sign Up Test Case",
          "Valid Sign Up Test Cases",
          "Valid Sign Up Test Cases Part 2",
          "Invalid Sign Up Test Cases Part 1",
          "Invalid Sign Up Test Cases Part 2",
          "Invalid Sign Up Test Cases Part 3",
          "Test Case Document Link",
          "It's your turn! Write your own test cases.",
          "Task Solution",
          "Test Case Writing Quiz"
        ],
        "Test Case Writing using Zephyr Scale": [
          "Introduction to Zephyr Scale",
          "Signing Up to Jira",
          "Adding Zephyr Scale to Jira",
          "Updated version of Zephyr",
          "Creating Test Cases in Zephyr Scale",
          "Test Case Details",
          "Permissions",
          "Creating Folders",
          "Test Cycles",
          "Importing & Exporting Test Cases",
          "Configurations Part 1",
          "Configurations Part 2",
          "Reusing Test Cases - Call to Test",
          "Adding Parameters to Test Cases",
          "Creating BDD Test Cases",
          "Exporting Test Cases from Zephyr Scale to Cucumber",
          "Data-Driven Testing in Zephyr Scale",
          "Creating Data Sets in Zephyr Scale",
          "Clone, Archive & Delete Test Cases",
          "Creating Test Cases in Bulk",
          "Bidirectional Traceability in Zephyr Scale",
          "Tracking Progress using Test Cycles",
          "Editing, Cloning & Deleting Test Cycles",
          "Test Plans in Zephyr Scale",
          "Using AI to write & run Test Cases in Zephyr Scale",
          "Adjusting AI-based Test Cases",
          "Reports in Zephyr Scale",
          "Zephyr Scale Summary",
          "Zephyr Scale Quiz"
        ],
        "Test Execution & Defect Reporting": [
          "Introduction to Defect Reporting",
          "Defect Report Writing",
          "Types of Defects",
          "Defect Triage Simulation",
          "Taking Screenshots & Recording Videos for the Defect Report",
          "Capturing Web Logs for the Defect Report",
          "Creating a Defect Report in Jira",
          "Creating a Defect Report in Azure DevOps",
          "Defect Lifecycle",
          "Accessibility Testing & Accessibility Defects using Axe DevTools",
          "Common Website Elements & Pages",
          "Conclusion & What's Next?",
          "Test Execution & Bug Reporting Quiz"
        ],
        "Testing Reports: Test Plan, Test Progress & Test Completion Report": [
          "Introduction to Test Reporting",
          "Know your Audience first",
          "Test Plan Template & Components",
          "Test Progress & Completion Reports",
          "Link to Sample Testing Report",
          "Testing Reports: Test Progress & Test Summary Report Quiz"
        ]
      },
      "requirements": [
        "Familiarity with using computers and navigating software applications",
        "Basic understanding of English to follow course instructions and complete assignments",
        "This course is designed for beginners and intermediate learners, so prior knowledge of software testing is not required",
        "A laptop or desktop computer with internet access to complete course materials and projects"
      ],
      "description": "The Complete Software Testing 2024 Bootcamp – All-In-One Testing Guide\n\n\nReady to launch your career in software testing? This comprehensive course is designed for absolute beginners and intermediate testers who want to master the essentials and advance to an industry-ready skill set. From manual testing to automation and performance testing, this course provides everything you need to know to land your first software testing job, whether as a full-time professional or a freelancer.\n\n\nCourse Highlights:\n\n\nIntroduction to Software Testing: Start with the basics of software development, roles in the development team, and software development lifecycle models.\nManual Testing Essentials: Learn fundamental concepts such as test scenario writing, test case creation, execution, and bug reporting. Dive into using tools like Zephyr Scale and JIRA for efficient test management.\nBlack-Box Testing Techniques: Master critical techniques such as equivalence partitioning, boundary value analysis, and decision table testing to create robust test cases.\nAgile Testing Basics: Understand Agile methodologies and how to leverage tools like JIRA and Trello for Agile testing.\nMobile Testing: Gain knowledge on mobile application testing fundamentals.\nAPI Testing: Master API testing with Postman, including hands-on practice through practical projects and a deep dive into web service testing.\nPerformance Testing: Begin with performance testing fundamentals and advance to using JMeter for detailed analysis and optimization.\nTest Automation Fundamentals: Get acquainted with Selenium WebDriver, Java programming for testers, element locator techniques, and managing tests using TestNG.\nCodeless Automation with Selenium IDE and Katalon Studio: Learn to create automated tests without writing code.\nAdvanced Automation with Playwright: Master this powerful tool to expand your automation capabilities.\nSQL for Testers: Develop the database skills needed to run and validate database queries effectively.\nFreelance Testing: Discover how to work on freelance testing platforms like TesterWork, Test IO, and BugFinders.\nWhite-Box Testing Techniques: Dive into advanced techniques like modified condition/decision coverage (MCDC), path coverage, and more.\nCareer Preparation: From interview question practices to tips on writing an impactful CV, this course equips you with the knowledge to succeed in the job market. Learn how to get certified and advance your career as a certified software tester.\n\n\nWhy Choose This Course?\n\n\nComprehensive and Structured: Step-by-step guidance that covers all major aspects of software testing, starting from the basics and progressing to advanced topics.\nHands-On Projects: Gain practical experience with real-world projects and exercises that prepare you for real job scenarios.\nInstructor Support: Get access to expert insights and support throughout the course to address any questions or challenges you may have.\nDiverse Testing Skills: Learn manual and automated testing, API testing, mobile testing, performance testing, and more.\nCareer-Ready Focus: Develop the skills to excel in interviews and begin a career in software testing or freelancing with a polished CV and career guidance.\n\n\nStudent Testimonials:\n\n\n\"Great course full of information!! As a beginner in software testing, i got plenty of useful information with a lot of practical knowledge which i can use to start working as a freelance software tester.Very nice teacher who explains everything in the way anyone can understand ! I recommend to take this course!Thank you ,Tarek!\"\n- Katrina Kulakova\n\n\n\"I am thoroughly enjoying the Software Testing course and finding it extremely helpful in my learning journey. The course content is well-structured, comprehensive, and easy to follow. The explanations are clear and concise, making complex concepts accessible.\nThe course has provided me with a deep understanding of software testing principles, methodologies, and tools. I particularly appreciate the hands-on exercises and real-world examples that reinforce theoretical knowledge.\nThe course has exceeded my expectations, and I feel confident in applying my new skills to real-world scenarios. I highly recommend this course to anyone looking to gain expertise in software testing.\nRating: 5/5\nThank you for creating such an excellent resource!\"\n- Simanta S.\n\n\n\"I really like this course because it covers a broad range of topics, and I can always rely on it as a reference. I can return to it whenever I'm working on my own projects and need clarity on something. It is a great base!\"\n- Kinga S.\n\n\"Thank you, Tarek for this valuable Course, It was so beneficial for me as a new testing learner. It gave me the whole picture of testing, and then went down for every concept, tool, a skill I need to start testing and understand the testing market. It covers all topics in a simple fluent language, easy to understand for non-English Speakers. Tarek responds to each and every question you ask. The Course is Comprehensive, and this is My favorite point, it covers many aspects of testing, how to prepare your CV, and how to start working online in one course, so beginners can land their first job easily.\"\n- Reham Tammam\n\n\n\"Thank God I found this course. Really helps me preparing for my interview. Sample interview taught in this course are really the one they asked in the interview. I love the way he prepared the slides, presentation as well as his teaching. His accent is understandable and the captions really helps. Thank you Tareq.\"\n- Khairul Hilmi Bin Sidek",
      "target_audience": [
        "If you’re a beginner or intermediate QA professional looking to strengthen your skills in manual and automated software testing",
        "If you’re interested in learning essential tools like Selenium, Postman, and JMeter for comprehensive testing",
        "If you aim to get hands-on experience with API, performance, and mobile testing to enhance your QA expertise",
        "If you’re preparing for QA job interviews and want to master common questions and best practices",
        "If you want to explore freelance testing opportunities and need practical insights on getting started",
        "If you’re looking to become a certified tester and want guidance on the certification path",
        "If you want to create a professional CV that highlights your QA skills and experience"
      ]
    },
    {
      "title": "Certified Web Application Security Tester (C-WAST)",
      "url": "https://www.udemy.com/course/certified-web-application-tester/",
      "bio": "webportal security, webportal testing, webportal design, web apps security, ethical hacking, webportal hacking",
      "objectives": [
        "Web app coding",
        "web app testing",
        "web app designing ideas",
        "ethical hacking of web, webportal application",
        "avenger advanced bypass techniques"
      ],
      "course_content": {},
      "requirements": [
        "Understanding web applications, webportals, websites"
      ],
      "description": "This course is aimed at corporate audience. we have lot of people asking us about our White Hat Hacker courses. Most of corporate audience who are in role of design, code, testing always wanted something which is specific on web apps development, coding and security testing for web apps. This course is taken from certified white hat hacker level 1, level 1 advanced, level 2, level 2 \"Break the security\" only for web developers, testers. All course material in four courses relating to web apps has been put together into this single course.\nThis course is all you need if you want to do\nweb application coding security\nweb application security testing\nethical hacking of applications\nweb portal security testing",
      "target_audience": [
        "web apps coder, tester, designer",
        "application programmers",
        "coders",
        "testers",
        "application design",
        "application design engineers",
        "ethical hackers"
      ]
    },
    {
      "title": "Automated Software Testing with Cypress",
      "url": "https://www.udemy.com/course/automated-testing-with-cypress/",
      "bio": "Learn Cypress from Beginner to Expert including 3 framework projects with App Actions, Page Objects and API Testing",
      "objectives": [
        "Master the powerful Cypress v13.15+ framework from beginner to advanced",
        "Develop proficiency in web elements interaction for successful web testing",
        "Build a robust automation framework using the best practices of the Page Objects Model",
        "Put your skills into practice with real-world end-to-end testing examples and challenging exercises",
        "Integrate your automation tests with CI/CD pipelines using Jenkins, and streamline your testing process for faster and more efficient releases",
        "Get exclusive access to professional tips, tricks, and best practices from industry experts, and stay ahead of the curve with the latest automation techniques",
        "Professional tips and tricks and best practices to become real Cypress Expert",
        "Learn how to integrate Cypress with popular BDD frameworks like Cucumber and CodeceptJS",
        "Learn how to use Cypress for REST API testing and web scraping, and expand your automation capabilities beyond web UI testing",
        "Learn how to use Cypress with Docker and many other 3rd party services and plugins"
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "Project Setup",
          "Cypress Setup"
        ],
        "Learn Cypress Fundamentals": [
          "First Cypress Test",
          "Assert Title",
          "Assert Elements",
          "Waiting",
          "Reloads & Logs",
          "Test Hooks & Tags",
          "Forms, Inputs & Buttons Part 1",
          "Forms, Inputs & Buttons Part 2",
          "Modals",
          "Hovers",
          "Device Emulation & Viewports",
          "Screenshots",
          "List of Elements",
          "Read / Write into Files",
          "Cypress Fixtures"
        ],
        "Advanced & End-2-End Testing": [
          "Custom Commands",
          "Abstraction with Classes",
          "Scrolling",
          "Files Upload",
          "Clearing Inputs & Textareas",
          "Cypress Invoke Function",
          "Data Tables",
          "Base URL Configuration",
          "Test Retries",
          "Cypress CLI Scripts",
          "Mochawesome Reporter Integration",
          "E2E Tests - UI Smoke Test",
          "E2E Tests - Login Test",
          "E2E Tests - Product Detail",
          "Cypress Fundamentals Quiz",
          "Basic + Advanced Sections Source Codes"
        ],
        "REST API Testing with Cypress": [
          "Project Setup",
          "Validate Headers",
          "Explore Request / Response",
          "Validate Status Codes",
          "GET Request",
          "POST Request",
          "POST Request - Error handling",
          "DELETE Request",
          "PUT Request",
          "Auth Tokens",
          "Source Code"
        ],
        "BDD with Cucumber": [
          "Section Introduction",
          "Cucumber Project Setup",
          "Cypress Cucumber Preprocessor",
          "Features",
          "Step Definitions",
          "Step Definitions with Parameters",
          "Data Driven Testing",
          "Source Codes"
        ],
        "App Actions with Typescript Framework": [
          "Project + Typsecript Setup",
          "Mochawesome Reporter Integration",
          "Reporting Example",
          "Custom Commands Autocomplete",
          "JSDocs Implementation",
          "App Actions Design Pattern - Login",
          "App Actions Design Pattern - Submit Forms",
          "App Actions Design Pattern - Fixtures",
          "Helpers & Utility",
          "Source Code"
        ],
        "Page Objects Model Framework": [
          "Project Setup",
          "Framework Dependencies",
          "Prettier Setup",
          "Intelligent Code Completion",
          "Framework Scripts",
          "Cypress JSON & Framework Config File",
          "Connect to Cypress Dashboard Service",
          "Connect Snapshots Plugin",
          "Utility & Helper Functions",
          "Page Objects Pattern - Base Page",
          "Page Objects Pattern - Device Emulation Utility",
          "Page Objects Pattern - Components",
          "Page Objects Pattern - Pages",
          "Page Objects Pattern - First E2E Test",
          "Account Component & Finish Login Test",
          "Framework Fixtures & Data",
          "Page Objects Pattern - Feedback Test with Fixtures",
          "Cross Browser Testing Scripts",
          "Source Code"
        ],
        "Visual Regression Testing": [
          "Project setup",
          "Linting setup",
          "Cypress JSON",
          "Cypress-image-snapshot plugin",
          "Custom functions - SetResolution, MatchSnapshots",
          "Test Scripts",
          "Fix plugin configuration",
          "Implement visual regression test",
          "Update base snapshots",
          "Implement responsive visual regression test",
          "Date& Time override",
          "Single Element Snapshots",
          "iTerm 2 - Real time reporter",
          "Disable failing tests flag",
          "Locally Override matchImageSnapshot options",
          "E2E Visual Test: Responsive Login Page",
          "E2E Visual Test: Data Tables",
          "Percy - Introduction",
          "Percy - Integration with Cypress",
          "Solve troubles with installation",
          "Percy - Visual Test Example",
          "Source Code"
        ],
        "Continuous Integration & Cloud Service": [
          "What is CI / CD",
          "Jenkins vs Circle vs Travis",
          "Project Setup",
          "Prettier & Cypress JSON Setup",
          "Create Demo Tests",
          "Connect Project to Dashboard",
          "Dashboard Overview",
          "Automatic Video Upload to Dashboard",
          "Setup Cypress Builds with Jenkins",
          "Parameterized Builds with Jenkins",
          "Dashboard Integration Into Jenkins Build",
          "Jenkins Overview",
          "BONUS: Jenkins Server Script"
        ],
        "Run Cypress with Docker": [
          "Cypress + Docker Project Setup",
          "Create Tests for Docker",
          "Create Dockerfile",
          "Create Docker Ignore File",
          "Run Cypress Tests with Docker Container",
          "Source Code"
        ]
      },
      "requirements": [
        "To take this course, participants should have basic programming knowledge. Knowledge of Javascript is a great advantage.",
        "Participants are required to have NodeJS installed.",
        "Should also have access to a text editor, with VS Code being recommended."
      ],
      "description": "REMASTERED IN 2025\nAre you ready to become a true expert in web automation and end-to-end testing using the world's most powerful non-Selenium testing framework—Cypress? Then you're in the right place. This fully updated and comprehensive course is your one-stop resource for mastering Cypress with confidence.\nFrom the very beginning, this course is built to be highly practical and hands-on. You’ll start coding right away and dive deep into web automation, learning to interact with web elements using the robust and intuitive Cypress API. You'll work through real-world end-to-end testing scenarios, apply best practices, and explore advanced features and patterns that will set you apart as a true Cypress professional.\nBut that's just scratching the surface. You'll also gain in-demand skills like:\nREST API testing with Cypress\nRunning Cypress inside Docker containers\nLeveraging Cypress plugins and extensions for added functionality\nGenerating rich test reports using Mocha\nWe’ll also teach you how to implement App Actions and the popular Page Object design pattern, crucial for writing clean, scalable, and maintainable test suites. You’ll dive into Behavior-Driven Development (BDD) using Cypress + Cucumber, and take your testing even further with visual regression testing using the Percy library.\nThis course doesn’t stop at just local testing. You'll learn how to take your automation setup into the cloud using BrowserStack, work effectively with XPath, and even build robust CI/CD pipelines using Jenkins, enabling seamless continuous integration for your projects.\nAnd because career growth is part of your journey, we’ve also included interview preparation resources, so you’ll be equipped to confidently tackle technical interviews and land automation roles with ease.\nThroughout the course, you'll have access to a supportive, collaborative learning environment. Our Q&A section is active and welcoming, full of expert advice, solutions to common challenges, and tips shared by both the instructor and fellow students. If you ever get stuck, help is just a question away.\nSo what are you waiting for? Join thousands of learners who are transforming their careers with Cypress. Enroll now and take the first step toward becoming a Cypress testing expert in 2025 and beyond!",
      "target_audience": [
        "Manual Testers",
        "Automation Testers",
        "QA Engineers",
        "QA Architects",
        "QA Managers",
        "Software Developers"
      ]
    },
    {
      "title": "Ultimate AB Testing Course with Python Coding",
      "url": "https://www.udemy.com/course/ultimate-ab-testing-course-with-python-coding/",
      "bio": "Taught by a former Google Data Scientist, learn the theory and practice of AB testing based on real products",
      "objectives": [
        "How to Define the Business Goal of an AB Testing",
        "How AB Testing Problems are Solved at Companies like Google, Amazon and Meta",
        "How to Design an AB Testing and Interpret the Outcome",
        "How to Run Diagnostics to Assess the Validity of an AB Test (e.g. SRM)",
        "How to Solve AB Testing with Python (Pandas, Matplotlib, Numpy, Statsmodels)",
        "How to Prepare for Data Science Interviews with AB Testing Cases"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started"
        ],
        "Understand the Business Problem": [
          "Understand the Business Problem",
          "Experiment Goals",
          "Key Members",
          "Product KPI",
          "The North Star Metric",
          "Driver Metric",
          "Guardrail Metrics",
          "Secondary Metrics",
          "Segmentation Metrics",
          "Launch Criteria",
          "Experiment Data",
          "Exercise - Amazon AB Testing (Question)",
          "Exercise - Amazon AB Testing (Solution)",
          "Code Walkthrough"
        ],
        "State the Experiment Hypothesis": [
          "State the Experiment Hypothesis",
          "Hypothesis Statement",
          "Hypothesis Statement - Question 1",
          "Hypothesis Statement - Solution 1",
          "Hypothesis Statement - Question 2",
          "Hypothesis Statement - Solution 2",
          "Significance Level",
          "Significance Level - Question",
          "Significance Level - Solution",
          "Statistical Power",
          "Statistical Power - Question 1",
          "Statistical Power - Solution 1",
          "Statistical Power - Question 2",
          "Statistical Power - Solution 2",
          "Minimum Detectable Effect (MDE)",
          "Minimum Detectable Effect - Question 1",
          "Minimum Detectable Effect - Solution 1",
          "Code Walkthrough"
        ],
        "Design the Experiment": [
          "Design the Experiment",
          "Randomization Unit",
          "Sample Size Calculation",
          "Sample Size Calculation - Question 1",
          "Sample Size Calculation - Solution 1",
          "Experiment Duration",
          "Experiment Duration - Question 1",
          "Experiment Duration - Solution 1",
          "Code Walkthrough"
        ],
        "Run the Experiment": [
          "Run the Experiment",
          "Experiment Platform",
          "Peeking at P-Values",
          "Code Walkthrough"
        ],
        "Assess Validity Threats": [
          "Assess Validity Threats",
          "Stable Unit Treatment Value Assumption",
          "Survivorship Bias",
          "Sample Ratio Mismatch",
          "Primacy Effect",
          "Novelty Effect",
          "Holiday Effect",
          "Other Effects to Consider",
          "AA Test",
          "Code Walkthrough"
        ],
        "Conduct Statistical Inference": [
          "Conduct Statistical Inference",
          "Chi-Squared Test of Independence",
          "Chi-Squared Test of Independence - Question",
          "Chi-Squared Test of Independence - Solution",
          "Z-Test for Proportions",
          "Z-Test for Proportions - Question",
          "Z-Test for Proportions - Solution",
          "T-Test for Means",
          "T-Test for Means - Question",
          "T-Test for Means - Solution",
          "Code Walkthrough"
        ],
        "Launch Decision": [
          "Decide Whether to Launch",
          "Absolute Difference vs Relative Difference",
          "Launch Decisions",
          "Decision Rule",
          "Confidence Interval",
          "Holdout Set",
          "Code Walkthrough"
        ]
      },
      "requirements": [
        "Beginner Level Statistics",
        "Beginner Level Python"
      ],
      "description": "Welcome to Ultimate AB Testing Course with Python Coding\nThis is a course that will give you a hands-on experience in AB testing with Python. It's designed to help you think like a data scientist at top companies like Google, Amazon and much more.\nTaught by a former data scientist at Google, the course contains 70+ lessons and 5 hours of video lectures and practice questions designed to teach you everything you need to know about the foundation of AB testing. Plus, the course contains bonus content including mock interview videos and practice cases based on interview questions seen in actual AB testing rounds.\nWhat You Will Learn\nThe course is packed with core lessons on AB testing including:\n\n\nFraming the Business Problem - how to define the business goal and KPIs of an experiment?\nDefining the Metrics - What's the set of metrics to consider in an AB test? What about the North Star Metric, Primary Metric, Secondary Metric and Guardrail Metrics?\nStating the Business Hypothesis - How do you define the business and statistical hypothesis of an experiment?\nDesigning the Experiment - How do you set the experiment parameters including the significance level, statistical power, sample size and such?\nRunning the Experiment - What's the overview of infrastructure on how experiments run in large online platforms?\nChecking for Validity - How do you assess whether the experiment result is valid or not? How do you check and address the Novelty Effect, Day of the Week Effect, SUTVA and much more?\nRunning Statistical Inference - What statistical tests do you use to assess the experiment result?\nInterpret the Result - How do you make sound decisions based on AB testing results?\nHands-on Coding - You will get a chance to apply your learning with Python. Analyze a sample AB testing result with Matplotlib and Pandas and analyze results with Statsmodels.\n\n\nHow This Course Will Help You\nYou will learn the foundation of AB testing based on real-world cases\nYou will see how a practitioner approaches AB testing problems\nYou will get a chance to practice interview cases for product data science roles\n\n\nThis is a course I wish I had when I became a data scientist in 2016. I am confident that you find this course helpful in learning AB testing. I take the approach of explaining concepts in plain English and giving you illustrations based on actual cases seen in FAANG companies.\nSo, join the course now to become a data science pro.",
      "target_audience": [
        "Beginner data scientists seeking to learn AB testing",
        "Job seekers preparing for data science interviews",
        "Business, product and marketing leads learning to apply AB testing"
      ]
    },
    {
      "title": "Selenium in C# - Setup Simple Test Automation Framework",
      "url": "https://www.udemy.com/course/selenium-in-c-sharp-taf-for-beginners-learnit/",
      "bio": "Learn Selenium from scratch and build Test Automation framework with minimum set of tools: C#, NuGet, NUnit, Selenium",
      "objectives": [
        "Selenium basics",
        "Selenium in C#",
        "Selenium Waits",
        "Page Object concept",
        "Web Component concept",
        "Data Transfer Object concept",
        "NUnit 3 basics",
        "NuGet basics",
        "DotNet Console basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience"
        ],
        "Development Environment Setup": [
          "Visual Studio Community Edition Installation",
          "DotNet Manual Installation"
        ],
        "Selenium simple application": [
          "Diving Deep in Selenium WebDriver",
          "How Selenium WebDriver Works in a Nutshell",
          "Setup Simple Application with Selenium 4",
          "Setup Simple Application with Selenium 4 - Home Task",
          "Add Simple UI Iteractions to Selenium 4 Application",
          "Add Simple UI Iteractions to Selenium 4 Application - Home Task"
        ],
        "First Selenium test with NUnit": [
          "Mastering NUnit for Beginners",
          "Add NUnit 3 Assertions",
          "Add NUnit 3 Assertions - Home Task",
          "Migrate Selenium Runner to NUnit 3 Test",
          "Migrate Selenium Runner to NUnit 3 Test - Home Task"
        ],
        "Waits in Selenium": [
          "Basics of Waits in Selenium",
          "Add Implicit Waits to Selenium Test",
          "Add Implicit Waits to Selenium Test - Home Task",
          "Add Explicit Waits to Selenium Test",
          "Add Explicit Waits to Selenium Test - Home Task"
        ],
        "Test Automation Patterns - overview": [
          "Page Object Concept from Scratch",
          "Add Page Object to Test Framework",
          "Add Page Object to Test Framework - Home Task",
          "Web Component Concept for Beginners",
          "Add Web Component to Test Framework",
          "Add Web Component to Test Framework - Home Task",
          "What Data Transfer Object Is?",
          "Apply Data Transfer Object for Selenium Tests",
          "Apply Data Transfer Object for Selenium Tests - Home Task"
        ],
        "Run tests via Command Line": [
          "Run Selenium Tests via DotNet 8 Command Line",
          "Run Selenium Tests via DotNet 8 Command Line - Home Task"
        ],
        "Bonus - selectors overview": [
          "CSS selectors basics",
          "XPath selectors basics"
        ],
        "Final Test": [
          "Final Test"
        ]
      },
      "requirements": [
        "Some basic knowledge in C#",
        "A computer with access to the internet"
      ],
      "description": "Are you eager to unlock the power of Selenium for test automation using C#? Look no further! Welcome to a hands-on course where you'll learn to build a solid test automation framework from the ground up.\nIn today's dynamic tech landscape, Selenium is a game-changer for web automation. This course is your gateway to mastering Selenium in C#, empowering you to create efficient and maintainable test scripts.\nWhat You Will Learn:\nSelenium Basics: Start with the fundamentals of Selenium, even if you're new to automation testing.\nSelenium in C#: Dive into Selenium using C# as your programming language of choice, enabling you to create robust web automation scripts.\nSelenium Waits: Understand the importance of waits in automation testing and master various wait strategies to handle dynamic web elements.\nPage Object Concept: Implement the industry-standard Page Object Model (POM) to create organized and maintainable test scripts.\nWeb Component Concept: Explore the Web Component concept to build reusable and scalable automation components.\nData Transfer Object Concept: Learn how to efficiently transfer data between your test scripts and automation components.\nNUnit 3 Basics: Get acquainted with NUnit 3, a popular unit testing framework for C#, to structure and run your tests effectively.\nNuGet Basics: Discover how to manage external packages using NuGet, streamlining the integration of third-party tools and libraries.\nDotNet Console Basics: Build a solid foundation in using the .NET Console, a versatile tool for debugging and executing your C# code.\nWhy Enroll in This Course?\nHands-On Experience: Gain practical experience through step-by-step tutorials, quizzes, and real-world projects that reinforce your skills.\nExpert Guidance: Learn from experienced instructors who have a deep understanding of Selenium and C# in automation testing.\nCareer Advancement: Enhance your career prospects by becoming proficient in Selenium with C#, a sought-after skill in the testing industry.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive online community.\nDon't miss this opportunity to build a strong foundation in Selenium automation testing with C#. Enroll today, and start your journey toward becoming a skilled Test Automation Engineer.",
      "target_audience": [
        "Anyone who wants to learn how to build test applications using Selenium",
        "Students who are seeking to work as Test Automation Engineer in Selenium"
      ]
    },
    {
      "title": "Manual Testing course for IT and Non-IT folks",
      "url": "https://www.udemy.com/course/manual-testing-course-for-it-and-non-it-folks/",
      "bio": "Manual Testing course for IT and Non-IT folks can learn the fundamentals and become successful in the IT industry.",
      "objectives": [
        "At the end of this course, you will be able to understand Software Testing Concepts / Methodologies and the complete cycle of Manual Testing.",
        "Crystal clear understanding on how Software Projects are handled in real time with Live examples.",
        "Testing types and their real time usages in Projects at different stages Complete knowledge on QA process starting from requirement gathering to Project deliver",
        "Understanding on popular defect management tools like JIRA and Quality Center",
        "Strong exposure on designing test cases and defect life cycle process",
        "Terminologies used in Software Testing",
        "This Course will cover Manual Testing Concepts like Software Development Life Cycle, Software testing life cycle",
        "You will be able to write Test scenarios and test cases on your own"
      ],
      "course_content": {
        "Manual testing End to end": [
          "Day - 1 Introduction - A Non IT guy can also be a Manual Tester",
          "Day - 1 Required Excellent Communication Skills",
          "Material",
          "Day - 1 Product and Project based Companies",
          "Day - 1 Quality",
          "Day - 1 Defects and Latest definition for Quality",
          "Day - 1 Software Testing",
          "Day - 1 Recap",
          "Day - 2 - How does a project starts (Part - 1)",
          "Day - 2 - How does a project starts (Part - 2)",
          "Day - 2 SDLC",
          "Day - 2 Recap",
          "Day 3 - SDLC - Analysis Phase - (Requirement Analysis and Feasibility Study).",
          "Day 3 - 2nd Phase (Analysis Phase) - SDLC - Tentative planning",
          "Day 3 - SDLC - 3rd Phase - Design Phase",
          "Day - 3 Recap",
          "Day - 4 SDLC - 3rd Phase - Design Phase",
          "Day - 4 SDLC 4th Phase - Coding Phase",
          "Day 4 Recap",
          "Day - 5 SDLC 5th Phase -Testing Phase Part -1",
          "Day - 5 - SDLC 5th Phase Testing Phase Part - 2",
          "Day - 5 -- What is a Test Case.",
          "Day - 6 -- Delivery and Maintenance Phase",
          "Day - 6 --- Sorts of Testing",
          "Day - 6 Recap",
          "Day - 7 Environment (Part 1)",
          "Day - 7 Recap",
          "Day - 8 - Types of Environment (Part 2)",
          "Day - 8 Types of Environment - (Part - 3)",
          "Day - 8 Recap",
          "Day - 9 Sorts of Testing and Test Methods",
          "Day - 9 Recap",
          "Day 10 - Levels of Testing and Approaches",
          "Day - 10 Recap",
          "Day - 11 System Level Testing",
          "Day - 11 Last Level of Testing - User Acceptance Testing - UAT",
          "Day - 11 Recap",
          "Day - 12 Waterfall Model",
          "Day - 12 - Spiral Model and Incremental Model",
          "Day - 12 - Importance of V-Model and Interview Tips",
          "Day - 12 Recap",
          "Day - 13 V-Model",
          "Day - 13 Agile and Scrum Model",
          "Day - 13 Recap",
          "Day -14 Agile and Scrum Model",
          "Day - 15 Types of Testing",
          "Day - 15 Types of Testing -Regression Testing, Automation Testing",
          "Day - 16 Re Testing, Installation Testing",
          "Day - 16 Compatibility Testing , Monkey Testing , Usability Testing",
          "Day - 17 End-to-End Testing, Security Testing",
          "Day 17 -Direct URL Testing, User Privilege Testing, Adhoc Testing",
          "Day - 18 STLC - Software Testing Life Cycle.",
          "Day - 19 - STLC - Test Plan",
          "Day - 20 Test Plan - Suspension and Resumption Criteria",
          "Day - 20 - Test Plan Continuation",
          "Recap of Day 20",
          "Day - 21 - Test plan, Types of Testing, Test Design Techniques",
          "Day - 22 Test Cases",
          "Day - 23 Pre Condition, Post Condition, Flow of Events, RTM, Test",
          "Day - 24 - Test Cases, GUI Test Cases, Functional Test Cases.",
          "Day - 25 - Test Cases on Implicit and Explicit Requirements",
          "Day - 26 - Bug/Defect life cycle Part - 1",
          "Day - 27 Bug Tracking and Defects Life Cycle Part - 2",
          "Day - 28 Bug Tracking and Defects Life Cycle Last Part"
        ]
      },
      "requirements": [
        "Interest in Software Testing/QA Industry",
        "This course is perfect for beginners. It's designed to be easy to understand and follow, so you can make the most of your learning experience.",
        "If you have basic English skills, you can easily learn this course. No prior experience is required, so you can jump right in and start learning. With patience and dedication, you'll be able to understand and complete the course in no time.",
        "No testing experience is required. Everything is explained from the Scratch in this tutorial",
        "None, All prerequisites are taken care as part of course"
      ],
      "description": "Manual testing is a great skill to have in the IT industry. With the proper guidance and dedication, anyone can learn the fundamentals and become successful in the IT industry. It's all about gaining the necessary knowledge and experience to become a manual tester.\nHere we will be discussing the theoretical basis of testing. This course covers basic to advanced topics, traditional testing approaches to the latest trends in software testing.\nThis course discusses the basic terminology and steps in software testing. This gives you a quick start and kicks your journey in knowing this promising profession.\nThis is for anyone who is preparing for interviews for software testing jobs. This is for anyone who wants to pursue a new career in software testing or wants to strengthen their fundamentals in this field.\nWe will start our discussion with a quick introduction to software testing. We discuss why is it important, the principles of software testing, and the key skills required in this field. There are different ways to group or classify software testing methods or approaches. We will discuss commonly used classifications and types of testing. We will discuss test scenarios and learn to write test cases. There are lessons on the defect life cycle and its classifications.\nThere are modules on traditional testing approaches, and new approaches like test-driven development, or TDD, and acceptance test-driven development, or ATDD. We will discuss all of these, and there will be an introduction to Model Driven Development and model-based testing.\nAlong with this, a list of different types of testing and short descriptions, which are not covered in other modules are provided at the end of this course.",
      "target_audience": [
        "Any fresh graduates or non IT candidates who are looking for IT career",
        "Any one who would like to move to Manual Testing field"
      ]
    },
    {
      "title": "Learn Software Manual Testing for beginners",
      "url": "https://www.udemy.com/course/software-testing-training-basics-of-software-testing/",
      "bio": "Introduction of software Testing, Quality Assurance Training,Software Testing Training Beginners,Intermediate Course",
      "objectives": [
        "This Course will cover Manual Testing Concepts like Software Development Life Cycle, Software testing life cycle",
        "Students will learn how to do the Software testing in the software projectes.",
        "Students will learn the concepts of Test plan, test cases, Test execution, defect tracking and reporting.",
        "Complete study material for Software testing."
      ],
      "course_content": {
        "Introduction": [
          "Section 1-Software Testing(Manual Testing)",
          "Software Testing Basics",
          "Types of Testing",
          "Testing Life Cycle",
          "Test Development",
          "Test Case Design",
          "Test Execution and Defect Reporting",
          "Software Development Life Cycle"
        ]
      },
      "requirements": [
        "This course will guide to fresher/beginner who are entering into software testing industry",
        "Have an ability to design and conduct a software test process for a software testing project"
      ],
      "description": "To study fundamental concepts in software testing, including software testing objectives, process, criteria, strategies, and methods.\nTo discuss various software testing issues and solutions in software unit test; integration, regression, and system testing.\nTo learn how to planning a test project, design test cases and data, conduct testing operations, manage software problems and defects, generate a testing report.\nTo expose the advanced software testing topics, such as object-oriented software testing methods, and component-based software testing issues, challenges, and solutions.\nTo gain software testing experience by applying software testing jobs and methods to practice-oriented software testing projects.\nTo understand software test automation problems and solutions.\nTo learn how to write software testing documents, and communicate with engineers in various forms.\nTo gain the techniques and skills on how to use modern software testing tools to support software testing projects.",
      "target_audience": [
        "This course will usefull to Software Testers, QA Managers",
        "Have an ability to use various communication methods and skills to communicate with their teammates to conduct their practice-oriented software testing projects.",
        "Beginner for Software Testing professionals"
      ]
    },
    {
      "title": "Playwright PYTHON Automation Testing - From Zero to Expert",
      "url": "https://www.udemy.com/course/playwright-python-automation-testing-pytest/",
      "bio": "BRAND NEW- Practical Training on Python and Playwright for (Web/API) Automation from scratch with Pytest BDD Framework",
      "objectives": [
        "Strong foundation at Python programming basics with practice exercises and assignments",
        "In depth understand of Playwright Web Automation with real time examples",
        "Get familiar with API Testing and Network Interception using Playwright",
        "Understand visual testing, mobile device emulation & test execution in CI/CD Docker container",
        "Thorough understanding on Python Pytest framework capabilities from Scratch",
        "Get Familiar with Playwright Inspector tool, Trace Viewer & Code Gen (Record Playback) tools",
        "End to end Industry Standard Framework design using Pytest and BDD concepts"
      ],
      "course_content": {
        "Introduction": [
          "What is Playwright and why choose Python as library?",
          "How course curriculum is designed from Scratch --(Must watch)"
        ],
        "Setting up Python & Playwright & Pycharm in Windows & Mac": [
          "Install and set the path of Python in windows OS",
          "Install and set the path of Python in MAC OS",
          "What is PIP? Install Playwright and set it up in Pycharm IDE"
        ],
        "Learn Python basics from scratch with examples": [
          "Download code",
          "Python hello world Program with Basics",
          "Datatypes in python and how to get the Type at run time",
          "List Datatype and its operations to manipulate",
          "Tuple and Dictionary Data types in Python with examples",
          "If else condition in python with working examples",
          "How to Create Dictionaries at run time and add data into it",
          "How loops work in Python and importance of code idendation",
          "Programming examples using for loop - 1",
          "Programming examples using While loop - 2",
          "What are functions? How to use them in Python",
          "OOPS Principles : Classes and objects in Python",
          "What is Constructor and its role in Object oriented programming",
          "Inheritance concepts with examples in Python",
          "Strings and its functions in python",
          "How to read text file content using Python",
          "Importance of readLine and readLines Methods in python",
          "Writing Data into File using Python",
          "Understand how to manipulate strings and print them.",
          "Variable Assignment and Types",
          "Working with Lists",
          "Exploring Tuples",
          "Understanding Dictionaries",
          "Practice using if-else statements.",
          "Number Comparison",
          "Doubling Numbers with For Loop",
          "Customized Greeting Based on Time of Day",
          "Understanding class creation in Python",
          "Create a Greeting function",
          "Average Calculator",
          "Read and Print File Contents",
          "Count Lines in a File",
          "Shopping Cart Validation",
          "Handle Tuple modification exception with Try Catch"
        ],
        "Learn Pytest Framework basics from Scratch": [
          "Download complete Playwright course code as zip file",
          "What are pytest fixtures and how it help in enhancing tests",
          "Understand scopes in Pytest fixtures with examples",
          "Setup and teardown setup using Python fixtures with yield keyword"
        ],
        "Getting Started with Playwright Automation Testing - Real time examples": [
          "Run Pytest Tests from terminal with commands and options",
          "Understand launching the Chromium Engine browser with Playwright fixture",
          "Understand how Page and playwright fixtures work with references",
          "Identify web components using getLabel and get_by_role methods in playwright",
          "Limitations on get_by_Label. Understand in which cases it works",
          "Quiz on Section-5"
        ],
        "Deep Dive into Playwright UI Methods with real time examples": [
          "How Autowait works in Playwright to handle wait mechanisms",
          "How to run tests in firefox browser with Playwright - example",
          "Understand how filter works on dynamic selection of card items from the list",
          "How to handle child windows and tabs with playwright - example",
          "Apply Python string methods to retrieve the values with assertion checks"
        ],
        "UI Functional validations with assertions using Playwright python": [
          "Invisible, visible inbuilt assertions with Playwright python",
          "How to handle Alerts, popups using Playwright python - Example",
          "What are Frames? How to handle them with Playwright",
          "Prepare strategy to handle web tables automation with an example",
          "End to end example on handling tables, hover methods in playwright",
          "Record and play back the tests in playwright with codegen tool",
          "Quiz on Section-6"
        ],
        "Learn API Testing using Playwright with Hybrid e2e example of (Web & API)": [
          "Introduction to ecommerce domain and scenarios to automate",
          "Understand API's used and their details from developer tools of browser",
          "Build API Utils from Scratch starting with how to make a Post calls",
          "How to assert API responses and status codes with Playwright code",
          "Refactor API Utils methods and call them from Tests in generating data",
          "Dynamically find the order Id from the order History table with easy logic"
        ],
        "Intercepting Network requests & responses to test Edge cases with Playwright": [
          "What is the concept of intercepting network. understand from example",
          "Intercepting response calls with route->fulfil methods to test edge cases",
          "Intercepting request calls with route->continue methods to test edge cases",
          "save and inject the session cookies into browser at run time with playwright"
        ],
        "Playwright Pytest Framework- Part 1 (Pageobject, Data Driven,Parameterization)": [
          "overview of the Best practices for Playwright framework design",
          "Drive the test data externally from Json files into Playwright fixtures",
          "Parameterize the Test with multiple data sets with python dictionaries",
          "Understand the page object design pattern and how to apply for the tests",
          "Implement Page object design to end to end test - example",
          "Optimize Test by avoiding object creation in tests and move into PO classes"
        ]
      },
      "requirements": [
        "No Programming experience required. Everything has taken care in the lectures including Python basics"
      ],
      "description": "Welcome to the comprehensive Playwright Python course that covers everything from the basics to frameworks, including Python & Pytest fundamentals without need of any prior Python experience.\nCombining Playwright with Python unlocks powerful capabilities that can drive innovation in test automation frameworks. Let me walk you through why this combination stands out:\n\n\nWhy Python? Python is not only one of the most versatile programming languages, but it’s also the backbone of Machine Learning (AI) development. Its extensive frameworks for AI integration make it a natural choice for building automation frameworks that leverage AI-driven capabilities.\nWhy Playwright? Playwright has been growing exponentially boasting a 750% increase in usage every year. Known for its speed, reliability, and ability to automate both UI and API applications, it’s quickly becoming a top competitor to Selenium in the test automation space.\n\n\nBringing Playwright and Python together enables you to craft a robust, future-ready test automation framework with AI capabilities of handling even the most complex web and API-based applications.\n\n\nIn this course, you’ll systematically learn:\nPython essentials\nPlaywright automation with Python\nPytest frameworks\nBehavior-driven development (Pytest BDD)\n\n\nWhether you’re just starting out or looking to expand your skillset, this course is designed with no prerequisites—everything is covered step by step to ensure a seamless learning experience.\nImagine the boost this combination can bring to your resume in the evolving test automation era!\n\n\nI can’t wait to see you in the course and help you unlock new opportunities in your career.\n\n\nNote : For Beginners, there is 3 hours Python video in the beginning  of this course which covers all Python basics from Scratch including coding Assignments and quizzes which prepares candidates for Interviews.\n\n\nCourse Structure Breakdown:\n\n\nPython/Pytest Basics for Beginners (3 hrs) - Build a solid Python foundation for confident Playwright exploration.\nPlaywright Web/UI Automation (50%) - Master core Playwright concepts for comprehensive UI automation.\nMixed Web & API Testing with Network Mocking (25%) - Expand your skills by combining UI and API testing with network mocking capabilities.\nPlaywright Advanced Framework Features (25%) - Dive deep into advanced Playwright frameworks for optimal test design.\n\n\nIn conclusion, this course is a one-stop shop for you to become a Playwright hero and take charge of modern, full end-to-end test automation.\n\n\nBecome a Playwright hero and embrace the future of end-to-end test automation. Enroll today!",
      "target_audience": [
        "Software Testers",
        "Quality assurance",
        "Automation testers",
        "Python developers",
        "SDET"
      ]
    },
    {
      "title": "Learn Automation Framework with Specflow, Selenium, C#, BDD",
      "url": "https://www.udemy.com/course/learn-automation-framework-with-specflow-selenium-csharp-bdd/",
      "bio": "BRAND NEW : LOW-CODE/NO CODE Framework with Design Patterns (Builder, Strategy, Singleton, Dependency Injection, IoC)",
      "objectives": [
        "Learn professional automation creation from the scratch with C#, Specflow, Selenium",
        "Learn C# basics and advanced concepts.",
        "Learn how to use different design pattern to build automation framework like Dependency Injection, Singleton, Builder pattern, IoC principal",
        "Learn how to use Specflow with C#, Selenium.",
        "Learn parallel execution implementation in the automation framework with thread safety implementation.",
        "Learn how to separate locator information and to add in Object Repository",
        "After completing this course, you will able to handle any automation framework related questions in interview along with C#, Selenium, Specflow"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "C# : Introduction, Data types & Variables": [
          "Introduction to C#",
          "Built in Data Types",
          "Common Operators",
          "Nullable Types",
          "Data Type Conversion"
        ],
        "C# : Arrays, Condition Statement & Loops": [
          "Arrays",
          "IfElse",
          "Switch",
          "While Loop",
          "For & ForEach Loop"
        ],
        "C# : Methods": [
          "Methods",
          "Method Parameters"
        ],
        "C# : OOPS Concepts": [
          "Namespaces",
          "Classes",
          "Static and Instance Members",
          "Inheritance",
          "Polymorphism",
          "Method Overloading",
          "Properties Part I",
          "Properties Part II",
          "Interfaces",
          "Abstract Class"
        ],
        "C# : Delegates, Exceptions & Enums": [
          "Delegates",
          "Exceptions",
          "Custom Exceptions",
          "Why Enums",
          "Enum Functionality"
        ],
        "C# : Type, Parameters, Access Modifiers, String, Dictionary": [
          "Type Vs Types",
          "Access Modifiers Part I",
          "Access Modifiers Part II",
          "Access Modifiers for types",
          "Generics",
          "String Vs StringBuilder",
          "Partial Classes",
          "Optional Parameters - Using Parameter Array",
          "Making Method Parameters optional By Method Overloading",
          "Making Method Parameters optional By Parameter Default",
          "Method Parameters Optional by Using Optional Attribute",
          "Dictionary",
          "List",
          "Lambda Expression"
        ],
        "C# : Dependency Injection Design Pattern": [
          "Dependency Injection"
        ],
        "Behavior Driven Development (BDD) - Specflow": [
          "BDD and Specflow",
          "Requirement, plugin Installation",
          "Specflow tutorial - Configuration Specflow Project Template, Unit Test",
          "Feature File Creation, Gherkin Language, Step definitions, Binding",
          "Scenario Execution with Test Explorer",
          "Steps Outline & Parameterized",
          "Hooks",
          "Context Injection",
          "Feature Context",
          "Scenario Context",
          "External Binding",
          "Parallel Execution"
        ],
        "Automation Framework : MUST WATCH : LOW CODE / NO CODE Framework Overview": [
          "Low Code /No Code framework overview"
        ]
      },
      "requirements": [
        "Visual Studio needs to be installed on your machine.",
        "Passion towards new skills."
      ],
      "description": "You can learn about automation framework with C#, Selenium with Specflow even if you are not aware of programming knowledge in C#.\nC# is one of the popular Programming languages developed by Microsoft. You can use C# programming language to build different application to deploy on windows, mac and on linux machines.\nThe Complete Selenium WebDriver with C# course is crafted carefully by professionals to turn a complete beginner into the greatest Automation Test Engineers.\nEverything is carefully planned and executed. This course is very helpful who wants to learn automation framework from the scratch. This course will help to build framework level logics and after having knowledge, we able to build automation framework with any language.\nIn these days, C# automation demand is growing very fast and specially for automation framework related to low code automation framework with the help of Specflow. So this course designed to understand how to develop automation framework from the scratch. This course designed to use different design patterns during framework creation.\n\n\nPart 1 –\nThis helps to learn C# fundamentals for automation.\nPart 2:\nThis helps to learn Specflow.\nPart 3:\nBuild automation framework from the scratch with different design patterns.\nOn course completion You will be Mastered in Selenium Automation Testing with C# and can implement.",
      "target_audience": [
        "Software engineers looking to learn how real automation frameworks are built from scratch",
        "Software engineers struggling with developing automation frameworks",
        "Teams struggling with developing automation frameworks that really works",
        "Software engineers looking to learn industry best practices for framework development"
      ]
    },
    {
      "title": "[TDD] Learn Test Driven Development with React Native",
      "url": "https://www.udemy.com/course/tdd-learn-test-driven-development-with-react-native/",
      "bio": "Everything about testing React Native with TypeScript, Redux, Axios, React-Navigation, forms and native dependencies.",
      "objectives": [
        "How to test React Native with TypeScript, Redux, and Axios",
        "What is Test Driven Development and how to put it in practice",
        "Understand what is testing and the different types of tools",
        "Testing good practices and which tools to use",
        "How to handle native dependencies while testing",
        "How to write tests for forms (made with react-hook-form)",
        "The Testing Library family of packages with Jest",
        "Unit and Integration testing"
      ],
      "course_content": {
        "Introduction": [
          "Overview",
          "Why write tests ?",
          "Why and How to use Test Driven Development",
          "What type of test ?",
          "What tools do we need ?",
          "Ressources"
        ],
        "Your very first test": [
          "Setup",
          "Writing your first test",
          "Writing your first component test",
          "What are we going to build",
          "Ressources"
        ],
        "Application basis": [
          "Configuring React Native Testing Library",
          "Creating Home Screen",
          "Additional configuration for Jest",
          "First section (date)",
          "Components (weather)",
          "Location",
          "Navigation",
          "Ressources"
        ],
        "Home Screen": [
          "Component: Current location (1)",
          "Component: Current location (2)",
          "Component: Current location (result)",
          "Component: Given position (1)",
          "Component: Given position (2)",
          "Ressources"
        ],
        "Weather Screen": [
          "Setting up Redux",
          "Open Weather API",
          "Redux Store",
          "Weather screen",
          "Conclusion",
          "Ressources"
        ],
        "Final project": [
          "Content"
        ]
      },
      "requirements": [
        "Knowledge of React & React Native with how to use Hooks",
        "Knowledge of JavaScript with how to use Promise & Async",
        "A working computer with NodeJS & React Native environment setup",
        "Understanding of Redux (Redux-Saga appreciated)"
      ],
      "description": "Testing is a must-known and valuable skill in software development.\nWith an ecosystem growing quickly, several similar tools and few courses or lacking knowledge on the field, my journey with testing has not been the easiest one. Now that I took the right choices and practiced for several years, I want to share my expertise so you become able to write tests the right way !\nI don't want to merely show you how to write a test but to introduce the different ways to do it, what I think are the right ones and what is used in the workplace, from my experience.\nKnowing how to write tests for a React Native application allows you to quickly be able to test a ReactJS application. Moreover, React Native is quite difficult to test, partly because of the use of native dependencies. These are the reasons that pushed me to write this course.\nWhat are we going to build ?\nThe first step will be to expose some of the knowledge, tools and best practices needed. The course will focus on React Native without Expo, but will refer to the documentation needed to use Expo.\nAfter laying out the necessary knowledge, tools and good practices we are going to build a Weather Application.\nFeaturing :\nReact Native and TypeScript\nRedux & Redux-Saga\nAPI calls with Axios\nForms with react-hook-form\nRouting with react-navigation\nJest and the React Native Testing Library\nGeolocation and OpenWeatherMap API\nTest Driven Development-Style\nWhat this course is not\nThis won't be a deep-dive into APIs for react-dom/test-utils or jest.\nTheorical and unopinionated courses about those already exists. Here you will be presented with:\nA explanation of those tools, which ones you need, and why\nHow to put them into practices, in a challenging environment\nHow companies use them on a daily basis (with some more complicated cases)\nWhere to find more informations (documentation)",
      "target_audience": [
        "React Native developers looking to discover testing with React Native",
        "Experienced developers looking to improve their testing / TDD skills with React Native"
      ]
    },
    {
      "title": "Start and Develop a Successful Career in Software Testing",
      "url": "https://www.udemy.com/course/start-and-develop-a-successful-career-in-software-testing/",
      "bio": "Learn about Software Testing Certifications, Quality Assurance, Test Design, Agile Testing, requirements, and Test Cases",
      "objectives": [
        "Understand the different software development lifecycles, Waterfall, Agile, etc.",
        "Understand the goals and objectives of software testing",
        "Understand the essential concepts of software testing including Requirements, Test Scenarios, Test Cases, Test Sets, User Stories, and Use Cases",
        "Learn a simple methods to test software",
        "Understand when to perform ad hoc/exploratory testing as opposed to formal testing",
        "Understand the difference between different testing certifications",
        "How to prepare for an interview for a job in software testing"
      ],
      "course_content": {},
      "requirements": [
        "Some knowledge and experience using any computer software"
      ],
      "description": "This course is intended for everyone who is interested in starting a successful career in software testing as well as those who are already in the software testing field for few years.  The courses use a very simple approach to introduce you to the essential concepts and techniques for software testing.  Concepts covered in the course are software requirements, user stories, test cases, test scenarios, and test sets. The course also will discuss the difference between quality assurance and testing. The course emphasizes defect prevention as the most effective way to ensure high quality software.   You will learn everything you need to become an effective tester.\nHere what you will learn in this course:\nWhether you have been doing testing for few years or you have not done any testing job before, You can not afford to miss this course.  I have been teaching people around the world for the last 40 years on how to become effective test professionals.  This course gives you all that you need to start a career in software testing and to continue to develop that career.  The courses teaches you a very simple test process that you can not find in any book or any other course.  It is a process that I taught to over 100,000 people in at least 500 companies and government agencies.  This course is not a typical Udemy course because  you will learn by doing.  You will have a chance to practice on the steps of the process.  When you learn this process, you can immediately use it in your current project if you already have a job or you can use it to do the best in any interview for a software testing job.  The course will also help you decide if you want to be certified or not and what the best certification for you is.  Finally, the course will give you good guidance to do a very effective interview.  Here is some of what you will learn in the course.  There is so much to list so, I am not listing everything.\nUnderstand the difference between quality assurance and testing\nLearn how to become a real QA professional while you are performing your testing job\nLearn different development lifecyles such as the traditional waterfall model, the V-Model, the RAD approach, and the agile framework\nGet a good understanding of the Scrum methodology\nLearn how to be effective test professional in an agile project\nLearn how to put together your testing objective to become a successful test professional\nGain a good understanding of functional requirements and quality requirements\nLearn how to make sure that requirements are testable to be able to design test cases\nUnderstand User Stories for agile projects\nUnderstand Use Cases\nLearn how to ask relevant question to gain better understanding of requirements\nLearn How to breakdown requirement, user stories to a number of scenarios\nLearn how to come up with negative scenarios for negative testing\nLearn how to validate your scenarios with business analysts, developers and product owners\nLearn a very simple risk based testing methods based on your scenarios and select the most important scenarios to test\nUnderstand the critical components of a test case\nLearn how to build test cases based on your scenarios\nLearn how to group test cases to test sets\nLearn about the different certifications for software tester and how you choose among them\nGet hints and guidance to do a very effect interview and come ac cross as the most qualified candidate for the job\nTopics to be Covered\nThe Importance and the Future of Software Testing\nSoftware Testing Vs. Software Quality Assurance\nSoftware Development Lifecycles\nSoftware Testing Concepts\nScrum methodology\nThe Agile Framework\nThe Rapid Application Development Model (RAD)\nThe V-Model\nThe Waterfall Model\nSoftware Testing Concepts\nFunctional requirements\nQuality requirements\nTestable requirements\nUser Stories\nUse Cases\nScenarios\nTest Cases, Test Sets, Test Scripts\nTest Design\nPositive and Negative Testing\nRisk-Based Testing\nPreparing for interview\nSoftware Testing Certifications\nISTQB Certification\nIIST Certifications",
      "target_audience": [
        "Anyone who wants to start a career in software testing or has been in testing for few years"
      ]
    },
    {
      "title": "REST Assured. API test automation for beginners",
      "url": "https://www.udemy.com/course/rest-assured-for-beginners/",
      "bio": "Rest API test automation from scratch. Create cool REST Assured framework with Java and TestNG",
      "objectives": [
        "How to start REST API Automation using REST Assured",
        "Creating REST API testing framework from scratch with Maven and TestNG",
        "Use JsonPath and XmlPath",
        "Serialize and De-Serialize POJOs",
        "Work with Headers and Cookies",
        "Use Basic Authentication"
      ],
      "course_content": {
        "Introduction | REST Assured": [
          "What we need to know",
          "Helpful tips before we start",
          "What are Web Services?",
          "SOAP vs RESTful Web services",
          "Configuring Maven Project",
          "GitHub",
          "Section 1 Quiz"
        ],
        "Creating REST Assured tests | REST Assured": [
          "Application under test",
          "Alternative App under test",
          "Creating first test",
          "Adding more GET tests",
          "Working with JsonPath",
          "Automating POST request",
          "Automating PUT request",
          "Basic authentication",
          "Automating PATCH request",
          "Automating DELETE request",
          "Section 2 Quiz"
        ],
        "Advanced REST Assured features | REST Assured": [
          "RequestSpecification",
          "Path parameters",
          "Query parameters",
          "Headers and Cookies",
          "XML response",
          "Serialization",
          "De-Serialization",
          "Section 3 Quiz"
        ],
        "Outro": [
          "Outro",
          "Bonus Lecture: Discount coupons"
        ]
      },
      "requirements": [
        "API testing experience",
        "At least some Java programming language experience"
      ],
      "description": "Make the next step in your test automation career with REST Assured!\n\n\nTesting and validating REST services in Java is harder than in dynamic languages such as Ruby and Groovy. REST Assured brings the simplicity of using these languages into the Java domain.\n\n\n\"REST Assured. API test automation for beginners\" tutorial is created for Manual Software Testers and Test Automation Engineers that want to learn how to quickly start automating REST API tests.\nEvery step, from the set up of the rest assured java framework to executing your automated REST API test, is explained in detail.\n\n\n\"REST Assured. API test automation for beginners\" course requires some Java or other OOP knowledge.\nThis course is designed for beginners in REST Assured, but not for beginners in test automation.\n\n\nMore and more Software QA positions require some test automation, and not just UI-level test automation. Selenium WebDriver experience is often not enough to land high-paying SDET and Test Automation jobs. It's important to be able to automate API tests. Using tools such as Postman or SoapUI may be good enough for manual testers, but if you want to call yourself an experienced test automation engineer, you need to know how to develop your tests using code and tools like REST Assured.\n\n\nAt the end of this REST Assured course, students will be able to automate Rest API tests with REST Assured using Java and TestNG framework. Execute every possible REST method and use advanced RESTAssured features. Use TestNG features for better test structure and easy framework maintenance.\nAnd most importantly, be able to receive a promotion at the current job, or get a new job that requires Rest Assured or other test automation experience.\n\n\nDon't wait, learn API automation with REST Assured!",
      "target_audience": [
        "Testers that use UI tools for API testing",
        "Testers that want to take their test automation career to another level"
      ]
    },
    {
      "title": "Job oriented - Practical Software QA Testing",
      "url": "https://www.udemy.com/course/job-oriented-practical-software-qa-testing/",
      "bio": "Your foundation to work as QA in IT! High paying QA Tester jobs. Manual Software Testing. Updated May 2024.",
      "objectives": [
        "How to work as a QA (Quality Assurance) team member in any IT (Information Technology) project. Designed for those wanting to enter the IT business, QA is an excellent entry point!",
        "You'll learn the processes, documents, terminology, and techniques used by QA - a practical course to prepare you to work as a QA team member in the real world."
      ],
      "course_content": {
        "Why QA in IT projects?": [
          "Why QA in IT projects?"
        ],
        "Typical IT project - who does what?": [
          "Typical IT project - who does what?"
        ],
        "How is software built?": [
          "How is software built?"
        ],
        "What are business requirements?": [
          "What are business requirements?"
        ],
        "QA processes, and STLC (Software Testing Life Cycle)": [
          "QA processes; and STLC (Software Testing Life Cycle)"
        ],
        "Ways, methods, and techniques used for testing": [
          "Ways, methods, and techniques used for testing"
        ],
        "How to generate scenarios?": [
          "How to generate scenarios?"
        ],
        "How to write test cases?": [
          "How to write test cases?"
        ],
        "How to execute test cases? How to report bugs?": [
          "How to execute test cases? How to report bugs?"
        ],
        "Test Plan; QA terminology": [
          "Test Plan; QA terminology"
        ]
      },
      "requirements": [
        "Basic familiarity with computers and the internet. That's why QA is an easy, excellent entry point to get into IT."
      ],
      "description": "About the course:\nThis course is a MUST. Without knowing these basics, it's highly unlikely you'll find work as QA\nEasy-to-understand, it’ll give you complete familiarity with an IT project, specifically its QA activities\nDo you wish to enter the IT business?  This is the course for you!\nYou'll be confident at job interviews, speaking the 'language of IT' that employers like to hear\nAll QA activities included - so you can do well on the job!\nWhat you'll learn - Course Content - 12 Videos (total 7 hours, 22 min), plus bonus video 13\nWhy QA in IT projects? Goals of QA.\nTypical IT project – who does what? Roles in IT.\nHow is software built? Work flow to create software.\nWhat are business requirements? Business needs software must satisfy.\nQA processes and STLC – Software Testing Life Cycle\nWays, methods, and techniques used for testing\nHow to generate scenarios? To replicate real world conditions\nHow to write test cases? Clear, accurate, self-contained.\nHow to execute test cases? How to report bugs - accurate and complete\nTest Plan, QA terminology - essential on the job\nCommon types of tests - functional and non-functional\nAgile model of development - used by most current IT projects\nBonus video - UAT - User Acceptance Testing",
      "target_audience": [
        "Anyone wanting to get a good paying job. Software QA salaries currently (2019 USA) are $28 to $58 range."
      ]
    },
    {
      "title": "End to End Automation using Python | Web Application & API",
      "url": "https://www.udemy.com/course/learn-gherkin/",
      "bio": "Automate Manual Stuffs using Python, Web Automation using Selenium Python, API Automation with Request, Realtime Project",
      "objectives": [
        "Expert level knowledge with practical exposer of Python for Realtime implementation",
        "Ready to use python in Daily realtime project activities(Manual / Automation)",
        "Detailed understanding of python and its implementation in different automation activities",
        "Ready to face Python programming interviews for Automation Testing",
        "Ready to Write Selenium Automation Scripts single handedly with best practices"
      ],
      "course_content": {
        "Introduction & Environment Setup- Python | Pycharm | PIP | Libraries": [
          "Why as a Tester we need to learn Python",
          "*** Course Architecture : Must for Everyone ***",
          "Step 1 : Setup Python on Windows Machine with Environment Variable",
          "Step 2 : Setup Pycharm - Editor fort Python Programming",
          "Step 3 : Setup PIP : Package Manager for Python"
        ],
        "Getting start with basic PYTHON Programming": [
          "First Python Code : Create Python File, Comments & Print on Console",
          "How to Declare and use Variables in Python",
          "How to take user input and use it in programming",
          "Constraints and Type Casting",
          "Standard datatypes in Python : Number, String, List, Tuple & Dictionary"
        ],
        "Control Execution using Condition Handling, Practical Examples and Exercise": [
          "Condition Handling using If : Handle Single Condition",
          "Condition Handling using If : Handle 2 Conditions",
          "Multiple Condition Handling (If - Elif - else) with practice exercise",
          "Nested Condition Handling (Condition inside Condition)",
          "Condition Handling with Logical OR and Logical AND"
        ],
        "Do Execution with --Loops -- | For, While, Break and Continue": [
          "Introduction of Loops - Why and Where to use Loops",
          "For Loop with Final Range - Run code until the given condition(value) reach",
          "For Loop with initial and final range -Run code between given range",
          "For loop with increment value - Run code with different increment value",
          "For loop with decrement value - Run code with different decrement value",
          "For loop with list - Running a loop on the List of values",
          "While Loop with increments",
          "While loop with decrements",
          "Break Statement",
          "Continue Statement",
          "Else Statement"
        ],
        "String Handling": [
          "What is String and basic operations",
          "String : Fetch Substring",
          "Common String Functions - Part 1",
          "Common String Functions - Part 2",
          "Common String Functions - Part 3",
          "Common String Functions - Part 4",
          "Compare 2 Strings in Python"
        ],
        "Complex Data Types": [
          "List",
          "List function",
          "Tuple",
          "Tuple advance operations",
          "Dictionary basics",
          "Dictionary Methods"
        ],
        "Functions in Detail": [
          "Functions Basics",
          "Rules to create functions",
          "Different types of functions",
          "Functions with return value",
          "Different types of arguments"
        ],
        "Class in Python": [
          "Create first class",
          "Functions in Class",
          "Constructors",
          "Why and Where we use constructors",
          "Create Object in another file"
        ],
        "Modules": [
          "What is Module",
          "How to Use Modules",
          "Creating Project Structure",
          "Difference between import and from-import"
        ],
        "File Handling": [
          "Read Data from File(.txt)",
          "Read character by character and line by line",
          "Write data to File(.txt)",
          "Common file methods"
        ]
      },
      "requirements": [
        "Basic understanding of Windows Operating System",
        "Good to have understanding of Manual Testing, Processes, Functional & Regression Testing",
        "Should be ready to invest at least 30mins a day for practice and concept implementation"
      ],
      "description": "-- Recent Updates --\nSep 2022 : Updated Python videos with improved Sound Quality\nDec 2021 :  Added videos for Web Scrapping\nJun 2021 : Added Videos for API Response Validation\n\n\nThis is a end to end course to Utilize Python for automating our daily Manual Task and Application\nCoverage:\nStep by Step Installation of Python and other tools libraries required for this course.\nLearn Python basics like Condition Handling, Looping, String Handling.\nStandard Data Types (List, Tuple, Dictionary)\nHow to work on Class and Functions\nAdvance Python Concepts : File Handing, Excel Handling, Exception Handling\nOOPS Programming : Inheritance, Overriding\nWorking with CSV file, JSON Handling\nHere we will write code by following all standards and best practices.\nDifferent practice exercise and questions to test our learning time to time.\nHelp with Q&A support whenever needed\nUse many most usable python packages and libraries\n\n\nRealtime Project Coverage:\nProject 1:\n- WebScraping : Navigate to different pages of a website, fetch data and store for further analysis\nProject 2:\n- API Testing : Most important area as REST API Testing is having huge demand, here we will learn how to do API Testing using Python Programming\nProject 3:\n- Web Automation Basics : As we know we can automation web applications, here we will learn, how to automate Web Application using Selenium and Python\nProject 4:\n- Test Data Generation : Its a test data generation utility which we will design for manual testing activities",
      "target_audience": [
        "Manual Testers Looking Opportunity in Python Automation",
        "Professionals looking to switch to python scripting language",
        "Freshers looking for opportunity in Automation Testing",
        "Any professional want to start carrier in python Automation"
      ]
    },
    {
      "title": "Basic to Advanced API Automation testing with katalon studio",
      "url": "https://www.udemy.com/course/basic-to-advanced-restapi-automation-testing-step-by-step/",
      "bio": "Learn API automation testing framework from step by step Basic to advanced level using Katalon studio IDE",
      "objectives": [
        "RestAPI Automation testing",
        "Integration with Jenkins",
        "Integration with GIT",
        "Katalon Analytics",
        "Test Results & Reporting",
        "Creating RestAPI test cases and TestSuites for Automation testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download and Install Katalon Studio"
        ],
        "Creating Object Repositories": [
          "Creating object repository for GET",
          "Creating object repository for POST",
          "Creating object repository with http header",
          "Global variable configuration",
          "Basic, Oauth 1.0 and Oauth 2.0 Authorization",
          "Course Suggestion - Mobile Automation"
        ],
        "Creating Test Cases": [
          "Creating Test case for GET",
          "Creating Test case for POST"
        ],
        "Creating Test Suite and reporting": [
          "Creating Test suite with Basic reporting",
          "Integration with Katalon Analytics",
          "E-mail configuration for sending test reports"
        ],
        "Integration with GIT & Jenkins": [
          "Integration with github",
          "Run Test using Command prompt",
          "Jenkins Integration & Conclusion",
          "Gentle Reminder : Learn iOS Automation"
        ],
        "Assignment": [
          "Test User API with GET, POST, PUT, DELETE"
        ]
      },
      "requirements": [
        "Basics of RestAPI",
        "PC with Internet",
        "Aspiration to learn"
      ],
      "description": "Learn RestAPI Automation testing using katalon studio,\nWhat I will learn?\nHow to create object Repositories\nHow to create test cases and test suites for automation testing\nHow to generate reports\nHow to integrate with GIT\nJenkins Integration\nAPI testing (or Web service testing in the context of a Web application) has become more important in software testing. The interest in API testing has been increasing over the last five years, according to Google Trends. This trend possibly indicates that the demand for applying API testing has become more prevalent. Testing API or web services is no longer performed solely by the original developer. This activity is now a common practice among outsourcing teams who independently verify and validate their products.\nThis tutorial will demonstrate how to use Katalon Studio to create your first API/Web service test from scratch with good practices.\nWhat is katalon studio ?\nKatalon Studio is an automation testing software tool developed by Katalon, Inc. The software is built on top of the open-source automation frameworks Selenium, Appium with a specialized IDE interface for web, API, mobile and desktop application testing. Its initial release for internal use was in January 2015.\nKatalon TestOps\nKatalon TestOps is a web-based application that provides visualized test data and execution results through charts, graphs, and reports. Its key features include test management, test planning, and test execution. Katalon TestOps can be integrated with Jira and other CI/CD tools.\nKatalon TestOps was originally released as Katalon Analytics in November 2017. In October 2019, Katalon officially changed the name to Katalon TestOps.] It is currently available in the May 2021 version and is expected to provide DevOps team with the optimal test orchestration.\nKatalon Recorder\nKatalon Recorder is a browser add-on for recording user's actions in web applications and generating test scripts. Katalon Recorder supports both Chrome and Firefox. Katalon Recorder functions in the same way as Katalon Studio's recording utility, but it can also execute test steps and export test scripts in many languages such as C#, Java, and Python.\nKatalon Recorder 5.4 was released in May 2021.\nKatalium\nKatalium is a framework that provides a blueprint for test automation projects based on Selenium and TestNG. The framework is built to help users who still need to work with TestNG and Selenium to quickly set up test cases.\nKatalium Server is a component of the Katalium framework. It is a set of enhancements to improve the user experience with Selenium Grid. Katalium Server can be run as a Standalone (single) server in development mode.",
      "target_audience": [
        "Test automation engineer who want to learn RestAPI automation testing enhance their career and get more job opportunities"
      ]
    },
    {
      "title": "REST Assured API Automation from scratch + Framework + CI",
      "url": "https://www.udemy.com/course/rest-assured-api-automation/",
      "bio": "Only course to become an API testing expert, OAuth2.0 [Google/Spotify Live Examples] & Design Production Level Framework",
      "objectives": [
        "Become an Expert in REST API automation using REST Assured",
        "Develop production ready framework using clean code practices and integrate with CI",
        "Serialization & De-serialization with Complex POJOs [Live practice]",
        "Become confident and lead the API Automation effort in your project from scratch",
        "In-depth understanding of REST Assured Fundamentals from scratch",
        "OAuth2.0 Live Examples - Google and Spotify API",
        "Rest API Authentication Mechanisms with Live Examples",
        "Learn how to use POSTMAN for REST API Execution",
        "Learn how to Automate POSTMAN APIs using REST Assured",
        "Learn how to mock REST APIs using POSTMAN Mock Server",
        "Learn about Jackson Databind API [Annotations, Serialization and De-serialization]",
        "Learn basics of TestNG, Maven, Jenkins, Git",
        "Learn Allure Reporting and generate feature rich reports",
        "Learn how to use Lombok to greatly reduce Boiler plate code",
        "Confidently work with complex JSONs in request and responses",
        "How to match full JSON body using Jackson and JSON Assert libraries",
        "Automate session/Form based authentication + CSRF token using a demo application",
        "Hamcrest Assertions",
        "Automating tests using both the BDD and non-BDD styles",
        "Java Programming Basics",
        "Learn how to write clean test cases by following most of the industry best practices",
        "Learn how to integrate the framework with GitHub",
        "Learn how to auto-trigger automation from Jenkins using GitHub Web Hooks, SCM Polling and Build Frequency"
      ],
      "course_content": {
        "Welcome!": [
          "Welcome to the course",
          "Important: How to get a better learning experience",
          "Important: When you need my help"
        ],
        "API Essentials": [
          "What is API?",
          "What is Rest API?",
          "What is JSON?",
          "REST Vs HTTP",
          "API Request Anatomy",
          "Quiz"
        ],
        "Postman Essentials": [
          "Install",
          "Walkthrough",
          "Generate API Key",
          "API documentation",
          "Execute GET Request"
        ],
        "JSON Essentials": [
          "JSON Syntax and Data Types",
          "Fetch JSON using Groovy's GPath",
          "Fetch JSON using JayWay's JsonPath",
          "Groovy's GPath Vs JayWay's JsonPath",
          "Quiz"
        ],
        "HTTP Essentials": [
          "HTTP Concepts: Safe, Idempotent and Cacheable",
          "GET",
          "HEAD",
          "POST",
          "PUT",
          "DELETE",
          "OPTIONS",
          "PATCH",
          "Status Codes",
          "Status Codes - Live Examples",
          "Quiz"
        ],
        "Postman Mock Server": [
          "Setup Mock Server with Multiple Examples",
          "Use Mock Server to Practice All HTTP Status Codes",
          "Quiz"
        ],
        "JAVA Programming Essentials": [
          "Section Intro",
          "Java Basics - Part 1",
          "Java Basics - Part 2",
          "Java Basics - Part 3",
          "Java Basics - Part 4",
          "Control Structures",
          "OOP - Inheritance and super keyword",
          "Access modifiers",
          "OOP - Encapsulation",
          "OOP - Polymorphism",
          "OOP - Abstraction using abstract class",
          "OOP - Abstraction using interface",
          "Exception handling",
          "File operations"
        ],
        "Rest Assured - Setup": [
          "What is Rest Assured?",
          "Setup Pre-requisites",
          "AVOID JAVA 8, 9 OR 10",
          "Setup JAVA JDK - (Use Java 11 or latest LTS version)",
          "Create project using IntelliJ",
          "Eclipse - TestNG plugin download issue - Must watch before proceeding",
          "Create project using Eclipse",
          "Quiz"
        ],
        "Download Resources": [
          "Download Code from here",
          "Download the Slide Deck from here"
        ],
        "Rest Assured - Getting Started": [
          "Why static imports?",
          "Method chaining concept",
          "Automate GET Request - Assert Status Code",
          "Automate GET Request - Assert Response body",
          "Automate GET Request - Extract Response",
          "Automate GET Request - Extract Single Field",
          "Hamcrest Assertion on Extracted Response",
          "What is Hamcrest and Why it is popular?",
          "Hamcrest Collection Matchers - Part 1",
          "Hamcrest Collection Matchers - Part 2",
          "Hamcrest Collection Matchers - Part 3",
          "Hamcrest Collection Matchers - Part 4",
          "Quiz"
        ]
      },
      "requirements": [
        "***You do not need any prior REST API working experience to get started with the course***",
        "***Basic Java Programming is covered in the course, so do not worry if you do not have much Java background***",
        "***No other knowledge required, except for willingness to learn and perform hands-on while you go through the course***",
        "***Do not worry if you face any issue, I'm always available in the Q&A to quickly help you out***"
      ],
      "description": "Course Updates:\nNov 2023: This course fully supports latest Rest Assured version 5.3.2, latest Java 21 and latest versions of all supporting libraries.\n\n\nWhy learn Rest Assured and REST API automation?\nREST Assured API is one of the most popular library when it comes to automating the REST APIs. Most of the today's web applications are backed by the Micro services architecture and the REST APIs. Make no mistake, REST is gaining a lot of popularity amongst the developer community.\nAs a QA engineer, it becomes very important to test the REST APIs as a working API is crucial for a product. With great adoption of OAuth 2.0 and Open ID Connect authentication mechanisms, it also becomes important to build an in-depth understanding of these authentication mechanisms. To speed up product delivery, the industry is gradually moving towards end to end continuous integration (CI) and continuous development process (CD). So it becomes critical that the backend API services are automated to facilitate and speed up this process.\nThis is where the role of a QA engineer becomes of utmost importance to be able to automate the backend API services. This is why you would want to learn everything about the REST Assured library to confidently automate the REST APIs and lead the effort single handedly. And, you have come to the right place!\n\n\nWhy this is the right course for you?\nThis REST Assured course is a one stop solution for all your API automation needs. This course will take you from the beginner level, all the way to be able to design and implement industry standard production ready API automation framework. By the end of the course, you will be confident enough to call yourself as an expert in the REST API automation space.\nThis is probably the only course that covers serialization and de-serialization in great detail and that too with complex POJO examples.\nThis is the only course that explains many of the authentication and authorization schemes in REST API, in a simple manner and with live examples. For OAuth2.0, we have covered two famous APIs - Google and Spotify.\nThis is the only course that values your precious time. Lectures are short, crisp and to the point. I have spent a great amount of time editing the videos so that you don't have to waste your time just to learn a simple concept.\nThis course covers many topics you will not find in other courses, for e.g. Lombok, Jackson Databind API, JSON Assert, Hamcrest assertions, etc.\nBefore we start learning REST Assured and many of its cool features, I'll spend a great amount of time to explain you about the API basics, the HTTP concepts, what is REST, the HTTP methods, POSTMAN, Mocking APIs, JSON and JSON Path and also the basics of Java Programming language. These are the essentials one must become familiar with before jumping on with the REST Assured automation.\nI'll explain you each and every REST Assured concept with live coding and I'll not just write the code. I'll also explain you what happens behind the scenes. This is the best way to learn something new. \"Why\" and \"How\" are more important than \"What\"!\nYou will learn how to think like an automation lead, plan and design the automation framework, optimizing the code, write clean tests and follow good programming practices. For e.g. you will always see me formatting the code (I hate poorly formatted code). It's a small thing, but is very important!\nI'm VERY RESPONSIVE in the Q&A section. I respond to queries within 24 hours. If the time zone difference is not that huge, I can respond within 3-12 hours.\nSo, \"Rest Assured\", by the end of this course, you will become an expert!\n\n\nWhat topics are covered in this course?\nHere's the list of all the important concepts covered in this course:\nAPI Essentials\nPostman Essentials\nJSON Essentials\nHTTP Essentials\nPostman Mock Server\nJava Programming Basics\nGroovy JsonPath\nJayway JsonPath\nGroovy Vs Jayway\nRest Assured - Setup\nRest Assured - Getting Started\nRest Assured - Logging\nRest Assured - Handling Headers\nRest Assured - Automate Get\nRest Assured - Hamcrest Assertion\nRest Assured - Hamcrest Collection Matchers\nSerialization & De-serialization: Concept\nSerialization & De-serialization: POJOs\nSerialization & De-serialization: Role of Jackson API\nSerialization & De-serialization: HashMap to JSON object\nSerialization & De-serialization: ArrayList to JSON array\nSerialization & De-serialization: Jackson Annotations\nSerialization & De-serialization: Jackson ObjectMapper\nSerialization & De-serialization: Jackson ObjectNode\nSerialization & De-serialization: Jackson ArrayNode\nSerialization & De-serialization: Complex POJO Example\nSerialization & De-serialization: Full JSON body matching\nSerialization & De-serialization: Parameterization using TestNG Data provider\nRest Assured - Request Specification\nRest Assured - Response Specification\nRest Assured - Automate Post, Put, Del\nRest Assured - Multiple ways to send request payload\nRest Assured - Complex JSON in request body\nRest Assured - Request Parameters\nRest Assured - Multipart Form Data\nRest Assured - Form URL Encoded\nRest Assured - File upload and download\nRest Assured - JSON Schema Validation\nRest Assured - Logging Filters\nRest Assured - Configs\nAuthentication schemes - Form/Session Based Authentication\nAuthentication schemes - Session Filter\nAuthentication schemes - CSRF Token\nAuthentication schemes - Handling Cookies\nAuthentication schemes - OAuth2.0\nAuthentication schemes - OpenID Connect\nAuthentication schemes - OAuth Vs Open ID Connect\nAuthentication schemes - ID Token\nAuthentication schemes - OAuth Authorization Grant Flow\nAuthentication schemes - OAuth Implicit Grant Flow\nAuthentication schemes - OAuth Client Credentials Flow\nAuthentication schemes - Basic Authentication\nAuthentication schemes - Digest Authentication\nAuthentication schemes - Bearer Token\nAuthentication schemes - APIKey\nGoogle OAuth 2.0 - Configure and setup client app for authorization code grant flow\nGoogle OAuth 2.0 - Fetch auth code, access token and refresh token\nGoogle OAuth 2.0 - Renew access token\nGoogle OAuth 2.0 - Automate Get User Profile API\nGoogle OAuth 2.0 - Automate Send Email API\nGoogle OAuth 2.0 - Implicit grant flow implementation\nGoogle OAuth 2.0 - Open ID connect flow implementation\nSpotify OAuth 2.0 - Configure and setup client app for authorization code grant flow\nSpotify OAuth 2.0 - Fetch auth code, access token and refresh token\nSpotify OAuth 2.0 - Renew access token\nSpotify OAuth 2.0 - Automate Playlist API\n\n\nFramework goals accomplished in this course:\nScalable and extensible\nReusable Rest Assured specifications\nReusable Rest Assured API requests\nSeparation of API layer from test layer\nPOJOs for Serialization and Deserialization\nSingleton Design Pattern\nLombok for reducing Boilerplate code\nBuilder pattern for Setter methods in POJOs\nRobust reporting and logging using Allure\nAutomate positive and negative scenarios\nSupport parallel execution\nData driven using TestNG Data Provider\nAutomated access token renewal\nMaven command line execution\nIntegration with Git\nIntegration with Jenkins\n\n\nTech stack and tools covered in this course:\nRest Assured\nTestNG\nJava\nAllure Reports\nHamcrest\nJackson API\nLombok\n\n\nWhat else is included in the course?\nAll the code & notes used in the lectures is available for download\nYou will get my full support in the Q&A",
      "target_audience": [
        "In general, this course is for anyone really looking to gain a true and in-depth understanding of Rest Assured and REST API automation",
        "This course is designed for any QA Engineer looking to acquire API automation skills without any prior knowledge",
        "Take this course if you are an automation engineer looking to lead API automation effort single handedly from scratch",
        "Take this course if you are looking to learn how to design and implement a production level API automation framework and integrate with CI",
        "Take this course if you are a software developer looking to automate Rest APIs using Rest Assured"
      ]
    },
    {
      "title": "Automation Framework-Selenium,Java,Cucumber,TestNg & Jenkins",
      "url": "https://www.udemy.com/course/advanced-framework-selenium-java/",
      "bio": "Build an Automation test Framework from scratch using Selenium WebDriver, Cucumber, testNg, Jenkins, Java & Git",
      "objectives": [
        "By the end of the course you will be able to design and setup a hybrid framework with Cucumber BDD, Page factory model, TestNg, Jenkins, GITHUB",
        "By the end of the course you will be able to develop E2E test Suite using Cucumber, TestNg hybrid framework and integrate with CI tools like Jenkins and Manage code in SCM tools like GITHUB",
        "you will learn Cucumber 5 Framework , BDD and its features from scratch",
        "you will learn to Run the cucumber tests using Junit framework in java",
        "you will learn to Run the cucumber tests using TestNg and leverage its powerful features",
        "you will learn to manage your Automation tests in SCM Tools using GIT, GITHUB, GITHUB Desktop",
        "you will learn about the Continuous Integration and CI tools like Jenkins",
        "you will learn to integrate and run your Maven, TestNg, Cucumber test Suite using Jenkins features",
        "you will setup periodic Jenkins builds, polling SCM Jenkins builds, On demand button click jenkins jobs.",
        "you will learn to trigger Jenkins jobs after every commit/chanage in the GITHUB",
        "you will work on Excel sheet Automation - Read and Write data from Excel sheets using apache POI",
        "Work on the pulling data from Databases using JDBC - Java Database Connectivity and use it in your automation testing",
        "Work on the Sending Automatic Emails of Test Reports after the execution of Automation tests using Java",
        "you will learn to Run the test Suite in Parallel and also achieve Cross Browser testing",
        "you will working on encrypting sensitive test data like passwords, credentials, Database passwords and use them in your automation testing",
        "you will learn to implement Extent Reports for Cucumber 5",
        "you will learn to debug and Fix the Framework design related issues and also other common challenges"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "A small Note",
          "Download presentation Resources"
        ],
        "Installations and setup Required": [
          "Installations",
          "Resources and Links"
        ],
        "Demo Web App and GITHUB Repositories for your referance": [
          "Git Hub Links",
          "GITHUB repositories",
          "Demo Web APP Review and setup",
          "Demo Web APP Alternative setup"
        ],
        "Cucumber Framework with Junit - Unit level Tests": [
          "Resources and Links",
          "Cucumber basics and Project setup",
          "Run cucumber First Test with Junit",
          "Selenium WebDriver with Cucumber",
          "Cucumber Tags - AND & OR Tags cases",
          "Parametrization and DataTables",
          "Scenario Outline and Examples Keyword",
          "Background Keyword and Cucumber Hooks",
          "Extent Reports integration with Cucumber",
          "************* MUST WATCH ***********************",
          "JDBC -Java Database Connectivity",
          "Encrypting passwords & Excel operations with POI & Email Code",
          "PART1 JDBC/EMAIL/Encryption/Excel utilities to cucumber Junit project",
          "PART2 JDBC/EMAIL/Encryption/Excel utilities to cucumber Junit project",
          "Please Rate the course!"
        ],
        "TestNg Basic concepts": [
          "Note",
          "Part1 : Maven & TestNg Basics",
          "Part2: Maven & TestNg Basics",
          "DataProvider in TestNg"
        ],
        "Cucumber with TestNG - E2E Test Suite": [
          "Part 1: Cucumber & TestNg Framework Setup",
          "Part 2: Cucumber & TestNg Framework Setup",
          "E2E Tests: Login Scenario and Page Factory Model",
          "E2E Tests: Part 1 - Issues & Debug & Fixes",
          "E2E Tests: Part 2 - Issues & Debug & Fixes",
          "E2E Tests: Part 3 - Final Fixes and Test Execution",
          "E2E Tests: Part 1 - Add to cart Scenario",
          "E2E Tests: Part 2 - Add to cart Scenario",
          "E2E Tests Part 3 - Test Execution and Extent Report Logs",
          "E2E Tests Part 1 - Checkout Scenario",
          "E2E Tests Part 2 - Checkout Scenario with DB data and Excel Data",
          "E2E Tests Part 1 - Fixes & Runs & Order Placed Scenario",
          "E2E Tests Part 2 - Order placed Scenario & Final E2E Test Run"
        ],
        "Cross Browser and Parallel Test Executions": [
          "Cross Browser tests Executions - Sequential Execution",
          "Parallel Test Executions"
        ],
        "Continuous Integration CI with Jenkins and GIT": [
          "Resources and Links",
          "Jenkins and GIT installation and Overview",
          "GIT & GITHUB & GIT Operations",
          "Fixed Issue with .gitignore - Normal1.txt",
          "Run Automation test Suite with Jenkins - Periodic Builds and On Demand Builds",
          "Jenkins PollSCM Feature - Auto builds on change in GITHUB & dashboard reports"
        ],
        "Conclusion": [
          "Congrats on Completing the Course! What Next?"
        ]
      },
      "requirements": [
        "Basic knowledge on java"
      ],
      "description": "Learn to develop E2E Test Automation Suite with Cucumber BDD, TestNG, Java, Page Factory Model.\nIntegrate Test Automation Framework with Continuous Integration Tools like Jenkins and GITHUB\nThe course covers almost all the essentials you need to develop E2E test automation suite with different frameworks like cucumber with Junit, Cucumber with TestNg & Page Factory model.\nHence speed up testing and save time, with Automated test Suite.\nAs part of this Course, I have covered following Topics -\nGitHub Links to different projects which we will be working with, as part of this course.\nDemo E commerce Web Application walk through, functional overview and hosting it in local machine.\nSetting up Cucumber Framework from scratch.\nLearning basics of cucumber like feature Files, Step definitions, Runner Files, Parametrization, Tags, Hooks etc.\nRun Cucumber Tests with Junit (java Unit testing framework)\nDevelop Automation unit tests on the Demo App and develop Negative tests & Run with Junit.\nGenerate Reports after Every Test Execution like Cucumber HTML reports, Extent reports.\nWorking with JDBC to fetch data from databases from java and Integrate it with the Framework\nWorking with Excel Sheet Validations, operations using Apache POI and integrate it with the Framework.\nWorking on Encrypting Passwords and Sending Email Reports after the execution of test Suite.\nTestNg concepts and basics overview.\nIntegrate the cucumber project with TestNg and use its powerful features like Annotations, TestNg XML file.\nDevelop End to End test Suite with cucumber, testNG for the Demo E commerce Application.\nRun the Cucumber tests with TestNG.\nParallel and Cross Browser tests\nIntroduction to Git, GitHub, Jenkins - continuous Integration.\nGit and GitHub overview and git operation on sample java project.\nIntegrate Test Automation End to End Suite with Jenkins.\nRun Automation tests as Jenkins jobs manually, period schedule to run them automatically at specific time each day.\nRun Jenkins Jobs Automatically on a new change/commit in GitHub using PollSCM feature.\nTrack test Analytics and reports in Jenkins dashboard.",
      "target_audience": [
        "Automation Test Engineers",
        "QA/ Testing professionals",
        "Anyone who wants to learn Cucumber, testNg, Junit, Jenkins and Selenium to build an Automation test Framework"
      ]
    },
    {
      "title": "Agile Software Testing - Techniques and Tools",
      "url": "https://www.udemy.com/course/agile-software-testing-techniques-and-tools/",
      "bio": "Agile Software Testing: Methodologies and Testing Approaches, Techniques and Tools",
      "objectives": [
        "Agile Testing and Risk Assessment: Test-driven and Behavior-driven Development, Test Levels, A Scrum Tester, Quality Risks in Agile Projects",
        "Techniques in Agile Projects: Estimation of Testing Effort, Test Basis in Agile Projects, Definition of Done,",
        "Techniques in Agile Projects: Acceptance Test-driven Development, Functional and Nonfunctional Black Box Test Design, Exploratory Testing",
        "Tools for Testing in Agile Projects: Task Management and Tracking Tools, Communication and Information-sharing Tools, Test Development and Configuration Tools"
      ],
      "course_content": {
        "Agile Software Testing - Techniques and Tools": [
          "A day in the life of an agile project manager",
          "Course Choice, Skill Development and Prior Knowledge",
          "Course Overview",
          "Effective Learning",
          "FAQs",
          "Program Overview",
          "The Agile Manifesto and Principles",
          "Test-driven and Behavior-driven Development",
          "Test Levels",
          "The Science of Better Learning",
          "A Scrum Tester",
          "Quality Risks in Agile Projects",
          "Estimation of Testing Effort",
          "Test Basis in Agile Projects",
          "Definition of Done",
          "Acceptance Test-driven Development",
          "Functional and Nonfunctional Black Box Test Design",
          "Concepts, Insights and Inquiries",
          "Exploratory Testing",
          "Task Management and Tracking Tools",
          "Communication and Information-sharing Tools",
          "Test Development and Configuration Tools",
          "Practical Activity: Exploratory Testing",
          "Agile Software Testing - Techniques and Tools",
          "Agile Software Testing - Techniques and Tools",
          "Agile Software Testing - Techniques and Tools",
          "Takeaways, Practical Applications and Endorsements",
          "Ready to ace the PMI-ACP exam? ?",
          "From Theory to Practice"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Agile approaches include the complimentary techniques of test-driven development, acceptance test- driven development, and behavior-driven development.\nYou’ll learn by doing. Each module includes hands-on labs where you’ll write tests first, refactor with confidence, and practice pairing with product owners to turn user stories into clear, testable acceptance criteria. We’ll use real-world scenarios to illustrate how to slice work, manage technical debt, and keep feedback flowing—so testing accelerates delivery instead of blocking it.\nThis course is perfect for testers, developers, and Scrum team members who want practical techniques they can apply immediately. By the end, you’ll have a toolkit for designing effective tests, assessing risk, and choosing the right tools for your context—plus a reusable “agile testing playbook” you can bring back to your team to raise product quality sprint after sprint.\nIn this section, we will explore the key features of agile testing and how techniques such as black box testing can be applied in agile projects. We will also take a look at various tools that are available to agile testers, everything from task management and tracking tools, to communication and configuration tools.\nAgile Testing and Risk Assessment: Test-driven and Behavior-driven Development, Test Levels, A Scrum Tester, Quality Risks in Agile Projects;\nTechniques in Agile Projects: Estimation of Testing Effort, Test Basis in Agile Projects, Definition of Done, Acceptance Test-driven Development, Functional and Nonfunctional Black Box Test Design, Exploratory Testing;\nTools for Testing in Agile Projects: Task Management and Tracking Tools, Communication and Information-sharing Tools, Test Development and Configuration Tools.\nThat’s it! Now go ahead and push that “Take this course” button, and see you on the inside!",
      "target_audience": [
        "Software developers, solution architects, program and project managers, programers and all those involved in software development"
      ]
    },
    {
      "title": "Page Object Model pattern for Selenium WebDriver & Java",
      "url": "https://www.udemy.com/course/page-object-model-pattern-for-selenium-webdriver-java/",
      "bio": "Learn Page Object Model on a REAL project with advanced techniques, tips & tricks to super-charge your automation skills",
      "objectives": [
        "Master how to use Page Object Model to write MAINTAINABLE test automation scripts",
        "Explore awesome advanced techniques such as Fluid Syntax + Business Methods",
        "Modify an existing Selenium automation project to learn exactly how Page Object Model works",
        "Get the advanced Selenium skills you need to apply for an automation job",
        "Code along using Java, C#, Python or whatever language you want",
        "Learn exactly what Page Object Model is, and why we use it",
        "Discover why Page Object Model is a perfect fit for agile software development",
        "How to make your test scripts bullet-proof from the start"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Who is this Course for?",
          "Course Outline",
          "Prerequisites",
          "What is Page Object Model?",
          "Why we use Page Object Model",
          "Disclaimers",
          "Who is Pete Jenkins?",
          "Chapter Quiz"
        ],
        "Creating a Simple Page Object Model": [
          "Introduction",
          "Recaps",
          "Full Screen Mode",
          "Creating the Linear Script",
          "Calling the Login Page Methods",
          "Creating the Login Page class",
          "First Look at Benefits of POM",
          "Introduction to Bullet-Proofing",
          "Creating the Home Page class",
          "Creating the User Account Page class",
          "Modifying the Home Page Class to Click on a Product",
          "Creating the Product Details Page class",
          "Creating the Confirmation Popup Class",
          "Creating the Shopping Cart Summary Class",
          "Using a Base Class",
          "Tidying up the Locators",
          "Using PageFactory",
          "Wrap Up",
          "Chapter Quiz"
        ],
        "Advanced Page Object Model": [
          "Introduction",
          "Fluid Syntax Basics",
          "Business Methods - Login",
          "Business Methods - the Rest",
          "Combining Business Methods with Fluid Syntax",
          "Business Methods & BDD",
          "Common Web Components",
          "Tables - Creating a Table Class",
          "Tables - Using the Table Object",
          "Data Scenarios",
          "Project Separation (Separation of Concerns)",
          "Wrap Up",
          "Chapter Quiz"
        ],
        "Tips & Tricks": [
          "Introduction",
          "YAGNI",
          "Design POM from Requirements",
          "KISS",
          "Refactor little and often",
          "Belt & Braces",
          "POM error handling",
          "Wrap Up",
          "Chapter Quiz"
        ],
        "Course Roundup": [
          "Course Roundup"
        ]
      },
      "requirements": [
        "Basic understanding of Selenium",
        "Ability to create test automation scripts",
        "Basic coding skills"
      ],
      "description": "In this course you'll learn exactly what the Page Object Model pattern is in the best way, first by understanding what it is and why we use it, before diving right in and creating a simple Page Object Model together to understand the core coding concepts and techniques needed. Then we'll explore some awesome advanced techniques and tips & tricks - like Fluid Syntax and Business Methods - which will really super-charge your Page Object Model skills and take your Selenium WebDriver coding to the next level.\nI'll also cover the benefits of using Page Object Model in an Agile project environment, how and when to to refactor, the importance of bullet-proofing your Selenium scripts from the start, structuring your automation projects using Separation of Concerns, coding common modules, and much more. Many of these techniques have been learnt by me from years of hard experience doing test automation in the real world, and you won't easily find them documented elsewhere.\nBy the end of this course you will not only have learnt how to create Selenium WebDriver test automation scripts using Page Object Model, but you will know how to do it RIGHT.",
      "target_audience": [
        "Test Automation Engineers",
        "Manual Testers",
        "Test Managers"
      ]
    },
    {
      "title": "Apache JMeter - Basics to Intermediate level",
      "url": "https://www.udemy.com/course/performance-testing-using-jmeter-basics-intermediate-level/",
      "bio": "(30 Day Money Back Guarantee) - Extensive, Hands-on Training with Real Time Project & Material",
      "objectives": [
        "Students reported that they were able to troubleshoot the issues faced in the real projects after taking this class",
        "Even if you are using any other performance testing tool, this course will provide you core guidelines for utilizing it for maximum benefits in less time.",
        "By end of the course you will learn to develop a workable strategy for load testing of an enterprise system and be ready to handle any performance testing project using Jmeter tool"
      ],
      "course_content": {
        "Chapter 1": [
          "Jmeter Introduction part 1",
          "Instructions for Sample Web Application used for this course",
          "Jmeter Introduction part 2",
          "Hand out / Course Material for the Course",
          "Instructions for Sample Web Application used for this course",
          "Day1 - Installation of Jmeter, Recording using Jmeter",
          "Day2 - HTTP Script Recording options -Prefix, grouping etc..",
          "Day 3 - Embedded Resources",
          "Day 4 - Jmeter Best practices",
          "Day 5 - Recording using BadBoy & Fiddler, Interview questions"
        ],
        "Chapter 2": [
          "Instructions for Sample Web Application used for this course",
          "Day6 - Executing the scripts and understanding Logs",
          "Day 7 - Executing a test in a Non-GUI Mode - Start and Stop the test",
          "Day 8 - Simple Controller, Loop Controller, Transactional Controller",
          "Day 9 - Throughput Controller, Only-Once Controller, Random Controller",
          "Day 10 - Switch Controller, User Defined Variables. Jmeter Functions"
        ],
        "Chapter 3": [
          "Instructions for Sample Web Application used for this course",
          "Day11 - Installation of Plugin Manager, Variables and where to use them.",
          "Day 12 - If Controller",
          "Day 13 - Timers, Constant Timers, Pacing",
          "Day 14 - Timers Continuation, Uniform Random Timer, Gaussian Random Timer",
          "Day 15 - Assertions, Response Assertions,",
          "Day 16 - Kinds of Assertions, HTML Assertions, XML Assertions"
        ],
        "Chapter 4": [
          "Instructions for Sample Web Application used for this course",
          "Day 17 - Parameterization",
          "Day 18 - Parameterization Continuation",
          "Day 19 - Correlation",
          "Day 20 - Correlation Continuation",
          "Day 21 - Correlation Continuation"
        ],
        "Chapter 5": [
          "Instructions for Sample Web Application used for this course",
          "Day 22 - Master Slave Configuration",
          "Day 23 - Continuation of Master Slave Configuration",
          "Day 24 - Dashboard Results and latency in JMeter",
          "Day 25 - JMeter -- CICD pipeline and jenkins integration"
        ]
      },
      "requirements": [
        "Basic Computer knowledge",
        "Any Basic scripting language knowledge"
      ],
      "description": "Welcome to \"Isha Training Solutions\"\nNote: This videos are pulled out from LIVE sessions. Hence, you will see the student interactions, as well. Pls watch the demo video before purchasing this course\n************************************************************************************\nI am able to Record, Replay back, Add transactions & Add Check Points, then why should I take this course?\nThis course is much deeper than just record and playback.\nStudents reported that they were able to troubleshoot the issues by themselves after attending the course.\nAlso, reported that the course helped them to break the interviews confidently.\n************************************************************************************\nHere is our all new and improved Performance testing with Jmeter training course of 38+ hours conducted by the Jmeter expert having 14+ years of practical industry experience!\nLearn all the basic and advanced performance testing concepts with hands-on practical examples. The course syllabus is designed by considering the current job market trends and industry requirements.\nPerformance Tester is in high Demand!!!!\nAt the end of the course be ready to handle any performance testing project using Jmeter tool. Even if you are using any other performance testing tool, this course will provide you core guidelines for utilizing it for maximum benefits in less time.\n\n\n****************************************************************************************\nMy other courses on Udemy\nAdvance LoadRunner Scripting for HTTP/HTML Protocol\nLoadrunner 12.50 SAPGUI Protocol scripting\nWebServices Performance Testing Using Loadrunner(SOAP &REST)\nPerformance Testing using LoadRunner 12.50\n****************************************************************************************",
      "target_audience": [
        "Perfect for beginners to experienced level professionals who want to make career in performance testing",
        "Performance Testers, Software Testers, QAs, Developers, BAs, Leads, and Managers",
        "Entry level candidates who wants to learn Performance Testing Using Jmeter",
        "You can start this course with basic Manual Testing skills",
        "Best QA testing career option for those who want to be in automation testing with basic programming skills"
      ]
    },
    {
      "title": "Mobile Software Testing Guide for Manual QA Engineer",
      "url": "https://www.udemy.com/course/mobile-software-testing-guide-for-manual-qa-engineer/",
      "bio": "Improve knowledge of mobile software testing, explore it specific for manual QA, and level up a quality of your testing",
      "objectives": [
        "Learn and in-depth knowledge of Mobile Software Testing, its goals, features and step-by-step testing approaches",
        "Overview of the mobile-specific testing types with the real-life examples for each type demonstrates on real iOS and Android devices",
        "Learn two of the most popular Mobile testing tools such as XCODE for the iOS platform and Android Studio for the Android platform",
        "A video review of each tool includes demonstrating several basic practical functions that testers can use in their work",
        "Include a Mobile Testing checklist for each type of Mobile Software Testing with a step-by-step guide"
      ],
      "course_content": {
        "Introduction": [
          "Software Mobile Testing Guide for a QA Engineer Introduction"
        ],
        "Body": [
          "What is mobile testing, and why is it important?",
          "What's the difference between Native vs. Web vs. Hybrid Apps?",
          "What are the Different Types of Mobile Devices?",
          "What the update/upgrade mobile testing is?",
          "Mobile App Installation and Uninstaltion testing tutorial",
          "Interrupt Testing in Mobile Application",
          "What versions of Android and iOS are currently in use on the market?",
          "Xcode Tutorial for Beginners",
          "Android Studio Tutorial for Beginners",
          "Mobile Testing Checklist",
          "Voice Over - iOS - Hands-On Guide to Screen Reader Compatibility testing",
          "TalkBack - Android - Hands-On Guide to Screen Reader Compatibility testing"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "A cup of coffee or other favorite drink should be prepared in advance",
        "It is better for \"Larks\" people to take this course in the morning, for \"Owl\" people - in the evening, respectively"
      ],
      "description": "Hi everyone. This course is about Mobile Software testing, testing which except general software testing types for both Web and Mobile testing, includes mobile-specific testing applicable only the mobile applications and websites and we explain them in detail to improve the work of a manual tester.\nThe course will be useful for testers:\n1. Absolute beginners in Software Testing who want to take the first steps in Mobile Software Testing\n2. Experienced software testers who want to recall the basic knowledge of Mobile Software Testing and learn something new in this topic.\nFor that reason, we prepared 3 things:\n1. We answer to the General question of the mobile testing:\nWhat mobile testing is and why it is important?\nWhat are the Different Types of Mobile Devices?\nWhat's the difference between Native vs. Web vs. Hybrid Apps?\nWhat versions of Android and iOS are currently in use on the market?\n2. Since mobile testing has its characteristics, second thing we have prepared an explanation of Mobile-specific testing and answers to the following questions:\nWhat are installation tests and uninstall tests?\nWhat is an updated test?\nWhat mobile interruption testing is?\nEach video of mobile-specific testing consists of several real-life examples, which show the most common bugs that the QA engineer might encounter during a specific type of testing.\nAlso, the course includes the Mobile Testing Checklist for each type of mobile testing.\n3. We have prepared an overview of Mobile testing tools, where we will answer the question:\nWhat mobile tools do you know?\nThen we will explain two popular mobile testing tools such as Android Studio for the Android platform and Xcode for the iOS platform, demonstrating several basic practical functions of these tools that testers can use in their work.\nWe hope you will enjoy the course and feel free to write reviews and opinions on which tools you would like to overview next, we will prioritize and add them to the full version of the course.\nPrepare a cup of coffee or another favorite drink and enjoy the course!\nHope to see you in the first lecture!",
      "target_audience": [
        "Absolute beginners in Software Testing",
        "Experienced software testers who want to recall the basic knowledge of Mobile Software Testing",
        "Anyone who wants to take the first steps in Mobile Software Testing",
        "Anyone who likes to watch videos about Software Testing and want to improve your testing"
      ]
    },
    {
      "title": "Automated Software Testing with TestCafe",
      "url": "https://www.udemy.com/course/automated-testing-with-testcafe/",
      "bio": "[2025 Edition] Learn TestCafe a great alternative to Cypress and Playwright - Complete Bootcamp from Beginner to Expert",
      "objectives": [
        "Master the powerful TestCafe framework from beginner to advanced and boost your skills and resume",
        "Build a robust automation framework using the best practices of the Page Objects Model",
        "Put your skills into practice with real-world end-to-end testing examples and challenging exercises",
        "Integrate your automation tests with CI/CD pipelines using Jenkins, and streamline your testing process for faster and more efficient releases",
        "Get exclusive access to professional tips, tricks, and best practices from industry experts, and stay ahead of the curve with the latest automation techniques",
        "Discover how to perform visual regression testing with Testcafe, and ensure your web applications look and perform as intended across different browsers",
        "Learn how to integrate TestCafe with popular BDD frameworks like CodeceptJS, and take your test automation to the next level",
        "Explore 3rd party integrations and take advantage of a wide range of tools and features to enhance your automation tests"
      ],
      "course_content": {},
      "requirements": [
        "To take this course, participants should have basic programming knowledge. Knowledge of Javascript is a great advantage",
        "Participants are required to have NodeJS installed",
        "Should also have access to a text editor, with VS Code being recommended"
      ],
      "description": "Welcome to the ultimate hands-on course for mastering web automation and testing using TestCafe—a fast, modern, and powerful alternative to Selenium! Whether you're aiming to sharpen your automated testing skills or build a successful career as a TestCafe automation engineer, you've landed in the perfect place.\nThis course is designed to be highly practical and beginner-friendly, packed with coding exercises and real-world projects from the very first lesson. You’ll learn how to install, configure, and manage multiple testing projects using TestCafe, while gaining a strong foundation in web automation. You'll dive into interacting with web elements through the TestCafe API, and develop skills for running cross-browser and headless tests with ease.\nWe’ll guide you step-by-step in implementing the widely-used Page Object design pattern, which helps structure your test code efficiently and maintainably—an essential practice for any automation professional.\nBut there's so much more in store! You’ll go beyond the basics to explore behavior-driven development (BDD) using TestCafe alongside popular tools like CodeceptJS and Cucumber. You’ll perform visual regression testing using the Percy library, and take a deeper dive into performance testing with powerful TestCafe extensions. We’ll also show you how to integrate your tests with Jenkins for continuous integration and build a robust, scalable testing pipeline.\nOther key topics include XPath usage, built-in reporting tools, and cloud-based testing using BrowserStack for executing tests on real devices and multiple browsers. Throughout the course, you’ll receive expert tips, best practices, and insider techniques from seasoned automation engineers.\nYou’ll also benefit from a supportive and interactive learning environment with a strong focus on community. Ask questions, share insights, and get help directly from your instructors or fellow learners. We’re here to make sure you’re never stuck or left behind.\nAnd to help you prepare for the job market, we’ve included valuable interview preparation content, so you’ll feel confident and ready to tackle automation roles head-on.\nIf you're serious about stepping up your automation skills with one of the most intuitive and powerful testing tools out there, enroll today and take the next big leap in your QA or development career. Let’s start your journey to becoming a confident and capable TestCafe automation expert!",
      "target_audience": [
        "Testers",
        "Test automation developers",
        "QA Engineers",
        "Software Developers",
        "QA Analysts",
        "QA Managers"
      ]
    },
    {
      "title": "Serenity Bdd - Selenium WebDriver, Cucumber, Jira, Jenkins",
      "url": "https://www.udemy.com/course/serenity-bdd-selenium-webdriver-cucumber-jira-jenkins/",
      "bio": "Learn How to Build and Enhance A Robust Functional Test Automation framework in BDD using Serenity,Selenium & Cucumber",
      "objectives": [
        "At the end of the course students will acquire all necessary skills and Confidence to implement a powerful Serenity BDD framework with help of Selenium, cucumber, Maven, Jenkins integrated framework from scratch and start developing a smart and very effective Automation Test Suites."
      ],
      "course_content": {},
      "requirements": [
        "This course would require students to have some basic programming knowledge and familiar on manual testing concepts. You need to have a strong willingness to new learn new tools and interesting concepts in functional Test automation space and a mindset to move from traditional automation frameworks and accept changes to a build a scalable yet robust Test Automation framework. Students should have A PC with windows OS with Admin rights and a decent internet to get started."
      ],
      "description": "This exciting journey covers Serenity BDD with Selenium WebDriver and the tests will be designed and implemented in BDD style using Cucumber JVM and smartly packaged and modeled in Page Factory Design pattern. We will cover Maven our “build manager “   illustrating step by step on adding dependencies,  setting profiles & goals, execution and reporting using solid plug-in’s.  The course covers Jenkins installation and setup  to trigger build execution ‘On Demand’ or On ‘Predefined time patterns’  and show how to expose the CI Jenkins allowing to trigger build’s with lot of parameters making it a combinatorial triggering build tool. We will also cover Jira and its 2 way integration with Serenity making the work flow state transitions seamless. The cool screen play framework where the entire execution in form of screen shots are embedded into serenity’s smart report with various filter/ options to view the execution and coverage across Manual, Automated tests against Jira stories effortlessly. I will also shed enough light on using the same framework to test REST services easily using RestAssured API.\nFYI/FYA>>\n@Learners : The 2 Way Jira Integration is fragile in the serenity new builds and once it is fixed by the community, I will post the video showcasing the set up. For Now the One way works where Jira tickets are pulled into the Serenity Report and displayed.\nWhat do you need to get started?\nAbsolutely willingness to new learn new tools and stuff and a mindset to change from traditional frameworks.\nA PC with windows OS with Admin rights and a decent internet.\nWhat do you need to know to learn the course effectively and what will finally YOU get ?\nThis course would require some basic programming skills and idea on manual testing. During the course, we will touch base on java basic concepts, WebDriver, Object Identification techniques, good design patterns and techniques like Page objects, best practices to implement Serenity framework with Cucumber BDD style tests using Gherkin for writing features and scenarios ( requirements) with a 2 Layer abstraction for ease and quick modelling of suites. We will run through real life examples using public hosted websites and test across browsers. I will show how to set up Maven for quick and painless maintenance of relevant jars and files required to create, maintain and execute the build with ease. We will show you how to set up Jenkins to trigger parameterized build and auto emailing of reports. More interestingly and new features like 2 way Jira integration for intelligent reporting , easy drillable and a comprehensive coverage of requirements effortlessly.\nAt the end of the course you will be easily able to implement this framework from scratch at your workplace or helps you to stay ahead in the automation race in terms of job search or career enhancement prospects. I will attach all the relevant source code and materials and do my best to make this fresh new journey an exciting and super informative.\nGood Luck!",
      "target_audience": [
        "This course is meant for both newbie’s who wants to move into software Test Automation field and for any functional Automation testers who wants to learn a new way to build a solid Test Automation Framework with Serenity tool. This course is not suitable for Learner's who are not interested in learning Functional Test Automation are advised not pursue this course."
      ]
    },
    {
      "title": "Learn Cucumber BDD with Java -MasterClass Selenium Framework",
      "url": "https://www.udemy.com/course/cucumber-tutorial/",
      "bio": "Step by Step Cucumber BDD Framework Tutorial with Java and implement Robust Selenium WebDriver Framework from scratch",
      "objectives": [
        "By end of this course , You will be able to develop Top class Cucumber BDD Selenium Test Framework from Scratch",
        "Understand how BDD(Behaviour driven development) approach works to write Scenarios for Test Automation",
        "Indepth understanding of Core Cucumber framework concepts like Dependency Injection, Parallel execution, CI/CD Integration",
        "Practical knowledge on Datadriven testing, Parameterizations, Resuable components, Cucumber hooks, tags & Attributes",
        "Generate HTML, XML, PDF, Extent reports with Cucumber with Screenshots attached on failure Scenarios",
        "Learn to develop Readable, Maintainable and Scalable framework using Cucumber and Selenium WebDriver by following Page Object Model design",
        "Understand Selenium Cucumber Frameworks using both Junit & TestNG Runners",
        "Learn Design Patterns & Best Practices to implement Loosely coupled tests in the Framework",
        "Learn how to Schedule your Framework tests in Jenkins CI/Cd with auto trigger regExpressions",
        "Learn supporting tools like Maven, Github and Jenkins",
        "Understand running Cucumber Scenarios in Parallel Mode using TestNG & Maven Junit"
      ],
      "course_content": {
        "Introduction and FAQ's on this Course": [
          "Introduction",
          "Course Syllabus -What you are going to Learn?",
          "What is Gherkin syntax and how it works",
          "Understand the Cucumber Scenarios Usage",
          "Notes for reference"
        ],
        "Setting up JAVA and Configuring Cucumber Project with all necessary Plugins": [
          "Important Player Tips for Best learning Experience:",
          "Install Java and configure in system variables in Windows & MAC",
          "Setting up Maven Eclipse Project and understand Project Structure",
          "Configure cucumber dependencies and Install Eclipse Cucumber Plugin"
        ],
        "PART 1 - Getting started with Cucumber Framework and its terminologies": [
          "Important Note on PART 1 Code files",
          "Understand the Terminologies used in Cucumber Automation Framework",
          "Generating Step Definition Implementation skeletons for Cucumber feature Steps"
        ],
        "PART 1 - Code reusability, Regex patterns and Parameterization of Tests": [
          "How to achieve reusability of code implementation in Cucumber Steps",
          "What is Cucumber Scenario outline? How to achieve Parameterization",
          "Importance of Regex Patterns in Step definition file in Cucumber framework"
        ],
        "PART 1 - Data driven testing with Cucumber Background Scenarios design": [
          "Data driven testing in Cucumber Framework from feature files",
          "What are Cucumber Tags and how they are helpful for selective tests execution",
          "Importance of Background keyword for Setup methods in Cucumber tests"
        ],
        "PART 1 -Cucumber Hooks, Reportings and addressing Common Framework Problems": [
          "What are Cucumber Hooks? Implement Setup and Teardown methods with hooks",
          "Reporting techniques available in Cucumber Framework from Test Runner",
          "How did we address the Common framework problems in Cucumber Framework"
        ],
        "Setup and Teardown for cucumber tests": [
          "Test your Knowledge",
          "Sample Selenium Cucumber Project",
          "Sample Appium Cucumber Project"
        ],
        "***Part 2****. - Framework - Inject Selenium tests in Cucumber skeleton": [
          "Framework Agenda- What will you learn? MUST WATCH",
          "Important Note on Selenium scope of discussion in this section",
          "Create and build Maven Project with selenium & cucumber dependencies",
          "Selenium Scenarios to automate with Cucumber Framework - Search product",
          "Create Cucumber StepDefinition , Features & Test Runner Skeleton files",
          "Build Selenium Code for end to end Scenario and inject into Stepdefinition files",
          "Assignment- Handling Child windows and add assertions to Selenium tests"
        ],
        "Part 2- Framework -Dependency Injection & Design Patterns for Cucumber Scenarios": [
          "Real time problems in breaking the step_definitions code into multiple files",
          "What is Cucumber dependeny injection? Cucumber PicoContainer use",
          "Importance of Single responsibility principle and loosely coupled classes",
          "Implement the Pageobject Pattern to drive the test objects from class files",
          "Page object implementation for offers page and driver object constructor",
          "Factory Design pattern implementation for creating Page objects with example"
        ],
        "Part 2- Framework -Build Test Utilities,Tags,Hooks Parameterization for Tests": [
          "Build Generic test utilities and pass driver in constructor from Context file",
          "How to create global properties file to drive browser and url properties",
          "Implement Cucumber Hooks to add Post condition steps for closing browser",
          "Parameterize the Selenium tests with multiple data sets using Scenario outline",
          "How to run Selenium Cucumber Scenarios parallely with TestNG runner annotations",
          "Assignment- Add new Selenium Feature file to place the product order",
          "Implement Assertions in Step definitions for new Selenium feature file",
          "Implement Tagging and Run all features files together in parallel mode"
        ]
      },
      "requirements": [
        "No BDD & Cucumber knowledge is required. I have explained everything from Scratch",
        "No Java knowledge is required. I have got you covered with dedicated section on Core java at the end of this course as optional learning",
        "Basic Selenium knowledge is good to have",
        "•Course includes real time projects with practical Solutions for the Robust Test Frameworks building"
      ],
      "description": "Course last Updated on May 3rd with Latest Cucumber Version 7 Framework Videos.\nSay Good bye in writing  hell lot of the code to develop  Automation Frameworks and welcome Cucumber BDD!\n\"Cucumber- A life saver tool for QA Industry in developing Test Frameworks with minimal programming knowledge..\nThis course helps you to build a top class BDD framework So that you can implement it for any Automation test cases developed in Selenium, Appium, Rest Assured API.\nOn course completion You will be Mastered in Selenium Cucumber BDD framework and can implement Successfully it in your work place for any automation test cases you have\nThis course is divided into 2 Parts.\nIn part 1 , You will get complete understanding of all Cucumber features and its framework functionalities which does not require any prerequisite. Below are the topics discussed in part 1\nUnderstand Gherkin Syntax\nUnderstand Cucumber Scenarios\nFeature files & Step Definition files\ncucumber Test Runner (Junit & TestNg)\nCucumber regular expressions\nCucumber tags & Background keyword\nCucumber Scenario outline for parameterization\nCucumber Datatables\nCucumber hooks\nTagged Hooks mechanism\nCucumber plugins\ncucumber reports\nCucumber attributes\nCucumber Parallel execution\n\n\nIn Part 2- We will inject Selenium code and develop end to end Cucumber Selenium Framework from Scratch. Below are the topics\nBuild Maven Project with all the framework dependencies\nDevelop End to end Selenium Web Scenarios in the feature file\nImplement TestNG /Junit Runner to run the framework\nUnderstand the Single responsibility principle to distribute the implementation into multiple Step definitions.\nImportance of Dependency injection to share the data between the Steps file\nUnderstand the Page object Pattern to drive the locators from page files\nImplement Factory Design pattern by writing PageObjectManager class to create objects of all PO classes\nHow driver can be configured and distributed across the files in the framework\nHow to run Cucumber Scenarios in Parallel Mode using Cucumber TestNG Runner\nBuild Test utilities for reusable Selenium methods\nImplement Cucumber Hooks to capture Screenshots on test failures\nImplement Cucumber Tags to run selected tests in the framework\nParameterizing the test data to run the Scenarios with multiple data sets\nCreating HTML & Extent reports to run Cucumber Selenium tests\nRunning tests in parallel mode and generate Extent reports with screenshots attached for failed Scenarios\nRun the cucumber tests using Maven & Command line options\nIntegrate the Framework to CI/CD Jenkins and Schedule the Jobs on regular time Interval\nCreate Parameterized Jenkin job to dynamically send the global properties at run time of Job execution\n\n\nAll the above topics are discussed from scratch level with lots of Practical examples for better understanding..\nWish you good Luck!",
      "target_audience": [
        "QA Aspirants, Automation testers, Beginners to IT , Freshers/Grauduates"
      ]
    },
    {
      "title": "Manual Testing Crash Course for Software Testers",
      "url": "https://www.udemy.com/course/manual-software-testing-learning/",
      "bio": "Specially designed course for SOFTWARE TESTER/QA/Test Engineers| JIRA & Agile realtime Implementation",
      "objectives": [
        "Software Manual Testing Concepts (Basic to Advance), Interview Questions with Best Practices",
        "Ready to attend and crack Experience Level Software Manual Testing interviews",
        "Practical working knowledge of JIRA from QA point of view, Will be ready to use JIRA for Bug Tracking & Task Management",
        "Practical exposer to Database Testing (using MySQL database) & Backend Testing using (Unix/Linux)",
        "Working exposer to API Testing using Postman Tool"
      ],
      "course_content": {
        "Introduction & Environment Setup": [
          "Introduction to Software Testing",
          "Types of Applications",
          "Levels of Testing",
          "Different Types of Mandatory Testing",
          "Bug Life Cycle"
        ]
      },
      "requirements": [
        "Basic understanding of need of Software Testing in IT industry",
        "Basic understanding about Role of Software Tester / QA professional"
      ],
      "description": "Software Testing Course: course includes Software Manual Testing (Basics & Advanced) concepts + Practical understanding of JIRA for Bug and Task Management + Agile Methodology, Database Testing( SQL) + Basics of API testing in very simple language and decent pace.\n\n\nHere you are going to get all mandatory sections which are required to become a expert Software Tester.\nHere you will also going to get basic information of mobile application manual testing, database testing, api testing, agile concepts and interview questions.\nThis software testing QA training course is designed by experts working professionals having 20+ yrs industry experience in a way that, it will progress from introducing you to the basics of software testing to advanced topics creating a test plan, Agile model, along with introduction and familiarity with Automation testing and test management tools JIRA and Postman.\n\nManual Testing Coverage:\n\n\nDifferent types of Software Testing ( Functional, Performance)\nAgile- Scrum Model (Real time usage and implementation)\nFunctional and Performance Testing.\nTest Case Designing with real-time scenario.\nRealtime Project Implementation.\nTesting Best Practices.\nBug Life Cycles in different scenario\nJIRA : For Bug Tracking & Task Management\nJIRA Setup for Practice for 7days\nBug Reporting by a Tester and end to end cycle.\nTask Management\nEnd to End Bug Life Cycle in JIRA\n\n\nDatabase Testing using SQL\nSetup Database for Practice\nWrite Basic Select Queries\nWrite Advance Select Queries\nJoins, Conditions, Grouping\nHow to use SQL for Database Testing\n\n\nAPI Testing using Postman\nWhat is API, Different types of API\nSetup postman for REST API testing\nTest GET | POST | PUT | DELETE Operations\nPractice Sets",
      "target_audience": [
        "Freshers/Professionals looking opportunity in Software testing",
        "BA/ Support or Other IT Professionals looking to start career as Software Tester"
      ]
    },
    {
      "title": "Software Testing Mastery 2025: QA Fundamentals to Expert",
      "url": "https://www.udemy.com/course/software-testing-mastery-courses/",
      "bio": "Learn Manual Testing Concepts, Test Case Writing, Bug Life Cycle, SDLC, STLC, and Real-Time Project Workflows – No Code",
      "objectives": [
        "Fundamentals of Software Testing",
        "Types Of software Testing, bug's & it's lifecycle",
        "How to plan & write test cases ?",
        "Software Testing Tools for 2023",
        "Real time software testing using Bugzilla",
        "How to find find defects in software?",
        "Different types of technics to test a software quality , security and portability",
        "Decision tables and data Flow",
        "What is defect score ,metrices , review process and responsibility as tester",
        "How to Effectively create test cases & execute using various methods",
        "Why Manuel testing is the base of software testing?",
        "Project management & test projects designing",
        "Freelancer Looking to upgrade their skills",
        "Bugzila & Other defect reporting tools",
        "Defect cluster in testing",
        "Advance tools for Manual Testing"
      ],
      "course_content": {},
      "requirements": [
        "No programming language required",
        "Basic knowledge of computer and application",
        "Student need to understand English language",
        "Developer can also Learn",
        "Need to have a stable internet connection",
        "Knolwdge of computers"
      ],
      "description": "Software Testing Mastery  2025: QA Fundamentals to Expert\n\n\nAre you ready to build a solid career in software testing — without writing a single line of code?\n\n\nWelcome to the Software Testing Mastery Course 2025 — your complete roadmap to mastering QA fundamentals, test case design, defect tracking, and SDLC/STLC concepts through manual testing only, yet taught at an industry-ready, expert level.\n\n\nWhen I started in software testing, I thought it was all about finding bugs . It’s not.\n\n\nIt’s about understanding how software is built, knowing where problems can hide, and making sure the end user gets a smooth experience.\n\n\nWhether you’re aiming for your first QA job, looking to strengthen your fundamentals, or trying to add testing expertise to your current role, this course will give you the skills, workflows, and confidence to work like an experienced tester.\n\n\nWe Keep This Course Updated:\n\n\nUpdated July 2025 – Added real-world bug reporting examples, Jira workflow demos, and AI-assisted test case generation.\n\n\nWhat You’ll Learn:\n\n\nComplete understanding of the Software Development Life Cycle (SDLC) and Testing Life Cycle (STLC)\n\n\nHow to write effective Test Cases, Test Scenarios, and create professional Test Reports\n\n\nMaster testing techniques: Black Box, White Box, Functional, Regression, Usability, and more\n\n\nLearn Bug Lifecycle, Severity vs. Priority, and tools for defect logging and tracking\n\n\nReal-world QA workflows used in Agile and Waterfall environments\n\n\nBasic exposure to Testing Tools (for Manual QA): JIRA, TestLink, Bugzilla\n\n\nHands-on assignments to test real applications, and document your results professionally\n\n\nThis course provides an introduction to the principles and practices of software testing. Topics covered include:\nThe software development life cycle (SDLC) and the role of testing in the SDLC\nDifferent types of software testing, such as unit testing, integration testing, system testing, and acceptance testing\nTesting techniques, such as black box testing, white box testing, and functional testing\nTest case design and execution\nTest automation\nSoftware quality assurance\n\n\nCourse Module Includes :\n\n\nModule 1: Introduction to Software Testing\nFundamentals of Software Testing\nImportance of Manual Testing in Software Development\nSoftware Development Life Cycle (SDLC) and Testing Phases\n\n\nModule 2: Test Planning and Documentation\nTest Strategy and Test Plan Creation\nTest Case Design Techniques\nTest Scenario Development\nTest Execution Planning\n\n\nModule 3: Functional Testing Techniques\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nIntegration Testing\nSystem Testing\n\n\nModule 4: Non-Functional Testing Techniques\nPerformance Testing Basics\nLoad Testing\nStress Testing\nUsability Testing\nCompatibility Testing\n\n\nModule 5: Defect Management\nDefect Life Cycle\nDefect Logging and Tracking\nSeverity and Priority of Defects\nDefect Reporting and Metrics\nModule 6: Regression Testing\nRegression Testing Strategies\nTechniques for Regression Test Selection\nRegression Test Automation vs. Manual Regression Testing\n\n\nModule 7: Test Execution and Reporting\nTest Execution Techniques\nTest Execution Logs and Reports\nTest Summary Reports\nMetrics and Measurement in Testing\n\n\nModule 8: Testing Tools and Environments\nOverview of Testing Tools for Manual Testing\nTest Environment Setup and Configuration\nTest Data Preparation and Management\n\n\nModule 9: Agile Testing Principles\nAgile Methodology Overview\nRole of Manual Testing in Agile Projects\nContinuous Integration and Continuous Testing\n\n\nModule 10: Best Practices and Career Guidance\nBest Practices in Manual Testing\nInterview Preparation Tips for Manual Testing Roles\nCareer Paths and Growth Opportunities in Software Testing\n\n\nWhy Learn From Me?\nI started as a manual tester on small projects with no formal QA training. I had to learn everything on the job — from writing my first test case to managing entire testing cycles.\nOver time, I worked with multiple teams, learned industry tools, and refined a practical testing process that works for real projects.\nNow, I teach the same approach so you can skip the trial-and-error phase and get job-ready faster.\n4.9 Rated courses across all Platforms\nEverything you’ll see here is based on real testing work, real bug reports, and real project workflows.\n\n\nIndustry-focused assignments & real-world use cases\n\n\nNo coding required — pure QA skills\n\n\nLearn at your own pace with lifetime access\n\n\n30-Day Money Back Guarantee – Risk Free\n\n\nWhat Students Are Saying:\n\n\n“I went from knowing nothing about testing to confidently applying for QA jobs.” – Ankit R.\n\n\n“The real-life bug reporting examples made everything click.” – Priya T.\n\n\nMoney-Back Guarantee We’re confident this course will empower you with skills to excel in software testing! Try it risk-free with our 30-day money-back guarantee—if you’re not satisfied, simply request a refund.\n\n\nIf you want to start a career in QA or strengthen your testing skills without getting lost in theory, this course will guide you step-by-step.\n\n\nEnroll today and master software testing from fundamentals to expert level.",
      "target_audience": [
        "professional Developer's & programmer",
        "Any It graduates want pursue career in IT field",
        "College Graduate",
        "Women's wants to switch their career in IT field",
        "Fresh engineering graduates",
        "Software trainees working in It field",
        "Anyone who wants to upskill or upgrade their career in It",
        "Marketing professionals",
        "Intern looking for a career as a software tester",
        "Housewife's who want to pursue career",
        "Any jobseeker looking for a job change",
        "No programming knowledge required",
        "Software Development Students",
        "IT Professionals Transitioning to Testing Roles",
        "Project Managers and Team Leads",
        "Freelancers and Consultants",
        "Software Testing Enthusiasts",
        "Entry-Level Software Testers"
      ]
    },
    {
      "title": "Selenium WebDriver & Java - Automation with Selenium [2020]",
      "url": "https://www.udemy.com/course/automation-testing-with-selenium-and-java-for-beginners/",
      "bio": "Selenium webdriver and Java. Learn Automation Testing with Selenium & Java. Build Automation - Selenium, Junit & TestNG.",
      "objectives": [
        "You will Learn Automation Testing using Selenium the MODERN WAY - Step By Step - With 200 HANDS-ON Code Examples",
        "You will Acquire ALL the SKILLS to demonstrate an EXPERTISE in Automation Testing using Selenium and Java in Your Job Interviews",
        "You will Solve a Wide Range of Hands-on Automation Testing EXERCISES with Java and Selenium",
        "You will Learn to WRITE Great Automation Tests with Selenium and Java",
        "You will Learn to SETUP New Automation Test Projects with JUNIT and TestNG",
        "You will Learn to Create Basic Automation Test FRAMEWORKS",
        "You will learn to use Selenium IDE and Katalon Studio to Record and Replay Automation Testing Scenarios",
        "You will learn to setup new automation projects with Selenium, Web Driver, JUnit and TestNG Frameworks",
        "You will learn some of the TestNG Advanced Features - XML Suite, Test Reports, Test Parameters and Parallel Execution",
        "You will learn the basics of HTML, CSS and XPath",
        "You will understand all Selenium Locators - By Id, By Name, By Link Text, By Partial Link Text, By Class, CSS Selectors and XPath Expressions",
        "You will learn to play with Form Elements - Text, TextArea, CheckBox , Radio Button, Select Box and Multi Select Box",
        "You will learn to write automation test for wide range of scenarios - Playing with Windows, Modal Windows (Sleep, Implicit Wait and Explicit Waits), Alert Boxes, Window Handles and New Browser Window Launches, Frames, Taking Screenshots, Executing JavaScript Code, Actions Interface to control mouse and keyboard",
        "You will learn to Set up Automation Testing Frameworks for Form Elements, Tables and Cross Browser Testing",
        "You will learn to write Data Driven Tests with Data Providers, CSV and Excel Spreadsheets",
        "You will learn to implement Page Object Model for a Complex Automation Test Scenario",
        "You will learn to parallelize and scale up Automation Tests with Selenium Standalone and Grid"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Automation Testing with Java and Selenium",
          "Git Repository URL",
          "How To Make Best use of the Course Guide?"
        ],
        "Installing Java": [
          "Step 01 - Installing JDK - with installation guide PDF",
          "Step 02 - Verifying Java and Jshell",
          "Step 03 - Troubleshooting Java installation",
          "Step 04 - Setting Path environment variable in Windows"
        ],
        "Introduction to Java Programming with Jshell using Multiplication Table": [
          "Step 00 - Getting Started with Programming",
          "Step 01 - Introduction to Multiplication Table challenge",
          "Step 02 - Launch JShell",
          "Step 03 - Break Down Multiplication Table Challenge",
          "Step 04 - Java Expression - An Introduction",
          "Step 05 - Java Expression - Exercises",
          "Step 06 - Java Expression - Puzzles",
          "Step 07 - Printing output to console with Java",
          "Step 08 - Printing output to console with Java - Exercise Statements",
          "Step 09 - Printing output to console with Java - Exercise Solutions",
          "Step 10 - Printing output to console with Java - Puzzles",
          "JShell Tip - Multiple Lines of Code",
          "Step 11 - Advanced Printing output to console with Java",
          "Step 12 - Advanced Printing output to console with Java - Exercises",
          "Step 13 - Introduction to Variables in Java",
          "Step 14 - Introduction to Variables in Java - Exercises and Puzzles",
          "Step 15 - 4 Important Things to Know about Variables in Java",
          "Step 16 - How are variables stored in memory?",
          "Step 17 - How to name a variable?",
          "Step 18 - Understanding Primitive Variable Types in Java",
          "Step 19 - Understanding Primitive Variable Types in Java - Choosing a Type",
          "Java Tip - String Contatenation",
          "Step 20 - Java Assignment Operator",
          "Step 21 - Java Assignment Operator - Puzzles on Increment, Decrement and Compoun",
          "Step 22 - Programming Tips : JShell - Shortcuts, Multiple Lines and Variables",
          "Step 23 - Java Conditionals and If Statement - Introduction",
          "Step 24 - Java Conditionals and If Statement - Exercise Statements",
          "Step 25 - Java Conditionals and If Statement - Exercise Solutions",
          "Step 26 - Java Conditionals and If Statement - Puzzles",
          "Step 27 - Java For Loop to Print Multiplication Table - Introduction",
          "Step 28 - Java For Loop to Print Multiplication Table - Exercise Statements",
          "Step 29 - Java For Loop to Print Multiplication Table - Exercise Solutions",
          "Step 30 - Java For Loop to Print Multiplication Table - Puzzles",
          "Step 31 - Getting Started with Programming - Revise all Terminology"
        ],
        "Introduction to Method with Multiplication Table": [
          "Step 00 - Section 02 - Methods - An Introduction",
          "Step 01 - Your First Java Method - Hello World Twice and Exercise Statements",
          "Step 02 - Introduction to Java Methods - Exercises and Puzzles",
          "Step 03 - Programming Tip - Editing Methods with JShell",
          "Step 04 - Introduction to Java Methods - Arguments and Parameters",
          "Step 05 - Introduction to Java Method Arguments - Exercises",
          "Step 06 - Introduction to Java Method Arguments - Puzzles and Tips",
          "Step 07 - Getting back to Multiplication Table - Creating a method",
          "Step 08 - Print Multiplication Table with a Parameter and Method Overloading",
          "Step 09 - Passing Multiple Parameters to a Java Method",
          "Step 10 - Returning from a Java Method - An Introduction",
          "Step 11 - Returning from a Java Method - Exercises",
          "Step 99 - Methods - Section Review"
        ],
        "Introduction to Java Platform": [
          "Step 00 - Section 03 - Overview Of Java Platform - Section Overview",
          "Step 01 - Overview Of Java Platform - An Introduction - java, javac, bytecode an",
          "Step 02 - Java Class and Object - First Look",
          "Step 03 - Create a method in a Java class",
          "Step 04 - Create and Compile Planet.java class",
          "Step 05 - Run Planet calss with Java - Using a main method",
          "Step 06 - Play and Learn with Planet Class",
          "Step 07 - JDK vs JRE vs JVM"
        ],
        "Introduction to Eclipse - First Java Project": [
          "Step 00 - Installing Eclipse",
          "Step 01 - Creating a New Java Project with Eclipse",
          "Step 02 - Your first Java class with Eclipse",
          "Step 03 - Writing Multiplication Table Java Program with Eclipse",
          "Step 04 - Adding more methods for Multiplication Table Program",
          "Eclipse Tip - Save Actions",
          "Step 05 - Programming Tip 1 : Refactoring with Eclipse",
          "Step 06 - Programming Tip 2 : Debugging with Eclipse",
          "Step 07 - Programming Tip 3 : Eclipse vs JShell - How to choose?"
        ],
        "Introduction To Object Oriented Programming": [
          "Step 00 - Introduction to Object Oriented Programming - Section Overview",
          "Step 01 - Introduction to Object Oriented Programming - Basics",
          "Step 02 - Introduction to Object Oriented Programming - Terminology - Class, Obj",
          "Step 03 - Introduction to Object Oriented Programming - Exercise - Online Shoppi",
          "Step 04 - Create Motor Bike Java Class and a couple of objects",
          "Step 05 - Exercise Solutions - Book class and Three instances",
          "Step 06 - Introducing State of an object with speed variable",
          "Step 07 - Understanding basics of Encapsulation with Setter methods",
          "Step 08 - Exercises and Tips - Getters and Generating Getters and Setters with E",
          "Step 09 - Puzzles on this and initialization of member variables",
          "Step 10 - First Advantage of Encapsulation",
          "Step 11 - Introduction to Encapsulation - Level 2",
          "Step 12 - Encapsulation Exercises - Better Validation and Book class",
          "Step 13 - Introdcution to Abstraction",
          "Step 14 - Introduction to Java Constructors",
          "Step 15 - Introduction to Java Constructors - Exercises and Puzzles",
          "Step 16 - Introduction to Object Oriented Programming - Conclusion"
        ],
        "Primitive Data Types And Alternatives": [
          "Step 00 - Primitive Data Types in Depth - Section Overview",
          "Step 01 - Basics about Java Integer Data Types - Casting, Operators and More",
          "Step 02 - Java Integer Data Types - Puzzles - Octal, Hexadecimal, Post and Pre i",
          "Step 03 - Java Integer Data Types - Exercises - BiNumber - add, multiply and dou",
          "Step 04 - Java Floating Point Data Types - Casting , Conversion and Accuracy",
          "Step 05 - Introduction to BigDecimal Java Class",
          "Step 06 - BigDecimal Puzzles - Adding Integers",
          "Step 07 - BigDecimal Exercises - Simple Interest Calculation",
          "Step 08 - Java Boolean Data Type - Relational and Logical Operators",
          "Step 09 - Java Boolean Data Type - Puzzles - Short Circuit Operators",
          "Step 10 - Java Character Data Type char - Representation and Conversion",
          "Step 11 - Java char Data Type - Exercises 1 - isVowel",
          "Step 12 - Java char Data Type - Exercises 2 - isDigit",
          "Step 13 - Java char Data Type - Exercises 3 - isConsonant, List Upper Case and L",
          "Step 14 - Primitive Data Types in Depth - Conclusion"
        ],
        "Conditionals": [
          "Step 00 - Conditionals with Java - Section Overview",
          "Step 01 - Introduction to If Else Statement",
          "Step 02 - Introduction to Nested If Else",
          "Step 03 - If Else Statement - Puzzles",
          "Step 04 - If Else Problem - How to get User Input in Java?",
          "Step 05 - If Else Problem - How to get number 2 and choice from user?",
          "Step 06 - If Else Problem - Implementing with Nested If Else",
          "Programming Tip - CodingBat dot Com",
          "Step 07 - Java Switch Statement - An introduction",
          "Step 08 - Java Switch Statement - Puzzles - Default, Break and Fall Through",
          "Step 09 - Java Switch Statement - Exercises - isWeekDay, nameOfMonth, nameOfDay",
          "Eclipse Tip - Ctrl or Cmd + 1",
          "Step 10 - Java Ternary Operation - An Introduction",
          "Step 11 - Conditionals with Java - Conclusion"
        ],
        "Loops": [
          "Step 00 - Java Loops - Section Introduction",
          "Step 01 - Java For Loop - Syntax and Puzzles",
          "Step 02 - Java For Loop - Exercises Overview and First Exercise Prime Numbers",
          "Step 03 - Java For Loop - Exercise - Sum Upto N Numbers and Sum of Divisors",
          "Step 04 - Java For Loop - Exercise - Print a Number Triangle",
          "Eclipse Tip - Templates - sysout, main, fore, ifelse",
          "Step 05 - While Loop in Java - An Introduction",
          "Step 06 - While Loop - Exericises - Cubes and Squares upto limit",
          "Step 07 - Do While Loop in Java - An Introduction",
          "Step 08 - Do While Loop in Java - An Example - Cube while user enters positive n",
          "Step 09 - Introduction to Break and Continue",
          "Step 10 - Selecting Loop in Java - For vs While vs Do While"
        ]
      },
      "requirements": [
        "You should have the ability to learn while having fun!",
        "Connectivity to Internet to download various tools listed below",
        "We will help you install Selenium IDE, Katalon Studio, Brackets, Java, NodeJs and Eclipse.",
        "Oracle Solaris or 64 bit Microsoft Windows or Linux or macOS",
        "Java 9+ does NOT work on 32 bit Microsoft Windows! You would need a 64 bit Microsoft Windows if you would want to use Windows.",
        "We will help you download all needed dependencies using Maven and NPM"
      ],
      "description": "Zero Java Programming Experience? No Problem.        Zero Automation Experience? No Problem.\nDo you want to become a Great Programmer with Java? Do you want to become a Great Automation Tester with Selenium? Do you want to learn to setup New Automation Test Projects with Junit, TestNG and Selenium Webdriver? Do you want to learn Creating Automation Test Frameworks?  Look No Further!\n\n\nJava ?   Yes.    Junit ?   Yes.       TestNG ?   Included.   Selenium 3 ? Yes.\nSelenium Advanced Test Scenarios ?  Of Course.\nSelenium Standalone and Grid ?         Yes.\nData Driven Tests ?  Yes.\nPage Object Model ?  Included.\nBuild Automation Frameworks ? Yes.\nCross Browser Automation Testing? Yes. Of Course.\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS - This course is very good. The instructor explains things clearly and provides lots of examples. Highly recommended. easy exercises and several examples!\n5 STARS - This course was amazing. It was very indepth look at Java and automation testing. I was a beginner automation test engineer but there are quite a few things that I will be using on my next automation project.\n5 STARS - I am able to understand it very quickly as voice and pronunciation is very clear. Also the instructor is very experienced in his topic.\n5 STARS - Excellent Course for Beginners -  A right place to begin learning Selenium with Java.\n5 STARS - Very detailed, easy to follow.\n5 STARS - It is awesome.\n\n\n\n\nCOURSE OVERVIEW\nWriting Your First Automation Test with Java and Selenium Webdriver is a lot of fun.\nJava is one of the most popular programming languages. Java offers both object oriented and functional programming features. Selenium can be used for screen scraping and automating repeated tasks on browser.\nIn this course, you will learn Programming with Java and Automation Testing with Selenium.\nWe take a Hands-on Approach using Eclipse as an IDE to illustrate more than 200 Java Coding Exercises, Puzzles and Code Examples. We will also write more than 100 Selenium Automation Tests with Java for a wide variety of scenarios.\nIn more than 350 Steps, we explore the most important Java Programming Features and Selenium Automation Testing Scenarios\nBasics of Java Programming - Expressions, Variables and Printing Output\nUsing Selenium IDE and Katalon Studio to Record and Replay Automation Testing Scenarios\nLearn the basics of Selenium Webdriver\nExporting Automation Tests and Setting up new Maven Project for JUnit and TestNG\nTestNG vs JUnit\nTestNG Advanced Features - XML Suite, Test Reports, Running Tests with Parameters defined in XML and Running Tests in Parallel\nBasics of HTML, CSS and XPath\nSelenium Locators - By Id, By Name, By Link Text, By Partial Link Text, By Class, CSS Selectors and XPath Expressions\nSetting and Reading values from Form Elements - Text, TextArea, CheckBox , Radio Button, Select Box and Multi Select Box\nAdvanced Selenium Automation Testing Scenarios - Playing with Windows, Modal Windows (Sleep, Implicit Wait and Explicit Waits), Alert Boxes, Window Handles and New Browser Window Launches, Frames, Taking Screenshots, Executing JavaScript Code, Actions Interface to control mouse and keyboard\nSet up Automation Testing Frameworks - Tables\nImportant Interfaces - WebDriver\nIntroduction to Cross Browser Automation Testing, Headless Testing and Setting up a Basic Cross Browser Automation Testing Framework\nWriting Data Driven Testing with Data Providers, CSV and Excel Spreadsheets\nImplementing Page Object Model for a Complex Test Scenario\nScaling up with Selenium Standalone and Grid\nJava Operators - Java Assignment Operator, Relational and Logical Operators, Short Circuit Operators\nJava Conditionals and If Statement\nMethods - Parameters, Arguments and Return Values\nAn Overview Of Java Platform - java, javac, bytecode, JVM and Platform Independence - JDK vs JRE vs JVM\nObject Oriented Programming - Class, Object, State and Behavior\nBasics of OOPS - Encapsulation, Abstraction, Inheritance and Polymorphism\nBasics about Java Data Types - Casting, Operators and More\nJava Built in Classes - BigDecimal, String, Java Wrapper Classes\nConditionals with Java - If Else Statement, Nested If Else, Java Switch Statement, Java Ternary Operator\nLoops - For Loop, While Loop in Java, Do While Loop, Break and Continue\nJava Array and ArrayList - Java String Arrays, Arrays of Objects, Primitive Data Types, toString and Exceptions\nJava Collections - List Interface(ArrayList, LinkedList and Vector), Set Interface (HashSet, LinkedHashSet and TreeSet), Queue Interface (PriorityQueue) and Map Interface (HashMap, HashTable, LinkedHashMap and TreeMap() - Compare, Contrast and Choose\nGenerics - Why do we need Generics? Restrictions with extends and Generic Methods, WildCards - Upper Bound and Lower Bound.\nIntroduction to Exception Handling - Your Thought Process during Exception Handling. try, catch and finally. Exception Hierarchy - Checked Exceptions vs Unchecked Exceptions. Throwing an Exception. Creating and Throwing a Custom Exception - CurrenciesDoNotMatchException. Try with Resources - New Feature in Java 7.\nYou will be using Eclipse and Brackets as the IDE. You will be using Maven, npm (Dependency Management), TestNG (XML Test Suite, Parallel, Multiple Browsers), JUnit, Selenium IDE, Katalon Studio, Selenium Standalone and Selenium Grid. We will help you set up each one of these.\n\n\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "You want to learn Programming",
        "You want to learn Automation Testing",
        "You want to learn how Selenium Web Driver Works",
        "You are a beginner and want to explore Java further",
        "You want to learn the basics of Object Oriented Programming with Java",
        "You want to learn the basics of Functional Programming with Java",
        "You want to write great Automation test for your web applications in Java"
      ]
    },
    {
      "title": "Banking Domain And Payments - Bootcamp",
      "url": "https://www.udemy.com/course/bankingfundamentals/",
      "bio": "Retail Banking, Corporate banking, Treasury Operation and Payments",
      "objectives": [
        "Will be able to design/test/develop banking softwares more efficiently.",
        "Financial System",
        "Financial Institutions",
        "Types of Financial Institution",
        "Financial Services",
        "Financial Instrument",
        "Credit Unions, Bank, S&P",
        "Basics of Banking",
        "Deposit and Loans",
        "Account types",
        "Credit Process",
        "EFT",
        "ACH",
        "Payments",
        "CTS",
        "Corporate Banking",
        "Retail Banking",
        "US Banking"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction of Financial system": [
          "Financial System",
          "Financial Institutions",
          "Depository Institutions",
          "Saving Banks and Co-operative Banks",
          "Credit Unions",
          "Testing time !!!!",
          "Saving and Loans Associations",
          "Commercial Banks",
          "Non-depository Institutions",
          "Financial Markets",
          "Financial Services",
          "Financial Instruments",
          "Credit Unions Vs Banks",
          "Credit/Deposit Creation",
          "Credit/Deposit Creation( Important Note)",
          "Assignment on Financial System"
        ],
        "Basics of Banking": [
          "What is bank",
          "Correction in lecture:: What is bank",
          "Central Bank",
          "Who is bank's customer",
          "Account opening and AML/KYC",
          "CIF",
          "Types of customer accounts (Part 1)",
          "Types of customer accounts (Part 2)",
          "Types of customer accounts (Part 3)",
          "Types of customer accounts(Part 4)",
          "Deposit Account type and Operations",
          "Correspondent Banking Model",
          "Assignment :: Basics of Banking"
        ],
        "Cheque/Check Clearing System": [
          "Magnetic Ink Character Recognition (MICR)",
          "Cheque Truncation System (CTS)",
          "Cheque Clearing System Assignment"
        ],
        "Retail Banking": [
          "Credit Scoring",
          "Lending against securities"
        ],
        "Break : : Your view and opinion about modules of banking applications": [
          "Essential Modules of banking application"
        ],
        "Understanding Banking Software terminologies with real time use case": [
          "Introduction",
          "Modules of our sample Product",
          "Detailed requirement of our sample Product"
        ],
        "Corporate Banking": [
          "What is Corporate banking",
          "Credit policy"
        ],
        "Articles": [
          "ACH Payments"
        ]
      },
      "requirements": [
        "No prior knowledge is required as everything is covered from the scratch"
      ],
      "description": "This course covers fundamental of banking and payments.\nThis will also help you in understanding the infrastructure of banking system.\nThis course will equip you with the concept of banking including retail banking, corporate banking and treasury operations.\nThis course starts from basic building block of financial institutions and explains you the each and every function of financial institutions including banking terminologies.\nIn this course you will learn:\n\n\nRetail banking\n\n\nCorporate Banking\n\n\nFinancial System\n\n\nFinancial Institution\n\n\nFinancial Market\n\n\nFinancial Instrument\n\n\nFinancial Services.\n\n\nCredit Union\n\n\nCredit/Deposit Creation\n\n\nUS banking regulations\n\n\nClearing and Settlement\n\n\nCTS\n\n\nAccount types and account opening process\nThis course is not just focusing on Financial system of any country but its giving you an overview how financial system as a whole works in any country. And what are the basics of Financial system which gets utilised in any countries payment or banking infrastructure. We have also given you chance to students to provide details of their countries financial system. This will help you to research more about your countries Financial system and also provide you the opportunity to learn more about other countries banking and payment system. I hope you will like this course and learn more about banking and finance infrastructure.This course is not just focusing on Financial system of any country but its giving you an overview how financial system as a whole works in any country. And what are the basics of Financial system which gets utilised in any countries payment or banking infrastructure. We have also given you chance to students to provide details of their countries financial system. This will help you to research more about your countries Financial system and also provide you the opportunity to learn more about other countries banking and payment system. I hope you will like this course and learn more about banking and finance infrastructure.",
      "target_audience": [
        "Software tester/QA/BA/PM/TL who are working in banking domain/Fintech or wants to work in banking domain",
        "Anyone who wants to learn about Banking domain and payments"
      ]
    },
    {
      "title": "Automated Software Testing with Playwright",
      "url": "https://www.udemy.com/course/automated-software-testing-with-playwright/",
      "bio": "Learn Playwright an open source testing framework from Microsoft and the best alternative to Cypress - 13 000+ students",
      "objectives": [
        "Master the powerful Microsoft Playwright framework from beginner to advanced developer",
        "Build a robust automation framework using the best practices of the Page Objects Model",
        "Put your skills into practice with real-world end-to-end testing examples and challenging exercises",
        "Learn how to use Playwright for REST API testing and web scraping, and expand your automation capabilities beyond web UI testing",
        "Integrate your automation tests with CI/CD pipelines using Jenkins, and streamline your testing process for faster and more efficient releases",
        "Discover how to perform visual regression testing with Playwright, and ensure your web applications look and perform as intended across different browsers",
        "Get exclusive access to professional tips, tricks, and best practices from industry experts, and stay ahead of the curve with the latest automation techniques",
        "Explore 3rd party integrations with popular test runners, and take advantage of a wide range of tools and features to enhance your automation tests",
        "Learn how to integrate Playwright with popular BDD frameworks like Cucumber and CodeceptJS, and take your test automation to the next level",
        "Discover why Playwright is the next generation framework that surpasses Selenium and Cypress in terms of speed, reliability, and ease of use"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Why Playwright?",
          "Project Setup"
        ],
        "Mastering the Playwright Basics": [
          "First Playwright Test",
          "Playwright CLI Options",
          "Click on Element",
          "Selectors",
          "Note for the next lesson Working with inputs",
          "Working with Inputs",
          "Assertions",
          "Annotations",
          "Tagging",
          "Playwright Configuration",
          "Reporters",
          "Screenshots",
          "Before & After Hooks",
          "Custom Functions",
          "Node Scripts",
          "Playwright Inspector",
          "Artifacts on Fail",
          "Parallel Tests Execution",
          "Playwright Fundamentals Quiz",
          "Source Code"
        ],
        "End-to-End Testing Project": [
          "Section Introduction",
          "Create E2E Tests Config",
          "E2E Test - Login / Logout Flow",
          "SSL Certificate Error fix",
          "E2E Test - Feedback Form",
          "E2E Test - Search",
          "E2E Test - Transfer Funds",
          "E2E Test - Filter Transactions",
          "E2E Test - Payment",
          "E2E Test - Currency Exchange [Challenge Time]",
          "Source Code"
        ],
        "Modern Page Object Model: Scalable Architecture": [
          "What is Page Objects Model?",
          "Create Page Model Class for Login",
          "Implement Page Model to Login Test",
          "Create Page Model for Home Page",
          "Implement Page Model to Search Test",
          "Feedback Form Test Refactoring",
          "Login Functionality Refactoring",
          "Components",
          "Implement Page Model for Payment Test",
          "Advanced: Abstract Page",
          "Project Code Clean Up",
          "Source Code"
        ],
        "Visual Regression Testing": [
          "Create Visual Tests Configuration",
          "Full Page Snapshots",
          "Single Element Snapshots",
          "Page Objects Model with Snapshots",
          "Update Snapshots",
          "EXTRA: Node Scripts",
          "EXTRA: Percy.io Guide",
          "Source Code"
        ],
        "REST API Testing": [
          "Section Introduction",
          "API Tests Configuration",
          "Simple API Test",
          "Parse Response JSON Data",
          "GET Request Test",
          "POST Request Test",
          "PUT Request Test",
          "DELETE Request Test",
          "REST API Testing Quiz",
          "Source Code"
        ],
        "Playwright UI Mode": [
          "in progress.."
        ],
        "Automate Everything: CI / CD Integration": [
          "Download Jenkins Server",
          "Run Jenkins Server",
          "Create Jenkins Build",
          "Parameterized Jenkins Build",
          "Jenkins Server Node Script"
        ],
        "Pro-Level Playwright: Speed, Stability & Smart Hacks": [
          "Test Info Object",
          "Skip Browser Annotation",
          "Fixme Annotation",
          "Retries",
          "Parametrized Tests",
          "Mouse Movement Simulation",
          "Multiple Browser Pages",
          "Device Emulation",
          "Generate PDF Files",
          "Generate Customized Screenshots",
          "Emulate Browser Language & Timezone",
          "Data Helpers - Get Random Number",
          "Data Helpers - Get Random String"
        ],
        "Beautiful Custom Reports: Impress Teams & Stakeholders": [
          "Create Custom Reporter",
          "Source Code"
        ]
      },
      "requirements": [
        "To take this course, participants should have basic programming knowledge. Knowledge of Javascript is a great advantage",
        "Participants are required to have NodeJS installed",
        "Should also have access to a text editor, with VS Code being recommended"
      ],
      "description": "Master Web Automation with Playwright – Fast, Practical, and Powerful!\nReady to learn Playwright, the world's top non-Selenium web automation framework? This hands-on course gets you coding real-world tests from the very first lesson — no boring theory. All you need is NodeJS, a code editor, and basic JavaScript or TypeScript skills.\nYou'll quickly master Playwright essentials: setting up projects, automating web interactions, building powerful E2E tests, handling REST APIs, and working with real-world systems. We'll also cover advanced features like parallel execution, API mocking, third-party integrations, and practical automation patterns used by top QA teams.\nLearn how to implement the Page Object Model, a key industry standard, and dive into behavior-driven development with Playwright using CucumberJS and CodeceptJS. Plus, get hands-on with pro-level skills like custom reporting, visual regression testing, CI/CD pipelines with Jenkins, and advanced web scraping.\nAlong the way, you’ll pick up expert tips, insider best practices, and see why Playwright is quickly overtaking Cypress, Selenium, TestCafe, and Puppeteer. Stuck? No worries — you'll have full support from the instructor and a thriving student community ready to help.\nDon't just learn Playwright — master it. Enroll now and start building world-class automation projects today!\nNew content is added and updated whenever new Playwright features are released.",
      "target_audience": [
        "Manual Testers",
        "Automation Testers",
        "QA Engineers",
        "QA Architects",
        "QA Managers",
        "Software Developers"
      ]
    },
    {
      "title": "Automated Test Framework : ServiceNow",
      "url": "https://www.udemy.com/course/automated-test-framework-servicenow/",
      "bio": "Automated Test Framework",
      "objectives": [
        "Automation testing of Servicenow Applications",
        "ATF servicenow"
      ],
      "course_content": {
        "Overview of Automated Test Framework": [
          "Overview of Automated Test Framework"
        ],
        "Key Components of Automated Test Framework": [
          "Key Components of Automated Test Framework",
          "Key Components of Automated Test Framework Quiz"
        ],
        "Creation of Developer Instance": [
          "Creation of Developer Instance"
        ],
        "Enabling of Test Case & Suite Execution & Form layout Test Case": [
          "Enabling of Test Case & Suite Execution & Form layout Test Case",
          "Enabling of Test Case & Suite Execution & Form layout Test Case Quiz"
        ],
        "Step Configurations": [
          "Types Of Step Configurations",
          "Category : Form : Open a Form",
          "Form - Open a new Form Quiz",
          "Category : Form : Open an existing form",
          "Form - Open an existing form quiz",
          "Category : Form : Set Field Values",
          "Form - Set field values Quiz",
          "Category : Form : Field Values Validation",
          "Form - Field values Validation Quiz",
          "Category : Form : Field State Validation",
          "Form - Field State Validation Quiz",
          "Category : Form : UI Action Visibility",
          "Category : Form : Add Attachments to the Form",
          "Category : Form : Click on UI Action & Submit the form",
          "Form - UI Action Visibility Quiz",
          "Category : Service Catalog : Open a Catalog Item",
          "Category : Service Catalog : Open a Record Producer",
          "Category : Service Catalog - Set Variable values",
          "Category : Service Catalog : Variable Value & State Validation",
          "Category : Service Catalog : Set, add & order",
          "Category : Service Catalog : Submit the record producer",
          "Service Catalog Quiz",
          "Category : Server : Create a User & Impersonate",
          "Category : Server : Record insert",
          "Category : Server : Record Update",
          "Category : Server : Record query, validate & Delete",
          "Category : Server : Search for catalog item",
          "Category : Server : Checkout cart & add attachments",
          "Server Quiz",
          "Category : Application Navigator",
          "Application Navigator Quiz",
          "Category : SP : Open & Submit a catalog item",
          "Category : SP : Open, Set values & submit the RP",
          "Category : SP : Validate Variable values, State & add item to shopping cart",
          "Category : SP : multi row & set Quantity",
          "Category : SP : Order Guide",
          "Service Catalog in Service Portal Quiz",
          "Category : Custom UI",
          "Custom UI Quiz",
          "Category : Reporting",
          "Category : Responsive Dashboards",
          "Reporting & Responsive Dashboards",
          "Category : L & RL : Validate related list visibility",
          "Category : L & RL : Apply a Filter",
          "Category : L & RL : Validate record visibility in a list",
          "Category : L & RL : Open a record from the List",
          "Category : L & RL : UI Action",
          "List and Related List Quiz",
          "Category : Email : Generate Inbound Email, Reply Email & Random String",
          "Category : Email : Validate Outbound email generated by Notification",
          "Category : Email : Validate Outbound Email generated by Flow",
          "Category : Email : Validate Outbound Email",
          "Email Quiz",
          "Category : Forms in Service Portal"
        ],
        "Test templates": [
          "Test templates",
          "Test Templates Quiz"
        ],
        "Creation of Test Suites": [
          "Creation of Test Suites",
          "Test Suites Quiz"
        ],
        "Test Schedules": [
          "Test Schedules",
          "Test Schedules Quiz"
        ],
        "Parameterized Test": [
          "Parameterized Test",
          "Parameterized Test Quiz"
        ],
        "Parallel Testing": [
          "Parallel Testing"
        ]
      },
      "requirements": [
        "Developer Instance"
      ],
      "description": "ATF is a platform-wide, global feature of ServiceNow.\nAutomated Test Framework focuses to automate most of the manual testing as much as possible.\nCreation and execution of automated tests in ServiceNow instance can be performed by a person with any scripting knowledge.\nATF helps in reducing the manual efforts in test execution.\nTest execution can be scheduled to be run on a specified time frame with minimal manual intervention.\nScheduled Test results are shared by email to respective recipients.\n\n\nCourse Outcome :\nOverview of ServiceNow ATF\nTest Suite\nTests\nTest Steps/Step Configuration\nTest Templates\nTest Schedules\nStep Configurations\nForms\nForms in Service Portal\nApplication Navigator\nService Catalog in Service Portal\nCustom UI\nList and Related Lists\nService Catalog\nResponsive Dashboards\nServer\nReporting\nManual Page Inspector\nParameterized Testing\nMutually exclusive Tests\nParallel Testing\nCopy of Test Case & Test Suite\nCreation of Custom step Configuration\nQuick Start Tests\nData Retention Policy\nApplication Areas\nReal Time Use Cases",
      "target_audience": [
        "Servicenow QA professionals"
      ]
    },
    {
      "title": "ISTQB Foundation Level V4.0 chapter-wise exams",
      "url": "https://www.udemy.com/course/istqb-foundation-level-2018-syllabus-exams/",
      "bio": "Sample exams to practice for the V4.0 ISTQB Foundation level new syllabus exam",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Why should you choose these sample exams?\nDuring my career, I have helped more than 50,000 students to prepare for different ISTQB exams. I'm also certified in  9 different ISTQB certificates. That's why I can guarantee you that this course will help you in passing the exam. If you have any question, don't hesitate to contact me.\n\n\nIf you decide to buy this course, then I can guarantee you the following:\n1-All questions in these sample exams are solved correctly, there are no questions with wrong answers\n2-All questions are based on the new Syllabus V4.0\n3-A dedicated member from my team will answer any question you have in the course\n\n\nThese are some of the reviews of the students who used these sample exams to prepare for the exam:\n\n\n\"The sample questions cover almost each module of the syllabus. This helped in gaining confidence about my understanding of each topic in the syllabus.\"\nBlessy Devassy\n\n\n\"Happy to say that i passed the exam with 83% pass mark.Practicing these exams were huge help for passing the exam.The instructor did a good effort on making these questions especially chapter 4 questions.\"\nAnjaly Nair\n\n\n\"Almost 75-80% questions in my exams were from this course. Although wording were different but questions were almost same. Thank you sir\"\nArif Bangash\n\n\n\"This course helped me a lot, I have passed my exam with 95%. So big thank you.\"\nGjoko Parlapanov\n\n\n\"Hi, thanks to this course I passed the ISTQB exam at 71%. These sample exams gave me a better understanding and confidence. I would like to recommend it to everyone who's gone through ISTQB Syllabus 2018 and would like to check the knowledge. Thank you, Tarek for your effort.\"\nKarolina Sobczak",
      "target_audience": [
        "Beginners",
        "Software Testers",
        "Software Engineers"
      ]
    },
    {
      "title": "TestNG Complete Bootcamp For Beginners - Novice To Ninja",
      "url": "https://www.udemy.com/course/testng-complete-bootcamp/",
      "bio": "A-Z guide for learning TestNG Framework (Next Generation) to speed up your automation goals",
      "objectives": [
        "***** At the end of this course, you will have detailed understanding of TestNG Testing Frameworks",
        "You will be able to design a Testing Frameowork using capabilities provided by TestNG Testing Framework",
        "*** In-depth understanding of TestNG Framework's annotations",
        "***** We have 10 dedicated INSTRUCTORS to help you with queries within 24 HOURS, resume preparation, Interview questions",
        "***** You will have excellent command using features like Parallel Test Execution",
        "You will have complete understanding of reading parameters from XML files",
        "***** You will learn how to run the same test method with multiple sets of data",
        "You will be able to implement Custom Listener Class using TestNG Listeners"
      ],
      "course_content": {
        "Introduction": [
          "Course Outcome *** MUST WATCH ***",
          "Instructor Introduction",
          "How To Reach Me Anytime? *** MUST WATCH ***"
        ],
        "Java Environment Setup": [
          "Java Overview And Version Selection",
          "Java Install And Setup - Mac",
          "Java Install And Setup - Windows",
          "Install Eclipse - Windows",
          "Eclipse Installation - Mac"
        ],
        "TestNG Setup": [
          "Introduction",
          "TestNG Setup",
          "How To Add TestNG JavaDoc"
        ],
        "TestNG Annotations And Asserts": [
          "First TestNG Class - Test Annotation",
          "TestNG Asserts",
          "TestNG Soft Asserts",
          "Method And Class Annotations",
          "Running A Test Suite",
          "BeforeSuite And AfterSuite Annotations",
          "BeforeTest And AfterTest Annotations"
        ],
        "TestNG Advanced Features": [
          "Prioritizing Test Methods In A Desired Sequence",
          "How To Group Test Methods - Part 1",
          "How To Group Test Methods - Part 2",
          "Understanding Dependent Test Methods",
          "How To Disable And Timeout Test Methods",
          "How To Preserve Order Of Execution"
        ],
        "TestNG Parameters And Parallel": [
          "How To Provide Parameters To Test Methods",
          "How To Run Tests In Parallel",
          "DataProviders - Part 1",
          "DataProviders - Part 2"
        ],
        "TestNG Listeners": [
          "ITestResult Interface",
          "IInvokedMethodListener",
          "ITestListener",
          "ISuiteListener",
          "TestNG Listeners - Code Refactoring"
        ],
        "TestNG Reporter Logs and HTML Reports": [
          "TestNG Reporters And Logs"
        ],
        "Conclusion": [
          "Parallel Execution in Selenium WebDriver Automation",
          "Parallel Test Execution - Selenium WebDriver Practical Example",
          "Bonus: Special Discount Selenium WebDriver Course $10 Only",
          "BONUS: What's Next? Some Really Exciting Courses"
        ]
      },
      "requirements": [
        "A little knowledge of Java is needed",
        "You should be able to use PC / MAC system",
        "You should have some understanding of testing / automation",
        "***** CODE FILES / ALL MATERIAL FOR EVERY LECTURE AVAILABLE TO DOWNLOAD"
      ],
      "description": "TestNG is one of the best testing frameworks available today.\nIt helps the automation tester to focus on writing and implementing test cases, so that they can concentrate on testing the functionality of the application and the logistics of running, monitoring and reporting is managed by the TestNG Framework.\n\nThis course includes a wide range of topics from TestNG Annotations, different kind of Assertions, running a Test Suite, running tests in a desired sequence, Grouping related tests, understanding Dependent Tests, Preserver order of execution, reading Parameters from xml file, DataProviders (run test methods for multiple data sets), TestNG Listeners, TestNG Reporters (Logging), TestNG HTML Reports. All materials including code files.\n***** One stop place to become an Expert in Automation Framework Implementation from scratch *****\n\nThis course is very well structured:\nEach lecture consist of a video screencast and code files\nHigh focus on practice and asking questions\nYou will also learn best practices\n\n\n********************* WHAT MAKES THIS COURSE BEST? *****************************\nWe assume that students have no experience in testing frameworks and start every topic from scratch and basics.\nExamples are taken from REAL TIME to understand how different annotations can be utilized, that will give you idea of industry level framework and give you confidence.\nNO PRIOR AUTOMATION EXPERIENCE NEEDED, this course covers all the necessary topics. Some knowledge of Java is desiured.\nGet more than 4 hours of unique content with code files provided to refer and learn with examples.\n*******************************************************************************************************\nAre you looking to step into automation industry with the latest technologies in market?\nAre you keen to learn how to utilize TestNG to build a strong automation foundation?\nInterested in learning how TestNG can help you manage logistics of running tests frameworks?\n\nThis course is backed by udemy's 30-day money back guarantee. If you are not satisfied for any reason, you will get the money back. In addition to that you will keep all the code files of the course as a thank you for trying out the course !!!\nWhat are you waiting for? Enroll today and learn the powerful TestNG Framework !!!",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career on test automation",
        "Quality Assurance Automation professionals to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "SDET C#: Test Automation From Scratch - Detailed Guide",
      "url": "https://www.udemy.com/course/sdet-c-test-automation-from-scratch/",
      "bio": "A practical guide to becoming an Expert QA Automation Engineer (AQA) and SDET/Test Architect",
      "objectives": [
        "Automation Testing",
        "Selenium Webdriver from Basics to Advanced Level",
        "Learn best practices from true programmers",
        "Learn how to write scalable, readable and maintainable clean code",
        "You will learn source code of the tutor. All homework is completed with the Trainer",
        "Visual Studio",
        "NUnit 3",
        "Selenium basics",
        "Selenium in C#",
        "Selenium Waits",
        "Page Object concept",
        "Web Component concept",
        "Data Transfer Object concept",
        "Postman basics",
        "API baiscs",
        "REST API",
        "RESTful Web Services",
        "HTTP methods",
        "HTTP status codes",
        "JSON schemas",
        "API testing",
        "RestSharp from basics to advanced"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication Plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "C# Development Environment Setup": [
          "Install Visual Studio 2022 Community Edition",
          "Create Your First C# Console Project",
          "Visual Studio 2022 Community Edition Tour",
          "Understand the Difference between .NET 6 and Previous Versions",
          "Section Review"
        ],
        "C# Programming - Basic Control Structures": [
          "Understand Basic C# Syntax",
          "Input and Output Programs",
          "C# Data Types and Conversion",
          "Application Debugging Techniques",
          "Arithmetic and Assignment Operators",
          "Conditional Statements",
          "Repetition Statements"
        ],
        "C# Programming - More Advanced Constructs": [
          "Methods - Void",
          "Methods - Value Returning",
          "String Manipulation Functions",
          "DateTime Manipulation Functions",
          "Exception Handling",
          "Arrays",
          "Lists"
        ],
        "C# Programming - Object Oriented Concepts": [
          "Introduction to Classes and Objects",
          "Method Overloading",
          "Static Classes and Static Class Members",
          "Inheritance with Classes and Interfaces",
          "Constructors"
        ],
        "Add Visual Studio Solution To GitHub": [
          "Create GitHub Account",
          "Add Solution To Source Control"
        ],
        "API Basics": [
          "API and Web Service",
          "API Types Overview",
          "REST API Overview",
          "HTTP methods",
          "HTTP Status Codes"
        ],
        "Test Environment Setup": [
          "Postman Introduction",
          "Postman Installation",
          "Trello Account Creation",
          "Authorization Token Creation in Trello"
        ],
        "HTTP Method GET - Postman": [
          "GET Method Overview",
          "GET Method in Postman",
          "GET Method in Postman - Hometask",
          "JSON Schema Validation",
          "JSON Schema Validation - Hometask",
          "GET Method Validation in Postman",
          "GET Method Validation in Postman - Hometask"
        ],
        "HTTP Method POST - Postman": [
          "POST Method Overview",
          "POST Method in Postman",
          "POST Method in Postman - Hometask",
          "POST Method Validation in Postman",
          "POST Method Validation in Postman - Hometask"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "Are you ready to embark on a transformational journey into the world of Software Development Engineer in Test (SDET) using C#? Welcome to the most comprehensive and hands-on course designed to take you from a beginner to a proficient automation tester.\nIn today's fast-paced software industry, the demand for SDETs who can build robust and reliable test automation frameworks is skyrocketing. This course is your gateway to mastering C# for test automation, from the ground up.\nWhat You Will Learn:\nFoundations of Test Automation: Start with the fundamentals of test automation, including understanding the importance of automation testing in the software development lifecycle.\nC# Programming: Dive into C#, one of the most powerful and versatile programming languages, and learn it from scratch. No prior coding experience is required!\nSelenium WebDriver: Explore the world of Selenium WebDriver and harness its capabilities to automate web applications with precision.\nTest Frameworks: Build scalable and maintainable test automation frameworks from the ground up, allowing you to efficiently test complex applications.\nPage Object Model (POM): Implement the industry-standard POM design pattern to create clean and organized test scripts.\nAPI Testing: Extend your skills to include API testing using C# and tools like RestSharp, preparing you for full-stack testing.\nReal-World Projects: Apply your knowledge through hands-on projects and gain practical experience that mirrors real industry scenarios.\nBest Practices: Discover industry best practices for writing maintainable, efficient, and scalable automation scripts.\nWhy Enroll in This Course?\nHands-On Learning: Gain practical experience through hands-on exercises, quizzes, and projects that reinforce your understanding.\nInstructor Expertise: Learn from experienced instructors who have a proven track record in test automation and C# programming.\nCareer Advancement: Boost your career prospects by becoming proficient in a skill set highly sought after by leading tech companies.\nLifetime Access: Get lifetime access to course materials, updates, and a supportive online community.\nDon't miss this opportunity to become a certified SDET with C# expertise. Enroll today, and take the first step toward a rewarding career in test automation!",
      "target_audience": [
        "Test Automation Engineers who want improve their skills to become SDET",
        "People who want to learn Automation Testing from scratch to advanced level"
      ]
    },
    {
      "title": "Beginning Test Driven Development in C++",
      "url": "https://www.udemy.com/course/beginning-test-driven-development-in-c/",
      "bio": "Learning the discipline of Test Driven Development (also known as TDD) Using the C++ Programming Language",
      "objectives": [
        "How to implement unit tests for their production C++ code using the discipline of Test Driven Development."
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with the C++ programming language.",
        "Have your desired IDE installed and ready to use. The course will go over how to setup and use the Google Test library in Visual Studio and Eclipse."
      ],
      "description": "Test Driven Development is a key discipline every software developer should practice to ensure the quality of their code.  In this course I'll show you how to use this discipline in your everyday coding practices to help ensure the quality of your code base.\nIn this course we’ll be going over:\nWhat is Unit Testing and Test Driven Development and how does it help you.\nWhat is the Google Test testing library and how is it used for writing unit tests in C++.\nHow to setup some common C++ development environments to use Google Test.\nWhat are some Best Practices for unit testing and Test Driven Development.\nWe’ll also walk through some hands on example programming sessions using TDD in C++.",
      "target_audience": [
        "Anyone who wants to write better code faster."
      ]
    },
    {
      "title": "TestNG - All in One (Crash Course), Interview question & MCQ",
      "url": "https://www.udemy.com/course/testng-all-in-one-crash-course/",
      "bio": "In-depth tutorial for TestNG with Maven and Jenkins with Real Time Examples, MCQs, Cheat Sheets and Interview Questions",
      "objectives": [
        "***** At the end of this course, you will have in depth knowledge of TestNG Testing Frameworks and you will be a master of TestNG",
        "***** We have 10 dedicated INSTRUCTORS to help you with queries within 24 HOURS",
        "You will have excellent command on Build Management using MAVEN",
        "You should be able to lead any Java based Automation Project from scratch on your own",
        "You will be able to understand and write efficient testing code using TestNG",
        "***** Complete knowledge on TestNG, Maven and Jenkins",
        "Solve all hurdles coming with TestNG while learning on Selenium",
        "Implement TestNG in your project (wherever applicable) on your own.",
        "Understand in depth various types of Annotations and Assertions in detail including Hard Assertions and Soft Assertions",
        "Learn various important features of TestNG such as Priority, Dependency, Grouping, Data Providers, Disable and TImeouts",
        "Able to implement Custom Listener Classes using TestNG Listeners",
        "Understand in depth running Test Cases in Parallel using TestNG",
        "Understand TestNG Reporting",
        "Learn in depth knowledge of Maven and how to run TestNG Test Cases using Maven",
        "Learn in depth knowledge of Jenkins and how to schedule jobs to run our TestNG Test Cases",
        "Have multiple choice questions, cheat sheets and interview questions for each sections",
        "Finally you will be 100 % clear in TestNG concepts and able to clear any interview"
      ],
      "course_content": {
        "Introduction": [
          "Why shall I take this course ?",
          "TestNG Course Content",
          "TestNG Introduction",
          "Introduction MCQs"
        ],
        "Java Setup": [
          "Basic things needed for Java Setup",
          "What is JDK, JDK Download and Setup",
          "Eclipse Setup",
          "Java Environment Setup",
          "Java Environment Setup MCQ"
        ],
        "Basic Idea on Java - specially for Java Novice": [
          "Creating your first Java project",
          "Writing your first program in Java"
        ],
        "TestNG Setup": [
          "Four (4) Different ways to TestNG Setup",
          "TestNG Install from Eclipse Marketplace",
          "TestNG Install from \"Install New Software\"",
          "TestNG Install from Offline Jar File",
          "TestNG Install from Maven Pom Dependency"
        ],
        "TestNG Annotations": [
          "What is Annotations ?",
          "@Test",
          "@BeforeClass",
          "@AfterClass",
          "@BeforeMethod",
          "@AfterMethod",
          "@BeforeSuite and @AfterSuite",
          "@BeforeTest and @AfterTest",
          "Annotations MCQs"
        ],
        "TestNG Assertions": [
          "Assert Defination",
          "assertTrue",
          "assertFalse",
          "assertEquals",
          "assertNotEquals",
          "assertNull",
          "assertNotNull",
          "assertSame",
          "assertNotSame"
        ],
        "Other features of TestNG": [
          "Hard Assertions and Hard Assert with Try Catch",
          "Soft Assertions",
          "Disable in TestNG",
          "Timeout in Methods and Suite Level as well as Precedence",
          "Other Features of TestNG MCQs"
        ],
        "Other Advanced Features of TestNG": [
          "TestNG Priority",
          "TestNG Dependency Explaination",
          "TestNG dependsOnMethods [3 Examples]",
          "TestNG dependsOnGroups and dependsOnMethods [2 Examples]",
          "TestNG Grouping Defination",
          "TestNG Grouping Example 1",
          "TestNG Grouping Example 2",
          "TestNG Grouping Example 3",
          "TestNG Data Providers",
          "TestNG Data Provider in Separate Class",
          "TestNG Data Provider with Method in Parameter",
          "TestNG ITest Results",
          "ITestListener",
          "TestNG IExecutionListeners",
          "Other Advanced Features of TestNG MCQs"
        ],
        "Assignment on TestNG Dependency": [
          "TestNG Dependency Assignment"
        ],
        "TestNG Reporting": [
          "Surefire Report",
          "TestNG Reporting MCQs"
        ]
      },
      "requirements": [
        "***** NO AUTOMATION / JAVA CODING EXPERIENCE NEEDED, beginners and non programming candidates will be easily able to follow this course *****",
        "We will have two support instructor assigned to each of our course and you will have lifetime instructor support to get solved all your queries. You can post your doubts in Q&A section and we will get back with answer in less than 12 hours",
        "Programming codes and cheat codes helpful for clearing interview is available for download at any time",
        "All Installation setup including TestNG, Maven, Jenkins and environmental setup is taken care as part of course"
      ],
      "description": "TestNG - All in One(Crash Course) - [Course Last Updated 10th Aug, 2025] + Google Meet support also provided to needed students\nBy crash course we mean every lecture is small and precise and explains one topic at a time and is a step by step guide. It doesn’t mean that it is a summarized course, instead it means a detailed step by step guide where all the topics are included for TestNG including Maven and Jenkins .\nThis course covers TestNG, Maven, Jenkins, MCQs (Multiple choice Questions), Cheat sheets, Interview Questions and all Codes available for download.\n*** Please look at our Course Content Video or Course Content below for complete details***\nThis course is a single unique place in Udemy which will provide in depth knowledge in TestNG along with Maven and Jenkins\nUnlike other courses in Udemy, this course provides over 6.5 hours of videos along with\nMCQs (Multiple choice Questions), Cheat sheets, Interview Questions and all Codes to download at the end of each sections.\nEvery lecture is small and precise and explains one topic at a time and is a step by step guide.\nIf you have zero knowledge in Java or TestNG, don’t worry we have some basic video on Java to get you started and later we will have step by step TestNG along with Maven and Jenkins what will help you understand and learn quickly\nIncludes 6.5 hours of videos (64 videos) + MCQs, Cheat sheets, Interview Questions (Section wise)\nWe will provide life time support to our students.\nWe have over 10 trainers from corporate world available at different time zone and can help answer your questions fast and easily.\nIf you feel that any topic is missing or is not available then please reply us using message in Udemy and we will be happy to add them.\nIf you have any question regarding any topics please post them in Q&A sections and we will get back to you within 12 hours.\n***If still the issue is not resolved we will help you by taking you over Skype or Team Viewer. You can always message us in Udemy if you have any problems where you got stuck and need individual assistance. ***\nBy the by the end of the course you will master in TestNG with Maven and Jenkins and will be able to clear any interview.\nSummarized Course Contents [For full course content in each section please check “Curriculum for This Course”]\nSection 1:\nIntroduction: Covers details like why to take the course, course content and introduction to TestNG\nSection 2:\nJava Setup: Covers details like basic thing needed for Java Setup, Java Environmental Setup and Eclipse Setup\nSection 3:\nBasic Idea on Java – specially for Java Novice : Covers details like Creating your first Java Project and Writing your first program in Java\nSection 4:\nTestNG Setup: Covers details like different ways to setup TestNG\nSection 5:\nTestNG Annotations: Covers in-depth details of various types of annotations supported in TestNG with examples\nSection 6:\nTestNG Assertions: Covers in-depth details of various types of assertions   supported in TestNG with examples\nSection 7:\nOther Features of TestNG: Covers Hard Assertion, Soft Assertions, Hard Assertions with Try Catch, Disable in TestNG and Timeouts in Methods and Suite Level as well as Precedence with various examples\nSection 8:\nOther Advanced Features of TestNG: Covers in-depth details of TestNG Priority, TestNG Dependency, TestNG Grouping, TestNG Data Providers, TestNG ITest Results, TestNG ITestListener, TestNG IExecutionListener etc. with various examples\nSection 9:\nTestNG Reporting: Covers details of Surefire Reporting\nSection 10:\nTestNG with Maven: Covers in-depth details of Installing Maven to running TestNG Test Cases using Maven\nSection 11:\nTestNG with Jenkins: Covers in-depth details of Installing Jenkins, Creating Job, Configuring Job and running TestNG Test Cases using Scheduled Job\nSection 12:\nTestNG Running Test Cases using Parallel: Covers in-depth details of running TestNG Test Cases in parallel with various examples\nNote: The above Course content is the summarized one, to view more details of the topics covered in each section please check “Curriculum for This Course”.",
      "target_audience": [
        "This tutorial is designed for Software Professionals, who are willing to learn TestNG Framework in fast and easy steps",
        "All the manual tester who are looking for the automation knowledge",
        "Quality Engineers who are willing to get an in depth knowledge of TestNG in a short period of time",
        "Quality Engineers who wanted to clear their concepts in TestNG",
        "Quality Engineers who wanted to clear any interview and get a good job as this course contains set of MCQs and Interview Questions needed to clear the interview",
        "Fresh Graduates who want to make a dream career in software engineering"
      ]
    },
    {
      "title": "Selenium WebDriver with Java & Cucumber BDD",
      "url": "https://www.udemy.com/course/automate-tests-using-selenium-webdriver-with-java-cucumber/",
      "bio": "Build a start to finish web automation testing framework and simulate user behavior on a web application + LIVE TEST APP",
      "objectives": [
        "Write realistic automated test scripts for web applications",
        "Build robust test frameworks and custom libraries",
        "Integrate Java with Selenium",
        "Design a data-driven test framework",
        "Find elements on a web page and simulate user behavior",
        "Automate user actions across multiple browser platforms",
        "Develop Cucumber / BDD test plans with feature files using Gherkin",
        "Continuous integration and testing"
      ],
      "course_content": {
        "Introduction to Testing & Selenium Automation": [
          "Introduction",
          "Demo: See WebDriver in Action",
          "Installing Selenium IDE",
          "Record & Run with Selenium IDE",
          "Modifying Test Data",
          "Exporting Selenium IDE to Java Code",
          "Preparing the Test Environment",
          "Getting Started with Java and Eclipse",
          "Introduction to Selenium"
        ],
        "Automating Actions with Selenium WebDiver": [
          "Creating the Login Test Outline",
          "Opening a Web Browser with Selenium",
          "Understanding HTML and the DOM",
          "Finding Elements using Chrome",
          "Simulating User Actions on a Web Page",
          "Capturing Text on a Page",
          "Capturing the Page Title and Closing the Browser",
          "Automation with Selenium WebDriver"
        ],
        "Finding Elements on a Web Page": [
          "Overview of New Account Application",
          "Preparing Environment with Firefox and Firebug",
          "Writing the Test Outline and Opening a Firefox Browser",
          "Item Locator: By LinkText",
          "Item Locator: By Name and By ID",
          "Item Locator: By XPath (Relative and Absolute)",
          "Item Locator: By CSS Selector",
          "Comparing Methods and Priority",
          "Interacting with Form Elements",
          "Completing the New Account Application",
          "Finding Elements"
        ],
        "Enhancing Test Scripts with Java": [
          "Using Variables to Parameterize Data",
          "Cross-Browser Testing",
          "Creating the DriverFactory",
          "Defining WebElements",
          "The Radio Button Algorithm",
          "The Checkbox Algorithm",
          "Conditional Test Results"
        ],
        "Testing Frameworks & Reporting Methods": [
          "Introduction to JUnit Framework",
          "Assertions: Generate Test Results",
          "Annotations: Guiding the Test Flow",
          "Class Variables within a Framework",
          "Installing TestNG Framework in Eclipse",
          "Setting up a TestNG Framework",
          "TestNG Assertions",
          "TestNG Annotations",
          "Preparing a Test Suite",
          "Managing an XML Test Suite"
        ],
        "Build a Complete Data-Driven Framework": [
          "The CSV Reader Class",
          "JUnit @Parameters",
          "Data-Driven Testing with JUnit and CSV",
          "The Excel Reader Class",
          "TestNG @DataProvider",
          "Data-Driven Testing with TestNG and Excel",
          "Test Frameworks"
        ],
        "Case Study: Testing a Booking & Reservation Application": [
          "Overview of Booking Application",
          "Setting up the Test",
          "Writing the Search Page Test Step",
          "Modifying the Search Result Criteria (Implicit Waits)",
          "Selected a Search Result (Advanced XPath Locators)",
          "Switching Windows and Handling PopUps",
          "Finishing the Booking and Confirmation"
        ],
        "Page Object Model": [
          "What is the Page Object Model?",
          "Setting up a Test with POM",
          "Implementing the Login Page Class",
          "Implementing the Dashboard Page Class",
          "Writing a Test with Page Objects",
          "Enhance POM with PageFactory"
        ],
        "Behavior-Driven Development with Cucumber": [
          "What is BDD and Cucumber?",
          "Preparing the Cucumber Environment",
          "Writing a Feature File in Gherkin",
          "Writing Step Definition Class",
          "Writing the TestRunner with JUnit",
          "Implementing Step Definitions with Selenium",
          "Enhancing Feature Files with Data Tables",
          "Parameterizing Data into Step Definitions",
          "Executing Tests and Fixes",
          "BDD & Cucumber"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Basic understanding of programming is helpful",
        "Understanding of web pages",
        "Working computer with Firefox or Chrome browser",
        "Familiar with software testing"
      ],
      "description": "Become an experienced automation tester by building a test framework with Selenium WebDriver using Java language. This course will provide you an overview of automation and a practical guide to building a framework with Java. Then explore the power of Selenium WebDriver and Cucumber!\nToday's software development uses TDD and BDD practices and requires continuous integration and continuous deployment. Automation testers are needed to develop robust, clean, and thorough frameworks for regression testing, functional testing, and acceptance testing. Selenium WebDriver is the industry-leading, open-source tool that allows scrum teams to deliver quality software fast!\nLearn how to apply BDD principals and develop feature files with Given-When-Then structure using Cucumber framework and Gherkin language. Apply Cucumber framework knowledge with Java step implementations to automate web actions with Selenium.\nBuild a robust test framework\nDevelop your own data-driven framework\nInteract with elements on a web page\nUse Java to automate web actions\nConstruct BDD tests with Cucumber\nImplement the Page Object Model\nUtilize popular test frameworks like JUnit and TestNG\nThis course has been taken from years of experience in training consultants and new hire orientation corporate training. Enroll in this course to get a thorough overview of automation, frameworks, Selenium WebDriver, and BDD with Cucumber!\n\nI don't waste time on a lot of configuration\nI don't waste time on unnecessary topics\nI focus on making Selenium WebDriver automate user actions\nI focus on building frameworks\nI focus on conceptual and technical concepts\nI focus on applying our knowledge to build complete, realistic tests",
      "target_audience": [
        "Anyone who wants to learn how to test web applications",
        "Manual testers / QA",
        "Anyone who wants to apply Java to real-world projects"
      ]
    },
    {
      "title": "Cucumber BDD with Python Behave and Selenium WebDriver 2024",
      "url": "https://www.udemy.com/course/bdd-testing-with-python/",
      "bio": "Build Automation Framework with Cucumber BDD using Python and Behave for Selenium WebDriver and API Testing and SQL",
      "objectives": [
        "You will be able to create Cucumber BDD testing framework using Python, Behave, Selenium WebDriver, ....",
        "You will be able to read and write Cucumber BDD style tests in Python",
        "You will be able to work on Cucumber BDD Framework supporting both Frontend with BDD Selenium and Backend with pure BDD Python",
        "You will create full E-Commerce site on your computer and practice test automation",
        "SQL Crash Course (MySQL). You will learn how to work with MySQL database",
        "You will learn tips and tricks of finding elements, debugging issues, shortcuts with IDE, test methodologies, setup py file",
        "You will be able to use virtual environment and try different versions of Python libraries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To The Course",
          "About The Provided Course Code",
          "Content List - Description of sections/lectures of the course",
          "Introduction to BDD, Gherkin and Behave"
        ],
        "Installations": [
          "Installing Python - Mac",
          "Installing Python - Windows",
          "About Virtual Environment",
          "Creating virtual environment on Mac (demo)",
          "Creating virtual environment on Windows (demo)",
          "Installing Pycharm / IDE",
          "Add Virtual Environment to PyCharm",
          "Add Gherkin Plugin to PyCharm",
          "Installing Behave and Selenium",
          "BDD or Behave?"
        ],
        "BDD Components and Basic Examples": [
          "Folder structure or layout (Discussion)",
          "Folder structure or layout (Demo/Example)",
          "Feature File",
          "Step definition File",
          "Running 1 file (discussion)",
          "Running 1 file (demo)",
          "Running all files (discussion)",
          "Running all files (demo)",
          "Review Please!",
          "Displaying Output",
          "More on Output",
          "‘Given’, ‘Then’, ‘When’, ‘And’, ‘But’"
        ],
        "Passing Parameters to Steps": [
          "Passing Parameters to Steps (discussion)",
          "Passing Parameters to Steps (demo)"
        ],
        "Sharing Data Between Steps": [
          "Sharing Data Between Steps (discussion)",
          "Sharing Data Between Steps (demo)"
        ],
        "Time for Practical Examples": [
          "Practical Examples Discussion",
          "Project Setup Overview",
          "Test Cases Group 1 Part 1 (python.org)",
          "Test Case Group 1 Part 2 (python.org)",
          "Using custom config file",
          "Test Case Group 3 (more config examples)"
        ],
        "Setup and Teardown": [
          "Setup and Teardown (discussion)",
          "Setup/Teardown/environment.py",
          "\"Background\""
        ],
        "Scenario Outlines": [
          "Scenario Outline (discussion)",
          "Scenario Outline (demo)"
        ],
        "Using Tags": [
          "Using Tags (discussion)",
          "Using Tags (demo)"
        ],
        "Cucumber Behave Report Generation": [
          "Generating Behave Reports Overview",
          "How to Output Junit Compatible xml",
          "How to Output JSON Report",
          "How to Generate Allure Report",
          "How to Generate Custom Report"
        ]
      },
      "requirements": [
        "Understand basic Python (Python 3 or 2 is fine)",
        "Understand Automated testing basics",
        "Have access to install libraries on the computer you are going to use"
      ],
      "description": "Course Description\nLearn how Cucumber BDD (Behavioral Driven Development/Test Driven Development) testing frameworks work. Learn how the pieces of Cucumber fall together and how frameworks are put together, as well as best practices of BDD. We will use the most popular and actively maintained Cucumber framework for Python BDD called 'Behave'. We will use PowerPoint presentation to convey the concepts on each topic and then write example code testing real scenarios with Selenium WebDriver as well as API testing.\nWe will build an E-commerce site on our local machine and practice writing real test cases both for front end with Selenium WebDriver and for the backend with Python, with full access to MySQL database of our site.\n\n\nCritical addition to your resume\nIf you are getting into the QA world or you are looking to advance your career, having BDD testing skill will accelerate your success. Python is one of the most popular languages to use in software testing, and knowing how to use it with BDD style testing will expand your pool of possibilities.\nIn addition to using Python for BDD testing you will also get tips and guidance on best practices.\nAfter completion of this course you will be able to go through interview as if you have BDD testing experience. You will also have a ready to go framework that you can continue to add test cases for practice and for your portfolio.\n\n\nContent and Overview\nIn this course we will be using PowerPoint presentation to explain the concepts and then go to code in an IDE (PyCharm) for each topic. Some topics, we will go directly to code and start writing and executing.\nWe will install necessary packages for our framework. We will discuss the directory structure needed for our design, and then we will write and run test cases.\nWe will run how the BDD tests are written, how the work together and how to understand and control the output.\nWe will create an efficiently structured test framework and learn how to use Pythons logging module to produce readable reports.\n\n\nWhat am I going to get from this course?\n49 + lectures of BDD core concepts, examples and practice exercises (continuously adding more examples)\nPlenty of test cases to use in your portfolio and to build bigger test suits on top of the course material\nEnough material and examples to be able to create a project (BDD test framework) and maintain a GitHub repo\nSpecific features of the most popular BDD framework for Python called Behave\nPractice using Selenium WebDriver functions with Python\nPractice testing of Front-end with Selenium WebDriver BDD and Python\nPractice testing of Back-end with Python",
      "target_audience": [
        "Anyone looking to learn automation testing and has a bit of background in Python and Selenium WebDriver",
        "Anyone that already know basic automated testing and want to know how to apply BDD",
        "Anyone coming from Java or other background and can pickup Python easily"
      ]
    },
    {
      "title": "Automate application with Specflow and Selenium C#",
      "url": "https://www.udemy.com/course/bdd-with-specflow-and-selenium-csharp/",
      "bio": "Learn how Specflow and Selenium glues together for behavioral driven development (BDD) automation testing.",
      "objectives": [
        "Understand what Gherkin language specification is all about",
        "Understand Behavioral Driven Development",
        "Understand Specflow and its awesomeness enhanced with Visual studio IDE",
        "Creating Selenium testcases with Specflow step definitions"
      ],
      "course_content": {
        "Introduction to BDD and Specflow": [
          "Introduction"
        ],
        "BDD and Specflow": [
          "Part 1 - Introduction",
          "Part 2 - Gherkin Syntax",
          "Part 3 - Gherkin Syntax (Contd..)",
          "Part 4 - Specflow Introduction",
          "Part 5 - Understanding features and step definitions",
          "Part 6 - Specflow Scenarios",
          "Part 7 - Working with Multiple data using Tables",
          "Part 8 - Scenario Outline",
          "Part 9 - Understanding Scenario context",
          "Part 10 - Understanding Specflow.Assist.Dynamics",
          "Part 11 - Specflow Bindings",
          "Part 12 - Specflow Context Injections",
          "Part 13 - Scoped bindings",
          "Part 14 - Step Argument Transformation",
          "Part 15 - Dynamic Table Conversation",
          "Part 16 - Working with external data using Specflow+Excel plugin",
          "Part 17 - Specflow+Excel issue with Visual studio 2015",
          "Part 18 - Fixing No Test in Test Explorer while working with Specflow",
          "Part19 - Calling steps from step definition (BDD and Specflow)",
          "Part 20 - Getting Feature, Step and Scenario info (BDD and Specflow series)",
          "Part 21 - Running Specflow test in Parallel with Specflow 2.0 and NUnit 3",
          "Part 22 - Parallel Execution with Specflow 2.0 + Selenium + NUnit",
          "Part 23 - Parallel Execution with Specflow 2.0 + Selenium + NUnit (Part B)",
          "Part 24 - Running Specflow scenarios based on Tags via Nunit 3.0 Console runner",
          "Part 25 - FindInSet an best way to verify Collection and Specflow Table",
          "Part 27 –Passing parameters to test method from Nunit console runner",
          "Part 28 - Calling step definitions of one project to another project in Specflow"
        ],
        "Extent Reporting with Specflow (Crash course)": [
          "Introduction to Extent Reporting",
          "Generate report dynamically with extent reporting",
          "Generate report with Specflow steps",
          "Historical extent report using KLOV reporting"
        ],
        "BDD with Selenium C# and Specflow": [
          "Introduction",
          "Part 2 - Setting stage ready for BDD with Selenium and Specflow",
          "Part 3 - Writing simple BDD code with Selenium",
          "Part 4 - BDD with Selenium POM and Specflow",
          "Part 5 - BDD with Selenium POM (Page Navigation) and Specflow",
          "Part 6 - Using Generics for Pages in BDD in Selenium with Specflow"
        ]
      },
      "requirements": [
        "This course will not address anything about basics of Selenium nor C#, hence one should have these knowledge"
      ],
      "description": "This course will enable one to understand the complete End-to-End code development using Specflow and integrating Selenium with Specflow feature files and scenarios by leveraging the power of Behavioral driven development.\n\nThe aim of this course is to give all the information you need to understand the basics of Gherkin language specification, Behavioral Driven development (BDD) and how to write scenarios to run Selenium test in much easier way with Specflow.\nAgain, this course, will not cover any basics of C# programming languages or Selenium automation testing, rather, we will directly discuss about the nitty-gritty details on Specflow and its great features to create much robust features and step definitions.\nWe will also see the power of Visual studio IDE intelli-sense working seamlessly with Specflow while writing feature files and mapping step definitions with various different classes (which is highly nagging while working with cucumber in ruby language)",
      "target_audience": [
        "This course is designed for both Developers and testers",
        "If you are a BA (Business analyst), then with power of BDD, you can express your business logic",
        "Manual test engineers can understand how to write simple scenarios and help automation engineers to get the team job done"
      ]
    },
    {
      "title": "Wanna Learn JMeter ?Get Training by Industry Experts-23+hrs",
      "url": "https://www.udemy.com/course/basic-to-expert-jmeter/",
      "bio": "JMeter4, JMeter 5 Coverage, performance testing/ Load Testing, Beanshell scripting, Jmeter API testing",
      "objectives": [
        "You will have complete knowledge of JMeter basic and advanced features",
        "You can implement JMeter in your realtime project performance testing",
        "After consuming content, you will be able to perform Performance Testing on Web Application+ WebServices",
        "You will have detailed knowledge of JMeter plugins to perform advance operation",
        "Will understand Beanshell from basic to advance and use them in Realtime Projects"
      ],
      "course_content": {
        "Jmeter Basics & Setup": [
          "*** Course Architecture : Must for Everyone ***",
          "JMeter Setup Step 1: Setup Java",
          "JMeter Setup Step 2: Install JMeter",
          "Introduction to JMeter",
          "**** Check Your Knowledge ****"
        ],
        "JMeter and Performance Testing Basics": [
          "Whats New in JMeter 4..",
          "Whats New in JMeter 5",
          "Performance Testing Introduction",
          "Types of Performance Testing",
          "JMeter Setup and Introduction",
          "Section Interview Questions"
        ],
        "Understand JMeter Environment": [
          "Test Plan, Thread Group, Thread",
          "Jmeter: Different type of steps in Jmeter- Part 1",
          "Jmeter: Different type of steps in Jmeter- Part 2",
          "Basics of JMeter",
          "Interview Questions for this Section"
        ],
        "Recording in Jmeter": [
          "Recording in JMeter 5 Version",
          "Recording in JMeter 4.0 version",
          "Recording in JMeter 4.0 version excluding files",
          "Record Scripts on Chrome Browser",
          "Badboy Software Download Location",
          "Recording in Jmeter using Badboy",
          "Recording using Blazemeter plugin",
          "Performance Testing Basics"
        ],
        "Jmeter Work Architecture": [
          "Execution order of Elements-Part1",
          "Execution order of Elements-Part2"
        ],
        "Kickoff Performance Automation": [
          "Environment Walkthrough",
          "Templates in JMeter",
          "First Test case in Jmeter",
          "Declare Variables & Use It",
          "********** Test your Performance basics *****************"
        ],
        "Logic Controller": [
          "Simple Controller",
          "Random & Random Order Controller",
          "Interleave Controller",
          "Loop Controller",
          "If Controller",
          "Only Once Controller",
          "Runtime Controller",
          "Module Controller"
        ],
        "Timers": [
          "Constant Timer & Uniform Random Timer",
          "Synchronizing Timer"
        ],
        "Config Elements": [
          "Http Request default",
          "Cookie and Cache manager",
          "User defined variable",
          "CSV data set config",
          "Counter",
          "Random variable"
        ],
        "Assertion Elements": [
          "Duration & Size Assertion",
          "HTML Assertion",
          "Response Assertion"
        ]
      },
      "requirements": [
        "Basic understanding of Windows Operating System",
        "Basic understanding of Performance Testing Concepts"
      ],
      "description": "This course is specially designed for Software Testing/QA professionals to get in depth knowledge of performance testing using JMeter, This will take students from basic level to advance in decent pace videos.\n\nCourse Updates:\nMarch 2024 :  Added videos for API Testing using JMeter\nOct 2021 : Added Videos for Database Functional/ performance Testing using JMeter\nMay 2021 : Updated JMeter component video as per latest version of JMeter\nThere is no pre-requisite for this course, everything we gonna cover from basics to realtime implementation\n\n\nHere we will cover\nGives coverage to basic performance terminologies like Performance Testing, Stress Testing etc\nBasic to advance concepts of JMeter & performance testing also gives coverage to many interview question which are asked in interviews\nDifferent types of Recording.\nDifferent components to be used while creating scripts in JMeter\nListener & Implementation of Listener for different scenario\nDifferent types of element and realtime implementation.\nInterview questions and quiz to analyse your learning.\nIn this course we will be learning in-depth of JMeter tool.\nIt also covers distributed testing using JMeter\nGiving coverage to JMeter default functions\nBasic to advance Beanshell scripting with practical implementation\nCover how we can use advance plugins with JMeter\nHow to use Java code in JMeter.\nPerformance Testing of SOAP and REST API.\nRealtime case studies and projects.\nAPI Testing (Functional + Performance )\nBasics of SQL for DB Performance Testing\nBasics of Java for using Java Programming in JMeter\nAfter going through the course you can easily measure performance of any web based application / Service and can crack performance testing related interviews.",
      "target_audience": [
        "Manual testers, Automation Testers, Any professional who is willing to start career in performance testing",
        "Functional Tester/ QA Looking opportunity in Automation testing"
      ]
    },
    {
      "title": "Automated Testing using Coded UI with Visual Studio 2015",
      "url": "https://www.udemy.com/course/automated-testing-using-coded-ui-with-visual-studio-2015/",
      "bio": "Automated Testing of Desktop & Web application using Coded UI with bonus Mobile App Test Automation using Xamarin",
      "objectives": [
        "You will learn how you can use Coded UI to drive your UI test automation projects. You will also learn how you can implement data driven testing using an excel file.",
        "You will learn how quickly you can build the test automation of Web Application, Desktop Application (Windows Forms/WPF) and Mobile app using Coded UI with Visual Studio 2015."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Getting Started with Coded UI",
          "Interview Questions - Specific to Coded UI"
        ],
        "Test Automation of Web Application": [
          "Demo Overview",
          "Record/Playback Approach",
          "Code Against Record/Playback Approach",
          "Extending Code to Support Data Driven Execution with Visual Studio 2017"
        ],
        "Test Automation of Desktop Application - Windows Forms Application": [
          "Demo Overview",
          "Record/Playback Approach"
        ],
        "Test Automation of Desktop Application - WPF Application": [
          "Demo Overview",
          "Code First Approach"
        ],
        "Bonus Lecture: Mobile App Test Automation": [
          "What is Mobile Application Testing",
          "Demo Overview",
          "Record/Playback Approach",
          "What is REPL?"
        ],
        "Summary": [
          "Course Summary"
        ]
      },
      "requirements": [
        "All should need to know is What is Test Automation and What is the benefits of implementing Test Automation over manual testing."
      ],
      "description": "**************************THIS COURSE IS RECENTLY UPDATED by adding new pdf file (In Section 2: Test Automation of Web Application, Lecture 6: Code Against Record/Playback Approach) which shows how to launch the mortgage calculator URL programmatically instead of launching manually********************************\nThe reason behind is, I have received lot of feedback about mortgage calculator URL launching. They did not figure out that they have to launch the URL manually before they start the test so they keep asking that where is the mortgage calculator URL for application to start? By adding detail information inside the pdf file will help them.\n\n\n**************************THIS COURSE IS BEING UPDATED EVERY SINGLE WEEK with new lectures AND/OR valuable information to Q&A section based on the questions asked by Students*********************************\nHIGHLIGHTS: Updated the QA section with good discussion of how to compare expected value from excel sheet against actual value from web element. Also provided sample code to update the excel sheet with the result of comparison.\nAdded new lecture to support Data Driven Execution with Visual Studio 2017.\nAdded new lecture called Interview Questions specific to Coded UI.\nDiscussed different types of data source supported by Coded UI for Data Driven Testing.\nDiscussed launching Chrome browser instead of using default Internet Explorer browser.\nInstallation tips of Selenium Components for Coded UI Cross Browser Testing, Selenium Web Driver, Chrome Web Driver, NUnit test framework, NUGet package etc.\nDiscussed creation and execution of Coded UI Test in Visual Studio 2015 Vs Visual Studio 2017\nDiscussed an excel file format for executing multiple test cases. Added sample code and sample excel files.\nDiscussed various type of automation framework and posted some best practice automation framework diagram that you can start implement.\n\nDiscussed web performance and load test using Visual Studio Enterprise using Cloud-based Load Testing.\nDiscussed Load Testing of web performance test using data driven approach.\n\n***************************************************************************************************************************************\n\nThis course is designed for both testers and developers. Tester who want to develop their testing skills in the test automation and Developer who want to execute their unit test in automated way.\n\nThis course will teach you how quickly you can build the test automation of Web Application and Desktop Application (Windows Forms/WPF) using Coded UI with Visual Studio 2015. This course will also give you bonus lecture of Mobile Test Automation using Xamarin with Visual Studio 2015. After you have completed this course you should be able to build test automation projects for your company's applications. This course should also help you for your test automation job interview.",
      "target_audience": [
        "This course is designed for both testers and developers.",
        "Tester who want to develop their testing skills in the test automation and Developer who want to execute their unit test in automated way."
      ]
    },
    {
      "title": "Cypress -Modern Automation Testing from Scratch + Frameworks",
      "url": "https://www.udemy.com/course/cypress-tutorial/",
      "bio": "Learn writing fast and robust Automated (UI + Integration) Tests using Cypress V14 with Mocha and Cucumber frameworks",
      "objectives": [
        "Understand Cypress from Scratch and build fast and reliable Automation tests for any Web Applications using Cypress",
        "Complete Understanding of JavaScript Basics so that you can implement Best practices of coding for Cypress Tests",
        "Practical knowledge in designing Cypress Automation framework from scratch using Mocha and Cucumber Frameworks",
        "Understand how to Mock Network responses and Perform Integration testing with Cypress",
        "Real Time Hands On Exercises to practice Cypress Parallelly with Videos for building confidence on the tool",
        "You will learn advanced architectural concepts (Page Object Modelling and more) with CI/CD Jenkins Integration",
        "Complete understanding of Cypress Components for generating test execution Videos ,Screenshots & Reporting"
      ],
      "course_content": {
        "Introduction to Cypress and its advantages in Automation world": [
          "What is Cypress? And why it is future of Automation",
          "Course syllabus walkthrough",
          "Understand Cypress Architecture and its benefits",
          "Reference document Notes"
        ],
        "Step by Step instructions for Cypress Installation & project Setup": [
          "Important Player Tips for best learning Experience",
          "How this Course track on all the new version releases coming from Cypress",
          "Install Node.js, VS Code & Cypress for Windows and MAC",
          "Quiz-Check your knowledge"
        ],
        "3 hours of JavaScript Fundamentals including coding exercises": [
          "Action plan to complete Javascript learning"
        ],
        "Introduction to Cypress Test Runner and command line features": [
          "What is Cypress TestRunner",
          "Important Note on Cypress Versions",
          "Build Cypress Basic test and run from test Runner",
          "Running Cypress tests in supported browsers",
          "Exploring the Cypress project Framework structure",
          "Quiz-Check your knowledge"
        ],
        "Getting started with Cypress Test Automation": [
          "Important Note",
          "Cypress locator strategies and how to construct them",
          "Cypress inbuilt plugin in testRunner to generate locators",
          "Basic Assertion in writing the tests with Cypress",
          "Handling Invisible elements with Cypress by understanding logs",
          "Quiz-Check your knowledge"
        ],
        "Deep diving into Cypress Commands and its ASynchronous Nature": [
          "Web applications to Practise Cypress Automation",
          "Understanding get and find commands with Cypress",
          "Grabbing the text for validations using cypress text command",
          "Cypress ASynchronous nature and its promise handling",
          "Understanding the difference between Jquery methods and cypress commands",
          "Handing Async promises with Cypress",
          "code download",
          "Completing the Practise test with all necessary validations",
          "code download",
          "Quiz-Check your knowledge"
        ],
        "Handling Web Controls UI using Cypress": [
          "How to verify and automate check boxes with Cypress",
          "Handling static dropdowns using select command with Cypress",
          "Handling Dynamic dropdowns with each command Iteration",
          "Handling Visible and invisible elements using Assertions in Cypress",
          "Code download",
          "Quiz-Check your knowledge"
        ],
        "Advance Automation to handling Alerts,popups, Child Windows using Cypress-Jquery": [
          "How Cypress auto handles Alerts in web Apps",
          "Handling Child tab with combination of Cypress & Jquery commands",
          "code download",
          "Child Windows Assignment",
          "Handling Web tables with Cypress using each command",
          "code download",
          "Handling Mouse hover popus using Cypress",
          "Quiz-Check your knowledge"
        ],
        "Understand How to Automate Frames & Child windows & Calendars in Cypress": [
          "Handling Child windows using Cypress",
          "Handling Frames with Cypress using real time example",
          "code download",
          "Cypress Concepts Cheat Sheet download",
          "Quiz-Check your knowledge",
          "Strategy of automating calendars using Cypress",
          "End to end example of validating calendars with assertions using Cypress",
          "code download"
        ],
        "End to End Ecommerce Flows Automation with Cypress - Examples": [
          "Understand End to End Test flows for Ecommerce application with design plan",
          "Use Cypress filter methods to select the items dynamically with user input",
          "Parsing the output Strings to number and apply JS logic with promise",
          "Wrapping up the end to end Cypress Automation test with demo run"
        ]
      },
      "requirements": [
        "None. Everything is taken care in the course including Javascript basics",
        "Theoretical Material,Code dump and Interview Guide are available for download"
      ],
      "description": "Course Updated with Latest Cypress V14  BDD Framework on March 12th.\nThe one and only Cypress course in Udemy with ** official BEST SELLER Tag *** and Highest Ratings -10,000+ 5 star Ratings)/ /\nThis Course includes - Web Automation with Cypress + Cypress Test Runner features + Cypress Integration Testing + Cypress API Testing + Cypress Database Testing + 2 Top class Javascript Frameworks from Scratch using Mocha & Cucumber\nThis Course also gives you 3 hours in depth understanding on javascript basics so that you can build Powerful Cypress programming tests\n\n\nWhat is Cypress?\nCypress - The most Buzzing word in Automation world which is expected to play a key role in  future  for its fast, easy and reliable testing for anything that runs in a browser.\nBecause of its Architectural design, Cypress comes with out of box capabilities to bring Stable Automation results for all Modern Web Apps.\nIt also have the ability to perform Integration testing by mocking incoming network responses\nFor Test Debugging, Cypress takes Screenshot by default for every test step and generate execution Mp4 video after every test run ..\nThere are many more WOW Factors like above which you will come across in Training.\nThese top class  videos are completely designed from scratch  using many real time examples with in detail explanation on each and every concept of Cypress along with Framework design best Practices\nAnd I Bet! On course Completion You can develop Cypress Automation framework on your own or crack any Cypress related interviews.\n\n\nBelow is the high level  Content we Cover in the course:\nIntroduction to Cypress\nCypress Architecture\nCypress Installation & Project Setup\nCypress Test Runner features\nCommand line arguments for Cypress\nCypress Basic Commands for Automation\nCypress & Jquery combination\nUI Automation (Checkboxes,Radio buttons, Editboxes,Dropdowns with Cypress)\nHandling Popups,Alerts using Cypress\nHandling Child windows and Frames with Cypress\nCypress Assertions in detail\nCypress Framework Best Practises\nCypress Fixtures and Custom commands\nPage object Design pattern with Cypress tests\nTest Parameterization and Data driven with Cypre\nConfiguration properties and environmental variables discussion\nCypress Dashboard features with video recording and Screenshots\nBuilding npm scripts and Integrating Cypress framework into Jenkins\nCypress Cucumber BDD Integration\nCucumber Data Driven, Tagging, Hooks, HTML reporting features for Cypress Tests\nXHR Testing with Cypress\nMocking API calls with Cypress Intercept commands\nJavascript Basics\n\n\nWish you all the Best! See you all in the course with above topics :)",
      "target_audience": [
        "Automation Engineers",
        "Software Engineers",
        "Manual testers",
        "Software developers"
      ]
    },
    {
      "title": "Introduction to Machine Learning Models (AI) Testing",
      "url": "https://www.udemy.com/course/machine-learning-models-ai-testing/",
      "bio": "From Scratch, Learn testing types and Strategies involved in all the phases of ML Models (AI) with real time examples",
      "objectives": [
        "Introduction to Artificial Intelligence and Machine Learning Models",
        "Understanding Lifecycle of Machine Learning Models and their testing Scope",
        "Shift-Left Testing in the ML Engineering Phase such as OverFitting & UnderFitting Testing",
        "QA Functional Testing in the ML Validation Phase with 25 different Testing types & Strategies",
        "API Testing Scope for Machine Learning Models with ChatGPT Model example",
        "Responsible AI Testing for Machine Learning Models such as Bias, Fairness, Ethical, Privacy Testing etc",
        "Post-Deployment Testing Strategies for ML Models such as DataDrift & Concept Drift testing",
        "Continuous Tracking and Monitoring Activities for QA in Production"
      ],
      "course_content": {
        "Getting Started with Machine Learning Testing basics": [
          "Introduction and Agenda of the tutorial",
          "Introduction to Artificial Intelligence Systems with examples",
          "What is Machine Learning and how it is related to Artificial Intelligence family",
          "Examples of commonly used Machine Learning Models and their usage",
          "Material download"
        ],
        "Early Testing Strategies in ML Model Engineering phase (Supervised Learning)": [
          "Understand Machine Learning Model Life cycle stages with online/offline modes",
          "How Machine Learning models works in nutshell -Learn terminologies used",
          "Understand how OverFitting Testng & UnderFitting works with Trained data sets",
          "Predicting House Prices (ML Model) Demo to show how internally Algorithms works",
          "Revision on Supervised Learning Model Testing with Overfitting/UnderFitting ex",
          "Material download",
          "Knowledge Check - Section-2"
        ],
        "Unsupervised Learning Models Testing in Engineering Phase": [
          "Introduction to Unsupervised Learning in the ML models with example",
          "Testing scope on Unsupervised Learning with Data point patterns&Cluster scores",
          "Revision on Unsupervised Learning with cluster score analysis",
          "Material download",
          "Knowledge Check - Section-3"
        ],
        "Reinforcement Learning & Commonly used Frameworks and Algos in ML Models": [
          "Introduction to Reinforcement Learning in ML Model with examples",
          "Algorithms and Frameworks commonly used in developing ML Models",
          "Material download",
          "Knowledge Check - Section-4"
        ],
        "Functional Testing for Machine Learning Models in Evaluation Phase": [
          "What are Validation Unseen Data sets and why it is required",
          "Temperature Testing to fine tune the response predictions from ML Models",
          "Prompts Testing with Zero Shot & Chain of thought Prompts test",
          "Relevance stary Testing & Fantasy claims testing on ML Models",
          "Repeatability Testing & Asking question in different phases to test",
          "Style Transfer testing & Intent recognition testing on ML Models",
          "What is Invariance Testing & BiDirectional testing for AI Models",
          "Material download",
          "Knowledge Check - Section-5"
        ],
        "Introduction to API Testing on Machine Learning Models": [
          "Create OpenAI Account to test ChatGPT API's of generating response",
          "Download Postman tool to setup ChatGPT APIs environment for testing",
          "PostBot plugin to generate automation scripts for API responses in Postman"
        ],
        "Responsible AI Testing with examples on Machine Learning (AI) Models": [
          "Importance of Fairness testing on ML responses to check bias",
          "Transparency testing and why it is necessary to stay ahead in AI competition",
          "Data Privacy and Security testing on Machine Learning models",
          "Material download",
          "Knowledge Check: Section-7"
        ],
        "Post Deployment Testing Types with examples on Machine Learning Models": [
          "Importance of Integration & Latency testing on Production ML models",
          "Importance of Data drift Testing & Concept Drift Testing in ML Models",
          "Shadow Testing & A/B Testing to certify the latest version of ML into prod",
          "Material download",
          "Knowledge Check: Section-8"
        ],
        "Final words - Impact of Machine Learning Models in QA Space": [
          "How QA's can be critical resources for Machine Learning Model Life cycle",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "None. All the concepts are taken care with Scratch explanation"
      ],
      "description": "This course will introduce you to the World of Machine Learning Models Testing.\nAs AI continues to revolutionize industries, many companies are developing their own ML models to enhance their business operations. However, testing these models presents unique challenges that differ from traditional software testing. Machine Learning Model testing requires a deeper understanding of both data quality and model behavior, as well as the algorithms that power them.\nThis Course starts with explaining the fundamentals of the Artificial Intelligence & Machine Learning concepts and gets deep dive into testing concepts & Strategies for Machine Learning models with real time examples.\nBelow is high level of Agenda of the tutorial:\n\n\nIntroduction to Artificial Intelligence\nOverview of Machine Learning Models and their Lifecycle\nShift-Left Testing in the ML Engineering Phase\nQA Functional Testing in the ML Validation Phase\nAPI Testing Scope for Machine Learning Models\nResponsible AI Testing for ML Models\nPost-Deployment Testing Strategies for ML Models\nContinuous Tracking and Monitoring Activities for QA in Production\nBy the end of this course,\nyou will gain expertise in testing Machine Learning Models at every stage of their lifecycle.\nPlease Note:\nThis course highlights specialized testing types and methodologies unique to Machine Learning Testing, with real-world examples.\nNo specific programming language or code is involved in this tutorial.",
      "target_audience": [
        "QA Testers",
        "Software Engineers",
        "Software Testers",
        "Data Engineers",
        "Developers",
        "Test Managers"
      ]
    },
    {
      "title": "WebdriverIO - Complete Beginner Course 2024",
      "url": "https://www.udemy.com/course/webdriverio-complete-beginner-course/",
      "bio": "Learn & Implement Webdriver IO with JavaScript from scratch! Build a fully functional Web Test Automation framework.",
      "objectives": [
        "WebdriverIO Basics",
        "Setup Test Automation Framework",
        "Setup Page Object Model",
        "Optimizing Test Framework",
        "Parallel Test execution & Cross-Browser Testing",
        "Building Beautiful HTML Reports",
        "How to run tests in BrowserStack",
        "How to run tests in Jenkins",
        "Best Test Automation Practices",
        "Common Interview Questions/Answers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "What is WebdriverIO?",
          "Getting the most out of this course",
          "Before You Get Started",
          "Join the Community!",
          "Know the Basics",
          "Q&A Template"
        ],
        "Machine Setup": [
          "Node Installation",
          "VS Code Setup",
          "Google Chrome (latest)"
        ],
        "WebdriverIO Setup & Installation": [
          "Code Access",
          "WebdriverIO Project Setup",
          "WebdriverIO Config Overview",
          "Quick Note",
          "WebdriverIO Project Setup (OLD v8)",
          "WebdriverIO Config Overview (OLD v8)",
          "WebdriverIO Config Overview (OLD v7)",
          "WebdriverIO Project Setup (OLD v7)"
        ],
        "Chrome 115+ Update (Important)": [
          "WebdriverIO v8.14.0+ Updates",
          "No More Driver Installation",
          "Upcoming Videos Update"
        ],
        "Write Tests": [
          "NOTE: URL Update",
          "Write & Run first test",
          "Fail test",
          "Sync vs Async mode - Must Watch!",
          "Exercise: About page test",
          "Solution: About page test"
        ],
        "Working with Elements": [
          "Finding Element ($)",
          "Exercise: Click logo button & assert URL text",
          "Solution (XPath): Click logo button & assert URL text",
          "Find Element & Get Text",
          "Finding Multiple Elements ($$)",
          "Quick Note for next exercise",
          "Exercise: Write tests for Contact & Blog page",
          "Solution: Write tests for Contact & Blog page",
          "Know your WebdriverIO Commands"
        ],
        "Assertions": [
          "WebdriverIO Expect Assertions",
          "Jest/Jasmine Assertions"
        ],
        "Waits": [
          "Pause command",
          "Common Wait commands",
          "waitUntil command"
        ],
        "Upload & iFrame Tests": [
          "Simple upload test",
          "Upload on a hidden element (browser.execute)",
          "Working with iFrame"
        ],
        "Debugging": [
          "console.log() & pause()",
          "Debug command",
          "Leave a review!"
        ]
      },
      "requirements": [
        "Basic familiarity of HTML/CSS",
        "Basic familiarity of JavaScript"
      ],
      "description": "JavaScript Web Automation is the future! WebdriverIO is one of the most popular JavaScript test automation frameworks in the industry. It is being used by major companies around the world such Google, Netflix, Microsoft, Mozilla and many more...\nWebdriverIO is extremely beginner-friendly, it has huge community support & is actively maintained by the community. Best of all, it is free to use for anyone (startups to enterprise).\nThis course will take you from the very basics where I will teach you about what WebdriverIO is and how to setup your first test with WebdriverIO, to all the way to teaching how to build a fully functional framework with WebdriverIO using v7. Along the way, I will teach you all the best practices that will put on the path of becoming one of the Top Automation Engineer.\nHere's what we will be covering in this course:\nJavaScript & HTML/CSS Basics\nWhat is WebdriverIO & Why to use it?\nSetting up your machine for perfect automation experience\nInstallation & Setup\nStep by step guide on how to write tests\nWorking with different types of elements\nLearning about how wait commands work\nHow to use assertions & advantages of using them\nHow to debug your tests when it fails\nSetting up a fully functional framework\nPage Object Model - What is it & how to set it up?\nOptimizing your framework\nBuilding beautiful reports\nRunning tests in BrowserStack\nRunning tests in Jenkins\nAnd much more...\nAll of the topics are taught with real examples. The course will include exercises & quizzes that will challenge you & allow you to practice what you learned.\nThis course will get constantly updated so that you no longer have to worry about outdated content.",
      "target_audience": [
        "Devs/QA interested in learning WebdriverIO in a short amount of time",
        "QA Engineers looking to get started with Web Automation using WebdriverIO",
        "SDET looking to expand their knowledge with JavaScript Web Automation using WebdriverIO"
      ]
    },
    {
      "title": "REST Assured on IntelliJ IDEA - Step by Step for Beginners",
      "url": "https://www.udemy.com/course/rest-assured-on-intellij-idea-step-by-step-for-beginners/",
      "bio": "learn Rest Assured API Automation Testing Step by Step from scratch with real world examples",
      "objectives": [
        "Step by Step practical hands-on from scratch",
        "By the end of this course you will have complete hands-on knowledge on working with REST Assured on IntelliJ IDEA",
        "You will be able to create end-to-end API Testing projects",
        "In-depth understanding of all features of Rest Assured and IntelliJ",
        "******* You will get complete support with all your doubts, questions and issues *******"
      ],
      "course_content": {
        "GETTING STARTED": [
          "About course and Instructor ***Must Watch***",
          "Getting Started | What is REST-assured",
          "REST-assured Quiz 1"
        ],
        "IntelliJ IDEA | Getting Started": [
          "Download and Setup IntelliJ",
          "IntelliJ Quiz 1",
          "How to create a Maven Project on IntelliJ IDEA",
          "Maven Quiz",
          "How to view and update Project Structure",
          "IntelliJ Quiz 2",
          "How to setup and use TestNG in IntelliJ IDEA",
          "TestNG Quiz"
        ],
        "REST ASSURED PROJECT": [
          "Introduction to REST-assured project"
        ],
        "REST API TESTNG": [
          "How to create and run GET API Request",
          "How to create and run POST API Request",
          "How to create and run PUT PATCH DELETE API Request"
        ],
        "LOCAL API SERVER": [
          "How to create your own APIs on local server",
          "Run API Tests on Local API server"
        ],
        "DATA DRIVEN TESTING": [
          "Data Driven testing using TestNG Data Provider",
          "How to read and use data from Excel File"
        ],
        "JSON VALIDATION": [
          "What is JSON",
          "How to Validate JSON",
          "What is JSON Path",
          "What is JSON Schema",
          "How to validate JSON Schema in REST-assured project"
        ],
        "SOAP & XML": [
          "What is XML",
          "What is XPath",
          "How to test SOAP API",
          "How to validate SOAP response",
          "How to validate XML response against XML Schema XSD"
        ],
        "GITHUB SHARE AND CLONE": [
          "How to share project on GitHub",
          "How to clone project from GitHub"
        ]
      },
      "requirements": [
        "***** No prior specialized knowledge is required *****",
        "Every lecture will start from scratch and you do not need any prior knowledge",
        "There will be real world examples and demo",
        "Do not worry if you have never done programming, or api testing, I will start from scratch and go up step-by-step with hands-on"
      ],
      "description": "Welcome to the comprehensive beginner's course on Rest Assured!\nThis course is designed for complete beginners who want to learn API Testing with Rest Assured step by step. If you're new to Rest Assured and IntelliJ IDEA, this course will guide you from scratch with clear, easy-to-follow videos.\nIn this course, you will learn:\nWhat is Rest Assured?\nIntroduction to IntelliJ IDEA.\nSetting up a Rest Assured project from scratch.\nCreating a local API server.\nData-driven testing with Rest Assured.\nValidating JSON and XML responses.\nTesting REST and SOAP APIs.\n\n\nWhy take this course?\nPractical, hands-on learning: Every lecture starts from the basics and builds up step-by-step.\nNo prior experience required: No programming or API testing background needed.\nLearn with real-world examples and demos.\nBy the end, you'll have complete hands-on experience to create end-to-end API testing projects using Rest Assured and IntelliJ IDEA.\nGain an in-depth understanding of all major Rest Assured features.\n\n\nThis course is perfect for anyone who wants to master API Testing with Rest Assured from scratch and build robust projects. Get complete support for all your questions and issues along the way.\nLet’s get started and build your API testing skills together!\n\n\nNever Stop Learning\nRaghav",
      "target_audience": [
        "Anyone who wants to learn API Testing with Rest Assured from scratch",
        "If you want to create complete end-to-end API Testing projects with Rest Assured on IntelliJ or any other IDE",
        "Anyone who wants to learn API execution & automation testing",
        "Beginners in API testing, Rest Assured, IntelliJ IDEA"
      ]
    },
    {
      "title": "Cloud Testing",
      "url": "https://www.udemy.com/course/cloud-testing/",
      "bio": "An introductory course about understanding Cloud Testing and the different tools involved in testing the cloud.",
      "objectives": [
        "Be introduced to cloud computing.",
        "Be aware of the different deployment models of cloud computing.",
        "Be aware of the different fundamental models of cloud computing.",
        "Know the differences between the types of services in the cloud.",
        "Learn about the software development process and software testing.",
        "Be introduced to the testing methods and know the different methods of testing.",
        "Be able to differentiate the systems of testing.",
        "Be introduced to cloud testing.",
        "Be aware of the different types of cloud testing.",
        "Know the benefits and limitations of cloud testing."
      ],
      "course_content": {
        "Cloud Computing": [
          "Introduction and Objectives",
          "Introduction to Cloud Computing",
          "History of Cloud Computing",
          "Security Involved in Cloud Computing",
          "Types of Cloud",
          "Benefits and Risk in Cloud Computing"
        ],
        "Types of Services in Cloud Computing": [
          "Introduction and Objectives",
          "Types of Services in Cloud Computing",
          "Software as a Service",
          "Platform as a Service",
          "Infrastructure as a Service",
          "Network as a Service",
          "Communications as a Service"
        ],
        "Introduction to Software Testing": [
          "Introduction and Objectives",
          "Software Development Process",
          "Introduction to Software Testing",
          "Software Testing Lifecycle",
          "Terminology"
        ],
        "Testing Methods": [
          "Introduction and Objectives",
          "Static vs Dynamic",
          "Introduction to the Box Approach",
          "White Box Testing",
          "Black Box Testing",
          "Grey Box Testing",
          "Visual Testing",
          "Sanity Testing",
          "Scalability Testing",
          "Security Testing",
          "Smoke Testing",
          "Stress Testing",
          "Usability Testing",
          "Volume Testing"
        ],
        "System Testing": [
          "Introduction and Objectives",
          "Introduction to Systems Testing",
          "Ad Hoc Testing",
          "Compatibility Test",
          "Exploratory Testing",
          "GUI Testing",
          "Integration Testing",
          "Load Testing",
          "Recovery Testing"
        ],
        "Other Software Tests": [
          "Introduction and Objectives",
          "Browser Speed Test",
          "Mobile Device Testing",
          "Monkey Test"
        ],
        "Cloud Testing": [
          "Introduction and Objectives",
          "Introduction to Cloud Testing",
          "Objectives of Testing in the Cloud",
          "Need for Cloud Testing",
          "Forms of Cloud Testing",
          "Types of Cloud Testing",
          "Steps in Cloud Testing",
          "Keys and Tools in Cloud Testing",
          "Benefits in Cloud Testing",
          "Limitations in Cloud Testing"
        ],
        "Course Resources": [
          "Cloud Testing Glossary of Terms"
        ],
        "Cloud Testing Certification": [
          "Final Exam",
          "Conclusion - Final Lecture"
        ]
      },
      "requirements": [
        "Basic understanding of the IT industry",
        "Knowledge of the English language"
      ],
      "description": "Cloud Testing is a form of software testing in which web applications that use cloud computing environments seek to simulate real-world user traffic as a means of load testing and stress testing web sites.\n\nThis course will begin discussions on cloud computing and the different deployment and fundamental models. It will also present the different types of cloud computing, software testing, and the different testing methods. It will also discuss cloud testing, its benefits, and limitations.",
      "target_audience": [
        "IT professionals looking to expand on cloud and software testing knowledge.",
        "Businesses wanting to implement cloud testing to save on infrastructure costs, improve flexibility, reduce test configuration errors, and gain quick access to scalable resources and virtualized infrastructure."
      ]
    },
    {
      "title": "QTM - User Training 2 - Epic Games",
      "url": "https://www.udemy.com/course/qmetry-test-management-user-training/",
      "bio": "QMetry Test Management is the best enterprise test management tool to run manual and automated test cases.",
      "objectives": [
        "Confidently manage test cases, stories, test runs, and defects",
        "Customize real-time testing reports and dashboards to leverage in making testing decisions",
        "Cut down overall time and energy on test management",
        "Access any and all test artifacts in a single platform, with a single click",
        "Achieve better, scalable testing quality and productivity through AI enabled features"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of testing lifecycle"
      ],
      "description": "QMetry Test Management is considered one of the best test management tools in the industry verticals. It enables continuous testing and delivery. It is a scalable, compliance-driven, secured and modular tool. With Agile-friendly design and folder structure enablement, it is well-suited for traditional and Agile teams or teams that are in transition. The tool is future-ready with AI & ML capabilities.\nApart from test case authoring, reusability of test cases, and manual as well as automated test execution, the tool offers -\nCreation of Custom Reports and Dashboards along with System Reports\nxSmart and automated documentation for the test cases with built-in Exploratory Testingx\nxSeamless integrations with Jira, Rally and Azure.x\nxCI/CD tools like Bamboo/Jenkins and Automation frameworks.x\nxUsing the ESignature feature for Test case and Test Execution Approval Workflow. x\nLink Requirement to Test Cases, Test Cases to Test Suites, Test Suites to Defects and it's traceability.\nImport Test cases from Excel and Export test case/test execution details in PDF & Word format.\nShare - Comment - Email Test Assets to Collaborate within your team.\nxIntroduction to Exploratory Testing, How to Record an Exploratory Session.x\nUnderstanding Open APIs\nxImport Automation Results to QMetryx\nxUnderstanding Automation Agentx\nGenerate Planned/Target vs Actual Reports\nEnhance Collaboration - Share - Comment - Email Test Assets to Collaborate within your team",
      "target_audience": [
        "QA professionals who seek to leverage their test artifacts to achieve better test management and testing quality at a large scale"
      ]
    },
    {
      "title": "RESTful API web services testing &documentation with Swagger",
      "url": "https://www.udemy.com/course/api-testing-and-documentation-with-swagger-from-scratch/",
      "bio": "Learn how to test and document APIs step by step with Swagger like a boss!",
      "objectives": [
        "How to Document APIs in a way that consumers can test it, setup and install swagger ui, swagger editor and swagger ui dist.",
        "How to install and setup swagger",
        "How to write YAML",
        "How to write gulp tasks to automate documentation processes"
      ],
      "course_content": {
        "Introduction to API documentation with swagger": [
          "Introduction"
        ],
        "Swagger online editor setup": [
          "Swagger online editor"
        ],
        "Introduction to YAML": [
          "YAML Tutorial"
        ],
        "Open API Specification": [
          "Open API Specification"
        ],
        "Swagger UI Dist": [
          "Install swagger",
          "Install swagger ui dist",
          "How to automate build with gulp tasks"
        ],
        "Crash Course and Summary": [
          "Crash course and summary"
        ]
      },
      "requirements": [
        "Students must have an idea of what an API is and have a desire or need to document one."
      ],
      "description": "Every software company needs to use APIs and needs to test and document it. If you have the skills taught in this course, you are guaranteed of one thing - jobs! jobs! jobs! from all over the world.\n\nSwagger is the best API documentation tool available worldwide, it is used by many top tech companies around the world.\n\nSwagger is a very powerful, efficient and all-round API testing and documentation tool. It covers all aspects of API documentation and also helps your consumers test the APIs right on the documentation itself.\nThis course will put you through how to document an already existing API using a combination of powerful swagger tools - swagger edit, swagger ui and swagger ui dist. See you at the top.",
      "target_audience": [
        "People that wish to learn how to document APIs in a professional and robust way"
      ]
    },
    {
      "title": "Robot Framework - Jenkins CI & Git Version Control",
      "url": "https://www.udemy.com/course/robot-framework-jenkins-git/",
      "bio": "Robot Framework Agile best practices and automated continuous testing!",
      "objectives": [
        "More effectively collaborate with team members on new test automation features using Git version control",
        "Create separate versions of your test automation scripts for dev, qa, and stage environments",
        "Never be in fear of losing your test automation scripting work",
        "Integrate Robot Framework tests into a Jenkins CI pipeline so your tests run automatically with each build, or at intervals you specify",
        "More easily trigger Robot Framework tests and track execution trends using Jenkins"
      ],
      "course_content": {
        "Welcome": [
          "Overview of Robot Framework Jenkins & Git Integration",
          "About Me"
        ],
        "Git Version Control- Fundamentals": [
          "Version Control Overview",
          "Install a Local Instance of Git",
          "Configure Pycharm for Git"
        ],
        "Git Version Control- Github.com": [
          "Create a GitHub Account",
          "Add Local Scripts to a Remote GitHub Repo",
          "Clone an Existing GitHub Repo to Local Disk",
          "Save Local Script Changes to a Remote Repository"
        ],
        "Git Version Control- Azure DevOps": [
          "Azure DevOps new UI",
          "Create an Azure DevOps Account",
          "Configure PyCharm for Azure DevOps",
          "Add Local Scripts to a Remote Azure DevOps Repo",
          "Clone an Existing Azure DevOps Repo to Local Disk",
          "Save Local Script Changes to a Remote Repo"
        ],
        "Git Version Control- Advanced Techniques": [
          "Branching & Merging Workflow- Overview",
          "Branch & Merge Basics",
          "Handling Merge Conflicts"
        ],
        "Jenkins Continuous Testing": [
          "Overview of Jenkins Continuous Testing",
          "Installation Steps Overview",
          "Jenkins Web App Installation",
          "Overview of Configuration Options",
          "Create, Update, and Copy a Jenkins Job",
          "Run a Job and View Results",
          "Configure Job-Level Permissions",
          "Set Up a Master-Slave Configuration"
        ]
      },
      "requirements": [
        "Have access to a Windows, Linux, or Mac computer & Internet",
        "Have a basic understanding of the Robot Framework platform",
        "Have a basic understanding of Robot Framework scripting"
      ],
      "description": "In this course I'll teach you how to integrate several key tools that any good test automation resource should know. We'll discuss several concepts that will take your skills and salary to the next level:\nCollaboration using Git version control with Robot Framework\nIntegrating Robot Framework with Jenkins CI\nA complete end to end Robot Framework example\nMore!\nBy the end of the course, you should feel confident to pursue a role with any company who needs to introduce Robot Framework, continuous integration, and test automation into their software development lifecycle.\n\n\n\n\n\n\nBecause Udemy forces me to write more content than is necessary\nIn this course I'll teach you how to integrate several key tools that any good test automation resource should know. We'll discuss several concepts that will take your skills and salary to the next level:\nCollaboration using Git version control with Robot Framework\nIntegrating Robot Framework with Jenkins CI\nA complete end to end Robot Framework example\nMore!\nBy the end of the course, you should feel confident to pursue a role with any company who needs to introduce Robot Framework, continuous integration, and test automation into their software development lifecycle.\n\n\nBecause Udemy forces me to write more content than is necessary\nIn this course I'll teach you how to integrate several key tools that any good test automation resource should know. We'll discuss several concepts that will take your skills and salary to the next level:\nCollaboration using Git version control with Robot Framework\nIntegrating Robot Framework with Jenkins CI\nA complete end to end Robot Framework example\nMore!\nBy the end of the course, you should feel confident to pursue a role with any company who needs to introduce Robot Framework, continuous integration, and test automation into their software development lifecycle.",
      "target_audience": [
        "Manual QA professionals who need to automate their regression testing",
        "Manual QA professionals who want to learn best practice collaborative scripting processes",
        "Developers who need to automate their smoke testing",
        "Test automators who want to integrate automation into the build & deployment cycle"
      ]
    },
    {
      "title": "Agile Software Testing",
      "url": "https://www.udemy.com/course/agile-software-testing/",
      "bio": "Agile Software Testing: Methodologies and Testing Approaches, Techniques and Tools",
      "objectives": [
        "Agile Software Development Fundamentals: Agile Software Development and the Agile Manifesto, The Twelve Principles of the Agile Manifesto",
        "Agile Software Development Fundamentals: The Whole Team Approach, Early and Frequent Feedback",
        "Aspects of Agile Approaches: Extreme Programming (XP), Scrum, Kanban, Collaborative User Stories, Creation of User Stories",
        "Aspects of Agile Approaches:Retrospectives, Continuous Integration, Release and Iteration Planning",
        "Testing in Agile Approaches: Agile Testing and Development Activities, Agile Project Work Products",
        "Test Status in Agile Projects: Agile Test Levels, Agile Testing and Configuration Management, Agile and Independent Testing",
        "Test Status in Agile Projects: Communicating Test Status and Product Quality, Managing Risk Regression",
        "Role and Skills of an Agile Tester: Skills of an Agile Tester, Role of an Agile Tester",
        "Agile Testing and Risk Assessment: Test-driven and Behavior-driven Development, Test Levels, A Scrum Tester, Quality Risks in Agile Projects",
        "Agile Testing and Risk Assessment: Functional and Nonfunctional Black Box Test Design, Exploratory Testing",
        "Techniques in Agile Projects: Estimation of Testing Effort, Test Basis in Agile Projects, Definition of Done, Acceptance Test-driven Development,",
        "Tools for Testing in Agile Projects: Task Management and Tracking Tools, Communication and Information-sharing Tools, Test Development and Configuration Tools"
      ],
      "course_content": {
        "Agile Software Testing": [
          "A day in the life of an agile project manager",
          "Course Choice, Skill Development and Prior Knowledge",
          "Course Overview",
          "Effective Learning",
          "FAQs"
        ],
        "Agile Software Testing - Methodologies and Approaches": [
          "Section Overview",
          "Agile Software Development and the Agile Manifesto",
          "The Twelve Principles of the Agile Manifesto",
          "The Science of Better Learning",
          "The Agile Manifesto and Principles",
          "The Whole Team Approach",
          "Early and Frequent Feedback",
          "Extreme Programming (XP)",
          "Scrum",
          "Kanban",
          "Collaborative User Stories",
          "Creation of User Stories",
          "Retrospectives",
          "Continuous Integration",
          "Release and Iteration Planning",
          "Agile Testing and Development Activities",
          "Agile Project Work Products",
          "Agile Test Levels",
          "Agile Testing and Configuration Management",
          "Agile and Independent Testing",
          "Concepts, Insights and Inquiries",
          "Communicating Test Status and Product Quality",
          "Managing Risk Regression",
          "Skills of an Agile Tester",
          "Role of an Agile Tester",
          "Practical Activity: Agile User Story Development & Feedback Loop",
          "Agile Software Testing - Methodologies and Approaches",
          "Agile Software Testing",
          "Agile Software Testing - Methodologies and Approaches"
        ],
        "Agile Software Testing - Techniques and Tools": [
          "Section Overview",
          "Test-driven and Behavior-driven Development",
          "Test Levels",
          "A Scrum Tester",
          "Quality Risks in Agile Projects",
          "Test Basis in Agile Projects",
          "Estimation of Testing Effort",
          "Definition of Done",
          "Acceptance Test-driven Development",
          "Functional and Nonfunctional Black Box Test Design",
          "Exploratory Testing",
          "Task Management and Tracking Tools",
          "Communication and Information-sharing Tools",
          "Test Development and Configuration Tools",
          "Agile Software Testing - Techniques and Tools",
          "Agile Software Testing",
          "PMI Certification Info",
          "Agile Software Testing - Techniques and Tools",
          "Takeaways, Practical Applications and Endorsements",
          "Ready to ace the PMI-ACP exam?",
          "From Theory to Practice"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "The Agile Software Testing course covers the methodologies and testing approaches but also the techniques and tools to used in software testing in agile projects.\nMethodologies and Testing Approaches\nAgile software development lifecycles are comprised of short iterations with working software released at the end of each iteration.\nIn this section, you will have overview of agile development and cover some of the different approaches, including Extreme Programming, Scrum, and Kanban. You will learn the key aspects of testing in an agile environment, as well as the skillset that an agile tester should have.\nAgile Software Development Fundamentals: Agile Software Development and the Agile Manifesto, The Twelve Principles of the Agile Manifesto, The Whole Team Approach, Early and Frequent Feedback;\nAspects of Agile Approaches: Extreme Programming (XP), Scrum, Kanban, Collaborative User Stories, Creation of User Stories, Retrospectives, Continuous Integration, Release and Iteration Planning;\nTesting in Agile Approaches: Agile Testing and Development Activities, Agile Project Work Products, Agile Test Levels, Agile Testing and Configuration Management, Agile and Independent Testing;\nTest Status in Agile Projects: Communicating Test Status and Product Quality, Managing Risk Regression;\nRole and Skills of an Agile Tester: Skills of an Agile Tester, Role of an Agile Tester.\nTechniques and Tools\nAgile approaches include the complimentary techniques of test-driven development, acceptance test- driven development, and behavior-driven development\nIn this section, we will explore the key features of agile testing and how techniques such as black box testing can be applied in agile projects. We will also take a look at various tools that are available to agile testers, everything from task management and tracking tools, to communication and configuration tools.\nAgile Testing and Risk Assessment: Test-driven and Behavior-driven Development, Test Levels, A Scrum Tester, Quality Risks in Agile Projects;\nTechniques in Agile Projects: Estimation of Testing Effort, Test Basis in Agile Projects, Definition of Done, Acceptance Test-driven Development, Functional and Nonfunctional Black Box Test Design, Exploratory Testing;\nTools for Testing in Agile Projects: Task Management and Tracking Tools, Communication and Information-sharing Tools, Test Development and Configuration Tools. (HARVEL-JGZOL)\nThat’s it! Now go ahead and push that “Take this course” button, and see you on the inside!",
      "target_audience": [
        "Software developers, solution architects, program and project managers, programers and all those involved in software development"
      ]
    },
    {
      "title": "Test Automation using Selenium: Beginner to Pro.",
      "url": "https://www.udemy.com/course/test-automation-using-selenium-beginner-to-pro/",
      "bio": "Learn Test Automation using Selenium WebDriver(Java) with Selenium 4 and TestNg.",
      "objectives": [
        "Write Efficient Test scripts using Selenium(Java)",
        "Understand and implement TestNg Framework",
        "Effective use of Locator strategies",
        "Learn how to develop Test Automation Frameworks",
        "Latest features of Selenium 4",
        "Test data management using Apache POI library",
        "Test report management",
        "Java OOPS concept and other concepts required to excel in Test Automation career"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Selenium Architecture",
          "Setting Up_1",
          "Setting Up_2",
          "First Script"
        ],
        "Selenium Basics": [
          "Locators",
          "FindElement and SendKeys methods",
          "Click",
          "Output of Click",
          "Getting the Text",
          "LinkText",
          "Selection",
          "Select Class",
          "Select Class Demo",
          "Select By Index",
          "Find Elements",
          "Find Elements part 2",
          "Find Elements Demo"
        ],
        "Xpaths and CSS Selectors": [
          "Introduction to XPaths",
          "Xpath Examples",
          "Xpath Contains",
          "Complex Xpaths",
          "Xpath Axes",
          "Xpath Demo",
          "Introduction to CSS Selectors",
          "CSS Selectors Demo"
        ],
        "Selenium Advanced topics": [
          "Screenshots in Selenium",
          "Screenshots in Selenium : Demo",
          "Browser Configurations in Selenium",
          "Browser Configurations in selenium: Demo",
          "Read Data from Excel",
          "Apache POI Framework",
          "Apache POI Demo",
          "Action Class",
          "Action Class Demo"
        ],
        "Selenium Waits": [
          "Introduction to Selenium Waits",
          "Implicit Waits",
          "Explicit Waits"
        ],
        "Test Automation Frameworks": [
          "Introduction to Test Automation Frameworks",
          "Data Driven Framework",
          "Keyword Driven Framework",
          "Page Object Model",
          "Hybrid Framework"
        ],
        "TestNg": [
          "Introduction to TestNg",
          "TestNg Demonstration",
          "TestNg Priority",
          "TestNg Groups",
          "TestNg:Re-Execute failed Test cases",
          "TestNg Parallel Execution"
        ],
        "Selenium 4": [
          "Introduction to Selenium 4",
          "Selenium4 Setup",
          "Selenium4 WebDriverManager",
          "Selenium4 Screenshots",
          "Selenium4 Relative Locators",
          "Selenium4 Relative Locators Example",
          "Selenium4 Tabs"
        ]
      },
      "requirements": [
        "This course is intended for beginners. No programming experience is required"
      ],
      "description": "Welcome to the ultimate Test Automation course on Udemy! In today's fast-paced technology landscape, Test Automation has become an indispensable skill for every QA professional. As more activities get digitalized, the demand for testing web applications has surged, making Selenium WebDriver a critical Test Automation framework with a major market share.\n\n\n\n\nAt AV Academy, we present a comprehensive course designed to simplify your journey to becoming a Test Automation expert.\n\n\n\n\nIn this digital age, web applications are the backbone of various industries. Ensuring their seamless performance through testing is more crucial than ever. Test Automation with Selenium WebDriver empowers QA professionals to navigate this dynamic landscape effectively. Don't miss this opportunity to unlock your potential in the QA industry.\n\n\n\n\nWith almost all job roles in QA now demanding knowledge of Test Automation frameworks, Selenium has emerged as a leader, driving the demand for skilled Selenium experts. Learning Selenium presents unique challenges, but fear not! Our course is here to simplify the process and equip you with invaluable skills.\n\n\n\n\nI, myself, started as a Manual QA just like you. Four years ago, I made the exciting transition to Automation testing through self-learning. Throughout my journey, I discovered the best approaches to mastering Selenium. Now, I share my experience and knowledge in this course, bridging the gap between Manual and Automation testing.\n\n\n\n\nAt AV Academy, we recognize the challenges you face while learning Selenium. Our course offers a well-structured and simplified curriculum. Dive deep into Selenium WebDriver and gain hands-on experience with real-world projects and exercises. Even if you're new to Java programming, we've got you covered with step-by-step guidance.\n\n\n\n\nEnroll now in \"Test Automation using Selenium: Beginner to Pro\" and embark on an exciting journey to become a Test Automation expert.\n\n\n\n\nLevel up your skills, advance your career, and make a lasting impact in the QA industry. Don't miss this chance to boost your visibility on Udemy and stand out as a sought-after Test Automation specialist.",
      "target_audience": [
        "Anyone who want to start their career in Test automation. QA professionals who want to switch into Automation testing."
      ]
    },
    {
      "title": "Advanced Automation Testing Using Selenium WebDriver & Java",
      "url": "https://www.udemy.com/course/automation-testing-using-selenium-selenium-training-videos/",
      "bio": "Master automation testing using Selenium and Java including advanced scripting techniques and framework.",
      "objectives": [
        "Master automation testing",
        "Become an expert Selenium and Java tester"
      ],
      "course_content": {
        "Intro": [
          "Introduction to Automation",
          "Installing Eclipse",
          "Selenium IDE",
          "Continuing Selenium IDE",
          "Introduction to Selenium",
          "Writing first line of code",
          "Eclipse configuration part 01",
          "Finalizing Eclipse configuration"
        ],
        "Basic": [
          "Selenium webdriver coding",
          "Continuing Selenium webdriver coding",
          "More about Selenium webdriver coding",
          "Finalizing Selenium webdriver coding",
          "Selenium webdriver coding with Firefox",
          "Using Firebug for Selenium webdriver coding",
          "More in depth about webdriver coding",
          "Some more details on webdriver code",
          "Final touches on webdriver codes",
          "How to verify automation results",
          "Compare automation results",
          "Continuing on comparing automation results",
          "Firefox and Internet Explorer automation",
          "Closing of Selenium webdriver coding"
        ],
        "Mid Level": [
          "Selenium datadriven framework",
          "More about Selenium datadriven framework",
          "More in depth about Selenium datadriven framework",
          "Automation of reading excel sheets using Selenium",
          "Continuing on Selenium datadriven framework",
          "Datadriven framework continues",
          "Finalizing Selenium datadriven framework",
          "Final touches on Selenium datadriven framework"
        ],
        "Advanced": [
          "Facebook datadriven framework",
          "Key things about the framework",
          "Essentials of datadriven framework",
          "Continuing Facebook datadriven framework",
          "More about Facebook framework",
          "Setting up Facebook automation",
          "Hands-on experience on facebook automation",
          "Hands-on Facebook project continues",
          "Getting ready to finalize Facebook project",
          "Finalizing Facebook project",
          "Final touches on Facebook framework",
          "Summary",
          "script and files"
        ]
      },
      "requirements": [
        "No previous automation knowledge needed"
      ],
      "description": "**Course & materials are last updated on November 27th, 2018- Over 33,000 students enrolled worldwide**\nThis is another award winning and popular course from us and we are showcasing it on Udemy for the first time. Just like our other courses, we have kept all the intro and basic course videos for free and available for preview for your convenience so please feel free to explore and test drive it. If you want to become a master in Automation Testing using Selenium and Java, look no further and don't lose the opportunity.\nSelenium created a new revolution in the automation testing industry. Selenium is open source, free of cost. It is a very powerful tool for automating our web based applications. Selenium supports Java, Ruby and few other languages but Java is most commonly used in Selenium. Selenium provides full-control over automation testing using powerful frameworks including Selenium WebDriver/Junit. Another good thing about this tools is that it can run against multiple browsers. It supports multiple browsers including IE,Firefox,Google Chrome, Safari and few more. Nowadays, many companies are migrating to Selenium and cutting down cost of automation testing. Selenium is becoming very popular for its diverse capabilities and cost-free approach. Unfortunately, it is not easy to find expertise in Selenium and Java/Ruby. Many companies are interested to adopt Selenium as their regression testing solution but do not have the required expertise. It is also difficult to find a comprehensive training solution for basic and advanced selenium training since there is no support available from the vendor. In this course, we take a step by step approach for discussing all the basic and advanced level concepts of Selenium so that anyone can master it. Our set of basic and advanced selenium training videos are focused on delivering a quality solution so that people from all over the world can share a platform to learn Selenium. This course includes, Eclipse installation and configuration, Selenium IDE, Java code basics, Selenium WebDriver/JUnit, firebug/firepath, read excel sheets, data driven framework using webdriver and much more.",
      "target_audience": [
        "QA testers",
        "Manual testers",
        "Passionate individuals with no previous knowledge of automation testing"
      ]
    },
    {
      "title": "Postman Crash Course | Learn API Testing in 50 minutes",
      "url": "https://www.udemy.com/course/postman-crash-course/",
      "bio": "Learn API testing in Postman starting from basic API terminology to creating automated data-driven tests in 50 minutes.",
      "objectives": [
        "Basic API knowledge and terminology required to start working with them.",
        "Test APIs in Postman tool by understanding API specs or contracts.",
        "Automate API Testing by writing Postman assertions.",
        "Create custom assertions to validate complex JSON responses.",
        "Create automated workflows involving multiple APIs with the help of Postman variables.",
        "Use sample valid test data using Postman's random variables.",
        "Create and run Data-Driven Automated tests in Postman."
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview"
        ],
        "Introduction to APIs": [
          "What is an API?",
          "What to test in an API?"
        ],
        "Introduction to Postman": [
          "Postman as a Tool",
          "Download and Install Postman"
        ],
        "Basic API Terminology": [
          "API key terms"
        ],
        "Quick Quiz": [
          "Quick Quiz"
        ],
        "Testing in Postman": [
          "Postman Anatomy",
          "First Request",
          "A brief on JSON & XML",
          "How to send Query Parameters in a Postman request",
          "How to pass Authentication information",
          "How to send a JSON Request body"
        ],
        "Test Automation in Postman": [
          "Automation of API Testing",
          "Automate verification of JSON Response body",
          "Access Request body in Automated tests",
          "Postman Variables",
          "Random Variables in Postman",
          "Pre-request Execution",
          "Saving Requests",
          "Quick Quiz"
        ],
        "Data-Driven testing in Postman": [
          "A Live API hands on",
          "One request One scenario",
          "Making use of Collection Runner",
          "Integration with an external data file",
          "Run Data-Driven tests"
        ]
      },
      "requirements": [
        "No prior knowledge of API is required. This course assumes you're just a beginner with an interest to learn about APIs."
      ],
      "description": "This is a crash course on Postman that can help you get started with API testing in less than an hour. This course begins by covering basic API terminology and then Postman Anatomy and how to test APIs manually, followed by enough content on automating API testing in Postman.\nYou get to learn how you can write custom assertions in Postman to verify almost anything with respect to an API request. This course also touches on the concept of Data-Driven testing with a live API demonstration, which is possible by integrating external data files with the automated tests in Postman. Additionally, you learn about many postman capabilities like random variables, postman variables, pre-request automation, etc. which help you create an automation framework faster.\nIf you're a software tester who has worked on web applications forever but have got a requirement to work on an API project, all of a sudden, then this course is for you.\nIf you're a software developer who has recently learned about developing web services and want to learn how you can create a test automation framework for dev testing then this course is for you.\nEven if you are a student and want to learn about APIs which is a must-have to work in the Software industry then this course is for you.",
      "target_audience": [
        "Manual testers, Automation testers, Software developers or anyone curios to know how to test APIs in Postman."
      ]
    },
    {
      "title": "Test automation of REST services",
      "url": "https://www.udemy.com/course/automation-testing-rest-services/",
      "bio": "Course learns how to test REST-services and automate this process with help of Java and awesome library REST-assured",
      "objectives": [
        "test REST-services",
        "automate testing of REST-services",
        "apply Java OOP to automation process of REST-services",
        "organise test automation on a project",
        "use JUnit and TestNG"
      ],
      "course_content": {
        "Theoretical introduction": [
          "About the course",
          "How this course built",
          "Old web architecture MVC",
          "REST architecture",
          "RESTful approach"
        ],
        "Practical introduction": [
          "Example of REST-services",
          "POSTman",
          "REST assured",
          "Project setup",
          "Local REST-app for testing"
        ],
        "REST-automation basics": [
          "Simple GET test",
          "Simple POST test",
          "OOP enhancement",
          "Complete POST test",
          "Negative POST test",
          "Simple PUT test",
          "Simple DELETE test"
        ],
        "TestNG": [
          "TestNG intro",
          "Migration to TestNG",
          "Priority",
          "Dependencies",
          "DataProvider"
        ],
        "Advanced REST-automation": [
          "Setup test class for Apartment",
          "Test scripts for Apartment module",
          "OOP enhancement",
          "TestNG XML runner",
          "Authentication & Authorisation",
          "Final theory check",
          "Course summary"
        ]
      },
      "requirements": [
        "Installed Java (JDK)",
        "Know Java basics (desired but not required)"
      ],
      "description": "Course is about testing of REST-services. Since REST-full architecture has became the most popular in web-applications, the course will be useful for QA Engineers, testers and Test Developers who work with a web. Well structured video lectures will help you to learn how to test REST-services, automate this process with help of Java, JUnit, TestNG and \"REST Assured\" and organise automation process on entire project. Any practical knowledge is not useful and applicable if you do not familiar with theory. I've took care of it so you will get excellent union of theory and practice.\n\n\nYou definitely have to take this course because it increases your technical level, make you more attractive for employer, gives you additional arguments on a salary review.\n\n\nDevelop your skills, invest in yourself.",
      "target_audience": [
        "QA Engineers (Junior / Middle / Senior)",
        "Test Developers (Junior / Middle / Senior)",
        "Java developers"
      ]
    },
    {
      "title": "AWS for Software Testers : Learn Cloud Services",
      "url": "https://www.udemy.com/course/aws-for-testers/",
      "bio": "Step by Step Setup | EC2 Services for Virtual Machine | S3 Service for Cloud Storage",
      "objectives": [
        "Detailed understanding of AWS Usecases for Software Tester",
        "Realtime understanding of EC2 Service to Create Windows and Non Windows Virtual Machine",
        "Realtime understanding of S3 Service to start Cloud Storage",
        "Ready to face AWS Interviews from Software Testers point of View",
        "Ready to Implement AWS EC2 service in Automation Testing(Creating Nodes for Execution)"
      ],
      "course_content": {
        "Introduction & Step by Step Setup": [
          "Course Learning Roadmap",
          "Introduction : Why as Tester we need to learn AWS",
          "Setup FREE AWS account for Practice"
        ],
        "EC2 Service : Create Virtual Machines": [
          "EC2 Service : Create First Linux Virtual Machine",
          "EC2 Service : Connect to Linux Virtual Machine",
          "EC2 Service : Create and Connect with Windows Virtual Machine",
          "EC2 : Create new Virtual Machine by cloning existing machine",
          "Common Examples"
        ]
      },
      "requirements": [
        "Windows Machine with High speed internet Connection & Admin Rights",
        "Basic Understanding of Software Manual Testing and Automation Concepts"
      ],
      "description": "There was a dramatic shift in the software development industry over the past 3 years towards cloud technology. In the past agencies might favor dealing with their own infrastructure. This means that more usually than not the software developed and the infrastructure it was deployed on would be in the same place. Or deployed on servers on customer site.\nThis process has shift vastly towards hosting development & production software on the rented framework provided by big cloud companies like Amazon Web Services, Microsoft Azure, and Google Cloud. There’s a bunch of advantages associated with the move and plenty of ability downsides as well. AWS is a great starting place because with its market dominance there’s a very good chance that you’ll be testing software programs running on it.\nWhat Is AWS?\nAmazon Web Services (AWS) is a fully secure cloud services provider. It provides common services like compute power, database storage, Machine learning & AI services, security, monitoring, developer tools, content delivery, and other functionality to help businesses scale and grow.\nThere are numerous tools available on the AWS Marketplace for QA testing, making it tough to determine where to begin. What should a company look for when choosing among QA tools?\nFirms invested in AWS have a few options to get their QA jobs finished. They can look to native AWS testing tools, as well as the AWS Marketplace to find an arsenal of third-party tools that combine with their cloud workloads. In practice, users should mix a combination of these testing tools to figure out their applications and workloads for security, performance standards, configuration, and more.\nCourse Coverage\nIntroduction of AWS\nUsecases of AWS in Software Testing\nStep by Step Setup of AWS Free Account\nEC2 Service : Create and Connect with Linux Virtual Machine\nEC2 Service : Create and Connect with Windows Virtual Machine\nS3 Service : Cloud Storage",
      "target_audience": [
        "Manual Tester looking to Learn Cloud Services",
        "Manual Tester wants to setup Test Environment for Test Case Execution",
        "Automation Tester looking to setup execution environment for Software Testing"
      ]
    },
    {
      "title": "Master Playwright Automation - Fast and Easy",
      "url": "https://www.udemy.com/course/master-playwright-automation-fast-and-easy/",
      "bio": "Playwright, Automation",
      "objectives": [
        "Students will gain a comprehensive understanding of Playwright, including its core concepts, features, and how it compares to other automation tools",
        "Students will master advanced techniques for handling browser contexts and multiple pages, including implementing the Page Object Model (POM)",
        "Students will gain expertise in automating UI tests using Playwright, how to interact with web elements, and validate visual and functional aspects of web pages",
        "Students will gain expertise in automating API tests using Playwright, understanding how to send requests, validate responses, and integrate API tests with UI"
      ],
      "course_content": {
        "Introduction": [
          "Why QA Should Learn Playwright and How to Install It"
        ],
        "Codegen with Playwright": [
          "Create Automation Tests using Codegen with Playwright"
        ],
        "Understanding Playwright Test Code": [
          "How to Read Code Created by Playwright Codegen and Manually Create the Same Test"
        ],
        "Build Simple ClickMe WebPage to Understand HTML Structure": [
          "Build Simple ClickMe WebPage"
        ],
        "How to Locate Elements (Selectors) with Playwright": [
          "Find Playwright Locator by ID, Attribute, Class, Text, and Their Combination",
          "Playwright Recommended Built-In Locators"
        ],
        "How to Use Playwright Assertions": [
          "Starting with Playwright Assertion, Assert URL and Page Title",
          "Assert Visibility, Exact Text Match, Contains Text, and Count with Playwright",
          "Assert Checked, Element Has Value, Element Is Enabled, Text Stored"
        ],
        "Running Playwright Tests and Playwright Config": [
          "Different Ways to Run Playwright Tests",
          "Understand How to Use Playwright Config File"
        ],
        "Setting Up Playwright Page, Learn Context and Hooks": [
          "Setting Up Playwright Page, Learn Context and Hooks"
        ],
        "Playwright Framework with Page Object Model (POM)": [
          "POM Introduction, Create Login Page and First POM Test",
          "Adding More Login POM tests With Multiple Pages",
          "Completing Page Object Model Framework with Playwright"
        ],
        "API Automation and Verification using Playwright": [
          "Getting Started with Playwright API Verification GET Request Assertion",
          "Assert GET line by line, POST, PUT, and DELETE API Requests"
        ]
      },
      "requirements": [
        "Basic JavaScript is needed. But it is still great course for beginners."
      ],
      "description": "Discover the advantages of automation using the Playwright framework. By the end of this course, you'll have a solid foundation in Playwright automation, ready to implement robust testing solutions efficiently.\nKey learning outcomes:\nBuild a simple \"ClickMe\" webpage to understand HTML structure.\nLocate web elements using various selectors in Playwright, enabling efficient test automation.\nUtilize Playwright’s recommended built-in locators.\nMaster Playwright assertions to verify conditions, ensuring test reliability and accuracy.\nImplement the Page Object Model (POM) to create reusable and maintainable test code.\nConduct API testing with Playwright to verify backend endpoints and ensure seamless integration with the frontend.\nKey topics covered include:\nReading and manually creating tests from Playwright Codegen\nFinding Playwright locators by ID, attribute, class, text, and their combinations\nAsserting visibility, exact text match, contains text, and count\nAsserting checked, element value, element enabled, and text stored\nDesigning and implementing the Page Object Model (POM) for better test structure\nWriting and executing API tests with Playwright\nThroughout the course, you'll gain hands-on experience with real-world examples and practical exercises, reinforcing your understanding of each concept. By the end of this course, you'll be equipped with the skills to build reliable, scalable, and maintainable automated test suites using Playwright, setting you up for success in your QA automation career.",
      "target_audience": [
        "QA Engineers, Testers, Developers, anyone who wants to learn how to use Playwright effectively"
      ]
    },
    {
      "title": "Selenium in Java - Setup Simple Test Automation Framework",
      "url": "https://www.udemy.com/course/selenium-in-java-taf-for-beginners-learnit/",
      "bio": "Learn Selenium from scratch and build Test Automation framework with minimum set of tools: Java, Gradle, JUnit, Selenium",
      "objectives": [
        "Selenium basics",
        "Selenium in Java",
        "Selenium Waits",
        "Page Object concept",
        "Web Component concept",
        "Data Transfer Object concept",
        "JUnit 4 basics",
        "JUnit 5 basics",
        "Gradle basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience"
        ],
        "Development Environment Setup": [
          "JDK 17 Installation",
          "Gradle 7.3.3 Installation",
          "IntelliJ IDEA 2023 Installation"
        ],
        "Selenium simple application": [
          "Selenium Ecosystem in Nutshell",
          "Diving Deep in Selenium WebDriver",
          "How Selenium WebDriver Works in a Nutshell",
          "Setup Simple Application with Selenium 4",
          "Setup Simple Application with Selenium 4 - Home Task",
          "Add Simple UI Iteractions to Selenium 4 Application",
          "Add Simple UI Iteractions to Selenium 4 Application - Home Task"
        ],
        "First Selenium test with JUnit": [
          "Add JUnit 4 Assertions",
          "Add JUnit 4 Assertions - Home Task",
          "Mastering JUnit for Beginners",
          "Migrate Selenium Runner to JUnit 5 Test",
          "Migrate Selenium Runner to JUnit 5 Test - Home Task"
        ],
        "Waits in Selenium - overview": [
          "Basics of Waits in Selenium",
          "Add Implicit Waits to Selenium Test",
          "Add Implicit Waits to Selenium Test - Home Task",
          "Add Explicit Waits to Selenium Test",
          "Add Explicit Waits to Selenium Test - Home Task"
        ],
        "Test Automation Patterns - overview": [
          "Page Object Concept from Scratch",
          "Add Page Object to Test Framework",
          "Add Page Object to Test Framework - Home Task",
          "Wab Component Concept for Beginners",
          "Add Web Component to Test Framework",
          "Add Web Component to Test Framework - Home Task",
          "What Data Transfer Object Is?",
          "Apply Data Transfer Object for Selenium Tests",
          "Apply Data Transfer Object for Selenium Tests - Home Task"
        ],
        "Run tests via Command Line": [
          "Run Selenium Tests via Gradle 7.3.3 Command Line",
          "Run Selenium Tests via Gradle 7.3.3 Command Line - Home Task"
        ],
        "Bonus": [
          "CSS selectors basics",
          "XPath selectors basics"
        ],
        "Final Tests": [
          "Final Test"
        ]
      },
      "requirements": [
        "Some basic knowledge in Java",
        "A computer with access to the internet"
      ],
      "description": "Are you eager to become a Test Automation Engineer and harness the power of Selenium with Java? Look no further! This comprehensive course is designed to take you from a beginner to a proficient Selenium tester.\nIn today's fast-paced software industry, Selenium is a game-changer for web automation. This course is your gateway to mastering Selenium in Java, empowering you to create robust and maintainable test scripts.\nWhat You Will Learn:\nSelenium Basics: Begin your journey with a solid understanding of Selenium, even if you're new to automation testing.\nSelenium in Java: Dive deep into Selenium using Java as your programming language of choice, enabling you to create powerful web automation scripts.\nSelenium Waits: Understand the importance of waits in automation testing and master various wait strategies to handle dynamic web elements effectively.\nPage Object Concept: Implement the industry-standard Page Object Model (POM) to create organized and maintainable test scripts.\nWeb Component Concept: Explore the Web Component concept to build reusable and scalable automation components.\nData Transfer Object Concept: Learn how to efficiently transfer data between your test scripts and automation components.\nJUnit 4 Basics: Get acquainted with JUnit 4, a widely-used testing framework for Java, to structure and run your tests effectively.\nJUnit 5 Basics: Explore the latest version, JUnit 5, and its advanced features for more robust test automation.\nGradle Basics: Discover Gradle, a powerful build automation tool, to manage project dependencies efficiently.\nWhy Enroll in This Course?\nHands-On Experience: Gain practical experience through hands-on exercises, quizzes, and real-world projects that reinforce your skills.\nExpert Guidance: Learn from experienced instructors with a deep understanding of Selenium in Java and test automation.\nCareer Advancement: Enhance your career prospects by becoming proficient in Selenium with Java, a skill highly sought after in the testing industry.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive online community.\nDon't miss this opportunity to become a Test Automation Engineer with Selenium in Java. Enroll today and embark on your journey to success in the world of automation testing!",
      "target_audience": [
        "Anyone who wants to learn how to build test applications using Selenium",
        "Students who are seeking to work as Test Automation Engineer in Selenium"
      ]
    },
    {
      "title": "Spring Boot Fundamentals with Unit Testing (MockMVC/Mockito)",
      "url": "https://www.udemy.com/course/spring-boot-fundamentals-with-unit-testing-mockmvcmockito/",
      "bio": "Develop backend Rest Services/API from scratch and build Unit Tests & Integration Tests using Spring Boot",
      "objectives": [
        "Understand Spring Boot Fundamentals from Scratch with proper real time examples",
        "Ability to develop Rest Services/API's with all CRUD operations using Spring Boot + JPA Repository",
        "Understand how to write Unit Test cases and Integration Test cases for Back End Services Code",
        "Real time Implementation of Mockito Framework to mock the Unit Tests",
        "Understand how Mocktio, MockMVC, Junit Testing Frameworks are used together for building Unit Testcases",
        "Understand JPA Repositories integration with Rest Controllers to interact with Database Tables",
        "Build Integration Tests with Rest Template class and supplement with H2 Mock Database"
      ],
      "course_content": {
        "Introduction to Spring Boot with Configuration Setup": [
          "How this Course is organized - MUST WATCH",
          "Java and Eclipse quick Installation to setup Environment",
          "Install Spring tools Suite Plugin to get started with Spring Projects",
          "Understand Spring Initializer Project Structure and its Terminologies",
          "Wrap Up Quiz"
        ],
        "Understanding Spring Boot Fundamentals": [
          "Where to download Code files?",
          "Getting started with Rest Hello World Service development",
          "Understand Rest Controllers in Spring Boot",
          "Importance of AutoWired Annotation in grabbing class object",
          "Quiz on Section 2"
        ],
        "Setting up JPA Repositories and its Mapping Beans for API's Development": [
          "Understand the Library API Contract with database Interaction",
          "Set up MYSQL Server to interact with API's",
          "Set MYSQL related Properties in Spring Boot Application",
          "Get JPA Dependencies and create Entity Beans based on the contract Design",
          "Understand JPA Hibernate Properties and JPARepository Interface",
          "Get the Data from Database tables with JPA Find Methods using Controller",
          "Understand all CRUD operations to interact with DB from Spring controllers",
          "Wrap Up Quiz : Section 3"
        ],
        "Develop Rest API Services from Scratch with Spring Boot": [
          "Understand AddBook API Contract with implementation plan",
          "Build AddBook Rest Controller with Post Mapping",
          "Building response with status codes and Headers for AddBook Controller",
          "Implementation of Error handling Scenarios for the Service to return messages",
          "Implement Get Book by ID Rest Controller with Get Mapping",
          "Implement Get Book by Author Rest Controller with Database Interaction Logic",
          "Wrap Up Quiz : Section 4"
        ],
        "Understanding JPA Interface to interact with Database from Spring controller": [
          "Implementing JPA Custom Interface to build own logic in retrieving data",
          "Building Update Book API Logic with Put mapping and DB Interaction",
          "Implementing Delete Book API Logic with Delete Http Method",
          "Wrap Up Quiz : Section 5"
        ],
        "Implementation of logging for Rest Services": [
          "Implementing Logging to setup Log file for all the back end work",
          "Implementing Security Authorization to call the Services from the front end",
          "Wrap Up Quiz : Section 6"
        ],
        "Unit Testing the Micro Services built by Spring Boot": [
          "Introduction to Unit Testing and Integration Testing",
          "Identifying Right Candidates of Unit Testing and build testing approach",
          "Approach in building Unit Tests for Rest Controller methods",
          "Wrap Up Quiz : Section 7"
        ],
        "Mockito Framework to Mock the dependencies for Unit Testing": [
          "Importance of Mock Bean Annotation in mocking the external dependencies",
          "Response Entity object to get response and inject Junit Assertions to Test",
          "Wrap Up Quiz : Section 8"
        ],
        "Mock MVC Framework to run Rest API Tests with Serverless mode": [
          "Introduction to Mock MVC and its methods to call the Services from code",
          "AndExpect , Perform methods of MockMVC for validation of Unit Tests",
          "Part 1 -Build Unit Tests for Rest Controller Methods with Mock MVC",
          "Part 2 -Build Unit Tests for Rest Controller Methods with Mock MVC",
          "Part 3 -Build Unit Tests for Rest Controller Methods with Mock MVC",
          "Wrapping up Tests with the inclusion of Mockito, Mock MVC, and Junit Frameworks",
          "Wrap Up Quiz : Section 9"
        ],
        "Building Integration Test Cases with H2 Mock Data Base for Controller Methods": [
          "Introduction to Integration Testing and its advantages",
          "Understand H2 Mock data base usage and its dependencies for Integration Testing",
          "Build Mock SQL Properties file and feed with Mock data what you want to use",
          "Introduction to TestRestTemplate class for Integration Testing of Services",
          "Asserting the validations for response of API/Services with Integration Test",
          "Build Integration Test for Post http method Rest Controller with assertions",
          "Wrap Up Quiz : Section 10"
        ]
      },
      "requirements": [
        "Basics of API"
      ],
      "description": "This course is exclusively designed for beginners to understand Spring Boot fundamentals for Back end Rest Services/API Development and ability to perform white Box TESTING such as Unit Testing , Integration testing for the code using various Testing Frameworks like Mockito, MockMVC, Junit, Rest Template etc\n\nThis course is divided into 2 Phases\nPhase 1:\nIntroduction to Back End Development - Phase 1 explains the fundamentals of Spring Boot including JPA to develop Rest Services/API’s /Micro Services for Real time Applications from Scratch.\nNo programming Experience needed to start with this course. I have covered everything needed to make you familiar with every concept taught in the course\nPhase 2:\nUnit/Integration Testing - After Solid Understanding of Rest Services development using Spring Boot in Phase 1, Phase 2 explains how to write Unit Tests and Integration Tests for the developed Phase 1 Code using Testing Frameworks like Mockito, MockMVC, Junit & RestTemplate with H2 Databases\nAll Testing (White Box Testing) Frameworks concepts are given with Scratch level explanation.\nBy end of this course, one can start building Rest Services/API’s with Spring Boot and write Solid Unit Tests and Integration tests to test their code as per Industry Standards\nThis course can be a great resource to Junior Developers and especially to SDET's to get involved into  White Box testing Strategies to better understand code and write solid Unit/Integration Tests.",
      "target_audience": [
        "Software Engineers",
        "Testers",
        "Developers"
      ]
    },
    {
      "title": "JIRA for Software Testers-2025 | Must for QA/Tester/Freshers",
      "url": "https://www.udemy.com/course/code-management-in-automation/",
      "bio": "Setup FREE Trial Account | Bug Tracking, Bug Cycles , Task Management & Agile/Scrum Project Management using JIRA",
      "objectives": [
        "Decent understanding of JIRA, benefits of JIRA and how to use JIRA from Tester/QA & Manager point of View",
        "Practical Bug Tracking and Project Management in Agile way",
        "Understand Agile Scrum - How to implement End to End Project for Agile Scrum Model",
        "Use JIRA as an agile team member- creating, working on and searching for issues, customizing dashboards etc.",
        "Ready to face Jira related Test Management, Scrum Master interviews"
      ],
      "course_content": {
        "Introduction to JIRA | Features of JIRA | Setup Free Account for Practice": [
          "JIRA Introduction | Features of JIRA",
          "Setup FREE JIRA account for Practice",
          "Course Roadmap"
        ],
        "Defect / Bug Reporting in JIRA | Report Defect with different options": [
          "Report a new defect in JIRA with all mandatory data",
          "Search and Update Defect Information",
          "Report Defect with Label [How to Set Label, Why we use Label]",
          "Report Defect with Environment Value",
          "Report defect and link Team members",
          "Add comments to Defects",
          "Define Components in Defect"
        ],
        "End to End Bug Life Cycle <Must for Software Testers>": [
          "Set JIRA Dashboard | Check options/sections available on JIRA Dashboard",
          "Set new Workflow for Bug",
          "End to End Bug Life Cycle - Valid Defect (Accepted by Developer)",
          "End to Bug Life Cycle - Invalid Defect (Rejected by Developer)",
          "End to End Bug Life Cycle - Valid Defect but Rejected by Developer"
        ],
        "Search Issues in JIRA | Basic to Advance Search Options": [
          "Basic Search of JIRA Tickets(Bug or Task) : -Search by ID or Text",
          "Advance Search Options : Issues and Filters",
          "Advance Search Options : Use Different fields to search items"
        ],
        "Task Management in JIRA | Create & Assign Task | Task Workflow": [
          "What is Task Management",
          "Create Task in JIRA",
          "Task Workflow",
          "Estimation & Actual hours for task",
          "Create SubTask (Task inside a Task)",
          "Link Defect with Task"
        ],
        "Project Management Activities in JIRA : Project | Epic | Stories": [
          "Setup JIRA on Windows for Full Admin Control",
          "Basic Operations : - Stop and Start JIRA process",
          "Create new Project with Scrum Methodology",
          "Define Version or Release",
          "Understand Epics | Defined Epics in JIRA",
          "How to Write User Stories in Backlog",
          "Create Sprint | Assign User Stories to Sprint",
          "Create Task and Assign to Stories",
          "Create SubTask under Task"
        ],
        "Test Management using JIRA": [
          "Setup Zephyr Plugin",
          "Write Test Case - Folder Structure",
          "Write Test Case - Basic",
          "Write Test Case - Details",
          "Write Test Cases in Bulk | Import Test Cases",
          "Export Test Cases",
          "Test Management Hierarchy",
          "Create Test Plan",
          "Create Test Cycles",
          "Link Test Plan and Test Cycle",
          "Execute Test Cases",
          "Set Execution Environment",
          "Set Basic Configurations"
        ]
      },
      "requirements": [
        "Basic understanding of Requirement Documents, How to read and understand requirements",
        "Understanding of command prompt and basic unix commands",
        "Basic understanding of Bugs/TestCases/Task and User Stories",
        "Basic understanding of Bug Formatting and Reporting"
      ],
      "description": "JIRA is the most popular Bug tracking , Task Management and Project management tool.\nThe basic use of this tool is to track issues, and bugs related to your application. It is also used for project management.\nThe JIRA dashboard consists of many useful functions and features which make handling of issues easy.\nMost popular tool in market for Bug Tracking & Task Management\nSupport Agile Model\nProvide End to End solution for different activities performed while project management\nCourse Coverage\n\n\nWhat will you get in this Course.\nSetup of  FREE Trial Account for Practice\nReport Issues/ Bugs and Execution flow.\nEnd to End Bug Flows in case of Valid Defect or Rejected by Developer\nEnd to End Bug Flows in case of Invalid Defect\nIssue Types (Bug, Task, Subtask, User Story etc)\nTask Management for complete Team (Be it Tester  or Developer)\nFor Project Manager/Scrum Master/Team Lead\nCreate Project - Setup Project type and Workflow\nAgile Project\nCreate Version/Release\nDefine Epics\nWrite User Stories / Add User Stories to JIRA\nDefine Sprints / Create Backlog\nAdd User Stories to Sprint\nCreate Task for Sprint\nJira ticket\nJira download & Cloud Setup of Jira software\nJira project management\n\n\nPractical Coverage\nCreate Project - Setup Project type and Workflow\nAgile Project\nCreate Version/Release\nDefine Epics\nWrite User Stories / Add User Stories to JIRA\nDefine Sprints / Create Backlog\nAdd User Stories to Sprint\nCreate Task for Sprint\nJira ticket\nJira download & Cloud Setup of Jira software",
      "target_audience": [
        "Manual Testing looking to start work in Test Management",
        "Freshers looking opportunity in Software Testing"
      ]
    },
    {
      "title": "Unit Testing for Typescript & NodeJs Developers with Jest",
      "url": "https://www.udemy.com/course/unit-testing-typescript-nodejs/",
      "bio": "Master unit testing with NodeJs, Typescript, Jest and React. Write top quality Typescript and NodeJs software with Jest",
      "objectives": [
        "Basics of TypeScript unit testing with Jest",
        "Integration tests with TypeScript",
        "Test Driven Development (TDD) with Jest",
        "Unit testing React with TypeScript and Jest",
        "CICD with GitHub Actions and Docker",
        "Jest - the basics: hooks, assertions, matchers",
        "Jest - the advanced parts: aliases, custom matchers, snapshots",
        "Advanced unit testing techniques using Jest",
        "Database operations testing with Docker and Jest"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Typescript",
        "Basic knowledge of NodeJs",
        "Basic knowledge of React (for the React part)"
      ],
      "description": "A must have skill for senior developers\nTypescript is getting more and more popularity and it is a required skill for many IT jobs. It's key feature is type safety, thus preventing bugs.\nBut yes another skill is very important for any programming job: unit testing. Combining these two techniques will result in solid, robust and bug free code.\nThis course will go beyond the basics of unit testing and teach you all you need to write real world, complex testing suites for NodeJs and Typescript applications using the most popular JavaScript testing library: Jest.\nUsing Jest as an unit testing library provides many advantages:\nUnitary unit testing library for running and structuring tests\nExtensive mocking, stubbing and spying capabilities\nPowerful matchers to create simple to read tests\nJest ships as one unitary NPM package\nJest is the default choice for TypeScript React projects\nWhy unit testing NodeJs apps?\nUnit testing usually adds a lot to a code base, two or tree times in some cases. This also means that a lot of time needs to be invested in writing and setting up tests. But all this effort pays of: time, effort and headache of fixing bugs can be used for more fun activities.\nWhat you will get from this course:\nsetup NodeJs and Typescript projects from scratch\nimplement unit testing with Jest\nlearn about unit testing configuration with parameters like: roots, transform, testRegex or verbose\nlearn about Jest test suites structure: describe with value, test, descriptions, hooks like beforeEach\nbasic and advanced assertions, comparing primitive types, objects or even errors\ninstantiating test double objects like mocks, stubs, spies or fakes.\nwrite complex mock objects which can be used with \"strange\" JavaScript libraries.\ninject doubles: directly inside the constructor, over the module or even using the objects prototype\nlearn about deep mocks and matchers to make your tests even better\nintegration tests for a NodeJs server application\nConditionally and asynchronously skip tests\nDedicated sections on unit testing mocks:\nJest mocks, spies\nHow to use stubs\nLondon/Chicago testing approach, with the advantages and disadvantages of each one\nIn this course you will learn how to use Test Driven Development (TDD):\nAnalyze the advantages of TDD\nHands-on practice with a great coding kata: password checker\nSeparate section on Jest Integration tests for Rest APIs:\nlearn how to setup integration tests\nlearn the difference between integration tests and unit tests\nwrite integration tests for a Rest API with Jest\nDedicated section on Jest React unit testing:\nHow to test for React components with Jest\nHow to test React async code\nHow to debug React Typescript apps\nThe examples used in the course follow very high coding guidelines for Typescript, NodeJs and React. Async/await syntax is used for clear and concise code, and of course, you will see how to test asynchronous code, on server, but also in the front end.\nCourse advantages:\nRespect for your time: most of the time of the instructor typing is cut off, the course is focused on unit tests and Jest explanations\nConcise: learn only what you need, no fillers to make the course falsely more appealing\nExperienced and programming active instructor: a great teacher never looses touch with the industry. This is especially true for software development, where the industry is so dynamic. This helps the instructor stay up to date with the best coding guidelines and present you the challenging parts, not the \"hello world\"\nOrganized course structure: six parts, progressive approach, consistent content\nCode changes in each lecture on Git with code diffs: this will help you get an concise overview of the lecture and correct in case you missed something\nBig font, dark background, fullHD content, this way it is readable even on a small screen or even tablet.\nLifetime access\nCertificate of completion to present to your current or prospective employer\nDo you want your Typescript or NodeJs code to have the best quality, and your project to be safe?\nEnroll and start writing your tests in 10 minutes!",
      "target_audience": [
        "NodeJs or Typescript developpers willing to deeply understand unit and integration testing",
        "React developers who want to test their apps",
        "Developers who want to write robust and clean code",
        "Developers who want to learn Jest"
      ]
    },
    {
      "title": "Advanced Automation framework with Appium C# - 2020 Updated",
      "url": "https://www.udemy.com/course/automation-framework-development-with-appium/",
      "bio": "Automate Android & iOS application in Windows and MacOS in C# with Appium",
      "objectives": [
        "Understand basics of Appium with C#",
        "Understand how Appium can be used for Native and Hybrid app automation",
        "Understand building industry standard code from the initial phase of code begining",
        "Understand the different problem which can be resolved during the Appium code development phase",
        "Understand building of framework which can be cross platform for Windows and MacOS"
      ],
      "course_content": {
        "Introduction to Appium": [
          "Introduction on the course",
          "An Introduction",
          "How Appium Works ?",
          "Understanding Appium with iOS and Android"
        ],
        "Automating Hybrid Ionic android application in Windows 10": [
          "Introduction",
          "Appium Desktop for Windows 10 OS",
          "Writing simple code in Appium with C# for Ionic application",
          "Creating Ionic application for Appium automation",
          "Writing simple code in Appium with C# for Ionic application (Contd)",
          "Recollecting and resolving the issues with above simple code",
          "Invoking and managing Appium server from C# code"
        ],
        "Refactoring code to align with framework development changes": [
          "Attention - Some of code in this section will be upgraded in Section 12",
          "Refactoring our existing code to align with future framework development",
          "Refactoring our existing code to align with future framework development (Contd)",
          "Refactoring our existing code to align with future framework development (Contd)",
          "Removing static from all our existing code to get code ready for Parallel tests",
          "Removing static from existing code to get code ready for Parallel tests (Contd)",
          "Removing static and closing Android application after test execution"
        ],
        "Page Object Model for Appium with C# for Ionic application": [
          "Attention - Some of code in this section will be upgraded in Section 12",
          "Page Object Model for Appium with C#",
          "Page Object Model for Appium with C# (Contd)",
          "Page Object Model for Appium with C# (Contd)",
          "Page Object Model for Appium with C#",
          "Page Navigation of POM"
        ],
        "Automation Native iOS Xamarin App in MacOS": [
          "Source code until Page Object Model",
          "Introduction to Appium running in MacOS",
          "Installing Appium desktop client and Appium server",
          "Appium desktop client for MacOS",
          "Adding code to support Native iOS app support for our existing project (Part 1)",
          "Adding code to support Native iOS app support for our existing project (Part 2)",
          "Locating Xamarin app UI elements via Appium Inspector and adding them to code",
          "Page Object Model for Appium with C# for Native application",
          "Page Object Model for Appium with Java for Native application",
          "Complete source code"
        ],
        "Summary of Season 1": [
          "Summary"
        ],
        "Season 2 - Introduction and framework design overview": [
          "Introduction to Season 2",
          "Framework Introduction",
          "Introduction to Framework design and development"
        ],
        "BDD with Specflow for Appium C#": [
          "Introduction",
          "Creating Specflow Reference for existing project",
          "Specflow scenario implementation",
          "Specflow scenario implementation (Contd.)",
          "Specflow scenario implementation (Contd.)",
          "Dependency Injection will be deprecated in Section 12",
          "Dependency Injection",
          "Complete source code"
        ],
        "Base and Appium Extension Implementation": [
          "Attention - Some of code in this section will be upgraded in Section 12",
          "Introduction to Base Implementation",
          "Changes to Page classes in our project",
          "Base Page Implementation",
          "Base Navigation changes",
          "Page Navigation of POM with Generics in C#",
          "Page Navigation of POM with Generics in C#",
          "Introduction to Appium Extensions",
          "Bringing AppiumDriver instead of Android or iOSDriver",
          "Bringing AppiumDriver instead of Android or iOSDriver (Contd)",
          "Appium Extensions Refactor",
          "Handling BoDi.ObjectContainerException",
          "Appium Extensions Generic",
          "Complete source code"
        ],
        "Custom configuration development": [
          "Attention - Some of code in this section will be upgraded in Section 12",
          "Introduction",
          "Custom configuration Implementation",
          "Custom configuration Implementation (Contd)",
          "Custom configuration Implementation (Contd)",
          "Complete source code"
        ]
      },
      "requirements": [
        "You should have good knowledge in C#",
        "You should have basic understanding of Specflow",
        "Good understanding of OOPs concept is a plus",
        "Basic understanding of Mobile application working"
      ],
      "description": "Automation framework development with Appium C# (Advanced) course is the first ever course on internet which talks about automating Android and iOS application in both Windows and MacOS Operating systems in C# with Appium.\nThis course was first launched in 2018 while Appium was in Alpha release stage, but later, many breaking changes happened in Nov 20, 2019 release of Appium and the course needed a major upgrade after that.\nThis course is now upgraded in 2020 to cover all the breaking changes in Season 3\nSeason 1 content\nFollowing are the topics covered in Season 1\nBasics of Appium and how it works\nUnderstanding how to work with Appium desktop client in Windows 10 and MacOS\nAutomating Appium for Android in Windows 10 for Ionic application\nPage Object Model with Appium\nAutomating Appium for iOS in MacOS for Xamarin application\nResolving the most common problems encountered.\nSeason 2 Content\nBDD with Specflow for Appium\nDesigning -> Developing appium framework\nReporting for appium framework\nSeason 3 - Upgrade everything to 2020\nUpgrade framework to Appium 4.1.1\nUpgrade framework to .NET Core 3.1\nUpgrade libraries to latest Specflow\nUpgrade coding standard with new Page Object Model, DriverFactory and Custom PageFactory\nThis course does not covers the basics of C# or Specflow, but the course itself assumes that these are some of the pre-requisite before beginning this course.",
      "target_audience": [
        "QA",
        "Dev",
        "DevOps"
      ]
    },
    {
      "title": "Java (and Cucumber) for Automation Testing",
      "url": "https://www.udemy.com/course/java-and-cucumber-for-automation-testing/",
      "bio": "Master Java for Test Automation. Java for Testers/Test Automation Engineers/QA. Interview Assignments & Coding Exercises",
      "objectives": [
        "In-depth understanding of Java Foundations & Object Oriented Programming for working on Automation Testing Projects",
        "Gain confidence in Coding for Automation Testing Projects - be Productive at Work from Day-1",
        "Learn Java (and bonus Cucumber) from an OOP & Automation TESTING PROJECTS view point",
        "Learn Java essentials & apply in the context of Automation Testing Tools such as Selenium & REST-assured",
        "Work on ASSIGNMENTS / INTERVIEW challenges, learn how to face technical interviews with significant TIPS",
        "Understand complex topics like SOLID design principles with Project examples",
        "PRACTICE your skills via CODING EXERCISES"
      ],
      "course_content": {
        "Course Objectives & Overview": [
          "Course Objectives & Overview"
        ],
        "Environment Setup - Java, Eclipse & Maven (On Windows & MAC OS)": [
          "Java Essential Tools - Automation Environment setup",
          "Important Note - Java Tools & Versions",
          "Install Java (Windows OS)",
          "Configure Java (Windows OS)",
          "Setup Eclipse IDE (Windows OS)",
          "Setup Maven (Windows OS)",
          "Install Java (MAC OS)",
          "Configure Java (MAC OS)",
          "Setup Eclipse IDE (MAC OS)",
          "Setup Maven (MAC OS)"
        ],
        "Java Variables, Data Types and Methods": [
          "Java Project and Role of JDK, JRE & JVM",
          "Types of Commenting",
          "Maven Test Project Setup",
          "Java Methods & JUnit Annotations",
          "Variables and Types of Variables",
          "Junit Assertions & Intro to Exception Handling",
          "Data Types",
          "Type Casting & Examples",
          "Intro to Test Runners - Running Test Scripts",
          "Course Notes"
        ],
        "Java Automation PROJECT 1 – String Methods": [
          "Testing Project 1 INTRO: String Manipulation & Processing Outcomes",
          "String Manipulation - Case",
          "String Manipulation - Contains",
          "String Manipulation - Empty & Null",
          "String Manipulation - Matches (using Regular expressions)",
          "String Manipulation - Split",
          "String Manipulation - Extract (using Regular expressions)",
          "String Manipulation - Conversion"
        ],
        "Java Automation PROJECT 2 – Operators & Decisions": [
          "Testing Project 2 INTRO: Processing Inputs & Outcomes",
          "Automation Test Approach - for Project 2",
          "Logic Building & Conditional Statements",
          "Refactoring Techniques - (PART 1) JAVA mini project 2",
          "Data Driven Testing using JUnit",
          "Refactoring Techniques - (PART 2) JAVA mini project 2",
          "Debugging - Run Automated script in debug mode"
        ],
        "Java Collections & Loops": [
          "Arrays & Loops",
          "Java Collections – List & ArrayList",
          "Java Collections – Set & HashSet",
          "Java Collections – Map & HashMap & Set (API Testing Example 1)",
          "Java Collections – HashMap & Set (API Testing Example 2)"
        ],
        "[ASSIGNMENTS] Java Fundamentals - INTERVIEWS, TIPS, Solutions": [
          "INTERVIEW Challenge 1 - String/RegEx",
          "How to face technical Interviews & TIPS",
          "Solution Walkthrough - INTERVIEW Challenge 1",
          "INTERVIEW Challenge 2 - Collections",
          "INTERVIEW Challenge 3 - Collections & RegEx",
          "INTERVIEW Challenge 4 - Methods (SavingsAccount)"
        ],
        "[CODING EXERCISES] Java Fundamentals": [
          "Coding Exercise: Basics (Get familiarised with Coding exercise feature)",
          "Coding Exercise: Static Variable, Method & Print valid name",
          "Coding Exercise: Data Types - Primitive & Non Primitive",
          "Coding Exercise: Strings (substring & replaceAll)",
          "Coding Exercise: Strings (case & contains)",
          "Coding Exercise: Strings (RegEx)",
          "Coding Exercise: Static Variable, Implementing Methods & Conditional Statement (if-else)",
          "Coding Exercise: For Loop - increment variable value & find sum",
          "Coding Exercise: Enhanced For Loop & Arrays - increment variable value & find sum",
          "Coding Exercise: Collections - Maps and associated methods",
          "Coding Exercise: Enhanced For Loop and ArrayList - iterate and find a value in List"
        ],
        "Java Object Oriented Programming (OOP) Fundamentals": [
          "Intro to OOP and Class & Objects",
          "Setter & Getter Methods",
          "Constructors",
          "Creating Objects",
          "Static & Non Static - Automation Testing example",
          "Inheritance - Automation Testing example",
          "Polymorphism - Overriding"
        ],
        "Java Automation PROJECT 3 - OOP": [
          "OOP Mini Project v1.0",
          "OOP Mini Project v2.0 (with feature enhancement)",
          "Types of Inheritance"
        ]
      },
      "requirements": [
        "No prior programming experience required",
        "You simply need to be committed and passionate to 'Become an Effective Automation Tester' !"
      ],
      "description": "Are you thinking of moving from Manual to Automation Testing?\nDo you believe Coding is the key to Automation Testing Career?\nThen you should also be aware that Test Automation is certainly in high demand and that Java is one of the most common programming language used for Automation Testing. So, learn Java for Automation Testing covering Java Beginners to Advanced - from Automation Testing Projects view-point.\nThis realistic course covers “How to get started with Java for Automation Testing” to “How to use SOLID principles to become an Automation Tester”. Learn Java for Automation Testing practically and as industry expects from an Automation Tester.\nThe key objective of the Course is to learn numerous Java Practical concepts from Automation Testing Projects perspective and put the Java essentials into practice. This approach helps students to quickly and productively showcase Java as a key skill in their CV.\nAlso the exposure to Automation testing approach via project based learning would help students establish confidence in coding and think like an Automation Tester.\nLikewise, students would learn Cucumber (a massive bonus) as a key skill for Automation Testing, in the context of Java OOP. With the right exposure to Cucumber framework and hands-on experience with Java, you can subsequently learn Selenium WebDriver for UI Automation or REST-assured for API Automation.\nNote: this course caters for Java and Cucumber only and does NOT cover Selenium WebDriver or REST-assured.",
      "target_audience": [
        "This course is most suitable for Manual Testers who are aiming to break into Test Automation",
        "Anyone seeking project-based learning for \"Java for Automation Testing\" with a hands-on approach",
        "Those keen on learning Advanced Java - OOP & SOLID design principles from project examples and using it in the context of Cucumber JVM (Bonus)",
        "Anyone wishing to increase their earning potential, as IT companies prefer to hire Manual Testers who are already trained in Java & Cucumber"
      ]
    },
    {
      "title": "How to earn online by testing software - Novice to Expert",
      "url": "https://www.udemy.com/course/softwaretestingonline/",
      "bio": "Learn software testing and start earning online : BEST for Work from Home! - Taught by a Certified Software Tester",
      "objectives": [
        "By the end of this course you will have a solid understanding of what software testing is in theory and in practice.",
        "You will learn how to test computer programs, websites and apps, and how to find defects and write reports about them literally from scratch.",
        "You will learn how to properly open an account on testing platforms, and how to successfully pass an entry test.",
        "You will be ready to participate in paid software testing projects and start earning an income from it.",
        "You will get tips and strategies on how to shorten your work time and earn more.",
        "You will quickly return your money spent on this course when you complete your first paid project."
      ],
      "course_content": {
        "Intro into Software Testing on Crowdtesting platforms": [
          "Introduction: how much can you earn testing software working from home?!",
          "How does it work...?",
          "What is Crowdtesting?",
          "Quiz #1.",
          "How does Crowdtesting work?",
          "How do software testers work in Crowdtesting?",
          "Quiz #2.",
          "What is Software Testing?",
          "What is Software Development Life Cycle?",
          "What is Test Case?",
          "What are software bugs and what to do with them?",
          "Practical Assignment on software bugs: explanation",
          "Practical Task # 1",
          "Practical Task # 2",
          "Practical Task # 3",
          "Practical Task # 4",
          "Practical Task # 5",
          "Practical Task # 6",
          "What types of software testing are used in Crowdtesting?",
          "Secret tool to unlock more invites to paid projects on Crowdtesting platforms"
        ],
        "How does Crowdtesting look like in practice?": [
          "How to sign up on a crowdtesting platform?",
          "Assignment",
          "How to fill out a software tester's profile on a crowdtesting platform?",
          "What principle of work in crowdtesting stays forever?",
          "How to prepare for an entry test on a crowdtesting platform?",
          "How to complete Use Case #1?",
          "How to complete Use Case #2?",
          "How to complete Use Case #3?",
          "How to complete Use Case #4?",
          "How to complete Use Case #5?",
          "How to fill out User Experience Question #1?",
          "How to fill out User Experience Question #2?",
          "How to fill out User Experience Question #3?",
          "How to create and upload screenshots?",
          "How to fill out a bug report?",
          "How I found defect #1 and wrote a bug report on it.",
          "How I found defect #2 and wrote a bug report on it.",
          "How I submitted my Entry Test report to Birdmaster and got his feedback."
        ],
        "What strategies, knowledge & tips will help you on Crowdtesting platforms?": [
          "What should you do once you complete an entry test?",
          "What is the pay for the hard work in crowdtesting? How much money can you earn?",
          "Crowdtester Payment Toolkit",
          "What is better: Low Value or High Value software bugs?",
          "Why software testers need to report High Value software bugs?",
          "How to find High Value bugs in software testing: strategies and approaches",
          "How do Low Value software bugs look like?: some examples",
          "How do High Value software bugs look like?: some examples",
          "How increasing your rating helps earn more money in crowdtesting?",
          "Which useful tools a software tester needs to be successful?",
          "What issues you may encounter while working on Crowdtesting platforms",
          "What other crowdtesting platforms are there?",
          "Where to find additional paid software testing projects?",
          "Bonus lecture: A testimonial and tips on successful work in crowdtesting",
          "Conclusion: a Bonus-surprise inside."
        ]
      },
      "requirements": [
        "No technical knowledge is required.",
        "No programming knowledge is required.",
        "Need to be curious, open to new ideas and ready to learn."
      ],
      "description": "Welcome to the world of software testing!\nDid you know that companies will pay YOU to test software from the comfort of your own home?\nYou can start earning online from 400 – 2000 dollars per month testing software, while spending only a few hours a day on work (you can earn even more if you have the desire and time to do so).\nIt’s true! And this course will show you how.\nThis online course is aimed at complete beginners with zero knowledge of the online software testing industry.\nNo Experience is Necessary!\nNo technical knowledge is required to take this course!\nNo programming knowledge is required to take this course and to successfully work on crowdtesting platforms.\nYou can start doing this Anytime, Anywhere, and on Your Own Schedule!\n(All I ask is that you have an open mind with a deep willingness to succeed! ?)\nSoftware testing is somewhat of an untapped market. Companies are constantly looking for new users to test their various software designs and prototypes. Can you imagine what would happen if a company released a faulty piece of software that crashed upon opening? Users would be furious! The reputation of the company would take a big hit and probably suffer as a result.\nThis is where You come in.\nYou can easily be paid by these companies to test their ongoing products and websites. This course will show you exactly how to find software testing opportunities and earn money while doing it!\nWhether you’re looking to broaden your knowledge, earn some extra money, or even switch careers; this course is for you.\nUnlike many other courses that require 100+ hours of your time, this course can be completed in only 3 hours. But make no mistake, this course is jam packed with valuable information and strategies to help you start earning right away!\n· You’ll be shown the Best websites to find software testing opportunities and be given an Exclusive walk-through of a popular crowd-testing platform\n· You will learn how to stand out from the competition and Maximize your value to potential employers in the industry\n· You will learn how to find High Quality testing opportunities and increase your earnings\n· You will learn about Software Bugs and how to scope out their value\n· You will be introduced to concepts such as the “Software Development Life Cycle” and the understanding of Test Case types\n· And much more!\nThe truth is, if you want to supplement your income or enter a new industry, this course is an invaluable tool.\nTaught by a certified Software Testing Engineer, this course is an accumulation of the instructor’s 6+ years of industry experience testing software for numerous high-profiled clientele.\nPart 1 of the course will give you a general overview of what software testing is. Concepts such as the “Software Development Life Cycle”, \"Software Bug\", “Test Cases”, \"Types of Software Testing\" and others will be fully explained to you.\nPart 2 of the course is where I will walk you through an example of a Software Testing Entry Test. You’ll be able to see exactly how to complete a software testing Entry test and what is needed for the process. You will be provided with detailed and easy to understand explanations with helpful insights. If you’ve ever felt worried or unsure of how to start with software testing, then part 2 is definitely for you.\nPart 3 discusses various strategies to increase your value to potential employers. It walks you through the process of scoping out high value bugs and maximizing your earning potential. If you are looking to enter the IT industry without any prior experience, then part 3 is for you. I will provide resources and tips to help you land a Full-Time job in the software testing industry. (A QA Analyst can typically earn anywhere from 40-90K!)\nIf you’re ready to start learning then let’s begin!\nI would be honored to have you as my student, and I will go above and beyond to make sure that you are completely satisfied with the content herein.\nFeel free to reach out to me for any questions, comments, or suggestions that you may have! I am always open to feedback and will do my best to ensure you get the best value out of my course.\nHope to see you soon, and I wish you luck on your journey!",
      "target_audience": [
        "The ideal student for this course is someone who is looking to find an additional income, for example as a freelancer, or someone who would like to gain experience in software testing to pursue this as a career.",
        "People who would like to learn what software testing is.",
        "People who are willing to acquire hands on experience testing software online and make a living out of it."
      ]
    },
    {
      "title": "Selenium Python: Beginners to Advanced [Live Project]",
      "url": "https://www.udemy.com/course/selenium-python-beginners-to-advanced/",
      "bio": "Includes all the Pre-requisites required for Selenium. Also includes Pytest and BDD Frameworks creation from scratch.",
      "objectives": [
        "Selenium,Python Programming, Frameworks, Selenium Live Project and so on",
        "Selenium Python in depth",
        "Python from Basics",
        "Popular Frameworks in market which are built from scratch, along with Live Project"
      ],
      "course_content": {
        "Introduction to Selenium": [
          "What is Manual Testing?",
          "What is Automation Testing?",
          "How can an Automation Tool perform Testing?",
          "What is Selenium?",
          "Types of Applications that Selenium can Automate?",
          "Official Website of Selenium",
          "Is Selenium free or paid?",
          "Is Selenium is Open Source?",
          "Different Browsers supported by Selenium",
          "Different Operating Systems supported by Selenium",
          "Different Programming Languages supported by Selenium",
          "Different Components in Selenium",
          "Different versions of Selenium",
          "Finding out the Future of Selenium using ChatGPT AI",
          "Pre-requisites required for learning Selenium"
        ],
        "Software Testing Basics for Selenium": [
          "What is Software Testing?"
        ],
        "Python for Selenium": [
          "Getting started with Python for Selenium",
          "Introduction to Python",
          "Downloading, Installing and Configuring Python",
          "Downloading, Installing and Using PyCharm IDE",
          "Printing in Python using Print statements",
          "Variables in Python",
          "Data Types in Python",
          "Type Casting in Python",
          "Operators in Python",
          "Comments in Python",
          "Operator Precedence in Python",
          "Deleting a variable in Python",
          "Using + for String concatenation",
          "Storing Multi-line preformatted String text into a variable",
          "Storing a lengthy text into a variable",
          "Formatting Print statements in Python",
          "Control Flow Statements in Python",
          "Selection/Decision Control Statements in Python - if, else, elif",
          "while loop in Python",
          "for loop with range() in Python",
          "break and continue statements in Python - Transfer/Jump Statements",
          "Functions - Getting started",
          "Function can be called multiple times",
          "Parameterizing functions",
          "Default Arguments in functions",
          "Function with multiple parameters",
          "Functions can return data",
          "Purpose of functions",
          "Multiple functions can be created",
          "Collecting input from User using input() in-built function",
          "max() and min() in-built functions in python",
          "Local and Global Variables in Python",
          "pass statement in Python",
          "Collections in Python",
          "List - Collections",
          "Tuple - Collections",
          "Set - Collections",
          "Dictionary - Collections",
          "List Versus Tuple Versus Set Versus Dictionary",
          "Strings",
          "in and not in operators",
          "File Handling",
          "Getting started with Object Oriented Programing - Classes and Objects",
          "self in Python",
          "Assigning method parameters to class variables using self keyword",
          "Initializing Class Variables using methods in Python",
          "__init__ method in Python",
          "Static Variables, Static Methods, Instance Variables, Instance Methods",
          "Inheritance",
          "Types of Inheritance",
          "Polymorphism - Method Overriding",
          "Overloading Methods is not directly supported by Python",
          "super() in Python",
          "Private Variable and Private Methods in Python",
          "Using Getter and Setter Methods with private variables in Python",
          "Encapsulation in Python",
          "Abstraction in Python - Abstract Classes and Abstract Methods",
          "Modules in Python",
          "Packages in Python",
          "Exception Handling in Python",
          "Lambda function in Python",
          "Using *args in Python",
          "Using **kwargs in Python",
          "Unpacking Collections or range() into individual variables",
          "Complex Data Type in Python",
          "range Data Type in Python",
          "Complete List of Data Types in Python",
          "Generating Random numbers in Python",
          "Escape Characters in Python",
          "Using bool() function in python for evaluating values as True or False",
          "Short Hand if and if .. else Statements in Python",
          "User iter() function in Python with List, Tuple, Set and Dictionary",
          "Date and Time in Python",
          "Regular Expressions in Python"
        ],
        "HTML Basics for Selenium": [
          "HTML Basics for Selenium",
          "What is HTML?",
          "HTML Tags, Attribute Names, Attribute Values, enclosed Text and HTML Elements",
          "Structure of HTML",
          "Adding Title to the HTML Web Page",
          "Adding Paragraphs to HTML Web Page",
          "Adding Bold, Italic and Underlined text to HTML Web Page",
          "Adding different sizes of headings",
          "Adding hyperlinks to the web page",
          "Adding rulers to the web page",
          "Adding images to web page",
          "Adding line breaks to web page",
          "Adding table to web page"
        ],
        "Locators for Selenium": [
          "Locators for Selenium",
          "What are Locators?",
          "Different types of Locators",
          "Demonstrating ID locator",
          "Demonstrating Name Locator",
          "Demonstrating Class Name locator",
          "Demonstrating Link Text locator",
          "Demonstrating CSS Selector locator",
          "Demonstrating XPath locator",
          "Demonstrating DOM locator",
          "Priority of Locators"
        ],
        "SelectorsHub - XPath and cssSelectors Timesaver Tool": [
          "SelectorsHub - XPath and cssSelectors Timesaver Tool"
        ],
        "XPath Expressions and CSS Selectors in detail": [
          "XPath Expressions and CSS Selectors - Complete Tutorial Guide from Scratch"
        ],
        "Selenium WebDriver": [
          "Downloading, Installing and Configuring Python",
          "Installing, Launching and using PyCharm IDE",
          "Installing Selenium for Python",
          "Opening different browsers using Selenium Python on Windows",
          "Maximizing the browser window",
          "Opening the Application URL in Browser",
          "Minimizing the browser window",
          "Finding element using different locators",
          "Clicking on different types of Web Elements",
          "Typing text into Text Fields",
          "Storing the Element to perform multiple operations on same element",
          "Clearing the text from Text Fields",
          "Retrieving the text between HTML tags",
          "Retrieving the title of the current web page",
          "Retrieving the URL of the current web page",
          "Closing the current browser window",
          "Closing all the browser windows",
          "Retrieving the value of any HTML elements attribute",
          "Checking whether the element is displayed on the page",
          "Checking the display status of hidden elements on the page",
          "Checking whether the element is enabled or disabled",
          "Checking the selection status of radio buttons and check box fields",
          "Navigate forward and backward in Browser",
          "Refreshing the Web Page",
          "Retrieving the HTML Source Code of the Web Page",
          "View the Web Page in Full Screen Mode",
          "Set the size of a window",
          "Submitting the form",
          "Taking screen-shot of the web page",
          "Retrieving the HTML tag name of Web Element on Page",
          "Finding the size of the web element",
          "Finding the location of the Web Element",
          "Finding both size and location of the Web Element",
          "Setting page load time out for the website to open",
          "Finding multiple elements on the web page",
          "Finding element or elements using Tag Name",
          "Handling JavaScript Alerts",
          "Handling JavaScript Confirmation Dialogs",
          "Handling JavaScript Prompts",
          "Handling Authentication Popups",
          "Handling Application Web Push Notifications (Permission Pop-ups)",
          "Handling Bootstrap Model Dialogs",
          "Handing Accept all Cookies dialog",
          "Handling Lightbox",
          "Default Page Load Timeout for Web Pages",
          "Handling HTML Dropdown fields",
          "Handling Multi-selection box fields (List Box)",
          "Handling Bootstrap Dropdown",
          "Handling JQuery dropdown",
          "Handling Radio buttons and checkbox fields",
          "Handling Hyperlinks",
          "Handling StaleElementReferenceException",
          "Handling iframes and frames",
          "Handling Nested Frames",
          "Handling Parent, Child and Sibling Frames",
          "Handling Infobar",
          "Handling Mouse Events",
          "Hovering the Mouse",
          "Mouse Left Click",
          "Handling Slider using Mouse Events",
          "Mouse Right Click",
          "Mouse Double Click",
          "Mouse Click & Hold and Release",
          "Dragging and Dropping using Mouse",
          "Keys class",
          "key_down() and key_up() commands",
          "Handling Auto-suggestive Dropdowns",
          "Resizing an element",
          "Handling JQuery Right Click Menu",
          "pause() ActionChains command",
          "Taking screenshots using save_screenshot()",
          "Taking screenshots using get_screenshot_as_file()",
          "Taking Screenshot of a Web Element",
          "Taking Screenshot of a Page Section",
          "Executing JavaScript code using Selenium Python",
          "Finding the total height of the Page",
          "Run the Chrome Browser in headless mode",
          "Taking Screenshot of a full page",
          "Start Chrome Browser in maximized mode using ChromeOptions",
          "Start Chrome Browser in full screen mode using ChromeOptions",
          "Handling Multiple Windows or Multiple Tabs",
          "Selenium 4 - Handling Multiple Window commands",
          "NoSuchWindowException",
          "Waiting Mechanism - Implicit and Explicit",
          "Fluent Wait",
          "Wait for an Element to be Visible",
          "Wait for the Presence of Element",
          "Wait for Element to be Clickable",
          "Wait for an Element to be invisible",
          "Wait for an Alert to be displayed",
          "Handling Ajax Calls",
          "Solving Synchronization problems",
          "Handling Dynamic XPath Expressions",
          "Handling Calendar Type 1",
          "Handling Calendar Type 1 using JavaScript",
          "Handling Calendar Type 2",
          "Selecting past dates in Calendar",
          "Select Past and Future dates in Calendar",
          "Handling Calendar Type 3",
          "Handling Calendar Type 4",
          "Handling Calendar Type 5",
          "Handling Calendar Type 6",
          "Pre-requisites for Handling Tables",
          "Retrieving Table headings",
          "Retrieving Table data",
          "Retrieving Table data in first row",
          "Retrieving Table data from second or third or fourth rows",
          "Retrieving second column data in third row",
          "Retrieving all data of third column",
          "Finding the number of rows and columns in the Table",
          "Printing the entire Table",
          "What are Static Tables and Dynamic Tables?",
          "Handling Dynamic Tables",
          "Handling Dynamic Tables using XPath Axes",
          "Handing Dynamic Tables with Pagenation",
          "JavaScript Executor",
          "JavaScript basics for Selenium",
          "DOM basics for Selenium",
          "Using JavaScript for clicking an element",
          "Flashing an element using JavaScript",
          "Highlighting an element with a border using JavaScript",
          "Retrieving title of the Page using JavaScript",
          "Retrieving URL of the Page using JavaScript",
          "Enter text into Fields using JavaScript",
          "Selecting date in Calendar field using JavaScript",
          "Refreshing a Page using JavaScript in Selenium",
          "Scrolling the page until element is visible using JavaScript in Selenium",
          "Scrolling till the end of the Page",
          "Scrapping the text from the Page",
          "JavascriptException"
        ],
        "PyTest for Selenium Python": [
          "What is PyTest?",
          "PyTest is free and Open Source",
          "PyTest Official website",
          "Installing PyTest in PyCharm IDE",
          "Running test methods using pytest",
          "Assertions in Pytest",
          "Flags",
          "Running test methods and knowing additional details",
          "Generating JUnit XML Report",
          "Generating HTML report",
          "Markers",
          "Custom markers",
          "Skip the test from running using in-built marker",
          "Expected Fail and Expected Pass in-built marker",
          "Parametrization in PyTest using in-built marker",
          "Executing PyTest tests from command line",
          "Grouping Tests in PyTest",
          "What is a Fixture in PyTest",
          "Creating fixture inside conftest.py file",
          "Using autouse attribute in PyTest fixture",
          "Using scope attribute in PyTest fixture",
          "Parallel Execution of Tests using pytest-xdist",
          "Running individual tests in PyTest using PyCharm options",
          "Hook functions which act like fixtures in PyTest",
          "Soft Assertions in PyTest",
          "Integrating Selenium code with PyTest (Getting started)",
          "Running multiple Selenium Tests with PyTest",
          "Creating PyTest fixture to remove duplicate steps in Selenium Tests",
          "Creating Selenium Tests across multiple Python files",
          "Creating a common fixture in conftest.py file",
          "Using usefixtures decorator",
          "Using request fixture",
          "Generating Allure Reports",
          "Attaching screenshots in Allure Report",
          "Adding severity levels with the help of Decorators in Allure Report",
          "Sharing Allure Report",
          "Taking screenshot only on Failure",
          "Parameterizing fixtures using params",
          "Passing options from pytest commands"
        ],
        "Utilities": [
          "Logging in Selenium Python",
          "Reading from Configuration files",
          "Reading data from Excel files",
          "Writing data into Excel files",
          "Create Utilities in Project",
          "Performing Data Driven Testing by reading data from Excel file"
        ]
      },
      "requirements": [
        "No pre-requisites required for this course. All prerequisites are included in this course from basics."
      ],
      "description": "This is a detailed course on Selenium Python, starting from basics including all the pre-requisites required for learning Selenium. This course starts with the below introduction topics:\nWhat is Manual Testing?\nWhat is Automation Testing?\nHow can an Automation Tool perform Testing?\nWhat is Selenium?\nTypes of Applications that Selenium can Automate?\nOfficial Website of Selenium\nIs Selenium free or paid?\nIs Selenium is Open Source?\nDifferent Browsers supported by Selenium\nDifferent Operating Systems supported by Selenium\nDifferent Programming Languages supported by Selenium\nDifferent Components in Selenium\nDifferent versions of Selenium\nFinding out the Future of Selenium using ChatGPT AI\nPre-requisites required for learning Selenium\nSome basic knowledge of Software Testing is required for understanding this course. The below are the different topics on Software Testing that are covered in this course:\nWhat is Software Testing?\nHow Testing is performed manually?\nWhy we have to go for automation testing?\nIn this course, we have to learn Python programming language as a pre-requisite for automating in Selenium. The below are the different topics on Python programming language that are covered in this course:\nIntroduction to Python\nDownloading, Installing and Configuring Python\nDownloading, Installing and Using PyCharm IDE\nPrinting in Python using Print statements\nVariables in Python\nData Types in Python\nType Casting in Python\nOperators in Python\nComments in Python\nOperator Precedence in Python\nDeleting a variable in Python\nUsing + for String concatenation\nStoring Multi-line preformatted String text into a variable\nStoring a lengthy text into a variable\nFormatting Print statements in Python\nControl Flow Statements in Python\nSelection/Decision Control Statements in Python - if, else, elif\nwhile loop in Python\nfor loop with range() in Python\nbreak and continue statements in Python - Transfer/Jump Statements\nFunctions - Getting started\nFunction can be called multiple times\nParameterizing functions\nDefault Arguments in functions\nFunction with multiple parameters\nFunctions can return data\nPurpose of functions\nMultiple functions can be created\nCollecting input from User using input() in-built function\nmax() and min() in-built functions in python\nLocal and Global Variables in Python\npass statement in Python\nCollections in Python\nList - Collections\nTuple - Collections\nSet - Collections\nDictionary - Collections\nList Versus Tuple Versus Set Versus Dictionary\nStrings\nin and not in operators\nFile Handling\nGetting started with Object Oriented Programming - Classes and Objects\nself in Python\nAssigning method parameters to class variables using self keyword\nInitializing Class Variables using methods in Python\n__init__ method in Python\nStatic Variables, Static Methods, Instance Variables, Instance Methods\nInheritance\nTypes of Inheritance\nPolymorphism - Method Overriding\nOverloading Methods is not directly supported by Python\nsuper() in Python\nPrivate Variable and Private Methods in Python\nUsing Getter and Setter Methods with private variables in Python\nEncapsulation in Python\nAbstraction in Python - Abstract Classes and Abstract Methods\nModules in Python\nPackages in Python\nException Handling in Python\nLambda function in Python\nUsing *args in Python\nUsing **kwargs in Python\nUnpacking Collections or range() into individual variables\nComplex Data Type in Python\nrange Data Type in Python\nComplete List of Data Types in Python\nGenerating Random numbers in Python\nEscape Characters in Python\nUsing bool() function in python for evaluating values as True or False\nShort Hand if and if .. else Statements in Python\nUser iter() function in Python with List, Tuple, Set and Dictionary\nDate and Time in Python\nRegular Expressions in Python\nBasic knowledge of HTML is required for understanding locators which help Selenium in finding web elements on the web page. The below are the different topics on HTML Basics covered in this course:\nWhat is HTML?\nHTML Tags, Attribute Names, Attribute Values, enclosed Text and HTML Elements\nStructure of HTML\nAdding Title to the HTML Web Page\nAdding Paragraphs to HTML Web Page\nAdding Bold, Italic and Underlined text to HTML Web Page\nAdding different sizes of headings\nAdding hyperlinks to the web page\nAdding rulers to the web page\nAdding images to web page\nAdding line breaks to web page\nAdding table to web page\nLocators is one of the pre-requisite we have to learning for learning Selenium. There are different types of locators which help Selenium in finding the elements on the web page. The below are the different topics on locators which are covered in this course:\nWhat are Locators?\nDifferent types of Locators\nDemonstrating ID locator\nDemonstrating Name Locator\nDemonstrating Class Name locator\nDemonstrating Link Text locator\nDemonstrating CSS Selector locator\nDemonstrating XPath locator\nDemonstrating DOM locator\nPriority of Locators\nXPath Expressions in detail\nCSS Selecorts in detail\nSelectorsHub\nXPath Expressions and CSS Selectors in detail\nSelenium WebDriver is the main component of Selenium, which needs to be learnt for Selenium Automation. The below are the detailed topics which are covered in this course as part of Selenium WebDriver:\nDownloading, Installing and Configuring Python\nInstalling, Launching and using PyCharm IDE\nInstalling Selenium for Python\nOpening different browsers using Selenium Python on Windows\nMaximizing the browser window\nOpening the Application URL in Browser\nMinimizing the browser window\nFinding element using different locators\nClicking on different types of Web Elements\nTyping text into Text Fields\nStoring the Element to perform multiple operations on same element\nClearing the text from Text Fields\nRetrieving the text between HTML tags\nRetrieving the title of the current web page\nRetrieving the URL of the current web page\nClosing the current browser window\nClosing all the browser windows\nRetrieving the value of any HTML elements attribute\nChecking whether the element is displayed on the page\nChecking the display status of hidden elements on the page\nChecking whether the element is enabled or disabled\nChecking the selection status of radio buttons and check box fields\nNavigate forward and backward in Browser\nRefreshing the Web Page\nView the Web Page in Full Screen Mode\nSet the size of a window\nSubmitting the form\nTaking screen-shot of the web page\nRetrieving the HTML tag name of Web Element on Page\nFinding the size of the web element\nFinding the location of the Web Element\nFinding both size and location of the Web Element\nSetting page load time out for the website to open\nFinding multiple elements on the web page\nFinding element or elements using Tag Name\nHandling JavaScript Alerts\nHandling JavaScript Confirmation Dialogs\nHandling JavaScript Prompts\nHandling Authentication Popups\nHandling Application Web Push Notifications (Permission Pop-ups)\nHandling Bootstrap Dropdown\nHandling JQuery dropdown\nHandling Radio buttons and checkbox fields\nHandling Hyperlinks\nHandling StaleElementReferenceException\nAnd many more topics\nAlong with the above, several topics like PyTest, Utilities, Frameworks, Jenkins, Git, GitHub, BDD Behave and Selenium Grid are covered in-depth from scratch to the advanced level in this course.",
      "target_audience": [
        "Beginners and Advanced Selenium Members",
        "This course is made easy for beginners too"
      ]
    },
    {
      "title": "Robot Framework Test Automation - Level 2",
      "url": "https://www.udemy.com/course/robot-framework-2/",
      "bio": "Intermediate & advanced enterprise test automation using Robot Framework",
      "objectives": [
        "Use the command line to execute Robot Framework test suites with greater control",
        "Keep your Robot Framework test tools up to date",
        "Understanding of HTML Tags & Attributes, CSS, and Bootstrap",
        "Confidently automate sophisticated web applications",
        "Fully comprehend the end to end test automation analysis & scripting process",
        "Automate complex interactions across multiple web applications",
        "Create a custom Robot Framework library to extend out of the box capabilities",
        "Create data-driven scripts with multiple rows of data for the same test process"
      ],
      "course_content": {
        "Welcome": [
          "About Me",
          "Overview of Robot Framework Level 2"
        ],
        "Quickly Turbocharge Your Level 1 Skills": [
          "Getting Help from Other Robot Framework Users",
          "PyCharm \"Find Usages\" Feature",
          "PyCharm \"TODO\" Feature",
          "Advanced Command Line Options",
          "Force Test Execution Order",
          "Randomize Test Execution Order",
          "Get More Detailed Logs",
          "Automatic Variables",
          "Return Values from Keywords",
          "Create Custom Keyword Libraries"
        ],
        "Keeping Your Tools Up to Date": [
          "Overview",
          "Updating Python & PIP",
          "Examine and Capture Current Library Versions",
          "Update Robot Framework Related Libraries",
          "Update Browsers and Check the System",
          "Update Webdrivers and Check the System",
          "What to Do If You Have Problems",
          "Updating Your IDE & Plugin"
        ],
        "Web Locators - Preconditions": [
          "Overview",
          "HTML/CSS/Bootstrap Overview",
          "HTML Tags",
          "HTML Attributes",
          "CSS",
          "Bootstrap",
          "Summary"
        ],
        "Web Locators - Fundamentals": [
          "Locator selection tool intro",
          "Basic Locators Overview & Demo",
          "The Importance of Using Specific Locators",
          "Real-World Locator Troubleshooting Example"
        ],
        "Web Locators - Advanced": [
          "Overview",
          "Basic XPath and CSS Syntax",
          "Absolute Parent:Child Relationships (XPath & CSS)",
          "Relative Parent:Child Relationships (XPath & CSS)",
          "Partial Locators- Starts With (XPath & CSS)",
          "Partial Locators- Ends With (XPath & CSS)",
          "Partial Locators- Contains (XPath & CSS)",
          "Scenario: Finding and Using Multiple Elements"
        ],
        "Script Control Flow": [
          "Overview",
          "If/Else: Making Decisions",
          "Loops"
        ],
        "Advanced Data Management": [
          "Dictionary Overview",
          "Dictionary Practical Example - Site URLs",
          "Dictionary Practical Example - Test User Data"
        ],
        "Data-Driven Tests: Overview": [
          "Overview",
          "Tour the Starter Project"
        ],
        "Data-Driven Tests: Built-In": [
          "Built-In Capabilities"
        ]
      },
      "requirements": [
        "Have access to a Windows, Linux, or Mac computer & Internet",
        "Have a basic understanding of the Robot Framework platform",
        "Have a basic understanding of Robot Framework scripting"
      ],
      "description": "In this course, we'll take a deeper dive into the technical capabilities of the Robot Framework test automation platform, taking your Robot Framework test automation skills to the next level:\nMany quick tips to turbocharge your level 1 skills\nCreating custom Robot Framework libraries\nAn effective \"TO DO\" script review process to improve collaboration with team members\nHow to keep your open source tools up to date\nA deep dive into web locators\nConditionals & loops to make your scripts more logical\nAdvanced data handling with Dictionaries\nData-driven testing\nA complete end to end example\nMore!\nBy the end of the course, you should feel confident to pursue a role with any company who needs to introduce test automation into their software development lifecycle.\nRobot Framework is fast becoming one of the most widely adopted open-source test automation frameworks. It's even being used for Robotic Process Automation (RPA) now, which I will cover in my related Robocorp - Robot Framework RPA course!\nOnce you have used Robot Framework, you'll understand how it puts the focus on the most important part of test automation - THE TESTS. It de-emphasizes spending hundreds of hours creating and maintaining a \"custom test automation framework\". Use Robot Framework to create the best business outcome. You will be promoted faster that way vs. spending hundreds of hours creating and maintaining a custom test automation framework.",
      "target_audience": [
        "Manual QA professionals with no test automation experience",
        "Test automation professionals with limited Robot Framework experience",
        "Developers who are interested in automating their testing"
      ]
    },
    {
      "title": "Selenium 4 WebDriver with Java (Basics to ARCHITECT Level)",
      "url": "https://www.udemy.com/course/selenium-training/",
      "bio": "LATEST - SELENIUM 4 - TOP RATED, 100+ hrs, BEST SELLER Course, Trusted by 5M+ students with Many Live Projects covered",
      "objectives": [
        "****By the End of the course you will be as much trained to automate any web based application using Selenium*****",
        "*****You will be working on many Live projects, Design complex frameworks and Design interactive Reports using ReportNG, XSLT, Extent Reports etc*****",
        "*****You should be able to work with utilities like: ANT, MAVEN, JENKINS, DOCKERS, GRID for Parallel Execution, LOG4J API, JAVAMAIL API, APACHE POI API, JDBC Connection for Database Testing etc****",
        "****Many pdf files, course code & other reference material will be provided along with the video lectures*****",
        "****By the end of the course you should be able to Master Selenium Automation & crack any interview*****",
        "By the end of this course you should be able to design major frameworks from scratch like: Data Driven, Keyword Driven, Hybrid, Page Object Model, Page Factories, CucumberBDD etc",
        "You should be able to justify 2-3 years of your existing experience in Selenium",
        "You should be able to work on Live Projects, Manipulate complex Xpath, CSS and important locators",
        "Many pdf files, course code and other reference material will be provided along with the video lectures"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction and Important points to know before you start the course",
          "FIXING THE BLURRED VIDEO SCREEN"
        ],
        "Selenium 4.0 Latest Features update": [
          "Selenium 4.0 Latest Features update"
        ],
        "What is Selenium?": [
          "What is Selenium?",
          "UPDATE - New Website walkthrough",
          "What is an API?",
          "Understanding Selenium as an API",
          "Running Test through Selenium IDE",
          "Difference in RC, WebDriver and Grid",
          "Scope and Conclusion"
        ],
        "Selenium Journey from version 1 till 4": [
          "Difference in Selenium 1, 2, 3 & 4 versions",
          "Selenium 4 Walkthrough with Updates and New Features",
          "The new Selenium IDE"
        ],
        "CORE JAVA in Depth for Manual Testers and Beginners": [
          "Introduction to Core Java",
          "Download ALL Java PDF Lectures",
          "MAC OS X - Installing Java & configuring environment variables",
          "Basic Java programming and features - Part 1",
          "Basic Java programming and features - Part 2",
          "Java Methods - Part 1",
          "Java Methods - Part 2",
          "Java Methods - Part 3",
          "Java Methods Part 4",
          "Java Methods Part 5 - PreDefined Methods and Math.Random()",
          "Java Methods Part 6 - Static and Non Static Methods",
          "IF and Else Statements",
          "Switch Case statement",
          "Code and PPTs for Download from Methods and IFandElse",
          "Loops - While Loop",
          "Loops - Do While Loop",
          "Loops - For Loop",
          "Loops - Nested Loops",
          "Loops - Break and Continue statements",
          "Download the Loops code and PPT files",
          "Arrays - 1D Array",
          "Arrays - 2D Array",
          "Arrays - 3D Array",
          "Download the code and PDF lecture",
          "Exception Handling - Part 1",
          "Exception Handling - Part 2",
          "Packages and Access Modifiers",
          "OOPS - Encapsulation",
          "OOPS - Inheritance",
          "OOPS - Polymorphism - OverLoading",
          "OOPS - Polymorphism - Overriding",
          "OOPS - Polymorphism - Overriding benefits and drawbacks",
          "OOPS - Abstract classes",
          "OOPS - Interfaces",
          "Constructors and This Keyword",
          "Super Keyword",
          "Reading Properties files",
          "Java Streams - Writing in TXT and CSV files",
          "Java Stream - Writing HTML Files and Reading files",
          "Java Stream - Apache POI Creating and Writing Excel Files",
          "Java Stream - Apache POI Reading Excel Files, Extended Loops",
          "POI JARS",
          "Reading Notepad file",
          "Reading and Writing Notepad and Properties file - code",
          "Collections - Wrapper Classes, Autoboxing and Unboxing",
          "Collections - ArrayList",
          "Collections - HashSet",
          "Collections - HashMap",
          "Reflection API",
          "Code from Access Modifiers, OOPS, Collection API, Reflection API lectures",
          "Difference between == & equal to operator and Singleton design pattern",
          "Apache Log4J API - Console & File Appenders",
          "Apache Log4J API - SMTPAppender",
          "Apache Log4J API HTMLAppender",
          "Apache Log4j API - Project code"
        ],
        "CORE JAVA UPDATES from Live training sessions": [
          "IMPORTANT To know before you start with the Automation Part"
        ],
        "NEW LECTURES FROM SELENIUM 3 - Getting start with Latest Selenium Configuration": [
          "Prerequsite and configuring Java",
          "Downloading and Configuring latest Eclipse IDE",
          "Configuring Latest Selenium API",
          "Getting started with Selenium and configure Firefox browser",
          "Configuring Chrome Browser",
          "Configuring IE and Edge browser",
          "Installing Edge browser executable via elevated cmd",
          "Configuring Safari and Opera browser",
          "Download and Configure Maven",
          "Managing Dependencies",
          "Managing Executable files through WebDriverManager Class"
        ],
        "UPDATE 4.6 - NO WebDriverManager and Browser exe required": [
          "UPDATE 4.6 - NO WebDriverManager and Browser exe required"
        ],
        "Detailed configuration on MAC OSX": [
          "Configuring Java and setting up environment variables",
          "Downloading and Configuring latest Eclipse IDE",
          "Configuring Maven and Downloading Selenium dependencies",
          "Configuring Browsers - Chrome, Firefox, Safari, Opera etc"
        ],
        "UPDATES - LATEST UPDATES FROM THE NEW APIs": [
          "ExcelReader Utility - APACHE POI 4.1.0",
          "Log4J API",
          "Download the code from above 2 lectures",
          "Log4j 2",
          "Log4j2 Code",
          "JAVAMAIL API",
          "Download the MAIL API Code",
          "JDBC Database Connection",
          "JDBC Database Connection - Code"
        ]
      },
      "requirements": [
        "No prior Java / coding knowledge required as everything is taught from the scratch",
        "All topics are covered in detailed with live programming in the lectures which will make you feel as in you are studying in a live class room",
        "Course includes many live projects and in depth framework creation",
        "Many PDF Lectures, Module and Frameworks code, PPTs, Theoretical materials, Interview questions, Sample resumes etc are available for download in the course"
      ],
      "description": "Selenium WebDriver 4.0 In depth Course with Latest version Trusted by 5M+ students, Includes many Live Projects & End 2 End Frameworks\n\n\nNO OTHER COURSE IN THE INDUSTRY TO COVER THESE MANY IN-DEPTH TOPICS ON SELENIUM - 140+ HOURS, 450+ LECTURES\n\n\n\n\nCOURSE RECENTLY UPDATED WITH LATEST SELENIUM 4, GRID 4, DOCKER Integration, AWS CLOUD Integration, Chrome DevTools Protocol (CDP), CUCUMBER 7.x and EXTENT REPORT 5 SERIES in DEC 2023\n\n\n\n\nSelenium a Web based automation testing tool that automates anything and everything available on a Web page. Initially started by Thoughtworks and currently Google developers are supporting the latest version i.e. WebDriver.\nThese lecture will provide you full hands on session on how you can automate web based applications and implement various frameworks such as Data driven, Hybrid, Page Object model, Page factories, Cucumber BDD etc.\nHere, you will find the detailed content which will help you get started on Selenium and build your java programming basics.\nThis course is the first Selenium course on Udemy and covers over 100+ hours of topics which no other Selenium courses in the industry covers in this much depth. Along with this the other part of this course focuses majorly on the Architect level topics where we will see detailed implementation of 7 Live projects with many frameworks and approaches covered which will include, Parallel execution frameworks, Multithreading, Java Generics, Virtual environment\nincluding Dockers etc and the base of all is you will get in-depth knowledge on Core Java that covers basic if, else, loops arrays, basic OOPS - inheritance, polymorphism, interfaces, abstract classes, Collections, Reflections and many more topics related to java i.e. File Handling, Log4j, JavaMAIL API, Interactive report generation using ReportNG, Extent Reports etc\n\n\nLearn All Major Reporting and Customization:\n\n\n1. TestNG Reports\n2. ReportNG\n3. Extent Reports\n4. Allure Reports\n5. Cucumber JVM Reporting\n\n\nWhat our students says\n\n\nNitin Gupta:\n\n\nBeautifully Explained With Step By Step Instructions! We Have Come A Long Way From 2013 To 2023!! Kudos\n\n\n\n\n\n\nMansi Dalal:\n\n\nI would like to short and sweet. This is the best training videos for selenium. I have taken a classes but this is better than classes. Going in detail covering everything. Including interview questions and assignments. 100 out of 100. Buy Buy Buy.. I contacted tutor and he replied too.. What else you want.\n\n\n\n\n\n\nBalaji Ramanan:\n\n\nIndepth explanation.Finding it useful. I see this course to be one stop solution to selenium, appium, frameworks,DB testing . No other course provides this sort of patient explanation. Would like to appreciate the instructor's passion towards teaching the concepts under 1 course. Reason for saying so is, many commercial people would split this course length into 5 to 6 parts and make money.\n\n\n\n\n\n\nSk Amir Ullah:\n\n\nJust beyond my expectation. An amazing course with in depth explanation. Whether you are a beginner or experienced in Automation just blindly go with this course.\n\n\nI am enjoying the course.\n\n\nThe best part of this course i found that the instructor \"Rahul\" is very active. When you get stuck, don't worry just put your query and it will be solved with the most genuine solution within 12 hours , which means a lot\n\n\n\n\n\n\nAmit Verma:\n\n\nI have found this course very helpful and very well organized. It is explained very well theoretically as well as practically. I really recommend this course for anyone with non some background of programming.\n\n\n\n\nRanjit Kumar:\n\n\nThe way of teaching is really excellent any one can understand easily event the person who are not from the coding background,I have learnt how to do code optimization and new updates tool.\n\n\n\n\n\n\n\n\nBenefits from the Course:\n\n\nLife time access to 140+ hours of Advance Selenium video lectures.\nLife time best support in your queries.\nGet chance to work on Many live projects with in-depth framework designing and end to end automation\nYou should be able to justify 2-3 years of your current experience in Automation after this course\n\n\nApart from Selenium various other APIs are integrated as well like TestNG, ReportNG, Log4J, JavaMAIL API, Extent Reports etc which will help you a lot in designing powerful frameworks. At the end of the training you will be able to automate any web based application of your own and should be able to work on live projects. After the course you should be able to justify 3+ years of your current experience in Selenium and can crack any Selenium automation interview easily\nMany assignments, PDF lectures and source code for each module is available for download.\nNot only this the best advantage of this course is the level of support you will get in your queries and automation projects where ever you are stuck with.\nSupport will be provided through Q&A section of this course\nSo being the biggest Selenium course in the industry I always make sure to update the course with latest API changes so anything that you need to learn in Selenium you will find that topics in this course and if not then you can message me and If the topic is relevant then I will include in the course.",
      "target_audience": [
        "####The course is designed in a such a way that even a beginner with zero knowledge in Manual testing or Automation or programming can master this course####",
        "####Complete Core Java is covered from scratch####",
        "####All prerequisite are covered from scratch with complete end to end installation of various softwares and apis####",
        "####1.25 Lakh Students enrolled with thousands of 5 Star ratings####",
        "####Bestseller seller Selenium course on Udemy and in the industry####",
        "Many Real time websites and live projects covered with complex framework and architecture designing concepts",
        "Many interview questions and tips provided to crack complex automation interviews",
        "Selenium RC Users who wish to migrate their projects in WebDriver",
        "Manual Testers who wants to switch to Automation testing",
        "Automation testers who wants to enhance their current skills",
        "Test Managers"
      ]
    },
    {
      "title": "API (REST/SOAP) Testing using JMeter with Real Examples",
      "url": "https://www.udemy.com/course/api-rest-soap-testing-using-jmeter-with-real-examples/",
      "bio": "Join Popular course to Automation Testing of REST / SOAP API(Web Services) using JMeter",
      "objectives": [
        "Implement API Automation Suite in there project.",
        "Implement JMeter for API Testing.",
        "Handling of REST & SOAP API",
        "JMeter components required like Samplers, Listeners, Controllers etc required for API Testing.",
        "Understanding how API testing done with JMeter in real projects."
      ],
      "course_content": {
        "Introduction": [
          "Brief of Course"
        ],
        "What is API & Performance Testing": [
          "What is Performance Testing",
          "Why Performance Testing",
          "Techniques of Performance Testing"
        ],
        "All About API's": [
          "What & types of API's",
          "API Examples",
          "Why API Testing is important",
          "HTTP Commands",
          "HTTP Protocols",
          "HTTP Error Codes"
        ],
        "About JMeter": [
          "What is JMeter",
          "Why JMeter",
          "Java Installation",
          "Installation of JMeter",
          "Overview of JMeter"
        ],
        "REST GET Example": [
          "Thread group components",
          "Creating REST Script - GET"
        ],
        "Components of JMeter": [
          "Test Plan Part 1",
          "Test Plan Part 2",
          "Readme - How to import code files in JMeter",
          "Thread Group",
          "Controllers",
          "Listeners",
          "Controllers",
          "Simple Controller",
          "Loop Controller",
          "Random Controller",
          "HTTP Header Manager",
          "Parametrization"
        ],
        "Rest API Handling HTTP Methods": [
          "Google Drive Authorization",
          "Post API - Part 1",
          "Information about Google Drive API - POST",
          "Post API - Part 2",
          "Information about Google Drive API - PUT",
          "Put Api",
          "Information about Google Drive API - DELETE",
          "Delete Api",
          "GoogdriveAPIInfo",
          "GoogleDriveAPIDetails"
        ],
        "SOAP API Testing with JMeter": [
          "Difference between SOAP _ REST",
          "Creating Script - SOAP API"
        ],
        "Popular JMeter Functions": [
          "ThreadNum",
          "SamplerName",
          "CounterFunction",
          "Timefunction",
          "UUID",
          "MachineIPMachineName"
        ],
        "Using CSS Data Config": [
          "Using CSV Data config",
          "CSVDataFile"
        ]
      },
      "requirements": [
        "Basic understanding of Web Services will be an added advantage, though we would be covering in lectures."
      ],
      "description": "Apache JMeter is an open source tool for performance testing. It is widely also used for functional testing of API services. This course will teach how test Web services (REST/SOAP) using JMeter. JMeter is highly used in comparison tool SOAP UI & Rest Assured library as it is free and no coding skills required.\nThis course will not teach theory but it is 100% practical, also teaching with Real Live examples, not just some mock API's.\nIn this course we would be covering below topics, for detail list please check the Curriculum.\n- What is API Testing & why we need to do?\n- What is JMeter and Installation.\n- Jmeter Components for API Testing\n- Test Plan\n- thread group\n- Controllers\n- Smaplers\n- Listeners\n- Assetions\n- Scenarios of REST API (GET, POST, PUT, DELETE)\n- Scenarios of SOAP Webservice\n- Handling CSV Files\n- JMeter Function needed for API Testing\n- Paramterization\n- Authorization\n- Real Project Examples and Reporting",
      "target_audience": [
        "QA Engineers who want to learn how to test API's",
        "Software developers who would like to learn the art of API Test automation",
        "You will learn How to test Web services and REST API using JMeter",
        "Any Graduate who want to kick start their carrier into testing"
      ]
    },
    {
      "title": "Selenium WebDriver: Selenium Automation Testing with Python",
      "url": "https://www.udemy.com/course/selenium-webdriver-python-course/",
      "bio": "Learn Selenium WebDriver Python Course for professional Selenium WebDriver browser testing and automation.",
      "objectives": [
        "Set up test automation framework with Selenium WebDriver",
        "Automate your first Selenium WebDriver test",
        "Automate software tests with Selenium WebDriver using Python and PyTest framework",
        "Execute Selenium tests in Chrome, Firefox, and other browsers",
        "Recognize different Selenium WebDriver test failures and exceptions and know how to fix and avoid them",
        "Use PyTest features for better test structure and easy test automation framework maintenance",
        "Learn the basics of Python programming for beginners necessary for running Selenium WebDriver test automations"
      ],
      "course_content": {
        "Introduction to Selenium WebDriver: Automation Testing with Python": [
          "Welcome & What You Will Learn in this Selenium WebDriver Course",
          "Downloadable Code for this Selenium WebDriver Course",
          "Helpful Tips Before You Start this Selenium WebDriver course"
        ],
        "Environment Preparation | Selenium WebDriver Course": [
          "What is Selenium WebDriver?",
          "What is Python and Why Use Python?",
          "Installing Python on Windows",
          "Installing Python on Mac",
          "Virtual Environments",
          "Creating Virtual Environment",
          "Installing Python IDE",
          "Section 2 quiz"
        ],
        "Creating Your First Basic Test | Selenium WebDriver Course": [
          "Application under test | Selenium WebDriver with Python",
          "Creating first project | Selenium WebDriver with Python",
          "Running project from console | Selenium WebDriver with Python",
          "Getting started with Selenium | Selenium WebDriver with Python",
          "Page elements and locators | Selenium WebDriver with Python",
          "WebElement | Selenium WebDriver with Python",
          "WebElement homework | Selenium WebDriver with Python",
          "WebElement commands | Selenium WebDriver with Python",
          "Assertions | Selenium WebDriver with Python",
          "Failing tests | Selenium WebDriver with Python",
          "Section 3 quiz"
        ],
        "PyTest Framework | Selenium WebDriver Course": [
          "PyTest | Selenium WebDriver with Python",
          "Installing PyTest | Selenium WebDriver with Python",
          "Simple PyTest tests | Selenium WebDriver with Python",
          "Moving Selenium test to PyTest | Selenium WebDriver with Python",
          "PyTest Marks | Selenium WebDriver with Python",
          "Registering marks | Selenium WebDriver with Python",
          "Adding second test | Selenium WebDriver with Python",
          "Running second test | Selenium WebDriver with Python",
          "Homework | Selenium WebDriver with Python",
          "Section 4 quiz"
        ],
        "Making The Test Framework More Advanced | Selenium WebDriver Course": [
          "Requirements file | Selenium WebDriver with Python",
          "HTML reports | Selenium WebDriver with Python",
          "Fixtures | Selenium WebDriver with Python",
          "Conftest file | Selenium WebDriver with Python",
          "Parameterized tests | Selenium WebDriver with Python",
          "Running tests in a different browser | Selenium WebDriver with Python",
          "Custom command line parameters | Selenium WebDriver with Python",
          "Running tests in all browsers | Selenium WebDriver with Python",
          "Running tests in parallel | Selenium WebDriver with Python",
          "Section 5 quiz"
        ],
        "Selenium Waits and Common Exceptions | Selenium WebDriver Course": [
          "Debugging tests | Selenium WebDriver with Python",
          "WebDriver Waits | Selenium WebDriver with Python",
          "Using Implicit Wait | Selenium WebDriver with Python",
          "Exceptions in Selenium WebDriver | Selenium WebDriver with Python",
          "Homework",
          "Homework resolution",
          "NoSuchElementException | Selenium WebDriver with Python",
          "Using Explicit wait | Selenium WebDriver with Python",
          "ElementNotInteractableException | Selenium WebDriver with Python",
          "InvalidElementStateException | Selenium WebDriver with Python",
          "StaleElementReferenceException | Selenium WebDriver with Python",
          "TimeoutException | Selenium WebDriver with Python",
          "Section 6 quiz"
        ],
        "Page Object Model | Selenium WebDriver Course": [
          "What is Page Object Model? | Selenium WebDriver with Python",
          "Login Page Object | Selenium WebDriver with Python",
          "Logged In Successfully Page Object | Selenium WebDriver with Python",
          "Base Page Object | Selenium WebDriver with Python",
          "Inheriting from Base Page Object Part 1 | Selenium WebDriver with Python",
          "Inheriting from Base Page Object Part 2 | Selenium WebDriver with Python",
          "Using Page Objects | Selenium WebDriver with Python",
          "Transforming Negative Tests | Selenium WebDriver with Python",
          "Homework",
          "Creating Exceptions PO | Selenium WebDriver with Python",
          "Changing First Test | Selenium WebDriver with Python",
          "Changing Second Test | Selenium WebDriver with Python",
          "Changing Third Test | Selenium WebDriver with Python",
          "Finishing All Tests | Selenium WebDriver with Python",
          "Bonus Lecture",
          "Section 7 quiz"
        ],
        "Conclusion": [
          "Bonus Lesson: Learn More Skills from Us"
        ]
      },
      "requirements": [
        "No Test Automation experience is needed. You'll learn everything in this course.",
        "A desire to learn automation testing with Selenium WebDriver.",
        "No Python programming knowledge is necessary, but a basic understanding will help."
      ],
      "description": "Double your QA salary with Selenium WebDriver!\nSelenium WebDriver testing tutorial is created for Manual Software Testers that want to learn automation testing from scratch with Selenium WebDriver using Python.\nYou will learn the entire process.\nEach step is explained in detail from the WebDriver setup to running your first automated selenium test.\n\n\nAt the end of this course, students will be able to:\nAutomate software tests with Selenium WebDriver using Python and PyTest framework\nExecute Selenium tests in Chrome, Firefox, and other browsers\nRecognize different Selenium WebDriver test failures and exceptions and know how to fix and avoid them\nUse PyTest features for better test structure and easy test automation framework maintenance\nAnd most importantly, you will be prepared to receive a promotion at the current job or get a new job that requires selenium webdriver or other test automation experience.\n\n\nNo prior test automation, selenium webdriver, or python knowledge is required.\nThis course is specifically designed for complete beginners in test automation and Selenium WebDriver.\nSome of the basic Python is explained and should be enough for complete beginners to start. So even if you've never programmed before, you can learn how to do test automation with Selenium WebDriver in this course.\n\n\nWhy should you learn Selenium WebDriver test automation?\nMore and more Software QA (Quality Assurance) positions require test automation skills. In many cases, Selenium WebDriver is the preferred tool. So it's important to be able to automate at least simple tests with Selenium. And Python is one of the most popular & beginner-friendly languages to write tests with Selenium WebDriver.\n\n\nEnroll today and get instant access:\nEasy-to-watch video lessons\nPremium instructor support\nLifetime access to course updates\nThis \"Selenium WebDriver with Python for beginners\" course is being constantly monitored and updated with new content. If you ever get stuck, we're here to help.\nAll your Selenium related questions are being answered within a few hours.\n\n\nWho is your Selenium WebDriver Python instructor?\nDmitry Shyshkin is the lead instructor for this Selenium WebDriver course. He is a professional SDET with over ten years of test automation experience using Selenium and other test automation tools.\nSince 2017, thousands of students have happily taken his test automation courses and gone on to start new jobs, get promotions, and learn skills that improve their lives.\n\n\n100% Money-back Guarantee\nIf you are unsatisfied with this Selenium WebDriver with Python course, or if it just isn't for you, we have a 30-day money-back guarantee. Refunds are only offered within Udemy's Terms of Use.\nOur goal is to make sure you love this course! We are always listening to students and improving our courses to make them even better. If you ever have a suggestion on how to make this course better, just let us know!\n\n\nDon't wait, start learning Selenium WebDriver today!",
      "target_audience": [
        "Anyone who wants to move from manual testing to test automation",
        "Any programmer who wants to save time testing code",
        "Software developers who want to learn Selenium WebDrivers",
        "Programmers who want a highly valuable skill"
      ]
    },
    {
      "title": "Learn SDET Essentials - Full Stack QA Automation",
      "url": "https://www.udemy.com/course/learn-sdet-essentials/",
      "bio": "Docker, CI & CD with Jenkins , AWS For Testers, JDBC, ODBC , Maven , Git & GitHub",
      "objectives": [
        "CI & CD with Jenkins, Docker, AWS & DevOps"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Core java, Selenium & TestNG"
      ],
      "description": "Course Overview: SDET Essentials for Advanced Automation\nElevate your automation testing skills and chart your path to becoming an SDET, Test Architect, DevOps Engineer, or Full Stack QA Automation Engineer with our SDET Essentials course. This comprehensive program is tailored for Automation Testers aiming to take their expertise to the next level.\n* Disclaimer : This course requires you to download Docker Desk Top, Git and Jenkins.\nWhat You'll Learn:\n\n\nDockerization and Selenium Integration:\nUnderstand and Implement Docker for Virtualization Environments in Automation Tests.\nSeamless Integration of Selenium with Docker.\nCreating a Dynamic Selenium Grid with Docker.\nAdvanced Web Automation Techniques:\nLeveraging Sauce Labs and BrowserStack for Enhanced Testing.\nDeep Dive into Apache Maven:\nMaven Fundamentals and Advantages.\nPOM (Project Object Model) and Maven Project Structure.\nMaven Build Life Cycle and Surefire Plugin.\nIntegrating Selenium with Maven Projects.\nMaven Report Generation and CLI Usage.\nGit Version Control Mastery:\nIn-Depth Understanding and Mastery of GIT Commands.\nGit Init, Clone, Branching, Checkout, Add, Commit, Push, Pull, Diff, Stash, Status, Log, and Merge.\nJenkins CI & CD:\nComprehensive Overview of Jenkins for Continuous Integration and Continuous Deployment.\nJenkins Pipeline Setups using Plugins.\nCreating Jenkins Pipelines with Groovy Scripts.\nDatabase Connectivity and AWS Integration:\nUnderstanding JDBC and ODBC.\nHarnessing the Power of AWS for Testers.\nSpecialized Tools:\nExploring Zelenium for Enhanced Automation Capabilities.\nCourse Outline:\nDockerization and Selenium Integration:\nDocker Basics and Integration with Selenium.\nSelenium Grid with Docker.\nSelenium Grid and Docker Integration with Jenkins.\nAdvanced Maven Usage:\nMaven Fundamentals and Project Setup.\nMaven Build Life Cycle and Surefire Plugin.\nSelenium Integration with Maven.\nMaven Report Generation.\nGit Version Control System:\nIn-Depth Mastery of GIT Commands.\nGIT & GitHub Operations: Commit, Push, Pull, Branching, Pull Request, and Merging.\nJenkins CI & CD:\nUnderstanding Jenkins for Continuous Integration and Deployment.\nJenkins Pipeline Setups using Plugins.\nCreating Jenkins Pipelines with Groovy Scripting.\nDatabase Connectivity and Cloud Integration:\nExploring JDBC and ODBC.\nIntegrating AWS into Automation Testing.\nSpecialized Automation Tool:\nIntroduction to Zelenium for Advanced Automation Techniques.\nUpon completion of this course, you will not only have mastered advanced topics such as CI, CD, Jenkins, Maven, Docker, and AWS, but you'll also be well-equipped to tackle complex automation challenges and propel your career to new heights.",
      "target_audience": [
        "Automation testers,QA Engineers,Software Engineers"
      ]
    },
    {
      "title": "Automate Application with Specflow and Selenium WebDriver C#",
      "url": "https://www.udemy.com/course/software-testing-end-to-end/",
      "bio": "BDD with SpecFlow (based on Gherkin) and Selenium WebDriver with C# + Intro to UnitTesting and TDD with TestStack.White",
      "objectives": [
        "Write business-readable automated tests with SpecFlow",
        "Write maintainable tests with SpecFlow",
        "Automate Web Sites with Selenium",
        "Write RELIABLE automation code with Selenium",
        "Automate WPF applications",
        "Apply test-driven approach for growing software"
      ],
      "course_content": {
        "Before taking the Course": [
          "How to Ask Questions",
          "Source Code",
          "Join .NET Community of Students"
        ],
        "Introduction to Integration and Acceptance Testing": [
          "Outline",
          "Types of Tests and TDD",
          "Integration and UI Testing",
          "Are Integration Tests Pure Evil?",
          "Why Write Automated UI-Tests?",
          "What is Acceptance Testing?",
          "Acceptance and UI-Automation Testing Frameworks",
          "Conclusion"
        ],
        "Introduction to SpecFlow": [
          "Outline",
          "Why Use SpecFlow",
          "BDD vs ATDD",
          "SpecFlow Workflow",
          "Overview of SpecFlow",
          "Gherkin. Features and Scenarios",
          "Basics of SpecFlow",
          "Two Approaches to Implementation of Acceptance Tests",
          "Conclusion"
        ],
        "SpecFlow in Details": [
          "Outline",
          "Generating Steps in Details",
          "Overview of Example",
          "Writing the First Test",
          "Running and Debugging Tests",
          "Adding New Cases",
          "Passing Parameters",
          "Scenario Outline",
          "Passing Data Table",
          "Scenario Background",
          "Converting Parameter Types",
          "Converting Tables into Plain Data Structures",
          "Converting Tables into Sets",
          "Custom Conversions",
          "Sharing Data Between Steps",
          "Categorizing Tests by Tags",
          "Scoped Execution",
          "Scoped Binding and Workflow",
          "Hooks Overview",
          "Applying a Hook",
          "Conclusion"
        ],
        "Introduction to Selenium": [
          "Selenium Overview",
          "Demo Web Site",
          "Writing the First Automation Example",
          "Locator Types",
          "XPath Selectors",
          "CSS Selectors",
          "Input, CheckBox, RadioButton, DropDown",
          "Dynamic Nature of Modern Web Sites",
          "Timeouts: Implicit and Explicit",
          "Locators Priority",
          "Which Scenario to Test",
          "SpecFlow and UI-Testing Frameworks",
          "Conclusion"
        ],
        "Selenium: Scraping a Live Web Site": [
          "Outline",
          "Web Site Overview",
          "Setting Up a Project",
          "Sign-In Page",
          "\"Page Object\" Design Pattern",
          "Enhancing \"Page Object\" Design Pattern",
          "Refactoring with \"Page Object\"",
          "Uploading Files - Preparation",
          "Uploading Files - Coding",
          "Conclusion"
        ],
        "Selenium Extras": [
          "Outline",
          "Writing Tests for Different Browsers",
          "Location and Size",
          "Opening Tabs and Windows",
          "Switching and Closing Tabs and Windows",
          "Conclusion"
        ],
        "TestStack.White and WPF App by TDD": [
          "Outline",
          "Application Overview",
          "TestStack.White Overview",
          "Download Source Code",
          "Writing Acceptance Tests",
          "Building a Bridge to User Interface Applying \"Page Object\" Design Pattern",
          "Implementing Acceptance Tests",
          "Implementing ViewModels using TDD. Part 1",
          "Implementing ViewModels using TDD. Part 2",
          "Conclusion"
        ],
        "Appendix A. Introduction to Unit Testing. Getting Started": [
          "Outline",
          "What is a Unit Test",
          "Unit-Testing Frameworks",
          "First Unit Test",
          "Naming Conventions",
          "Running and Debugging Tests in Visual Studio",
          "Benefits of Unit Testing",
          "Who should write Unit Tests and When?",
          "Programmer's Oath",
          "Exercise: Stack",
          "Solution: Stack",
          "Conclusion"
        ],
        "Appendix A. Introduction to Unit Testing. NUnit Framework": [
          "Outline",
          "Assert. Introduction",
          "Assert. Demo",
          "Arrange-Act-Assert",
          "Running a Test from the Console",
          "SetUp and TearDown",
          "SetUp and TearDown on Higher Levels",
          "Parameterized Tests",
          "Grouping and Ignoring",
          "Code Coverage",
          "Exercise: FizzBuzz",
          "Solution: FizzBuzz",
          "Exercise: Roman Numerals",
          "Solution: Roman Numerals",
          "Conclusion"
        ]
      },
      "requirements": [
        "Proficiency in C#"
      ],
      "description": "This course is all about growing object-oriented software guided by tests.\nSpecFlow is a framework which brings Behavior-Driven Development (BDD) into life. It is all about filling the gap between technical people and domain experts. SpecFlow is based of a Gherkin language which is very close to natural (though, it is formalized). So, non-technical people can write executable documentation on their own.\nSelenium is a framework which allows to drive browsers (Chrome, Firefox, Opera etc.). In other words, with the power of Selenium, you can write a program which automatically interacts with elements on a web page.\nTestStack.White (sometimes, written as \"teststack white\") is a framework which allows to drive WinForms and WPF applications.\nThis course covers:\nTheoretical background behind different types of testing (unit, integration, and acceptance testing)\nSpecFlow: generating steps, run and debug tests, passing parameters, scenario outline, data table, converting parameters, converting data table, custom conversions, sharing data, categorizing tests, scoped execution, hooks and other features\nSelenium WebDriver: Locators, XPath Locators, CSS Locators, Interacting with all the types of Elements, Timeouts: Explicit and Implicit, Locators Priority, Picking Scenarios to Test, \"Page Object\" design pattern, Page Object Factory, uploading files\nScraping a Live Web Site with Selenium WebDriver\nSelenium Extras: managing a web browser\nTestStack.White and Building a WPF App by TDD (with MVVM)\nAppendixes: intro to Unit Testing and Test-Driven Development",
      "target_audience": [
        "Developers who want to Write Executable Documentation",
        "Developers who want to Automate Web Sites",
        "Developers who want to Automate WPF",
        "Developers who want to see how to grow an application guided by tests"
      ]
    },
    {
      "title": "Selenium with Java - A Complete End to End Course.",
      "url": "https://www.udemy.com/course/selenium-with-java-a-complete-end-to-end-course/",
      "bio": "Learn Selenium with Java",
      "objectives": [
        "Selenium using Java as a programming language"
      ],
      "course_content": {},
      "requirements": [
        "Testing"
      ],
      "description": "This course will help you learn Java as a programming language. And Selenium as a test automation tool. After this you can use Selenium with Java to functionally test your web applications. It uses a live web application to teach giving enough time in between to practice. All exercises done are provided. And ends with implementing different frameworks over selenium",
      "target_audience": [
        "Anyone"
      ]
    },
    {
      "title": "SDET Training: Selenium WebDriver, Java Project & Code Tests",
      "url": "https://www.udemy.com/course/selenium-automation-tester-interview-preparation/",
      "bio": "Complete SDET Training course on Selenium WebDriver with Java Framework, API & Automation Testing, Coding Interview etc",
      "objectives": [
        "Understanding the Realtime Test environments and Agile Implementation",
        "Master the Core Java concepts and Datastructures needed to get you hired",
        "Functional Testing: UI and API(Web service) Testing using Selenium WebDriver, RestAssured etc",
        "Non-functional testing: Cross-browser & Performance testing using SauceLabs, Blazemeter, New Relic APM",
        "Integrate Docker + Selenium Grid + Jenkins and run the tests. Jenkins plugins and more",
        "Learn Amazon Web Services/ AWS : IAM, EC2 instances, S3 storage, Code deploy that you need as SDET",
        "Build and Release Management using Maven and GIT",
        "Apply for following roles: SDET / Automation Engineer / Performance Engineer"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Java and Eclipse IDE",
        "Basic understanding of Software Automation Testing",
        "The Technologies or Tools used in course are mostly free to install or available for trial subscription",
        "Enthusiam to prepare, learn and implement Latest Market Tools and Platforms",
        "Prepare and build real world applications and ready to get hired"
      ],
      "description": "Why it’s important for you to take this course:\nLearn from a Real-time engineer with hands-on experience in Software Development & Automation Testing. Most of the other courses teach you with some typical examples you commonly find in the books.\nBut I'm going to teach you with Practical and Real-world Examples and Scenarios as part of Automation Testing\nIf you’re targeting a SDET (or) Automation/Performance Engineer role, this is the right course for you. I was in your shoes before where I had to go to multiple places to learn the concepts, practical examples, coding tests and interview questions from. But for you, just this course should keep the ball rolling for all those things.\nCourse covers an Automation Project towards the end and available to download from GitLab. The project makes you think in real life terms. Say if an interviewer asks you about the difference between an interface and a class, a practical example would be 'GetCrossBrowserAccount' is an interface while 'GetSauceLabsAccount' and 'GetBrowserStackAccount' can be the implementation classes (in contrast to popular book example that an animal is an interface while cat and dog are the implementation classes).\nThe course includes Coding Tests from Actual interviews including the questions I have personally faced and asked in the interviews\nThe lectures are To the point with Clear explanations. I don't want you to get lost in the lectures or spend time listening to any unnecessary things, your spending time is most important to me and you learn something quantitatively from each lecture.\nUnique course in Software Testing Engineering Interview. This is a unique course on Udemy platform for SDET from preparation to interview with a range of topics packed inside a single course.\nFor any of your queries, I will Respond in 24 hours. Just shoot me a message on the Q&A board and I'll respond to you with all the information you need.\nI have personally trained manual/functional QA to get Automation Engineer/ SDET Jobs.\nNew course Videos will be added from time-to-time. If you see any topic is missing, expect it to be added very soon.\n\n\nJust see what my students have to say:\nFocused on practical skills with examples. – Joseph\nThis course was amazing. I personally learned a lot and very hands-on experience. -Mohammed\nI managed to get a SDET job thanks to this course and assistance from Shaan. -Jericho\nIt is amazing and it covers lots of the interview questions which I missed in the past. -Rohit\nIt is good info for those who want to polish the SDLC and roles and responsibilities of Testers in an organization. -Prashant\nIt's the best software testing tutorial that I watched so far! -John\nYes it was a good match for me and the explanations were clear and direct to the point. -Nicholas\n\n\nFollowing Topics and Q&A are covered in this SDET course and Project Training classes:\nSoftware Test environments and Agile Testing : Covered Topics + Interview Questions and Answers\nCommon 4-tier deployment environment?\nComponents within each environment?\nWhat are the typical environment issues?\nWhom testers need to collaborate with while testing?\nTypical working day of a software tester?\nChallenges faced by a software tester on a day-to-day basis?\nWhat is Waterfall model and its drawbacks?\nWhat is Agile and how does it address the waterfall drawbacks?\nWhat is Agile Testing and its challenges?\nWhat is Scrum and scrum's roles, artifacts and events?\nWhat is Sprint in scrum and sprint from testers standpoint?\nHow Jira supports sprint, sprintbacklog etc?\nHow the Requirement changes are handled in Agile?\n\n\nJava : Covered Topics + Interview Questions and Answers\nCompile time vs Run time in Java?\nCompile time errors vs Run time errors?\nWhat are Local, Instance and Class variables?\nDifference between Pass by value and Pass by reference?\nDifference between Stack and Heap memory in Java?\nJava keywords static, final, abstract and super usage in a project?\nAccess modifiers public, private and projected usage in a project?\nDebugging a java application?\nProject configuration files and what goes into them?\nReading the configuration files into java properties object?\n\n\nJava Datastructures : Covered Topics + Interview Questions and Answers\nDifference between Array vs Arraylist and coding challenge?\nFinding duplicates using Set and coding challenge?\nStoring key-value pairs using Map and coding challenge?\nWhat is Stack and coding challenge?\nHow to reverse a LinkedList?\n\n\nSelenium WebDriver: Covered Topics + Interview Questions and Answers\nWhat is Selenium WebDriver?\nHow the Selenium WebDriver Language bindings and binary executables work?\nSetup of Firefox and Chrome drivers?\nSetup and behavior of Safari driver executable?\nInternet Explorer driver specific issues and configuration?\nOptions object vs DesiredCapabilities?\nMethods to find web elements in Selenium WebDriver?\nHow to choose between different element Locater techniques and XPath vs CSS?\nWhat are Dynamic elements on a web page?\nHow to Locate the dynamic web elements in Selenium?\nWhat is Absolute XPath and Relative XPath?\nXPath Functions and Axes and using them to locate dynamic elements?\nHow to use XPath combinators?\nWhat is Page Object Model and how its implemented in a project?\nHow to use Driver Factory?\nSingleton and Factory Design Patterns?\nCoding example to login using Selenium webdriver and logout?\n\n\nMaven and Log4j : Covered Topics + Interview Questions and Answers\nExplain Maven Convention over Configuration and Dependency Management?\nWhat is Super POM in Maven?\nHow the Local and Remote repositories work in Maven?\nWhat are different Maven phases and goals?\nHow to create Maven Parent project and Modules under it?\nMaven configuration file settings.xml and how private repositories like JFrog or Nexus can be configured in it?\nHow to install an artifact into the Local repository?\nBenefit of Logging and configuring Log4j?\nWhat is RollingFileAppender and its policies?\nDifferent Logging Levels in Log4j and how to log in Dev/QA environment vs Production environment?\n\n\nGIT : Covered Topics + Interview Questions and Answers\nWhat is Distributed Version Control system?\nDifference between Git and SubVersion?\nProject repositories and branches in Git?\nDescribe the Git branching model and release cycles in realtime?\nWhat is HEAD reference?\nExplain Git workflow – Local, Staging and Workspace?\nHow to clone a Git repository?\nWorking with branches?\nHow to stage the files and commit?\nHow to shelve the changes and restore using Git stash?\nHow to sync with remote repository using Git push and pull?\nDifference between fetch vs pull\nSourceTree client for Git?\n\n\nAPI Testing : Covered Topics + Interview Questions and Answers\nDescribe REST (Representational State Transfer) service?\nExplain primary HTTP Request methods used in Rest web services?\nHow to use functional API testing tools for API (Curl, Postman)?\nHow to use RestAssured class library for API Automation testing?\nHTTP Request and Response headers like content-type, authorization etc?\nHttp Response codes like 200, 403 etc?\n\n\nData Driven Testing : Covered Topics + Interview Questions and Answers\nWhat is Yaml format?\nParsing from Yaml to Java collection and iterating over collection?\nYaml vs Excel for data driven testing?\n\n\nTestNG : Covered Topics + Interview Questions and Answers\nTestNG annotations?\nWrite Tests using TestNG and Selenium WebDriver?\nParallel Testing in TestNG?\nRunning TestNG tests through Maven?\nMaven surefire plugin?\n\n\nDocker : Covered Topics + Interview Questions and Answers\nWhat is Docker and how to install/setup docker?\nHow to work with the docker container?\nHow to run Jenkins as a docker container?\nHow to run Selenium Hub and nodes as docker containers?\nVNC viewer to remotely connect and look at the live tests\nHow to trigger the tests in Selenium Grid?\n\n\nJenkins : Covered Topics + Interview Questions and Answers\nWhat is Jenkins pipeline and how to create a pipeline?\nRunning the tests from Jenkins\nJenkins manage plugins and setup credentials\nBlue Ocean plugin/interface\n\n\nSauceLabs : Covered Topics + Interview Questions and Answers\nWhat is Cross-Browser testing and need for it?\nHow SauceLabs Automated testing platform helps in Cross-browser/Platform testing?\nHow to configure SauceLabs hub/endpoint and environment variables?\nSauceLabs On-demand plugin for Jenkins integration?\nJenkins builds for different SauceLabs configuration?\nParallel testing in SauceLabs?\nWhat is Browser stack and comparision?\n\n\nBlazemeter : Covered Topics + Interview Questions and Answers\nWhat is Blazemeter load testing platform?\nBlazemeter supports JMeter?\nHow to Record and Rung tests in Blazemeter?\nHow to use Taurus DSL(Domain specific language)?\nTestNG executor for Blazemeter?\n\n\nNew Relic APM : Covered Topics + Interview Questions and Answers\nWhat is Application Performance Management/Monitoring?\nHow to install and configure New Relic APM agent?\nAPM controller and agent architecture?\nApp agent vs machine agents?\nWhat is Instrumentation in APM?\nCustom instrumentation in New Relic UI?\nHow to install and configure AppDynamics agent?\nRunning AppDynamics machine agent?\n\n\nAmazon Web Services (AWS) : Covered Topics + Interview Questions and Answers\nHow to create Users and Roles in IAM (Identify and Access Management)?\nLaunching EC2 instances and working with init script and in-bound rules?\nHow to create an S3 bucket and attaching policies to the bucket?\nHow to use Code Deploy service to create and application and deploy it?\nAWS code deploy plugin for Jenkins?\nUsing code deploy plugin to upload the project to AWS S3 bucket?\n\n\nSQL : Covered Topics + Interview Questions and Answers\nIllustrate different SQL Joins?\nCreate a SQL schema?\nSolve a SQL query challenge using Inner Join?\nSolve a SQL query challenge using Left Outer Join?\nSolve a SQL query challenge using Right Outer Join?\n\n\nLinux : Covered Topics + Interview Questions and Answers\nHow to connect to a remote server/computer using ssh?\nLocating the files and filtering them, say Log files or by timestamp?\nPrinting the file content and monitor the logs in realtime?\nHow to view and edit the contents of files?\n\n\n***** There's no better day than today to start some practical learning, remember there's always 30-day money back guarantee from Udemy in the worst case *****.\nThanks and Good Luck!",
      "target_audience": [
        "Students who want to learn QA Test Automation",
        "Job seekers who want to start their career in QA Test Automation",
        "Functional Tests who want to switch thier career to SDET / Automation Engineer role"
      ]
    },
    {
      "title": "Step by Step API Automation using RESTASSURED & JAVA",
      "url": "https://www.udemy.com/course/api-testing-by-java-programming/",
      "bio": "Rest Assured with BDD Framework| Detailed Java Programming | Realtime Scenario | Interview Questions | Maven | CI/CD",
      "objectives": [
        "End to End REST API automation using REST ASSURED and JAVA Programming",
        "Design REST API Testing automation framework from scratch",
        "Practical knowledge of basic to advance level of Java Programming",
        "Detailed understanding of Java Concepts, Programming and its implementation in RestAssured",
        "Able to crack REST ASSURED interviews with Java Programming skills"
      ],
      "course_content": {},
      "requirements": [
        "Basics of any programming knowledge",
        "Basics understanding of REST API, its implementation and Testing",
        "Basic understanding of API Manual Testing"
      ],
      "description": "REST Assured API is one of the most popular library when it comes to automating the REST APIs. Most of the today's web applications are backed by the Micro services architecture and the REST APIs.\nREST stands for REpresentational State Transfer. REST is web standards based architecture and uses HTTP Protocol for data communication.\nIn REST architecture, a REST Server simply provides access to resources and REST client accesses and presents the resources.\nWhat topics are covered in this course?\nAPI Basics\nJSON & JSON Path\nEnd to End Setup\nJava Programming Basics\nRest Assured - Setup, Write Test Case\nRest Assured - Test Case in TestNG format\nRest Assured - Assertion (On header, body and status code)\nSerialization & De-serialization: POJOs\nHashMap to JSON object\nArrayList to JSON array\nComplex POJO Example\nFull JSON body matching\nParameterization using TestNG Data provider\nRest Assured - Request Specification\nRest Assured - Response Specification\nRest Assured - Automate Post, Put, Del\nRest Assured - Multiple ways to send request payload\nRest Assured - Complex JSON in request body\nRest Assured - Request Parameters\nRest Assured - JSON Schema Validation\nRest Assured - Logging Filters\nRest Assured - Configs\nFramework Design\nCode Management\nJenkins Integration\nJava Coverage\nOOPS Concepts\nExcel Handling\nDatabase Handling\nTestNG Basic to Expert\nCollections\nSerialization & De-serialization: POJOs\nHashMap to JSON object\nArrayList to JSON array\nComplex POJO Example\nFull JSON body matching\n\n\nFramework Development->\nBDD Framework with Features\nScalable Framework Structure\nConfigurations\nReporting\nAutomate positive and negative scenarios\nData driven using TestNG Data Provider\nCucumber Implementation\nBest Practices\nProperty and Configuration\nIntegration with Git\nIntegration with Jenkins\n\n\nTool, Library & Technology\nEclipse\nRest Assured\nTestNG\nCucumber\nReporting\nJava\nAllure Reports\n\n\nOutcome of this course\n1. Expertise in Java Programming\n2. Expertise in API Concepts\n3. Able to design End to End API Automation Framework\n4.  Ready to face Automation interviews",
      "target_audience": [
        "Software Testers/ QA looking to test/automate REST API testing",
        "Manual Testers looking to switch in to Automation / REST API Automation",
        "Freshers looking opportunity in Software Testing"
      ]
    },
    {
      "title": "Java Test Automation Engineer - from Zero to Hero",
      "url": "https://www.udemy.com/course/java-test-automation-engineer-from-zero-to-hero/",
      "bio": "4 coureses in 1! Practical guide to become a Professional QA Automation Engineer in Java (AQA)",
      "objectives": [
        "Automation Testing",
        "Selenium Webdriver from Basics to Advanced Level",
        "Learn best practices from true programmers",
        "Learn how to write scalable, readable and maintainable clean code",
        "You will learn source code of the tutor. All homework is completed with the Trainer",
        "Intellij Idea",
        "JUnit 5",
        "Selenium basics",
        "Selenium in Java",
        "Selenium Waits",
        "Page Object concept",
        "Web Component concept",
        "Data Transfer Object concept",
        "Gradle basics",
        "Postman basics",
        "API basics",
        "REST API",
        "RESTful Web Services",
        "HTTP methods",
        "HTTP status codes",
        "JSON schemas",
        "API testing",
        "RestAssured from basics to advanced"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience"
        ],
        "API Basics": [
          "API and Web Service",
          "API Types Overview",
          "REST API Overview",
          "HTTP methods",
          "HTTP Status Codes"
        ],
        "Environment Setup for Postman": [
          "Postman Introduction",
          "Postman Installation",
          "Trello Account Creation",
          "Authorization Token Creation in Trello"
        ],
        "HTTP Method GET - Postman": [
          "GET Method Overview",
          "GET Method in Postman",
          "GET Method in Postman - Hometask",
          "JSON Schema Validation",
          "JSON Schema Validation - Hometask",
          "GET Method Validation in Postman",
          "GET Metod Validation in Postman - Hometask"
        ],
        "HTTP Method POST - Postman": [
          "POST Method Overview",
          "POST Method in Postman",
          "POST Method in Postman - Hometask",
          "POST Method Validation in Postman",
          "POST Method Validation in Postman - Hometask"
        ],
        "HTTP Method PUT - Postman": [
          "PUT Method Overview",
          "PUT Method in Postman",
          "PUT Method in Postman - Hometask",
          "PUT Method Validation in Postman",
          "PUT Method Validation in Postman - Hometask"
        ],
        "HTTP Method DELETE - Postman": [
          "DELETE method overview",
          "DELETE Method in Postman",
          "DELETE Method in Postman - Hometask",
          "DELETE Method Validation in Postman",
          "DELETE Method Validation in Postman - Hometask"
        ],
        "Postman Tips": [
          "Variables in Postman"
        ],
        "Automated Test in Postman": [
          "First Test in Postman"
        ],
        "Development Environment Setup": [
          "Java 17 Installation",
          "Gradle 7.3.3 Installation",
          "IntelliJ IDEA 2023 Community Edition Installation"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Some basic knowledge of Java"
      ],
      "description": "Are you ready to embark on an exciting journey to become a Test Automation Hero in Java? Whether you're new to programming or have some experience, this course is your ultimate guide to mastering Java for test automation.\nIn today's fast-paced tech world, automation testing is a skill in high demand. This comprehensive course covers everything you need to go from zero to hero, equipping you with the skills to excel in Test Automation.\nWhat You Will Learn:\nJava Fundamentals: Start from the very beginning with Java programming, even if you're a complete beginner.\nSelenium WebDriver: Dive into Selenium WebDriver and master it from the basics to advanced levels. Build robust and efficient automated tests for web applications.\nBest Practices: Learn from experienced programmers and understand how to write scalable, readable, and maintainable clean code like a pro.\nSource Code Access: Get access to the source code used by the instructor, enabling you to learn through practical examples.\nHomework Completion: Complete assignments and homework with guidance from the trainer, ensuring you grasp each concept thoroughly.\nTools and Frameworks: Work with popular tools like IntelliJ IDEA, JUnit 5, and Gradle to streamline your testing workflow.\nSelenium Concepts: Master essential Selenium concepts, including waits, Page Object Model, and Web Component design.\nAPI Testing: Explore RESTful Web Services, HTTP methods, status codes, JSON schemas, and API testing with Postman and RestAssured.\nWhy Enroll in This Course?\nHands-On Learning: Gain practical experience through hands-on exercises, quizzes, and real-world projects that reinforce your skills.\nExpert Instruction: Learn from industry experts who have hands-on experience in Java test automation.\nCareer Advancement: Enhance your career prospects by becoming a proficient Java Test Automation Engineer, a skill in high demand.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive online community.\nReady to go from zero to hero as a Java Test Automation Engineer? Enroll today and embark on your journey to success in the world of automation testing.",
      "target_audience": [
        "People who want to learn Automation Testing from scratch to advanced level",
        "Students who are seeking to work as Test Automation Engineer"
      ]
    },
    {
      "title": "QA - Manual, Automation & Mobile Automation",
      "url": "https://www.udemy.com/course/qa-manual-automation-mobile-automation/",
      "bio": "JIRA,Manual testing, selenium,appium,xcuitest,appium android, testing tools, QA, Zephyr, SDLC,STLC,Agile,Scrum, Zephyr,",
      "objectives": [
        "Foundation of Quality Assurance - Manual ,Automation & Mobile Automation",
        "QA Automation Best Practices",
        "How to Write Test Cases",
        "Agile Methodology",
        "How to start your career as QA Automation Engineer (Developer in Test)"
      ],
      "course_content": {},
      "requirements": [
        "No specific requirements"
      ],
      "description": "Course is updated on 12-08-2025 in APPIUM 2.X sections with below topics\n\n\nScroll using UiScrollable\nScroll using UiScrollable - setAsVerticalList\nScroll using UiScrollable - setAsHorizontalList\nScroll using UiScrollable - setMaxSearchSwipes\nScroll using UiScrollable - scrollForward & scrollBackward\nScroll using UiScrollable - ScrollToEnd & scrollToBeginning\nParallel Execution using setSystemPort & wdaLocalPort\nAppium-gestures-plugin : Swipe Left & Swipe Right- Android\nAppium-gestures-plugin : Swipe Left & Swipe Right- iPhone\nAppium-gestures-plugin : DoubleTap\nAppium-gestures-plugin : longPress\nOverview on ElementID\nAppium-gestures-plugin installation & overview\nAppium-gestures-plugin : Swipe Up & Swipe Down- Android\nAppium-gestures-plugin : Swipe Up & Swipe Down- iPhone\nCoordinates identification which covers X , Y, Height & Width\nAppium-device-farm plugin  - Video Recording Configuration\nAppium-device-farm plugin  - Video Recording Implementation\ngetImagesSimilarity with options & highlight the difference between images command with example\ngetImagesSimilarity using Files & options, highlight the difference between images command with example\nappium-device-farm plugin configuration , implementation with example\ngetImagesSimilarity command with example\nAppium-Dashboard Plugin with examples\nAppium-Image Plugin with examples\nAppium Interview Question & Answers Part 1\nAppium Interview Question & Answers Part 2\nAppium Interview Question & Answers Part 3\n\n\nCourse is updated on 26-01-2024 with below topics\nAppium Interview Question & Answers Part 1\nAppium Interview Question & Answers Part 2\nAppium Interview Question & Answers Part 3\nJAVA Programming below series of videos updated to this course\nHow to Check Given String is Palindrome or Not | JAVA Program to Check String is Palindrome or not\nPrint All Substrings of a given String | Java Program to print all substrings for a String\nPrint all Palindromic Substrings | Find All Palindromic Substrings In a String\nJava Program || Magic Number || Check whether given number is Magic Number or not\nProgram to Reverse A String in Java | Reverse A String | Reverse Words in a String in Java\nJava program to arrange array elements in ascending order\nCapitalize each word in the given string\nCount Number of Words in Given String\nCount number of spaces in the given String\nMain Method Overloading with examples\nPrint Numbers from 1 to 10 without using loops\nRemove Duplicate Values in an Array\n\n\n\n\nCourse is updated on 05-01-2024 with below topics on 2.X version of APPIUM:\nPerforming Double Tap Operation\nPerforming Tap Operation\nPerforming Double Long Press Operation\nPerforming Double Swipe-UP/ Swipe-DOWN Operation\n\n\nCourse is updated on 02-01-2024 with below topics:\nSelenium 4.X Page Factory Testng Framework Part 8\nSelenium 4.X Page Factory Testng Framework Part 9\nSelenium 4.X Page Factory Testng Framework Part 10\n\n\nCourse is updated on 01-01-2024 with below topics:\nSelenium 4.X Page Factory Testng Framework Part 3\nSelenium 4.X Page Factory Testng Framework Part 4\nSelenium 4.X Page Factory Testng Framework Part 5\nSelenium 4.X Page Factory Testng Framework Part 6\nSelenium 4.X Page Factory Testng Framework Part 7\n\n\n\n\nCourse is updated on 30-12-2023 with below topics:\nSelenium 4.X Page Factory Testng Framework Part 1\nSelenium 4.X Page Factory Testng Framework Part 2\n\n\n\n\nCourse is updated on 29-12-2023 with below topics on 2.X version of APPIUM:\nPage Factory Framework + Cucumber + Testng Part 1\nPage Factory Framework + Cucumber + Testng Part 2\nPage Factory Framework + Cucumber + Testng Part 3\nPage Factory Framework + Cucumber + Testng Part 4\nPage Factory Framework + Cucumber + Testng Part 5\nPage Factory Framework + Cucumber + Testng Part 6\nPage Factory Framework + Cucumber + Testng Part 7\nHow to pass options while creating AndroidDriver\nnoReset\nappAcitivity\nplatformName\nplatformVersion\nIntroduction Appium 2.X version\nConfiguring machine with Appium 2.X\nCreate a Program using XCUITestOptions to launch an app on Simulator\nCreate a Program using UiAutomator2Options to launch an app on Android Device\nwe are uploading videos that covers features on Appium 2.X versions\nHow to launch browser in Selenium 4.x Versions\n\n\n\n\n\n\n\n\nThis Course is updated on 09th Apr 2023 on Manual Testing with below topics:\nBunch of examples on Test Design Phase\nBunch of tutorials on Realtime Project explanations with examples\nInterview Questions & Answers\nThis Course is updated on 09th Apr 2023 on Selenium Automation with below topics:\nApache POI Data Driven Testing\nTestng tutorial with examples\nRealtime project & Framework\nThis Course is updated on 09th Apr 2023 on Selenium Automation with below topics:\nswipe logics\n\n\nHybrid app\n\n\nweb view\n\n\nMAC Configuration\n\n\nQA Training - The Complete Quality Assurance Course- Learn QA from Scratch\nLearn QA Software Testing - Manual , Automation & Mobile Automation. Become Developer in Test and Kick-start your Career in IT.\n\n\nThis Course is updated on 23rd Feb 2022 with  course material section\n\n\nYou will learn different ways of Software Testing and everything you need to start your first job as Junior Automation Quality Assurance Engineer.\nThis course will give you the foundation and confidence to enter the IT Industry as Automation QA Engineer or Manual QA Engineer.\nComplete QA Training was divided into 5 major sections:\n1. Manual Testing\n2. Core Java\n3. WebDriver - Basics & Advanced\n4. Framework\n5. Mobile Automation\n\n\nPlease find below topics that we are going to cover in this complete training:\nManual Testing:\nIntroduction of Software Testing\nWhat is Software?\nWhat is Software Testing?\nWhat is a Quality of Software?\nImportance of Software Testing?\nWhy Software has bugs?\nTesting Roles in Company\nTesting Team Responsibilities\nWhat is Functionality?\nWhat is Defect, Error, and Bug?\nSoftware Development Process\nWhat is SDLC?\nPhases of SDLC\nSDLC work flow – detailed explanation\nTesting Techniques\nStatic Testing\nDynamic Testing\nTesting Methods\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nLevels of Testing\nUnit Testing\nWhat is Unit Testing?\nExamples of Unit Testing\nWho will perform Unit Testing in Companies?\nIntegration Testing\nWhat is Integration Testing?\nIntegration Testing Types?\nExamples of Integration Testing?\nWho will perform Integration Testing in Companies?\nSystem Testing\nWhat is System Testing?\nExamples of System Testing\nWho will perform system testing in Companies?\nTypes of System Testing\nUser Acceptance Testing\nWhat is UAT?\nTypes of UAT (Alpha & Beta Testing)\nTypes of Testing\nSmoke testing\nSanity testing\nUsability Testing\nUser Interface Testing\nFunctionality Testing\nRe-Testing\nRegression Testing\nData Base Testing\nCompatibility Testing\nSecurity Testing\nAd-hoc Testing\nExploratory Testing\nInstallation Testing\nRecovery Testing\nServer Log File Testing\nPerformance Testing\nLoad Testing\nStress Testing\nVolume Testing\nEndurance Testing\nSoftware Development Models\nWaterfall Model\nIncrement Model\nPrototype Model\nSpiral model\nRapid Model\nV-Model\nAgile Model\nSoftware Engineering\nWhat is a Software engineering?\nMajor factors of software engineering\nQA Process and benefits of Process\nWhat is reusability?\nWhat is Process?\nSignificance and Advantages\n\n\n\n\nVerification and Validation\nVerification methods\ninspection\nWalkthrough\nBuddy check\nValidation Methods\nSoftware Testing Life Cycle\nTest Initiation\nTest Planning\nTest Design\nTest Execution\nDefect Reporting\nClosing\nTest Initiation phase\nWhat is Test Initiation?\nUnderstanding project requirements with live show\nUnderstanding UI Spec, FR Spec Documents\nTest Planning Phase\nWhat is a Test Plan?\nWho will prepare Test plan documents?\nPreparing a Test plan documents for project\nTest Design Phase\nWhat Tester will do in Test Design Phase?\nWhat is Use Case?\nWhat is a Scenario?\nPreparing Scenarios for project\nWhat is a Test Case?\nPreparing Test case Template for project\nTypes of Test cases\nTest Case design techniques\nBVA\nECP\nDecision Table\nState Transition Diagrams\nError Guessing\nDesigning test cases for project\nTest Case Status\nTest Cases Review\nPreparing RTM\nProjects & Technologies\nDifference between Project & Product?\nWhat is a Project?\nWhat is a Product?\nType of Projects?\nDesktop application\nWeb Applications\nSystem Products\nSoftware Environment:\nEnvironment is a combination of three layers\nPresentation layer\nBusiness layer\nDB layer\nTest Case Execution\nWhen do we start test case execution?\nWhat is a Build?\nWhat is Version?\nBuild Release Note\nWho prepares the Release Notes?\nWhen to prepare the Release Notes?\nSignificance of Release Notes\nVersion Controlling and managing\nBuilds from Development to Testing\nBuild & Deployment Process\nWho will deploy the application\nHow to access the application\nTest case execution\nDefect Reporting and Tracking\nWhat is a defect?\nDefect Status\nDefect Severity\nDefect Priority\nTypes of Defects\nDefect Life Cycle\nCreating defects in QC\nDefect Density\nResult Analysis\nDefect Reporting Through Bug Tracking Tools (Bugzilla/Jira/QC)\nDefect Management\nCreating user roles and permissions for each role\nCreating users for each role\nDefects reporting\nDefects tracking\nDefects Retesting\nVarious reports generation\nDefects closing\nAgile Scrum Framework [Real Time Overview]\n\n\nAgile principles\nAgile Scrum Overview\nScrum roles\nProduct Owner roles\nScrum master role\nTeam role\nScrum Meetings\nSprint Planning meeting\nDaily Scrum meeting\nScrum review meeting\nScrum retrospective meeting\nRelease planning meeting\n\n\n\n\nIntroduction of Software Testing\nWhat is Software?\nWhat is Software Testing?\nWhat is a Quality of Software?\nImportance of Software Testing?\nWhy Software has bugs?\nTesting Roles in Company\nTesting Team Responsibilities\nWhat is Functionality?\nWhat is Defect, Error, and Bug?\nSoftware Development Process\nWhat is SDLC?\nPhases of SDLC\nSDLC work flow – detailed explanation\nTesting Techniques\nStatic Testing\nDynamic Testing\nTesting Methods\nBlack Box Testing\nWhite Box Testing\nGrey Box Testing\nLevels of Testing\nUnit Testing\nWhat is Unit Testing?\nExamples of Unit Testing\nWho will perform Unit Testing in Companies?\nIntegration Testing\nWhat is Integration Testing?\nIntegration Testing Types?\nExamples of Integration Testing?\nWho will perform Integration Testing in Companies?\nSystem Testing\nWhat is System Testing?\nExamples of System Testing\nWho will perform system testing in Companies?\nTypes of System Testing\nUser Acceptance Testing\nWhat is UAT?\nTypes of UAT (Alpha & Beta Testing)\nTypes of Testing\nSmoke testing\nSanity testing\nUsability Testing\nUser Interface Testing\nFunctionality Testing\nRe-Testing\nRegression Testing\nData Base Testing\nCompatibility Testing\nSecurity Testing\nAd-hoc Testing\nExploratory Testing\nInstallation Testing\nRecovery Testing\nServer Log File Testing\nPerformance Testing\nLoad Testing\nStress Testing\nVolume Testing\nEndurance Testing\nSoftware Development Models\nWaterfall Model\nIncrement Model\nPrototype Model\nSpiral model\nRapid Model\nV-Model\nAgile Model\nSoftware Engineering\nWhat is a Software engineering?\nMajor factors of software engineering\nQA Process and benefits of Process\nWhat is reusability?\nWhat is Process?\nSignificance and Advantages\n\n\n\n\nVerification and Validation\nVerification methods\ninspection\nWalkthrough\nBuddy check\nValidation Methods\nSoftware Testing Life Cycle\nTest Initiation\nTest Planning\nTest Design\nTest Execution\nDefect Reporting\nClosing\nTest Initiation phase\nWhat is Test Initiation?\nUnderstanding project requirements with live show\nUnderstanding UI Spec, FR Spec Documents\nTest Planning Phase\nWhat is a Test Plan?\nWho will prepare Test plan documents?\nPreparing a Test plan documents for project\nTest Design Phase\nWhat Tester will do in Test Design Phase?\nWhat is Use Case?\nWhat is a Scenario?\nPreparing Scenarios for project\nWhat is a Test Case?\nPreparing Test case Template for project\nTypes of Test cases\nTest Case design techniques\nBVA\nECP\nDecision Table\nState Transition Diagrams\nError Guessing\nDesigning test cases for project\nTest Case Status\nTest Cases Review\nPreparing RTM\nProjects & Technologies\nDifference between Project & Product?\nWhat is a Project?\nWhat is a Product?\nType of Projects?\nDesktop application\nWeb Applications\nSystem Products\nSoftware Environment:\nEnvironment is a combination of three layers\nPresentation layer\nBusiness layer\nDB layer\nTest Case Execution\nWhen do we start test case execution?\nWhat is a Build?\nWhat is Version?\nBuild Release Note\nWho prepares the Release Notes?\nWhen to prepare the Release Notes?\nSignificance of Release Notes\nVersion Controlling and managing\nBuilds from Development to Testing\nBuild & Deployment Process\nWho will deploy the application\nHow to access the application\nTest case execution\nDefect Reporting and Tracking\nWhat is a defect?\nDefect Status\nDefect Severity\nDefect Priority\nTypes of Defects\nDefect Life Cycle\nCreating defects in QC\nDefect Density\nResult Analysis\nDefect Reporting Through Bug Tracking Tools (Bugzilla/Jira/QC)\nDefect Management\nCreating user roles and permissions for each role\nCreating users for each role\nDefects reporting\nDefects tracking\nDefects Retesting\nVarious reports generation\nDefects closing\nAgile Scrum Framework [Real Time Overview]\n\n\nAgile principles\nAgile Scrum Overview\nScrum roles\nProduct Owner roles\nScrum master role\nTeam role\nScrum Meetings\nSprint Planning meeting\nDaily Scrum meeting\nScrum review meeting\nScrum retrospective meeting\nRelease planning meeting\nSelenium Automation:\nJAVA:\nIntro to JAVA:\nJDK, JVM, JRE\nVariable, Data types\nPackages\nOperators\nIf-Else\nSwitch-case\nFor,while,do while\ncontinue, break\n\n\nOOPS:\nString\nAccess Modifiers\nStatic\nMain Method\nConstructor\nInheritance\nMethod overloading, overridding\nPolymorphism, types of :\nStatic & dynamic binding not\nDiff b/w abstract class n interface\nConcerte class\nAbstract Class\nAbstraction\nInterface\n\n\n\n\nSuper/ This\nFinal, Finally, finalize\nEncapsulation\nGarbage Collection\nException Handling Mechanism: C\ntype casting\nDate class: in java 8\nJava 8 concepts : FI, Lambda expression,\nCollection API\nsynchorizarion\nwrapper classes\nInput/Output files\nStatic & dynamic binding\nPredefined packages in java\ncovert code into jar\nArray\nPlease find below detailed concepts which we are covering in  WebDriver:\nConfiguration\n40 plus unique scenarios\nCapture screenshot(positive)\nPage scroll down using Java script\nHTML Unit Driver\nHandling Multiple Windows\nImplicit wait & Explicit wait\nHandling Ajax Auto suggests\nHandling web tables\nHandling the automation of table data\nHandling Test data in Excel sheet usinf JXL, POI files\nHandling data from text file , XML file , CSV file\nGenerating test results and detailed Summary Report\nHandling Alerts, unexpected Alerts, Browser windows, Application windows & pop-ups\nHandling of multiple frames\nRecording a video\nReading content on Image & PDF files\nIsSelected Method.\nIs displayed Method\nJunit, Testng, Maven, Jenkins. GIT\nFramework creation\nCucumber BDD\nPage Object Model framework\nLocators\nHow to identify elements in webpage using Selenium\nTools to identify elements/objects\nFirebug\nIE Developer tools\nGoogle Chrome Developer tools\nLocating elements by ID\nFinding elements by name\nFinding elements by link text\nFinding elements by XPath\nFinding Elements by using CSS\nAppium Automation:\noverview on core java concepts\nIntroduction to Appium\nOverview of Open Source Mobile Test Automation tools\nOpen source Mobile Automation tool Evaluation docs\nAutomating various scenarios in Android App\nOverview on Cucumber BDD framework\nAutomating app using BDD framework\nOverview on Android Driver, desired capabilities\nConnecting real device, enabling usb debugging mode, creating simple script\nOverview on Appium inspector, Vysor, creating simple script Part 1\nCreate android Emulator and execute script on emulator\nHow to handle switches on Android & iOS\nHow to handle buttons on Android & iOS\nHow to handle text fields on Android & iOS\nScenario for login to an application\nScenario for creating an account with ecom application\nCreating an E2E scenario that handles DropDown, Popup , text fields on ecom application\nSwitching webview and handling contexts\nIdentifying locators for the webview\nOverview on touch actions with examples\nWe have also included core java concepts in this tutorial\nCucumber BDD framework\nOverview on Page Factory framework with real world examples\nJenkins Master & Slave setup\nSaucelabs integration",
      "target_audience": [
        "Anyone who wants to become Quality Assurance Engineer"
      ]
    },
    {
      "title": "Advanced Selenium testing framework with Java",
      "url": "https://www.udemy.com/course/selenium-webdriver-test-framework-from-scratch/",
      "bio": "Selenium WebDriver with Java, TestNG and Maven. Learn Selenium Testing Framework with Java and TestNG",
      "objectives": [
        "Build test framework in Selenium WebDriver from scratch using Java and TestNG",
        "Create reliable, stable and easy maintanable automated tests",
        "Use the Page Object Model for better test structure",
        "Master Selenium Webdriver",
        "Create Data Driven Test Framework"
      ],
      "course_content": {
        "Selenium webdriver test framework from scratch": [
          "Video Quality",
          "Intro",
          "Preparation",
          "Creating New Maven Project",
          "Simple TestNG test",
          "TestNG Test Suite",
          "TestNG Anotations",
          "Page Object Model",
          "Creating Test",
          "WebDriver Waits",
          "Verifications and TestNG Asserts",
          "Negative Test",
          "Data Provider",
          "TestNG @Parameters",
          "Parallel tests",
          "TestNG Groups",
          "Test Listeners",
          "Bonus Lecture: Discount coupons"
        ]
      },
      "requirements": [
        "Software Testing experience",
        "Some Java programming knowledge or other OOP",
        "Basic Selenium WebDriver experience is a plus"
      ],
      "description": "Double your QA salary with Test Automation using Java and Selenium Webdriver! Become SDET!\nIn this Selenium tutorial, students will learn in just 3 hours how to start and create an advanced test automation testing framework using Selenium WebDriver with Java, Maven, and TestNG.\nImprove their current Test Automation skills by learning Page Object Model, TestNG Annotations, parameters, and test listeners.\nPrevious test automation or programming experience is not required for this course, but it will be difficult for those, who are not familiar with Object-Oriented Programming at all. Since a lot of information is put in just three hours, and not every step is explained in detail.\nIf you never used Java or other OOP languages before, I suggest you take my \"Selenium WebDriver with Java for beginners\" course first.\nThis course should be perfect for someone with experience using Selenium WebDriver with other programming languages. You will be able to quickly pick up the framework architecture and even learn some Java tricks.\nThe full-stack selenium test automation framework, developed during this course, could be used as a base for your real job test automation framework. You will not have to build anything from scratch again, just use the already created advanced framework, to add new automated tests for your application under test.",
      "target_audience": [
        "Anyone who knows Selenium WebDriver basics but want to learn more advance skills",
        "Test Automation beginners who want to structure their projects better",
        "Anyone who want to move from manual testing to test automation"
      ]
    },
    {
      "title": "The Expert’s Secret to Mobile Application Testing [2025]",
      "url": "https://www.udemy.com/course/the-experts-secret-to-mobile-application-testing/",
      "bio": "An Extreme Beginners Guide To Mobile app Testing & IOT Latest course from Mobile Testing and Software Testing Expert",
      "objectives": [
        "React Native, Flutter and Native mobile application testing technique for Android and iOS",
        "App Managers, beta and distribution tools for Mobile Testing",
        "All about push notification",
        "How to work with Android Simulator , iOS Simulator , ADB commands and what is Firebase?",
        "Influencing and demonstrating interviewer, you are proficient in Mobile app testing by using common day to day jargon.",
        "End to End manual testing of Mobile Apps",
        "Real devices vs Emulators vs Simulators",
        "Mobile Testing Interview Preparation",
        "Mobile Application testing tips and tricks",
        "Real life strategy to test Mobile Applications from my experience",
        "I will be UPDATING the course with the latest knowledge in Mobile and later add some IOT testing videos also.",
        "Mobile Application Tester CV preparation",
        "How to create test cases for Mobile Applications",
        "How to write Bug reports for Mobile Applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Follow the course",
          "Connect with me",
          "Introduction to mobile device testing",
          "How to connect with me",
          "Different terminology used in Mobile App Testing",
          "Real Devices vs Emulators vs Simulators",
          "Different types of Mobile Apps",
          "Common strategy to test all these apps",
          "Mobile App Testing Quiz 1",
          "mobile application testing Quiz 1?"
        ],
        "Advance Mobile Concepts like creating iOS, Android Simulators, and ADB commands": [
          "Create an Android Simulator",
          "Create an iOS Simulator",
          "Common ADB commands",
          "Sharing Android and iOS Screen",
          "Mobile App Testing Quiz 2"
        ],
        "Challenges In Mobile Application testing": [
          "Challenges In Mobile Application testing",
          "Mobile App Testing Quiz 3"
        ],
        "Test Cases attributes : Software Testing basic": [
          "Test Cases attributes: Software Testing basic",
          "Writing test cases for real mobile app Android and iOS"
        ],
        "Bug's attributes : Software Testing basic": [
          "Bug’s attributes: Software Testing basic",
          "Writing a bug report for real mobile app Android and iOS"
        ],
        "Mobile Specific Testing": [
          "Push Notification Testing",
          "Network Testing",
          "Installation and Backward installation testing",
          "Interrupts Testing"
        ],
        "App Managers and Beta tools": [
          "Distributing your Android and iOS Mobile Application to testers",
          "Introduction to Firebase"
        ],
        "Mobile Application Testing Interview Preparation": [
          "Mobile Testing Interview Preparation",
          "Mobile Testing Interview Preparation 2",
          "How to Answer Tell me Something about yourself",
          "Mobile Tester resume preparation",
          "Mobile Testing Certifications",
          "Prepare for interview for Mobile App testing!"
        ],
        "Additional Knowledge related to Mobile Testing and some interviews Questions": [
          "Additional Content : More information and Interview questions",
          "Full Manual Software testing Theory for Refresher"
        ],
        "Bonus Lecture": [
          "Bonus Lecture : Additional resources for software testing",
          "Mobile Testing Practice Test",
          "Connect with me"
        ]
      },
      "requirements": [
        "Basic understanding of Mobile eco-system",
        "Even above is not required"
      ],
      "description": "Mobile testing and development are among the hottest careers of the decade.\nPro tip: In order to get the depth of mobile application testing try catching my jargon and google it to understand what it means if you are not aware of that keyword.\nI am 100% sure you will not get the content anywhere so good related to mobile app testing as other courses teach only software testing.\nMost mobile devices are sold with several apps bundled as pre-installed software, such as a web browser, email client, calendar, mapping program, and an app for buying music, other media, or more apps. Some pre-installed apps can be removed by an ordinary uninstall process, thus leaving more storage space for desired ones. Where the software does not allow this, some devices can be rooted to eliminate the undesired apps.\nIn this course, we will go deep into how to do Mobile Application Testing, and later I will try to add IOT based testing like Drones, beacons, and NFC\nMy course is highly experiential and you will learn the concepts in-depth through hands-on practice sessions. You will also be working on a project and understand how Mobile Application Testing works. This course is extremely useful if you have zero knowledge of Mobile App testing and want to start from scratch.\nGrasp advanced concepts of software testing, app testing generics, and much more...\nMobile application testing is a process by which application software developed for handheld mobile devices is tested for its functionality, usability, and consistency\nWHAT STUDENTS ARE SAYING:\n5 STARS - One of the most amazing course for beginners stepping into mobile app testing.Instructor was helpful in answering general queries outside Udemy as soon as possible.He shared some of his practical experience of Mobile Testing for the questions which came to my mind.Thanks for such a wonderful course for anyone stepping into mobile testing.\n5 STARS -I needed to quickly get into mobile app testing for job and managed to do it in one day thanks to this course. Thank you!\n5 STARS -It´s an excellent items to explain all the terms that depends to test mobiles application.\n5 STARS - One of the best course on Mobile App testing. Recommended for anyone who wants to starts from basic and they want to have great breadth about how to test mobile app effectively. Instructor seems to be very knowledgeable into mobile testing as I have never seen anyone discussing about firebase and other tools for mobile app.\n4.5 STARS -Excellent one to know the basics. He covered complete mobile testing in high level. It would have been great if he had covered bit detail. Overall its very good one and much needed one for beginners.\n\n\nHere is what you will learn!\nHow mobile apps work and methodologies including SDLC and STLC\nHow to test your mobile apps manually\nMobile Application Testing Training – Introduction to mobile device testing\nDifferent terminology used in Mobile App Testing\nReal Devices vs Emulators vs Simulators\nDifferent types of Mobile Apps\nA common strategy to test all these apps\nTest Cases attributes: Software Testing basic\nWriting test cases for real mobile app Android and iOS\nBug’s attributes: Software Testing basic\nWriting a bug report for real mobile app Android and iOS\nMobile Specific Testing\nApp Managers and Beta tools\nIntroduction to Firebase\nAdvance Mobile Concepts like creating iOS, Android Simulators, and ADB commands\nMobile Application Testing Interview Preparation",
      "target_audience": [
        "Web Tester who want to go into Mobile Testing",
        "Automation Engineer",
        "Manual Tester to refresh their skill",
        "Project Managers and Test Leads",
        "Fresh Grads who want to make their career in Mobile App Testing",
        "Developers who want to have a closer look about how QA think"
      ]
    },
    {
      "title": "Testing Java: JUnit 5, Mockito, Testcontainers, REST Assured",
      "url": "https://www.udemy.com/course/testing-java-code-with-junit-5-and-mockito/",
      "bio": "Unit Testing & Integration Testing of Java and Spring Boot applications. Test Driven Development(TDD) Explained.",
      "objectives": [
        "JUnit 5 - basic & advanced topics",
        "Test Web Layer and Controllers",
        "Test Java code with Mockito - the most popular Mocking Framework.",
        "Test Data layer and JPA Repositories",
        "Write Spring Boot Integration Tests",
        "Test Business and Service layer classes",
        "Master Test Driven Development (TDD)",
        "Perform Integration testing with Testcontainers",
        "Test RESTful Web Services with REST Assured",
        "And more..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome from the instructor",
          "What is a Unit Test?",
          "Why write Unit Test?",
          "The F.I.R.S.T Principle",
          "Testing Code in Isolation",
          "Testing Pyramid",
          "Quiz. Basics of Unit Testing",
          "What is JUnit 5?",
          "JUnit and Build Tools"
        ],
        "Add JUnit 5 to Maven project": [
          "Java Development Environment & IntelliJ IDEA Ultimate Edition Licence",
          "Create new Maven project using IntelliJ IDEA",
          "Add JUnit Dependencies",
          "Maven Surefire Plugin [Skip if you use newer version of Spring Boot]"
        ],
        "Add JUnit 5 to Gradle project": [
          "Creating a new project",
          "Add JUnit Dependencies",
          "Executing Unit Test"
        ],
        "Add JUnit 5 to a basic Java project": [
          "Introduction",
          "Basic Java project with IntelliJ",
          "Basic Java project with Eclipse"
        ],
        "Basics of JUnit 5": [
          "Introduction",
          "Creating First Unit Test method",
          "Assertions and Assertion message",
          "Assertion Message",
          "Other assertions",
          "JUnit Test Exercise",
          "Exercise solution overview",
          "Lazy Assert Messages",
          "Naming Unit Tests",
          "@DisplayName annotation",
          "Test Method Code Structure. Arrange, Act, Assert.",
          "JUnit Test Lifecycle",
          "Lifecycle methods demo",
          "Quiz - JUnit Test Lifecycle",
          "Disable Unit Test",
          "Assert an Exception"
        ],
        "Advanced JUnit 5": [
          "@ParameterizedTest. Multiple Parameters with @MethodSource.",
          "@ParameterizedTest. Multiple parameters with @CsvSource.",
          "@ParameterizedTest + CSV file",
          "@ParameterizedTest + @ValueSource annotation.",
          "Repeated Tests",
          "Methods Order - Random order",
          "Methods Order - Order by name",
          "Methods Order - Random by order index",
          "Order of Unit Test Classes",
          "Methods Execution Order - Quiz",
          "Test Instance Lifecycle - Introduction",
          "Changing Test Instance Lifecycle - example 1",
          "Test Instance Lifecycle Demo project overview",
          "Test Instance Lifecycle Demo Project Implementation",
          "Test Instance Lifecycle - Quiz"
        ],
        "Test Driven Development (TDD) in Java": [
          "Introduction to the Test Driven Development(TDD) in Java",
          "New project, Class, Method",
          "Creating UserService",
          "Test Create User method",
          "Test User object contains first name",
          "Test Driven Development(TDD) - Refactor Test method",
          "Test Driven Development(TDD) - Exercise",
          "Test Driven Development(TDD) - Solution overview",
          "Check if user id is set",
          "Assert throws Exception",
          "TDD - Exercise 2",
          "Test Driven Development in Java - Quiz."
        ],
        "Mockito - Create Mocks to test Java code in isolation": [
          "Introduction to Mockito",
          "Adding Mockto to a Java project",
          "Method under test overview",
          "Implementing UsersRepository",
          "Injecting UsersRepository as Dependency",
          "Mockito - Creating a Mock object",
          "Stubbing using built-in any() argument matcher",
          "Mockito - Verify method call",
          "Mockito - Exception stubbing",
          "Creating EmailNotificationService class",
          "Mockito - Stub a void method with Exception",
          "Mockito - Do nothing when method is called",
          "Mockito - Call a real method",
          "Mockito - Quiz"
        ],
        "Code Coverage - Identify untested code in your Java application": [
          "Code Coverage - Introduction",
          "Generating JUnit Code Coverage report with IntelliJ",
          "Export JUnit Code Coverage Report using IntelliJ",
          "Export JUnit Test Report using Maven",
          "Jacoco - Maven Plugin for Code Coverage",
          "Jacoco - Export Code Coverage Report in HTML format",
          "Code Coverage - Quiz"
        ],
        "Spring Boot (Part 1) - Testing Rest Controllers": [
          "Introduction to JUnit Testing of Spring Boot Application",
          "Introduction to Integration Testing of Web Layer",
          "Introduction to Integration Testing of All Layers in Spring Boot application",
          "Adding Testing Support to a Spring Boot Application",
          "Existing Project overview + Source code",
          "New Test Class. @WebMvcTest & @AutoConfigureMockMvc.",
          "RequestBuilder - Building and Performing HTTP Request",
          "@MockBean - Mocking Service Layer",
          "@MockBean annotation - Trying how it works.",
          "Assert for BAD_REQUEST",
          "Testing Rest Controller - Practice exercise",
          "Testing Rest Controller - Practice exercise solution overview",
          "Testing Spring Boot application - Quiz"
        ]
      },
      "requirements": [
        "Basic knowledge of Java"
      ],
      "description": "Unit Testing is a must-have skill and this video course is about unit testing.\nIf you take this video course, you will learn how to test your Java code using JUnit 5 and Mockito framework.\nThis video course is for beginners and you do not need to have any prior Unit testing knowledge to enrol in this course.\n\n\nJUnit 5 in Different Java projects\nThere are different Java projects, build tools and development environments. In this course, you will learn how to create a new project and configure JUnit 5 support for different types of projects, using different development environments and build tools.\nYou will learn how to create a Unit test in:\n\nIntelliJ IDEA and\nEclipse Development environments.\nYou will learn how to create a Unit test in:\n\nRegular Java project,\nMaven-based Java project,\nCradle-based Java project.\n\n\nCourse Overview\nThis video course teaches Unit and Integration testing with Java from the very beginning and covers many advanced topics as well. By the end of this course, you will learn:\n\nJUnit 5 basics, and\nJUnit 5 advanced topics.\nOnce you become familiar with JUnit 5, you will learn to use:\n\nTest-Driven Development(TDD)\nYou will then learn to use another very popular Test framework for Java called:\n\nMockito\nYou will also learn how to write:\n\nSpring Boot integration tests, and\nUse Testcontainers to integrate real, containerized services(like databases) into your Java application tests, making sure your test scenarios are realistic without complex setup.\nand how to test API endpoints using REST Assured.\nBy the end of this course you will learn and be able to use all of the following:\n\n\nCreate Unit Tests in IntelliJ,\nCreate Unit Tests in Eclipse,\nRun unit tests using Gradle,\nRun Unit Tests using Maven,\nUse @DisplayName annotation,\nUse JUnit assertions,\nTest for Exceptions,\nUse Lifecycle methods (@BeforeAll, @BeforeEach, @AfterEach, @AfterAll),\nRun unit tests in any order you need: (Random, Order by Name, Order by Index),\nDisable Unit test,\nRepeated Tests with @RepeatedTest annotation,\nParameterized tests with @Parameterized annotation\n@ValueSource,\n@MethodSource,\n@CsvSource,\n@CsvFileSource\nChange Test Instance lifecycle with @TestInstance (PER_CLASS, PER_METHOD)\nLearn to Mock objects with Mockito's @Mock annotation,\nLearn to user Mockito's argument matches,\nMockito method stubbing,\nMockito Exception stubbing,\nVerify method call,\nCall Real Method,\nDo nothing when a method is called,\nWrite integration tests for Spring Boot applications,\nand more...",
      "target_audience": [
        "Java developers interested in learning how to test Java applications with JUnit 5, Mockito and Test Containers",
        "Java developers interested in learning how to test RESTful Web Services with REST Assured"
      ]
    },
    {
      "title": "ISTQB Agile Technical Tester (ATT) - 2025",
      "url": "https://www.udemy.com/course/istqb-advanced-agile-technical-tester-att/",
      "bio": "Increase strategy, automation, and continuous deployment skills by becoming an ISTQB Advanced Agile Tester!",
      "objectives": [
        "How to create Testable Requirements in an Agile Team",
        "How to implement Test-Driven Development",
        "How to implement Acceptance Test-Driven Development",
        "Creating human-readable tests using Behavior-Driven Development",
        "How to support teams with Continuous Integration, Continuous Delivery, and Deployment",
        "Effective use of test automation in Agile projects",
        "How to plan, monitor, and control testing in Agile projects"
      ],
      "course_content": {
        "Requirements Engineering": [
          "Requirements Engineering Introduction",
          "Requirements Engineering Techniques",
          "Analyzing User Stories and Epics",
          "Story Boards",
          "Story Maps",
          "Personas",
          "Diagrams",
          "Use Cases",
          "Identifying Acceptance Criteria",
          "Identifying Acceptance Criteria Techniques",
          "Requirements Engineering Review Questions",
          "Requirements Engineering Quiz",
          "Before Booking the Exam"
        ],
        "Testing in Agile": [
          "Testing in Agile Introduction",
          "Agile Software Development and Test Techniques",
          "Test-driven development (TDD)",
          "Behavior Driven Development (BDD)",
          "Acceptance Test-driven Development (ATDD)",
          "TDD, ATDD, BDD Comparison",
          "Combining experience-based techniques and black-box tests",
          "Creating test charters and interpreting their results",
          "Refactoring",
          "Code Reviews",
          "Static Code Analysis",
          "Testing in Agile Review Questions",
          "Testing in Agile Quiz"
        ],
        "Test Automation": [
          "Test Automation Techniques Introduction",
          "Data-Driven Testing",
          "Keyword-Driven Testing",
          "Applying Test Automation to a Given Test Approach",
          "Level of Automation",
          "Test Automation Review Questions",
          "Test Automation Quiz"
        ],
        "Deployment and Delivery": [
          "Deployment and Delivery Introduction",
          "Continuous Integration",
          "Continuous Integration Impact on Testing",
          "The Role of Continuous Testing on Continuous Delivery and Deployment",
          "Service Virtualization",
          "Deployment and Delivery Review Questions",
          "Deployment and Delivery Quiz"
        ],
        "Bonus Section": [
          "Booking the Exam",
          "Additional Study Materials",
          "The SOLID Principles"
        ]
      },
      "requirements": [
        "No experience needed. You will learn everything you need to know."
      ],
      "description": "This course is designed for students who want to earn the ISTQB® Certified Tester Advanced Level Agile Technical Tester (CTAL-ATT) certification. Students will learn advanced modern Agile skills needed to succeed in today's competitive market.\nBenefits of CTAL-ATT certification:\nAs a CTAL-ATT certified tester, you will be able to:\nLead teams in creating testable user stories.\nApply Agile testing techniques, such as Test-Driven and Keyword-Driven Development.\nApply automated testing tasks in Agile projects, such as using Data-Driven testing.\nSupport Agile teams by using Continuous Integration and Delivery.\nWhy you should take this course:\nThis course covers all the topics in the CTAL-ATT syllabus, including:\nHow to create Testable Requirements in an Agile Team.\nHow to implement Test-Driven Development.\nHow to implement Acceptance Test-Driven Development.\nCreating human-readable tests using Behavior-Driven Development.\nHow to support teams with Continuous Integration, Continuous Delivery, and Deployment.\nEffective use of test automation in Agile projects.\nHow to plan, monitor, and control testing in Agile projects.\nThis course utilizes theory, practical examples, and practice questions to ensure you understand how to apply the concepts learned. In addition, the lessons include real-life scenarios from the instructor's years of experience as an Agile tester.\nAfter completing this course, you can take the ISTQB CTAL-ATT exam and earn your certification.\nEnroll now and start your journey to becoming an ISTQB CTAL-ATT certified tester!\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "This course is for anyone who wants to enhance their Agile testing skills or earn the Udemy ISTQB® Certified Tester Advanced Level Agile Technical Tester (CTAL-ATT) certification."
      ]
    },
    {
      "title": "Selenium WebDriver with Java Quickstart",
      "url": "https://www.udemy.com/course/selenium-webdriver-page-objects/",
      "bio": "The Essential Selenium WebDriver with Java course to help you write you write automated tests",
      "objectives": [
        "Build beautiful tests using Selenium WebDriver",
        "Understand how to use XPath and CSS to locate web elements",
        "Learn about the page object pattern",
        "Learn some of the most important automation best practices",
        "Understand how to use JUnit for testing the most downloaded Java library",
        "Learn about Intelli J, the most popular Java IDE",
        "Master element manipulation such as click, drag and so on"
      ],
      "course_content": {
        "Introduction": [
          "What you'll get in this course",
          "Syllabus download",
          "Bookmark the resources",
          "Ultimate Cheat Sheet for Selenium Java"
        ],
        "Tools Setup": [
          "Tools Introduction",
          "How to get help?",
          "Install JDK 11 for Windows",
          "Installing Intellij IDEA Community for Windows and Mac",
          "Configuring Intellij",
          "Install Maven",
          "Download source code",
          "Environment setup quiz",
          "How to download the code"
        ],
        "1st Selenium Test": [
          "Create a Maven Project",
          "Issues with Intelli J 2020",
          "Download chromeDriver and Selenium",
          "How to handle chromeDriver paths for windows and mac",
          "Automatic way of managing drivers",
          "Run first test",
          "Alternative way to add the chromedriver.exe file",
          "Run test with Maven",
          "\"Release version 5 not supported\" error in IntelliJ",
          "Selenium WebDriver Intro",
          "Allow Remote Automation for Selenium in Safari",
          "Running Tests Exercise",
          "Selenium First test Quiz",
          "Quiz 2"
        ],
        "Locating web elements with WebDriver": [
          "Section Overview",
          "7 Steps of Selenium script",
          "7 steps Quiz",
          "Basic understanding of HTML",
          "How to use Chrome for element location",
          "HTML in the browser",
          "How to get absolute XPath and CSS",
          "Inspection quiz",
          "Types of locators in WebDriver",
          "Locators in code",
          "Locators quiz answer",
          "Before and after annotations",
          "XPath introduction",
          "Forward slash and double forward slash in XPath",
          "Xpath @ and .",
          "Xpath Contains()",
          "Xpath parent and compound class names",
          "Xpath multiple attributes",
          "CSS Selectors",
          "Which locators are the best to use",
          "Using data attributes",
          "Exam",
          "Exam Answer",
          "Quiz 2",
          "XPath Exercise #1",
          "XPath Exercise #1 Solution",
          "XPath Exercise #2",
          "XPath Exercise #2 Solution",
          "XPath Exercise #3",
          "XPath Exercise #3 Solution",
          "XPath Exercise #4",
          "XPath Exercise #4 Solution",
          "Section review"
        ],
        "Webdriver Methods": [
          "Webdriver methods section Intro",
          "Element interactions",
          "Get element information",
          "Element information examples",
          "Keyboard actions",
          "Actions quiz",
          "Action quiz answer",
          "Javascript Executor",
          "Exercise #1",
          "Exercise #1 Solution",
          "Exercise #2",
          "Exercise #2 Solution",
          "Windows",
          "Frames",
          "Alerts",
          "Alerts Exercise #1",
          "Alerts Solution #1",
          "Alerts Exercise #2",
          "Alerts Solution #2",
          "File Download and Cookies",
          "File upload and file download quiz",
          "Exam on Webdriver methods",
          "Coding Exercises for Methods",
          "Quiz 2"
        ],
        "Page Object Pattern": [
          "Always use Page Objects",
          "Coding a simple page object",
          "Page Object anti- patterns",
          "Quiz on Page Objects",
          "Creating tiny page objects",
          "Page Objects exercise",
          "Page objects exercise answer",
          "The simplicity behind page objects",
          "Quiz"
        ],
        "Automation Best Practices": [
          "Introduction to Automation Best Practices",
          "Test Automation pyramid is key to success",
          "Automation Pyramid Exercises",
          "Focus on reability before more automation",
          "Prefer reliability over automation quiz",
          "Real world story",
          "Dont rerun failed tests",
          "Failed tests quiz",
          "One exception to re-running tests",
          "Should we use implicit or explicit waits",
          "Implicit waits in real code",
          "Explicit waits in code",
          "Exercise #1",
          "Exercise #1 Solution",
          "Quiz",
          "Don't repeat yourself",
          "Keep classes and methods small",
          "Automation best practices review"
        ],
        "Introduction to Page Objects in Test Automation": [
          "OLD CONTENT BELOW!",
          "Introduction",
          "Course Outline",
          "Pre-Requisites",
          "What to do when you run into errors",
          "Course resources",
          "Introduction and question",
          "How many functional tests can you run per day",
          "How can we handle automation in an evolving world",
          "BONUS LECTURE!!!"
        ]
      },
      "requirements": [
        "Have basic understanding of Java programming",
        "A PC running Windows 10 Professional or Mac OS",
        "All software we’ll be using is free to download and install",
        "Chrome browser",
        "Familiar with web pages",
        "Software testing knowledge"
      ],
      "description": "Welcome to an Introductory course in Selenium WebDriver with Java, the only course you need to quickly get up and running with Selenium WebDriver.\nNow includes a module on the most important automation patterns and anti-patterns.\nThe course is a taught by the world's leading instructor at test automation. Training over 100,000 people in-person and online.\nWe've taught over 100,000 students how to code and many have gone on to change their lives by becoming professional test automation engineers\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to get introduced to  Selenium WebDriver with Java.\nThroughout this carefully-engineered course, we cover a the world's leading tools and technologies, including:\nSelenium WebDriver\nJUnit\nIntelli J\nMaven\n“Great course! This was one of the most thorough training courses I have ever taken/endured/survived. For me the course had a real \"graduate course\" feel to it, along with some almost impossible challenges that will result in frustration as well as some very deep learning.” - David Kotschessa\n\n\n“Well I can't explain in words how much am excited after completing this course. The more I was close to completion the more am getting excited. You are a great instructor Nikolay. You don't just taught Selenium but other aspects of being a beautiful coder. Now am pretty confident and can say \"Yes\" to my clients when they need me to automate the application. Thank you Sir for all the hard work and effort you put in the course. Surely would like to see you in another engaging course!” - Randhawa Verma\n\n\n“I like fundamental approach used by author. Will see :) To prepare such a course - it's a really hard and big job. Respect and thank you.” - Serhii Kovalenko\n\n\n“Wonderful content and things explained in a nutshell. Overwhelmed by Author's dedication to put things in such a way that any novice or manual tester can follow and understand and definitely be on-boarded as a Selenium Automation Engineer next day at work. Thanks a million times for creating these courses! One Stop for Automation.\" - Rupashree Geethaaviji Ananthakrishna\n\n\n“I am familiar with Nikolay from a course I saw on TestAutomation and have the highest regard for him. Glad to see him on Udemy.” - Annamalai Viswanathan\n\n\nFAQs:\nQ: What operating system should I have?\nA: The course is presented for Windows and Mac OS users.\nQ: Do I need to install other programs for this course?\nA: Yes, you will need to install Java, IntelliJ, and Maven on your computer.\nQ: Are there any course requirements or prerequisites?\nBasic understanding of Java programming\nA PC running Windows 10 Professional or Mac OS\nChrome browser\nFamiliar with web pages\nSoftware testing knowledge\nAll software we’ll be using is free to download and install\nQ: Do I need to purchase any additional licenses to be able to use all the demonstrated tools?\nA: No, all the tools you will be using during this course are free",
      "target_audience": [
        "Beginner Java programmers that are looking to quickly get started with Selenium WebDriver"
      ]
    },
    {
      "title": "Test Automation with Katalon Studio (Selenium WebDriver)",
      "url": "https://www.udemy.com/course/automation-testing-using-katalon-studio-selenium-webdriver/",
      "bio": "Katalon Studio - Keyword driven tool written on top of Selenium for Web Application Automation | API Testing",
      "objectives": [
        "Fair understanding to automate any web application using katalon",
        "GIT integration with Katalon Studio",
        "Detailed understanding of using Selenium Webdriver feature within Katalon Studio"
      ],
      "course_content": {
        "Katalon Studion Introduction and Syllabus": [
          "Course Introduction and Syllabus",
          "Katalon Studio V5.7 : Cucumber BDD Support Added and on app activation",
          "Katalon Studio Quiz",
          "Complete Project In Zip Form"
        ],
        "Katalon Studio Installation": [
          "Katalon Studio Introduction",
          "Katalon Studio Introduction Quiz",
          "Installation of Katalon Studio",
          "Katalon Installation Quiz"
        ],
        "Test Object Handling | Finding Elements on Web Page": [
          "What is Test Object",
          "CSS Selector",
          "Relative Xpath",
          "Spy Web Introduction",
          "Playing with Test Object",
          "Object Identification Quiz",
          "Find Test Object"
        ],
        "Creating Script by all three ways in Katalon Studio": [
          "Creating first test case using Record & Replay feature of Katalon Studio",
          "Creating first test case using Manual Mode",
          "Creating test scripts"
        ],
        "Handling Browser": [
          "Browser handling in Manual Mode",
          "Handling browser in script mode",
          "Browser Handling Quiz"
        ],
        "Handling Textfield": [
          "Handling text field in script mode",
          "Quiz : Handling TextField"
        ],
        "Handling Checkbox": [
          "Handling checkbox in manual mode",
          "Handling checkbox in script mode"
        ],
        "Handling Radio button": [
          "Handling radio button in script mode",
          "Handling radio button in Manual Mode"
        ],
        "Handling dropdown": [
          "Handling dropdown in manual mode",
          "Handling dropdown in script mode"
        ],
        "Handling multiple windows": [
          "Handling multiple windows using index in manual mode",
          "Handling multiple windows using index and title method in script mode",
          "Handling multiple windows Quiz"
        ]
      },
      "requirements": [
        "Basic computer knowledge",
        "Understanding of Selenium WebDriver would be added benefit",
        "Familiarity with any object oriented programming and JVM based is added benefit"
      ],
      "description": "Are you a QA/Manager and want to learn automation to automate your routine task? but due to limited knowledge of  programming language and basics of HTML, CSS and javascript, you never caste your focus on automation to automate your monotonous tasks\nThen here is the Good news for you!!!!! this course will teach you automation with Katalon Studio which is written on top of Selenium and Appium. In addition to this, Katalon Studio has been designed for pro automation engineer as well as for basic users like manual testers and proactive managers who don't have ever written a single line of automation script. For ease of manual testers and beginners in Automation, Katalon Studio team has created Readable Keywords for almost all actions that any naive user can use with little effort. This tool has a feature to give a dose of Selenium Scripting gradually once the user gets comfortable with this tool.\nFor pro automation engineers this is Selenium with better features along with better action mapped keywords that can be used with java and groovy with great ease.\nKatalon Studio has made it easy to use this tool by embedding Eclipse and all Selenium related Jar already downloaded with tool setup. So the user doesn't need to download Selenium, TestNG jars or any other API jar separately to work with Katalon Studio because everything comes as a single package and that can use right away.\nBest Features of Katalon Studio\nIt uses Selenium at best capacity, So whatever you think can be done through Selenium, can be done with Katalon Studio as well.\nProvides Reports for each of the suite execution with the feature of parallel execution in different browser\nEvery action can be tracked through logs\nProvides an interface to integrate GIT, CI Tools and JIRA\nThe learning curve is really short, any user with prior knowledge of Selenium can start using it right away.\nKatalon Studio seems to be an outstanding automation tool with the shortest learning curve for test Automation of web application.\nSo hope you will enjoy your learning on test automation with Katalon Studio and Selenium.",
      "target_audience": [
        "1- Any professional who wants to try hands in Automation",
        "2- All manual tester and proactive manager who wants to see fast execution of task with each passing sprint"
      ]
    },
    {
      "title": "SOFTWARE TESTING MASTERCLASS-2025-JIRA | AGILE | API Testing",
      "url": "https://www.udemy.com/course/software-manualtesting/",
      "bio": "Be a Manual Testing Expert with Database & Mobile Testing, Linux, Postman with Realtime Quality Assurance/QA questions",
      "objectives": [
        "Software Manual Testing(Basic to Advance), Interview Questions and Best Practices.",
        "Ready to face Experience Level Software Manual Testing interviews",
        "Detailed working knowledge of JIRA from QA point of view, Will be ready to use JIRA for Bug & Task Management",
        "Working exposer to Database Testing (using SQL) & Backend Testing using (Unix/Linux)",
        "Working exposer to API Testing using Postman Tool",
        "Good understanding of Mobile Testing and Practical implementation of Agile-Scrum model"
      ],
      "course_content": {
        "Software Testing Basic Concepts | Must for any Beginner": [
          "What is Software Testing : - Practical Definition",
          "Role of Software Tester /QA Professional/ Software Test Engineer",
          "*** Course Roadmap : Must for Everyone ***",
          "Difference between Product and Project",
          "Difference Between Manual and Automation Testing",
          "Different type of Applications (Web Based/ Window Based/ Client Server)",
          "Difference between Build and Version",
          "What is Test Bed or Test Environment?",
          "Its Time for QUIZ : Check Your Knowledge"
        ],
        "Working with Bugs / Defects | Understand Bug Life Cycle": [
          "What is Bug/Defect",
          "End to End Bug Life Cycle :- Different Stages in Bug Life Cycle"
        ],
        "Testing & Its Types (Most common types of Testing a Tester has to Perform)": [
          "Different types of Testing (Functional and Non Functional)",
          "Levels of Testing (Unit, Integration, System & UAT)",
          "Common Testing : Every Tester has to Perform -Functional, GUI, Usability",
          "Difference between Compatibility Testing & Configuration Testing",
          "What is Browser Compatibility Testing (Cross Browser Testing)"
        ],
        "Practical Testing Process: When Tester find a Bug and Go for Bug Reporting": [
          "What Tester have to do in case he/she find bug",
          "Setup JiRA account for practice",
          "Report a new Defect in JIRA",
          "Set Priority & Severity of a Bug/Defect",
          "Retesting & Regression Testing",
          "Smoke Testing & Sanity Testing"
        ],
        "Understand & Design Test Cases | Best Practices in TestCase Writting": [
          "What is Test Case",
          "Common Test Cases Asked | Points to be remember while writing test cases",
          "Test Case Format",
          "Test Case : Id",
          "Test Case : Description",
          "Test Case : Pre-Conditions",
          "Test Case : Steps",
          "Test Case : Test Data",
          "Test Case : Expected Result",
          "Test Case : Actual Result and Status",
          "Test Case : Comments",
          "Test Case : Priority",
          "Test Case : Type",
          "Test Case : Bug Id"
        ],
        "Test Case Designing Techniques (BVA, ECP, Experienced Based)": [
          "Experienced Based Technique (Error Guessing)",
          "Boundary Value Analysis (BVA)",
          "Equivalence Class Partitioning (ECP)"
        ],
        "Performance Testing Concepts (Load/ Stress/ Volume Testing)": [
          "What is Performance Testing",
          "Different type of performance testing"
        ],
        "Advance Manual Testing Concepts :- Agile Model": [
          "Use Case : Difference between Use case and Test Scenario",
          "Learn End to End AGILE-Scrum Model"
        ],
        "Mobile Application Testing Basics": [
          "What is Mobile Application Testing",
          "Different Types of Applications",
          "Install Native Application on IOS Device"
        ],
        "JIRA : Work with Bug Reporting and Management Tool": [
          "JIRA Introduction",
          "Setup JIRA Trial for Practice",
          "Report a new defect in JIRA",
          "Search and Update Defect Information",
          "Report Defect with Label",
          "Report Defect with Environment Value",
          "Report defect and link Team members",
          "Add comments to Defects",
          "Define Components in Defect",
          "Set JIRA Dashboard",
          "Set new Workflow for Bug",
          "Bug Life Cycle - Valid Defect",
          "Bug Life Cycle - InValid Defect",
          "Bug Life Cycle - Valid Defect - Rejected by Developer",
          "Basic Search",
          "Search : Issues and Filters",
          "Advance Search Options"
        ]
      },
      "requirements": [
        "Basic understanding of Requirement Documents, How to read and understand requirements",
        "Basic understanding about Role of Software Tester / QA professional"
      ],
      "description": "Course Updates\nJan 2025  :   Added Agile Video + Test Management using JIRA, Added Practice Set\nSep 2022  :   Added(Updated) Detailed Videos to Work on JIRA\nApril  2021 :  Added (Updated) Detailed Videos of Database Testing(SQL)\nJan 2021    :  Added (Updated)  Videos of Unix/Linux commands for Software Testers\n\n\nSoftware Testing Course: This course includes Software Manual Testing (Basics & Advanced) + JIRA + Agile + Mobile Testing + Database Testing( SQL)  + Unix Linux for Backend Testing+ Basics of API testing in very simple language and decent pace.\nYou will find it \"Most Complete Course\" for any professional wants to start career in Software Testing\nIt is going to include all mandatory sections which are required to become a perfect Software Tester.\nHere you will also going to get basic information of mobile application manual testing\nThis software testing QA training course is designed by group of industry experts in a way that, it will progress from introducing you to the basics of software testing to advanced topics creating a test plan, Agile model, along with introduction and familiarity with Automation testing and test management tools JIRA and Postman.\n\nManual Testing Coverage:\nYou will cover all advance topics of manual testing\nDifferent types of Testing\nAgile- Scrum Model.\nFunctional and Performance Testing.\nTest Case Designing in Details.\nRealtime Project Implementation.\nTesting Best Practices.\nDo and Don't for Software Tester.\nMobile Testing Concepts\nBug Life Cycles\nJIRA : For Bug Tracking & Task Management\nJIRA Setup for Practice\nBug Reporting and Tracking\nTask Management\nEnd to End Bug Life Cycle in JIRA\n\n\nDatabase Testing using SQL\nSetup Database for Practice\nWrite Basic Select Queries\nWrite Advance Select Queries\nJoins, Conditions, Grouping\nHow to use SQL for Database Testing\nBackend Testing using UNIX/Linux\nWhy to use Unix/ Linux as Tester\nSetup Environment\nPractice Basic Unix/Linux commands\nHow to check log files\n\n\nAPI Testing using Postman\nWhat is API, Different types of API\nSetup postman for REST API testing\nTest GET | POST | PUT | DELETE Operations\nPractice Sets\nThis course will take you from basic to expert level step by step, we are covering almost all aspects which are required for daily QA activities and also for preparing interview",
      "target_audience": [
        "Freshers/Professionals looking opportunity in Software testing",
        "Manual testers who are looking to explore different areas in Software Testing like Database Testing/API Testing & Backend Testing",
        "BA/ Support or Other IT Professionals looking to start career as Software Tester"
      ]
    },
    {
      "title": "QTM - User Training - Epic Games",
      "url": "https://www.udemy.com/course/qtm-user-training/",
      "bio": "QMetry Test Management is the best enterprise test management tool to run manual and automated test cases.",
      "objectives": [
        "Confidently manage test cases, stories, test runs, and defects",
        "Customize real-time testing reports and dashboards to leverage in making testing decisions",
        "Cut down overall time and energy on test management",
        "Access any and all test artifacts in a single platform, with a single click",
        "Achieve better, scalable testing quality and productivity through AI enabled features"
      ],
      "course_content": {
        "Introduction": [
          "Understanding QMetry Terminology"
        ],
        "Requirement Module": [
          "Requirement Module"
        ],
        "Test Case Module": [
          "Test Case Module",
          "Understanding Parameterized Test Cases"
        ],
        "Test Executions": [
          "Test Executions",
          "Understanding Detail View of the Test Execution Screen",
          "Auto calculate the actual time spent for execution using stopwatch",
          "Export test execution details in PDF & Word format"
        ],
        "Import Test Assets": [
          "Import Test Assets"
        ],
        "Understanding Open APIs": [
          "Understanding Open APIs"
        ],
        "Reporting": [
          "System & Custom - Reporting, Dashboard and Gadgets",
          "Planned vs Actual Report"
        ]
      },
      "requirements": [
        "Knowledge of testing lifecycle"
      ],
      "description": "QMetry Test Management is considered one of the best test management tools in the industry verticals. It enables continuous testing and delivery. It is a scalable, compliance-driven, secured and modular tool. With Agile-friendly design and folder structure enablement, it is well-suited for traditional and Agile teams or teams that are in transition. The tool is future-ready with AI & ML capabilities.\nApart from test case authoring, reusability of test cases, and manual as well as automated test execution, the tool offers -\nCreation of Custom Reports and Dashboards along with System Reports\nSmart and automated documentation for the test cases with built-in Exploratory Testing\nSeamless integrations with Jira, Rally and Azure.\nCI/CD tools like Bamboo/Jenkins and Automation frameworks.\nUsing the ESignature feature for Test case and Test Execution Approval Workflow.\nLink Requirement to Test Cases, Test Cases to Test Suites, Test Suites to Defects and it's traceability.\nImport Test cases from Excel and Export test case/test execution details in PDF & Word format.\nShare - Comment - Email Test Assets to Collaborate within your team.\nIntroduction to Exploratory Testing, How to Record an Exploratory Session.\nUnderstanding Open APIs\nImport Automation Results to QMetry\nUnderstanding Automation Agent\nGenerate Planned/Target vs Actual Reports\nEnhance Collaboration - Share - Comment - Email Test Assets to Collaborate within your team",
      "target_audience": [
        "QA professionals who seek to leverage their test artifacts to achieve better test management and testing quality at a large scale"
      ]
    },
    {
      "title": "Selenium WebDriver with C# from Scratch - Nunit Framework",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-csharp-nunit/",
      "bio": "BRAND NEW COURSE - Become expert level Selenium C# Engineer and learn how to implement Automation framework from Scratch",
      "objectives": [
        "By the end of this course, You will get complete knowledge on C# Automation using Selenium WebDriver",
        "You will be able to implement C# Test Automation Frameworks (Nunit) from Scratch with all latest Technologies",
        "Complete Understanding of C# Basics with many practise Examples to gain a solid exposure",
        "Thorough understanding of Nunit Testing Framework concepts which will help for building Customized Frameworks",
        "Complete Understanding on Selenium C# API Methods with real time Scenarios on LIVE Websites",
        "Deeper understanding of Automation guidelines and code quality standards",
        "\"Last but not least\" you can clear any Interview and can Lead Entire C# Automation Project from Design Stage"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Why to Choose C# for Selenium Automation/ Course FAQ's",
          "Download Visual Studio and Setup C# Environment Project",
          "Where are Code Files?"
        ],
        "C# Fundamentals for Automation Testing - Part 1": [
          "Running first C# Hello World program in Visual Studio",
          "What is NuGet and how it helps to install Packages for C# Project",
          "Data Types in C# - Var and Dynamic keywords special",
          "C# OOPS Principles - Classes and methods with examples",
          "How to run selective file in the project with setting Compiler options",
          "Inheritance in C# with an example",
          "Constructors and this keyword in C# and their usage in real time",
          "C# Fundamentals Quiz"
        ],
        "C# Fundamentals for Automation Testing - Part 2": [
          "What are Arrays and how they works in C#",
          "Working with Loops and Array Lists in C# with example",
          "C# Fundamentals for Automation Testing Quiz"
        ],
        "Getting Started with Selenium C# Automation": [
          "What is Nunit Framework? Glimpse about its features",
          "How to invoke Chrome Browser with WebDriver Config Manager -example",
          "WebDriver basic methods - Quit, Close, Full Screen, and grabbing Url",
          "Running Tests on Firefox and Microsoft Edge Browsers with config changes",
          "Selenium C# Automation Quiz"
        ],
        "Selenium Locators and Nunit Assertions for validating the Tests": [
          "Selenium Locators to identify UI Elements on the Page",
          "Returning WebElements and their attributes for functional valdiations",
          "Nunit Assertions to validate the Test Scenarios & Advanced location strategies",
          "Advanced CSS Location strategies for Parent Child traverse mechanism",
          "Selenium Locators and Nunit Quiz"
        ],
        "Handling Implicit & explicit waits in Selenium to avoid Sync issues": [
          "What are Implicit and explicit waits in Selenium Webdriver",
          "Explicit wait implementation Strategy to target one element at a time",
          "Wait Quiz"
        ],
        "Handling Dropdowns, Checkboxes & Radio buttons for forms functional validation": [
          "How to handle Static dropdowns in Selenium webdriver - Example",
          "Handling radio buttons with multiple FindElements Strategy - example",
          "Functional validation on completing the User forms with all UI activities",
          "Part 1 - Identifying the list of products dynamically with Code Logic",
          "Part 2 - Identifying the list of products dynamically with Code Logic",
          "How to validate Sort webtable Columns with Selenium WebDriver",
          "Implementing the logic of Sorting List of array items with C# Selenium Code",
          "Handling Dropdowns, Checkboxes & Radio buttons Quiz"
        ],
        "Handling Alerts, Advanced UI Interactions (Actions) & Frames with Selenium": [
          "Handling Java Alert Pop ups with Selenium WebDriver Alert Class",
          "How to automate AutoSuggestive dropdowns with Selenium WebDriver",
          "Working with Advanced Interactions with Actions Class in Selenium",
          "How to handle Frames with Selenium C# including JavaScript executor",
          "Example of working on Frames Screen and switching back to Parent window",
          "Handling Alerts, Advanced UI Interactions & Frames Quiz"
        ],
        "Handling Child windows and further functional validation with Selenium": [
          "How to handle Child Windows with Selenium WebDriver - Example",
          "Functional testing on Parsing the String and passing back from Child to parent",
          "Adding Items to Cart and validating on Check out page",
          "Wrapping End to end flow of Ecommerce Product Buying process",
          "Frames Screen and switching back Quiz"
        ],
        "Part 1 -Selenium C# Framework- Creating Base Utilities & Browser Factory methods": [
          "Introduction to Selenium C# Framework using Nunit testing Framework",
          "Creating Base class for all tests to configure startup and tear down methods",
          "Implementing Browser invoke function using factor design pattern",
          "How to create global Configuration file to pass on global variables to framework",
          "Part 1 -Selenium C# Framework Quiz"
        ]
      },
      "requirements": [
        "Passion of Learning. Nothing else"
      ],
      "description": "Learn Everything You Need to Know About C# Selenium Automation including Framework Even If You've Never Programmed Before in C#**\nC# is one of the popular Programming language developed by Microsoft. Demand of C# is growing exponentially beyond Microsoft’s domains  (window apps) and it is also used for the development of Android and iOS apps on Xamarin Platform\n\nThis demand has its impact on QA  where projects are popping up on C# based Automation.  So this Course is carefully designed to understand the Selenium UI Automation on C# from Basics to Framework level with many real time examples.\nNo prior knowledge on Selenium or C# is required, everything is taken in the course from the Scratch.\nThis course is divided into 3 parts.\nPart 1 -\nThis course kick starts with C# fundamentals required for Automation\nPart 2-\nComprehensive Selenium C# Automation learning with more than 25+ real time examples\nPart 3-\nBuild Selenium C# Framework from Scratch using Nunit Testing Framework\n\n\nOn course completion You will be Mastered in Selenium Automation Testing with C# and can implement Successfully it in your work place or will surely land on High Paying Job\n\nSo what makes this course Unique in the Market?\nWe assume that students have no experience in automation / coding and start every topic from scratch and basics.\nExamples are taken from REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated.\n\n\nAlso includes-\n· Quizzes\n· Practice Assignments\n· Interview Questions\n· Certification on completion\n\n\nAll the Best! Happy Testing :)",
      "target_audience": [
        "software engineers",
        "QA Engineers",
        "C# Engineer",
        "Manual testers"
      ]
    },
    {
      "title": "Performance Testing HP Loadrunner (Updated)",
      "url": "https://www.udemy.com/course/performance-testing-hp-loadrunner-updated/",
      "bio": "Learn latest version 12.55 Loadrunner tool in detail with real examples",
      "objectives": [
        "Learn latest HP Loadrunner Tool",
        "Concepts of Performance Testing",
        "Independtly using loadrunner in your project for Performance Testing"
      ],
      "course_content": {
        "Introduction to Performance Testing": [
          "What is Performance Testing",
          "Types of Performance Testing",
          "Real scenarios, why different types of Performance testing done",
          "Common Terminologies in Performance Testing"
        ],
        "Performance Testing Requirement Gathering": [
          "Understanding the business",
          "Understanding business Critical Flows"
        ],
        "Load Runner - Architecture": [
          "LoadRunner Architecture",
          "Protocol Introduction",
          "Protocol Introduction & Virtual User Generator"
        ],
        "Sample Application": [
          "Steps for Installing Sample Application"
        ],
        "C Basics": [
          "Data types introduction",
          "Working with Strings",
          "Control Structures"
        ],
        "Recording Options": [
          "Basic Recording options",
          "Advanced Recording options - HTML & URL Based Recording",
          "Advanced Recording options - Walkthrough of Recording Option"
        ],
        "Basic Understanding for Http & Customization": [
          "Understanding Web/Http Methods",
          "Script Customization & Introduction Various Log panels"
        ],
        "Parameterization": [
          "Using File Parameters",
          "Various Paramter Options & Parameter Simulation",
          "Detailed Walkthough of Built-in Parameters"
        ],
        "Correlation": [
          "Correlation Introduction & What to correlate",
          "How to correlate using web_reg_save_param fucntion",
          "Understanding advanced options with web_reg_save_param function",
          "Using advanced options with web_reg_save_param function",
          "Alternate way to do Correlation",
          "Randomization & How to implement it"
        ],
        "Correlation Advanced": [
          "Debugging with Advanced correlation options - 1",
          "Debugging with Advanced correlation options - 2",
          "Various Correlation Functions & How to Use them",
          "Autocorrelation Introduction"
        ]
      },
      "requirements": [
        "Basic computer knowledge is needed"
      ],
      "description": "Welcome to HP Loadrunner version 12.55 Performance Testing course. It is the most popular performance testing tool used across the globe.\nWe have taught this course from scratch so no prior knowledge of tool or performance testing is needed. This course bring integrated knowledge of two instructors to bring the best course in performance testing.",
      "target_audience": [
        "Anyone who needs to perform Performance Testing using Loadrunner",
        "Testers, Managers & Developers etc want to introduce performance testing in project"
      ]
    },
    {
      "title": "Hands on Debugging in C and C++",
      "url": "https://www.udemy.com/course/hands-on-debugging/",
      "bio": "GDB, Valgrind, and the skills you need to program error free!",
      "objectives": [
        "How to debug using a debugger like GDB",
        "How to detect memory leaks using valgrind",
        "How to log errors and get input from a running program.",
        "Learn additional debugging tools (sanitizers, tracing tools, and static analysis tools)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Debugging",
          "A Working Example in GDB",
          "Course Objectives",
          "A story about the first bug",
          "Write your code neatly!",
          "GDB for D, Objective-C, OpenCL, Rust, etc?",
          "Resources"
        ],
        "Setup": [
          "GDB (linux), LLDB (Mac), or Visual Studio (Windows)",
          "GDB on Linux (and lldb)",
          "GDB on Windows Subsystem for Linux",
          "LLDB on Mac"
        ],
        "Utilizing the Compiler as a Debugger - Respecting the Compiler": [
          "Compile-time vs Run-time debugging",
          "Compiler Errors",
          "Compilers cannot read our minds",
          "Treat Compiler Warnings (-Wall, -Werror, and -Wconversion) as Errors (Use C++ {}",
          "Trick: Leveraging multiple compilers",
          "Using our Compilers",
          "Tip: Write your code neatly"
        ],
        "Your First Debugging Technique - printf": [
          "A Debugging Exercise (swap_buggy)",
          "printf debugging (std::cout, console.log)",
          "printf debugging (one more look) with DEBUG"
        ],
        "Using a Debugger": [
          "GNU Debugger (GDB) - The Basics",
          "Why We Compile with Debug Symbols (-g)",
          "Printing Values and Listing Source Code",
          "Figuring out a Variable Type with 'whatis'",
          "Breakpoints (br and info) and Continue (c)"
        ],
        "GDB Text User Interface (TUI)": [
          "GDB the Text User Interface (TUI)",
          "Redirecting output from GDB (to another file or terminal)",
          "Conditional Breakpoints",
          "More ways to continue and step through code (advance, and until)",
          "Watching (watch and rwatch) Variables",
          "Breakpoints Part 2 (enable, disable, and save breakpoint)",
          "Display and undisplay",
          "Getting help in GDB (info)"
        ],
        "Foundations of Processes and Debugging Common Memory Errors": [
          "The Program Stack",
          "What is a Call Stack?",
          "Navigating the Call Stack with Backtrace",
          "[Concept] Understanding common errors - the segmentation fault",
          "[Exercise] Segmentation Fault",
          "[Solution] Segmentation Fault",
          "[Concept] Understanding common errors - the memory leak",
          "Understanding common errors - Stack Overflow",
          "[Exercise] Memory Leak (And the address sanitizer)",
          "[Solution] Memory Leak (And the address sanitizer)"
        ],
        "Debugging Techniques": [
          "[Theory] Delta Debugging Technique",
          "Bug prevention - assert statement and static_assert",
          "Investigating Code by Calling functions within GDB",
          "Attaching the Debugger to a Running Process",
          "Core dumped -- and how to look at those files.",
          "Core dumped -- gcore for a running process",
          "Examining Memory in GDB (and also hex)"
        ],
        "GDB Commands, Scripts, and Workflow": [
          "Breakpoints and commands -- save time!",
          "define your own commands",
          "gdb scripts",
          "Shell commands within GDB (shell, make, and pipe)",
          "Edit source files within GDB"
        ],
        "GDB and Python Basics": [
          "Check and Setup GDB with Python (from source)",
          "Using Python within GDB"
        ]
      },
      "requirements": [
        "Previous experience programming in a language such as C, C++, or any similar language (e.g. DLang)"
      ],
      "description": "Overview\n**Newly revamped in 2024 with twice the content, and higher quality videos!**\nIn this course you will learn how to use the popular debugger GDB to find errors in your C and C++ code.  Learning how to use a debugger will allow you to save time when finding errors and spend more time building better software. Being able to debug code is a necessary skill for all software developers to have, and you need nothing more than a terminal window to do so. The lessons learned from this course however will go behind the GDB debugger, and even show you a few other great tools like valgrind for finding bugs in your code.\nTopics you'll learn\nStudents should take this course if they want to learn:\nHow to use the popular GDB debugger\nGeneral debugging techniques, and why certain bugs occur\nSome more advanced topics like reverse-debugging writing scripts for debugging not covered in other basic courses.\nWhy you should take this course?\nLearning how to use a debugger will at first challenge conventional 'printf' debugging strategies that you may be able to get away with. But as you build larger software and work on software with larger teams, it will become essential to learn how to find and fix bugs. With this course and some practice, you will be able to work more quickly and save time fixing bugs, and then can spend your other efforts building great software. I can recall several instances when I first started working as a software engineer, and it took me weeks to find and fix a single bug. Had I better debugging skills at the time, I could have saved myself (and the company) a lot more time (and myself pain!). So unlock your full debugging potential by taking this course!\nWho am I?\nI have been teaching for over 10 years in universities and as a professor. I have worked in industry in big companies, startups, and as a consultant. I am looking forward to being your instructor for this course, and I hope you will get great value out of the lessons learned!",
      "target_audience": [
        "Beginning C and C++ Programmers",
        "Intermediate Programmers who need to learn debugging to save time!"
      ]
    },
    {
      "title": "ZeroToHero TestNG Framework - From Basics to Advanced",
      "url": "https://www.udemy.com/course/testng-udemy-tutorial/",
      "bio": "[2024] Build TestNG Framework from scratch for Selenium, Appium, API Automation Using Java with real time applications",
      "objectives": [
        "Learn to build a TestNG framework from scratch for efficient test execution.",
        "Master TestNG to organize, group, and prioritize your test cases with ease.",
        "Understand how to integrate TestNG with Selenium for powerful test automation.",
        "Create data-driven tests with TestNG’s powerful parameterization features.",
        "Gain hands-on experience with TestNG annotations for flexible test control.",
        "Learn everything from setting up TestNG to advanced testing techniques, with downloadable code for practice.",
        "Understand TestNG fundamentals with complete code examples provided for every concept."
      ],
      "course_content": {
        "Introduction": [
          "Must Watch - Course Introduction."
        ],
        "Setting Up TestNG Project": [
          "Quick Guide: Installing Java on Windows",
          "Eclipse IDE Installation Guide: Step-by-Step for Windows",
          "How to Install the TestNG Plugin in Eclipse",
          "Creating a Java Project with TestNG"
        ],
        "TestNg Assertions": [
          "Must Watch: How to Download Practice Codes for Your Projects",
          "Writing Your First TestNG Test Case",
          "Understanding TestNG Assertions",
          "Must Watch - Practice Website Orange HRM Minor Updates",
          "Assert Equals assertion.",
          "Assert Not Equals assertion.",
          "Assert True assertion.",
          "Assert False assertion.",
          "Creating multiple assertions in single test case.",
          "Understanding Assertion types and Hard Assertions.",
          "SoftAssertion Introduction With demonstration",
          "Test Your Knowladge"
        ],
        "Understanding TestNG Proirity": [
          "Understanding TestNG priority with dummy test",
          "Implementing TestNG priority with real time example.",
          "Understanding TestNG priority with duplicate priority values.",
          "Understanding TestNG priority with negative priority values.",
          "TestNG priority - partial priority for Test cases"
        ],
        "Exclude Test cases": [
          "Understanding the different ways to exclude test case from execution.",
          "Exclude Dummy test case using enabled attribute and @Ignore Annotation.",
          "Exclude test case for Orange HRM Application.",
          "Invocation Count - Execute @Test multiple times"
        ],
        "Understanding TestNG.XML": [
          "Understanding the TestNG.XML file.",
          "First TestNG.xml file to execute test cases of class",
          "TestNG.xml file to include specific test cases to execute",
          "Exclude Test case using exclude tag in testng.xml",
          "TestNG.xml file to execute multiple classes - Part 1",
          "TestNG.xml file to execute multiple classes - Part 2",
          "Understanding Parameters annotation.",
          "Implementing Parameters annotation for Orange HRM login test case.",
          "Parameters annotation with @Optional annotation"
        ],
        "Data Provider": [
          "Understanding the Data Provider annotation.",
          "Data Provider to execute OrangeHRM Login test case with different data."
        ],
        "Groups": [
          "Understanding the Groups.",
          "Execute test case based on Group name.",
          "Assign multiple groups to single Test and run Tests from multiple classes."
        ],
        "Depends on": [
          "DependsOnMethods attribute Introduction",
          "Understand DependsOnMethods with Apply Leave and Approve Leave test cases",
          "Understanding DependsOnMethods with OrangeHRM test cases"
        ],
        "TestNG Annotations": [
          "Understanding @Test Annotation",
          "Understanding BeforeMethod and AfterMethod Annotations",
          "Understanding BeforeTest and AfterTest Annotations",
          "Understanding BeforeSuite And AfterSuite Annotation",
          "Understanding BeforeClass And AfterClass",
          "Understanding Before Groups And After Groups",
          "Test Your Knowladge"
        ]
      },
      "requirements": [
        "Basic understanding of Java programming",
        "No prior experience with TestNG, You will learn everything in the course.",
        "Basic understanding of Selenium."
      ],
      "description": "Unlock the full potential of test automation with our comprehensive course, \"Learn TestNG Framework with Selenium Java: From Basics to Expert.\" Whether you're a manual tester transitioning to automation or a beginner eager to dive into TestNG and Selenium, this course is designed for you!\nStarting from the ground up, we’ll guide you through the fundamentals of the TestNG framework, show you how to integrate it with Selenium and teach you how to build powerful, scalable test automation frameworks. You'll learn everything from setting up your Java project, configuring Selenium WebDriver, and writing data-driven tests.\n\n\nWith real-world examples and hands-on projects, you’ll develop the skills needed to become a proficient test automation engineer. Plus, you’ll have access to all the code, which you can download and use in your projects, making it easy to follow along and practice as you learn.\n\n\nWhat you'll learn:\nMaster the fundamentals of TestNG and its integration with Selenium.\nCreate and manage data-driven tests using TestNG's powerful features.\nUnderstand and apply TestNG annotations, listeners, and groups to manage test execution.\nTroubleshoot and handle common automation challenges with ease.\nBy the end of this course, you’ll be confident in creating and maintaining automated test suites with TestNG and Selenium, helping you take your automation skills to the next level!",
      "target_audience": [
        "Manual testers looking to transition into automation testing.",
        "Beginners who want to learn TestNG and Selenium from scratch",
        "Software testers aiming to enhance their skills with TestNG framework knowledge.",
        "Anyone passionate about mastering automation testing and TestNG, regardless of prior experience.",
        "Automation Tester."
      ]
    },
    {
      "title": "Automation Testing Using Junit",
      "url": "https://www.udemy.com/course/automation-testing-using-junit/",
      "bio": "Learn how to automate unit test cases using Junit framework for any Application Program Interface written in Java",
      "objectives": [
        "By the end of this course you will be able to write Junits for any Api and will be able to integrate with Ant, Hudson & Jenkins"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Environment Setup",
          "Running the first Test"
        ],
        "Junit Classes": [
          "Junit Core Class",
          "Junit Assert Class",
          "Junit Result Class",
          "Junit Failure Class",
          "Junit Description Class",
          "Junit RunListener Class"
        ],
        "Junit Annotations": [
          "Ignore, TimeOut & Expected Exception"
        ],
        "Jenkins": [
          "Jenkins Setup"
        ],
        "Junit Annotations Conti.": [
          "Before & After"
        ],
        "Database Connectivity": [
          "Database Connectivity"
        ],
        "Reading the Data from CSV Files": [
          "CSV Connectivity"
        ],
        "Running Junit with Ant": [
          "Ant Setting Up the Enviroment",
          "Ant-Build-Xml",
          "Ant-Creating Target",
          "Ant-Running the Junit",
          "Batch Execution of TestCase",
          "Ant with Jenkins",
          "Junit Report Generation Using Jenkins"
        ],
        "Junit with Eclipse": [
          "Eclipse - SettingUp",
          "Running the TestCase",
          "Runwith & SuiteClasses Annotation",
          "Junit Parameterized Test",
          "Test Suite Class"
        ],
        "Testing Java Application": [
          "Sample Application & Java Reflection concept",
          "Writing the Junit for Application",
          "Creating Junit Test Case Suite",
          "Object Mocking using Mockito"
        ]
      },
      "requirements": [
        "All you need is just the basic knowledge Java"
      ],
      "description": "JUnit is a unit testing framework for the Java programming language. JUnit has been important in the development of test-driven development, and is one of a family of unit testing frameworks collectively known as xUnit that originated with JUnit.\nThis tutorial will teach you how to use JUnit in your day-2-day life of any project unit testing while working with Java programming language.\nThe Video includes from setting up the environment till integration with CI tools\nIn this training course, attendees will learn the following\n1. Working with Junit framework classes such as JUnitCore, Result, Failure class etc.\n2. How to use Assertion.\n3. How the execution of code take place in Junit.\n4. Reading the test data from Database & CSV Files (Data Driven Testing)\n5. How to do batch execution of testcases.\nBasic of Ant build Tool\n1. What is build.xml.\n2. What is a target, different type of target present in Ant.\n3. How to write target for Junit.\n4. Integration execution of Junit using Ant tool.\nContinuous Integration Tool Jenkins\n1. Configuring the Jenkins.\n2. Execution of Junit from Jenkins.\n3. Integration of Ant with Jenkins.\nEclipse Plugin\n1. Run the Junit using eclipse plugin\n2. @Runwith & @SuiteClasses Annotation\nAnd source code shown as part of video lecture will be provided for download",
      "target_audience": [
        "This tutorial has been prepared for the beginners to help them understand basic functionality of JUnit tool. After completing this tutorial you will find yourself at a moderate level of expertise in using JUnit testing framework from where you can take yourself to next levels."
      ]
    },
    {
      "title": "GCP: Complete Google Data Engineer and Cloud Architect Guide",
      "url": "https://www.udemy.com/course/gcp-data-engineer-and-cloud-architect/",
      "bio": "The Google Cloud for ML with TensorFlow, Big Data with Managed Hadoop",
      "objectives": [
        "Deploy Managed Hadoop apps on the Google Cloud",
        "Build deep learning models on the cloud using TensorFlow",
        "Make informed decisions about Containers, VMs and AppEngine",
        "Use big data technologies such as BigTable, Dataflow, Apache Beam and Pub/Sub"
      ],
      "course_content": {
        "You, This Course and Us": [
          "You, This Course and Us",
          "Course Materials"
        ],
        "Introduction": [
          "Theory, Practice and Tests",
          "Lab: Setting Up A GCP Account",
          "Lab: Using The Cloud Shell",
          "Important! Delete unused GCP projects/instances"
        ],
        "Compute": [
          "About this section",
          "Compute Options",
          "Google Compute Engine (GCE)",
          "Lab: Creating a VM Instance",
          "More GCE",
          "Lab: Editing a VM Instance",
          "Lab: Creating a VM Instance Using The Command Line",
          "Lab: Creating And Attaching A Persistent Disk",
          "Google Container Engine - Kubernetes (GKE)",
          "More GKE",
          "Lab: Creating A Kubernetes Cluster And Deploying A Wordpress Container",
          "App Engine",
          "Contrasting App Engine, Compute Engine and Container Engine",
          "Lab: Deploy And Run An App Engine App",
          "Compute"
        ],
        "Storage": [
          "About this section",
          "Storage Options",
          "Quick Take",
          "Cloud Storage",
          "Lab: Working With Cloud Storage Buckets",
          "Lab: Bucket And Object Permissions",
          "Lab: Life cycle Management On Buckets",
          "Fix for AccessDeniedException: 403 Insufficient Permission",
          "Lab: Running A Program On a VM Instance And Storing Results on Cloud Storage",
          "Transfer Service",
          "Lab: Migrating Data Using The Transfer Service",
          "gcloud init",
          "Lab: Cloud Storage ACLs and API access with Service Account",
          "Lab: Cloud Storage Customer-Supplied Encryption Keys and Life-Cycle Management",
          "Lab: Cloud Storage Versioning, Directory Sync"
        ],
        "Cloud SQL, Cloud Spanner ~ OLTP ~ RDBMS": [
          "About this section",
          "Cloud SQL",
          "Lab: Creating A Cloud SQL Instance",
          "Lab: Running Commands On Cloud SQL Instance",
          "Lab: Bulk Loading Data Into Cloud SQL Tables",
          "Cloud Spanner",
          "More Cloud Spanner",
          "Lab: Working With Cloud Spanner",
          "Important! Delete unused GCP projects/instances"
        ],
        "Hadoop Pre-reqs and Context": [
          "Hadoop Pre-reqs and Context"
        ],
        "BigTable ~ HBase = Columnar Store": [
          "About this section",
          "BigTable Intro",
          "Columnar Store",
          "Denormalised",
          "Column Families",
          "BigTable Performance",
          "Getting the HBase Prompt",
          "Lab: BigTable demo",
          "Important! Delete unused GCP projects/instances"
        ],
        "Datastore ~ Document Database": [
          "About this section",
          "Datastore",
          "Lab: Datastore demo",
          "Datastore"
        ],
        "BigQuery ~ Hive ~ OLAP": [
          "About this section",
          "BigQuery Intro",
          "BigQuery Advanced",
          "Lab: Loading CSV Data Into Big Query",
          "Lab: Running Queries On Big Query",
          "Lab: Loading JSON Data With Nested Tables",
          "Lab: Public Datasets In Big Query",
          "Lab: Using Big Query Via The Command Line",
          "Lab: Aggregations And Conditionals In Aggregations",
          "Lab: Subqueries And Joins",
          "Lab: Regular Expressions In Legacy SQL",
          "Lab: Using The With Statement For SubQueries"
        ],
        "Dataflow ~ Apache Beam": [
          "About this section",
          "Data Flow Intro",
          "Apache Beam",
          "Lab: Running A Python Data flow Program",
          "Lab: Running A Java Data flow Program",
          "Lab: Implementing Word Count In Dataflow Java",
          "Lab: Executing The Word Count Dataflow",
          "Lab: Executing MapReduce In Dataflow In Python",
          "Lab: Executing MapReduce In Dataflow In Java",
          "Lab: Dataflow With Big Query As Source And Side Inputs",
          "Lab: Dataflow With Big Query As Source And Side Inputs 2"
        ]
      },
      "requirements": [
        "Basic understanding of technology - superficial exposure to Hadoop is enough"
      ],
      "description": "This course is a really comprehensive guide to the Google Cloud Platform - it has ~25 hours of content and ~60 demos.\n\nThe Google Cloud Platform is not currently the most popular cloud offering out there - that's AWS of course - but it is possibly the best cloud offering for high-end machine learning applications. That's because TensorFlow, the super-popular deep learning technology is also from Google.\nWhat's Included:\nCompute and Storage - AppEngine, Container Enginer (aka Kubernetes) and Compute Engine\nBig Data and Managed Hadoop - Dataproc, Dataflow, BigTable, BigQuery, Pub/Sub\nTensorFlow on the Cloud - what neural networks and deep learning really are, how neurons work and how neural networks are trained.\nDevOps stuff - StackDriver logging, monitoring, cloud deployment manager\nSecurity - Identity and Access Management, Identity-Aware proxying, OAuth, API Keys, service accounts\nNetworking - Virtual Private Clouds, shared VPCs, Load balancing at the network, transport and HTTP layer; VPN, Cloud Interconnect and CDN Interconnect\nHadoop Foundations: A quick look at the open-source cousins (Hadoop, Spark, Pig, Hive and HBase)",
      "target_audience": [
        "Yep! Anyone looking to use the Google Cloud Platform in their organizations",
        "Yep! Any one who is interesting in architecting compute, networking, loading balancing and other solutions using the GCP",
        "Yep! Any one who wants to deploy serverless analytics and big data solutions on the Google Cloud",
        "Yep! Anyone looking to build TensorFlow models and deploy them on the cloud"
      ]
    },
    {
      "title": "Learn by Example: JUnit",
      "url": "https://www.udemy.com/course/learn-by-example-junit/",
      "bio": "A comprehensive guide to JUnit with 25 solved examples",
      "objectives": [
        "Test functionality of Java applications using JUnit",
        "Write test cases using Assertions and Matchers",
        "Create mock objects to test interdependent classes",
        "Run multiple test classes under different conditions"
      ],
      "course_content": {
        "You, This Course and Us": [
          "You, This Course and Us"
        ],
        "Getting Started with JUnit Tests and Assertions": [
          "Example 1 : The @Test Annotation : Writing a test",
          "Example 2: The Anatomy of a Test Method",
          "Example 3: Assertions"
        ],
        "Granular Checks with Matchers": [
          "Example 4: assertThat and Matchers",
          "Example 5: Types of Matchers",
          "Example 6: Using Matchers for Debugging",
          "Example 7: Implementing a Custom Matcher"
        ],
        "Assumptions": [
          "Example 8: Checking Preconditions with Assumptions"
        ],
        "Fixtures": [
          "Example 9: Using Fixtures for Setup and Cleanup"
        ],
        "Working with Different TestRunners": [
          "Example 10: The @RunWith Annotation",
          "Example 11: Aggregating tests in a Suite",
          "Example 12: Parameterized Tests",
          "Example 13: Running Subsets of Tests",
          "Example 14: Theories"
        ],
        "Controlling Test Behavior with Rules": [
          "Example 15: External Resource Rules",
          "Example 16: The Temporary Folder Rule",
          "Example 17: Error Collector Rule",
          "Example 18: Verifier Rule",
          "Example 19: Test Watcher Rule",
          "Example 20: TestName Rule",
          "Example 21: ExpectedException Rule",
          "Example 22: Timeout Rule",
          "Example 23: Class Rule"
        ],
        "Mockito : The Mock Object Framework": [
          "Example 24: Creating Mock Objects and Verifying Interactions",
          "Example 25: Stubbing Objects for Expected Results"
        ]
      },
      "requirements": [
        "Experience in Java programming and familiarity with using Java frameworks"
      ],
      "description": "JUnit is one of a family of unit testing frameworks all built with the same philosophy. To abstract the programmer away from the mechanics of running tests. You concentrate on testing the functionality of the application, and the logistics of running, monitoring and displaying results is taken care of by the framework.\nIn this course, we’ll be writing simple tests using all the different features of JUnit tests. Using 25 solved examples, you'll get a complete overview of the JUnit framework and all the functionality within.\nWhat's covered?\n1) Assertions : the fundamental component of any Junit test\n2) Matchers : Write complicated tests in a very readable way. Implement your own custom matchers\n3) Assumptions : Check for preconditions and external dependencies\n4) Fixtures : Setup and Cleanup for your tests\n5) Runners : Understand what goes on under the hood in JUnit. Use different runners to run multiple test classes with different conditions and parameters\n4) Mockito : Understand the concept of mock objects and use the Mockito framework to run tests on interdependent classes.",
      "target_audience": [
        "Yep! Software Engineers who are looking to learn how to test Java applications",
        "Yep! Students learning Java who want to get familiar with testing"
      ]
    },
    {
      "title": "Selenium WebDriver Masterclass with C#",
      "url": "https://www.udemy.com/course/selenium-with-c/",
      "bio": "Build Your Own Automation Framework And Learn Everything About Selenium WebDriver. Zero Previous Knowledge Required.",
      "objectives": [
        "Create a Selenium Webdriver framework from scratch using C#",
        "Master C# for Software Automation Engineers",
        "Understand how to do parallel test execution with NUnit: a must for all automation engineers",
        "Master how to use Selenium Webdriver",
        "Learn how to use any identification mechanism to find an object on a web page",
        "Be desired by every employer as you create extremely reliable and stable automation tests",
        "Automation testing best practices like DRY and SRP: fundamental knowledge for all automation enineers",
        "Use the Page Object Pattern to develop high quality tests",
        "Learn the automation testing best practices so that you can do Automation Testing with any tool",
        "Understand what to automate and when",
        "Learn what an Automation Engineer does at their job in the Agile lifecycle every day",
        "Learn how to create HTML reports",
        "Create log files so that you can debug your automation"
      ],
      "course_content": {
        "Getting started with C#": [
          "Course Overview",
          "Prerequisites and FAQs",
          "Facebook Group- Get Access to our Test Automation Masters secret group!",
          "Syllabus for Selenium section",
          "Help, I have a Selenium Error",
          "Surprise!",
          "Intro to Dr Tiffany and Visual Studio installation",
          "How to update VS Community subscription after expiration",
          "MacOS Only: Installation of Visual Studio on Mac",
          "MacOS Only: Visual Studio options for Mac",
          "MacOS Only: How to use Parallels for Mac",
          "How to download the code",
          "Source Code URL",
          "Visual Studio Errors",
          "Need your help",
          "Creating your first project",
          "Important menus in Visual Studio",
          "Proper Communication",
          "Solution overview",
          "Solution architecture",
          "Coding conventions",
          "The best resource for learning good coding principles",
          "Surprise 2! Download the Most Popular Automation Interview Questions Ebook",
          "End of section quiz",
          "About the quizzes",
          "Quiz",
          "Live, instructor led training?",
          "Where are the course notes?",
          "Ultimate Cheat Sheet for Selenium C#"
        ],
        "Different types of Visual Studio projects": [
          "Class library project",
          "Important note about next lecture",
          "Unit test project",
          "Code Lens",
          "Debugging Quiz",
          "Debugging basics",
          "Common shortcuts in Visual Studio",
          "End of section quiz",
          "Common Visual Studio errors"
        ],
        "Programming basics": [
          "How to create a Console Project",
          "Intro to variables",
          "Declaring variables of simple types",
          "Formatting text using concatenation",
          "Framework Reviews - Survey",
          "Using string interpolation",
          "Formatting text for output",
          "Verbatim strings and escape sequences",
          "End of section quiz",
          "What are your thoughts so far?",
          "An Important Note",
          "Why are we not using NUnit in this course?"
        ],
        "Unit testing project": [
          "Section intro",
          "TestMethod TestClass Description",
          "Assertions",
          "ExpectedException attribute",
          "Use cases for ExpectedException",
          "Quiz on assertions and attributes",
          "Quiz answer",
          "TestInitialize",
          "Quiz on before and after hooks",
          "TestContext",
          "Quick fix to TestContext",
          "Quiz",
          "Quiz",
          "CodeLens",
          "Which topic would you like to learn next?"
        ],
        "Math, equality and relational operators": [
          "Math with integers",
          "Mistake in the Assert.AreEqual(sum,15)",
          "Math with floating point numbers",
          "Math with decimals",
          "Coding quiz",
          "Equality and relationship operators",
          "If statements",
          "If else statements",
          "Warning! Where you see StringAssert.Equals, use Assert.AreEqual instead!",
          "Section exam",
          "Leap year",
          "Quiz",
          "Quiz",
          "Coding exercise",
          "Did you enjoy coding?"
        ],
        "Classes and methods": [
          "Introduction to classes and objects",
          "Writing a class",
          "Get and set accessors",
          "Writing constructors",
          "Methods in classes",
          "Instantiating a class object",
          "Section quiz",
          "The string class",
          "Value vs reference types",
          "Car class example",
          "Employee class example",
          "Scope of declarations",
          "ToString method",
          "End of section exam specifications",
          "Exam trip class solution",
          "Trip class test methods",
          "End of section exam",
          "Quiz",
          "Quiz",
          "Midterm exam",
          "Midterm Exam"
        ],
        "Midterm exam": [
          "Midterm exam specifications",
          "Midterm project solution",
          "Midterm - Retail store"
        ],
        "Repetition": [
          "Please give me feedback on my course by writing a review!",
          "While loops",
          "Increment-decrement operators",
          "Counter and sentinel controlled repetition",
          "Nested loops",
          "Coding quiz",
          "For loops",
          "Do while loops",
          "Switch statement",
          "Break statement",
          "Continue statement",
          "End of section exam instructions",
          "End of section exam solution",
          "End of section exam",
          "Quiz",
          "Quiz"
        ],
        "Methods": [
          "Method call stack",
          "Static methods",
          "Method overloading",
          "Method overriding",
          "Coding quiz",
          "Optional and named parameters",
          "Clarification on optional params",
          "Out and ref keywords",
          "Tuples",
          "End of section exam specifications",
          "End of section exam solution",
          "Clarification on calculation of CalculateNewAssessedValue()",
          "End of Section Exam"
        ],
        "Arrays and lists": [
          "Declaring and creating arrays",
          "The ForEach loop",
          "Passing arrays to methods",
          "Passing array elements to methods",
          "The array class",
          "Coding quiz part 1",
          "Coding quiz part 2",
          "Arrays vs collections",
          "List collection",
          "List example",
          "End of section exam",
          "End of section exam",
          "Quiz",
          "Coding quiz",
          "Did you enjoy the coding exercise from Hacker Rank?"
        ]
      },
      "requirements": [
        "You should have a PC running Windows 10 Professional",
        "Chrome browser",
        "Familiar with web pages",
        "Software testing knowledge",
        "All other tools that need to be installed will be demonstrated in the course",
        "No prior programming language is needed, all the C# concept will be covered in the lectures"
      ],
      "description": "Are you confused and frustrated with your Selenium WebDriver testing??\nDo your tests break often for no apparent reason?? Can you run 500 tests per day with the click of a button?\nIf you are struggling with these issues, then you are not alone. I was there many years ago as well and struggled to figure out the proper way to do test automation with Selenium WebDriver.\nHere's the kicker:\nYou need to build a framework!\nSince nobody teaches QA Engineers how to build an amazing test automation framework using Selenium WebDriver, I decided to do so.\nThe Complete Selenium WebDriver with C# course is crafted carefully by professionals to turn a complete beginner into the greatest Automation Test Engineers. With this course, you will be able to write Selenium WebDriver tests within minutes!\nYour Selenium tests will be easy to read and understand. Writing tests will withstand the test of time.\nEverything is carefully planned and executed in high quality video tutorials. The tutorials are full of exercises on real applications to ensure higher retention rates.\n\"My Career kick-started as Selenium Automation Engineer because of this course.\" -Student\n\"The best tutorials I have ever seen, simply awesome. I take off my hat in front of you, you are an gorgeous professor, I am speechless to express how satisfied I am with these tutorials.\" -Lisbey\n------------------------------------------------------------------------------------------------------------------------\nWHAT WILL YOU LEARN?\nWhat is automation testing?\nLearn a bit about test automation and how to do it well, regardless of tools.\nWhat is Selenium WebDriver?\nUnderstand what Selenium WebDriver is and why use it\nHow to install the correct tools for the course?\nLearn proper installation of tools for the course\nElement Identification with Selenium\nMaster critical skills required to identify elements on any web page\nMouse and Keyboard Interactions\nUnderstand the importance of using mouse and keyboard interactions to do things like drag and drop\nImplicit and Explicit Waits\nLearn when to use one over the other\nAutomation Testing Best Practices\nRegardless of the tool that you use, you need to know automation best practices that will make any of your tests extremely stable. Master four critical rules and principles:\nSingle Responsibility Principle\nDon't Repeat Yourself\nPage Object Pattern\nAcceptance Test Driven Automation\nSelenium WebDriver Automation Frameworks for Two Web Apps\nUse one app to practice WebDriver automation framework evolution - Practice on one web application that will teach you how to maintain your test automation code over time as things change. Your code will remain rock solid.\nUse second app to practice Selenium WebDriver framework organization - Perform test automation on a second web application where you will learn how to create different features and tests for your framework. Your test architecture and organization will be flawless.\nCreating logs and reports\nJust plug and play - Take your framework to the next level as you learn how to easily and quickly create beautiful HTML reports and logs.\nC#\nThe only C# tutorial on the web designed specifically for test automation engineers using Selenium WebDriver. Master everything that you need for phenomenal test automation. Don't waste your time on lessons that you don't need to learn.\nOther course features\nUtilizing Selenium WebDriver 3.0+\nUtilizing the latest automation testing frameworks\nCustomer service assistance answering technical and general questions within 24h\n------------------------------------------------------------------------------------------------------------------------\nWHAT MY STUDENTS ARE SAYING\n\"first of all thank you for your teaching and your course, it's fantastic, has helped me a lot and I got a good job because of it. :) \" -Student\n\"I've been searching for good Selenium C# videos since December 2014. I've been using the IDE but now it's mandatory that I use webdriver. Just in the past few videos I have been provided with more useful information than I've discovered independently in 23 months. Thank you for creating this series\" -Kay\n\"This is an excellent course for beginners as well as seasoned automation experts switching to C# in my opinion.\"-Student\n------------------------------------------------------------------------------------------------------------------------\nExtra:\nThe only Complete Sauce Labs course in the world that will teach you advanced test automation\nLearn cross browser test automation that's required by all employers today\nUnderstand how to do parallel test execution so that you can actually scale your test automation\nMost Popular Automation Interview Questions Ebook with 50+ Questions! We walk through all the most important questions you will see in an interview for your IT career.\nAnd if you are not 100% satisfied, you can request a full refund within 30 days of your purchase! You have absolutely nothing to lose.",
      "target_audience": [
        "Any individual that simply doesn't know how to create a framework",
        "Any manual tester that wants to get a better job",
        "Any manual tester that wants to secure their future",
        "Any person interested in learning Quality Assurance and Automation",
        "Any Test Engineer that want to have stable test automation"
      ]
    },
    {
      "title": "Performance Testing Course with JMeter and Blazemeter",
      "url": "https://www.udemy.com/course/performance-testing-course-with-jmeter-and-blazemeter/",
      "bio": "You will learn the basics of performance testing using today’s most popular tools while following a widely-used method",
      "objectives": [
        "Understand the basics of Performance testing",
        "Automate scripts and run tests with JMeter",
        "Create and run load tests with BlazeMeter"
      ],
      "course_content": {
        "Module 1- Introduction to Performance Testing": [
          "What is performance testing about?",
          "Welcome!",
          "Factory Acceptance Testing of Pedestrian Bridge: 8-Ton Load Test",
          "How can JMeter help us with performance testing?",
          "Basic concepts on automation and load simulation",
          "Introduction to HTTP",
          "If there is a form with the following HTML code:",
          "Debugging with Fiddler",
          "First look at JMeter's interface",
          "Main building blocks",
          "Recording a Script with JMeter",
          "Analyzing the Script"
        ],
        "Module 2- JMeter Basics": [
          "Want a cookie?",
          "Http Cookies - A different view",
          "Http Cookie Manager",
          "Assertions in JMeter",
          "How do we select good assertions?",
          "Task - Building a simple Script",
          "User defined variables in JMeter",
          "Introduction to Regular Expressions",
          "Regular Expression Extractor",
          "Variable correlation in JMeter",
          "Task - Increased complexity"
        ],
        "Module 3- JMeter advanced": [
          "Data parameterization",
          "Data parametrization and CSV files in JMeter",
          "Introduction to Controllers",
          "Some important Controllers",
          "Writing more realistic scripts - working with timers",
          "Test scenarios",
          "Threads, iterations and ramp up",
          "Baselines and increasing scenarios",
          "Execution plan",
          "VolksWagen Crash test",
          "Running a test scenario with JMeter"
        ],
        "Module 4 - Performance Testing from the Cloud": [
          "About BlazeMeter",
          "Creating and configuring a basic load test",
          "Advanced configurations and multitests",
          "Running a test and analyzing results",
          "BONUS LECTURE: Must-Have Resources"
        ]
      },
      "requirements": [
        "There are no requirements, we will provide the links to download the tools throughout the course"
      ],
      "description": "In order to optimize a web or mobile application, or to assist with the sizing of the infrastructure required for it to function properly, we need to prepare and execute load simulations using the proper tools.\nThat’s what performance testing is about. In this course you will learn the basics of performance testing using today’s most popular tools while following a widely-used methodology. For this aim, we use JMeter (the most popular open-source load simulation tool) and BlazeMeter (the most used cloud-based load simulation solution) together.\nIn this course, you will start from the very beginning, learning the basics and by the end, you will be able to come up with a load execution, simulating concurrent users from different countries, who access with different bandwidths, with different test data, verifying the response times and resource consumption of a real e-commerce application (a very common, real-world example of the use of a load test).\n✓ Introduction to Performance Testing Concepts\n✓ Automation and preparation of load tests in JMeter\n✓ Execution in BlazeMeter\nThe main concepts of the course are taught via a series of videos and texts. Most of the videos include demos and examples using the tools. A highly practical course, all the lessons require the student to try the tools and accomplish challenges and tasks.",
      "target_audience": [
        "Testers and developers who want to learn how to automate scripts with JMeter"
      ]
    },
    {
      "title": "Learn integration testing with Spring Boot",
      "url": "https://www.udemy.com/course/learn-integration-testing-with-spring-boot/",
      "bio": "Develop Spring Boot Integration Tests: JUnit 5, assertJ, MockMvc, TestRestTemplate, Spring Security, Hamcrest, H2 DB",
      "objectives": [
        "Will improve your knowledge about testing",
        "Will be capable to write integration tests with more quality using Spring Boot",
        "Will learn about the tools Spring Boot provides to make it easy to create integration tests",
        "Will learn how to create integration tests using database and for rest APIs"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!"
        ],
        "Software Testing": [
          "Software Testing",
          "Integration testing",
          "Spring testing modules"
        ],
        "Configurations": [
          "Basic configurations",
          "Working with profiles",
          "Adding settings for the tests",
          "Mocks and Stubs"
        ],
        "Databases": [
          "Setting up a database",
          "Running scripts in the database for testing",
          "Sql annotation",
          "Spring Data JPA",
          "Spring Data JPA - @DataJpaTest",
          "Spring Data JDBC",
          "Spring Data JDBC - JdbcTemplate",
          "Spring Data JDBC - @DataJdbcTest"
        ],
        "Web Layer": [
          "Starting a web server for the tests",
          "TestRestTemplate - Lesson 1",
          "TestRestTemplate - Lesson 2",
          "Testing without starting a web server",
          "MockMvc"
        ],
        "MVC": [
          "The project",
          "Test in the view content",
          "Testing with model",
          "Grouping the tests - Lesson 1",
          "Grouping the tests - Lesson 2",
          "Simulating Users",
          "Working with forms"
        ],
        "Bonus": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "You must know java",
        "You must know Spring and Spring Boot",
        "You must know Junit"
      ],
      "description": "About the course\nThe job market is demanding more and more professionals who know about software quality. This course focuses on improving software quality through integration testing.\nAt the end of this course, you will be able to understand and develop integration tests in applications that use Spring Boot.\nWhy should I learn about software quality or integration testing?\nIn 2002 NIST, the National Institute of Standards and Technology in Portuguese, reported that software bugs cost the US economy 59.5 billion dollars.\nA software error can cause enormous damage to a company and errors in the software can drive away businesses and customers, because of this, companies are increasingly seeking to improve the quality of their products, to gain more trust from their customers and from the market, which is very competitive, in addition to looking for ways to reduce the costs.\nKnowledge in this area can be the differential in a job selection.\nWhy Spring? Why Spring Boot?\nSpring is a framework widely used in the job market. Many companies, big or small, use Spring and Spring Boot came with the purpose of making Spring easier to use.\nWhy this course?\nIn this course you will learn how to create integration tests using java, Spring Framework and Spring Boot. My teaching style is very straightforward, this course mixes theory and practice in a way that it is not tiring to learn about the subject.",
      "target_audience": [
        "Software developers, analysts and architects who want to learn more about Spring Boot integration testing",
        "Test developers and analysts who want to learn or improve their knowledge of Spring Boot integration testing"
      ]
    },
    {
      "title": "Top 150+ QA Automation Interview Questions & Resume Tips",
      "url": "https://www.udemy.com/course/qa-automation-interview-questions/",
      "bio": "Job oriented Interview preparation course on Selenium, API testing, Testng, SQL, cucumber & Java programs with solutions",
      "objectives": [
        "By end of this course, one should be able to attend any QA Automation Interviews with full confidence",
        "Detailed Discussion on Selenium Web Driver Automation Interview Questions",
        "Detailed Discussion on API Testing ( Manual + Automation) Interview Questions",
        "Detailed Discussion on Test Automation Framework Interview questions for TestNG and Cucumber tools",
        "Detailed Discussion on Software Testing Concepts and Real time Project Scenario based Questions",
        "Special approach in explaining Java logical programs to improve Problem solving Coding skills",
        "Revision on Core Java Miscellaneous Interview questions topics needed for SDET Automation Jobs",
        "Resume tips on Do's and Dont's when building QA Automation Resumes"
      ],
      "course_content": {
        "Introduction and how the Questions are designed": [
          "Important FAQ's about the course",
          "Course Syllabus Walkthrough and Modules overview"
        ],
        "Selenium and Core Java Mix Interview Questions Module": [
          "Part 1 - Selenium and Core Java Mix Interview Questions",
          "Part 2 -Selenium and Core Java Mix Interview Questions",
          "Part 3 -Selenium and Core Java Mix Interview Questions",
          "Part 4 -Selenium and Core Java Mix Interview Questions",
          "Part 5 -Selenium and Core Java Mix Interview Questions",
          "Part 6 -Selenium and Core Java Mix Interview Questions"
        ],
        "Automation Framework Interview Questions - TestNG + Cucumber": [
          "Part 1 - Automation Framework Interview Questions",
          "Part 2 - Automation Framework Interview Questions",
          "Part 3 - Automation Framework Interview Questions"
        ],
        "API Testing Interview Questions Module": [
          "Part 1 - API Testing Interview Questions",
          "Part 2 - API Testing Interview Questions",
          "Part 3 - API Testing Interview Questions"
        ],
        "Core WebDriver API Interview Questions Module": [
          "Part 1 -Core WebDriver API Interview Questions",
          "Part 2 -Core WebDriver API Interview Questions"
        ],
        "Non Functional/SQL Testing Interview Questions": [
          "Part 1- SQL Interview Questions",
          "Part 2- SQL Interview Questions",
          "Part 3- SQL Interview Questions",
          "Part 4 - SQL Interview Questions",
          "Part 5- SQL Interview Questions",
          "Part 6- SQL Interview Questions",
          "Part 7- SQL Interview Questions"
        ],
        "Manual Testing + QA Behavioural Interview questions": [
          "Part 1 - QA Behavioural Interview Questions",
          "Part 2 - QA Behavioural Interview Questions",
          "Part 3 - QA Behavioural Interview Questions",
          "Part 4 - QA Behavioural Interview Questions"
        ],
        "Top Java Coding Interview Programs with Explanations": [
          "Method which accepts Array and returns sum of all the elements in array",
          "Print Multiplication table without using Multiply operator",
          "Max difference between any adjacent index in array",
          "compare same indexes of 2 different arrays and create new array for matchValues",
          "Sort the Array in Ascending and Descending order",
          "Swap the variables with and with out using Temp variable",
          "Program for Printing Pyramid Pattern in Java",
          "Print Fibanocci Series by swapping variables",
          "Java logic to Check if given number is Prime",
          "Print Min number and Max number in Multi Dimensional Array",
          "Reverse the String/Palindrome with out using Predefined Reverse methods",
          "Eliminate duplicates and print Unique numbers in the Array",
          "Logic to Count no of occurence of characters in the String",
          "Reverse any given Number with arthimetical operations"
        ],
        "Core Java Miscellaneous Interview Questions": [
          "What are Instance, Local, and Class variables with examples",
          "Why Strings are Immutable in Java",
          "What are Interfaces? and explain Advantages",
          "How Interfaces can be connected to Runtime Polymorphism",
          "What are Abstract Classes and differences between Interfaces"
        ],
        "Resume Suggestions and What Next?": [
          "Common Mistakes where everyone makes on QA Resumes",
          "Download Interview Questions Documents",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge on Software testing",
        "Basic knowledge on QA Automation tools"
      ],
      "description": "Questions are carefully prepared after collecting samples from more than 200 SDET's working in various companies across the world.\n4 Special Reasons why this course stand out Unique among others -\n1. Coding Logical Problems is one area where every QA struggles to clear. I have taught these topics with special approach that one can gain the ability of problem solving and can implement any coding task given\n2. There are Detailed Solutions for every QA question discussed with practical example so that one can answer the question with the full confidence\n3. There are different versions of answers discussed where ever applicable so that Interviewer can feel the depth of knowledge you have on the Subject\n4. For Every Quarter I would revise the Questions and see if they matches the current Automation/SDET Job requirement and Update the videos Accordingly and you always have Life time access to all Updates\n\n\nWe covered Commonly asked questions from all QA areas. Below is the List on high level coverage\nManual Testing,\nTesting Process in Real time projects,\nSelenium Web Automation,\nAutomation Framework Designs\nTesting Standards with TestNG and Cucumber\nAPI Testing (Manual + Automation) Interview Questions\nCore Java Webdriver related topics\nProgramming logical questions\nJava OOPS Miscelleanous Concepts\nNon Functional Testing Topics\nResume Suggestions and Many more !\n\n\nWish you all the Best.",
      "target_audience": [
        "software testers",
        "Software Engineer"
      ]
    },
    {
      "title": "Design & Build Test Framework with Python Pytest | API Tests",
      "url": "https://www.udemy.com/course/build-testframework-python-pytest/",
      "bio": "Build a Test Automation Framework with Pytest, Rest API Testing/Automation & SoftwareTesting/SDET/Architect Guide",
      "objectives": [
        "Design & Building a Test Automation Framework from Scratch",
        "Test Automation With Python & Pytest",
        "Automated Software Testing With Python",
        "Software Test Framework modules and components",
        "Rest API Testing and Automation",
        "Effectively use Python and Pytest framework for Automation",
        "Writing better and structured test automation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installs & Setup": [
          "Python Install(Windows)",
          "New Pycharm Install & Create Project"
        ],
        "Pytest Basics": [
          "About Pytest",
          "Pycharm: Create Project & Virtual Env(optional)",
          "Pycharm: Installing Python Modules",
          "Pytest: First Test and Test Naming",
          "Pytest: Test Execution",
          "Using Python Assertion",
          "Pytest: Test Discovery",
          "Quiz1",
          "About __init__.py",
          "Pytest: Markers",
          "Pytest: Cmd line options",
          "Quiz2",
          "Pytest: Parametrized Tests",
          "Pytest: Fixtures",
          "Quiz3",
          "Imp Note & Handouts",
          "Code link"
        ],
        "Python Modules For TestAutomation": [
          "Files Ops",
          "About JSON",
          "Json Ops: Data to Json",
          "Json Ops: Json to Data",
          "Json Ops: Validate JSON",
          "Quiz",
          "Free/Public API URLs",
          "Request Module: Simple Requests",
          "Requests Ops: with params",
          "Requests Ops: Post method",
          "Requests Ops: Custom headers",
          "Quiz",
          "CSV Ops"
        ],
        "Rest API Concepts": [
          "Section Intro",
          "API and Webservices",
          "What is RestAPI",
          "API Request composition",
          "API Response composition",
          "API testing and Strategy",
          "Quiz"
        ],
        "Test Automation Framework": [
          "Section Intro",
          "About Test Frameworks",
          "Test Framework Outline",
          "API Test/Automation: Basic Approach(1/2)",
          "API Test/Automation: Basic Approach(2/2)",
          "Design/Build Framework: Utils/Lib(1/2)",
          "Design/Build Framework: Utils/Lib(2/2)",
          "Design/Build Framework: Why Config",
          "Design/Build Framework: Configparser",
          "API Test/Automation PUT Request",
          "API Test/Automation DELETE Request"
        ],
        "Test Framework - Logging": [
          "Design/Build Framework: Logging(1/2)",
          "Design/Build Framework: Logging(2/2)"
        ],
        "API Server": [
          "About API server",
          "API server in GitHub",
          "CURL Cmd(1/3)",
          "CURL Cmd(2/3)",
          "CURL Cmd(3/3)"
        ],
        "Framework & Test Scenarios": [
          "Section Intro",
          "Framework: Adding Tests(1/3)",
          "Framework: Adding Tests(2/3)",
          "Framework: Adding Tests(3/3)",
          "Scenario Parameterized Test",
          "TestData - Request Data From File",
          "Read Json from file, Update and return dict",
          "API Authentications",
          "Scenario API Auth Tokens(1/2)",
          "Scenario API Auth Tokens(2/2) [Use Fixtures]"
        ],
        "Framework & Scenario - DataDriven": [
          "DataDriven Test - Basic Approach(1/2)",
          "DataDriven Test - Basic Approach(2/2)",
          "DataDriven Test - Parameterized(1/4)",
          "DataDriven Test - Parameterized(2/4)",
          "DataDriven Test - Parameterized(3/4)",
          "DataDriven Test - Parameterized(4/4)"
        ]
      },
      "requirements": [
        "A computer with internet connection and a good amount of curiosity towards test automation.",
        "Basic python scripting"
      ],
      "description": "Welcome!\nTest frameworks are tools that software developers and quality assurance professionals use to automate the process of testing software applications. These frameworks provide a set of predefined rules, guidelines, and features that help in organizing, executing, and reporting the results of the tests.\nSome of the key features of test frameworks include the ability to define test cases, assertions, and fixtures, which are reusable components that simplify the process of testing. They also often provide integration with other tools, such as continuous integration and deployment (CI/CD) pipelines, to automate the testing process and improve the efficiency of the development process.\nTest frameworks are typically designed to support different types of testing, including unit, functional, API, Usability, Integration and performance testing. They can also support different programming languages and platforms, allowing developers to choose the one that best suits their needs.\n\n\nExamples of popular test frameworks include JUnit for Java applications, NUnit for .NET applications, and Pytest for Python applications. There are also specialized test frameworks available for specific types of testing, such as Selenium for web application testing and Appium for mobile application testing.\n\n\nIn this course we are going to learn how to Design and Build a Test Automation Framework. The underlying framework will be PYTEST and we will build a Hybrid kind of framework which will be:\nModular-Based,\nData-driven, & also\nLibrary/Utils Driven Architecture.\nThis framework will be extensible and scalable where in you extend to any types of tests like e.g. DB testing, UI testing and others. We will structure our test project framework to be able to handle complex scenarios also.\n\n\nSome of the modules or components we will have in our Hybrid Test Framework are as:\n- Test Runner: This is the module responsible for executing tests and reporting the results. Pytest is what we will be using here, to take the benefits of Python.\n- Utils/Library module: Will contain all reusable functions such as databases, generic functions, application functions etc.\n- Config Management module: Separate config files and config manager to enable different config files.\n- Data Management module: Should support Data Driven capability. Handle Scripts and Data separately.\n- Logging & Reporting: Separate the logging code from the main code, making it easier to maintain and update the test code base.\nThese are some of the modules found in test frameworks we will talk about in this course. And also how to incorporate them in our framework and build a structured automation framework that will be easy to maintain and flexible enough to add new test scenarios or new functions.\nOf-course the specific modules you need in your test framework will depend on the needs of your testing process, such as the types of tests you need to run, the technologies you're using, and the size and complexity of your testing infrastructure. But this course will give you a really good start towards your automation journey, and also make it easier for you to design a test automation framework.\nAfter taking this course you will:\nHave the skills and knowledge needed to build and implement a successful test framework that can improve the quality and reliability of software applications.\nBe able to easily start adding test scripts functions and modules in a test framework.\nBe able to design and build your own test framework from scratch.\nUnderstand the components in any testing framework.\nBe able to suggest changes to existing frameworks your team might be using.\nDesign organize your tests properly in any test automation project.\nLearn API testing automation as well.\nBe able to take test automation interviews easily.\nAnd, Improve your career prospects\nFinally, take another big step towards Test Architect.\nOverall, taking the course on \"Building a Test Framework\" can be a great investment in your professional development and can help you build the skills and knowledge needed to succeed in the software industry.\nSign in and lets learn to build test automation frameworks and write tests in a structured way.\nThank you and see you in the course!\nTags: Python Test Framework, Pytest Framework Automation, API Test Framework, API Automation, Integration Testing, Software Testing",
      "target_audience": [
        "Anyone who wants to learn software testing and automation",
        "Software development, testing, or quality assurance professionals curious about Test Frameworks",
        "Beginner to intermediate level test automation developers",
        "Anyone who wants to learn software test automation with Python"
      ]
    },
    {
      "title": "API Testing in detail using Postman - Test Automation",
      "url": "https://www.udemy.com/course/the-api-master-class-testing-in-detail-using-postman/",
      "bio": "Master API Testing with Postman and AI - Learn with a Real-World, Production-Style API!",
      "objectives": [
        "You will understand what webservices & API's are, and their purpose.",
        "You will write comprehensive API tests in Postman using artificial intelligence (AI).",
        "You will gain an in-depth understanding of API testing from the basics to an advanced level.",
        "You will learn all about GET, POST, PUT, DELETE requests.",
        "You will learn how to use Postman variables to create workflows and scenarios.",
        "You will use real-world APIs (exclusively created and hosted by us).",
        "You will gain hands-on knowledge using Jenkins Continuous Integration.",
        "And plenty more!"
      ],
      "course_content": {
        "Introduction": [
          "What exactly is an API?",
          "Course Resources & More!",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)"
        ],
        "The Real-World API": [
          "API - Overview",
          "API - Documentation"
        ],
        "Postman": [
          "What Exactly is Postman?",
          "Postman - Signup & Setup",
          "Postman - Updates"
        ],
        "API & Postman - Basics": [
          "Common HTTP Methods - [CRUD]",
          "A Simple Request",
          "Collections & Folders",
          "HTTP Protocol & More!",
          "JSON, API Body, Response & More!",
          "Headers",
          "Status Codes"
        ],
        "The Real-World - Example": [
          "API Documentation - Overview",
          "POST - Register User",
          "POST - Login - [Authentication]",
          "Authentication - JWT/Bearer Token",
          "Put vs Patch",
          "Patch - Update Profile",
          "Random Data - Update Profile",
          "Payload - Boundary Testing & More!",
          "Post - Create Goal"
        ],
        "Variables & DRY Principle": [
          "Variables",
          "Global & Environment - Variables",
          "Initial vs Current - Value",
          "Collection - Variables",
          "Sharing Collections & More!",
          "Header Presets"
        ],
        "The Real-World - Challenge": [
          "Introduction",
          "API Documentation & More!",
          "Create a Goal(s) - Challenge",
          "Create a Goal(s) - Solution",
          "Get all Goals - Challenge",
          "Get all Goals - Solution",
          "Get Single Goal - Challenge",
          "Get Single Goal - Solution",
          "Update Goal - Challenge",
          "Update Goal - Solution",
          "Delete Goal - Challenge",
          "Delete Goal - Solution",
          "Show Progress - Challenge",
          "Show Progress - Solution",
          "Section Recap"
        ],
        "Path vs Query - Parameters": [
          "Path vs Query - Parameters",
          "Path Parameters - Example",
          "Query Parameters - Example"
        ],
        "The Real-World - Mindset": [
          "The Real-World Mindset - Practical Examples"
        ],
        "Implementing Tests & More!": [
          "Important Postman Update: The New Scripts Tab in v11+",
          "Pre-request Scripts vs Tests",
          "Variables - Part 1/2",
          "Variables - Part 2/2",
          "Assertions",
          "Pre-request Scripts - Practical Example",
          "Tests - Examples",
          "Filtering, Tests & More! - Part 1/2",
          "Filtering, Tests & More! - Part 2/2",
          "DRY Principle & Automation - Part 1/3",
          "DRY Principle & Automation - Part 2/3",
          "DRY Principle & Automation - Part 3/3"
        ]
      },
      "requirements": [
        "You don't need to have any prior API Testing experience to take this course. Everything will be taught to you along the way.",
        "Non-technical students will gain an in-depth understanding of APIs and how to test them.",
        "Each topic is explained in detail, including the use of animations and practical examples.",
        "A lot of time has been spent to ensure the material is kept interesting to keep you focused.",
        "All technical demonstrations use a real world API so that you gain valuable experience."
      ],
      "description": "Discover everything about APIs and how to test them using Postman. This course has required hundreds of hours to design and create, ensuring you retain information and learn effectively. API testing is a crucial component of any tester's toolkit. You are taught all about APIs, how we can test them using Postman, how you can utilise artificial intelligence to generate effective tests, and much more.\nWhat is an API?\nAn API (Application Programming Interface) enables software applications to interact by defining a set of access rules and protocols. It facilitates the integration of different systems, allowing developers to utilise external functionalities without understanding their complex workings.\nWhy do we use Postman?\nPostman is an interactive tool for building, testing, and modifying APIs. It enables developers to send HTTP requests, view responses, and automate tests, thus ensuring APIs function as intended. Its user-friendly interface simplifies the complex process of API testing, making it accessible for developers at all skill levels.\nWhy this course?\nHundreds of hours of dedicated effort have been invested in crafting this course, meticulously refining the content to ensure that students not only grasp but also retain valuable information. With a community of more than 75,000 students enrolled on my courses, I know what works and how to present material so that you learn efficiently and effectively!\nWhat makes this course unique?\nThis course utilises my own API, hosted on a dedicated site, to ensure the material remains relevant without the risk of change. Unlike many lecturers, I not only take great care about the quality of my material but also ensure the necessary course materials are in place so you derive the maximum benefit from my teaching!\nStill unsure?\nSee what students are saying by checking out my course reviews. My courses has proudly helped students secure new jobs, gain promotions, break into new careers, and more!",
      "target_audience": [
        "People interested in API testing",
        "Those wanting to achieve an in-depth understanding of APIs",
        "Those wanting to learn how to create API tests using Postman",
        "Those seeking to gain an in-depth understanding of Postman and its features"
      ]
    },
    {
      "title": "Software Testing/ QA: Learn Basic Testing with live examples",
      "url": "https://www.udemy.com/course/software-qa-testing-strong-basics-with-live-examples/",
      "bio": "Software testing, testing, performance testing, software engineering, software quality, quality assurance, manual test",
      "objectives": [
        "Writing test cases",
        "Strong testing skills",
        "Good QA knowledge",
        "software QA",
        "live debug/ skills",
        "bug tracking system",
        "software testing",
        "regression testing",
        "manual testing",
        "automation testing basics",
        "JIRA",
        "Testing"
      ],
      "course_content": {
        "need_for_testing, a real time scenario through animation": [
          "Testing Video Trailer:",
          "need_for_testing, a real time scenario through animation",
          "need_for_testing, a real time scenario through animation"
        ],
        "Welcoming to Testing world": [
          "Let's get started on Testing!"
        ],
        "Deep dive in to functionality testing with live examples!": [
          "Deep dive in to functionality testing!!"
        ],
        "Let's explore Negative testing techniques on live system!!": [
          "Let's explore Negative testing techniques on live system!!"
        ],
        "Lets master regression test concepts!": [
          "Lets master regression test concepts!"
        ],
        "Snorkeling to performance ,stress test and System test": [
          "Snorkeling to performance ,stress test and System test"
        ],
        "Differentiate between Manual and Automated testing": [
          "Differentiate between Manual and Automated testing"
        ],
        "Explore White Vs Black box testing!": [
          "Explore White Vs Black box testing!"
        ],
        "Connecting dots between each testing methods": [
          "Connecting dots between each testing methods"
        ],
        "Introducing JIRA with live demo": [
          "Introducing JIRA with live demo"
        ]
      },
      "requirements": [
        "Nothing special, Any one can join!"
      ],
      "description": "NOTE: This is a software testing beginner course. This course is for people who like to join IT industry as a software test engineer / people who are eager to learn testing methodologies in quick time.\nThis course covers the need of testing, process involved, different types of testing, JIRA etc we use in testing etc. Please note here we are explaining types of testing with live example codes",
      "target_audience": [
        "Anyone who likes to learn testing basics",
        "Guys looking to enter in to Testing/QA field"
      ]
    },
    {
      "title": "JavaScript & Node.js course for Testers, QA and SDETs - 2025",
      "url": "https://www.udemy.com/course/javascript-and-nodejs-essentials-for-test-automation/",
      "bio": "A tool independent JavaScript and Node.js course, specifically designed for Test Engineers, QAs and SDETs for Automation",
      "objectives": [
        "JavaScript and Nodejs fundamentals including rules and syntax",
        "Nodejs project set up",
        "Functions including callback, arrow and async/await",
        "Objects and Array and its use in test automation",
        "String manipulation",
        "Object Oriented Programming in JS",
        "Learn how modules work in Nodejs including import and export",
        "File handling using native fs module",
        "Error handling and best practices",
        "Many real time use cases in Test Automation"
      ],
      "course_content": {
        "Week1: Introduction": [
          "Introduction",
          "JavaScript as a programming language",
          "Quiz"
        ],
        "Installation and set up": [
          "Node.js installation",
          "Quiz",
          "VSCode Installation",
          "Quiz",
          "First node project - \"Hello, World!\"",
          "Quiz",
          "Useful extensions",
          "Comments",
          "Quiz"
        ],
        "Variables": [
          "Variable definition & syntax",
          "Variable rules",
          "var, let and const",
          "Variable scoping",
          "Quiz"
        ],
        "Data types": [
          "Data Types",
          "Literals of each type",
          "typeof operator",
          "Data type - different forms",
          "Trythy, falsy and nullish values",
          "Data type conversion - inbuilt functions",
          "Data types - summary",
          "Quiz"
        ],
        "Week 2: Operators": [
          "Operators Intro and types",
          "Overall operators",
          "Assignment operator",
          "Arithmetic operator",
          "Comparison operator",
          "Logical AND (&&)",
          "Logical OR (||)",
          "Logical Not (!)",
          "Logical operator OR - default value",
          "Ternary operator",
          "Quiz"
        ],
        "Strict mode": [
          "Strict mode",
          "Quiz"
        ],
        "Conditional Statements": [
          "Conditional statement intro",
          "Use case 1: Just If",
          "Use case 2: If (NOT)",
          "Use case 3: If and else",
          "Use case 4: Nested if conditions",
          "Use case 5: if..else [Inner conditions]",
          "Use case 6: Use of if conditional in loops",
          "Switch case - syntax",
          "Switch case - demo",
          "Quiz"
        ],
        "Week3:Loops": [
          "Loops - Intro",
          "Standard for loop - simple use case",
          "Standard for loop with Array",
          "Standard for loop - use of break statement",
          "Loops - forEach",
          "Loops - while",
          "Loops - for...in and for...of",
          "Quiz"
        ],
        "String Manipulation": [
          "String intro",
          "String - different forms",
          "Formatting string",
          "Comparing string",
          "Extract substring - slice method",
          "String replace and replaceAll",
          "Extract substring - split method",
          "Extract substring - indexOf method",
          "Use of backslash in string",
          "Quiz"
        ],
        "Week4: Functions": [
          "Function - intro",
          "Named function demo",
          "Annomyous function demo",
          "Function parameter",
          "Rest parameters and arguments object",
          "Return statement",
          "Self invoking function"
        ]
      },
      "requirements": [
        "None - The lessons start from scratch"
      ],
      "description": "JavaScript with Node.js have become one of the most popular full stack programming languages.\nWith no doubt, JavaScripts ranks #1 with regard to the availability of test automation tools and frameworks including some of the popular ones - WebdriverIO, Cypress, Playwright, TestCafe, Nightwatch, Mocha, Jest, Jasmine, CodeceptJS and Casper.js and so on.\nThere goes the reason why a test engineers and SDETs should add JavaScript and Node.js into their career skills.\n\n\nWhy this course?\nCovers what is absolutely necessary for test automation\nTool/framework agnostic which works for any JS based tools or framework\nAll examples are taken from REAL TIME TEST AUTOMATION projects\nSuites for beginners or experienced with other language background such as JAVA, Python or C#\n100 + quizzes and Exercises provided\nThe demo code is available in GitHub\nHD Video quality\nThis course specifically addresses the challenges of test engineers who come from different language backgrounds and can easily relate and understand syntax and rules of JavaScript\nThe course is designed as 6 weeks learning plan:\nWeek 1:\nIntroduction\nNode.js project set up\nVariables\nData types\nWeek 2:\nOperators\nStrict mode\nConditional Statements\nWeek 3:\nLoops\nString Manipulation\nWeek 4:\nFunctions\nArrow functions\nCallback functions\nPromises\nAsync/Await\nFunctions - Real time us case\nWeek 5:\nObjects\nArrays\nWeek 6:\nClasses\nNode.js Essentials\nError Handling\nAll sections have enough exercise and quizzes so you can practice more and be comfortable in writing effective and less error prone code.",
      "target_audience": [
        "Test Engineers/Automation Testers",
        "Functional Test Engineers who aspire to start JS based Test Automation",
        "Test Engineers from other language background e,g Java, Python and C#",
        "Automation engineers who want to learn JS",
        "Freshers who want to learn JS for Test Automation",
        "Test Engineers who try to implement/adopt JS based projects in current role"
      ]
    },
    {
      "title": "HP Automation Tools package: ALM(QC) - LoadRunner - UFT(QTP)",
      "url": "https://www.udemy.com/course/hp-tools/",
      "bio": "Including performance testing using LoadRunner and Testing Management using ALM",
      "objectives": [
        "Student will have in-depth knowledge of UFT and VB Script",
        "Can write framework single handedly"
      ],
      "course_content": {
        "ALM - Setup": [
          "ALM - Setup"
        ],
        "Requirements Section": [
          "Create Requirement Folder Structure",
          "Create Requirements",
          "Requirement Tab Features"
        ],
        "Create Test Case : Test Plan": [
          "Create Folder Structure",
          "Create Test Case",
          "Create Test Steps",
          "Link Test Case with Requirements"
        ],
        "Execute Test Case - Test Lab , Test Runs": [
          "Create Test Set(Test Suite)",
          "Execute Test Set",
          "Link Defect to Test Case",
          "Set Execution Flow",
          "Test Run Tab"
        ],
        "Defect Section": [
          "Report a new Defect",
          "Supported Attachements",
          "Defect - View, Attachments, Sorting",
          "Defect - History , Flagged, Pinned, Search"
        ],
        "LoadRunner Introduction": [
          "LoadRunner Introduction",
          "Installation Process",
          "Recording in LoadRunner",
          "Protocol Analyzer",
          "Running Script in Loop",
          "Actions",
          "Action Block",
          "Transactions",
          "View Transactions Result",
          "Rendezvous Point",
          "Parametrization Basics"
        ],
        "Controller": [
          "Controller Introduction",
          "Controller - Create First Scenario",
          "Create Manual Scenario in Group mode",
          "Create Manual Scenario in Percentage mode",
          "Covert Percentage mode to Group mode and Vice versa",
          "Set Rendezvous Point Policy"
        ],
        "UFT Introduction(QTP)": [
          "Jump into UFT",
          "Record First Script",
          "Script View(Editor) and Keyword View"
        ],
        "Different Type of Recording": [
          "Default Recording",
          "Analog Recording",
          "Low Level Recording",
          "Insight Recording"
        ],
        "Actions": [
          "What is Action",
          "Multi Action Script : Before Recording",
          "Multi Action Script : While Recording",
          "Different type of Actions",
          "Difference between Reusable and Non-Reusable actions",
          "External Actions"
        ]
      },
      "requirements": [
        "Windows machine with QC, ALM and UFT Setup"
      ],
      "description": "Unified Functional Testing, popularly known by its acronym UFT is an automation testing tool originally from Mercury Interactive which was acquired by Hewlett Packard (HP) in 2006.\nUFT is primarily used for functional, regression and service testing. Using UFT, you\ncan automate user actions on a web or client based computer application and test the same actions for different users, different data set, on various Windows operating systems and/or different browsers. Automation using UFT if planned and executed in a proper manner can save considerable time and money.\nWith the release of version 11.50, QTP and Service Test became part of UFT 11.50 software.\nUFT is one of the most widely used automation testing tools in the market today with over 60% market share. Due to this reason, skilled UFT professionals are always in demand.\nThis course will also cover performance testing using LoadRunner and Test Management using Application Life cycle Management\nSome of the important aspects of QTP:\nIt uses VB Script as its scripting language. (A scripting language is one that gets interpreted at run time)\nQTP runs only in a windows environment.\nThe current version of QTP is 11.0 (Latest version Unified Functional Testing – UFT 11.5)\nThe technologies it supports are Web, Java .Net, SAP, Oracle, Siebel, PeopleSoft, Web Services, and many major languages. Although some of the older versions don’t support all the technologies listed.",
      "target_audience": [
        "Automation tester, want to get expertise in UFT",
        "Manual Tester, looking opportunity in Automation"
      ]
    },
    {
      "title": "Web Application Performance Testing",
      "url": "https://www.udemy.com/course/web-application-performance-testing/",
      "bio": "In this course we will discuss what are the industry practices to conduct a performance test.",
      "objectives": [
        "By end of the course you will learn to develop a workable strategy for performance testing of an enterprise system.",
        "Unit 1 : Introduction To Test Methodology",
        "Unit 2 : Setting Up Test Environment",
        "Unit 3 : Defining Performance Exit Criteria",
        "Unit 4 : Designing Realistic Work Load",
        "Unit 5 : Developing Test Scripts",
        "Unit 6 : Executing Repeatable Tests",
        "Unit 7 : Writing Effective Performance Report"
      ],
      "course_content": {
        "Introduction": [
          "Why Do You Want to Test Application For Performance",
          "Motivation For Performance Testing (Slides)",
          "Types of Test To Address Performance Issues",
          "Types of Performance Testing (slides)",
          "Risks Addressed Through Performance Testing",
          "Risks Addressed Through Performance Testing (Slides)",
          "How To Do Performance Testing -- Testing Methodology"
        ],
        "Setting Up Test Environment": [
          "Identifying System Under Test",
          "Overview of Application Under Test",
          "Test Deployment For Our Project",
          "Setting Up Test Environment",
          "Setting Up Apache Web Server on Amazon Cloud",
          "Setting Up Oracle Database Server on Amazon Cloud",
          "Installing Moodle On Test Set Up",
          "Checking Moodle Functionality on Test Setup",
          "Chapter 2 Summary (slides)"
        ],
        "Identifying Performance Acceptance Criteria": [
          "Performance Acceptance Criteria",
          "Performance Acceptance Criteria(Slides)",
          "Performance Acceptance Criteria Case Study 1",
          "Performance Acceptance Criteria Case Study 1 (Slides)",
          "Performance Acceptance Criteria Case Study 2",
          "Performance Acceptance Criteria Case Study 2 (slides)",
          "Performance Acceptance Criteria For Our Project",
          "Performance Acceptance Criteria For Our Project(slides)"
        ],
        "Workload Design": [
          "What is a Work Load",
          "What is a workload(slides)",
          "Case Study on Sample Workload",
          "Design Consideration For Workload",
          "Design Consideration For Developing a Workload (slides)",
          "Common Mistake While Designing Workload",
          "Common Mistakes While Developing Workload (slides)",
          "Workload For Our Project",
          "Workload For our Project(slides)"
        ],
        "Test Implementation": [
          "Phases of Test Implementation",
          "Creating a Simple Load Generator",
          "Creating a Sample Load Generator(slides)",
          "Extending Simple Load Generator",
          "Extending Simple Load Generator(slides)",
          "Enterprise Load Generation Tool Consideration",
          "Enterprise Load Testing Tools(slides)"
        ],
        "Test Execution": [
          "Test Execution Cycle",
          "Test Execution Life Cycle(slides)",
          "Test Environment Validation",
          "Validating Test Environment(slides)",
          "Test Validation",
          "Validating Test(slides)",
          "Test Execution",
          "Creating Baseline and Archive",
          "Creating Baseline and Archiving Tests(slides)"
        ],
        "Result Analysis and Report": [
          "Performance Analysis Fundamentals",
          "Foundation of Performance Analysis(slides)",
          "Average Response Time Can be Misleading",
          "Average Response Time Analysis(slides)",
          "Introducing Percentile Response Time",
          "Percentile Response Time Analysis (slides)",
          "Writing Performance Report"
        ],
        "Conclusion": [
          "Final Thoughts on Class and Next Steps"
        ]
      },
      "requirements": [
        "Working Knowledge of Web Development",
        "Familiarity With a Programming Language"
      ],
      "description": "This course is designed to teach people in a workshop format how to plan and conduct a performance test. The objectives of this course is to define the processes, tools, issues and challenges for performance testing in a variety of web environments. Working through a series of self paced video tutorials, you will learn to develop a workable strategy for performance testing of an enterprise system.This course does not focus on problem analysis, tuning, debugging, or tools.",
      "target_audience": [
        "Quality Assurance Professionals",
        "Dev Ops Professional",
        "System Integrator",
        "Project Leaders"
      ]
    },
    {
      "title": "Git Crash Course for QA Automation Engineers",
      "url": "https://www.udemy.com/course/jobeasy-git-crash-course-for-qa-automation-engineers/",
      "bio": "Learn how to use Git in under One Hour",
      "objectives": [
        "Learn Git for QA Automation Testers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation and Configuration": [
          "Installing Git on Mac",
          "Installing Git on Windows",
          "Create GitHub Account",
          "Fork GitHub Repository"
        ],
        "Basic Console Commands for Working with Git": [
          "Console Commands"
        ],
        "Local Git Profile": [
          "Configure Git Profile"
        ],
        "Git Stages and Flow": [
          "Git Stages and Flow"
        ],
        "Git Ignore": [
          "Adding files to Git ignore"
        ],
        "Local Git vs remote": [
          "Git local vs Git remote"
        ],
        "Git branches": [
          "Learn working with Git branches"
        ],
        "Resolving Git conflicts": [
          "Resolving Git conflicts"
        ],
        "Outro": [
          "Git GUI with Sourcetree as an Example"
        ]
      },
      "requirements": [
        "Software Testing experience"
      ],
      "description": "Welcome to the Git Crash Course designed specifically for QA Automation Engineers eager to learn Git! Whether you're just starting out or looking to refresh your Git skills, this course will provide you with the essential knowledge to efficiently manage your codebase and collaborate with your team.\nThroughout this course, you will embark on a hands-on journey, starting with the creation of your GitHub account. Next, you'll fork our Git repository, allowing you to explore version control in a practical, real-world setting. We understand that your time is valuable, so we've streamlined the learning process to focus on key concepts and commands, enabling you to dive into Git quickly after setting up your environment.\nBy the end of this course, you will have a solid understanding of Git fundamentals, including branching, merging, committing changes, and resolving conflicts. You'll also gain insight into best practices for collaborating with team members using Git workflows, enhancing your productivity and ensuring smooth project development.\nPrepare to accelerate your Git proficiency and elevate your QA automation projects with our focused, hands-on approach. Let's dive in and unlock the power of Git together!\nBasic Information:\nTarget audience: QA Automation Engineers\nLevel: Beginner to Intermediate\nDuration: Self-paced\nPrerequisites: Basic understanding of version control concepts",
      "target_audience": [
        "QA, testers, Junior Developers, QA Automation Engineers, Git Learners, SDET"
      ]
    },
    {
      "title": "Automation Testing with QTP 11, ALM 11, Selenium 2 with Java",
      "url": "https://www.udemy.com/course/automation-testing-with-qtp-11-alm-11-selenium-with-java/",
      "bio": "Become an expert in automation testing using QTP and Selenium .Also learn HP ALM along with these tools",
      "objectives": [
        "After this course students can do automation testing with tools like QTP ,ALM and Selenium"
      ],
      "course_content": {
        "QTP Tutorial Module-1": [
          "Introduction to QTP(Day1 of QTP Training)"
        ],
        "QTP Tutorial Module-2": [
          "QTP Basics-First Script in QTP-1",
          "QTP Basics-First Script in QTP-2",
          "QTP Basics-First Script in QTP-3",
          "QTP Basics-First Script in QTP-4"
        ],
        "QTP Tutorial Module-3": [
          "Working with QTP Test Objects and Object Repositories-1",
          "Working with QTP Test Objects and Object Repositories-2"
        ],
        "QTP Tutorial Module-4": [
          "Object identification Process-1",
          "Object identification Process-2"
        ],
        "QTP Tutorial Module-5": [
          "Descriptive Programming-1",
          "Descriptive Programming-2"
        ],
        "QTP Tutorial Module-6": [
          "Checkpoints in QTP-1",
          "Checkpoints in QTP-2"
        ],
        "QTP Tutorial Module-7": [
          "Basics of VB Scripting"
        ],
        "QTP Tutorial Module-8": [
          "Synchronization in QTP-1",
          "Synchronization in QTP-2",
          "Synchronization in QTP-3"
        ],
        "QTP Tutorial Module-9": [
          "Output Values in QTP-1",
          "Output Values in QTP-2",
          "Output Values in QTP-3"
        ],
        "QTP Tutorial Module-10": [
          "Actions in QTP-1",
          "Actions in QTP-2"
        ]
      },
      "requirements": [
        "You should be able to use PC at beginner level"
      ],
      "description": "This course helps to understand the concepts of QTP, Selenium and ALM. After this course students can implement test automation in their projects.This course helps beginners to understand the concepts thoroughly. Vb scripting basics and Java Programming basics are also included in this course to benefit beginners to acquire the skills",
      "target_audience": [
        "Any beginners willing to explore a career into Automation Testing"
      ]
    },
    {
      "title": "Azure Devops Crash Course -Build CI/CD release pipelines",
      "url": "https://www.udemy.com/course/azure-devops-fundamental/",
      "bio": "Step by step Tutorial to understand CI/CD pipelines ,Release activities, Docker, Code Repos, Project Boards, in Azure",
      "objectives": [
        "By end of this course, You will understand how deployments happen with Azure Devops",
        "You will get real time experience in building CI/CD Pipelines for App Dev code and Test Automation Projects",
        "Understand how to create Docker Images using Azure Pipelines Yaml files",
        "Thorough understanding of Release Management Activities from end to end prod Deployments",
        "Complete knowledge on how to use Azure portal for Project Boards , Work Items, Sprint Planning, Backlog items",
        "Understanding Azure Repositories , Branches , Pull request reviews and Integration of branch code to Work items",
        "Detailed information on how to deploy App code into Local Window Agents and Azure hosted resources"
      ],
      "course_content": {
        "Introduction to Azure Devops": [
          "What is Azure Devops? What does this course cover?",
          "Getting Started with Azure Devops Portal"
        ],
        "Deployment Basics/What are CI/CD Pipelines": [
          "Getting Started with Deployment Basics",
          "Download the Hello World Project from the GIT",
          "Deploying Hello World App in TomCat Server"
        ],
        "Setting up Build CI/CD Pipelines for Projects using Azure": [
          "Update on Form Submission before watching Pipelines section",
          "What is Continuous Integration & Continuous Delivery",
          "Demo on how we are going to build pipelines in Azure Devops Portal",
          "What are Build Pipelines ? What should you know about it",
          "Understanding Build Pipeline run configurations and logs",
          "Copying Build Artifacts from the Project to Azure Staging Directory",
          "Apply Continuous Integration to the Build pipeline for every commit",
          "Test your knowledge till Section-3"
        ],
        "Setting up Release CI/CD Pipelines for Projects using Azure": [
          "What are Release Pipelines and resources in Azure",
          "Creating Resources for environments from Azure Portal",
          "Setup Release pipeline with Linux resources to deploy the artifact"
        ],
        "Introduction to Azure Repositories and Release components": [
          "Importance of Create release component in the Azure Dev portal",
          "Importing GIT Repository of Automation Projects to Azure Repository"
        ],
        "Adding Test Automation Jobs to the Release Pipelines": [
          "Configuration to Add tests from Azure Repositories to Release pipelines",
          "Pushing the Tested code to Production after Successful Automation job runs",
          "Integrate Javascript based Test Automation Projects into Release pipeline"
        ],
        "Deploying Projects to Local Server Agents": [
          "Creating Personal Access token for Installable Server Agent",
          "Connecting to Local Windows Agent with Azure instructions",
          "Deploying application into Configured Local Agent with build changes",
          "Configuring Variables and Environmental variables for Azure Pipelines",
          "Test your knowledge till Section 8"
        ],
        "Project Management using Azure Devops Portal": [
          "Introduction to Work Items in Azure Boards",
          "How Sprint Planning and Stories/Issues are managed in Azure dashboards",
          "Agile Sprint Boards and managing the work with status changes",
          "Additional Features available to Manage Agile Work process"
        ],
        "Integrating Code Repositories to Project Work Boards": [
          "Creating Branches from Azure repos with the linked Work Items",
          "Create Pull request to Master branch with the updated changes",
          "Approve , Merge and Close the PR and linked Work item",
          "Test your knowledge till Section 10"
        ],
        "(optional) Getting Started with Docker and Integration with Azure Dev Pipelines": [
          "How this section is designed?",
          "What is Docker? How it helps in Automation Industry?",
          "What are containers and Images in Docker Software?",
          "How exactly Virtual machines are different from Docker",
          "How to Install Docker into Machines with Prerequisites needed",
          "Understand working with DockerHub",
          "Concept of using Docker file to dockerize the code repositories",
          "Understand Docker Registry Service connection settings",
          "Creating Docker Image through Azure Build Pipelines"
        ]
      },
      "requirements": [
        "None - Everything taken care from the Scratch"
      ],
      "description": "This course requires you to download Docker. If you are a Udemy Business user, please check with your employer before downloading software.\nAzure Devops- One of the Most Buzzing keyword in the 2025 Software Industry\nThis tutorial will bring your wish of Azure Devops learning to reality with Top class 6 hours training with real time examples.\nCourse starts from Scratch with Azure fundamentals and then train you on below important Core concepts\n1. Creating Continuous Integration and Delivery Pipelines for Software Projects.\n2. Setting  up automated release cycle management with CI/CD Pipelines Integration.\n3. Production Deployment to Azure Servers and Local Agent Servers\n4 After thorough understanding of Devops related flows,  We will then see how to manage the complete Project in Azure Portal such as Setting up Work Items, Sprint Planning, Agile Scrum Boards, Backlog etc\n5. Azure Code Repo Integration with Project Work Items for great collaboration.\n7. Pull requests, Code reviews and Merges from Azure Portal\n6. Creating Docker Images for repos  using Azure Pipelines yaml Script\n\n\nAt the end of this course, You will get complete knowledge on Azure Devops Fundamentals and be ready to work on any task related to Azure Devops portal.\nBelow is Course Outline we are going to cover\nIntroduction to Azure Devops\nDeployment Basics\nImportance of Continuous Integration/Deployment\nImplementing Build Pipelines\nImplementing Release Pipelines\nCreating Release Components\nHow to create Docker Images for the Code\nAzure repos\nRunning Automation Test Jobs on Azure Pipelines\nDeploying code to Azure Servers\nDeploying Production code to Local Agent Servers\n\nPart 2 -\nWhat are Work Items?\nWhat are Issues?\nDifferent type of Project Boards\nSpring Planning Management\nBack Log section\nHow to create branches for Azure Repos\nIntegrating work items to Code branches\nPull requests creation\nReview of PR's and code Merge",
      "target_audience": [
        "Software Engineers",
        "Devops Freshers",
        "QA Software Testers"
      ]
    },
    {
      "title": "Appium Mobile Automation - Android & iOS + Frameworks + CICD",
      "url": "https://www.udemy.com/course/the-complete-appium-course-for-ios-and-android/",
      "bio": "[LATEST VERSION 2.x] Only course to master Appium & build production ready frameworks with CICD integration from scratch",
      "objectives": [
        "Appium Server 2.x.x, Appium Java Client 9.x.x and Java 21 LTS",
        "Automate any Android/iOS Native, Hybrid and Mobile Web App using Appium and confidently lead the mobile automation effort from the design phase",
        "Design and Implement production ready test automation frameworks using Appium + TestNG and Appium + Cucumber",
        "Implement end to end CI/CD pipeline from scratch using Appium as well as using BrowserStack cloud",
        "Learn Maven, TestNG, Cucumber, Jenkins, JUnit, Git, Extent Reports and Apache Log4J2",
        "Setup Appium environment on Windows for Android real device and emulator",
        "Setup Appium environment on MAC for Android and iOS real device and emulator/simulator",
        "Build and distribute iOS app for testing on real devices and simulator",
        "Setup Appium for iOS real device using free and paid developer account",
        "Learn and apply JAVA programming language concepts",
        "Run tests in Parallel on real Android and iOS devices",
        "Learn automation best practices",
        "Learn Appium best practices",
        "Learn Appium tips and tricks"
      ],
      "course_content": {},
      "requirements": [
        "*** NO PRIOR APPIUM KNOWLEDGE REQUIRED - I'll take you right from the basics to the advanced level***",
        "*** NO PRIOR FRAMEWORK CREATION KNOWLEDGE REQUIRED - I'll help you design industry standard frameworks step by step***",
        "***JAVA PROGRAMMING KNOWLEDGE IS NOT REQUIRED - We have a dedicated section to learn Java basics***",
        "***You can download all the latest code/instructions from resources section/from the last lecture***"
      ],
      "description": "Course Updates:\nApr 2024: The course (and the framework code) is updated for Java 21 LTS and latest Appium Java Client 9.x.x.\nNov 2023: The course fully supports latest Appium Java Client 9.x.x with Java 15.\nNov 2022: The course is updated for Appium 2.0.\nNov 2021: The setup and the code fully supports latest Appium v1.22.0 for both Android and iOS. Also updated with Java 15.\nDec 2020: The Course content is updated for the year 2021!\n\n\nWhy this course?\nThis is one of the most comprehensive Appium course ever created online\nI have explained every concept in great details and with live coding\nNo other online course covers iOS real device automation like the way I have covered\nWe will be designing and implementing production ready frameworks using Appium + TestNG and Appium + Cucumber BDD\nWe will integrate frameworks with other important tools like Maven, Jenkins, GitHub, Apache Log4J2, Extent Reports and so on\nThis is the only course that covers end to end CI/CD implementation using Appium for both iOS and Android\nThis is the only course that covers parallel execution on real Android and iOS devices\nWe will be covering a lot of automation best practices and Appium tips and tricks throughout the course\nI'm VERY RESPONSIVE in the Q&A section. I respond to queries within 24 hours. If the time zone difference is not that huge, I can respond within 3-12 hours.\n\n\nWhat the course offers?\nThe main objective of the course is to take you from the beginner level to advanced level so that you can lead the entire mobile automation effort from the planning phase all the way to the CI/CD implementation.\nThe course mainly focuses on teaching you the Appium concepts with live coding examples.\n\n\nImportant topics covered:\nIntroduction to Appium\nSetting up Appium environment on Windows for Android [Real device and emulator]\nSetting up Appium environment on MAC for iOS and Android [real device and emulator/simulator]\nCreating our first Appium project\nNative Apps automation fundamentals\nAndroid Gestures\niOS Gestures\nAppium Driver Commands\nWEBVIEW automation for Hybrid and Web (Browser) apps\nTDD Framework development from scratch using Appium and TestNG\nBDD Framework development from scratch using Appium and Cucumber\nComplete CI/CD implementation from scratch for iOS and Android\nDeep Links - how to reduce execution time by almost 50%\nJAVA Essentials\n\n\nIf you are stuck and need help\nDo not worry if you are stuck somewhere and need my help.\nI’m in the Q&A to help you get unstuck. I'll reply to every question to get you back on track.",
      "target_audience": [
        "Mobile application testers who want to master mobile automation using Appium",
        "Web application testers who are interested in learning mobile automation",
        "Any software engineer interested in mastering Appium for mobile automation"
      ]
    },
    {
      "title": "Cypress Automation Simplified: Build Frameworks the Easy Way",
      "url": "https://www.udemy.com/course/cypress-automated-testing-from-beginner-to-advanced/",
      "bio": "Cypress - from beginner to expert + Framework 2025",
      "objectives": [
        "How to set up all the necessary tools to start writing tests with Cypress.",
        "How to set up a Cypress project from scratch.",
        "Types of locators used in Cypress.",
        "How to identify locators for web elements.",
        "How to automate interaction with various types of web elements.",
        "How to organize and reuse code using the Page Object model.",
        "You will put the knowledge learned into practice through the exercises provided.",
        "How to add screenshots and video recordings for automated tests.",
        "How to add reports to test suites.",
        "How to create a testing framework using Cypress."
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required. This course teaches you from scratch, even for complete beginners."
      ],
      "description": "This course will guide you through a complete mastery of the Cypress framework, teaching you how to leverage all its essential features. Cypress is a modern, JavaScript-based tool that includes everything you need right from the start: a Test Runner, assertion libraries, reporters, and more. This all-in-one setup makes Cypress extremely fast and efficient! Even if you’re new to JavaScript, there’s no need to worry. Writing automated tests in Cypress feels more like following a sequence of straightforward commands to interact with the browser, rather than traditional programming. It’s primarily a scripting approach within the structure Cypress provides.\n\n\nWe'll begin by setting up the test environment and getting familiar with Cypress's core commands and actions. You’ll also learn to identify and work with selectors for web elements in the DOM.\n\n\nIn addition to best practices in automated testing, we’ll delve into advanced topics, such as building a testing framework using the Page Object Model—a common approach in real-world projects. You’ll discover how to add screenshots and video recordings to your tests, as well as how to configure reports for your test suites.\n\n\nBy the end of this course, you’ll have the skills, knowledge, and confidence to become proficient in Cypress!",
      "target_audience": [
        "Manual QA engineers who want to learn their first automation framework.",
        "Automation engineers transitioning from Selenium to Cypress.",
        "Developers who want to quickly learn automation with Cypress.",
        "Beginners in Cypress."
      ]
    },
    {
      "title": "Mastering SmartBear TestComplete",
      "url": "https://www.udemy.com/course/mastering-smartbear-testcomplete/",
      "bio": "This course is for testers looking to master the testing techniques in TestComplete",
      "objectives": [
        "The mastering of Functional Testing using SmartBear TestComplete"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "TestComplete IDE": [
          "Updated: Menu and Toolbar - 2021",
          "Updated: Project Workspace -2021",
          "Updated: Keyword, Script and Options - 2021",
          "Test Visualizer",
          "Bookmark, Search and ToDo windows",
          "Obsolete: Code Explorer",
          "Object Browser",
          "Object Spy"
        ],
        "Name Mapping": [
          "Name Mapping Fundamentals",
          "Adding more Characteristics to Name Mapping",
          "Conditional Mode",
          "Extended Find",
          "Usage Statistics"
        ],
        "Checkpoints": [
          "Region Checkpoint",
          "File Checkpoint in Keyword Testing",
          "File Checkpoint in Script Testing",
          "Object Property Checkpoint",
          "Table Checkpoint for Grids",
          "Database Checkpoint"
        ],
        "Data Driven Testing in TestComplete": [
          "Introduction to Data Driven Testing",
          "DDT with CSV files - Keyword Testing",
          "Managing the Log Display in Folders",
          "DDT with Excel Worksheets - Keyword Testing",
          "DDT with SQL Databases - Keyword Testing",
          "DDT with Internal Tables - Keyword Testing",
          "DDT with Javascript - Scripting"
        ],
        "Low Level Procedures": [
          "Recording in Low Level Procedures"
        ],
        "Web Testing": [
          "Web Comparison Checkpoint",
          "Web Accessibility Checkpoint",
          "Web Test Recorder",
          "Building a Web Test Framework",
          "Practical use: Web Order Testing",
          "Bonus: Using Tabs in Chrome by script"
        ],
        "Web Service Testing (SOAP)": [
          "Testing SOAP Servers in TestComplete"
        ],
        "UserForms for creating User Interface in TestComplete": [
          "Building User Interface to use during Testing"
        ],
        "Intercepting Events in TestComplete": [
          "Including Events in TestComplete Projects",
          "New - EventControls for implementing events",
          "Intercepting OnLogError Event",
          "Intercepting OnUnexpectedWindow Event"
        ]
      },
      "requirements": [
        "A simple understanding of the concept of testing software"
      ],
      "description": "If you are interested in the TestComplete course using the Python Language for 2023, please find the course on Udemy and purchase that one instead.  Thank you!\nThis course is for testers looking to master the testing techniques in TestComplete\nThe course will go through the following topics:\nIntroduction to the IDE\nMenus and Toolbars\nProject Workspace\nRecording a Test\nTest Visualizer\nBookmarks Window\nSearch Window\nTodo Window\nUnderstanding the Project Workspace\nUnderstanding the Object Browser\nWorking with Name Mapping\nName Mapping and Aliases\nMultiple instances\nWhy use Name Mapping?\nConditional Mode\nUnderstanding the Keyword Operations\nStore Checkpoints\nRegions\nFiles\nProperties\nGrids\nDatabases\nWorking with Data Driven Tests\nCSV\nExcel\nMS SQL Server Tables\nInternal Tables\nWorking with Low Level Procedures\nWorking with Web Testing\nDiscovery of Web Page\nWeb Comparison\nWeb Accessibility\nLighthouse - Web Audits\nRefactoring\nXPath and Css Selectors\nWorking with Web Services.\nWorking with UserForms\nWorking with Events\nThe power of events in TestComplete\nOnLogError Event\nOnUnexpectedWindow Event\nWorking with AI based OCR\nWorking with Source Control and DevOps (Git and Github)\nBonus: Sessions from SBConnect 2020 Conference\nI hope you enjoy the course and please ask questions in the Q&A section and I will get back to you ASAP (24 to 48 hours SLA time). Best of luck to all!",
      "target_audience": [
        "Testers and Quality Assurance Engineers looking to master the SmartBear TestComplete tool"
      ]
    },
    {
      "title": "Mobile App Testing-Android/iOS App Test Automation with Java",
      "url": "https://www.udemy.com/course/mobile-testing-mobile-website-native-mobile-application/",
      "bio": "This course demonstrates advanced hands-on concepts of manual and automated mobile application testing using Java",
      "objectives": [
        "become an expert in mobile application testing",
        "Master mobile test automation"
      ],
      "course_content": {
        "Intro": [
          "Introduction to Mobile Testing",
          "Mobile Testing Tools"
        ],
        "Basic": [
          "Manual Testing: Android (Samsung Galaxy)",
          "Continuing Manual Testing: Android",
          "More about Manual Testing on Android device",
          "Finalizing android mobile testing"
        ],
        "Automating mobile app testing using Java": [
          "Setting up android driver & emulator",
          "Continuing on setting up android driver & emulator",
          "More about setting up android driver & emulator",
          "Finalizing the setup process of android driver & emulator",
          "Final steps for setting up android driver & emulator",
          "Writing automation scripts",
          "Continuing on writing scripts",
          "More about writing scripts"
        ],
        "Mid-level": [
          "Finalizing steps on writing scripts",
          "Changing user agent",
          "More about changing user agents"
        ],
        "Advanced": [
          "Mobile automation on Gmail",
          "Continuing mobile test automation on Gmail",
          "More in depth about Gmail automation",
          "Further steps for Gmail mobile test automation",
          "Finalizing Gmail mobile test automation",
          "Final touches on Gmail mobile test automation",
          "Finalizing Gmail automation",
          "Mobile Test Automation using Perfecto Mobile",
          "Finalizing test automation using Perfecto Mobile",
          "Automating native mobile apps using Perfecto Mobile",
          "Script and files"
        ]
      },
      "requirements": [
        "No previous knowledge of mobile testing needed",
        "No prior knowledge of programming needed"
      ],
      "description": "This is another award winning and popular course from us and we are showcasing it on Udemy for the first time. Just like our other courses, we have kept all the intro and basic course videos for free and available for preview for your convenience so feel free to explore and test drive it. If you want to become a master in mobile testing, look no further and don't lose the opportunity.\nThe true evolution of the internet started in the late 1900s and technology has really changed the way we communicate. Our world has become much smaller with the help of modern technologies. The revolution of smartphones and tablets brought us a new era of communication and computing. Nowadays, our everyday computing is not limited into the larger screens and we cannot imagine a single day without the pocket-sized devices. It has brought a lot more challenges to the service providers. In today’s world, service providers need to worry about making their websites applications compatible for pocket-sized devices. It is must required to survive in today’s market competition. This is where mobile testing comes into play and it has become a crucial part of our software testing. Nowadays, our applications need to be compatible for different screen sizes and operating systems. Mobile automation is still a brand new technology in the market and it’s difficult to find mobile automation expertise. As a result, we often find it very difficult to find proper resources to learn mobile testing. QAEversity is focused to make it easier for QA professionals to deliver the proper mobile testing training solution. We have taken a step-by-step process to discuss manual and automated mobile testing from scratch. In this course, all aspects of mobile testing is covered including different mobile testing tools, manual testing of android devices, setting up and configuration of android driver and emulator, writing java codes, changing user agents of browser, mobile automation hands-on project, Mobile automation using Perfecto Mobile, and native mobile application testing.",
      "target_audience": [
        "Software testers should take this course",
        "Beginners in mobile app development industry should take this course"
      ]
    },
    {
      "title": "Katalon Studio Beginners - Hands-on Training",
      "url": "https://www.udemy.com/course/katalon-studio-beginners-hands-on-training/",
      "bio": "Complete Katalon Studio Training with Hands-On, Demo, Examples | Step by Step | Web, API, BDD, CI CD, VCS, Git",
      "objectives": [
        "Katalon Studio complete tutorial from scratch",
        "Automation testing with Katalon Studio",
        "How to handle different test scenarios with Katalon Studio",
        "Data Driven Testing",
        "Command Line executions",
        "Integration with Version Control System (Git)",
        "Continuous Integration and Delivery (Jenkins)",
        "BDD - Behaviour Driven Development"
      ],
      "course_content": {},
      "requirements": [
        "No prior experience is required. We will start from the very basics and go Step by Step",
        "Anyone with basic computers knowledge can take this course",
        "Basic testing knowledge will help"
      ],
      "description": "Complete Hands-On training on Katalon Studio.\nLearn Katalon Studio from scratch in a step by step way\nThis course will lay the foundation to use Katalon Studio for test automation\nAfter taking this course you will be able to:\n1. Learn the basics of Katalon Studio\n2. Get a complete understanding of Katalon Studio features\n3. Setup a test automation platform using Katalon Studio\n4. Data-Driven Testing\n5. Reporting\n6. Troubleshooting & Debugging\n7. Command line runs\n8. Custom keyword creation\n9. Jenkins & Git Integration\n10. Handling alerts, frames, mouseover, etc\nBy the end of this course, you will be ready to create awesome test automation solutions with Katalon Studio",
      "target_audience": [
        "Anyone who wants to learn Katalon Studio from scratch",
        "Users who wants to learn Katalon Studio with step by step examples",
        "Users looking forward to use Katalon Studio for setting up test automation platform",
        "QA and Automation Engineers and Managers"
      ]
    },
    {
      "title": "Practical software testing using Testcontainers",
      "url": "https://www.udemy.com/course/practical-integration-testing-using-testcontainers/",
      "bio": "Empower integration tests quality with Docker containers in different languages like java, node.js etc.",
      "objectives": [
        "Where to use Testcontainers and why",
        "Concepts and basics of Testcontainers library",
        "Mocking systems as a whole instead of mocking certain modules in your code",
        "Create, start and stop docker containers from your integration test code directly",
        "How to integrate Testcontainers into the software build lifecycle",
        "Usage of Testcontainers in example applications"
      ],
      "course_content": {
        "Introduction": [
          "Where does Testcontainers help?",
          "What problems it addresses",
          "How does it help in a nutshell"
        ],
        "Getting started": [
          "System requirements",
          "Tooling requirements",
          "A first example"
        ],
        "Features": [
          "Integration with junit 5",
          "Integration with junit 4",
          "Configure logging",
          "Port mapping",
          "Setting environment variables",
          "Bind mounts and volumes",
          "Accessing container logs",
          "Checking container liveness",
          "Checking container readiness",
          "Defining container dependencies",
          "Creating Docker images on the fly",
          "Image name substitution",
          "Using Docker Compose",
          "Using modules",
          "Testing inside a container"
        ],
        "Real world examples": [
          "First things first",
          "Testing database access in SpringBoot",
          "Usage in Node.js connecting Express with Redis"
        ]
      },
      "requirements": [
        "You should know about Docker basics",
        "You should be experienced with java development",
        "It helps if you have used a testing framework like junit already",
        "It helps if you have worked with common frameworks in the Java ecosystem like Spring for example",
        "Nothing more: Enjoy the course!"
      ],
      "description": "Why should you learn about Testcontainers, and what is it at all? If you reached here, you'll surely have an idea about that. I suppose you're testing your software already and want to figure out what Testcontainers can exactly do for you to somehow improve the quality of testing.\nSo welcome here to the first course on Udemy regarding that topic. I'm Ansgar, and I'm a freelanced software engineer, working with tools like Testcontainers almost every day.\nTestcontainers points out, that it makes testing - especially integration testing - easier. I totally agree, but there are other - relevant and important - aspects which should be mentioned. Here are only a few examples:\n\n\nIt makes extension of your integration tests scope to the outermost boundaries possible without having to switch to full-fledged e2e tests\nYou can avoid having potentially confusing test setup with mocks and fakes\nUsing H2 although that's likely not your production database? No longer soon, perhaps ...\nNot relying on JPA but on plain SQL and want to test your statements against a production-like database system? Easy with Testcontainers!\nUsing Docker in your build lifecycle already? Then setting up Testcontainers is in a breeze\n...\nIn this course, I'll talk about the above-mentioned topics and give you a step-by-step walkthrough of the most important features of Testcontainers. For this, I'll stick to the following guidelines:\n\n\nThis course is about practice, not primarily theory (theory of testing for example)\nI keep sections short and try my best to get to the point quickly in order to accelerate your progress. If a question stays open: Leave me a message\nFeedback and discussions are always welcome. I plan to extend this course content on demand based on your feedback\nReady for takeoff? Subscribe to the course and let's go right away.",
      "target_audience": [
        "Software developers who want to bring the power of Docker containers into their testing infrastructure",
        "Software developers just interested in this topic"
      ]
    },
    {
      "title": "Rest API Testing (Automation) : Rest Assured PostMan",
      "url": "https://www.udemy.com/course/api-testing-rest-api-automation-testing-from-scratch/",
      "bio": "Rest Assured API Testing Automation PostMan, API Automation Testing Framework, Realtime Demos Live Projects",
      "objectives": [
        "By end of this course, You will get complete knowledge on REST Assured API Automation Testing.",
        "Creating REST API testing framework from scratch with Maven and TestNG.",
        "Thorough knowledge on REST Assured Manual testing tools like POSTMAN with many Practise API's demo",
        "In-depth understanding of REST API Automation using RestAssured with real time examples",
        "You will understand how to generate neat API Testing Automation Execution reports."
      ],
      "course_content": {
        "Introduction": [
          "REST API Testing Course: Introduction",
          "Start REST API Course: RoadMap"
        ],
        "Environment SetUp": [
          "SetUp Java on Mac Machine",
          "Download & Install Eclipse on MAC",
          "My Motivation Factor",
          "Course Chat with Students and Tech Community",
          "SetUp Java & Eclipse on Windows Machine"
        ],
        "Java for Automation Test Engineers (Optional)": [
          "Create First Java Project",
          "Java Lectures GIT Code Location",
          "Write First Java Code File & Execute",
          "Prove, Java is Platform Independent Language",
          "Variable & Java DataTypes",
          "Conditional Statements in JAVA",
          "Loops in JAVA",
          "Java OOPs Concepts",
          "Constructor in Java",
          "Static & this Keyword in Java"
        ],
        "Object Oriented Programming (OOPS Concepts)": [
          "Java Inheritance",
          "Method Overloading in Java : Polymorphism",
          "Method Overriding in Java : Polymorphism",
          "Super Keyword in Java",
          "Final Keyword in Java",
          "Abstract Class in Java",
          "Interface in Java",
          "Encapsulation in Java"
        ],
        "Array in Java": [
          "Array in Java"
        ],
        "String in Java": [
          "Concepts on String in Java",
          "String Comparison and Concatenation",
          "String Buffer Class",
          "String Builder Class",
          "String Class Methods Part - I",
          "String Class Methods Part - II",
          "String Class Methods Part - III",
          "String Class Methods Part - IV"
        ],
        "Exception Handling in Java": [
          "Java Try-Catch Block",
          "Multi Catch and Nested Try Block",
          "Finally Block in Java"
        ],
        "Java Collection Framework": [
          "What is Collection Framework",
          "Collection GIT Code Location",
          "Iterator in Collection - Enumeration",
          "ListIterator in Collection",
          "List Interface in Java",
          "ArrayList in Collection",
          "LinkedList in Collection",
          "My Motivation Factor",
          "Set in Java",
          "HashSet in Java",
          "LinkedHashSet in Java",
          "TreeSet in Java",
          "Map in Java",
          "HashMap in Java",
          "LinkedHashMap in Java"
        ],
        "Project Build Tool : MAVEN (Optional)": [
          "Maven Introduction",
          "Configure Maven on Windows Machine",
          "Configure Maven on Windows Machine : Text Direction",
          "Project Code Location",
          "Configure Maven on Mac Machine",
          "Generate First Maven Project From Maven CLI",
          "Maven Build Life Cycle",
          "POM.xml File in Maven Project"
        ],
        "API and WebServices Introduction": [
          "What is API",
          "Need of API in Project Architecture"
        ]
      },
      "requirements": [
        "You Don't need to have Core java basic coding experience to start this course. We will cover from scratch.",
        "You will have instructor support to get solved all your queries.",
        "All RESTAPI automation Installation setup including Java knowledge is taken care as part of course",
        "Theoretical Material and REST API Framework Code dump are available for download"
      ],
      "description": "Rest Assured API Automation Testing with Java Framework and PostMan: The online training course is designed to make you an expert in working with Backend API Testing.\nOur Industry Experts have more experience in working with Backend Testing and will ensure that you get trained and become experts in Rest Assured API Testing Automation & REST Assured API Test Framework Design.\nYou would be able to Design the API Testing Framework and pro in API Testing.\nUnderstanding of Complete API Testing and API Testing Terminology.\nHow to Use PostMan and Complete Knowledge of API Calling and Response Handling.\n\n\nWhy this course?\nREST Assured API is a powerful API released by Google (just like Selenium for Web)  to Automate REST API.\nIn the 21st century, almost all web applications use web services to communicate or interact with each other. Most modern-day web services are built on Representational state transfer (REST) architecture; REST has gained a lot of popularity. It will continue to do the same due to its simplicity compared to other technologies.\n90%of the IT industry now heading towards this API for automating Services Learn Everything You Need to Know About REST API Automation Even If You've Never worked Before on this domain.\nThe course covers Basics To Advanced Level With Rest Assured, Postman, Java, TestNG, RestAssured Framework Implementation & HTTP Client Framework implementation From Scratch with rich examples.\nOn course completion, You will have Mastered REST API Automation and can implement Successfully it in your workplace or will surely land on a paying Job.\n\n\nWe start from the Beginners' level and go through the Advanced FRAMEWORK level. This is a single course for everything you need to know related to Rest API Manual testing and Automation.\nThis course explains :\nWhat are API and web services\nREST and SOAP Base API Testing\nREST API Basics and Terminology\nGetting Started with REST API Testing\nClient-Server Architecture\nHTTP Protocol\nREST API Requests and Response\nREST API Testing using POSTMAN\nJSON/XML Parsers\nTestNG Automation Framework for REST Testing\nCore Java Concepts for F/W implementation\nAPI Automation\nREST API Java Framework Design and Implementation\nREST API Framework CI with Jenkins, GIT\nPlay Around JSON\nJSON with Jackson Library\nSupplement Tutorials and Resources\nAPI Automation Tips & Tricks and Interview Material\n\n\nAt the end of this course, you can pick any REST API over the internet and can automate it comfortably with all necessary validations\nHappy Testing and Wish you Good luck.",
      "target_audience": [
        "Manual testers, Non-programming aware testers interested in learning Automation",
        "Any Software engineer who are interested in Mobile Technologies",
        "Freshers/Graduates/ Software Testers"
      ]
    },
    {
      "title": "Effective Appium Tutorial with Real Project",
      "url": "https://www.udemy.com/course/effective-appium-tutorial-with-real-project/",
      "bio": "a practical course to help you get started with Appium mobile automation in the most effective way",
      "objectives": [
        "Start mobile automation testing with Appium effectively",
        "Understand business and technical requirements based on real QA project scenario",
        "Know how to use iOS Simulator from Xcode",
        "Know how to use Android and Genymotion Emulator",
        "Use Chrome to identify locators for mobile browser effectively",
        "Use the correct strategy for page synchronization"
      ],
      "course_content": {},
      "requirements": [
        "The demo in this course is based on in MacOS environment.",
        "Xcode is needed for running the iOS Simulator"
      ],
      "description": "Course Description\nThis course provides you a step-by-step guide on how to setup Appium, Java, Maven, Xcode, Git, JUnit, as well as Xcode, Android SDK and Genymotion Emulator to build mobile automation test framework.\nLearn with real project background\nSetup Appium effectively\nManage code with Git\nOvercome challenges and pass your first iOS and Android mobile browser tests\nOvercome challenges and pass your first iOS and Android native APP/APK tests\nContent and Overview\nI designed this course from an email related Web UI automation project.\nStarting from business requirements requested by QA Manager, I show you how to design the test framework and integrate state-of-the-art tools together to achieve the business requirements. I will walk you through the setup of these tools step by step.\nThen as a QA Engineer, I will first manual test the test scenarios and write down the test steps. I will work with you together to turn these manual test steps into automated steps. Along the way, you will encounter challenges and solve them.\nIn addition to the original course, I added some lectures according to students' feedback, such test Android Native APK test and iOS Native APP test.\nYou will find this course very effective and helpful.\nWhat am I going to get from this course?\nLearn how to design and build up test framework from scratch\nKnow how to use the essential tools used by professional QA Engineer\nOver 25 lectures\nSource Code included",
      "target_audience": [
        "The course is for you if you want to learn in detail how to setup and run your mobile test with Appium effectively",
        "The course is ideal for Junior/Intermediate QA Engineer who has basic knowledge of programming",
        "Anyone with a passion to learn the cutting-edge mobile internet tech"
      ]
    },
    {
      "title": "Selenium WebDriver 4 With Java - Novice To Ninja [2025]",
      "url": "https://www.udemy.com/course/selenium-webdriver-with-java-testng-and-log4j/",
      "bio": "Join the \"Top Rated Selenium 4 (Latest) Course\"-Basics To Advanced Level With POM, Grid, Maven,GitHub,Jenkins,Interviews",
      "objectives": [
        "***** At the end of this course, you will have detailed understanding of Web Automation Frameworks",
        "You will be able to EXPLAIN, DESIGN and IMPLEMENT structured AUTOMATION FRAMEWORKS using Page Object/Factory Model",
        "*** In-depth understanding of Selenium WebDriver CHALLENGES with real time examples",
        "You will be able to implement CONTINUOUS INTEGRATION TESTING using JENKINS",
        "***** We have 10 dedicated INSTRUCTORS to help you with queries within 24 HOURS, resume preparation, Interview questions",
        "You will be able to perform CROSS-BROWSER testing using SELENIUM GRID",
        "You will be able to create GREAT LOOKING REPORTS using the best advanced REPORTING TOOL",
        "You will have complete understanding of TestNG Framework",
        "***** You will have excellent command on Build Management using MAVEN",
        "***** You should be able to lead any Selenium Automation Project from scratch on your own",
        "***** You will have understanding of Behavior Driven Testing Using CUCUMBER, Gherkin language",
        "***** You will be able to understand and write efficient testing code",
        "You will have required skills to automate any web application",
        "You should be able to verify Data Integrity with the GUI of the application",
        "Additional Knowledge of running Performance tests with Selenium WebDriver Automation",
        "With all this knowledge gained, you should be easily able to clear Selenium Automation interviews"
      ],
      "course_content": {
        "Selenium Introduction": [
          "Course Outcome - *** MUST WATCH ***",
          "Instructor Introduction",
          "Why Selenium?",
          "Selenium WebDriver Architecture - How It Works?",
          "How To Reach Me Anytime? *** MUST WATCH ***",
          "How to fix blurry videos"
        ],
        "Setup and installation of required tools and plugins": [
          "Java Overview And Version Selection",
          "Java Install And Setup - Mac",
          "Java Install And Setup - Windows",
          "Install Eclipse - Windows",
          "Eclipse Installation - Mac",
          "Maven Download And Setup - Windows",
          "Maven Download And Setup - Mac",
          "Install Maven Plugin In Eclipse"
        ],
        "Java Concepts - Data Types": [
          "First Program and Some Tips",
          "Variables And Data Types",
          "Default Variable Values",
          "Reference Data Type - Strings Example",
          "String Methods - Part 1",
          "String Methods - Part 2",
          "Strings Quiz *** Test Your Knowledge ***",
          "String Vs StringBuffer Vs StringBuilder *** Interview Question ***",
          "Arrays"
        ],
        "Classes And Methods -> Object Oriented Concepts": [
          "Methods Introduction",
          "Methods - Practical Example",
          "Understanding Return Type",
          "Class Introduction"
        ],
        "Getters And Setters -> Practical Examples": [
          "Getters-Setters And This Keyword - Part 1",
          "Getters-Setters And This Keyword - Part 2",
          "Getters-Setters And This Keyword - Part 3",
          "Constructors"
        ],
        "In-Depth Java For Beginners": [
          "8 Hours Of Java With Interview Questions"
        ],
        "Selenium WebDriver - Setup": [
          "Selenium WebDriver Working Versions",
          "Environment Setup And First Project Creation *** Must Watch ***",
          "First Project Creation Using Maven *** Must Watch ***",
          "How To Add Selenium WebDriver JavaDoc",
          "Selenium 4 New Syntax"
        ],
        "Selenium WebDriver -> Running Tests On Various Browsers": [
          "Running Tests On Firefox",
          "Running Tests On Google Chrome",
          "Running Tests On Edge",
          "Requirements To Run Tests On Safari",
          "Running Tests On Safari",
          "How To Set Drivers In System Path - Mac",
          "How To Set Drivers In System Path - Windows",
          "How To Use Selenium Manager",
          "*** Interview Questions ***"
        ],
        "How To Inspect Elements On Different Browsers": [
          "Introduction",
          "How To Inspect Elements Using Firefox DevTools",
          "How To Inspect Elements Using Chrome DevTools",
          "SelectorsHub Installation",
          "How To Use SelectorsHub",
          "Tricks To Generate XPath",
          "Best Element Inspect Tool",
          "How To Inspect Disappearing Elements"
        ],
        "Multiple Ways To Locate Elements": [
          "Find Elements Using ID And XPATH",
          "Find Elements Using Name",
          "Find Elements Using LinkText And PartialLinkText",
          "Find Elements Using ClassName",
          "Find Elements Using TagName And *** Interview Question ***"
        ]
      },
      "requirements": [
        "***** NO AUTOMATION / CODING EXPERIENCE NEEDED, beginners will be easily able to follow this course",
        "Java concepts are covered in the course, no experience needed",
        "Join our Selenium WebDriver community with (270+ lectures, 21000+ students) learning together with positive feedback, which you will not see in any other Selenium WebDriver course on Udemy",
        "***** CODE FILES / ALL MATERIAL FOR EVERY LECTURE AVAILABLE TO DOWNLOAD",
        "Browsers (Firefox or Chrome)",
        "Windows/MAC computer",
        "Java SDK, Eclipse, Firefox, Chrome, TestNG, Selenium IDE, Selenium WebDriver. All the required installation are ALREADY COVERED in the lectures and documentation has been uploaded to the course"
      ],
      "description": "** Course latest updated on Feb 26, 2025 with Selenium WebDriver latest version 4, new GitHub lectures and updated Jenkins lectures  ** Next Update: More Java and Framework lectures\n* Most popular, Highest Rated, Top Ranked and most loved by students, best Selenium WebDriver course on Udemy *\n* Read reviews from happy students which illustrates our roaring success on Udemy *\n\nThe one and only Selenium WebDriver  course on Udemy with * Highest Rated, Top Courses and Top Responder tags *\n\nIncludes: 290+ lectures (Basics to Framework) with real time websites + life time support (Also best support you have ever received, response within 24 hours.)\n\nNo false promises, straight point to point explanation with simple and easy to understand examples\nJoin the group of more than 60,000 students already taking advantage of this course with positive feedback\nNo other course on Udemy covers topics covered in this course with such great depth of detail\n\n** I noticed other courses copying the content of my page, please be aware of them. The easiest way is to enroll in the course and see which course is best because you have 30-day money back guarantee **\n\nThis course includes a wide range of topics from Selenium WebDriver Basics and  Advanced, Java Concepts, TestNG Framework, Automation Framework Design (Page Objects, Page Factory, Data Driven, Reading Excel Files), Logging with Log4j, Best reporting tool - Advanced Reporting, Cross-Browser Testing with Selenium Grid 2.0, Maven Build Management, Git and GitHub, Continuous Integration with Jenkins, Git integration with Jenkins,  Database Testing, Performance Testing, Behavior Driven Testing Using Cucumber, Sauce Labs Integration, Interview Preparation. All materials including code files.\n\n** One stop place to become an Expert in Web Automation Framework related technologies from scratch **\n\nWe start from Beginners level and go through Advance level. This is a single course for everything you need to know related to Web UI Automation.\n\nWHAT MAKES THIS COURSE BEST ON UDEMY?\n\nWe assume that students have no experience in automation/coding and start every topic from scratch and basics.\nExamples are taken from TESTING REAL TIME HOSTED WEB APPLICATIONS to understand how different components can be automated, that will give you idea of industry level framework and give you confidence\nNO PRIOR CODING OR AUTOMATION EXPERIENCE NEEDED, this course covers all the necessary topics.\n\nGet more than 44 hours of unique content with real example code files provided to refer and learn with examples.\n\nAre you looking to step into automation industry with the latest technologies in market?\nAre you keen to learn GUI automation using selenium webdriver with java and other latest framework technologies?\nInterested in learning how selenium is used in projects?\nWe start with how to code in Java and then move towards learning selenium, TestNG, selenium grid, log4j, maven, jenkins, database testing, performance testing, behavior driven testing using cucumber and gherkin language.\n\nTopics Include:\nSelenium Webdriver 4.x\nJava Concepts in details\nTestNG Framework\nAdvanced Reporting\nLogging infrastructure with Log4j\nPage Object Model\nPage Factory Framework\nData Driven Framework\nExecuting tests on a remote machine using Selenium Grid 4.x\nBuild Management with Maven\nContinuous Integration with Jenkins\nDatabase Testing\nPerformance Testing\nBehavior Driven Testing Using Cucumber and Gherkin language",
      "target_audience": [
        "Quality Assurance professionals and Manual testers looking to start career in test automation",
        "Quality Assurance Automation professionals willing to intensify their current test automation skill sets",
        "Fresh Graduates who want to make a dream career in software engineering",
        "Quality Assurance Team leads and Managers"
      ]
    },
    {
      "title": "Mastering TestComplete with Python 2023",
      "url": "https://www.udemy.com/course/mastering-testcomplete-with-python-2023/",
      "bio": "For learners interested in learning TestComplete using the Python language",
      "objectives": [
        "Mastering the Functional and UX Testing using SmartBear TestComplete using Python",
        "Get a crash course on Python as well to be productive in TestComplete",
        "Learn the TestComplete IDE and all its windows",
        "Use Object Browser and Object Spy productively",
        "Learn the importance of Name Mapping",
        "Learn the checkpoints - Regions, Files, Grids, Databases, Object Properties and Web",
        "Learn Data Driven testing using Python - CVS, Excel and Databases",
        "Learn Low Level Procedures and when to use it",
        "Learn the ins and outs of Web Testing using XPath and CSS Selectors",
        "Learn UserForms and when to create dialogs in TestComplete",
        "Learn the powerful Event interception in TestComplete using Python"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Installing TestComplete"
        ],
        "TestComplete IDE": [
          "Menus and Toolbars",
          "The TestComplete Project Workspace",
          "Recording a test in Python Script",
          "Using the Test Visualizer in TestComplete",
          "The case for Bookmarks in TestComplete Python scripting",
          "Using the Search window in TestComplete",
          "Todo Window - Poor man project management in TestComplete :)",
          "Understanding the Object Browser in TestComplete",
          "Using the Object Spy efficiently in TestComplete"
        ],
        "Introduction to the Python Scripting Language": [
          "Types - Int, Float and strings",
          "Using TestComplete with Python",
          "Variables in Python",
          "Control Flow - if statements",
          "Functions in Python",
          "Scope in Python",
          "Using Lists in Python",
          "Using Dictionaries in Python",
          "Using loops in Python - For loops",
          "Using exceptions in Python - Try...Except blocks",
          "Using classes in Python",
          "Summary"
        ],
        "Name Mapping in TestComplete": [
          "Introduction to Name Mapping and Aliases",
          "Working around multiple instances in Name Mapping",
          "Why choose to use Name Mapping?",
          "Name Mapping Conditional Mode"
        ],
        "Using Store Checkpoints in TestComplete using Python": [
          "Where to get the samples?",
          "Using the Orders.exe sample application",
          "Region Checkpoint - for images",
          "File Checkpoint",
          "Object Property Checkpoint",
          "Table Checkpoint - for Grids",
          "MS SQL Server Database Checkpoint"
        ],
        "Data Driven Testing in TestComplete using Python": [
          "First let's record a hard coded test",
          "Using a comma delimited file - CSV",
          "Using the AppenFolder and PopLogFolder methods on the Log Object",
          "Using Excel spreadsheets to drive tests",
          "Using MS SQL Server Database table to drive tests",
          "Using a While loop and debugging in DDT object"
        ],
        "Web Testing in TestComplete using Python": [
          "The discovery of a web page",
          "Using Web Comparison checkpoint in Python",
          "Using Web Accessibility checkpoint in Python",
          "Using Google Lighthouse through Web Audits in Python",
          "Using the Web Order Sample site to record a Python script",
          "Refactoring functionality and units in TestComplete",
          "Run, Launch and TestedApps differences",
          "Using XPath and Css Selector in Web Testing",
          "Using Name Mapping with Web Testing"
        ],
        "TestComplete Project Management": [
          "Using TestComplete Execution Plans",
          "Passing Parameters to Execution Plans",
          "Stop or Continue when an error occurs?",
          "What is the difference between Test Items and Child Test Items in Execution Plan"
        ],
        "Low Level Procedures in TestComplete": [
          "Using Low Level Procedure"
        ],
        "User Forms in TestComplete": [
          "How to create Dialogs in TestComplete?",
          "How to access Dialog Objects and Properties from Python script?"
        ]
      },
      "requirements": [
        "An understanding of automated software testing concept"
      ],
      "description": "Mastering TestComplete with Python Scripting 2023 with over 60 lessons that will demonstrate the power of TestComplete performing functional testing and UX testing while using the Python language as the driving force behind the scripting of Test Suites.\nThe course will go through the following topics:\nIntroduction to the IDE\nMenus and Toolbars\nProject Workspace\nRecording a Test in Python\nTest Visualizer\nBookmarks Window\nSearch Window\nTodo Window\nUnderstanding the Object Browser and Object Spy\nIntroduction to the Python Language\nTypes\nVariables\nControl Flow\nFunctions\nLists and Dictionaries\nLoops\nExceptions\nClasses\nWorking with Name Mapping\nName Mapping and Aliases\nMultiple instances\nWhy use Name Mapping?\nConditional Mode\nStore Checkpoints\nRegions\nFiles\nProperties\nGrids\nDatabases\nWorking with Data Driven Tests\nCSV\nExcel\nMS SQL Server Tables\nWorking with Low Level Procedures\nWorking with TestComplete Project Management Concepts\nExecution Plans\nParameters\nWorking with Web Testing\nDiscovery of Web Page\nWeb Comparison\nWeb Accessibility\nLighthouse - Web Audits\nRefactoring\nXPath and Css Selectors\nWorking with UserForms\nCreating Dialogs and access their objects and properties in Python\nWorking with Events\nThe power of events in TestComplete\nOnLogError Event\nOnOverlappingWindow Event\nThis course utilizes the latest version of TestComplete at the time of recording - version 15.50.  When significant changes occur in the UX over time, videos will be updated to reflect these changes.",
      "target_audience": [
        "Testers and Quality Assurance Engineers looking to master the SmartBear TestComplete tool using Python"
      ]
    },
    {
      "title": "Selenium, C# and Everything in Between",
      "url": "https://www.udemy.com/course/selenium-csharp-and-everything-in-between/",
      "bio": "Learn how to create a powerful cross site, cross browser and cross product dynamic automation tests using C#",
      "objectives": [
        "Implement Selenium Web Driver with C#.NET",
        "Implement REST API Automation Testing",
        "Interact and manipulate all types of Web UI Elements",
        "Create logic layers on-top of Selenium (wrapper) to add more stability and functionality",
        "Learn how to solve and bypass UI and timing problems like, sync page load, a-sync page load",
        "Implement \"Real World\" testing solution End2End",
        "Use Data Driven approach to generalize your tests",
        "Learn how to distribute your Selenium Wrapper as a NuGet package",
        "Create powerful \"Cross Browsers\" & \"Cross Sites\" testing (single test who can run on multiple site types on any supported browser)",
        "Create cross product testing - a single test for both front and back ends",
        "Learn how to deploy Selenium Grid",
        "Get the basics and secrets of how to bring Selenium implementation to the next level!!!",
        "The techniques learned in this course can be used with any object oriented language"
      ],
      "course_content": {
        "1.1 - Introduction": [
          "1.1 - Introduction"
        ],
        "(A - very easy) preparations - csharp": [
          "2.1 - preperation - csharp"
        ],
        "(A - very easy) create your project layout - csharp": [
          "3.1 - create your project layout - csharp",
          "3.3 - add dependencies - csharp"
        ],
        "(A - very easy) test class and test method - csharp": [
          "4.1 - test class and test method creation - csharp",
          "4.3. implement internet-explorer, chrome & firefox drivers - csharp",
          "4.7 - web element interface, basic implementation - csharp",
          "4.9 - element interaction - combo-box - csharp"
        ],
        "(AA - medium) overviews": [
          "4.6 - xpath overview"
        ],
        "(A - very easy) preparations - downloads & configurations": [
          "5.13 - web-driver factory basic implementation - configure internet explorer"
        ],
        "(AA - medium) automation extensions - csharp": [
          "5.0 - web-driver factory implementation - part 1 - csharp",
          "5.2 - web-driver factory implementation - part 2 - csharp",
          "5.4 - web-driver factory implementation - part 3 - csharp",
          "5.6 - web-driver factory implementation - part 4 - csharp",
          "5.9 - web-driver factory basic usage implementation - csharp",
          "5.11 - web-driver factory basic usage implementation - csharp",
          "5.14 - GoToUrl extension method - csharp",
          "5.16 - GetElement extension method - csharp",
          "5.18 - AsSelect extension method - csharp",
          "5.20 - FindElements extension method - csharp",
          "5.22 - GetVisibleElement extension method - csharp",
          "5.24 - GetVisibleElements extension method - csharp",
          "5.26 - GetEnabledElement extension method - csharp",
          "5.28 - VerticalWindowScroll extension method - csharp",
          "5.30 - Actions extension method - csharp",
          "5.32 - ForceClick extension method - csharp",
          "5.34 - SendKeys extension method - csharp",
          "5.36 - ForceClear extension method - csharp",
          "5.38 - SubmitForm extension method - csharp"
        ],
        "(A - very easy) distribute your package - csharp": [
          "6.1 - distribute your package - csharp",
          "6.2 - distribute your package - csharp",
          "6.3 - distribute your package - csharp",
          "6.4 - distribute your package - csharp",
          "6.5 - distribute your package - csharp"
        ],
        "(A - very easy) selenium grid": [
          "8.1 - selenium grid - hub",
          "8.2 - selenium grid - node - part 1",
          "8.3 - selenium grid - node - part 2",
          "8.4 - selenium grid - node - part 3"
        ],
        "(A - very easy) selenium grid - remote driver - csharp": [
          "8.5 - selenium grid - remote driver - csharp"
        ]
      },
      "requirements": [
        "You should be familiar with the basic concepts of object oriented development",
        "You should be familiar with basic C# programming",
        "Download and install Latest Visual Studio Community or above",
        "For sections ranked AAA and above - more advance development skills are required"
      ],
      "description": "This course is for all of you who likes to become experts of Automation Testing (both beginners and advanced). This course is built as a complete end to end project with real world solution structure and development patterns, with special attention to real world problems and how to fix/solve/bypass them. Learn how to create logic layers and use development patterns to bring automation to the next level.\n\nThis course is different because on top of teaching how to use and implement the selenium web driver, it also teaches how to use it in the real world by building a complete testing solution with dynamic testing, schedule runs, reporting and branching.\n\nHere you will find all the tricks and secrets which you will not find by searching on the internet. Thousands of experience hours were fined into one course.\n\n\nMastering this course will give you huge advantage when looking for Web Automation Developer job. You learn how to deal with the most complicated web automation problems out there.\n\n\nThis course is not about Selenium rather it is about how to use selenium with an enterprise level solution and how to create a powerful framework and API's which can be consumed by other developers. You will find here lectures suitable for all development levels, starting with how to create utilities and tool box for beginners ending with state of the art architectures for advanced developers who wish to move their skills to higher level\n\nNo more \"How to do...\" it is time for \"This is how it's done!\".",
      "target_audience": [
        "Beginner Automation Developers who wish to learn how to start with automation development using WebDriver & Selenium",
        "Beginner Automation Developers who wish to create their own utilities and automation tool box for reuse over multiple projects",
        "Advanced Automation Developers who wish to learn how to create automation framework using fluent API implementations",
        "Expert Automation Developers who wish to become automation architects and design enterprise level solution"
      ]
    },
    {
      "title": "Java For Testers : The Ultimate Java Tutorial For Tester",
      "url": "https://www.udemy.com/course/java-for-testers/",
      "bio": "Learn Java at your own Pace. Java Tutorial for your Automation Testing Selenium Webdriver Appium & Rest Assured Testing",
      "objectives": [
        "You will be able to EXPLAIN, DESIGN and IMPLEMENT efficient java Programs",
        "You will be confident to clear test automation interviews",
        "Understand the concepts of Object Oriented Programming Language",
        "Complete understanding of java from QA point of view",
        "Expert-level knowledge of Java code (+ advanced tips and tricks used by the pros)",
        "Suitable for beginner programmers and ideal for users who learn faster when shown."
      ],
      "course_content": {
        "Introduction": [
          "Itinerary of Course ***MUST WATCH***"
        ],
        "Setup and installation of required tools": [
          "SetUp Java & Eclipse on Windows Machine",
          "SetUp Java on Mac Machine",
          "SetUp Java on Machine",
          "My Motivation Factor",
          "Course Chat with Students and Tech Community"
        ],
        "Data Types and Methods in Java": [
          "What is Java",
          "First Program In Java",
          "DataTypes in Java",
          "Working of Main() Method",
          "Variable in Java"
        ],
        "Conditional Handling and Loops": [
          "Access Modifiers in Java",
          "Operators in Java"
        ],
        "Class : Object": [
          "Class & Object in Java"
        ],
        "Oops Concepts and Programming": [
          "Inheritance in Java",
          "Encapsulation in Java",
          "Abstraction in Java",
          "Method Overloading in Java",
          "Method Overriding in Java",
          "Polymorphism in Java"
        ],
        "Advance Java : Java Collection APIs": [
          "What is Collection Framework",
          "Collection GIT Code Location",
          "Iterator in Collection - Enumeration",
          "ListIterator in Collection",
          "List Interface in Java",
          "ArrayList in Collection",
          "LinkedList in Collection",
          "Set in Java",
          "HashSet in Java",
          "LinkedList in Collection",
          "TreeSet in Java",
          "Map in Java",
          "HashMap in Java",
          "LinkedHashMap in Java"
        ],
        "Conclusion": [
          "Does JVM create object of Main class?",
          "Is main method compulsory in Java?"
        ],
        "Java Collection Interview FAQs": [
          "Array to Array-list Conversion",
          "Conversion: ArrayList To Set"
        ],
        "Additional Info": [
          "Bonus"
        ]
      },
      "requirements": [
        "**Nothing else! It’s just you, your computer and your hunger to get started today**",
        "***** NO AUTOMATION / CODING EXPERIENCE NEEDED, beginners will be easily able to follow this course",
        "Java concepts are covered in the course, no experience needed",
        "Windows/MAC computer",
        "All the required installation are covered in the lectures and documentation has been uploaded to the course"
      ],
      "description": "This is only Java related course and it's great because it covers just the right amount of Java which is needed for automation, but this course does not cover Selenium WebDriver and REST API Automation or any other type of automation tool.\nThis is a comprehensive yet simple course on java programming language and it concentrates on Java programming concepts.\n*************************** No Prior Coding Experience Needed ***************************\nThis course assumes that you have no programming background. If you have some experience then, it's just a bonus point. You have never code, have some experience or have a lot of experience any other programming language, this course is one stop place for you.\nJava is one of the most and useful programming languages to learn You can build back-end of web applications and build robust test automation framework. Specially for Selenium WebDriver GUI automation, Java is most popular choice and has the largest community.\nWhy learn Java compared to other programming languages?\nThat’s easy.\nJava is the most popular programming language in use (TIOBE index) since it’s the only language that works across all computer platforms (and android mobile) without needing to be recompiled (edited) for each one.\nYou code once, and the JVM (Java Virtual Machine) does all the work in making sure your awesome new programme runs smoothly on any platform, whether Windows, Mac, Linux or Android mobile.\nYou will get the best in class support from the instructor for any question you have related to the course.\nEach lecture consist of a video screencast and code files\nThere are quizzes, homework to test your knowledge\nHigh focus on practice and asking questions\nYou will also learn coding best practices\nMarket is never short of jobs in Java programming language, there are ample of jobs in both Java development and Automation Testing using Java.\nThis course is backed by udemy's 30-day money back guarantee. If you are not satisfied for any reason, you will get the money back. In addition to that you will keep all the code files of the course as a thank you for trying out the course !!!\nWhat are you waiting for? Enroll today and learn the powerful Java language !!!",
      "target_audience": [
        "Beginners with zero programming background",
        "Quality Assurance professionals and Manual testers looking to start career on test automation",
        "Testers who want to automate tools",
        "Freshers, looking to understand java concepts",
        "Manual testers looking opportunity in automation",
        "Experienced programmers with other programming language"
      ]
    },
    {
      "title": "REST API Automation with RestSharp & HTTP Client",
      "url": "https://www.udemy.com/course/rest-api-automation-with-restsharp-http-client/",
      "bio": "End to End API Automation with RestSharp Framework & HTTP Client Library",
      "objectives": [
        "How to design Automation Framework for API automation",
        "HTTP Client library and its usage for API Testing",
        "Different type of Authentication Mechanism used with API",
        "RestSharp framework and its usage for API Testing",
        "Synchronous and Asynchronous execution Pattern",
        "Continuous Integration and Continuous Deployment"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Material",
          "Prerequisite"
        ],
        "Environment Setup": [
          "Tools Required",
          "Setting up the jdk 1.8",
          "Setting up the Tomcat Server",
          "Setting up the Visual Studio - Part One",
          "Setting up the Visual Studio - Part Two",
          "Setting up the Postman Client",
          "Application Deployment in Tomcat"
        ],
        "Basic of RestFul Services": [
          "What is a Web Service",
          "Request and Response",
          "What is REST",
          "HTTP Methods",
          "Request and Response Format"
        ],
        "Unit Testing Framework MSTest": [
          "Creating the Project In Visual Studio",
          "MSTest Framework Introduction",
          "MSTest Framework Setup",
          "MSTest - Part One",
          "MSTest - Part Two"
        ],
        "HTTP Client for API Testing": [
          "Setting up the HTTP Client",
          "Understanding the HTTP Client Framework",
          "Creating the HTTP Client",
          "Creating the GET Request",
          "Capturing the Response",
          "Response Format",
          "Capturing the Status Code from Response",
          "Capturing the Response Content",
          "XML and JSON Data Format",
          "Accepting the Data in a JSON and XML format",
          "GET Request using SendAsync",
          "Working with Using Statement",
          "Creating the custom class to capture the response",
          "Serialization and Deserialization",
          "Installing the Deserialization Packages",
          "Creating the Model for JSON Schema",
          "Deserialization of JSON Response",
          "Steps for XML Deserialization",
          "Model for XML Deserialization",
          "Deserialization of XML Data"
        ],
        "Assertion and Validation": [
          "Assertion - Introduction",
          "Adding the Assertion in Test",
          "Conditional Based Assertion"
        ],
        "POST Request": [
          "POST Request - Introduction",
          "Creating the POST request",
          "Validation of Response",
          "POST Request with XML Data",
          "Validation of POST request with XML Data",
          "POST request using SendAsync API",
          "Code Optimization - Part One",
          "Code Optimization - Part Two",
          "Framework Method for POST",
          "Using the Framework Method in TestClass",
          "Framework Method for Response Data",
          "Using the Framework Method for Response Data in TestClass"
        ],
        "PUT Request": [
          "PUT Request using PostMan",
          "Creating PUT Request with XML data",
          "PUT Request with JSON data",
          "Framework method for PUT request",
          "Using the Framework method for PUT Request"
        ],
        "DELETE Request": [
          "Delete Request using PostMan",
          "Delete Request",
          "Framework Method for Delete Request"
        ],
        "Authentication": [
          "Authentication - Basic Auth",
          "Secure GET End Point",
          "Encoding and Decoding of Basic Auth",
          "Secure POST End Point",
          "Secure PUT End Point",
          "Secure DELETE End Point"
        ]
      },
      "requirements": [
        "Basic understanding of C# language and OOPS concept such as Class, Object, Interface etc.",
        "Basic understanding of Visual Studio IDE",
        "Basic understanding of Post Man Client",
        "Basic understanding of Windows OS",
        "Basic understanding of Tomcat will be an additional advantage"
      ],
      "description": "**The course has been updated with the latest version of the RestSharp framework**\n\n\nCurrently, the IT industry is moving towards Micro Service based architecture. And it is very important to understand what are RESTful API and Web services. This course is all about that.\n\n\nThe Course is divided into 3 sections\nIn the 1st section, I will have a detailed discussion about the RESTful API and Webservices\nIn the 2nd section, I will discuss the HTTP Client library and how to use them for testing RESTful API\nIn the 3rd section, I will discuss the RestSharp framework and how to use it for API testing\nI will also discuss synchronous and asynchronous execution. And how to run the test in parallel\nIn this course, I will also discuss some real-time APIs of the application. Such a Drop Box and JIRA\nWhile going through this course, I will also develop a framework for testing. The source code of the framework will be provided for download\n\n\nUnit Testing Framework MSTest\nMSTest Framework\n\n\nHTTP Client for API Testing\nGET Request\nAssertion and Validation\nPOST Request\nPUT Request\nDELETE Request\nAuthentication\n\n\nSynchronous and Asynchronous Execution\nSynchronous and Asynchronous Execution - Introduction\nSynchronous Execution's of Test\nAsynchronous Execution of Test\nAsynchronous Execution of Test - Failed Scenario\nRedefining HelperClass with Async & Await Implementation\nAsynchronous Execution with Task Factory\nFetch the returned value from asynchronous task\nParallel execution with RunSettings File\n\n\nRestSharp Framework\nGET Request\nFramework Design & Implementation\nPOST Request\nPUT Request\nDelete Request\nAuthentication\nToken Based Authentication - DropBox API\nSession Based Authentication - JIRA API",
      "target_audience": [
        "This course is designed for both Developers and testers",
        "Manual/Automation test engineers who want to learn API automation",
        "Best for developers and testers who are planning to build automation framework",
        "Test Engineer who wants to implement the RestSharp framework for API automation"
      ]
    },
    {
      "title": "Become a manual tester: Guide for complete beginners",
      "url": "https://www.udemy.com/course/become-a-manual-tester-guide-for-complete-beginners/",
      "bio": "Learn manual testing: Start your career in IT without programming experience",
      "objectives": [
        "Define roles and responsabilities of a software tester",
        "Understand Quality Assurance basic concepts",
        "Practice with the theoretical notions",
        "Get ready for interviews"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Non technical skills": [
          "Non technical skills"
        ],
        "Software Testing Lifecycle Model": [
          "Testing Lifecycle Model",
          "STLM Quiz"
        ],
        "Test Case Development": [
          "Test Scenario",
          "Test Case",
          "Test Script",
          "Practice with test cases",
          "Test Case Development Quiz",
          "Test your favorite app"
        ],
        "Types of testing": [
          "Testing types",
          "Practice: How would you test a marker?",
          "How would you test ...?"
        ],
        "Bug Reporting": [
          "Bug reporting",
          "Tips on writing a bug report",
          "Severity vs Priority",
          "Reporting tools"
        ],
        "Interview preparation": [
          "Interview preparation"
        ],
        "When you should move on to Automation": [
          "Automation testing"
        ],
        "Final thoughts": [
          "Final"
        ]
      },
      "requirements": [
        "No programming experience required. You will learn everything you need to know",
        "Eagerness to learn testing concepts through practical exercises"
      ],
      "description": "If you're not yet committed to becoming a manual tester, i want you to know that manual testing is actually a great entryway into the field of IT as it has no prerequisites, it's easy to learn and it's a career path with great growth potential.\nThe concepts we will talk about are:\nsoftware testing life cycle model,\ntest case development,\nbug reporting\nand various types of testing.\nWe won't rely on just theory as this course will contain many practical real life examples and exercises meant to help you really understand the tester's way of thinking, which in turn, will help you pass interviews and do your job well, once you get that job.\nSoftware is everywhere these days and it's a thriving industry. Whether you're taking this course to learn something new and change your profession, or you already started your journey as a software tester, this course will teach you a valuable set of skills.\nI want this to be the first in a series of courses designed to teach you how to get into and thrive in this industry. My personal aim with this course is to provide you with everything you need to land a paying job as a manual tester and to teach you how to grow professionally from there on and I hope to hear from many of you with such news.",
      "target_audience": [
        "Anyone interested in starting a career in IT without any previous experience",
        "Software testers at the beginning at their testing journey"
      ]
    },
    {
      "title": "Webservices API Testing with Rest Assured API & POSTMAN 2024",
      "url": "https://www.udemy.com/course/webservices-testing-restassured-api-tutorial/",
      "bio": "Webservices API Automation Testing using RestAssured API and POSTMAN on Live Projects with CUCUMBER BDD",
      "objectives": [
        "*****In-Depth knowledge of POSTMAN Tool and REST ASSURED API*****",
        "*****Rest Assured API Automation with detailed framework designing on a Live project*****",
        "*****Everything about Webservices API Manual and Automation Testing*****",
        "*****Various tools integration like Maven, Jenkins, ExtentReports, Log4j, TestNG and many more*****",
        "*****Many Live APIs used for Practice purpose*****"
      ],
      "course_content": {
        "Introduction to Webservices (REST & SOAP APIs)": [
          "Introduction to the Course",
          "FIXING THE BLURRED VIDEO SCREEN",
          "Detailed topics covered in the course",
          "What is a Webservice?",
          "SOAP vs REST in Detail",
          "CRUD (Create, Read, Update, Delete) Operations",
          "Understanding available HTTP Methods for CRUD Operations",
          "Why API Testing is Important?",
          "Six Principles / Constraints of a RestFul Webservices",
          "Webservices Introduction PDF file",
          "API Interview questions"
        ],
        "POSTMAN TOOL in Depth": [
          "Installing POSTMAN and Walkthrough with the tool",
          "Creating the First Collection for API Request",
          "Sending the First API Request",
          "Understanding the request URI",
          "Request Data tabs",
          "Download the Practice API and Build it live on your machine",
          "Sending GET and POST Request",
          "Creating Environment and Variables",
          "Collection Runner",
          "PUT and PATCH Request",
          "DELETE and OPTIONS Request",
          "HEAD Request",
          "Adding Header Presets",
          "Download the POSTMAN Collections from previous and upcoming lectures"
        ],
        "Writing POSTMAN Testscripts": [
          "Creating the very first test case",
          "Adding Assertions and validating response fields",
          "Sharing the collections",
          "Parameterization - Creating a DataDriven Testing and Reading CSV Files"
        ],
        "STRIPE API": [
          "Understanding the API Documentation",
          "Creating a Customer using Basic Authentication",
          "List All Users",
          "Passing Authentication token in Headers",
          "Understanding the JSON Architecture",
          "ASSIGNMENT 1"
        ],
        "RestAssured API Introduction and Pre-requisite": [
          "RestAssured API Introduction and Pre-requisite",
          "Download and Configure Java (JDK) on Windows",
          "Download and Configure Eclipse IDE on Windows",
          "Download and Configure Java (JDK) on MAC OSX",
          "Download and Configure Eclipse IDE on MAC"
        ],
        "CORE JAVA in Depth for Manual Testers and Beginners (OPTIONAL)": [
          "Introduction to Core Java",
          "Download ALL Java PDF Lectures",
          "Classes and Objects",
          "Basic Java programming and features - Part 1",
          "Basic Java programming and features - Part 2",
          "Java Methods - Part 1",
          "Java Methods - Part 2",
          "Java Methods - Part 3",
          "Java Methods Part 4",
          "Java Methods Part 5 - PreDefined Methods and Math.Random()",
          "Java Methods Part 6 - Static and Non Static Methods",
          "IF and Else Statements",
          "Loops - While Loop",
          "Loops - Do While Loop",
          "Loops - For Loop",
          "Loops - Nested Loops",
          "Loops - Break and Continue statements",
          "Exception Handling - Part 1",
          "Exception Handling - Part 2",
          "Packages and Access Modifiers",
          "OOPS - Encapsulation",
          "OOPS - Inheritance",
          "OOPS - Polymorphism - OverLoading",
          "OOPS - Polymorphism - Overriding",
          "OOPS - Polymorphism - Overriding benefits and drawbacks",
          "OOPS - Abstract classes",
          "OOPS - Interfaces",
          "Reading Properties files",
          "Java Streams - Writing in TXT and CSV files",
          "Java Stream - Writing HTML Files and Reading files",
          "Java Stream - Apache POI Creating and Writing Excel Files",
          "Java Stream - Apache POI Reading Excel Files, Extended Loops",
          "POI Latest ExcelReader file and Dependencies",
          "Reading Notepad file",
          "Collections - Wrapper Classes, Autoboxing and Unboxing",
          "Collections - ArrayList",
          "Collections - HashSet",
          "Collections - HashMap",
          "Reflection API",
          "Difference between == & equal to operator and Singleton design pattern",
          "Apache Log4J API - Console & File Appenders",
          "Apache Log4J API - SMTPAppender",
          "Apache Log4J API HTMLAppender",
          "Download the Log4j code and log4j.xml file",
          "Log4J API - NEW UPDATE",
          "Updated Log4j and ExcelReader code"
        ],
        "Getting started with Rest Assured API": [
          "Library and Static Imports",
          "Installing Maven on Windows",
          "Installing Maven on MAC OSX",
          "Adding Rest Assured Dependencies and Getting started with the first API Request",
          "Sending the GET Request with Basic AUTH and Parameters",
          "Sending the GET Request with Headers for Single user",
          "Sending the POST Request through Form Parameters",
          "Sending the POST Request through JSON String Data",
          "Sending the POST Request through external JSON File",
          "Creating complex JSON on Runtime using HashMap",
          "Creating complex JSON on Runtime using JSON API",
          "Creating complex JSON on Runtime using POJO Classes",
          "Code from Above Lectures",
          "JSONPATH - Validating JSON Response through JSONPath"
        ],
        "TESTNG FRAMEWORK (Skip if you are already familiar with TESTNG Framework)": [
          "TestNG - Introduction and Configuration",
          "TestNG - Creating the first test case",
          "Adding Assertions and Reporting Failures",
          "SoftAssertions and Reporting Multiple failures",
          "Creating Test Dependencies",
          "Creating Test Suite",
          "Managing Multiple Test Suites",
          "Test Groups",
          "Listeners",
          "Forcefully Skipping a Test Case",
          "Adding Before and After Suite annotations",
          "Generating and Customising TestNG Reports",
          "Parameterization",
          "Parameterization with Excel Reading",
          "Parameterization Excel Reading with Hashtable",
          "Handling Multiple Data Providers",
          "Reading Parameters from TestNG.xml file",
          "Running Parallel Test using TestNG.xml file",
          "Running Parallel Test using DataProvider",
          "Download code from Above Lectures"
        ],
        "EXTENT REPORTS Version 4": [
          "Configuring Latest Extent Reports Step by Step",
          "Generating extent reports through Customized Listeners",
          "Code"
        ],
        "RESTASSURED FRAMEWORK - Designing Architecture, Test Cases, Extent Reporting etc": [
          "Getting started with Basic framework setup",
          "Optimizing the code and Implementing Properties file",
          "Adding Test Data and Parameterizing the test through DataProvider",
          "Optimizing DataProvider and creating common dataprovider for all test cases",
          "Integrating ExcelReading and Creating Test Data",
          "Complex Parameterization with HashTable",
          "Optimizing DataProvider and Test Data with HashTable",
          "Separating Business specifications from the Test case",
          "Integrating Extent Reports",
          "Adding more APIs and running Parallel test for 100+ records",
          "Adding validation to the Test and Creating common utilities",
          "Customizing Extent Reports for Failure and Info logs",
          "Building the Project through Maven",
          "Configuring Jenkins",
          "Adding the Build to Jenkins UI",
          "Pushing the project to GitHUB",
          "Continuous Integration through Jenkins and GitHUB",
          "JavaMail API for mailing Automated test results",
          "Oauth2.0 using PayPal API - POSTMAN",
          "Oauth2.0 using PayPal API - Rest Assured",
          "Creating POJO classes for PayPal request",
          "Converting JSON to POJO Online editor",
          "Adding the PayPal API to the framework",
          "Framework code from Above lectures",
          "DOWNLOAD ALL MODULES CODE"
        ]
      },
      "requirements": [
        "Should have basic understanding of Selenium",
        "Should have basic knowledge on Core Java",
        "Any Manual Tester can join the course"
      ],
      "description": "Webservices API Automation Testing using Rest Assured API and POSTMAN - Biggest course to cover all levels of API Testing using both Manual and Automation approaches on Live projects.\nAPI Testing is very much in demand these days and people who are already familiar with the UI testing part should approach for API Testing as these days 90% of the Applications Web Based, Mobile Based, Database communicates with each other with APIs only i.e. REST and SOAP. REST being the light weight API 95% of the Industry works on RESTFul webservices. Big clients like Amazon, Facebook, LinkedIn, Google, Expedia etc their different apps communicates through RESTFul webservices itself.\nIf you are already familiar with Selenium then the combination of Selenium + API Testing is a boom in the Industry. Every next Automation opening in Industry around the globe has a requirement of good knowledge on Selenium + API Testing and not just the Manual part, companies they look for indepth understanding of API Automation which can be used in the same Automation framework designed to handle the UI, Database and the Mobile part. Using Rest Assured API we will look at in-depth framework designing on Webservices automation testing part which will include the most popular Cucumber BDD approach as well\nDetailed topics covered:\nAPI Testing basics\nDifference in SOAP and REST and which one to use\nTools available for testing Webservices\nPOSTMAN in Depth\nREST API Method - GET, POST, PUT, DELETE etc\nRestAssured API and building frameworks\nHandling OAUTH Authentication\nJSON & XML\nIntroduction to Jackson Library\nTestNG\nJenkins\nMaven\nReporting Extent Report\nParallel Execution\nGit/GitHub\nData Driven\nCucumber BDD\nMany Live APIs used",
      "target_audience": [
        "Manual Testers",
        "Automation Testers",
        "Team Leads",
        "Developers",
        "DevOps"
      ]
    },
    {
      "title": "The Complete Selenium WebDriver with Java Course",
      "url": "https://www.udemy.com/course/master-selenium-webdriver-with-java/",
      "bio": "Learn Selenium WebDriver with Java, TestNG Framework, Page Object Model, Page Factory Design. Learn Coding From Scratch.",
      "objectives": [
        "Core Java Programming and Selenium WebDriver Automation",
        "New to coding? No worries. This course covers coding from scratch",
        "Ideal for professionals transitioning to DevOps wanting to get a coding booster",
        "Perfect course for manual testers aspiring to switch into automation world",
        "Creating Automation Framework from Scratch using Page Object Model and Page Factory",
        "Selenium WebDriver Programing from Basic to Advance",
        "Object Oriented Programing (OOPS)",
        "Data Structures in Java",
        "TestNG Framework",
        "Regular Expressions in Java",
        "Element Locating Strategies",
        "Exception Handling in Java",
        "Working with File System in Java",
        "Advanced Java Programming",
        "Selenium WebDriver Basics",
        "Date and Time Operations (Rev. in Java 8)",
        "Locating Elements using XPath",
        "Locating Elements using CSS Selectors",
        "Working with Element Collections",
        "Web Page Data Extraction",
        "Automating DatePickers, WebTables",
        "Page Object Model",
        "Automating Browser Popups",
        "Automating iFrames",
        "Automating JavaScript Alerts",
        "Automating Mouse Actions",
        "Test Synchronization",
        "Instructor Guidance and Query Resolution Support",
        "No PPTs. Programming Oriented Sessions."
      ],
      "course_content": {},
      "requirements": [
        "No prior coding experience required to take this course",
        "Course covers in depth core Java concepts with plenty of hands on coding exercises",
        "Course cover Selenium WebDriver from basic to advanced levels",
        "Basic installations and setup required for Selenium WebDriver hands-on exercises is covered in depth",
        "Course covers basic and advance element locating strategies",
        "Covers in-depth tutorial on XPath and CSS Selectors",
        "Course teaches how to create your own Test Automation Framework From Scratch",
        "Automation of Web-Tables, Date-Pickers and other complex UI elements is taught in detail"
      ],
      "description": "New Update: Selenium v.4 New Features Added. See 'Section 28' for more details.\nThis course covers Selenium WebDriver and Java topics in detail from basic to advanced levels. So, if you don't have prior knowledge of Java, then you can begin with Java Modules. Start going through ‘Selenium WebDriver’ videos after you develop some fluency in Java. Remember, you don’t need to go through all sessions of Java Course before starting with Selenium WebDriver (because it is an in-depth course on Java and will take a while to finish). First 6 Sections of Java should be sufficient to get you ready for learning Selenium WebDriver.\nI believe in example-oriented teaching. So, you won’t find any PPTs during the sessions. But, you will find dozens of real time scenarios used to elaborate Java and Selenium WebDriver concepts.\nFeel free to post your questions/feedback in the block provided under each session-video. I will make sure all of your queries are addressed. ‘Course Outline’ below will give you an idea about the depth and the overall coverage of this course. If you want to learn any other Selenium WebDriver concept - which is not already covered in this course - then feel free to let me know via Udemy messenger.\nCourse Outline:\nJava Basics\nJDK 10 and Eclipse Installation\nHello World Java Program\nPrimitive Data Types in Java\n'var' keyword in Java 10\nArithmetic Operators in Java\nLogical and Bitwise Operators in Java\nRelational Operators in Java\nIf - Condition in Java\nNested If - Condition in Java\nFor Loop in Java\nHands-On Exercises on 'For Loop'\nNested For Loop in Java\nHands-On Exercises on 'Nested For Loop'\n'While' & 'Do While' Loop in Java\nLoop 'Break' & 'Continue' Statements in Java\nString Basics in Java\nString Comparison Operations in Java\nString Search Operations in Java\nString (Cut) Slice Operations in Java\nString Replace Operations in Java\nString Conversion Operations in Java\nObject Oriented Programing (OOPS) in Java\nConcept of Classes and Objects in Java\nHands on exercises on Class and Object\nMethods in Java\nMethod Overloading in Java\nAccess Specifiers (Access Modifiers) in Java\nConstructor in Java\nData Encapsulation in Java\nStatic Keyword in Java\nConcept of Main Method in Java\nClass and Object Advanced Exercises\nClass Inheritance in Java\nMethod Overriding in Java\nPolymorphism in Java\nSuper Keyword in Java\nSuper Class Constructor in Java\nProtected Access in Java\nAbstraction in Java\nInterfaces in Java (Java Interface)\nFinal Keyword in Java\nData Structures in Java\nArrays in Java\nArray Object in Java\nEnhanced (Modified) For Loop for Array Iteration in Java\nHands-on Exercises on Array in Java\n2-Dimensional Arrays in Java\nHands-on Exercise on 2D Arrays in Java\nArray of Object in Java\nArray List in Java (ArrayList)\nStructure of ArrayList in Java\nLinked List in Java (LinkedList)\nArrayList vs LinkedList in Java\nList Iterator in Java\nHash Set in Java\nLinked Hash Set in Java\nTree Set in Java\nIterating on Set in Java\nHash Map in Java\nTree Map in Java\nIterating Over Maps in Java\nRegular Expressions in Java\nIntroduction to RegEx in Java\nQuantifiers in Regular Expressions\nCharacter Classes in Regular Expressions\nBracket Expressions\nOR Operator in RegEX\nDOT Operator in RegEX\nGreedy and Lazy Matching\nHands-on Exercises on Regular Expressions\nRegularizing Number Ranges\nException Handling in Java\nWhat is an Exception in Java?\nError vs Exception in Java\nChecked and Unchecked Exceptions in Java\nThrows Declaration in Java\nTry and Catch Block (Exception Handling) in Java\n'Finally' Block in Java\nDate and Time Operations (Revised in Java 8)\nLocal Date and Time Operations in Java\nCustom Date and Time Operations in Java\nFuture and Past Date Operations in Java\nFuture and Past Time Operations in Java\nDate Difference Calculation in Java\nTime Difference Calculation in Java\nDateTime Formatter in Java\nSpecial Classes in Java\nMath Class in Java\nStringBuilder Class in Java\nStringBuilder Methods in Java\nScanner Class in Java\nRandom Class (for creating random numbers) in Java\nUUID Class in Java (for creating universally unique string IDs)\nWorking with File System in Java\nHow to Read a Text File in Java?\nApache Commons IO\nHow to Edit a Text File in Java?\nHands on Exercises with Text Files in Java\nCopy and Move (Rename) a Text File in Java\nApache POI Setup\nReading Excel Data in Java\nRead Excel Data into a 2 D Array in Java\nWrite Data in Excel Sheet in Java\nInterview Questions\nSelenium WebDriver Basics\nSelenium WebDriver Architecture\nSelenium WebDriver Installation and Setup using Apache Maven\nChrome Driver Installation and Setup\nFirefox (Gecko) Driver Installation and Setup\nAutomating Browser Navigation (Back, Forward, Refresh, NavigateTo)\nGet Page Basic Details (URL, Title etc)\nBasics of Element Locating Strategy in Selenium WebDriver\nHTML Basics\nInspecting Web Elements\nFind Elements By ID and Link Text in Selenium WebDriver\nFind Elements By Name and Class\nLocating Elements using XPath in Selenium WebDriver\nInstalling ChroPath for Chrome\nCreating XPath Using Attributes\nXPath for Dynamic Elements\nXPath Using Parent - Child Relationship\nXPath Using Ancestor - Descendant Relationship\nXPath Using Preceding - Following Relationship\nAbsolute XPath Vs Relative XPath\nLocating Elements using CSS Selectors in Selenium WebDriver\nWhat is CSS and CSS Selectors?\nCreate CSS Selectors Using Attributes\nCSS Selectors for Dynamic Elements\nCreate CSS Selectors Using Multiple Attributes\nAdvance CSS Selectors\nCreating CSS Selectors Using Child-Node Numbering\nWorking with Element Collections in Selenium WebDriver\nHow to Retrieve a Collection of Web Elements in Selenium WebDriver?\nHandling Web Elements Collection in Selenium WebDriver\nVisible vs Hidden Web Elements in Selenium WebDriver\nWeb Elements Within Another Web Element in Selenium WebDriver\nWeb Page Data Extraction for Test Validation in Selenium WebDriver\nExtracting Basic Page Details in Selenium WebDriver\nExtracting CSS Details in Selenium WebDriver\nHow to Verify Element Visible and Enabled?\nHow to Verify Element Exists in Selenium WebDriver?\nHow to Verify Element Selected in Selenium WebDriver?\nAutomating Special WebElements (SelectBoxes, DatePickers, WebTables)\nWorking with Select-Boxes in Selenium WebDriver\nWorking with MultiSelect-Boxes in Selenium WebDriver\nAutomating Date-Picker (Calendar) in Selenium WebDriver\nWorking with WebTables in Selenium WebDriver\nHandling the Objects Within WebTable Cells in Selenium WebDriver\nAutomating Browser Popups using Selenium WebDriver\nHandling Browser Popup Window in Selenium WebDriver\nWorking with Multiple Browser Windows in Selenium WebDriver\nClose All Browser Popup Windows in Selenium WebDriver\nBrowser Close vs Quit in Selenium WebDriver\nAutomating iFrames using Selenium WebDriver\nAutomating iFrames using Selenium WebDriver\nAutomating Nested iFrames using Selenium WebDriver\nAutomating JavaScript Alerts using Selenium WebDriver\nHandling JavaScript Basic Alert Box using Selenium WebDriver\nHandling JavaScript Confirmation Box using Selenium WebDriver\nHandling JavaScript Prompt Box using Selenium WebDriver\nAutomating Mouse Actions (Drag & Drop, Mouse Hover, Click & Hold etc)\nAutomating Mouse Hover Action using Selenium WebDriver\nAutomating Right Click Action using Selenium WebDriver\nAutomating Drag and Drop Action using Selenium WebDriver\nResizing UI Elements using Selenium WebDriver\nAutomating Sliders using Selenium WebDriver\nAutomating Multi-Key Operations using Selenium WebDriver\nTest Synchronization in Selenium WebDriver\nWhat is Test Synchronization?\nImplicit Wait in Selenium WebDriver\nExplicit Wait in Selenium WebDriver\nSelenium 4 Updates\nSelenium v.4 Configuration\nUpdate in Implicit Wait\nOpening New Browser / Tab\nRelative Locators\nMinimizing Browser Window\nActions Class Update\nTestNG Framework\nInstalling TestNG\nAutomating Basic Tests in TestNG\nAssertions in TestNG\nHard vs Soft Assertions in TestNG\nBeforeMethod and AfterMethod Annotations\nBeforeClass and AfterClass Annotations\nManaging Test Execution Using TestNG XML Files\nInclude and Exclude Methods in XML File\nBeforeTest and AfterTest Annotations\nBeforeSuite and AfterSuite Annotations\nTestNG Groups\nTestNG Parameters\nManaging Test Dependencies in TestNG\nIgnoring Test Methods in TestNG\nParallel Execution in TestNG\nTestNG HTML Reports\nData Provider in TestNG\nCreating Automation Framework from Scratch using Page Object Model and WebElements Page Factory\nWhat is Page Factory?\nElements Collection (List) in Page Factory\nInitializing Page Factory Elements\nPage Object Model Design\nCreating Base Page Class\nCreating Page Library\nCreating Flow Library\nCourse Outline Ends.....\n\n\n**I will be updating more topics to this outline as per changing trends in technology**\nThis course is designed for you if you are:\na QE Automation Engineer OR\na Selenium WebDriver automation aspirant OR\na manual testing professional willing to jump start your automation carrier OR\na QTP/UFT professional wanting to switch to Selenium as per testing market demand OR\na QE Manager exploring better automation solutions for your project OR\na fresh grad looking to learn a quick new skill which has high demand in the job market OR\naspiring to learn coding and automation\nTraining program requirements/prerequisites:\nNo prior coding experience required. Java programing from scratch is covered in the course.\nParticipants need to have a Windows 10 PC OR a MacBook with 8 GB (or more) memory to perform hands on exercises.\n\n\nTo get the maximum benefit from the course, please take a look at following steps explaining 'How to take this course?'\nStep 1:  Schedule 30-45 minutes of your time daily for 5 days a week. 'Continuity' is the key.\nStep 2:  All sessions are divided in small videos of less than 20 minutes. Watch 2-3 videos daily.\nStep 3:  Hands-on exercise is very important. So, immediately try out the programs discussed in the session. Try them on your won. You can download these programs from lecture resources.\nStep 4: Assignments with answer keys are provided where-ever necessary. Complete the assignments before jumping on to the next sessions.\nStep 5:  If you come across any questions or issues, please feel free to contact me and I will make sure that your queries are resolved.\nHappy learning!!!\nNote: All the course videos are in Quad HD. For the best video streaming quality, please adjust the resolution from 'settings' at bottom right-hand corner of video player. Choose 1080p or 720p as per your network speed.",
      "target_audience": [
        "Selenium WebDriver automation aspirant",
        "Manual tester willing to jump start your automation carrier",
        "QTP/UFT professional wanting to switch to Selenium as per testing market demand",
        "QE Manager exploring better automation solutions for your project",
        "Fresh grads looking to learn a quick new skill which has high demand in the job market",
        "Anyone aspiring to learn coding and automation",
        "QE Testing Professionals",
        "Selenium Testers",
        "Automation Test Engineers",
        "QE Automation Engineers",
        "Automation Aspirants",
        "Manual Testing Professionals",
        "Software Testing Professionals"
      ]
    },
    {
      "title": "Best QA Manual Software Testing: Live Project+Agile+Jira+API",
      "url": "https://www.udemy.com/course/best-manual-software-testing-live-project-agile-jira/",
      "bio": "Ultimate QA Manual Testing course with Live project and Live demo + Real time interview questions + Life time support",
      "objectives": [
        "At the end of this course, students will be able to understand the complete cycle of Manual Testing. Students will be seeing the live project and will be able to start the career in the Software Quality Assurance filed."
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction and Course overview"
        ],
        "QA Basics": [
          "Team role and Responsibilities",
          "QA Roles and Responsibilities",
          "Different ways of Developing a Sofware -Agile Vs Waterfall"
        ],
        "Project Introduction, Requirement Analysis, Jira installation, Agile process": [
          "Introduction of Project Requirement"
        ],
        "Introduction of Jira, User stories, defect etc": [
          "Jira Installation",
          "Backlog, User Stories, Epic et",
          "Continue with Jira User stories and Sprint planning",
          "Complete requirement creation in Jira based on the project."
        ],
        "Test Cases, Test Plan Creation": [
          "Test Case creation",
          "Test Plan creation"
        ],
        "Lets do testing.": [
          "Functional Testing Part 1",
          "functional Testing Part 2",
          "Live UI Testing",
          "More Testing on Store Navigation page",
          "Concept of Boundary value analysis and Equivalence portioning method"
        ],
        "Writing Defects, Defect life Cycle": [
          "Lets write up the defect we found during our testing",
          "Defect Life Cycle"
        ],
        "Different Types of Testing, Different types of Environment, Release process": [
          "Different Types of Testing",
          "Different Environments, Release process & Sample Resume",
          "Interview Q&A and Sample resumes"
        ],
        "API Testing": [
          "Introduction of API Testing",
          "API Types and their differences",
          "Real time examples of API Testing - Part1",
          "Real Time examples of API Testing - Part2"
        ]
      },
      "requirements": [
        "Basic Knowledge of Computer.",
        "Internet Connection."
      ],
      "description": "Learn and Start your career as Software Quality Assurance field from the experienced professional.\nYou will be seeing the LIVE PROJECT from beginning to the end.\nYou would be guaranteed become a perfect software tester after taking this course. You would start from your role as a tester and your team responsibilities. Then, you would get the introduction of the live project,  Agile Methodology, Test plan, Test cases, Test defects,  Defect life cycle, Different environments, Release process, API testing, and much more. Also, you would be learning how to perform testing in real time. You would also get live experience in Agile and test management tools like Jira.\n\nCourse Benefits?\nPractical Approach:   This course is designed completely on practical approach. From beginning to the end, you would see yourself working in an organization, and on a real time project.\n\nCourse outline: This course gives you the complete cycle of software testing from your role to different approaches to develop a software to requirement docs from the client  to software development to the real time testing to the release process. You would be able to see end to end approach of software testing.\nDocument Template: You would be getting the real Test plan, Test case documents as well as very practical interview questions.\nSupport: We will  always be available via email for any assistance or concerns.\nReal time testing : You would be learning how to perform real time testing.\nProfessional Assurance: You would be learning Software Testing  from a 10+ years SQA professional  from your own desk.\nBest suitable for individuals who wants to pursue their career in Software Testing.\n\n\nWhat am I going to get from this course??\nLIVE PROJECT - you would be able to see real requirements, and be able to work on the LIVE PROJECT!!\nInformation packed practical training starting from basics to advanced testing techniques.\nPractical learning experience with live project work and examples.\nLifetime Access - Pay fees one time and access the whole course life time.\nDownload real software testing documents like Test Plan, Test Cases and other important docs.\nLearn Agile and Test Management Tools like JIRA.\nAPI  Testing\nGet all future course updates FREE !\nReal time Interview Questions.\nResume Preparations.\nLife long assistance.\n\n\nHow this course is designed:\nOverview: In this session, you would come to know about  the instructor and the course overview.\n\nRoles and responsibilities of QA and Team members: This section would introduce you about the overall picture of QA and its team in detail.\nDifferent Methods of developing a software: In this section you would learn different ways and methods to develop a software.\nIntroduction of a project: In this section, you would be Introduced with a project that we would be working on throughout this course.\nJIRA Installation and overview: You would be learning about JIRA Software, its usage in Agile methodologies.\nRequirements Analysis: We are going to look over requirements and analyse them.\nUser Stories Creation: You will be able to see how Agile works in real time and how user stories are created.\nDocuments : You would be able to download and get the real time Test-plan and Test case documents.\nReal Time Testing: In this section, you would be able to see how to perform real time testing and approach during testing.\nDefect Management: This section provides overview about defect identification, defect logging and defect tracking in detail. We also provide details on how to use a popular open source defect management tool JIRA.\nDifferent Types of Testing: This section would give you overview about different kinds of testing a tester can do.\nEnvironments and Release process : This section gives overview about different environments and release process.\nMost Popular Interview Questions and Sample Resumes : In this section you would be able to see most common interview questions and few sample resumes that help you during interviews or in applying a job.",
      "target_audience": [
        "Beginners: Beginners who wants to start their career in Software Testing field.",
        "Already a tester: You can refresh all your testing basics and techniques and gear up for Certifications in Software Testing",
        "Fresh Graduates: If you have passed out of college recently, and looking for a job in QA/Testing Industry, then this course will definitely help you build skills required for your first job",
        "Non Programmers: If you are interested in IT, but hate programming or find it difficult, then Testing allows you focus less on programming and more on analysis skills.",
        "Non IT Professionals: If you are currently working in some other field, but interested in building a career in IT, then this course will help you step into the IT field"
      ]
    },
    {
      "title": "Manual Software Testing: Complete Course with Practical Labs",
      "url": "https://www.udemy.com/course/manual-software-testing-h/",
      "bio": "Tools: JIRA, Bugzilla, Trello, Postman, 21 types of Testing, 7 principles of testing, QC and QA, ISTQB, ChatGPT, QA Test",
      "objectives": [
        "Exclusive Bonus: Harness the power of OpenAI and ChatGPT to revolutionize your manual software testing skills with practical insights",
        "Comprehensive Testing Knowledge: Master 21 types of software testing, including principles, methodologies, and hands-on application.",
        "Testing Tools in Depth: Learn and implement JIRA, Bugzilla, and Postman for efficient bug tracking and API testing.",
        "Advanced Tools Training: Master Jira for bug reporting and project tracking; explore Trello for project management",
        "Effective Test Management: Develop expertise in test case writing and bug report generation, aligned with industry standards.",
        "Project Management Made Easy: Utilize Trello to streamline workflows and understand key testing terminologies.",
        "Quality Assurance Mastery: Deep dive into QC and QA processes, why testing is crucial, and how to excel in them.",
        "ISTQB Certification Preparation: Gain the necessary knowledge for ISTQB certification, including Agile methodologies and testing.",
        "Real-World Testing Process: Learn the fundamental test processes and project models widely adopted in software companies.",
        "Agile Expertise: Understand the QA role in Agile Scrum using JIRA with real-time project scenarios.",
        "Practical Test Cases: Write and execute test cases for web, mobile, and desktop applications through step-by-step practical sessions.",
        "Live Project Training: Work on a live project using ChatGPT for manual testing, featuring Amazon test case studies to replicate real-world challenges."
      ],
      "course_content": {
        "Manual Software Testing": [
          "Free Bonus Course: How Help ChatGPT in Manual Software Testing",
          "Career in Manual Testing",
          "Need and Terminologies used in Testing",
          "Principles of Testing",
          "How to Write Testcases",
          "Test Process Steps",
          "Level of Independence in Testing",
          "Levels of Testing",
          "Software Testing Models",
          "Check Me Quiz : Career in Manual Testing",
          "Check Me Quiz : Need and Terminologies used in Testing",
          "Check Me Quiz: Principles of Testing",
          "Check Me Quiz: How to Write Testcases",
          "Check Me Quiz: Level of Independence in Testing",
          "Check Me Quiz: Levels of Testing",
          "Check Me Quiz: Software Testing models"
        ],
        "Useful 21 Types of Testing": [
          "Types of Testing 1-4",
          "Types of Testing 5-8",
          "Types of Testing 9-12",
          "Types of Testing 13-16",
          "Types of Testing 17-21",
          "Exploratory Testing",
          "Risk Based Testing - RBT",
          "Usability Testing",
          "Case Study - Airport Management System",
          "Case Study - Banking Application Development",
          "Check Me Quiz: Type of Testing"
        ],
        "How to Write Test Cases": [
          "How to Write Test Cases Module 1",
          "How to Write Test Cases Module 2",
          "How to Write Test Cases Module 3",
          "How to Write Test Cases Module 4",
          "How to Write Test Cases Module 5"
        ],
        "Trello - Project Management Tool": [
          "Trello - Project Management Tool"
        ],
        "Bugzilla Tool": [
          "Introduction to Bugzilla",
          "Working on Bugzilla Tool"
        ],
        "Jira Tool": [
          "Introduction to Jira tool",
          "Working on Jira tool",
          "Updated Novmber 2023: JIRA new version",
          "JIRA 2023 Version Updates",
          "Conclusion and quick JIRA integration with ChatGPT"
        ],
        "Static Reviews Techniques": [
          "Static Reviews Techniques",
          "Check Me Quiz: Static Reviews Techniques"
        ],
        "Automation Tools": [
          "Automation Tools",
          "API Testing through the Postman Tool",
          "Mobile Application Testing",
          "Check Me Quiz: Automation Tools"
        ],
        "Agile Methodology, 12 Agile Principles and Exercises": [
          "What is Agile Development and why is it important?",
          "What are the 12 Agile Principles?",
          "What is Agile Enterprise Framework and Delivery Framework?",
          "Agile and DevOps Tools",
          "Agile and DevOps best practice",
          "Exercise - Practical Agile Software Mobile Application Development"
        ],
        "Top Manual Testing Interview Questions & Answers 2023": [
          "Introduction QA",
          "Interview QA of Manual Software Testing Part 1",
          "Interview QA of Manual Software Testing Part 2",
          "Interview QA of Manual Software Testing Part 3"
        ]
      },
      "requirements": [
        "No prior coding experience is required to begin this course. Even non-programming candidates can easily follow along and learn comfortably.",
        "You will receive lifetime instructor support to address all your queries. Feel free to post your questions on the discussion board, and we’ll respond with an answer within 12 hours.",
        "The course features real-time projects with practical solutions, giving you hands-on experience to enhance your learning."
      ],
      "description": "Join 22,000+ learners in this top-rated Manual Testing Course and gain practical skills to build a successful career in Software Quality Assurance. Whether you're a beginner or a professional looking to advance your expertise, this course is designed to provide you with the knowledge, tools, and techniques essential for Manual QA Testing success.\nWhat You'll Gain:\nA solid foundation in Manual Software Testing through an engaging and interactive Software Testing Tutorial.\nHands-on experience with Manual Testing Tools like JIRA, Bugzilla, and Trello for bug tracking and project management.\nThe ability to write effective test cases, create bug reports, and track defects with ease.\nInsights into Software Testing Training methodologies used by leading organizations.\nPreparation for Manual Testing Certification exams like ISTQB, boosting your credentials.\nWelcome to the Manual Software Testing: Complete Course with Practical Labs on Udemy! Whether you're a beginner or an experienced professional, this comprehensive course is designed to equip you with the essential skills and knowledge needed to excel in manual software testing.\nIn this hands-on course, you will learn the fundamentals of software testing, test planning, test case design, execution, and defect management. Through a series of real-world examples and practical labs, you will gain a deep understanding of different testing techniques, including functional, regression, and exploratory testing. We will also cover the critical concepts of test documentation and reporting, helping you become a proficient tester capable of delivering high-quality software.\nJoin us on this journey to become a skilled manual software tester with practical experience that can set you on a path to a rewarding career in the field of software quality assurance.\nEnroll today and start your journey toward excellence in software testing!\nIt is always said, “The most important part of the movie is the trailer”. I am sure most of you agree with this. So, in this movie of the Manual Testing Course that we will be going through, let me take you through the trailer. I mean, let us look at the course outline in detail: What we will be covering in the manual testing course. In the manual testing course, we will be looking at:\nExciting News! As a token of our appreciation for your dedication to learning, we're thrilled to offer you a FREE bonus course. This additional course is our gift to you, aimed at enriching your educational journey and helping you gain even more knowledge and skills.\nOpenAI & ChatGPT - Everything you need to know\nChatGPT introduction\nApplications of Chat GPT\nExploring features practically from programmers perspective\nExploring features practically from HR perspective\nChatGPT feature to elaborate or shorten the text\nChatGPT in healthcare, logistics, banking and Education\nChatGPT for Manual Software Testing\nIntroduction to Manual Software Testing\nManual Software Testing Test Case Writing, Bug Cycle\nLive Project : Manual Software Testing Amazon Test Cases\nExplore manual testing tools using Chat GPT\nExploring 404 error in the web application testing\nPreparing for ISTQB foundation with ChatGPT\nInterview questions and enablement\nNew Module 9-10-11 added:\nTop Manual Testing Interview Questions & Answers 2023\nCertifications for Software Testing - ISTQB\nProject Management of Software Testing\nIntroduction to software testing?\n• What is software testing and\nWhy is testing important?\n• Terminologies used in Software Testing\n• Key Concepts- static, dynamic,\n• Roles and how you grow in the organization\nCauses of defects\n• QC and QA\n7 principles of testing\n\n\nTesting shows the presence of a defect\nExhaustive testing of products\nEarly Testing\nDefect Clustering\nPesticide Paradox\nTesting is context-dependent\nAbsence of error fallacy\nFundamental test process followed in the organization\nThink and write effective test cases as per industry standards.\nType of Testing: (21 types of testing)\n\n\nBlack Box Testing\nWhite Box Testing\nRegression Testing\nRetesting Testing\nGUI Testing (Graphical User Interface)\nBrowser Compatibility\nAd-hoc Testing\nBackend Testing\nRecovery Testing\nFunctional Testing\nNon-functional Testing\nSecurity Testing\nUsability Testing\nSmoke Testing\nAlpha Testing\nBeta Testing\nCompliance Testing\nStress Testing\nVolume Testing\nInstall Testing\nUninstall Testing\nUsability Testing\nTesting levels\n• Unit testing\n• Integration testing\n• Component interface testing\n• System testing\nProcess models used in software companies\n•Traditional waterfall development model\n•Agile or Extreme development model\n•V-Model\nA sample testing cycle\nQA role in Agile Scrum using JIRA- Real-time project\nAPI Testing through the Postman Tool\nMobile App Testing\n\n\nProject Management of Software Testing\n\n\nWhat is project planning?\nHow to do project planning - time management, resource management, budget management\nBest practices for project management\n\n\nPractical hands-on writing test cases for web-based applications\nPractical hands-on writing test cases for mobile-based application\nPractical hands-on writing test cases for desktop-based applications.\nHighlights:\nThink and write test cases as per the industry standards, MAIN IDEA: GET YOU INDUSTRY READY\nA practical example for testing software. A sample project will be prepared to explain the\npractical usage of testing with proper coding illustrations.\nTools: JIRA, Bugzilla, Trello, Postman\nWebsite and mobile app testing\n\n\n\"Regular Course Update\"\nStay ahead with our regularly updated courses. We ensure our content reflects the latest industry trends and technologies. Each update includes:\nUpdated Sep 2025\nAgile project\nUpdated Jan 2025\nCase Study - Airport Management System\nUpdated Sep 2024\nUsability Testing is a method used to evaluate how easy and user-friendly a product, website, or application is. It involves observing real users as they interact with the product to identify any issues in the design, navigation, or functionality. The goal of usability testing is to improve the overall user experience by identifying pain points and making necessary improvements, ensuring that the product is intuitive and efficient for users.\nUpdated Sep 2024\nRisk based testing (RBT) is a strategic approach in software testing that focuses on identifying and prioritizing the most critical areas of a system or application based on potential risks. The core principle of RBT is to allocate testing resources and efforts to those areas of the software that pose the highest risk of failure, which in turn maximizes the effectiveness of the testing process.\nJuly Updated 2024\nExploratory Testing\nReal World Case Study 1\n\n\nMarch Updated 2024\nExciting news! We've just added a new Agile Methodology Module, featuring:\nIntroduction to Agile Development.\nThe 12 Agile Principles.\nAgile Enterprise and Delivery Frameworks.\nA practical exercise on Agile Software Mobile Application Development.\nUpdated 2023\nChatGPT for Manual Software Testing\nIntroduction to ChatGPT for Manual Software Testing\nChatGPT The Future of Test Case Writing and Bug Cycle\nLive Project - Manual Software Testing Amazon Test Cases using ChatGPT\nExplore Manual Software Testing Tools using ChatGPT\nExploring 404 error in the web application testing using Chat GPT\nPreparing for ISTQB foundation with ChatGPT\nInterview questions and enablement with ChatGPT\nChatGPT 3.5 Vs Chat GPT 4.0\nUpdated 2023\nISTQB Certification\nISTQB Certification Introduction\nWho is eligible for ISTQB certification?\nISTQB Certification Syllabus\nISTQB Certification Levels\nUpdated 2022\nAutomation Tools\nAutomation Tools\nAPI Testing through the Postman Tool\nMobile Application Testing\nCheck Me Quiz: Automation Tools\n\n\nTop Manual Testing Interview Questions & Answers 2024\nSO THIS COURSE IS FOR:\nDELEGATES WHO ARE LOOKING TO START A CAREER IN SOFTWARE TESTING – FRESH GRADUATES> WE DO MAKE YOU INDUSTRY READY\nDELEGATES WHO DO NOT HAVE ANY EXP IN THE SOFTWARE INDUSTRY BUT WANT TO GET IN BY SHOWING REAL EXPERIENCE\nThese are some of the reviews of the students who used this course to begin their software testing career:\nReviews:\nI am enjoying this course because I think the way the instructor explains the concepts is easy to follow and understand, and I look forward to completing the course.\nTimothy J. G.\nBased on what I’ve seen so far the instructor is it very knowledgeable. She takes it slowly so we can understand and make sure to properly explain what each section means before moving to the next.\nNoah\n\n\nMrs. Pryanka is a tremendously good teacher. Explanations are above any expectations. This course helped me to perceive clearly all the terms and to catch all the missing stuff now. I am very happy with the teacher and this course.\nGjorgji Hadji-Boshkov\n\n\nThis was a very good course. As I am new to the IT industry this course gave a brief information on manual testing and some automation tools. Looking forward to taking various courses like this.\nMAILARAPU SHARANYA\n\n\n\"Upgrade Your Skills for the Future of Work\"\n\"Career Success Depends on Your Willingness to Learn\"",
      "target_audience": [
        "This course is ideal for students aiming to start their career as a Test Engineer, fresh graduates, and non-IT professionals looking to enter the field of software testing.",
        "This course is also suited for Programming & non-programming professionals involved in the software development life cycle who want to strengthen their testing knowledge."
      ]
    },
    {
      "title": "Playwright with Cucumber BDD & TypeScript - Beginner to Pro",
      "url": "https://www.udemy.com/course/playwright-with-cucumber-bdd-typescript-beginner-to-pro/",
      "bio": "Learn how to create automated UI tests using Playwright with Behaviour Driven Development (Cucumber BDD) and TypeScript",
      "objectives": [
        "Master TypeScript fundamentals to effectively automate tasks using Playwright.",
        "Build advanced automation tests for any web application using Playwright & Cucumber BDD.",
        "Understand the importance of Behavior Driven Development (BDD) using Cucumber & Gherkin.",
        "Combine two in-demand technologies: Playwright & Cucumber BDD (latest versions).",
        "Gain in-depth knowledge of Cucumber’s core components: Scenario Outlines, Background Keyword, Tags, and more.",
        "Know when and how to use specific Gherkin keywords such as ‘Feature’, ‘Given’, ‘When’, ‘And’, ‘Then’, and more.",
        "Generate a wide range of reports.",
        "Apply principles such as DRY (Don’t Repeat Yourself) and more.",
        "Implement design patterns such as POM (Page Object Model) & custom commands.",
        "Leverage Jenkins (CI) to easily execute test scenarios based on tags and custom scripts.",
        "Use Jenkins to develop sophisticated reports and handle various runtime options (e.g., browser selection).",
        "And much more, refer to the course Curriculum."
      ],
      "course_content": {
        "Getting Started with Playwright & Cucumber": [
          "Tool Comparison: Playwright vs. Cucumber BDD",
          "Benefits Overview: Why Learn Playwright & Cucumber BDD?",
          "Bonus: Free Practice Tools + Course Discounts (For All Testers)",
          "Code Exploration: Delve Deeper into Playwright",
          "Diving Deep into the Playwright Community"
        ],
        "Environment - Setup: Getting Ready": [
          "Node.js: Quick Setup",
          "Visual Studio Code: VS Code Basics",
          "Git Bash: Installing Git Bash",
          "Java JDK: Java Installation"
        ],
        "TypeScript & NodeJS Fundamentals: Building Practical Skills for Beginners": [
          "Kickstart Your Project: Initial Setup",
          "TypeScript Basics: A Simple Example & More!",
          "TypeScript vs. JavaScript: Simplified Comparison - (Part 1/2)",
          "TypeScript vs. JavaScript: Simplified Comparison - (Part 2/2)",
          "Quick Guide: Playwright with TypeScript & Node.js",
          "Node.js & TypeScript: Crafting Code with Precision",
          "Hands-On Node.js: Modules - (Part 1/2)",
          "Hands-On Node.js: Modules - (Part 2/2)",
          "Variables and Data Types – (Part 1/2)",
          "Variables and Data Types – (Part 2/2)",
          "Variables and Data Types: Practical Exercise",
          "Understanding Functions & Parameters",
          "Functions & Parameters: Practical Exercise",
          "Working with Conditions and Loops",
          "Conditions and Loops: Practical Exercise",
          "Diving Deeper into TypeScript",
          "Introduction to Asynchronous Programming",
          "Promises",
          "Async & Await",
          "Working with Node.js & npm",
          "TypeScript & NodeJS Fundamentals: Challenge"
        ],
        "Project Kick-off: Setup & Overview": [
          "Get Playwright: Download & Setup",
          "Intro to Playwright",
          "Cucumber Install: Quick Setup",
          "VS Code Integration with Cucumber & More!"
        ],
        "Cucumber Kick-off: The Basics": [
          "Cucumber vs. Gherkin: What’s the Difference?",
          "Start Strong: Creating a Positive Scenario - (Part 1/7)",
          "Build Up: Creating a Positive Scenario - (Part 2/7)",
          "Deep Dive: Creating a Positive Scenario - (Part 3/7)",
          "Enhance It: Creating a Positive Scenario - (Part 4/7)",
          "Hooks & Fixtures: Positive Scenario - (Part 5/7)",
          "Hooks & Fixtures: Positive Scenario - (Part 6/7)",
          "Final Touches: Creating a Positive Scenario - (Part 7/7)",
          "Design Challenges: Creating a Negative Scenario",
          "Quick Recap: Section Summary",
          "Cucumber Basics: Challenge"
        ],
        "Cucumber Expressions: Handling Dynamic Data": [
          "Cucumber Expressions: Scenario Creation",
          "Cucumber Expressions: Mapping Step Definitions",
          "Cucumber Expressions: Implementing Step Definitions",
          "Cucumber Expressions: Challenge"
        ],
        "Mastering Dynamic Data with Faker.js": [
          "Faker.js Fundamentals: Generating Basic Data",
          "Advanced Faker.js: Custom Data Structures and Techniques",
          "Mastering Dynamic Data with Faker.js: Challenge"
        ],
        "Background & Scenario Outlines": [
          "Scenario Outlines: Intro",
          "Scenario Outlines: Creation",
          "Scenario Outlines: Mapping & Implementing Steps – (Part 1/2)",
          "Scenario Outlines: Mapping & Implementing Steps – (Part 2/2)",
          "Background Keyword",
          "Background Keyword: In Action",
          "Background & Scenario Outlines"
        ],
        "The Real-World Challenge": [
          "Challenge: Overview",
          "Feature File: Creation",
          "Documenting Scenario Requirements",
          "Mapping & Implementing Step Definitions - (Part 1/2)",
          "Mapping & Implementing Step Definitions - (Part 2/2)",
          "Real World: Tips & Optimizations"
        ],
        "Tags, Custom Scripts & More!": [
          "Understanding Tags: A Beginner’s Guide",
          "Index.ts: The Brains of Your Project - (Part 1/2)",
          "Index.ts: The Brains of Your Project - (Part 2/2)",
          "Tags in Action: Real-World Examples",
          "Ignoring Scenarios",
          "Quick Recap: Section Summary",
          "Tags, Custom Scripts & More: Challenge"
        ]
      },
      "requirements": [
        "Some basic JavaScript (Programming) knowledge would be beneficial. A TypeScript Fundamentals section is included in the course.",
        "Some knowledge of programming would be beneficial (not critical).",
        "Some basic HTML and CSS knowledge would also be useful (not critical).",
        "Feel free to ask questions in the Q&A section(s) of the course if something is not clear or does not work."
      ],
      "description": "This course uses the latest versions of Playwright & Cucumber BDD.\n\n\nWhy Playwright?\nPlaywright is a multi-programming language end-to-end testing framework that is not only popular but also rapidly growing in popularity due to its outstanding features and ease of use.\n\n\nWhy Cucumber BDD?\nCucumber BDD (Behaviour-driven development) much like 'Playwright' is a technology which is growing in popularity by the day and is used by organisations across the globe. Cucumber BDD captures test requirements in a simplistic manner, making it easy not only for 'Non technical parties/people' to understand scenario's which have been automated, but also assists the process of building effective automation frameworks and tests.\n\n\nWhy this course?\nThis course is designed to be quick, effective, efficient and easy to follow. I have been teaching for several years on Udemy with over 9 highly successful courses to date. I have refined this course using proven teaching techniques. This course is carefully structured from start to finish and I provide downloadable code examples after each coding lecture.\n\n\nWhat does this course cover?\nIntroduction to Playwright and Testing Basics:\nLearn how to rapidly create both simplistic and sophisticated automated UI tests using Playwright.\nUnderstand the importance of Cucumber BDD (Behaviour-Driven Development).\nCapture test (scenario) requirements effectively and effortlessly using Cucumber BDD.\nGain knowledge of ‘Gherkin’, Cucumber’s language parser.\nKnow why and when to use specific Gherkin keywords such as ‘Feature’, ‘Given’, ‘When’, ‘And’, ‘Then’, and more!\nLearn the differences between ‘Scenarios’ and ‘Scenario Outlines’.\nSimplify tests using specific Cucumber BDD features such as the ‘Background’ keyword.\nInsert and modify test data directly within feature files.\nCorrectly map test requirements to actions using Cucumber step definitions and Playwright.\nBecome familiar with ‘Tags’ and learn how to target and execute specific tests (scenarios).\nProgramming and Tools:\nLearn TypeScript, NPM, and NodeJS to enhance your testing capabilities.\nUnderstand the fundamentals of TypeScript and how it integrates with Playwright.\nManage project dependencies and scripts efficiently using NPM.\nUtilize NodeJS for server-side scripting and automation tasks.\nAdvanced Testing Techniques:\nUnderstand the importance of design patterns such as Page Object Modelling (POM).\nLearn best practices such as DRY (Don’t Repeat Yourself).\nLeverage ‘Hooks’ and ‘Custom Commands’.\nReporting and Continuous Integration:\nCreate sophisticated reports (HTML reports, JSON reports) and more!\nLearn continuous integration using Jenkins and understand its usefulness.\nBecome familiar with important add-ons for Jenkins.\nCreate visually appealing reports within Jenkins and attach images to those reports.\nHandle extensible choice parameters (selection dropdown lists) via Jenkins.\nAdditional Features:\nAnd much much more!",
      "target_audience": [
        "Students new to Automation Testing & Cucumber BDD (Behavior-driven Development).",
        "Manual testers looking to enter the automation testing space.",
        "Testers looking to create their first test automation framework.",
        "SDETs and Automation Engineers transitioning from other frameworks to Playwright.",
        "Testers aiming to quickly grasp Playwright best practices and framework capabilities.",
        "Automation Testers wanting to build tests from scratch using Playwright & Cucumber BDD.",
        "Automation Testers familiar with other tools wanting to integrate Playwright & Cucumber BDD into their framework(s).",
        "Front-end developers interested in automation testing using a familiar language.",
        "Intermediate and advanced students wanting to learn new concepts and techniques.",
        "Beginners looking to learn Playwright efficiently.",
        "Individuals already familiar with Playwright but wanting to integrate Cucumber BDD into their existing frameworks.",
        "Anyone interested in automation testing and wanting to learn Playwright & Cucumber BDD."
      ]
    },
    {
      "title": "Selenium Python - Step by Step for Beginners with Framework",
      "url": "https://www.udemy.com/course/selenium-python-step-by-step-for-beginners/",
      "bio": "Learn Selenium Python from scratch with Sample Projects",
      "objectives": [
        "Create complete Automation Framework",
        "Create automation tests with Selenium & Python",
        "Generate HTML reports",
        "Use Jenkins for Continuous Integration",
        "Use Git for version control",
        "Plan, build and execute test automation with Selenium & Python",
        "Understand the basics of Selenium and Python Automation"
      ],
      "course_content": {
        "ABOUT INSTRUCTOR AND THE COURSE": [
          "A message from Raghav",
          "About Raghav and this course **Must Watch**"
        ],
        "GETTING STARTED": [
          "How to install Python on Windows",
          "How to install Python on Mac OS",
          "How to install Selenium for Python",
          "Setting up Selenium with Python"
        ],
        "IDE FOR PYTHON": [
          "PyCharm : IDE for Python",
          "PyDev (Eclipse) : IDE for Python"
        ],
        "Selenium New Website": [
          "New Selenium Wesbite"
        ],
        "FIRST SELENIUM TEST": [
          "How to create first Selenium Python test"
        ],
        "CHROME | FIREFOX | IE": [
          "How to run Selenium Python tests on Chrome | Headless Chrome",
          "How to run Selenium Python tests on Firefox| Headless Firefox",
          "How to run Selenium Python tests on Internet Explorer"
        ],
        "WEBDRIVER MANAGER": [
          "WebDriver Manager | Automatic management of browser drivers for Selenium"
        ],
        "WEB ELEMENTS LOCATORS": [
          "How to find Web Elements Locators in Selenium Python"
        ],
        "PYTHON BASICS": [
          "Python Basics 1 | Variables |Syntax | Function | CommandLine | Comments",
          "Python Basics 2| If | Else | Loops",
          "Python Basics 3 | Functions",
          "Python Basics 4 | Classes & Objects"
        ],
        "PYTHON | COLLECTIONS": [
          "Python Basics 5 | Collections | LIST",
          "Python Basics 6 | Collections | TUPLE",
          "Python Basics 7 | Collections | SETS",
          "Python Basics 8 | Collections | DICTIONARY"
        ]
      },
      "requirements": [
        "No prior knowledge is required, the course starts from scratch",
        "Designed for complete Beginners"
      ],
      "description": "This course is created for complete beginners.\nGet started with Selenium in Python step by step.\nIf you are a complete beginner on Selenium or Python, this course is for you. Very basic step by step videos to guide you from scratch.\nIn this course we will learn:\nHow to install Python (Mac & Windows)\nHow to install Selenium\nHow to setup Selenium Python project\nHow to create first test script\nHow to generate reports\nHow to create Automation Framework\nHow to run from command line\nHow to use Jenkins for Continuous Integration\nHow to record & play\nHow to use testing frameworks like PyUnit and PyTest\nHow to use Allure Reports\nCreate an end-to-end Automation Framework from scratch\nAnd much more...\nDo not worry if you have never used Python or Selenium. I will guide you on every step.\nLet's Get Started...",
      "target_audience": [
        "Anyone who wants to learn Selenium Python from scratch",
        "Beginners in Selenium Python Automation testing",
        "Beginners who wants to learn How to create automation testing framework with Selenium Python"
      ]
    },
    {
      "title": "2025 -ISTQB Certified Tester Foundation level -Crash Course",
      "url": "https://www.udemy.com/course/istqb-certified-tester-foundation-level-ctfl/",
      "bio": "ISTQB (CTFL) - A real-time training approach & 200+ practice quizzes to master concepts and boost exam confidence",
      "objectives": [
        "By the end of this course, you will be able to Understand all core concepts from the official ISTQB Foundation Level syllabus",
        "Relate theoretical testing principles to practical, real-world QA scenarios.",
        "Solve 200+ practice quizzes designed to simulate the actual exam format.",
        "Analyze answer options effectively and strengthen reasoning for tricky questions.",
        "Build the confidence and strategy needed to clear the ISTQB certification exam on your first attempt."
      ],
      "course_content": {
        "Introduction to ISTQB & How This Course Is Designed to Help You Get Certified": [
          "A brief on ISTQB - Certified Tester Foundation Level(CTFL) Certification",
          "How this Course is Designed"
        ],
        "Chapter 1 - Fundamentals of Testing, Testing Activities, Testware & Test Roles": [
          "Why is Testing Necessary",
          "Testing vs Quality Assurance vs Quality Control",
          "The Seven Testing Principles",
          "Test Activities, Testware and Test Role",
          "What is Testware & Traceability between Test Basis and Testware",
          "Different Roles in Testing as per ISQTB documentation",
          "Generic Skills Required for Testing",
          "Independence of Testing",
          "What is Testing - Definition, Objectives, Misconceptions About Testing",
          "The Seven Testing Principles & Test Activities, Testware, and Test Roles",
          "Essential Skills and Good Practices in Testing",
          "Material download",
          "Section - 1"
        ],
        "Chapter 2 - Testing Throughout the Software Development Lifecycle": [
          "Testing Throughout the Software Development Lifecycle",
          "Waterfall vs Agile-Testing Throughout SDLC",
          "Test Levels and Test Types - Unit and Component Integration testing",
          "Test Levels and Test Types - System and Acceptance testing",
          "Testing as a Driver for Software Development",
          "DevOps and Testing",
          "Functional and Non-functional Testing",
          "System and Acceptance Testing",
          "Regression Testing",
          "Types of Maintenance Testing",
          "Shift Left Testing",
          "Retrospectives and Process Improvement",
          "Material download",
          "Quiz"
        ],
        "Chapter 3 - Static Testing, Dynamic Testing & Work Products": [
          "Static Testing in Software Development",
          "Types of Static Reviews & Static Testing Model Questions",
          "Static Testing Review Process - Roles and Responsibilities",
          "Comparing Dynamic and Static Testing",
          "Static Testing Basics",
          "Feedback and Review Process",
          "Material download",
          "Quiz"
        ],
        "Chapter 4 - Test Analysis, Design, Techniques (Partitioning & BoundaryValues)": [
          "Test Techniques Overview",
          "Black-Box testing techniques with Examples",
          "Goal of Equivalence Partitioning with Examples",
          "Black-Box testing techniques with Examples",
          "Boundary Value Analysis - Model Questions",
          "Decision table Testing with Examples",
          "State Transition Testing with Examples",
          "Equivalence Partitioning and Boundary Value Analysis Examples",
          "White-Box Test Techniques - Statement Coverage",
          "Branch Testing and Branch Coverage",
          "The Value of White Box Testing",
          "Experience-Based Testing Technique - Error Guessing and Exploratory Testing",
          "Experience-Based Test Techniques - Checklist-Based Testing",
          "Collaboration-based Test Approaches",
          "Material download",
          "Quiz",
          "Quiz"
        ],
        "Chapter 5 -Managing the Test Activities, Planning & Risk Management & Monitoring": [
          "Test Planning",
          "Difference Between Release Planning and Iteration Planning",
          "Testers Role in Release Planning and Iteration Planning",
          "Entry Criteria and Exit Criteria",
          "Example question on Entry Criteria",
          "Estimation Techniques",
          "Test Case Prioritization",
          "Test Pyramid",
          "Testing Quadrants",
          "Risk Management",
          "Project Risks",
          "Test Reports - Test Progress and Test Completion Reports",
          "Metrics Used in Testing",
          "Communicating Test Status",
          "Material download",
          "Quiz"
        ],
        "Chapter 6 - Configuration/Defect Management & Test tools (Automation)": [
          "Configuration Management",
          "Defect Management",
          "Tools Support for Testing-Static Analysis Tools and Test Management tools",
          "Performance and Configuration Management Tools",
          "Additional Testing Tools (Devops, Test Execution, Non Functional Test Tools)",
          "Benefits of Test Automation-Model Questions",
          "Benefits of Test Automation",
          "Risks and Challenges of Test Automation",
          "Automation Testing - Required Skills and Tools Limitation",
          "Material download",
          "Section Quiz"
        ],
        "Final Exam Practise Session": [
          "Final Quiz-1",
          "Final Quiz-2",
          "Practice Test-1",
          "Practice Test-2"
        ]
      },
      "requirements": [
        "Basic Testing knowledge will help to relate the concepts in real world"
      ],
      "description": "ISTQB Certified Tester – Foundation Level (CTFL)\nThe worldwide recognized certification for QA professionals that can significantly boost your credentials.\nWelcome to this comprehensive course! All you need to do is sit back, relax, and follow along as I guide you through every topic in the official ISTQB exam syllabus, explained with real-time examples to prepare you thoroughly for the exam. Whether you are new to software testing or looking to strengthen your fundamentals, this course is structured to help you gain confidence and clarity.\nCourse FAQs\nISTQB Syllabus-Oriented\nCourse content prepared entirely based on the official ISTQB syllabus.\nPractical Approach\nConcepts explained with real-world examples so you can easily relate them to your work.\nComprehensive Learning Structure\nEach concept is followed by supplementary reading materials.\nChapter-by-chapter exam simulation quizzes to build confidence.\nFull-length quiz tests at the end to ensure complete preparation.\nDesigned to familiarize you with the actual exam pattern.\nSuccess Strategy\nA thorough understanding of the course content, combined with consistent practice of all quizzes, will set you up to successfully clear the ISTQB exam.\nFinally, I strongly encourage you to dedicate quality time to the quizzes—not just to find the right answer, but to carefully analyze why all the other options are incorrect. This will sharpen your reasoning process, improve conceptual clarity, and build the confidence needed to succeed in the real exam",
      "target_audience": [
        "Software Testers",
        "QA Engineers",
        "Business Analyst",
        "Software Engineer"
      ]
    },
    {
      "title": "SOAPUI API Testing | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/soapui-from-scratch-step-by-step/",
      "bio": "learn SoapUI from scratch",
      "objectives": [
        "Use SoapUI open source for API testing",
        "Create manual and automation frameworks in SoapUI",
        "How to use Groovy scripts",
        "How to handle different api testing needs",
        "Basics of API testing in SoapUI"
      ],
      "course_content": {
        "ABOUT INSTRUCTOR AND THE COURSE": [
          "About Raghav and this course ***Must Watch***",
          "Video message from Raghav"
        ],
        "INTRODUCTION": [
          "Introduction & Getting Started",
          "Features & GUI"
        ],
        "First Project": [
          "How to create First SOAP Project",
          "How to create First REST Project"
        ],
        "Properties": [
          "Properties | Introduction",
          "How to handle Properties with Groovy Scripts",
          "How to do Property Transfer"
        ],
        "Groovy Scripting": [
          "Groovy Scripting | Getting Started"
        ],
        "Running Requests": [
          "How to run a Request",
          "How to run a Test Case|GUI, Groovy and Command Line",
          "How to run a Test Suite | GUI, Groovy and Command Line",
          "How to run a Project | GUI, Groovy and Command Line"
        ],
        "LOGS": [
          "Logs in SoapUI"
        ],
        "SetUp & TearDown": [
          "SetUp & TearDown in SoapUI"
        ],
        "Assertions": [
          "Assertions | Introduction",
          "Assertions | How to add different assertions in SoapUI",
          "Assertions | How to create script assertion (with groovy)"
        ],
        "JENKINS CI": [
          "How to run SoapUI tests from Jenkins"
        ]
      },
      "requirements": [
        "No special knowledge is required",
        "Basic understanding and use of computers is enough"
      ],
      "description": "In this course, we will go very basic, step by step and learn SoapUI from scratch.\nAll the sessions are created on SoapUI open source version.\nThis course will cover:\n1. What is SoapUI\n2. Download and Getting Started\n3. Understand the GUI and features\n4. Create First SoapUI project\n5. Learn about Project, TestSuite, TestCases and TestSteps\n6. Assertions\n7. Properties\n8. Groovy Scripts\n9. Command-line execution\n10. CI Jenkins\nDo not worry if you have no prior knowledge of API Testing or SoapUI.\nThis course will teach you all you need for working on API Testing with SoapUI for any personal & enterprise projects.\nLet's Get Started...",
      "target_audience": [
        "Anyone who wants to learn SoapUI from scratch",
        "Anyone interested to learn API testing"
      ]
    },
    {
      "title": "HP UFT Online Training, HP QTP Online Course, free videos",
      "url": "https://www.udemy.com/course/automation-testing-hp-uft-unified-functional-testing-qtp/",
      "bio": "Foundation course for beginners to start working on automation testing tool HP UFT Unified functional testing",
      "objectives": [
        "At the end of the course my students are able to handle common concepts of HP UFT with some VB Script"
      ],
      "course_content": {
        "Introduction to Automation Testing": [
          "Introduction to automation testing",
          "What is automation testing Of HP QTP and HP UFT",
          "what is Automaton",
          "Why Automation Testing Of HP QTP and HP UFT",
          "why is Automation",
          "Automation Testing process Of HP QTP and HP UFT",
          "Automation testing process",
          "Software testing tools Of HP QTP and HP UFT",
          "Software testing tools",
          "Test Case Selection Criteria Of HP QTP and HP UFT",
          "test case selection cretaria",
          "Selection Criteria of tool Of HP QTP and HP UFT",
          "Selection cretaria of tool",
          "Version History Of HP QTP and HP UFT",
          "Version History Of HP QTP and HP UFT",
          "Difference Between HP QTP and HP UFT",
          "Difference BetweenHP QTP and UFT"
        ],
        "HP UFT License mechanism, How to create a test, run test, etc.": [
          "UFT Add-in Manager Of HP QTP and HP UFT",
          "UFT Add-in Manager",
          "UFT_License Types Of HP UFT and HP QTP",
          "UFT_License Types",
          "Record and Run Settings Of HP QTP and HP UFT",
          "RecordAndRunSettings",
          "Create First Script Of HP QTP and HP UFT",
          "Create First Script",
          "Open Existing Test Script Of HP QTP and HP UFT",
          "Open Existing Test SCript",
          "Analyze Test Results Of HP QTP and HP UFT",
          "Analyze Test Results"
        ],
        "HP UFT Object Repository, object spy, Regular Expressions": [
          "Test and Run Objects Of HP QTP and HP UFT",
          "Test and Run Object",
          "Types Of Object Repository Of HP QTP and HP UFT",
          "Types Of Object Repository",
          "Object Repository Manager Of HP QTP and HP UFT",
          "Object Repository Manager",
          "Object Spy and Test Objects Of HP QTP and HP UFT",
          "Object Spy And Test Objects",
          "Regular Expressions In UFT Of HP QTP and HP UFT",
          "Regular Expressions In UFT"
        ],
        "HP UFT parameterization using Data Table and Excel": [
          "Parameterization_Data Table Of HP QTP and HP UFT",
          "Parameterization_DataTable",
          "Parameterization_Import Xls Of HP QTP and HP UFT",
          "Parameterization_ImportXls"
        ],
        "HP UFT Checkpoints": [
          "Standard Check Point Of HP QTP and HP UFT",
          "Standard Check point",
          "Bit Map Check Point Of HP QTP and HP UFT",
          "Bit map check point",
          "Text Check Point Of HP QTP and HP UFT",
          "Text check point",
          "Text Area Check Points Of HP QTP and HP UFT",
          "Text Area check point",
          "File Content Check Point Of HP QTP and HP UFT",
          "File Content Check point"
        ],
        "HP UFT Output values": [
          "Output Value Types Of HP QTP and HP UFT",
          "Output Value_Types",
          "Standard Output Value in HP QTP and HP UFT",
          "Standard Output Value",
          "Text Output Value in HP UFT and HP QTP",
          "Text Output Value"
        ],
        "HP UFT Actions": [
          "Types of Actions IN HP UFT and HP QTP",
          "Actions_Types Of Actions",
          "Transactions in HP UFT and HP QTP",
          "Transactions",
          "Copy And Existing Actions of HP UFT and HP QTP",
          "Copy And Existing Actions"
        ],
        "HP UFT VB Script": [
          "Fundamentals of VB Script Of HP QTP and HP UFT",
          "VB Script Basics",
          "Conditional statements Of HP QTP and HP UFT",
          "Conditional Statements",
          "Conditional Loop statements Of HP QTP and HP UFT",
          "Conditional Loop Statements",
          "Procedures and Sub and Functions Of HP QTP and HP UFT",
          "Procedures_Sub_Functions",
          "How To Call A Function in VB Script in HP UFT and HP QTP",
          "How To Call A Function"
        ],
        "HP UFT Debugging": [
          "Debugging_Bp Of HP UFT and HP QTP",
          "Debugging_BP",
          "Debugging_Pane Of HP UFT and HP QTP",
          "Debugging_Pane"
        ],
        "Resume Prep and Mock Interview": [
          "How to build a good resume on HP UFT Unified Functional testing"
        ]
      },
      "requirements": [
        "We recommend students to install HP UFT from hp.com and ready with your software. So that students can practice after each topic."
      ],
      "description": "HP UFT ( Unified functional testing ) formerly known as HP QTP course covers foundation of why automation, how to automate and many other topics.\nThis course will help the student to jump start their career in automation testing world. Quiz at the end of the video and interview questions are covered.\nFollowing topics are covered in this course.\nWhat is Automation Testing, Benefits of automation Testing\nAutomation testing process (Automation Testing Life cycle)\nDifferent testing tools available in the market for automation testing\nSelection criteria for the manual test cases to be automated\nEvaluate the tool/Selection criteria of tool, Version history of HP QTP | HP UFT\nDifference between HP QTP and HP UFT\nHP UFT license types, Add-in Manager, Record and Run settings window\nFirst test script using HP UFT, record and run the script in HP UFT With SystemUtil.Run and without SystemUtil.Run,How to save script?\nHow to open an existing test script in HP UFT ?\nAnalyse test results window, Different objects in HP Unified Functional Testing Tool - UFT ( QTP )\nWhat is  Test object and Run time object,Object repository- Local Repository- Shared repository\nObject Repository Manager, How UFT identifies Objects\nObject Spy, Test Objects, local object repository, How to associate the repositories to the test,  Advanced Concepts about Object Repository.\nRegular expressions in HP UFT, Parametrisation in HP UFT ( QTP ) | What is Data driven testing ?  What is Keyword driven testing in HP UFT ?\nParameterization conceptin HP UFT, Working with Datatable, Working with data table methods, Difference between Editor view and Keyword view,\nParameterization concept in HP UFT using Importing Excel sheet , Create a script with multiple test data ,(Test the login functionality with multiple user names and passwords)\nWhat is checkpoint in HP UFT (QTP), Different Checkpoints in HP UFT\nHow to insert standard check point in HP UFT\nHow to insert Text check point in HP UFT\nHow to insert text area check point in HP UFT\nHow to insert image check point in HP UFT\nHow to insert bitmap check point in HP UFT\nWhat is output value in HP UFT ( QTP),  Types of Output values Standard Output value and Text Output value\nHow to insert Standard Output value in HP UFT ( QTP )?    How to insert Text Output value in HP UFT ( QTP )?\nTransactions- Need of transactions- Insert transactions during recording in UFT\nWorking with Actions in HP UFT- Non reusable actions- Re usable actions- External actions, Call to Existing Action and Call to Copy of Actions,\nIntroduction to VB Script- VB Script Introduction-\nData Types, Variables, Conditional statements (IF, Select), Conditional Loops - For Loop, Procedures – Sub and Functions, VB script function in QTP | HP UFT, How to call a function in QTP | HP UFT\nFunction Library, How to write Sub Procedure in HP UFT, What is Debugging ? how to debug script in HP UFT.For more advanced level course, please register our advanced HP UFT course from H2K Infosys.",
      "target_audience": [
        "If student has some basic knowledge or experience about Manual testing and want to start career in Automation testing using HP UFT, this course helps students to understand the foundation course on HP UFT to learn how to record, play , develop basic scripts. Before jump into advanced level HP UFT, please take this course and become familiar with HP UFT.",
        "If you already have basic practical experience in HP UFT, please register for our advanced HP UFT course. This course is only for foundation level."
      ]
    },
    {
      "title": "Jump Start in Automation - Selenium WebDriver with Python",
      "url": "https://www.udemy.com/course/jump-start-in-automation-testing-with-python-selenium2016/",
      "bio": "Build Your Career in Automation Testing with Selenium WebDriver in Simple Python. It's easy and Fun..!",
      "objectives": [
        "Understand Testing Concepts and it's best practices",
        "Use Selenium for Automation Tasks!"
      ],
      "course_content": {
        "COURSE OVERVIEW": [
          "Welcome and Introduction",
          "How to reach me anytime? it's easy..!"
        ],
        "INTRODUCTION TO TESTING": [
          "Test Case creation-Part 1",
          "Test Case creation-Part 2",
          "What is testing ? Understand the basics",
          "Roles and Responsibilities of a Test Team Lead or Manager",
          "Roles and Responsibilities of a Tester",
          "Sample Resume Download"
        ],
        "INSTALLATIONS & CONFIGURATIONS: Windows, MAC": [
          "Python Installation on Windows",
          "Python Installation on MAC",
          "Python Installation on MAC - Notes Download",
          "Python Installation on Linux",
          "Selenium Installation using pip",
          "Selenium Installation using Pycharm"
        ],
        "PYTHON: Your First Program in Python": [
          "Hello World - Program",
          "Pycharm Installation",
          "Comment in Python - Single Line and Multi Lines",
          "Python Data Types"
        ],
        "PYTHON BASICS: Gear-Up the Programmer within..!": [
          "If and Else statements in Python",
          "Nested If statements in Python"
        ],
        "SELENIUM: Your First Program on Web Automation": [
          "Hello Selenium - Know your Test",
          "Hello Selenium - Write Your First Program Code",
          "Running Your Selenium Code",
          "Adding More Functionalities to Your Test",
          "Selenium Program - Notes Download"
        ],
        "CROSS BROWSER TESTING: Test Your Code on Different Web Browsers": [
          "Introduction to Cross Browser Testing",
          "Pre-requisite for Cross Browser Testing",
          "Run Your Test in Google Chrome",
          "Run Your Test in Firefox Browser ***NEW***"
        ],
        "WEB ELEMENTS IN SELENIUM: Techniques to Locate Web Elements in Selenium": [
          "Tool Support for Locate Web Elements",
          "Tools - installation",
          "Understand Your Tools",
          "Locate Web Element with ID",
          "Locate Web Element with Name",
          "Locate Web Element with Class",
          "Locate Web Element with Link",
          "Locate Web Element with Partial Link",
          "Locate Web Elements - Program Notes Download"
        ],
        "ADVANCED TECHNIQUES: Locating Web Elements in Selenium": [
          "Locating Web Element with Xpath",
          "How to Write Custom Xpath",
          "How to Write CSS Selector",
          "Xpath & CSS - Notes Download"
        ],
        "ADVANCED TECHNIQES: Learn Selenium with Live Projects": [
          "Automate Amazon.com : Live Project - Part1",
          "Automate Amazon.com : Live Project - Part2"
        ]
      },
      "requirements": [
        "Excitement to learn Web Automation with latest Selenium WebDriver release",
        "Installation setup including Python knowledge is taken care as part of course",
        "You get the best learning experience with Life Time instructor support. Any queries can be posted in discussion board or can contact me directly, you get a responds in less than 12 hours"
      ],
      "description": "BECOME A WEB AUTOMATION SUPERHERO!\nCOURSE CONTINUALLY UPDATED SINCE LAUNCH - LAST UPDATE SEP 30, 2018\nYou are about to learn, the best comprehensive course in Web Automation Testing: You will Learn Selenium, Python and Manual Testing. All you need to secure your dream job in Automation testing or for a Top Learning experience!\nNothing is Impossible, we're hear to help you on your journey. Join us! Your Career will never be the same again..!\n\nHere Is What You Get By Enrolling In This Course:\nWord-By-Word Explanation: In the entire course, I explain each line of code, without skipping a single line of code.\nWell Structured & Easy To Learn: Course has been specially designed to make it easy for the students to learn Testing Concepts, Why Automation Testing, Python and Selenium.\n24 X 7 Support: I will always be there to guide you in your journey to become an Automation Test Engineer.\nNote: Student queries and problems will be answered immediately.\n_________________________________________________________________________\nHere Is Everything You Will Learn In This Complete Course:\nThe Complete Course is divided into 3 Major sections\nSection 1. Software Testing\nSection 2. Python\nSection 3. Selenium\nSection 4 : Robot Framework\n_________________________________________________________________________\nSo let's begin the journey of becoming a Web Automation Test Engineer!\n\nIn addition to the Udemy 30-day money back guarantee,you have my personal guarantee that you will love what you learn in this course. If you ever have any questions please feel free to message me directly and I will do my best to get back to you as soon as possible!\n_________________________________________________________________________\nMake sure to enroll in the course before the price changes.\nTake yourself one step closer towards becoming a professional Automation Test Engineer by clicking the \"take this course button\" now!\nJoin the journey.\nSincerely,\nJoby Joseph",
      "target_audience": [
        "Beginners who have never programmed before",
        "Programmers switching to Web Automation Testing",
        "Intermediate Selenium programmers who want to level up their skills!"
      ]
    },
    {
      "title": "Ansible Automation For Beginners to Advance - Step by Step",
      "url": "https://www.udemy.com/course/ansible-the-complete-automation-hands-on-guide-devops-beginners/",
      "bio": "Mastering Ansible, Ansible AWS, Ansible Tower, Automation, Network",
      "objectives": [
        "Configure Ansible roles with tasks, handlers, files, templates, and default variables",
        "Test and troubleshoot Using Ansible",
        "Able to Optimize Ansible playbook",
        "Able to Write Write Ansible configuration playbooks to deploy a 3-tier web application"
      ],
      "course_content": {
        "Getting started with Ansible": [
          "Introduction",
          "Configuration Management",
          "Installing Ansible"
        ],
        "Ansible with Vagrant": [
          "Environment Setup"
        ],
        "Basics of Ansible": [
          "Inventory",
          "Configuration File",
          "Patterns",
          "Ad-Hoc commands"
        ],
        "Foundation": [
          "Introduction to YAML",
          "Playbook Execution",
          "Dynamic Inventory"
        ],
        "Playbook": [
          "Packages with items",
          "Services and Handlers",
          "Files",
          "Introduction to Jinja2 Template",
          "Database Modules",
          "Stack Status",
          "Lab - Node.js app Server",
          "Summary - What You learn!"
        ],
        "Lab - LAMP Server with Drupal": [
          "Part 1 - Basic LAMP Server Setup",
          "Part 2 - Configure Apache",
          "Part 3 - Configure PHP and MySQL",
          "Part 4 - Install Composer and Drush",
          "Part 5 - Install Drupal and LAMP Server Execution"
        ],
        "Ansible Playbooks - Beyond the Basics": [
          "Includes",
          "Roles",
          "Ansible Galaxy",
          "Variables",
          "Conditionals",
          "Delegation",
          "Tags",
          "Lookups",
          "Prompts",
          "Vault",
          "Summary - What you learn from the topic!"
        ],
        "Ansible Playbooks - Special Topics": [
          "Start and Step",
          "Gather Facts Optimization",
          "Check Mode (\"Dry Run\")",
          "Error Handling - Blocks"
        ],
        "COMPLETE PROJECT": [
          "DOWNLOAD THE PROJECT FILE"
        ]
      },
      "requirements": [
        "Linux or Mac OS X computer",
        "You'll need a terminal and ssh client for running Ansible against target hosts",
        "Open Mind to learn New Technologies"
      ],
      "description": "Have You interested in automation using Ansible?\nBut don’t know where from You start?\nWell, this Ansible course will learn you, how you can Know Automation within few months.This is a professional  Ansible video course, created by an Automation Experts having 5+ years of experience in this field.This course starts with the architecture of Ansible. Ansible automation engine that’s automated cloud Multi-tier deployments provisioning configuration management application deployment intra service orchestration and many other IT needs.\n\nRadically simple IT automation about practical, abstracts items.Playbook in Ansible is written in YAML format, commonly used for configuration files.Ansible defines a rich set up of variables, individual for each system.The  Ansible course divided into six sections, starting with initial installation of Ansible and foundation concepts.\nWhat is Ansible?\nAnsible is an open-source IT automation platform.It can remove a huge drudgery  from your work life.It also  improve the scalability, consistency, and reliability of the IT environment. In this course, we’ll start to explore how to automate all the repetitive system administration tasks using Ansible.\nAnsible used for many applications where data is being stored. Most of them which are defined previously to enable more flexibility in Ansible playbooks and roles. Apart from this uses values, Access various information like the hostname of the system and replace certain strings in templates with specific values. There is naming variable. Variable Names should be letters, numbers or underscores.\nMastering Ansible is a step by step journey of learning Ansible for configuration management and orchestration.Interesting Ansible course is designed by a journey through configuring a practical application stack from the ground.In addition the concepts of configuration management of Ansible we spent the time to build some tools to maintain troubleshoot our application.\nThe Ansible course is designed mainly for the introduction of Ansible but at the same time its a guide for Engineers interested in Ansible configuration management and orchestration, IT automation, infrastructure as code DevOps principles.Here is no required for previous programming and automation experience.\nWhat is in this Ansible course?\nThe Ansible course introduces a beginner to basic fundamental of Ansible that you can easily do hands-on exercises right in the browser.The course provides basic use cases of Ansible followed by the introduction of an Ansible inventory, Configuration Management, patterns,\nPlaybooks, Modules, Conditionals, Loops and Roles, Ansible With Vagrant.\nLet's have a quick look what you are going to discuss throughout the whole course!\nAnsible Inventory: At the same time Ansible works against multiple systems in your infrastructure. It does this by selecting portions of systems listed in Ansible inventory.\nAnsible Configuration Management: Ansible is the simplest solution for configuration management.The descriptive data (both human readable and machine parsable) ensuring everyone and able to understand the meaning of each Configuration task.configuration management designed for consistent secure and highly reliable with the extremely low learning curve for Administrators, developers and IT manager.\nAnsible Playbooks: Playbooks are Ansible’s configuration, deployment, and orchestration language. Many Ansible’s application which defined previously to enable more flexibility in playbooks.\nAnsible With Vagrant: Ansible With Vagrant allows to provides the guest using Ansible Playbooks by executing Ansible Playbook from Vagrant host.General Ansible concepts like playbook or inventory are shortly explained in the introduction of Ansible With Vagrant.\nAnsible Modules: The section discuss how to develop, debug, review and test modules. A number of Modules in Ansible ship called The Modules Library which can be executed mainly on a remote host or through playbooks.\n\n\nWhat is so special in this Ansible course?\nThe course is very simple, awesome, easy to understand, agentless, parallel execution, automatic reporting easy to use and at the same time it is a time saver, In a few months you know the course and become more productive in your own goal. This is the one and the only Ansible course that provisions coding exercise were you can practice Ansible Playbook right in your browser.\nHow does Ansible work?\nAnsible connecting your nodes and pushing out small programs.Ansible works very simple and different way of setting up the Architecture, SSH keys and their roles and Managing Inventory.\nHow does Ansible Playbook work?\nAnsible playbook works as an Ansible configuration, deployment, and orchestration language.The playbook can finely orchestrate multiple slices of your infrastructure topology with very detail control over how many machines to tackle at the same time.\nHow does Ansible Tower work?\nAnsible tower works as a scale IT automation, manage complex deployments and speed productivity.The Ansible tower allows us to easily streamline the delivery of applications and service to both OpenStack and Amazon clouds in a cost-effective simple and secure manner.\nHow does Ansible Vault work?\nAnsible Vault is a feature of Ansible that keeps sensitive data such as password or keys in encrypted files rather than a plaintext in playbook or role.Ansible Vault encrypts anything inside a YAML file, with a password in your own choice.The vault file can distribute or place in source control.\nWhat are the steps to start Ansible?\nAt first, Ansible installs your local machine.In order for Ansible to connect your VPS, you need to specify its IP address within Ansible host file.Test out your configuration by pinging your VPS for\n\n\nIf you are interested you can go through the article bellow:-\n.................................................................................................................................................\nIn a previous guide, we discussed how to install the Ansible software and learn basic commands. In this guide, we will discuss Ansible playbooks, which are Ansible's way of creating automated scripts to configure client computers.\nWe will assume that you have a configured Ansible server and a few clients, just as we left off in the last tutorial. In our guide, the server is a Ubuntu 12.04 machine, and the clients that we are going to be configuring are also Ubuntu 12.04 machines, for ease of explanation.\nWhat are Ansible Playbooks?\nAnsible playbooks are a way to send commands to remote computers in a scripted way. Instead of using Ansible commands individually to remotely configure computers from the command line, you can configure entire complex environments by passing a script to one or more systems.\nAnsible playbooks are written in the YAML data serialization format. If you don't know what a data serialization format is, think of it as a way to translate a programmatic data structure (lists, arrays, dictionaries, etc) into a format that can be easily stored to disk. The file can then be used to recreate the structure at a later point. JSON is another popular data serialization format, but YAML is much easier to read.\nEach playbook contains one or more plays, which map hosts to a certain function. Ansible does this through something called tasks, which are basically module calls.\nExploring a Basic Playbook\nLet's look at a basic playbook:\n--- - hosts: droplets   tasks:     - name: Installs nginx web server       apt: pkg=nginx state=installed update_cache=true       notify:         - start nginx   handlers:     - name: start nginx       service: name=nginx state=started\nLet's break this down in sections so we can understand how these files are built and what each piece means.\nThe file starts with:\n---\nThis is a requirement for YAML to interpret the file as a proper document. YAML allows multiple \"documents\" to exist in one file, each separated by ---, but Ansible only wants one per file, so this should only be present at the top of the file.\nYAML is very sensitive to white-space, and uses that to group different pieces of information together. You should use only spaces and not tabs and you must use consistent spacing for your file to be read correctly. Items at the same level of indentation are considered sibling elements.\nItems that begin with a - are considered list items. Items that have the format of key: value operate as hashes or dictionaries. That's pretty much all there is to basic YAML.\nYAML documents basically define a hierarchical tree structure with the containing elements further to the left.\nOn the second line, we have this:\n--- - hosts: droplets This is a list item in YAML as we learned above, but since it is at the left-most level, it is also an Ansible \"play\". Plays are basically groups of tasks that are performed on a certain set of hosts to allow them to fulfill the function you want to assign to them. Each play must specify a host or group of hosts, as we do here.\nNext, we have a set of tasks:\n--- - hosts: droplets   tasks:     - name: Installs nginx web server       apt: pkg=nginx state=installed update_cache=true       notify:         - start nginx\nAt the top level, we have \"tasks:\" at the same level as \"hosts:\". This contains a list (because it starts with a \"-\") which contains key-value pairs.\nThe first one, \"name\", is more of a description than a name. You can call this whatever you would like.\nThe next key is \"apt\". This is a reference to an Ansible module, just like when we use the ansible command and type something like:\nansible -m apt -a 'whatever' all\nThis module allows us to specify a package and the state that it should be in, which is \"installed\" in our case. The update-cache=true part tells our remote machine to update its package cache (apt-get update) prior to installing the software.\nThe \"notify\" item contains a list with one item, which is called \"start nginx\". This is not an internal Ansible command, it is a reference to a handler, which can perform certain functions when it is called from within a task. We will define the \"start nginx\" handler below.\n--- - hosts: droplets   tasks:     - name: Installs nginx web server       apt: pkg=nginx state=installed update_cache=true       notify:         - start nginx   handlers:     - name: start nginx       service: name=nginx state=started\nThe \"handlers\" section exists at the same level as the \"hosts\" and \"tasks\". Handlers are just like tasks, but they only run when they have been told by a task that changes have occurred on the client system.\nFor instance, we have a handler here that starts the Nginx service after the package is installed. The handler is not called unless the \"Installs nginx web server\" task results in changes to the system, meaning that the package had to be installed and wasn't already there.\nWe can save this playbook into a file called something like \"nginx.yml\".\nJust for some context, if you were to write this same file in JSON, it might look something like this:\n[     {         \"hosts\": \"droplets\",         \"tasks\": [             {                 \"name\": \"Installs nginx web server\",                 \"apt\": \"pkg=nginx state=installed update_cache=true\",                 \"notify\": [                     \"start nginx\"                 ]             }         ],         \"handlers\": [             {                 \"name\": \"start nginx\",                 \"service\": \"name=nginx state=started\"             }         ]     } ]\nAs you can see, YAML is much more compact and most people would say more readable.\nRunning an Ansible Playbook\nOnce you have a playbook built, you can call it easily using this format:\nansible-playbook playbook.yml\nFor instance, if we wanted to install and start up Nginx on all of our droplets, we could issue this command:\nansible-playbook nginx.yml\nSince the playbook itself specifies the hosts that it should run against (namely, the \"droplets\" group we created in the last tutorial), we do not have to specify a host to run against.\nHowever, if we would like to filter the host list to only apply to one of those hosts, we can add a flag to specify a subset of the hosts in the file:\nansible-playbook -l host_subset playbook.yml\nSo if we only wanted to install and run Nginx on our \"host3\", we could type this:\nansible-playbook -l host3 nginx.yml\nAdding Features to the Ansible Playbook\nRight now our playbook looks like this:\n--- - hosts: droplets   tasks:     - name: Installs nginx web server       apt: pkg=nginx state=installed update_cache=true       notify:         - start nginx   handlers:     - name: start nginx       service: name=nginx state=started\nIt is simple and it works, but all it is doing is installing a piece of software and starting it. That's not very beneficial by itself.\nWe can start to expand the functionality by adding tasks to our playbook.\nAdd a Default Index File\nWe can tell it to transfer a file from our Ansible server onto the host by adding some lines like this:\n--- - hosts: droplets   tasks:     - name: Installs nginx web server       apt: pkg=nginx state=installed update_cache=true       notify:         - start nginx     - name: Upload default index.html for host       copy: src=static_files/index.html dest=/usr/share/nginx/www/ mode=0644   handlers:     - name: start nginx       service: name=nginx state=started\nWe can then make a directory called static_files in our current directory and place an index.html file inside.\nmkdir static_files nano static_files/index.html\nInside of this file, let's just create a basic html structure:\n<html>   <head>     <title>This is a sample page</title>   </head>   <body>     <h1>Here is a heading!</h1>     <p>Here is a regular paragraph.  Wow!</p>   </body> </html>\nSave and close the file.\nNow, when we re-run the Ansible playbook, Ansible will check each task. It will see that Nginx is already installed on the host, so it will leave it be. It will see the new task section and replace the default index.html file with the one from our server.\nRegistering Results\nWhen you are installing and configuring services manually, it is almost always necessary to know whether your actions were successful or not. We can cook this functionality into our playbooks by using \"register\".\nFor each task, we can optionally register its result (failure or success) in a variable that we can check later on.\nWhen using this functionality, we also have to tell Ansible to ignore errors for that task, since normally it aborts the Ansible playbook execution for that host if any trouble happens.\nSo, if we want to check whether a task has failed or not to decide on subsequent steps, we can use the register functionality.\nFor instance, we could tell our Ansible playbook to upload an index.php file if it exists. If that task fails, we could instead try to upload an index.html file. We will check for the failure condition in the other task because we only want to upload the HTML file if the PHP file fails:\n--- - hosts: droplets   tasks:     - name: Installs nginx web server       apt: pkg=nginx state=installed update_cache=true       notify:         - start nginx     - name: Upload default index.php for host       copy: src=static_files/index.php dest=/usr/share/nginx/www/ mode=0644       register: php       ignore_errors: True     - name: Remove index.html for host       command: rm /usr/share/nginx/www/index.html       when: php|success     - name: Upload default index.html for host       copy: src=static_files/index.html dest=/usr/share/nginx/www/ mode=0644       when: php|failed   handlers:     - name: start nginx       service: name=nginx state=started\nNote: We have not configured our host to handle PHP files at this time, so even if you did upload a PHP file, it would not be processed correctly.\nThis new version tries to upload a PHP index file to the host. It registers the success of the operation into a variable called \"php\".\nIf this operation was successful, the task to remove the index.html file is run next.\nIf the operation failed, the index.html file is uploaded instead.\nConclusion\nNow, you should have a good handle on how to automate complex tasks using Ansible. This is a basic example of how you can begin to build your configuration library in Ansible .\nCombining host and group definitions as we learned about in the first tutorial, and using available variables to fill in information, we can begin to put together complex computer systems that interact with each other. In a future article, we will discuss how to implement variables into our Ansible playbooks and create roles to help manage complex tasks.",
      "target_audience": [
        "Who want to Learn Ansible Hands On!",
        "Interested about DevOps Technologies"
      ]
    },
    {
      "title": "New to Python Automation ? Step by Step Python 4 Tester-2025",
      "url": "https://www.udemy.com/course/step-by-step-python/",
      "bio": "Step by Step Python | Excel Handling | Pytest Framework | Web Scrapping | Test Data Generation",
      "objectives": [
        "Expert level knowledge with practical exposer of Python for Realtime implementation",
        "Ready to implement python with different automation tools like Selenium or Appium",
        "Ready to face Python interviews(Python Automation Interviews)",
        "Ready to implement python based framework for different types of Automation(Web, API & Utility)",
        "Expert Level understanding of different libraries like OpenPyXL, CSV etc",
        "Ready to write different Manual Testing utilities using Python"
      ],
      "course_content": {
        "Introduction & Environment Setup- Python | Pycharm | PIP | Libraries": [
          "Why as a Tester we need to learn Python",
          "*** Course Architecture : Must for Everyone ***",
          "Step 1 : Setup Python on Windows Machine with Environment Variable",
          "Step 2 : Setup Pycharm - Editor fort Python Programming",
          "Step 3 : Setup PIP : Package Manager for Python"
        ],
        "Getting start with basic PYTHON Programming": [
          "Download Code & Use it while learning",
          "First Python Code : Create Python File, Comments & Print on Console",
          "How to Declare and use Variables in Python",
          "How to take user input and use it in programming",
          "Constraints and Type Casting",
          "Standard datatypes in Python : Number, String, List, Tuple & Dictionary",
          "Its time for Quiz: - Basic Python Programming",
          "Code for Reference - Use the given code and try executing on your machine",
          "Programming Exercise 1: User Input with Concatenation (with solution)",
          "Programming Exercise 2 : User Input with Type Casting (with solution)",
          "Document for Students Reference"
        ],
        "Control Execution using Condition Handling, Practical Examples and Exercise": [
          "Download Code & Use it while learning",
          "Condition Handling using If : Handle Single Condition",
          "Condition Handling using If : Handle 2 Conditions",
          "Multiple Condition Handling (If - Elif - else) with practice exercise",
          "Nested Condition Handling (Condition inside Condition)",
          "Condition Handling with Logical OR and Logical AND",
          "Condition Handling Task **** Task 1 - Find Largest and Lowest among 3 numbers",
          "Condition Handling Task **** Task 2 - Find number is complete divisible",
          "Condition Handling Task **** Task 3 - Find number of days in a month",
          "Condition Handling Task **** Task 4 - Triangle -EQUILATERAL|SCALENE|ISOSCELES",
          "Condition Handling Task **** Task 5 - Find Grade by calculating percentage",
          "**** Solution of Given Programming Exercise ****",
          "Check Your Knowledge"
        ],
        "Do Execution with --Loops -- | For, While, Break and Continue": [
          "Introduction of Loops - Why and Where to use Loops",
          "For Loop with Final Range - Run code until the given condition(value) reach",
          "For Loop with initial and final range -Run code between given range",
          "For loop with increment value - Run code with different increment value",
          "For loop with decrement value - Run code with different decrement value",
          "For loop with list - Running a loop on the List of values",
          "While Loop with increments - How to use while loop with increment condition",
          "While loop with decrement - How to use while loop with decrement condition",
          "Break Statement - When Loop in-between when a given condition match",
          "Continue Statement - Skip remaining part of Loop when condition match",
          "Else Statement - Execute some code once the loop is completed"
        ],
        "Programming for Realtime Work & Interview Preparation": [
          "Practical Programming - 1 :Take 2 input from user and interchange variable value",
          "Practical Programming - 2 : Print Rectangle",
          "Practical Programming - 3 : Print table where only display selective numbers",
          "Practical Programming - 4 : Write program to find factorial of a number",
          "Practical Programming - 5 : Write program to Generate Fibonacci series",
          "Practical Programming - 6 : Write program to check Number is Prime or Not",
          "Programming Solutions"
        ],
        "How to do String Handling -Must for Interview Preparation & Real Automation Work": [
          "What is String, How to Define String - Perform operation like Concat & Repeat",
          "String : Fetch Substring - By giving Start and End index values",
          "Common String Functions - Length, Capitalize, Upper and Lower",
          "Common String Functions -lStrip, rStrip and Strip",
          "Common String Functions - Replace Data, Find Data and Split Data",
          "Compare 2 Strings in Python with Practical Examples"
        ],
        "Complex Data Types | Work with List, Tuples and Dictionary": [
          "What is List - Fetch Data from the List",
          "How to Insert, Fetch, Update and Remove data from List",
          "What is Tuple - Difference between List and Tuple",
          "Concatenate Tuple, Tuple Write Operations",
          "What is Dictionary - How to define and use Dictionary in Python",
          "Dictionary Methods - Find all Keys & Value"
        ],
        "Functions in Detail": [
          "Functions Basics",
          "Rules to create functions",
          "Different types of functions",
          "Functions with return value",
          "Different types of arguments",
          "**** String and Function Task **** Compare String",
          "**** String and Function Task **** Compare String -2",
          "**** String and Function Task **** Find Sub String",
          "**** String and Function Task **** Compare String -3",
          "**** String and Function Task **** Reverse String",
          "**** String and Function Task **** Check Palendrome",
          "**** String and Function Task **** Find String Length",
          "**** String and Function Task **** Count words in String",
          "**** String and Function Task **** Remove Spaces"
        ],
        "Class in Python": [
          "Create first class",
          "Functions in Class",
          "Class & Object(Code)",
          "Constructors",
          "Why and Where we use constructors",
          "Create Object in another file"
        ],
        "Modules": [
          "What is Module",
          "How to Use Modules",
          "Creating Project Structure",
          "Difference between import and from-import"
        ]
      },
      "requirements": [
        "Basic understanding of Windows Operating System",
        "Good to have understanding of Manual Testing, Processes, Functional & Regression Testing",
        "Should be ready to invest at least 30mins a day for practice and concept implementation"
      ],
      "description": "Course Updates\nMay 2024  :  Updated Condition Handling and Looping videos\nNov 2021:  Added Data Generation Project\nApr 2021 :  Updated video quality\n\n\nLooking to Automate your testing stuffs using Python ? Then you are on the right place.\nThis course will help you to understand and Learn Python programming from Scratch to Expert Level. It is specially designed by keeping Software Testing in mind so almost all already/libraries of Python which are required in automation would be covered in his course.\n\n\nPython in not just use for web browser automation but also can use for following\n\nRead | Search  & validate data in excel\nHave to pull text off of several web pages?\nCopy thousands of files from one location to another\nPerform repeatable tasks in single click\nRename multiple files & folders within a second.\nPython can help in automating tasks like -\n\n\nSetting up environments for testing\nAnalyzing data.\nExtracting performance data\nAutomate API\nAutomate Web Applications\nGenerate test Data\nCourse Coverage\n\n\nStep by Step Setup\nWhy to Learn Python as Software Tester\nBasic Programming\nModules\nOOPS Concepts\nOpenPyXl\nWorking with Notepad and CSV\nPytest Framework\nInterview Question\nPractical Implementation\nPractice Exercises\nRealtime Scenario\nBest Practices\n\nAfter this course, you will be eligible to implement your knowledge to make Testing Utilities using Python and also ready to automation different types of application (Web, API) using Python, Most common tools available in market which support python are following, you will be ready to work on these tools after completing this course\nSelenium with Python\nAPI Testing using Python\nAppium with Python\nRobot Framework",
      "target_audience": [
        "Manual Testers Looking Opportunity in Python Automation",
        "Automation testers looking to switch to Selenium or Appium with Python",
        "Professional want to automate web application or API through Python programming",
        "Any professional want to start carrier in python Automation",
        "Freshers looking for opportunity in Automation Testing"
      ]
    },
    {
      "title": "WebServices testing (RestSharp + Postman) Complete Guide",
      "url": "https://www.udemy.com/course/webservices-testing-restsharp-postman-complete-guide/",
      "bio": "2 in 1! Learn API testing from zero and build Test Automation with minimum toolset: C#, NUnit, RestSharp, Newtonsoft",
      "objectives": [
        "Postman basics",
        "API baiscs",
        "REST API",
        "RESTful Web Services",
        "HTTP methods",
        "HTTP status codes",
        "JSON schemas",
        "API testing",
        "NUnit 3 basics",
        "NuGet basics",
        "DotNet Console basics",
        "RestSharp basics",
        "NewtonsoftJson basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Communication plan",
          "How to Use Resources",
          "Tips to Improve Your Course Taking Experience"
        ],
        "API Basics": [
          "API and Web Service",
          "API Types Overview",
          "REST API Overview",
          "HTTP methods",
          "HTTP Status Codes"
        ],
        "Test Environment Setup": [
          "Postman Introduction",
          "Postman Installation",
          "Trello Account Creation",
          "Authorization Token Creation in Trello"
        ],
        "HTTP Method GET - Postman": [
          "GET Method Overview",
          "GET Method in Postman",
          "GET Method in Postman - Hometask",
          "JSON Schema Validation",
          "JSON Schema Validation - Hometask",
          "GET Method Validation in Postman",
          "GET Method Validation in Postman - Hometask"
        ],
        "HTTP Method POST - Postman": [
          "POST Method Overview",
          "POST Method in Postman",
          "POST Method in Postman - Hometask",
          "POST Method Validation in Postman",
          "POST Method Validation in Postman - Hometask"
        ],
        "HTTP Method PUT - Postman": [
          "PUT Method Overview",
          "PUT Method in Postman",
          "PUT Method in Postman - Hometask",
          "PUT Method Validation in Postman",
          "PUT Method Validation in Postman - Hometask"
        ],
        "HTTP Method DELETE - Postman": [
          "DELETE method overview",
          "DELETE Method in Postman",
          "DELETE Method in Postman - Hometask",
          "DELETE Method Validation in Postman",
          "DELETE Method Validation in Postman - Hometask"
        ],
        "Postman Tips": [
          "Variables in Postman"
        ],
        "API and Postman Knowledge Test": [
          "API and Postman Knowledge Test"
        ],
        "Development Environment Setup": [
          "Visual Studio Installation",
          "Dot Net Installation"
        ]
      },
      "requirements": [
        "Some basic knowledge in C#",
        "A computer with access to the internet",
        "Some basic knowledge in software testing"
      ],
      "description": "Are you ready to become a WebServices Testing expert, mastering both RestSharp and Postman? Look no further! This comprehensive course is your key to unlocking the world of API and WebServices testing.\nIn today's digital landscape, the reliability of WebServices is crucial. This course is your gateway to becoming a proficient API tester, harnessing the power of RestSharp and Postman to validate and optimize RESTful Web Services.\nWhat You Will Learn:\nPostman Basics: Start your journey with a solid foundation in Postman, whether you're a beginner or experienced user.\nAPI Basics: Grasp the essential concepts of APIs and understand their role in modern software development.\nREST API: Dive deep into Representational State Transfer (REST) APIs and learn how to interact with them efficiently.\nRESTful Web Services: Explore RESTful Web Services and discover how to validate their functionality effectively.\nHTTP Methods: Master various HTTP methods (GET, POST, PUT, DELETE, etc.) for diverse API operations.\nHTTP Status Codes: Learn to interpret HTTP status codes accurately, identifying success and potential issues.\nJSON Schemas: Work with JSON schemas to validate and structure API responses with precision.\nAPI Testing: Tackle practical API testing scenarios, from simple requests to complex workflows, ensuring the reliability of WebServices.\nNUnit 3 Basics: Gain proficiency in NUnit 3, a powerful unit testing framework for .NET, to structure and execute your tests seamlessly.\nNuGet Basics: Discover how to manage project dependencies efficiently using NuGet, simplifying the integration of external libraries.\nDotNet Console Basics: Build a strong foundation in using the .NET Console for debugging and executing your .NET code.\nRestSharp Basics: Explore the fundamentals of RestSharp, a popular .NET library for API testing, to create powerful test scripts.\nNewtonsoftJson Basics: Understand the basics of Newtonsoft.Json, a widely-used JSON framework for .NET, to handle JSON data efficiently.\nWhy Enroll in This Course?\nHands-On Experience: Develop practical skills through hands-on exercises, quizzes, and real-world API testing projects.\nExpert Guidance: Learn from experienced instructors with a deep understanding of WebServices testing and RestSharp.\nCareer Advancement: Enhance your career prospects by becoming a proficient WebServices Tester, a skill in high demand in the tech industry.\nLifetime Access: Enjoy lifetime access to course materials, updates, and join a supportive online community of learners.\nDon't miss this opportunity to become a WebServices Testing expert with both RestSharp and Postman. Enroll today and take the first step toward a rewarding career in API and WebServices testing!",
      "target_audience": [
        "Anyone who wants to learn how to test API using Postman",
        "Students who are seeking to work as Test Autoamtion Engineer",
        "Anyone who wants to learn how to build test applications using RestSharp"
      ]
    },
    {
      "title": "ISTQB Test Automation Engineer: 200 Practice Questions",
      "url": "https://www.udemy.com/course/istqb-test-automation-engineer-200-practice-questions/",
      "bio": "200 questions for the ISTQB TAE exam, based on the 2024 syllabus.",
      "objectives": [
        "Prepare for the ISTQB Test Automation Engineer certification exam",
        "Practice with 200 exam-style multiple-choice questions",
        "Improve understanding of advanced test automation topics",
        "Reinforce key concepts from the official syllabus (v2.0, 2024)",
        "Identify and close knowledge gaps",
        "Build exam confidence through realistic practice",
        "Review all major areas of the ISTQB CTAL-TAE syllabus"
      ],
      "course_content": {
        "Introduction": [
          "About instructor"
        ],
        "Introduction and Objectives for Test Automation": [
          "Quiz 1"
        ],
        "Preparing for Test Automation": [
          "Quiz 2"
        ],
        "Test Automation Architecture": [
          "Quiz 3"
        ],
        "Implementing Test Automation": [
          "Quiz 4"
        ],
        "Implementation and Deployment Strategies for Test Automation": [
          "Quiz 5"
        ],
        "Test Automation Reporting and Metrics": [
          "Quiz 6"
        ],
        "Verifying the Test Automation Solution": [
          "Quiz 7"
        ],
        "Continuous Improvement": [
          "Quiz 8"
        ],
        "Final Review": [
          "Final Review – Mixed Practice Questions"
        ]
      },
      "requirements": [
        "Basic understanding of software testing and test automation",
        "Familiarity with ISTQB Foundation Level concepts",
        "Motivation to prepare for the ISTQB CTAL-TAE certification"
      ],
      "description": "Exam Practice: ISTQB Test Automation Engineering\nThis course offers 200 exam-style questions designed to help you prepare for the ISTQB® Advanced Level Test Automation Engineer (CTAL-TAE) certification based on the 2024 syllabus (v2.0).\nEach question is carefully crafted to reflect the structure, difficulty, and terminology of the real exam. Detailed explanations are provided to reinforce your understanding and help you identify areas for improvement.\nWhether you're nearing your exam date or just beginning your preparation, this course is a valuable resource to test your knowledge, boost your confidence, and close any knowledge gaps.\n\n\nWhat You’ll Get:\n\n\n200 original questions covering all chapters of the CTAL-TAE syllabus\nSingle-correct-answer format (a, b, c, d) with detailed feedback\nMixed final module for full-exam simulation\nBased entirely on the official ISTQB v2.0 syllabus (2024)\nIdeal for self-assessment and last-minute review\n\n\nWho This Course Is For:\n\n\nTest Automation Engineers preparing for the ISTQB CTAL-TAE certification\nQA professionals seeking realistic practice before the exam\nAnyone wanting to test their understanding of advanced test automation concepts\n\n\nWhy Choose This Course:\n\n\nNo fluff – just focused exam preparation\nCreated by an experienced QA instructor and course author\nBased 100% on the latest ISTQB syllabus (2024)\nClear, practical explanations after every question\n\n\nTake the next step in your test automation career – and give yourself the best chance to pass the exam with confidence.",
      "target_audience": [
        "For anyone preparing for the ISTQB Test Automation Engineer (CTAL-TAE) exam",
        "For software testers and QA professionals interested in automation",
        "For learners who want to practice with realistic exam-style questions"
      ]
    },
    {
      "title": "Complete Automation Package -Selenium - Jmeter - SoapUI",
      "url": "https://www.udemy.com/course/complete-automation-package-selenium-jmeter-soapui/",
      "bio": "Get expertise in functional, Services and Performance automation",
      "objectives": [
        "Course is giving complete coverage in Selenium, Jmeter and SoapUI designed in such a way that after completing this course user can start work on real time projects of Soap & REST Services",
        "On course completion You will be expert in functional automation using Selenium, service automation using SoapUI and can implement Successfully it in your work place or will surely land on High Paying Job"
      ],
      "course_content": {},
      "requirements": [
        "User need machine with Windows OS",
        "Machine should be configured with latest Java",
        "User need to download and setup SoapUI free and paid version"
      ],
      "description": "The unique course on web which cover performance automation using Jmeter, Services automation using SoapUI and functional automation using Selenium\nCourse include many advance topics in Jmeter like Jmeter Plugins, Java programming in Jmeter, Performance monitoring etc.\nSoapUI section include many unique topics which you will not found anywhere on web like\nXQuery Assertion\nMessageExchange Object\nXML Holder\nCertification preparation\nHTML Monitoring\nJSON Parser\nIntegration with ANT and Jenkins\nTestRunner object\nHandling CData\nXpath Assertion\nOn course completion You will be Expert in SOAP/ REST API Testing and can implement Successfully it in your work place Also you will be in the position to automation realtime functional and performance scenario using Selenium and Jmeter\nCourse is designed in such a way that the user does not required to have any prior understanding any programming langiuage\nBy the End of this Course you will able to understand the webservices specifications and write all kind of effective Manual and Automation testcases (Functional/Security/Data Base Testcases) to test them in Soap ui by using different feauteres available on Tool",
      "target_audience": [
        "Manual testers who want to jump into automation",
        "Software testers looking for job change"
      ]
    },
    {
      "title": "In-Depth Software Testing Training Course From Scratch",
      "url": "https://www.udemy.com/course/qa-software-testing-training-course/",
      "bio": "QA Software Testing Training Course for ALL + Live Project + JIRA + Bugzilla + Resume and Interview Guidance",
      "objectives": [
        "LIVE PROJECT End to End Software Testing Training Included",
        "Learn Software Testing and Automation basics from a professional trainer from your own desk",
        "Information packed practical training starting from basics to advanced testing techniques",
        "Best suitable for beginners to advanced level users and who learn faster when demonstrated",
        "Course content designed by considering current software testing technology and the job market",
        "Practical assignments at the end of every session",
        "Practical learning experience with live project work and examples",
        "Lifetime enrollment - Pay one time fee and access video training sessions as many times as you want.",
        "Resume Preparation Guidance for Testers Included",
        "Software Testing Interview Questions and Preparation Tips Included",
        "Download Real Software Testing Templates like Test Plan, Test Cases and other important Templates",
        "Software Testing Certification Guidance",
        "Learn Test Management Tools like JIRA, and Bugzilla",
        "Get all future course updates free!"
      ],
      "course_content": {
        "Course Oveview": [
          "Read me: How to Follow this course?",
          "Course Overview Session",
          "Day 1 - Course Orientation"
        ],
        "Introduction to Software testing": [
          "Day 2 NEW - V model, Verification and Validation, QA Vs QC",
          "Day 3 - AUT, Types of Testing, Agile Methodology and Live Project Overview"
        ],
        "Test Scenario, Test Cases and Test Plan Writing": [
          "Day 4 - STLC and Test Scenarios",
          "Day 5 - ROI, Cost of Quality, FSD, Writing Test Cases",
          "Day 6 - Test Plan Complete Walkthrough",
          "Day 7 - Test case writing process, Test Data"
        ],
        "Test Execution": [
          "Day 8 - Test Execution, Traceability matrix, reviews, Status reporting"
        ],
        "Test Strategy and Defect Management": [
          "Day 9 - Defect management, Quality tools, Change management, version control"
        ],
        "JIRA and Bugzilla Tools and Resume preparation": [
          "Day 10 - Bugzilla, Testing certifications",
          "Day 11 - JIRA Test Management Tool",
          "Day 12 - Resume Preparation, Software SCM, Live project docs"
        ],
        "Automation Overview with QTP": [
          "Day 13 - Automation overview, HP QTP overview",
          "HP ALM (QC), Benchmarking"
        ],
        "Resume and Interview Preparation": [
          "Day 14 - Interview preparation, Questions and Answers"
        ]
      },
      "requirements": [
        "Anyone with basic computer knowledge can take this course."
      ],
      "description": "Learn & Master Software Testing Quickly from the experts - GUARANTEED!\nTHE IN-DEPTH SOFTWARE TESTING TRAINING  - By SoftwareTestingHelp Team\n*** \"TOP STUDENT PICK\" on Udemy in the Software Testing category!\n*** 26+ hours of HD content. Value for money!\n*** DON'T settle for other basic courses of less than 5 hours!\n\n\n*************************\n\n***Few Student reviews from hundreds of 5 star reviews:***\n\"The course is an eye opener into the world of IT\" - Theophilus\n\"Money well spent, excellent delivery. Very informative and practical. Would highly recommend to anyone interested in pursuing software testing as a career\" - Olanrewaju\n\"Truly the best software testing training I have come across both in dept and in substance.\" - Kingsley\n\"This is really \"The Best Software Training Course\". I hardly know anything regarding testing, instructor had taken utmost care in providing the knowledge starting from basics, the terminology etc...I am very much satisfied with this course. I strongly recommend this course.\" - Vijaya\n\"Great tutorials ..in detail ...learned a lot ...must see tutorial for all testers .\" - Masud\n\"The instructor is just a perfect lecturer! Entire course is very informative and useful for software testers as beginners with a lot of practical examples. Who wants to understand principles of testing and main techniques of it - enroll in this course.\" - Oleksii\n\"The instructor according to me.....God has gifted her a real talent to be one of the best tutors in this world.\" - Biju\n\n\n*************************\nIntroducing the Most Practical, Precise and Inexpensive Software Testing Course\n\nIt is going to include everything there is to know for you to become a perfect Software Tester.\nThis software testing QA training course is designed by working  professionals in a way that, course it will progress from introducing  you to the basics of software testing to advanced topics like Software  configuration management, creating a test plan, test estimations etc.  along with introduction and familiarity with Automation testing and  test management tools like QTP (intro), QC, JIRA, and Bugzilla.\n*************************\n\nCourse Benefits:\nSyllabus: We came up with a unique list of topics that will help you gradually work your way into the testing world.\nPractice sessions: Assignments in a way that you will get to apply the theory you learnt immediately.\nVideo sessions of Instructor led live training sessions\nPractical learning experience with live project work and examples\nSupport: Our Team is going to be available to you via email or the website for you to reach out to us.\nOver 15+ Lectures and more than 26+ hours of HD content!\nLearn Software Testing and Automation basics from a professional trainer from your own desk.\nInformation packed practical training starting from basics to advanced testing techniques.\nBest suitable for beginners to advanced level users and who learn faster when demonstrated.\nGet “Certificate of completion”.",
      "target_audience": [
        "Software Testers, Developers, Designer, Test Consultants, Test Leads, Test Managers, QA Engineers, QA leads and Managers, Business Analysts, Fresh Graduates, Students",
        "If you are a just college passout, this is EXACTLY what you are looking for to open the doors for your dream career",
        "If you are an experienced professional from ANY other field but wanted to be in software testing, this course will help you make this switch smoothly",
        "If you are an experienced testing professional, you will be amazed with the new things and advanced tactics you will learn to work efficiently and smartly in this field."
      ]
    },
    {
      "title": "ISTQB Certified Test Automation Engineer | CTAL-TAE V2 | New",
      "url": "https://www.udemy.com/course/istqb-certified-tester-test-automation-engineer-ct-ctal-tae-v2/",
      "bio": "Master Software Test Automation with excellence and become a cerfitified test automation engineer - ISTQB CT-TAE V2.0",
      "objectives": [
        "Prepare to get certified as an ISQTB CT-TAE or Test Automation Engineer",
        "The fundametals of test automation engineering",
        "Test automation configurations and selecting the right automation tools",
        "Explain how Test Automation Architecture (TAA) is designed and implemented in test automation",
        "How to implement automated tests alongside risk mitigation and maintainability",
        "Implementation and Deployment of Test Automation Solution (TAS) with CI/CD pipelines",
        "Collection and analysis of test automation metrics to help in reporting",
        "The verification process of the Testc Automation Solution",
        "The continous improvement process of Test Automation"
      ],
      "course_content": {
        "ISTQB CTAL-TAE V2 | Chapter 1: Introduction and Objectives for Test Automation": [
          "A Quick Update | Course Slides and Other Notes",
          "1.1.1 - Explain the Advantages and Disadvantages of Test Automation",
          "Q 1/40 - ISTQB Test Automation Engineer ( TAE 1.1.1 ) Exam Sample | CTAL-TAE V2",
          "1.2.1 - Explain How Test Automation is Applied Across Different SDLC Models",
          "Q 2/40 - ISTQB Test Automation Engineer ( TAE 1.2.1 ) Exam Sample | CTAL-TAE V2",
          "1.2.2 - Select Suitable Test Automation Tools For a Given System Under Test",
          "Q 3/40 - ISTQB Test Automation Engineer ( TAE 1.2.2 ) Exam Sample | CTAL-TAE V2"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 2: Preparing for Test Automation": [
          "2.1.1 - Configuration Needs of an Infrastructure that Enable T.A Implementation",
          "Q 4/40 - ISTQB Test Automation Engineer ( TAE 2.1.1 ) Exam Sample | CTAL-TAE V2",
          "2.1.2 (Part 1) - Explain How T.A is Leveraged within Different Environments",
          "2.1.2 (Part 2) - Explain How T.A is Leveraged within Different Environments",
          "Q 5/40 - ISTQB Test Automation Engineer ( TAE 2.1.2 ) Exam Sample | CTAL-TAE V2",
          "Q 6/40 - ISTQB Test Automation Engineer ( TAE 2.1.2 ) Exam Sample | CTAL-TAE V2",
          "2.2.1 - Analyze a SUT to Determine the Appropriate Test Automation Solution",
          "Q 7/40 - ISTQB Test Automation Engineer ( TAE 2.2.1 ) Exam Sample | CTAL-TAE V2",
          "2.2.2 - Illustrate the Technical Findings of a Tool Evaluation",
          "Q 8/40 - ISTQB Test Automation Engineer ( TAE 2.2.2 ) Exam Sample | CTAL-TAE V2"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 3: Test Automation Architecture": [
          "3.1.1 - Explain Major Capabilities in Generic Test Automation Architecture gTAA",
          "Q 9/40 - ISTQB Test Automation Engineer ( TAE 3.1.1 ) Exam Sample | CTAL-TAE V2",
          "3.1.2 - Explain How to Design a Test Automation Solution : TAS",
          "Q 10/40 - ISTQB Test Automation Engineer ( TAE 3.1.2 ) Exam Sample | CTAL-TAE V2",
          "3.1.3 - Apply Layering of Test Automation Frameworks : TAF",
          "Q 11/40 - ISTQB Test Automation Engineer ( TAE 3.1.3 ) Exam Sample | CTAL-TAE V2",
          "3.1.4 - Apply Different Approaches for Automating Test Cases",
          "Q 12/40 - ISTQB Test Automation Engineer ( TAE 3.1.4 ) Exam Sample | CTAL-TAE V2",
          "Q 13/40 - ISTQB Test Automation Engineer ( TAE 3.1.4 ) Exam Sample - CTAL-TAE V2",
          "3.1.5 (Part 1) - Apply Design Principles and Design Patterns in Test Automation",
          "3.1.5 (Part 2) - Apply Design Principles and Design Patterns in Test Automation",
          "3.1.5 (Part 3) - Apply Design Principles and Design Patterns in Test Automation",
          "Q 14/40 - ISTQB Test Automation Engineer ( TAE 3.1.5 ) Exam Sample - CTAL-TAE V2",
          "EXTRA - Example Of: TAF Layering / OOP / POM"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 4: Implementing Test Automation": [
          "4.1.1 - Guidelines to Support Effective T.A Pilot and Deployment Activities",
          "Q 15/40 - ISTQB Test Automation Engineer ( TAE 4.1.1 ) Exam Sample - CTAL-TAE V2",
          "4.2.1 (Part 1) - Analyze Deployment Risks and Plan Mitigation Strategies for T.A",
          "4.2.1 (Part 2) - Analyze Deployment Risks and Plan Mitigation Strategies for T.A",
          "Q 16/40 - ISTQB Test Automation Engineer ( TAE 4.2.1 ) Exam Sample - CTAL-TAE V2",
          "4.3.1 - Factors Supporting Test Automation Solution ( TAS ) Maintainability",
          "Q 17/40 - ISTQB Test Automation Engineer ( TAE 4.3.1 ) Exam Sample - CTAL-TAE V2",
          "Q 18/40 - ISTQB Test Automation Engineer ( TAE 4.3.1 ) Exam Sample - CTAL-TAE V2"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 5: Implementation and Deployment Strategies for T.A": [
          "5.1.1 (Part 1) - Apply Test Automation at Different Test Levels within Pipelines",
          "5.1.1 (Part 2) - Apply Test Automation at Different Test Levels within Pipelines",
          "Q 19/40 - ISTQB Test Automation Engineer ( TAE 5.1.1 ) Exam Sample - CTAL-TAE V2",
          "Q 20/40 - ISTQB Test Automation Engineer ( TAE 5.1.1 ) Exam Sample - CTAL-TAE V2",
          "5.1.2 - Explain Configuration Management for Testware",
          "Q 21/40 - ISTQB Test Automation Engineer ( TAE 5.1.2 ) Exam Sample - CTAL-TAE V2",
          "Q 22/40 - ISTQB Test Automation Engineer ( TAE 5.1.2 ) Exam Sample - CTAL-TAE V2",
          "5.1.3 - Explain Test Automation Dependencies for an API Infrastructure",
          "Q 23/40 - ISTQB Test Automation Engineer ( TAE 5.1.3 ) Exam Sample - CTAL-TAE V2",
          "Q 24/40 - ISTQB Test Automation Engineer ( TAE 5.1.3 ) Exam Sample - CTAL-TAE V2"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 6: Test Automation Reporting and Metrics": [
          "6.1.1 (Part 1) - Apply Data Collection Methods from the TAS and the SUT",
          "6.1.1 (Part 2) - Apply Data Collection Methods from the TAS and the SUT",
          "Q 25/40 - ISTQB Test Automation Engineer ( TAE 6.1.1 ) Exam Sample - CTAL-TAE V2",
          "Q 26/40 - ISTQB Test Automation Engineer ( TAE 6.1.1 ) Exam Sample - CTAL-TAE V2",
          "6.1.2 - Analyze Data from the TAS and the SUT to Better Understand Test Results",
          "Q 27/40 - ISTQB Test Automation Engineer ( TAE 6.1.2 ) Exam Sample - CTAL-TAE V2",
          "6.1.3 - Explain How a Test Progress Report is Constructed and Published",
          "Q 28/40 - ISTQB Test Automation Engineer ( TAE 6.1.3 ) Exam Sample - CTAL-TAE V2"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 7: Verifying the Test Automation Solution": [
          "7.1.1 - Plan to Verify the Test Automation Environment Including Test Tool Setup",
          "Q 29/40 - ISTQB Test Automation Engineer ( TAE 7.1.1 ) Exam Sample - CTAL-TAE V2",
          "Q 30/40 - ISTQB Test Automation Engineer ( TAE 7.1.1 ) Exam Sample - CTAL-TAE V2",
          "7.1.2 - The Correct Behavior for a Given Automated Test Script and/or Test Suite",
          "Q 31/40 - ISTQB Test Automation Engineer ( TAE 7.1.2 ) Exam Sample - CTAL-TAE V2",
          "Q 32/40 - ISTQB Test Automation Engineer ( TAE 7.1.2 ) Exam Sample - CTAL-TAE V2",
          "7.1.3 - Identify Where Test Automation Produces Unexpected Results",
          "Q 33/40 - ISTQB Test Automation Engineer ( TAE 7.1.3 ) Exam Sample - CTAL-TAE V2",
          "7.1.4 - Explain How Static Analysis Can Aid Test Automation Code Quality",
          "Q 34/40 - ISTQB Test Automation Engineer ( TAE 7.1.4 ) Exam Sample - CTAL-TAE V2"
        ],
        "ISTQB CTAL-TAE V2 | Chapter 8: Continuous Improvement Opportunities for T.A": [
          "8.1.1 - Improving Test Cases Through Data Collection and Analysis",
          "Q 35/40 - ISTQB Test Automation Engineer ( TAE 8.1.1 ) Exam Sample - CTAL-TAE V2",
          "Q 36/40 - ISTQB Test Automation Engineer ( TAE 8.1.1 ) Exam Sample - CTAL-TAE V2",
          "8.1.2 (Part 1) - Analyzing a Deployed TAS and Provide Improvement Recommendation",
          "8.1.2 (Part 2) - Analyzing a Deployed TAS and Provide Improvement Recommendation",
          "8.1.2 (Part 3) - Analyzing a Deployed TAS and Provide Improvement Recommendation",
          "Q 37/40 - ISTQB Test Automation Engineer ( TAE 8.1.2 ) Exam Sample - CTAL-TAE V2",
          "Q 38/40 - ISTQB Test Automation Engineer ( TAE 8.1.2 ) Exam Sample - CTAL-TAE V2",
          "8.1.3 - Restructure the Automated Testware to Align with SUT Updates",
          "Q 39/40 - ISTQB Test Automation Engineer ( TAE 8.1.3 ) Exam Sample - CTAL-TAE V2",
          "8.1.4 - Summarize Opportunities for Use of Test Automation Tools",
          "Q 40/40 - ISTQB Test Automation Engineer ( TAE 8.1.4 ) Exam Sample - CTAL-TAE V2"
        ]
      },
      "requirements": [
        "Basic software testing fundamentals"
      ],
      "description": "Welcome to our ISTQB Certified Tester - Test Automation Engineer V2 full training course.\n\n\nHere, we'll get to master the essential and required skills to become a certified test automation engineer.\n\n\nWe will go through a journey into the ISTQB CTAL-TAE v2.0 syllabus with deep explanations and a lot of examples to solidify what you've learned.\n\n\nThe course structure is as follows:\n\nClarification of the learning objectives before each lecture (Lecture Description)\nThorough explanation of each topic of the ISTQB CT-TAE V2 syllabus with examples\nSolving the ISTQB CT-TAE V2 exam sample question while providing a detailed explanation\n\n\nBy the end of this course, you can expect to:\n\n\nBe fully prepared to pass the ISTQB CT-TAE V2 exam and become a certified test automation engineer\nLearn the fundamentals of software test automation with the latest updates available at the moment\nFind your way between professional software engineers and be ready to be a part of the automation world\n\n\nSo, whether you're just entering the field of test automation or you're already an automation engineer, this is the right place to be the next superstar in test automation\n\n\nKindly read the learning objectives to know more about the expectations from this course. The first chapter is available for preview alongside the exam sample questions and answers, so you can understand the structure of this course before enrolling\n\n\nBest of luck!",
      "target_audience": [
        "Students who want to join the realm of test automation",
        "Current TAEs who want to sharpen their skills and establish automated mind map",
        "Certified ISTQB CTFL testers who want to be ISTQB CT-TAE V2 certified"
      ]
    },
    {
      "title": "Test Automation for Complete Beginners",
      "url": "https://www.udemy.com/course/test-automation-for-beginners/",
      "bio": "All steps that you need to begin your Test Automation Journey",
      "objectives": [
        "Introduction to Test Automation",
        "Java programming for Test Automation Engineers",
        "Installing Selenium Webdriver",
        "Writing Test Scripts using Selenium Webdriver"
      ],
      "course_content": {
        "Introduction to Test Automation": [
          "Introduction to Test Automation",
          "Myths & Facts of Test Automation",
          "Benefits of Test Automation",
          "Comparison between Manual & Automated Testing",
          "Introduction"
        ],
        "Selenium Webdriver Introduction & Basic Methods": [
          "What is Selenium",
          "Maven Setup & Installing Dependencies",
          "Writing First Script",
          "Navigation Methods",
          "Manage Methods",
          "Get Page Information",
          "Closing Browser",
          "Selenium Webdriver Introduction Quiz"
        ],
        "Element Locator Techniques": [
          "HTML, CSS, & Javascript Overview",
          "Introduction to Element Locators",
          "Finding Elements using ID",
          "Finding Elements using Name",
          "Finding Elements using ClassName",
          "Finding Elements using LinkText",
          "Finding Elements using Partial LinkText",
          "Finding Elements using TagName",
          "Finding Elements using XPath",
          "Finding Elements using CSS Selector",
          "Using Chropath to locate Elements",
          "Element Locator Techniques Quiz"
        ],
        "Basic Java Concepts": [
          "Printing Message to the User",
          "Practical Exercise",
          "Variables in Java",
          "Data Types [Integer - Short - Long - Float - Double]",
          "Data Types [Char - String - Boolean]",
          "Primitive & Non-primitive Data Types",
          "Basic Java Concepts Quiz"
        ],
        "Managing your Tests using TestNG": [
          "Introduction to TestNG",
          "Writing First TestNG Test",
          "BeforeTest & AfterTest Annotations",
          "Creating TestNG XML File",
          "Managing your Tests using TestNG Quiz"
        ],
        "Cypress Overview": [
          "Welcome",
          "Introduction to Cypress",
          "What is Cypress",
          "System Requirements",
          "Environment Setup",
          "Installing Cypress",
          "Cypress Structure & Organization",
          "Exploring the Cypress Sample Test Suite",
          "Cypress Overview Quiz"
        ],
        "Basics of Cypress": [
          "Chapter Introduction",
          "Creating the Structure",
          "Writing First Test - Visiting a Website",
          "Configuring IDE for Cypress Auto-Completion",
          "Getting and Asserting Elements",
          "Selecting by Text - cy.contains()",
          "Typing in Cypress - cy.type()",
          "BeforeEach and AfterEach"
        ],
        "Web Elements, Assertions, and Querying Selectors in Cypress": [
          "Chapter Introduction",
          "Implicit Assertions and Explicit",
          "Common Locator Types",
          "Finding Web Elements",
          "Using cy.find Command",
          "Writing a Real Test Part 1",
          "Writing a Real Test Part 2 (Dropdowns)",
          "Checking & Unchecking with cy.check()",
          "More about Assertions and Locator Strategies"
        ],
        "Configuring & Customizing Cypress": [
          "Chapter Introduction",
          "Global Configuration File",
          "BaseURL",
          "Global vs Local Configuration"
        ],
        "Test Automation using Playwright": [
          "Introduction to Playwright",
          "Course Content",
          "Installing Playwright",
          "First Test with Playwright",
          "Important Playwright CLI Commands",
          "Clicking on Elements",
          "Ways of Writing Playwright Commands",
          "Playwright Annotations",
          "Focusing a Test",
          "Skipping a Test",
          "Tagging Tests",
          "Grouping Tests",
          "Playwright Configuration",
          "Creating a Global Configuration",
          "Using Configuration File",
          "Video Recording Tests Options",
          "Taking Screenshots",
          "Setting-Up Base-URL",
          "BeforeEach & AfterEach Hooks",
          "Customizing Node Scripts",
          "Executing Tests in Parallel Mode",
          "Customizing a Reporter in Playwright",
          "Playwright Built-in Reporters",
          "Introduction to Playwright Selectors",
          "Finding Locators",
          "Introduction to XPath Locators",
          "Locators Best Practices",
          "Introduction to Assertions",
          "Practicing Assertions",
          "Finding Assertions",
          "Exploring Playwright Documentation",
          "Playwright Inspector - Debugging Easily",
          "Debugging Selectors",
          "Recording Tests with Test Generator",
          "Authentication (Logging in Programmatically with Examples)",
          "Emulating Devices",
          "Using Traceviewer",
          "Other Emulation Options",
          "Local Configuration",
          "Additional CLI Options",
          "Parallelism & Shrading",
          "Retry Options",
          "Timeout Option",
          "Dealing with Checkboxes",
          "Dealing with Drag & Drop",
          "Dealing with DropDown Lists",
          "Dealing with iFrames",
          "Downloading Files with Playwright",
          "Uploading Files with Playwright",
          "Generating PDFs using Playwright",
          "Hovering over Elements",
          "Auto-Waiting",
          "Dialogs with Playwright",
          "Installing Browsers",
          "NPX Playwright Options",
          "Opening Browsers with Playwright",
          "Other Input Fields"
        ]
      },
      "requirements": [
        "Theoretical knowledge about basic software testing concepts",
        "Knowledge about test scenario, test case, & defect report writing"
      ],
      "description": "There are two kinds of testing in the world of software—manual and automated. Some types of manual testing, such as discovery testing and usability testing, are invaluable. You can do other kinds of testing—like regression testing and functional testing—manually, but it’s a fairly wasteful practice for humans to keep doing the same thing over and over again. It’s these kinds of repetitive tests that lend themselves to test automation.\nTest automation is the practice of running tests automatically, managing test data, and utilizing results to improve software quality. It’s primarily a quality assurance measure, but its activities involve the commitment of the entire software production team. From business analysts to developers and DevOps engineers, getting the most out of test automation takes the inclusion of everyone.\nSelenium WebDriver is a web framework that permits you to execute cross-browser tests. This tool is used for automating web-based application testing to verify that it performs expectedly. Selenium WebDriver allows you to choose a programming language to create test scripts.\nTestNG is an automation testing framework in which NG stands for “Next Generation”. TestNG is inspired by JUnit which uses the annotations . TestNG overcomes the disadvantages of JUnit and is designed to make end-to-end testing easy.\nUsing TestNG, you can generate a proper report, and you can easily come to know how many test cases are passed, failed, and skipped. You can execute the failed test cases separately.\nFor example:\nSuppose, you have five test cases, one method is written for each test case (Assume that the program is written using the main method without using testNG). When you run this program first, three methods are executed successfully, and the fourth method is failed. Then correct the errors present in the fourth method, now you want to run only fourth method because first three methods are anyway executed successfully. This is not possible without using TestNG.\nThe TestNG in Selenium provides an option, i.e., testng-failed.xml file in test-output folder. If you want to run only failed test cases means you run this XML file. It will execute only failed test cases.\nBeside above concept, you will learn more on TestNG, like what are the Advantages of TestNG, how to create test methods using test annotations, how to convert these classes into testing suite file and execute through the eclipse as well as from the command line.",
      "target_audience": [
        "Software Testers",
        "QA Engineers",
        "Software Engineers"
      ]
    },
    {
      "title": "Introduction to Testing in Go (Golang)",
      "url": "https://www.udemy.com/course/introduction-to-testing-in-go-golang/",
      "bio": "Learn how to write effective unit and integration tests in Go, for web applications and REST APIs",
      "objectives": [
        "Learn how to write unit tests in Go",
        "Learn how to write integration tests in Go, and simplify them using Docker",
        "Learn how to create test suites in Go",
        "Learn how to create a simple web application and test handlers, middleware, database, and more",
        "Learn how to create a simple REST API in Go and test its endpoints",
        "Learn to to authenticate using JWT Tokens (and refresh tokens) and completely test all functionality",
        "Learn how to write tests that cover multiple scenarios with table tests"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About me",
          "Asking for help",
          "Mistakes: we all make them."
        ],
        "Setting up our Development Environment": [
          "What we'll cover in this section",
          "Installing Go",
          "Installing an IDE",
          "Installing Docker"
        ],
        "Simple Testing": [
          "What we'll cover in this section",
          "Creating a simple command line application",
          "Writing a our first test for the isPrime() function",
          "Improving our test with table tests",
          "Checking test coverage",
          "Completing our table tests",
          "Improving our program to allow for user entered information",
          "Writing a test for the prompt() function",
          "Writing a test for the intro() function",
          "Testing user input - writing a test for the checkNumbers() function",
          "Updating readUserInput to make it testable, and then testing it"
        ],
        "An Aside: Running individual tests & Test Suites": [
          "What we'll cover in this section",
          "Running a single test",
          "Running groups of tests (test suites)"
        ],
        "Testing Web Applications": [
          "What we'll cover in this section",
          "Creating a simple web app",
          "Setting up a route and handler for the home page",
          "Testing our application routes",
          "Testing Handlers: the Home handler",
          "Setting up some simple middleware",
          "Trying out our new addIPToContext middleware",
          "Testing our middleware",
          "Testing ipFromContext",
          "Creating a login form",
          "Setting up a route and stub handler for the login form"
        ],
        "Testing Validation": [
          "What we'll cover in this section",
          "Setting up validation logic",
          "Testing validation logic",
          "Completing the tests for our validation logic",
          "Trying out validation with our login form"
        ],
        "Testing Sessions": [
          "What we'll cover in this section",
          "Setting up a test enviroment with testing.M",
          "Simplifying our templates using a layout",
          "Installing a sessions package",
          "Adding session to App config, and creating a SessionManager",
          "Trying out our sessions",
          "Updating our tests",
          "Improving our test for the Home handler",
          "Testing the render function with a bad template"
        ],
        "Testing POST handlers": [
          "What we'll cover in this section",
          "Installing postgres with Docker",
          "Setting up a database connection",
          "Adding the data package for models and db package for database access",
          "Making sure our web app can connect to our database",
          "Closing our database pool gracefully, and resetting template path in tests",
          "Creating a stub profile page",
          "Adding messages to our template data and template files",
          "Adding true authentication to the Login handler",
          "Testing the Login handler",
          "Adding Auth middleware",
          "Testing Auth middleware",
          "Updating routes & end-to-end tests",
          "Problems with our Login handler test"
        ],
        "The Repository Pattern": [
          "What we'll cover in this section",
          "Defining an interface type for our repository",
          "Moving our database functions into a repository",
          "Updating application config to use the database repository",
          "Creating a testdb repository",
          "Updating setup_test.go to use the test repository",
          "Updating our tests to use the testdb repository"
        ],
        "Testing the database with Integration tests": [
          "What we'll cover in this section",
          "Getting started with testing our database",
          "Getting our tests to spin up a docker image with Postgres",
          "Populating our test database with empty tables",
          "Testing InsertUser",
          "Testing AllUsers",
          "Testing GetUser and GetUserByEmail",
          "Testing UpdateUser",
          "Testing DeleteUser",
          "Testing ResetUserPassword",
          "Testing InsertUserImage",
          "Using build tags to separate our integration tests"
        ]
      },
      "requirements": [
        "A basic understanding of to use Go programming language"
      ],
      "description": "Writing unit tests and integration tests is one of the most-neglected aspects of software development. All too often, a developer will find him or herself say \"but it works on my computer!\" when a project is presumed finished, only to discover that once taken out of the development environment, things don't work as expected.\nWell written unit tests and integration tests help to solve this problem, and in fact almost without exception will reduce overall development time, rather than adding to it. In addition, well-tested code almost always requires less maintenance, and the end product will have less down time.\nThis course is focused on writing unit and integration tests in Go, a modern, type safe, compiled, and extremely fast programming language. It it is ideally suited for building safe, scalable, incredibly fast web applications, and it has powerful testing tools built right in.\nIn this course, we will build four simple applications, and thoroughly test them:\n\nA command line application (CLI) that tries to determine if a user-entered number is prime or not;\nA simple web application that allows a user to log in and upload a profile picture;\nA simple REST API built on the same code base as the web application which allows users to authenticate using JWT tokens and perform operations against a Postgres database. We'll go through the entire authentication process, including using refresh tokens, and thoroughly test all aspects of the code.\nA simple Single Page Web Application (SPA), written in Vanilla JavaScript, that demonstrates how to use JWT and Refresh Tokens with a SPA, and how to test that functionality.\nFor each of these projects, we will learn how to write unit tests for all functionality. We will learn how to test (among other things):\n\nApplication routes\nApplication handlers\nHow to test multiple scenarios by writing and using table tests\nDatabase operations (using the Repository pattern)\nApplication middleware\nUser authentication (with sessions)\nUser authentication (with JWT tokens)\nJWT token generation and validation\nRefresh token generation and validation\nTesting user input\nWriting to the terminal\nAdding cookies to a request\nReading cookies from a response\nBy the end of this course, you will have a solid understanding of how to write effective tests, and how to write testable code.\nPlease note that this course requires you to download Docker Desktop from Docker. If you are a Udemy Business user, please check with your employer before downloading software.",
      "target_audience": [
        "Developers working in Go who want to level up their testing skills"
      ]
    },
    {
      "title": "Get Started with CodeceptJS 3, Playwright & WebdriverIO",
      "url": "https://www.udemy.com/course/codeceptjs3-playwright-webdriverio/",
      "bio": "Course to get started with automated testing using CodeceptJS 3 with Playwright & WebdriverIO along side API testing",
      "objectives": [
        "Codeceptjs 3",
        "Playwright",
        "WebdriverIO",
        "API Testing"
      ],
      "course_content": {},
      "requirements": [
        "Basics of any programming language"
      ],
      "description": "In this tutorial, you will get hands on experience in using JavaScript & CodeceptJS with different helpers like Playwright & WebdriverIO. We will begin with covering the basics of JavaScript and Node. Then in the next section we will start by understanding CodeceptJS framework and then as the course will proceed you will see how to do different operations in CodeceptJS and get in depth knowledge of the same. In the end, you will see how we change framework to support parallel execution and hence achieve the real benefits that we get with automated testing. We will also touch base on how we can do API testing in this course using codecept",
      "target_audience": [
        "Any one keen to learn testing frameworks",
        "Software Testers",
        "Automation Testers",
        "Testing Professionals",
        "QA Engineers",
        "API Testers"
      ]
    },
    {
      "title": "CYPRESS | Hands-On Training | Step-by-Step for Beginners",
      "url": "https://www.udemy.com/course/cypress-hands-on-training-step-by-step-for-beginners/",
      "bio": "learn CYPRESS Step by Step from scratch with real examples and Demo",
      "objectives": [
        "This is a complete Cypress Course for Beginners",
        "By the end of this course you will have practical hands-on knowledge on working with Cypress",
        "You will be able to create Testing projects with CYPRESS",
        "Complete hands-on knowledge with Demo",
        "Every topic will start from scratch and go up Step-by-Step"
      ],
      "course_content": {},
      "requirements": [
        "***** No prior specialised knowledge is required *****",
        "Every lecture will start from scratch",
        "There will be real world examples and demo"
      ],
      "description": "This course is created for complete beginners.\nGet started with CYPRESS step by step\nIf you are a complete beginner at Cypress, this course is for you. Very basic step-by-step videos to guide you from scratch.\nIn this session, we will learn\nWhat is Cypress\nFeatures of Cypress\nHow to setup Cypress project from scratch\nElements and Assertions\nCypress with JavaScript and TypeScript\nPage Object Model\nCLI\nFile Handling\nReporting\nAPI Testing\nCustom Commands\nCypress Dashboard\nCypress Studio\nGit\nJenkins\n\n\nCypress is a next-generation front end testing tool built for the modern web\nCypress is most often compared to Selenium; however, Cypress is both fundamentally and architecturally different. Cypress is not constrained by the same restrictions as Selenium.\nThis enables you to write faster, easier, and more reliable tests\nYou will be learning everything from scratch. You do not need any existing knowledge to start on this course. Wherever required, I will give you examples and will show you with a hands-on demo\nBy the end of this course, you will have good hands-on knowledge of working with Cypress\nUnderstanding of all features and settings of Cypress\nYou will be able to create Cypress tests and projects\nThere will be real-world examples and practical demonstrations\nDo not worry if you have never done programming or automation testing, I will start from scratch and go up step-by-step with hands-on\nI will be guiding you with demo and examples\n\n\nLet's Get Started...\nRaghav Pal",
      "target_audience": [
        "Anyone who wants to learn CYPRESS from scratch",
        "If you want to create Automation Testing projects with Cypress",
        "Beginners in Cypress Automation Testing",
        "If you want to learn Cypress step-by-step, this course is for you"
      ]
    },
    {
      "title": "Cypress Automation: Scratch to Pro + Frameworks with CI/CD",
      "url": "https://www.udemy.com/course/master-cypress-automation-sariful/",
      "bio": "Hands-On Cypress Automation (Latest V14) from basic to advance with API, Mocha & BDD frameworks integrated with CI tool",
      "objectives": [
        "Will learn Cypress from scratch with hands-on practical exercise",
        "Will learn how to handle different complex UI scenarios and REST API's methods",
        "Will learn advanced architectural implementation between frameworks & Page Object Model design",
        "Will learn how easily execute Test Scenario’s based on Tags and Custom Scripts",
        "Will learn how to generate an HTML custom Reports",
        "Will learn how to integrate & use Cypress Cloud-one of the cool feature",
        "You will have detailed understanding of API & Web Automation using Mocha and Cucumber-BDD Frameworks (Latest Version)",
        "Last not the least, will learn how to enhance coding, fixing, reviewing using GitHub Copilot (AI Model)"
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming",
        "Manual Testing"
      ],
      "description": "Master Cypress v14+ — This hands-on, fully up to date course is your complete guide to mastering Cypress for end-to-end web automation including API testing. Learn by doing, from basics to advanced testing patterns, real-world scenarios, and best practices to become a Cypress pro.\nWhat You'll Learn:\nYou will learn Cypress from scratch with hands-on practical exercise\n** At the end of this course, you will have detailed understanding of API & Web Automation using Mocha and Cucumber-BDD Frameworks (Latest Version)\nYou will learn how to handle different complex UI scenarios and REST API's methods\nComplete understanding of Cypress components such as fixtures, support, config, package and more\nYou will learn to create utility functions or reusable custom commands\nWill learn basic JavaScript from scratch for automation\nYou will learn real time advanced architectural implementation between frameworks & Page Object Model design\nWill learn how easily you can execute Test Scenario’s based on Tags and custom Scripts.\nWill learn how to generate an HTML custom Reports\nWill learn how to integrate your project with CI/CD tool Jenkins\nWill learn debugging tricks using Screenshots and Videos\nWill learn how to integrate & use Cypress Cloud-one of the cool feature\nWill learn how easily can write code using Cypress Studio\n**Last not the least, will learn how to enhance coding, fixing, reviewing using GitHub Copilot (AI Model)\n\n\nAre there any course prerequisites?\nShould have basic programming or JavaScript knowledge. If not, we will cover it too.\nFundamental of Manual Testing\n\n\nWho this course is for:\nManual Testers\nAutomation Testers\nQA Engineers\nQA Architects\nQA Managers\nSoftware Developers\n\n\nInstructor's Promise:\nBy the end of this course, you'll have the confidence and skills to design, develop, and implement robust web automation solutions using Cypress. Transform your testing career and become an in-demand automation professional!\n\"Enroll Now and Start Your Automation Journey!\"",
      "target_audience": [
        "Freshers/Graduates",
        "Career Switcher",
        "Manual & Automation QA folks"
      ]
    },
    {
      "title": "BDD Automation : Behave with Python",
      "url": "https://www.udemy.com/course/bdd-with-behave/",
      "bio": "Cucumber clone for Python based projects | BDD Framework for Python | Gherkin | Automatiion",
      "objectives": [
        "Ready to work on different automation tools with BDD approach",
        "Good understanding of Gherkin, ready to implement in automation project",
        "Realtime implementation of BDD framework for Web as well as API Automation",
        "Ready to face BDD interview questions in Software Testing interviews",
        "Detailed understanding of writing feature files and corresponding step definition implementation",
        "Detailed understand of best approaches to be use while implementing BDD framework"
      ],
      "course_content": {
        "Introduction and Setup": [
          "What is TDD (Test Data Driven Concepts)",
          "Learn and Understand BDD Concepts( Behavior Driven Development)",
          "Difference between TDD and BDD",
          "What is Behave | Introduction to Behave"
        ],
        "Setup Python and Behave": [
          "Setup Python",
          "Setup Pycharm: Editor for Python Programming",
          "Setup PIP",
          "Common Files to be used in BDD Framework",
          "Behave Folder Structure"
        ],
        "Gherkin Language": [
          "Define Gherkin & Feature File",
          "Gherkin: Feature Keyword",
          "Gherkin: Scenario Keyword (Test Cases)",
          "Gherkin: Given Step",
          "Gherkin: When & Then Step",
          "Gherkin: Background Step",
          "Gherkin: Step Argument",
          "Gherkin: Scenario Outline",
          "Gherkin : Comments and Document String",
          "Gherkin : Tags"
        ],
        "Write Steps & Other Files": [
          "**** Note ****",
          "Create Project Structure",
          "Create Feature File",
          "Step definition file",
          "Tags & Control Execution using Tags",
          "Environment File",
          "Generate Report in BDD framework"
        ],
        "Python Programming {NEED TO COVER ONLY IF YOU NEED BASIC UNDERSTANDING OF PYTHO}": [
          "Python Basics",
          "Write Python Basic Code",
          "Python Programming Guidelines",
          "Variables in Python",
          "Working with String",
          "Loops in Python",
          "Functions",
          "Inheritance",
          "Condition Handling in Python",
          "Dictionary in Python",
          "Exception Handling",
          "Class in Python",
          "List",
          "Tuples",
          "Module",
          "Common Examples"
        ]
      },
      "requirements": [
        "Basic understanding of Manual Testing Concepts",
        "Basic understanding of Web Automation using Selenium",
        "Basic understanding of Python Programming Language",
        "Windows machine with admin rights"
      ],
      "description": "Behave is one of the most popular BDD tool which can be integrated with Python.\nOn testers point of view, we can use this tool to implement BDD approach with Selenium, Appium etc.\nIf you’re new to BDD and want to get basic to expert level understanding of BDD then this course is a great place to get started.\nIn this course we prepare student for all BDD automation challenges, it gives coverage of almost all basic and advance concepts of Cucumber with Gherkin Scripting\nHere you will cover Gherkin keywords like Given, When, Then, Feature to advance level data driven and hooks\nAfter completing this course, you will be very much comfortable to start automation and face automation interviews\nAlso you gonna get our instructor support to clear you queries asap.\nIts a continuous grooming course which will give you in depth knowledge of theory as well as practical concepts\nCourse Coverage\nEnd to End Installation Instructions\nBehave Introduction\nHow to Setup Behave Project\nDifferent components in BDD Project\nTDD and BDD Understanding\nDifference between BDD and TDD\nLearn Gherkin Language\nGherkin Keywords\nScenario and Scenario Outline\nGiven, When and Then\nEnvironment Files\nHooks and their implementation\nRealtime Usable\nBDD Implementation in WEB Automation using Selenium with Python and Behave\nBDD Implementation in API Automation using Requests with Python and Behave",
      "target_audience": [
        "Freshers looking opportunity in automation",
        "Manual testers want to jump into BDD automation",
        "Automation tester wants to implement BDD framework in existing automation",
        "Testers/QA looking opportunity in Automation Testing and want to learn BDD framework"
      ]
    },
    {
      "title": "JavaScript Unit Testing - The Practical Guide",
      "url": "https://www.udemy.com/course/javascript-unit-testing-the-practical-guide/",
      "bio": "Learn how to write automated tests (unit & integration tests) for your JavaScript projects with Vitest & Jest.",
      "objectives": [
        "Write and structure unit & integration tests",
        "Remove side effects from tests via mocking and spies",
        "Work with popular JavaScript test runners and libraries",
        "Write good tests and focus on testing core business logic"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript knowledge is required",
        "NO prior testing knowledge is necessary at all"
      ],
      "description": "Automated testing is a key concept in modern (web) development.\nIt is a concept that can be intimidating at first, hence many developers shy away from diving into testing and adding tests to their projects.\nThis course teaches you automated unit & integration testing with JavaScript from the ground up. You will learn how tests are written and added to your projects, what should (and should not) be tested and how you can test both simple as well as more complex code.\nYou will learn about the software and setup required to write automated tests and example projects will be provided as part of the course. It's a hands-on, practical course, hence you won't get stuck in theory - instead you'll be able to learn all key concepts at real examples.\nIn the course, Vitest will be used as the main testing library & tool. It's a modern JavaScript test runner and assertion library that provides Jest compatibility. Hence what you'll learn in this course will help you no matter if you're working with Vitest or Jest. And the core concepts will apply, no matter which testing setup you're using at all!\nAs part of this course, typical testing problems will be defined and solved and common strategies like mocking or working with spies are taught in great detail. This course also does not focus on specific types of JavaScript projects - neither does it focus on any specific library or framework.\nInstead, you'll learn how to automatically test your (vanilla) JavaScript code, no matter if it's a NodeJS or frontend project. The fundamentals you'll gain in this course will help you in all your future projects - backend (NodeJS) and frontend (vanilla JS, React, Vue, Angular) alike.\nThis course will provide you with an extremely solid foundation to build up on, such that you can start adding tests to all your JavaScript projects.\nIn detail, this course will teach you:\nWhat exactly \"testing\" or \"automated testing\" is (and why you need it)\nWhat \"unit testing\" is specifically\nWhich tools you need to enable automated unit tests in your projects\nHow to write unit tests\nHow to get started with integration tests\nHow to formulate different expectations (assertions)\nWhich patterns to follow when writing tests\nHow to test asynchronous and synchronous code\nHow to deal with side effects with help of spies & mocks\nHow to apply all these concepts in real projects & examples",
      "target_audience": [
        "JavaScript developers who want to add tests to their projects",
        "Developers who always considered automated testing to be intimidating"
      ]
    },
    {
      "title": "Test Case Management (Fundamentals & TestRail Demo)",
      "url": "https://www.udemy.com/course/test-case-management/",
      "bio": "Learn more about Test Case Management & TestRail Tool",
      "objectives": [
        "Test Case Management",
        "TestRail Tool",
        "Ability to Create and Manage Test Cases in TestRail Tool",
        "Ability to Create Test Runs & Test Plans in TestRail Tool",
        "Ability to Create Reports for Project Stakeholders",
        "Ability to have Traceability between Requirements, Test Cases & Bugs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamentals": [
          "What is a Test Case?"
        ],
        "TestRail - Create Portal, Roles & Users": [
          "Create Testrail Portal",
          "Create Roles & Users"
        ],
        "TestRail - Create Different Project Types & Test Suites,Cases": [
          "Use Multiple Test Suites to Manage Cases",
          "Use SingleRepository(AllCases & withBaselineSupport)",
          "Create Test Suites & Cases for Gmail Page",
          "Create Test Sections & Cases for Testrail Page",
          "Create Baseline for Translate Project"
        ],
        "TestRail - Test Run, Test Plans & Report": [
          "Create Test Run & Test Plan",
          "Create Report"
        ],
        "TestRail - Configuration": [
          "Custom Fields",
          "Jira Integration",
          "Subscription, Export & Import"
        ]
      },
      "requirements": [
        "Basic Software Testing Life Cycle Knowledge"
      ],
      "description": "To be a software tester you need to master the most basic key factor of Software Quality Assurance and software testing through writing and implementing proper test cases and running test-plans. Through this course; the audience would get a detailed insight into how to create test cases, manage a project, create milestones & test plans, and execute different types of test suites using the Testrail Management tool.\nIn this course all information presented in an easy straight forward way so any non-tech person can start with it to have the proper guidance about software development life cycle and test case management, also any software engineer who is looking to enrich his knowledge related to test case management process this is the right course for you.",
      "target_audience": [
        "Software Testing Professionals",
        "Software Development Professionals",
        "Anyone interested to learn new test case management tool"
      ]
    },
    {
      "title": "Quality Assurance Mastery - Manual Software Testing",
      "url": "https://www.udemy.com/course/quality-assurance-manual/",
      "bio": "Become Quality Assurance Engineer as a Complete Beginner. QA Masterclass for Junior QA Engineers.",
      "objectives": [
        "Foundations of Quality Assurance",
        "QA Best Practices",
        "Quality Assurance guidance for starting your first IT job",
        "How to write test cases",
        "Software Development Life Cycle",
        "Agile Methodology",
        "JIRA",
        "How to find bugs",
        "Manual Testing Basics"
      ],
      "course_content": {},
      "requirements": [
        "You don't need any experience to start with this course. Everything will be explained for complete beginners."
      ],
      "description": "This course is updated frequently with new lessons, projects and resources!\nNovember 2023 - NEW! New Lecture Added - BONUS Research: QA Engineer Salary in November 2023\nOctober 2023 - NEW! Downloadable Resources Added:\nCommon Software Errors\nUnderstanding Software Test Cases\nHow to Write Good Test Cases\nBlack Box Testing\nBlack Box Testing Techniques\nTesting the Software with Blinders on\nSoftware Engineering - White Box Testing\nCross Browser Testing\nUser Acceptance Testing\nUser Documentation for JIRA Software\nJIRA Agile Basics\nRegression Testing\nExploratory Testing\nPerformance Testing - Apache JMeter eBook\nBeginner Guide To Software Testing (Automation Included)\nApril 2023 - NEW!  Downloadable Resources Added - Different Types of Software Testing\nMarch 2023 - NEW!  Downloadable Resources Added - Software Development Life Cycle, Book - Agile for Dummies, Agile Team Roles\n\nStart Learning Quality Assurance TODAY!\n★★★★★ \"This is one of the best QA software introduction courses, the instructor explains the testing concepts clearly and concisely.\"\n★★★★★ \"A great introduction to the QA profession for every beginner, great course!\"\n★★★★★ \"Useful, in-depth walkthroughs. Instructor is knowledgeable, genuine and speaks in a calm, paced manner.\"\n★★★★★ \"The best course for starting out with testing software. Every beginner QA should watch this.\"\n★★★★★ \"Thank you for this useful information! This course is easy, not too fast and not too slow. Everything is explained clearly and to the point. I recommend this course!\"\n★★★★★ \"A good beginner course for someone who is looking for a QA profession. Very nice presentation!! Thanks\"\n\nIn This Course:\nYou will learn different ways of Software Testing and everything you need to start your first job as Junior Quality Assurance Engineer\nThis course will give you the foundation and confidence to enter the IT Industry\n\nYou WILL Learn:\nWhat is a Test Case and how to write a Test Case\nWhat is Software Development Life Cycle\nWhat is Agile - Scrum and Kanban\nDifferent Types of Testing\nWhat is a BUG?\nBlack Box Testing\nWhite Box Testing\nUAT - User Acceptance Testing\nRegression Testing\nCross Browser Testing\nJIRA - Bug Tracking Tool\nWhen You Should Move on to Automation\nYou don't need any experience to enroll, you will be guided step by step through this course\nYou will also get Bonus Materials to help you from the beginning\nThis course requires work in the beginning - just like any other thing in life\nBut the best thing in the world is when your start making positive changes in your life\nThis course teaches you the simplest way to enter the IT field - Quality Assurance!\nIf You Are Someone Who:\nWant to Become Quality Assurance Engineer\nWant to learn Software Testing\nWant to Change Career\nWant to achieve Financial Freedom and Enjoy Life\nEnroll in the Course Today and Get Started!\n\nThis course comes with a 30-day 100% Money Back Guarantee, so if you aren't happy with your purchase, you can get a refund - no questions asked!\nYou will also get:\n- Support and Answers to All Your Questions During the Course\n- Lifetime Access\n- Certificate of Completion\nNow go Ahead and Click the Enroll Button.\nI'll See You in the First Lesson!",
      "target_audience": [
        "Anyone who wants to become Quality Assurance Engineer",
        "Anyone who wants to learn Software Testing",
        "Anyone who wants to start their first job in the IT field"
      ]
    },
    {
      "title": "Selenium Automation testing from scratch",
      "url": "https://www.udemy.com/course/selenium-automation-testing-from-scratch/",
      "bio": "In these selenium tutorials we will discuss how to use selenium to automate an application in detail",
      "objectives": [
        "Understanding Selenium",
        "Selenium Components",
        "Selenium IDE",
        "Assertions and Verifications",
        "Element Locators",
        "Scripts in IDE",
        "All Core java concepts",
        "Selenium WebDriver",
        "Working with WebDriver",
        "Cross Browser testing",
        "TestNG introduction",
        "TestNG Annotations",
        "Working with Excel",
        "Selenium Automation framework"
      ],
      "course_content": {},
      "requirements": [
        "Laptop with good internet connection"
      ],
      "description": "Selenium automates browsers. In these tutorials we will learn how to automate web applications by using Selenium tool from scratch . This course will cover Selenium components Selenium IDE, Selenium Web Driver in detail along with the examples . And we also learn Core Java which is very important for Selenium web driver. By end of selenium tutorial course you should write automated test cases using Selenium.\nThis course is designed from very basics so you do not need any prerequisites to start learning Selenium here. And all the concepts will be discussed with the practical examples.\nAutomation testing using Selenium WebDriver is popular in IT industry now and you will learn this automation testing with the help of these videos",
      "target_audience": [
        "Softwate test enginner",
        "Software automation test enginner",
        "QA lead",
        "QA manager",
        "Fresher",
        "Software Developer"
      ]
    },
    {
      "title": "XCUITest for iOS UI Automation using Swift",
      "url": "https://www.udemy.com/course/xcuitest-for-ios-ui-automation-using-swift/",
      "bio": "XCUITest,iOS Automation, UI Automation, iOS UI Automation, Xcode, swift, objective- c, XCUITest step by step",
      "objectives": [
        "They can automate application using XCUITest",
        "Understand basic overview on Swift programming language",
        "Swift language with examples",
        "Complete project implementation on XCUITest"
      ],
      "course_content": {
        "Swift Introduction": [
          "Introduction to training program",
          "Overview on XCUITest",
          "XCUITest vs Appium vs Expresso",
          "Swift - Hello world program",
          "Swift - Comments",
          "Swift - Variables & Constants",
          "Swift - Datatypes with examples",
          "Overview on Operator & Examples on Arithmetic operator",
          "Conditional statements - IF with examples",
          "Switch statement with Range , with Tuple",
          "Arrays- Append, Insert, contentsOf, Remove Methods, Sort",
          "Overview on Function with examples",
          "Convert Integer to String | Generate Dynamic Number | arc4random|"
        ],
        "XCUITest Basic Concepts with Examples": [
          "XCUITest Prerequisite | Perform Record & Playback using XCUITest",
          "Overview on XCUITest API",
          "Object Identification using Debugging Mode",
          "Create Basic Script using Debugging Mode feature",
          "Object Identification using Accessibility Inspector & Basic Script Creation",
          "Tap using Coordinates",
          "Handling SearchBox & Text Fields using boundBy",
          "Handling Date Picker using otherElements concept",
          "Handling Picker View using adjust",
          "Handling Slider using adjust",
          "Handling Switches using firstmatch and other elements handling",
          "Get Switch Status",
          "How to add Assertions to your program",
          "How to delete value from a text field using XCUITest and re-enter Part 1",
          "How to delete value from a text field using XCUITest and re-enter Part 2",
          "How to Delete a value from Text Field using Keys[\"Delete\"]",
          "Enter Character By Character into Text Field using KEYS",
          "How to Print all the values from the text fields using for loop",
          "Compare value with all values from text field and break the loop for a specific",
          "How to capture screenshot",
          "How to scrolldown, scrollup",
          "How to handle swipe left, swipe right on page indicator",
          "How to handle safari browser",
          "Handle SauceDemo Login flow on Safari Browser",
          "Handling Cells , IPhoneSetting & Delete Safari History",
          "Identify a unique object Part 1",
          "Identify a unique object Part 2",
          "NSPredicate with Example",
          "Wait for Elements using waitForExistence command",
          "Capture Coordinates of an Element & Perform Drag and Drop Operation",
          "Page factory framework with example"
        ],
        "Bonus Lectures": [
          "How to Turn On / Turn Off Bluetooth on iPhone using XCUITest",
          "How to Turn On / Turn Off Bluetooth on iPhone using XCUITest Part 2",
          "How to Turn On / Turn Off WIFI on iPhone using XCUITest",
          "XCUIDevice - Press Home button",
          "Widgets Handling",
          "Handling widgets - reuploading this video as most of the students are facing iss"
        ]
      },
      "requirements": [
        "having Mac Machine",
        "having some idea on any programming language"
      ],
      "description": "Course updated on 29 January 2025 with below concepts:\nGetting status of a switch and handling switch\n\n\nCourse updated on 1st August 2024 with below concepts:\nTurn On/ Turn Off Bluetooth\nTurn On/ Turn Off Wifi\nWidgets Handling\nXCUIDevice --> Press Home\nCourse updated on 1st Apr 2024 with below concepts:\nEnter Character By Character into Text Field using KEYS\n\n\n\n\n\n\nCourse updated on 31st Mar 2024 with below concepts:\n\n\nHow to Delete a value from Text Field using Keys[\"Delete\"]\n\n\nCourse updated on 28th Mar 2024 with below concepts:\n. NSPredicate with Example\nCourse updated on 24th Jan 2024 with below concepts:\nHow to capture Coordinates of an Element\nHow to Perform Drag and Drop Operation\n\n\nCourse updated on 22nd Dec 2023 with below concepts:\nExample on Matching - Identifier\nHow to Handle Cells Objects\nLaunch IPhoneSetting & Delete Safari History\nConvert Integer to String\nGenerate Dynamic Number\narc4random --> Random Number Generator\nAutomate SauceDemo login flow on Safari browser\nTap Using Coordinates\n\n\n\n\nCourse updated on 14th Dec 2023 with below concepts:\nHow to identify Multiple Objects / Identify a unique object\n\n\nWe are updating the content based on the students requirements itself, if you feel that some more content needs to be added feel free to share with us so that we will update the content with the requested topics soon.\n\n\nCourse updated on 4th June 2023 with below concepts:\nHow to delete value from a text field using XCUITest and re-enter a new value\nHow to capture values from all the text fields and print them to the console.\nHow to verify a specific value from the list of values and break a loop\nHow to capture screenshot\n\n\n\n\nCourse updated on 20th Apr 2023 with below concepts:\nHandling safari browsers using XCUITest\nWaitforExistance\nPage Factory Framework with example\nBuild input file not found info.plist issue and the solution which we need to implement\n\n\nCourse updated on 12th Apr 2023 with below concepts:\nOverview on Functions in swift with examples\n\n\nWelcome to the Best and  Latest updated XCUITest UI Automation testing course\n\n\nThis Course is designed for the beginners who is eagerly looking to learn UI Testing in iOS from step by step.\nThis course will cover all the basics you need to know for UI Testing using iOS.\nOnce you learned this course you will be stronger in basics and you are all set to automate any iOS app.\nWhat are you waiting for? Just enrol the course and become an UI Test engineer for all iOS apps.\n\n\nTopics we are going to cover as part of tutorial:\n\n\nOverview on the training program :\nBrief overview on XCUITest and comparison with other tools\nIntroduction to swift language with basic programs\nXCUITest configuration & basic concepts with example\nXCUITest advanced concepts with example\nAutomating applications using XCUITest\nIf you are a beginners and want to learn some knowledge bytes on XCUITest then you are at right place, we designed this course which covers basics on Swift language first so that you would have some idea on the language and later we started with XCUITest with different examples that also covers basics on XCUITest API. We covered bunch of videos that covers various UI elements that we can easily automate with, for example we covered scenarios to Handle sliders, Date Pickers, Scroll Bars and many more within the sessions itself. At the end of this sessions you will be in a position to kick start your automation work in your project.\n\n\nGet started with this tutorial and do raise questions whenever you encounter any issues.\n\n\nWish you all the best\n\n\nThanks & Regards,\nSurendra Jaganadam",
      "target_audience": [
        "Developers and Testers who is looking to learn Native iOS UI Testing in Xcode",
        "QA Tester who wants to upgrade their skills",
        "Testers and developers who wants to learn most demanded automation skills in IT Industry"
      ]
    },
    {
      "title": "ISTQB Certified Agile Tester",
      "url": "https://www.udemy.com/course/istqb-certified-agile-tester/",
      "bio": "All you need to become a certified Agile Tester",
      "objectives": [
        "Become a certified ISTQB Agile Tester",
        "Understand the 4 values & 12 principles of Agile",
        "Differentiate between agile methodologies (Scrum-Kanban-XP)",
        "Understand Agile testing methods (TDD-ATDD-BDD)"
      ],
      "course_content": {},
      "requirements": [
        "Holding the ISTQB Foundation Level Certified Tester Certificate",
        "Understand Basic Concepts of Manual Testing"
      ],
      "description": "This course is a complete explanation of the ISTQB Agile Certified Tester Syllabus.\nOnce you study the whole course you will be ready to apply for the exam.\nEach section in the syllabus is explained in a separate video which makes the learning process easier for the trainee.\nAll course content is updated to the latest version of the syllabus.\n\n\nCurrently in December 2021, this course is the highest-rated ISTQB Agile Tester Course on Udemy platform.\n\n\nAgile testing is a relatively new approach to software testing that follows the principles of agile software development as outlined in the Agile Manifesto.\nA tester on an Agile project will work differently than one working on a traditional project. Testers must understand the values and principles that underpin Agile projects, and how testers are an integral part of a whole-team approach together with developers and business representatives.\nThere is a lot of confusion concerning agile testing – which means there’s an educational opportunity as well. The Agile Tester will give the tester the knowledge to be part of agile testing teams and achieve high performance.\n\n\nBusiness Outcomes\nAn Agile Tester can...\nCollaborate in a cross-functional Agile team being familiar with principles and basic practices of Agile software development.\nAdapt existing testing experience and knowledge to Agile values and principles.\nSupport the Agile team in planning test-related activities.\nApply relevant methods and techniques for testing in an Agile project.\nAssist the Agile team in test automation activities.\nAssist business stakeholders in defining understandable and testable user stories, scenarios, requirements and acceptance criteria as appropriate.\nWork and share information with other team members using effective communication styles and channels.\nIn general, a Certified Tester Foundation Level – Agile Tester is expected to have acquired the necessary skills to working effectively within an Agile team and environment.",
      "target_audience": [
        "Software Testers",
        "Agile Testers",
        "QA Engineers",
        "Software Engineers",
        "Test Managers"
      ]
    },
    {
      "title": "End to End Software Testing",
      "url": "https://www.udemy.com/course/key-principles-of-testing/",
      "bio": "Learn Software testing in 1 day - Key principles of testing and activities that a tester does in day to day life!",
      "objectives": [
        "Concepts of testing",
        "Handling challenging situations in testing field",
        "Do's and Dont's",
        "Powerful exercises that help to gain practical understanding",
        "Real World Scenarios and How to handle them",
        "Perform meaningful testing in Agile Environment",
        "Develop new skills and concepts of Sprints, Sprint Cycles and Sprint Planning",
        "Develop Test Plans",
        "More Productive with Product teams",
        "Write Test cases and know what to look for when Reviewing Test cases",
        "Have an understanding of why to have multiple environments and deploy multiple builds",
        "Compose and report Bugs and issues with application at hand",
        "Learnt Bonus Tips on QA Failures",
        "Lifetime access to course",
        "Quick response to any questions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction of course",
          "Introduction about self",
          "Agenda"
        ],
        "Agile Methodology": [
          "About Agile Methodology",
          "Why Agile is so popular?"
        ],
        "About Sprint": [
          "What is a Sprint & Sprint Cycle?",
          "What is Sprint Planning Meeting"
        ],
        "Day of a Tester": [
          "Events of Tester life"
        ],
        "About Scrum": [
          "What is SCRUM Meeting?",
          "Who is a Scrum Master",
          "What happens in a Daily Scrum"
        ],
        "Planning": [
          "What is a Test Plan?",
          "What is a User Story?",
          "QA Allocation of tasks",
          "Exercise 1"
        ],
        "Requirement Analysis": [
          "What is Product Elaboration Meeting",
          "Interpretation of requirements"
        ],
        "Test Cases": [
          "Writing Test cases",
          "Types of Test cases"
        ],
        "Review": [
          "Test case review",
          "Types of reviews",
          "Exercise 2"
        ],
        "Deployments": [
          "Deployments on different environments"
        ]
      },
      "requirements": [
        "No Pre-Requisites required",
        "Information provided in the course is self-sufficient"
      ],
      "description": "This course will give you idea of real software testing world. It will go through the basics of each concept and explain what happens when you are working on a project. Things are little different from what is mentioned in books and what happens in reality. Idea to prepare this course is to make all aware about activities that take place, challenges faced by a tester and how to address those situations. As we will cover whole day of a tester so it will also touch base on examples of manual testing as well. There are multiple exercises at each level based on what is explained and solution for same is also discussed. I can guarantee that you will have in-depth knowledge of Software testing world after covering this course.",
      "target_audience": [
        "Anyone who wants to learn and start their careers in Software Testing Industry from scratch",
        "Existing Software Testers who want to enhance their skills",
        "Anyone who wants to get expert insight and learn trade secrets of Testing",
        "Anyone who wants to learn Agile Methodology, SCRUM, Sprint Cycles from a QA's perspective"
      ]
    },
    {
      "title": "Advanced Selenium Grid and Cloud | SauceLabs and Jenkins",
      "url": "https://www.udemy.com/course/advanced-selenium-grid-and-cloud/",
      "bio": "Advanced Selenium WebDriver test automation framework with Selenium Grid, Cloud and continuous test execution in Jenkins",
      "objectives": [
        "Develop Full-Stack Test Automation Framework",
        "Setting up Selenium Grid",
        "Running tests on Selenium Grid",
        "Advantages and disadvantages of Selenium Grid",
        "Test Automation cloud providers",
        "Running tests in cloud",
        "Running tests on SauceLabs",
        "Jenkins"
      ],
      "course_content": {
        "Introduction | Advanced Selenium Grid and Cloud": [
          "What we need to know",
          "Helpful tips before we start",
          "Plan for this course",
          "Reviewing starting code",
          "Course Update: Selenium 4.6+ Enhancements",
          "Full-Stack Test Automation Framework",
          "Section 1 Quiz"
        ],
        "Selenium Grid | Advanced Selenium Grid and Cloud": [
          "What is Selenium Grid",
          "Selenium Grid 3 vs Selenium Grid 4",
          "Setting up Selenium Grid",
          "Running tests on Selenium Grid",
          "Creating Selenium Grid factory",
          "Adding a new node",
          "Running tests on grid with few nodes",
          "Limitations of Selenium Grid",
          "Section 2 Quiz"
        ],
        "Cloud-Hosted testing platforms | Advanced Selenium Grid and Cloud": [
          "What are cloud-hosted testing platforms",
          "Starting with SauceLabs",
          "Creating SauceLabs driver factory",
          "Running tests on SauceLabs",
          "Improving SauceLabs driver factory",
          "Adding names to SauceLabs jobs",
          "Marking tests pass or fail on SauceLabs",
          "Improving error message",
          "Cloud-Hosted testing platforms summary",
          "Section 3 Quiz"
        ],
        "Continuous integration for automated tests | Advanced Selenium Grid and Cloud": [
          "What is Continuous integration",
          "Installing Jenkins",
          "Configuring Jenkins",
          "Creating and running Test Automation job",
          "Outro",
          "Section 4 Quiz",
          "Bonus Lecture: Discount coupons"
        ]
      },
      "requirements": [
        "Java or other object-oriented programming language (Beginner or Intermediate)",
        "Experience with Selenium WebDriver (Ability to automate basic test)",
        "Previous experience with TestNG or jUnit testing frameworks is a big plus",
        "Experience with Maven is a big plus, but not critical",
        "Desire to build Full-Stack Test Automation Framework with Selenium WebDriver"
      ],
      "description": "Double your QA salary with Advanced Selenium Grid and Cloud course!\nBecome SDET or even Test Automation Architect by learning how to take your test automation to a new level!\nLearn how to integrate Selenium WebDriver automated tests into CI/CD pipeline and execute tests on Selenium Grid or even in the Cloud using SauceLabs or other cloud testing providers.\nAdvanced Selenium Grid and Cloud course is for people who already know some basics of automation testing with selenium webdriver with java, and want to improve their test automation and Selenium WebDriver knowledge and be able to execute tests not just locally, but on the custom-built Selenium WebDriver Grid, or even take your WebDriver tests to the next level and run them on one of the many cloud testing providers.\nThis \"Advanced Selenium Grid and Cloud\"  is a continuation of my Highest Rated \"Selenium WebDriver tutorial for beginners\" course where students learned some selenium webdriver basics.\nStudents do not have to finish the \"Selenium WebDriver tutorial for beginners\" course but need to know how to use Selenium WebDriver with Java to automate simple test cases.\nWe will use Selenium WebDriver version 4 in this course. Selenium Grid was completely redesigned from scratch in the 4th version of Selenium WebDriver, and now it's way better than it used to be.\nThe course will include:\nSelenium grid.\nWhat it is, why we should learn Selenium WebDriver Grid.\nHow to set it up and how to run tests on Grid.\nPros and cons of Selenium Grid.\nCloud test execution.\nWhat it is and how it can help you run Selenium WebDriver tests without maintaining the grid.\nConnecting and running tests on SauceLabs\nContinuous testing.\nWhat is CI/CD and how automated tests are part of the CI/CD pipeline.\nHow to set up and use Jenkins to run automated tests",
      "target_audience": [
        "Test automation engineers",
        "DevOps",
        "Selenium testers that want to step up their game"
      ]
    },
    {
      "title": "Practice ISTQB® Foundation V4.0 Exams - 2025",
      "url": "https://www.udemy.com/course/istqb-foundation-level-practice-exams/",
      "bio": "Practice timed ISTQB® Foundation Level Practice Exams and get ready to be a software certified tester",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "The course is up to date with the latest syllabus from ISTQB®\nBy the end of May 2024, the course will contain 6 sample exams that are mapped to ISTQB V4.0 syllabus\nTest your knowledge of Software Testing and prepare yourself to take the ISTQB® foundation level exam. The questions are related to the ISTQB® Software Testing Foundation Syllabus.\n\nThere are many questions on the web that are either outdated or wrongly answered. I am trying here to filter all those questions and provide you with a nice tool to practice the exam similar to the real-life exam as much as possible.\nThis course contains 4 exams, each has 40 questions and you have 1 hour to complete the test.\nYou can take the test as many times as you like\nEach question has a detailed explanation, and I will be happy to provide an extra explanation to clarify any answer\nThe questions are distributed according to the ISTQB® guidelines like the real exam.\nI usually ask my students to test their knowledge by taking exams, if they pass each exam with scores higher than 80%, then I recommend that they can apply for the real exam.\nThe result you get after completing the “ISTQB® Software Testing Foundation Level” practice exam is just to assess your testing knowledge and should not be taken as an indication for the result of the real exam!.\n\n\n\"This material is not accredited with the ISTQB\".\nISTQB is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "- Anyone interested to pass the ISTQB® foundation level exam"
      ]
    },
    {
      "title": "Testing Framework TestNG from Scratch with Java",
      "url": "https://www.udemy.com/course/learn-testng-testing-framework-from-scratch/",
      "bio": "Learn to use Next Generation Testing Framework TestNG & how to use it for automation testing.",
      "objectives": [
        "By the end of this course you will give have great understanding on TestNG framework.Advantages of TestNG over Junit.",
        "Detailed knowledge about TestNG framework. Different type of annotation provided by TestNg",
        "How to use TestNG framework to run test-cases parallel or in multithreaded environment",
        "This tutorial will give you great understanding on TestNG Framework concepts, and after completing this tutorial, you will be at intermediate level of expertise from where you can take yourself to higher level of expertise."
      ],
      "course_content": {},
      "requirements": [
        "Before proceeding with this tutorial, you should have a basic understanding of Java programming language, text editor and execution of programs, etc.",
        "You are going to use TestNG to handle all levels of Java project testing (Unit, functional, end-to-end, integration, etc.,), so it will be a added skill if you have knowledge of software development and software testing processes."
      ],
      "description": "TestNG is a testing framework inspired from JUnit and NUnit but introducing some new functionality that make it more powerful and easier to use.\nTestNG is designed to cover all categories of tests: Unit, functional, end-to-end, integration, etc.,\nThe Video includes from setting up the environment till integration with CI tools\nIn this training course, attendees will learn the following\n1. Working with TestNG Framework.\n2. How to use Assertion.\n3. How to do batch execution of testcases.\n4. TestNG execution Report generation.\nReading the Data from CSV file\n1.Reading the Data from Comma separated files.\n2.Skipping comments.\n3.Skipping new lines.\nBasic of Ant build Tool\n1. What is build.xml.\n2. What is a target, TestNG target present in Ant.\n4. Integration of TestNG with Ant tool.\nSubversion – SVN\n1.Installing Visual SVN and Tortoise SVN Client\n2.Creating Repository.\n3.Importing the Project.\n4.Taking Check in and Check out\n5. SVN Plugin for Eclipse\nContinuous Integration Tool Hudson\n1. Configuring the Hudson.\n2. Execution of TestNG from Hudson.\n3. Generating TestNG Report from Hudson.\n4. Integration of Ant with Hudson.\nAnd source code shown as part of video lecture will be provided for download",
      "target_audience": [
        "This tutorial is designed for Software Professionals, who are willing to learn TestNG Framework in simple and easy steps",
        "All the manual tester who are looking for the automation knowledge",
        "Developer/Automation Testers who are developing the automation framework for the specific product or client"
      ]
    },
    {
      "title": "Angular Fundamentals from Scratch & Unit/Integration Testing",
      "url": "https://www.udemy.com/course/angular-fundamentals-unit-integration-testing/",
      "bio": "Get into Web Development with solid understanding of Angular Basics and write Tests for your code to be White Box tester",
      "objectives": [
        "NO Prior knowledge of Angular is required. Every Concept including TypeScript basics are taught from Scratch",
        "Get the deep understanding of the Angular fundamentals to quickly establish yourself as a frontend developer",
        "You will learn Angular Unit Testing and Integration Testing Best Practices",
        "Knowledge on Unit Testing tools like Karma, Jest, Jasmine, Angular Bed etc",
        "Understand how to perform Component Testing, Service Testing , Directives Testing with Angular",
        "By end of this Course, You will Develop modern responsive and scalable web applications with Angular"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML knowledge helps"
      ],
      "description": "This course is exclusively designed for beginners to understand ANGULAR fundamentals for Front end Web Development and ability to perform white Box TESTING such as Unit Testing , Integration testing for the code using various Testing Frameworks like Karma, Jest, AngularBed, Jasmine etc\nThis course is divided into 2 Phases\nPhase 1:\nIntroduction to Front end Development - Phase 1 explains the fundamentals of Angular including TypeScript Fundamentals to develop Front end Real time Apps from Scratch.\nNo programming Experience needed to start with this course. I have covered everything needed to make you familiar with every concept taught in the course\nPhase 2:\nUnit/Integration Testing - After Solid Understanding of Front end development using Angular in Phase 1, Phase 2 explains how to write Unit Tests and Integration Tests for the developed Phase 1 Code using Testing Frameworks like like Karma, Jest, AngularBed, Jasmine, Mock Services, classes etc\nAll Testing (White Box Testing) Frameworks concepts are also given with Scratch level explanation.\n\nplease note that This course will not deep dive into HTML learning but that will not affect you to learn ANGULAR.\n\n\nBy end of this course, one can start building Web Apps with Angular and write Solid Unit Tests and Integration tests to test their code as per Industry Standards\nThis course can be a great resource to Junior Developers and especially to SDET's to get involved into  White Box testing Strategies to better understand code and write solid Unit/Integration Tests.",
      "target_audience": [
        "developers",
        "SDET",
        "QA Automation Engineers",
        "Front end devs",
        "Software Engineers"
      ]
    },
    {
      "title": "Selenium WebDriver: Selenium Automation Testing with Java",
      "url": "https://www.udemy.com/course/selenium-for-beginners/",
      "bio": "2024 Edition | Master Selenium WebDriver with Java for Beginners | Complete Guide to Automation Testing",
      "objectives": [
        "Build a comprehensive Selenium WebDriver test automation framework from scratch using Java",
        "Master the Java programming basics necessary for creating and maintaining Selenium WebDriver tests",
        "Prepare for the job market with portfolio development, resume building, and interview preparation for Selenium WebDriver roles",
        "Automate real-world web applications with Selenium WebDriver, utilizing TestNG for efficient test execution and management",
        "Navigate through HTML and DOM structure to effectively identify web elements for automation",
        "Master locators in Selenium WebDriver, including XPath, CSS selectors, and best practices for element selection",
        "Write cross-browser tests using Selenium WebDriver and execute them across different browsers like Chrome, Firefox, and Edge",
        "Implement the Page Object Model (POM) to build maintainable and scalable test automation projects"
      ],
      "course_content": {
        "Introduction to the Course: Selenium WebDriver with Java for Beginners": [
          "Introduction and Course Overview",
          "Accessing and Utilizing Downloadable Course Materials",
          "Maximizing Your Learning Experience"
        ],
        "Setting Up Your Selenium WebDriver Environment": [
          "Introduction to Section - Setting Up Your Environment",
          "Introduction to Selenium WebDriver and Its Ecosystem",
          "Understanding Java in the Context of Selenium",
          "Installing Java for Selenium WebDriver - Windows",
          "Installing Java for Selenium WebDriver - Mac",
          "Understanding Maven: Purpose and Importance",
          "Installing Maven - Windows",
          "Installing Maven - Mac",
          "Overview of Java IDEs for Selenium",
          "Setting Up IntelliJ IDEA for Selenium",
          "Setting Up Your Selenium WebDriver Environment"
        ],
        "Fundamentals of Java for Selenium WebDriver Testing": [
          "Introduction to Section: The Java Basics for Testers",
          "Getting Started with Java: Your First Program",
          "Understanding Classes and Methods in Java",
          "Homework Assignment: Classes and Methods",
          "Exploring Variables and Data Types",
          "Enhancing Methods with Parameters",
          "Homework Assignment: Variables",
          "Understanding Method Returns in Java",
          "Building a Simple Calculator",
          "Introduction to JUnit and Unit Testing",
          "Writing and Running Your First JUnit Test",
          "Java Fundamentals for Selenium WebDriver Testing"
        ],
        "First Steps with Selenium WebDriver: Navigating Web Pages and Basic Concepts": [
          "Introduction to Section: Navigating Web Pages with Selenium",
          "Diving into Selenium WebDriver",
          "Creating a Maven Project for Selenium",
          "Getting Started with Selenium",
          "Advancing with Selenium and Firefox",
          "Basics of Selenium WebDriver Navigation"
        ],
        "Understanding HTML and DOM for Effective Selenium WebDriver Automation": [
          "Introduction to Section: The World of HTML and DOM",
          "Diving into HTML for Web Automation",
          "Understanding the Document Object Model (DOM)",
          "Element Location in Selenium WebDriver",
          "Practical Exercises: Inspecting Web Pages with Developer Tools",
          "Mastering HTML and DOM for Selenium WebDriver Automation"
        ],
        "Mastering Locators in Selenium WebDriver: Strategies and Best Practices": [
          "Introduction to Section - Overview of Selenium Locators",
          "Comprehensive Look at Selenium Locators",
          "Introduction to WebElement in Selenium",
          "Practical Exercise: Using Simple Locators",
          "Exploring Complex Locators: XPath and CSS Selectors",
          "Efficient Element Selection: Tools and Manual Strategies",
          "Troubleshooting and Refining Selenium Locators",
          "Best Practices for Formulating Locator Strategies",
          "Homework: Developing Locators for Web Automation",
          "Homework Review",
          "WebElement Commands in Action",
          "Mastering Selenium WebDriver Locators"
        ],
        "Developing Basic Selenium WebDriver Tests: Introduction to TestNG": [
          "Introduction to Section - Developing Basic Selenium WebDriver Tests",
          "Understanding the Application Under Test",
          "Creating a New Maven Project for Selenium Tests",
          "Creating and Structuring Your First Selenium Test Class and Method",
          "Implementing Test Steps - Starting the Browser and Executing Steps",
          "Introduction to TestNG Framework",
          "Completing Test Steps with Verifications and Assertions",
          "Utilizing TestNG for Running Tests",
          "Debugging Techniques in Selenium",
          "Selenium Tests with TestNG"
        ],
        "Practical Selenium Test Writing": [
          "Introduction to Section - Principles of Practical Selenium Test Writing",
          "Understanding Negative Login Testing",
          "Setting Up a Test Class for Negative Login Tests",
          "Homework - Crafting a Test for Incorrect Username",
          "Implementing the Test for Incorrect Username",
          "Homework - Developing a Test for Incorrect Password",
          "Writing the Test for Incorrect Password",
          "Avoiding False Positives in Automated Testing",
          "Practical Selenium Test Writing"
        ],
        "Cross-Browser Testing and TestNG Suite Development in Selenium": [
          "Introduction to Section - Embracing Cross-Browser Testing",
          "Understanding Cross-Browser Testing in Selenium",
          "Setting up Selenium with Firefox using Selenium Manager",
          "Manually Configuring Selenium for Edge (Windows)",
          "Manually Configuring Selenium for Safari (Mac)",
          "Understanding TestNG Suites - Theoretical Foundations",
          "Building a Full Regression TestNG Suite",
          "Running TestNG Suite",
          "Homework - Creating a Smoke Test Suite in TestNG",
          "Homework Resolution - Creating and Running Smoke Test Suite",
          "Cross-Browser Testing and Advanced TestNG Suites in Selenium"
        ],
        "Maximizing TestNG Benefits in Selenium WebDriver Testing": [
          "Introduction to Section - Unleashing TestNG's Power in Selenium",
          "Deep Dive into TestNG - Exploring Documentation and Features",
          "Reviewing TestNG Reports",
          "Consolidating Login Tests into a Single Class",
          "Advanced Test Management: Groups, Suites, and Selective Execution",
          "Leveraging TestNG Parameters for Combined Negative Tests",
          "Streamlining Setup and Teardown with Before and After Annotations",
          "Implementing Dynamic Browser Selection in TestNG",
          "Enhancing Browser Flexibility in TestNG Tests",
          "Maximizing TestNG Benefits in Selenium WebDriver Testing"
        ]
      },
      "requirements": [
        "No Test Automation experience is needed. You'll learn everything in this course.",
        "A desire to learn automation testing with Selenium WebDriver.",
        "No Java programming knowledge is necessary, but a basic understanding will help."
      ],
      "description": "Boost Your QA Career with Selenium WebDriver and Java—No Experience Needed!\n\n\nLooking to transform your QA career and significantly increase your earnings? This Selenium WebDriver with Java course is specifically designed for manual testers looking to transition into test automation without any prior programming experience. It’s a completely new version, updated in 2024 after reviewing feedback from students over the last four years. This version includes new sections on Java basics and job interview preparation, based on requests from thousands of successful students.\n\n\nIn this course, you will master the entire process of test automation using Selenium WebDriver with Java, starting from scratch. Whether you want to get promoted at your current job or switch to a high-paying automation role, this course is your guide to success.\n\n\nWhat You’ll Get:\n- Step-by-Step Guidance: Set up Selenium WebDriver, run tests in real browsers like Chrome and Firefox, and automate web testing with clear, easy-to-follow instructions.\n- Java Programming for Beginners: Learn Java programming tailored specifically for automation testing, perfect for those with no prior coding experience.\n- Master the TestNG Framework: Improve your test structure and maintain automation frameworks more effectively.\n- Troubleshoot Like a Pro: Identify and fix common Selenium test failures and handle exceptions confidently.\n- Cross-Browser Testing Techniques: Ensure your tests run smoothly across different platforms with advanced debugging methods.\n- Assess Your Knowledge: Quizzes at the end of every section help reinforce learning and track your progress.\n- High-Quality Learning Materials: Enjoy crystal-clear audio and HD video recorded in 1080p, making it easy to follow along with every lesson.\n\n\nWhy Choose This Course?\n1. Beginner-Friendly: Designed for complete beginners—no prior experience in Selenium WebDriver, Java, or test automation needed.\n2. New and Improved: The 2024 version includes added sections on Java basics and interview preparation, making it the best version yet.\n3. Immediate Results: Start automating real tests within the first few lessons and build a portfolio to showcase in job interviews.\n4. Instructor Expertise and Support: Learn from Dmitry Shyshkin, a test automation expert with over 12 years of experience. Dmitry personally answers every single question—simply ask in the Q&A section, and he'll help as soon as possible, usually within a few hours.\n5. Interactive Learning Experience: Engage with the instructor and peers through the Q&A section to enhance your understanding and network.\n6. Lifetime Access: Enroll once and get lifetime access to all future updates and support.\n\n\nProven Success\nSince 2017, thousands of students have taken this course and gone on to land new jobs, receive promotions, and boost their salaries by mastering Selenium WebDriver. This version is the result of continuous improvements based on student feedback, making it the most comprehensive and up-to-date edition yet.\n\n\n100% Money-Back Guarantee\nNot satisfied? Get a full refund with Udemy's 30-day money-back guarantee—no questions asked.\n\n\nStart Today!\nTake the next step towards a high-paying career in test automation with Selenium WebDriver and Java. Enroll now and join a community of successful testers who have transformed their careers through this course.\nSelenium WebDriver: Selenium Automation Testing with Java for Beginners\nMaster Selenium WebDriver with Java | 2024 Edition | Complete Guide to Automation Testing & Page Object Model",
      "target_audience": [
        "Anyone who wants to move from manual testing to test automation",
        "Software Developers that want to learn Selenium WebDriver"
      ]
    },
    {
      "title": "Software Tester: From Zero To Hero!",
      "url": "https://www.udemy.com/course/software-tester-from-zero-to-hero/",
      "bio": "Become a professional software tester starting from a scratch.",
      "objectives": [
        "What is software testing?",
        "Who can become a Software Test Engineer? What are the necessary skills?",
        "How does a typical workday look like?",
        "What are different test platforms & type of tests.",
        "How to write a defect/bug?",
        "How to write a test script scenario?",
        "Good practice in software testing.",
        "Every day work mistakes and how to avoid them.",
        "How to prepare for a job interview? What are the common mistakes during an interview?",
        "Writing basic SQL queries.",
        "API Testing using Postman.",
        "GIT version control for software testers.",
        "and more..."
      ],
      "course_content": {},
      "requirements": [
        "Proficiency in English in order to understand software specific terms.",
        "For the second part of the course (SQL, API, GIT) basic computer knowledge (how to install application, use browser, etc.)."
      ],
      "description": "In this course, I will talk through becoming a Software Tester - also known as Quality Assurance (QA) Tester.\nI have divided this course into three main sections, each focusing on a specific topic, and progressively more challenging and advanced.\nWe are starting at level 0, so do not worry! If you have no idea what software testing is, what prerequisites are to work as a software tester or how a typical day for a software tester looks like - we do cover it all in the introductory section.\nIn the following sections, we focus on the fundamentals of software testing as well as more advanced lectures. There you will find hands-on material to follow at your own pace while learning more technical topics (GITflow, Rest API testing, reading and understanding a JSON).\nApart from that, you will find Quizzes and \"Coding Challenge\" which allows you to test acquired knowledge.",
      "target_audience": [
        "Anyone who wants to kick off career as a Software Test Engineer.",
        "Anyone who would like to transition to Software Test Engineer role."
      ]
    },
    {
      "title": "What every java developer must know about software testing",
      "url": "https://www.udemy.com/course/what-a-java-software-developer-must-know-about-testing/",
      "bio": "Concepts & frameworks QA,TDD,BDD,Junit,TestNG,Hamcrest,AssertJ,Mockito,Jmockit,Selenide,Selenium,Cucumber,Jbehave,JaCoCo",
      "objectives": [
        "Explain the difference between unit-, integration-, system-, ui-, acceptance-, regression- and not-functional tests.",
        "Explain the concepts test/behavioral driven developement (TDD/BDD).",
        "Write test driven unit and integration tests using JUnit/TestNG and use Hamcrest/AssertJ for better assertions",
        "Use JMockit/Mockito to mock context irrelevant dependencies",
        "Write Web-UI system tests using Selenium/Selenide",
        "Write behavioral driven acceptance tests using Cucumber/JBehave",
        "Monitor test coverage using Jacoco/EclEmma",
        "Persuasively discuss and explain why software testing is indispensable in the development lifecycle"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Find out your testing skill level",
          "About the target student and the instructor",
          "Clarifying expectations"
        ],
        "Setup development environment": [
          "Setup motivation",
          "Install JDK 1.8 +",
          "Install maven 3.5 +",
          "Install wildfly 14 +",
          "Install and configure eclipse",
          "Install MongoDB",
          "Initial tictactoe project setup",
          "Check your dev env installation muscles",
          "Setup summary"
        ],
        "Motivation of software testing": [
          "Lack of testing costs money, reputation and lives",
          "No quality without testing",
          "Check the sharpness of your testing motivation",
          "Testing motivation summary"
        ],
        "Unit testing basics and frameworks": [
          "Unit testing motivation",
          "Unit testing framework JUnit - part1",
          "Unit testing framework JUnit - part2",
          "Unit testing framework JUnit - part3",
          "Unit testing framework TestNG",
          "Unit testing framework helper Hamcrest",
          "Unit testing framework helper AssertJ",
          "Implement Database wrapper",
          "Mocking Steps",
          "Mocking framework Mockito",
          "Mocking framework Jmockit",
          "Test coverage check with JaCoCo and eclEmma",
          "Check your UT basics muscles",
          "Unit testing frameworks summary"
        ],
        "Unit testing with TDD": [
          "TDD motivation",
          "Implement R1 - play a field",
          "Implement R2 - track player",
          "Implement R3 - track result (horizontal and vertical)",
          "Implement R3 - track result (diagonal and draw)",
          "Implement R4 - save to database -1",
          "Implement R4 - save to database - 2",
          "Test coverage, regression and completion",
          "Check your TDD muscles",
          "Unit testing with TDD summary"
        ],
        "Integration testing": [
          "Integration testing motivation",
          "Integrate database",
          "Smoke testing - DB and UI integration",
          "Check your integration testing muscles",
          "Integration testing summary"
        ],
        "UI and System testing": [
          "System testing motivation",
          "Implement GUI",
          "Implement ST with selenium - part1",
          "Implement ST with selenium - part2",
          "End-To-End testing",
          "Non functional testing",
          "Check your system testing muscles",
          "System testing summary"
        ],
        "Acceptance testing": [
          "Acceptance testing motivation",
          "Implement BDD acceptance test with cucumber and selenium - part1",
          "Implement BDD acceptance test with cucumber and selenium - part2",
          "Implement BDD acceptance test with jbehave and selenide - part1",
          "Implement BDD acceptance test with jbehave and selenide - part2",
          "Check your Acceptance Testing Muscles",
          "Acceptance testing summary"
        ],
        "Course summary and attachments": [
          "Course summary and project final version"
        ]
      },
      "requirements": [
        "Basic knowledge of java programming is required",
        "Basic knowledge of maven is helpfull",
        "Familiarity with a Java-IDE like Eclipse, IntelliJ, NetBeans or whatever you choose for the labs",
        "PC, MAC or Linux Machine with an Internet connection"
      ],
      "description": "In this course you will implement the game Tic-Tac-Toe from scratch in java\nYou will ensure high quality of the game implementation using:\n- Test Driven Development (TDD)\n- Behavior  Driven Development (BDD)\n- Unit testing\n- Integration testing\n- Smoke testing\n- System testing\n- End-To-End testing\n- Regression testing\n- Acceptance testing\n- Non functional tests\nYou will become Hands-on experience with the following testing frameworks:\n- Junit\n- Hamcrest\n- Mockito\n- Selenide\n- Cucumber\n- JaCoCo\nYou will become Hands-on experience with alternative frameworks:\n- TestNG\n- AssertJ\n- Jmockit\n- Selenium\n- Jbehave\n- EclEmma\nYou will learn to persuasively discuss and explain the common software testing concepts and why software testing is necessary.",
      "target_audience": [
        "Java developer or architect who cares about assuring software quality and minimizing risks"
      ]
    },
    {
      "title": "Specialize in QA Manual Testing with Live Project+AGILE+JIRA",
      "url": "https://www.udemy.com/course/specialize-in-software-testing-with-real-examples-agile-jira/",
      "bio": "Manual Testing QA course with REAL Manual Software Testing PROJECTS, AGILE, JIRA, 100+ INTERVIEW QUES., Lifetime support",
      "objectives": [
        "Complete knowledge of all aspects related to software testing",
        "How to log defects, JIRA tool and defect life cycle",
        "REAL WORLD EXAMPLES, reports, documents that are used in IT companies",
        "LIVE PROJECTS on requirements, test cases and defects using real world tools",
        "What is regression, sanity, smoke, black box, white box testing, and much much more",
        "Understanding of Agile methodology as followed in industry today",
        "Dedicated chapter on JIRA tool (most in demand in industry) with project setup",
        "Automation basic concepts and framework explanation",
        "FREE 100+ INTERVIEW QUESTIONS, and resume preparation"
      ],
      "course_content": {
        "Introduction": [
          "Day 1: Course overview, course content",
          "Quick points about this learning journey"
        ],
        "Day 2: Introduction to Software Testing": [
          "What is testing, and its objectives",
          "Why is testing important, and principles of testing",
          "Common terms in testing (**Asked in Interviews**)",
          "Software testing life cycle: A brief introduction",
          "Software testing models - Waterfall, V, RAD, Spiral, Agile"
        ],
        "Day 3: Types of Software Testing": [
          "Different types of Testing",
          "Static & Dynamic Testing",
          "Functional Testing",
          "Non-Functional Testing",
          "User Acceptance Testing",
          "**Practical Content** - Deep dive into terms that confuse (Asked in Interviews)"
        ],
        "Day 4: Stages of Testing Life Cycle - Quick Introduction": [
          "Introduction to STLC",
          "Stage 1, 2: Requirement Analysis & Test Planning",
          "Stage 3, 4: Test Design & Test Environment",
          "Stage 5, 6: Test Execution & Test Closure"
        ],
        "Day 5: Requirements Analysis & Test Planning": [
          "Introduction & How are requirements created",
          "Requirement Traceability Matrix & Test Coverage",
          "Test Planning",
          "**Practical Content** - Creating our own Test Plan"
        ],
        "Day 6: Test Case Design & Environment Setup": [
          "Introduction & Test Case best practices",
          "Equivalence Partitioning, Boundary value analysis (Test case design techniques)",
          "Test Case Review, Maintenance, Test Management Tools",
          "Test Environment & Test Data Setup",
          "**Practical Content** - Writing Test Cases for Amazon (Part 1)",
          "**Practical Content** - Writing Test Cases for Amazon (Part 2)",
          "More Practice"
        ],
        "Day 7: Test Execution & Reporting": [
          "When to start testing, when to stop testing?",
          "Test execution, Statuses and Non-functional testing",
          "What are defects? Sample defect reporting",
          "Defect life cycle; When defect is fixed or not fixed",
          "Cost of defect",
          "Test Reporting",
          "**Practical Content** - Creating our own Test Execution report"
        ],
        "Day 8: Test Closure & Production Release": [
          "What is sufficient testing? And Test Closure Activities",
          "Production release stages and process",
          "**Practical Content** - Creating our own release deployment plan"
        ],
        "PRACTICAL PROJECT, USING TEST MANAGEMENT TOOL & JIRA": [
          "Part 1 - Roles & Responsibilities of Testers in an Organization",
          "Part 2 - People (Teams) that Testers work with in an Organization",
          "Part 3 - Understanding requirements and writing test scenarios",
          "Part 4 - Writing test cases in a test management tool",
          "Part 5 - Executing test cases, reporting defects, test closure"
        ],
        "Day 9: Additional Content - Agile & JIRA tool": [
          "What is Agile? And how testing is done in Agile",
          "What is JIRA tool?",
          "**Practical Content** - JIRA tool and Agile demo"
        ]
      },
      "requirements": [
        "NO prior experience or knowledge needed, this course starts the learning from scratch"
      ],
      "description": "LEARN MANUAL TESTING, WITH PRACTICAL HANDS-ON AND PROJECT - over 6 hours of practical content where we practice our learning on sites like Amazon & Facebook. We will see real requirements, write test cases using the TestRail tool, report defects in JIRA (most widely used defect and project management tool). We are top-rated with 4.5 star, and over 16,000 students have benefited from this course and secured a job or improved their career.\n\n\nThe USP of this course is it combines conceptual learning with practical examples and real world tips, that will help you succeed in an IT organization or elsewhere.\n\nWHY YOU SHOULD CHOOSE THIS COURSE?\n1: Deep learning course on Manual Testing: This course will teach you everything in detail about Manual testing, Agile, JIRA, with a bonus section on Automation framework.\n\n2: Become a Manual Testing Specialist and get Job-Ready, in only few hours. Collection of 100+ Interview Questions; Resume & Interview Preparation guide to help get your dream job.\n\n3: Real World Learning: Lots of Practical Examples & Projects so you learn how things actually work in real world IT companies.\n\nADVANTAGES OF THIS COURSE:\nLearn things practically, with end-to-end project\nCoverage of all concepts of manual testing, starting from most basic to the advanced ones.\nFilled with real-world examples, such as how to create a test plan, how to create execution reports, how to create release plan etc.\nContents to make you job ready - 100+ interview questions & tips along with reusable resume template.\nLifetime support & mentoring for all learners - use Q&A or email me any time for any query.\n\nSOME OF THE TOPICS COVERED IN THIS COURSE:\nEverything (and I mean everything) about manual testing - definition, objective, principles, models, terminologies & much, much more\nTypes of manual testing - with detailed explanation of each type.\nSoftware Testing life cycle with deep, detailed chapters on each stage.\nLots of practical example and real world tips\nAgile & JIRA learning.\nAutomation basics and Automation framework concepts.\nTest plan, Test execution report, Release deployment plan etc. creation on your own (as done by test leads and managers).\nCommon challenges software testers face in organizations and how to overcome them",
      "target_audience": [
        "Anyone looking to make a career switch to testing and gain experience",
        "Existing testing professionals looking to recap their testing knowledge",
        "Existing IT employees looking to upskill themselves",
        "Fresh college graduates wanting to learn software testing and get a job"
      ]
    },
    {
      "title": "ReqNRoll / Specflow and Cucumber - The Master Guide [2025]",
      "url": "https://www.udemy.com/course/specflow-master-guide/",
      "bio": "Learn ReqNRoll / Specflow and Cucumber from Beginner to Expert for .NET developers made easy!",
      "objectives": [
        "Learn all about Specflow and Cucumber from beginner to expert!",
        "Learn how to write automated .NET Gherkin tests with Specflow",
        "Learn how get automated tests to run in parallel",
        "Find out about hooks in Specflow and how they can be useful to control functionality",
        "Learn how to write custom value retrievers and custom comparers",
        "Understand step arguments and transformations",
        "Learn all about hook scopes",
        "Get a basic primer on the Gherkin language, all included in this course"
      ],
      "course_content": {},
      "requirements": [
        "Basic C# coding knowledge needed",
        "Basic Gherkin knowledge"
      ],
      "description": "** MASTER REQNROLL (was SPECFLOW) - Learn how to write Behaviour Driven Development requirements and automated tests with ReqnRoll **\nWhy is this course for you?\nThis course is the most complete course on ReqnRoll with Cucumber! And probably the most complete course about ReqnRoll available anywhere!\nThis course will teach you all you need to do to become a master with the ReqnRoll with Cucumber along with Gherkin, the most important language for writing for Behavioural Driven Development. This is an essential skill to master for any Subject Matter Expert, Business Development professional, Testing professional and developer.\nThis course will teach you all you need to know about the ReqnRoll from beginner, right up to expert! Learn how to write BDD automated tests using Cucumber and Gherkin with the amazing ReqnRoll library. You will learn everything you need to know to become an expert on using ReqnRoll for your Behavioural Driven development needs if you are a .NET developer.\nLearn the ReqnRoll library including:\n* How Gherkin parameters are passed to Cucumber and ReqnRoll\n* How Gherkin tables are handled in ReqnRoll\n* ReqnRoll Hooks\n* Parallelism Testing with ReqnRoll\n* ReqnRoll Context and Dependency Injection\n* Value Retrievers\n* Value Comparers\n* Step Argument Conversions\n\n\nUnlike other courses, which focus on Cucumber with non .NET languages. This course is primarily intended for those with knowledge of .NET C# and would like to learn how to use ReqnRoll for automated testing.\nBy the end of the course, you will become very sufficient with using ReqnRoll. Don't forget, if you are not entirely happy with the course, you have the 30 day Money-Back-Guarantee.\nIf you are serious about learning the skill required to become an expert at writing Specflow, then this is the ONLY course you need!",
      "target_audience": [
        "Automation Testing Professionals and other testing professionals",
        ".NET C# Developers",
        "Business Analysts"
      ]
    },
    {
      "title": "Selenium 4.0 LATEST Features, Docker & AWS Integration",
      "url": "https://www.udemy.com/course/selenium-4-tutorial-all-new-features-docker-integration/",
      "bio": "Learn and Master Selenium 4.0 latest features, Chrome DevTools Protocol, Grid 4, Docker, AWS Integration & CI/CD Jenkins",
      "objectives": [
        "All latest features of Selenium 4.0",
        "Migrating from Selenium 3 to 4.0",
        "Many new updates and enhancement from Selenium 3",
        "Relative Locators, Chrome DevTools Protocols, New Window and Tabs handling, Elements and Full page screenshot"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Important to know before getting started with the course",
          "Watching sessions in 720p HD Quality",
          "Download the complete code"
        ],
        "Selenium Journey": [
          "What is Selenium?",
          "Difference in Selenium 1, 2, 3 & 4 versions",
          "Selenium 4 Walkthrough with Updates and New Features",
          "The new Selenium IDE"
        ],
        "Getting started - Pre-requisite": [
          "Pre-requisite",
          "Install JDK - Windows",
          "Install JDK - MAC OSX",
          "Install Maven - Windows",
          "Install Maven - MAC OSX",
          "Installing Eclipse IDE",
          "Running the first test via Manual Jars",
          "Mapping the API Code",
          "Automating Dependency and browser executables via Maven",
          "UPDATE 4.6 - NO WebDriverManager and Browser exe required",
          "Configuring other browsers - Firefox and Edge",
          "Code from above lectures",
          "Understanding the WebDriver API Doc"
        ],
        "Selenium 4 - Handling Elements and Relative Locators": [
          "Getting started with Handling Elements",
          "Getting started with Handling Elements - CODE",
          "Minimizing, Maximizing and Full Screen window",
          "Handling Sync issues - ImplicitWait",
          "Handling Sync issues - ExplicitWait",
          "Handling Sync issues - FluentWait",
          "Code from above lectures",
          "Relative Locators - Above, Below, RightOf, LeftOf and Near",
          "Relative Locators - Above, Below, RightOf, LeftOf and Near - CODE",
          "Chaining Relative Locators",
          "Chaining Relative Locators - CODE",
          "Relative Locators with Multiple Elements",
          "Relative Locators with Multiple Elements - CODE"
        ],
        "Capturing Screenshots": [
          "Capturing Element's Screenshot",
          "Capturing Element's Screenshot - CODE",
          "Capturing Page and Full Page Screenshot",
          "Capturing Page and Full Page Screenshot - CODE"
        ],
        "Xpath vs CSS": [
          "Understanding Xpath in Depth - Part 1",
          "Understanding Xpath in Depth - Part 2",
          "Understanding CSS in Depth",
          "Tools for Generating Xpath and CSS",
          "Cheat Sheet"
        ],
        "Selenium 4 - New Features and Updates": [
          "New Feature - Switching to the Parent Frame",
          "Switching to the Parent Frame - CODE",
          "New Feature - New Tabs and Windows",
          "New Tabs and Windows - CODE",
          "New Feature - Handling Basic Authentication",
          "Handling Basic Authentication - CODE",
          "New Feature - Printing to PDF",
          "Printing to PDF - CODE",
          "New Feature - Browser Options / Capabilities",
          "Browser Options / Capabilities - CODE",
          "NEW Feature - Getting the Element's Coordinates through Rectangle class",
          "Getting the Element's Coordinates through Rectangle class - CODE",
          "Enhancements in Actions API and FindElement method",
          "Enhancements in Actions API and FindElement method - CODE"
        ],
        "Chrome DevTools Protocols (CDP)": [
          "Introduction to Chrome DevTools Protocol",
          "Handling SSL Certificates",
          "Handling SSL Certificates - CODE",
          "Mocking GEO Locations",
          "Mocking GEO Locations - CODE",
          "Simulate Device Views",
          "Simulate Device Views - CODE",
          "Blocking Network requests",
          "Blocking Network requests - CODE",
          "Running test on a slow network",
          "Running test on a slow network - CODE",
          "Override Time zone values",
          "Override Time zone values - CODE",
          "Chrome console logs",
          "Chrome console logs - CODE",
          "Capturing Request and Response Headers",
          "Capturing Request and Response Headers - CODE",
          "Get URL and Status for each request and response",
          "Get URL and Status for each request and response - CODE",
          "Adding Custom headers",
          "Adding Custom headers - CODE",
          "Changing the browser User Agent",
          "Changing the browser User Agent - CODE",
          "Enable Performance Metrics",
          "Enable Performance Metrics - CODE"
        ],
        "Page Load Strategies": [
          "Page Load Strategies - Normal, Eager and None",
          "Page Load Strategies - Normal, Eager and None - CODE"
        ],
        "Selenium Grid 4": [
          "Understanding the Grid 4 Architecture",
          "Download the complete code from the Grid lectures",
          "Configuring Ubuntu virtual machine",
          "Running as a standalone Grid",
          "Running test cases in parallel",
          "Hub and Nodes",
          "Distributed"
        ]
      },
      "requirements": [
        "Should have basic understanding of Core Java"
      ],
      "description": "\"This course requires you to download Docker Desktop from Docker official website. If you are a Udemy Business user, please check with your employer before downloading software.\"\n\n\nLearn and Master Selenium 4.0 WebDriver W3C latest features, Chrome DevTools protocol, Grid 4 with Docker Integration, Jenkins CI/CD Pipeline, AWS EC2 Instance and many more.\n\n\nOne of the Biggest Selenium 4.0 course in the Industry to cover all major topics, updates and Enhancements\n\n\n\n\n\n\nNew Features:\n\n\nNew Feature: All New Relative Locators\nNew Feature: Elements Screenshot\nNew Feature: Full page screenshot\nNew Feature: Tabs and Popups\nNew Feature: Full screen and Minimizing Window\nNew Feature: Actions class changes\nNew Feature: Change in Wait\nNew Feature: Element size\nNew Feature: has authentication\nNew Feature: Print to PDF\nNew Feature: CDP (Chrome DevTools Protocol)\n\n\nHandle SSL certificates\nMocking GEOLocations\nEmulating Device screen dimensions\nBlocking network request\nTesting slow network / network speed\nMOC TimeZone values\nGetting console logs\nGetting header information\nCustomizing Headers\nTest Network performance\nUser Agent\nGet URL information for Request and Response\nNew Feature: Page Load Strategy\n\n\nUpdates:\n\n\nChanges in TimeUnit\nRemoved Deprecated FindElementBy methods\nChanges in Actions API\nBrowser capabilities\n\n\nSelenium Grid 4 Detailed configuration, Integration with Docker, Parallel test execution and video recording of test case execution\nAmazon Webservices AWS integration to run the Selenium test on the Cloud platform\nDuring the course you will get complete support in your queries in less than 24 hrs TAT\n\n\nAfter successfully launching Selenium with Many live projects and Automation architect 9 live projects courses here's the next level of Latest Series on Selenium 4. So if you have little background of Core Java and Manual Testing, this course will make you an expert in Selenium 4.0 features with tons of new examples and a great learning experience.\n\n\nHappy Learning !!!",
      "target_audience": [
        "Anyone who wants to learn latest version of Selenium i.e. Selenium 4.",
        "Selenium 3 testers who wants to migrate to Selenium 4"
      ]
    },
    {
      "title": "Build+Deploy+Test with Jenkins 2.0",
      "url": "https://www.udemy.com/course/working-with-jenkins/",
      "bio": "Learn Jenkins 2.0 for end-to-end testing of applications",
      "objectives": [
        "Understand what Jenkins 2.0 is",
        "Understand Jenkins 2.0 freestyle project",
        "Understand Jenkins 2.0 pipeline projects",
        "Working with both Java and .Net project",
        "Working with Agents",
        "Working with Docker cross browser testing"
      ],
      "course_content": {
        "Introduction and Installation": [
          "Part 1 - Introduction",
          "Part 2 - Installation and configuring Jenkins 2.0",
          "Part 3 - Configuring Jenkins 2.0 for Build+Deploy+Test",
          "Part 4 - Downloading common Tools for Jenkins 2.0 and setting environment variab"
        ],
        "Working with Jenkins 2.0 for Java based application": [
          "Part5 -Building project with Maven command line interface",
          "Part 6 - Creating and working with Freestyle project using Jenkins 2.0",
          "Part 7 - Creating FreeStyle Project for Build + Test with Jenkins 2.0 (Java)",
          "Part 8 - Creating Pipeline project for build+test+report using cucumber Report",
          "Part 9 - Creating Pipeline project for build+test+report using cucumber report",
          "Part10 - Working with stage view in Jenkins 2.0 for pipeline project"
        ],
        "Working with Jenkins 2.0 for .Net based application": [
          "Part 11 - Freestyle project for Dot Net application using Jenkins 2.0 (Part A)",
          "Part 12 - Freestyle project for Dot Net application using Jenkins 2.0 (Part B)",
          "Part 13 - Running NUnit Selenium Test with Freestyle project using Jenkins 2.0",
          "Part 14 -Working with Pipeline project for .Net application"
        ],
        "Advanced configuration for Jenkins": [
          "Part 15 - Configuring email using Docker container for Jenkins 2.0 (Part A)",
          "Part 16 - Configuring email using Docker container for Jenkins 2.0 (Part B)",
          "Part 17 - Working with build triggers",
          "Part 18 - Configuring Build Agents for Jenkins 2.0",
          "Part 19 - Working with Jenkins Blue Ocean plugins"
        ],
        "Cross browser Parallel testing with Jenkins 2.0": [
          "Part 20 - Cross browser testing with Selenium (Part A)",
          "Part 21 - Cross browser testing with Selenium (Part B)"
        ],
        "Jenkins with Docker": [
          "Installing and Working with Jenkins Docker image",
          "Running Maven with Jenkins docker image via custom docker build",
          "Jenkins Docker file"
        ],
        "Jenkins Advanced concepts - Pipeline as a code": [
          "Understanding Pipeline as a code in Jenkins",
          "Creating Jenkinsfile from Jenkins Pipeline UI editor to check-in pipeline in Git",
          "Understanding and working with Declarative pipeline Syntax for Jenkinsfile build",
          "Jenkins Declarative Pipeline Syntax - Archive and Conditional steps",
          "Jenkinsfile syntax validator with VS Code",
          "Understanding and working with Multi-Branch Pipelines of Jenkins"
        ],
        "Jenkins with agents as docker containers": [
          "Introduction and understanding build slaves /Agents for Jenkins",
          "Configuring Jenkins Master with Local Docker daemon",
          "Running Docker container as build agent via Jenkins file (Part A)",
          "Running Docker container as build agent via Jenkins file (Part B)",
          "Running Docker container as build agent from Jenkins file",
          "Understanding Docker in Docker",
          "Building Custom Docker in Docker image for Jenkins master",
          "Building and running custom Docker in Docker image of Jenkins master",
          "Docker file to build custom Jenkins master"
        ],
        "Building applications with Jenkins agent as an container": [
          "Introduction to Building .NET Core app with Jenkins Docker Agent",
          "Creating Jenkins file for NET Core app and running without NET Core framework",
          "Creating Jenkins file for NET Core app and running with NET Core Jenkins Agent",
          ".NET Core EA Application",
          "Publishing Jenkins Docker Agent to Docker Hub Public registry",
          "Docker file and Jenkinsfile",
          "Complete Source code of Section 7,8,9"
        ],
        "Building Custom Docker Jenkins Master container and automating it": [
          "Introduction",
          "Getting list of Plugins from current Jenkins Master",
          "Building Jenkins Master docker image with Preinstalled plugins",
          "Running Jenkins Master with automated everything using Docker Compose",
          "Custom Docker compose file"
        ]
      },
      "requirements": [
        "Good understanding on Continuous integration concepts",
        "Basic understanding on Selenium",
        "Basic understanding on Java/C#",
        "Basic understanding on any scripting language"
      ],
      "description": "Build + Deploy + Test with Jenkins 2.0 course is designed in such a way that anyone with a good understanding of basic software development and testing can start learning this course effortlessly.\nThis course is designed not just for developers or testers, it's also designed for DevOps and Business Analyst.\n\n\nThis course covers rich topics from complete ground-up like\nBasics topics\nUnderstanding and configuring Jenkins 2.0\n\nUnderstand and work with Jenkins 2.0 freestyle project\n\nUnderstand and work with Jenkins 2.0 pipeline projects\n\nWorking with both Java and .Net project\n\nConfiguring and working with multiple Agents\n\nWorking with Docker and cross-browser testing\n\n\nWorking with Jenkins Blue Ocean\nAdvanced topics\nPipeline as a code\nUnderstanding Pipeline as Code\nCreating Jenkinsfile from Jenkins Pipeline UI editor to check-in pipeline in Git\nUnderstanding and working with Declarative pipeline Syntax for Jenkinsfile build\nJenkins Declarative Pipeline Syntax - Archive and Conditional steps\nJenkinsfile syntax validator with VS Code\nUnderstanding and working with Multi-Branch Pipelines of Jenkins\nJenkins agents running as a docker container\nIntroduction and understanding build slaves /Agents for Jenkins\nConfiguring Jenkins Master with Local Docker daemon\nRunning Docker container as build agent via Jenkins file (Part A)\nRunning Docker container as build agent via Jenkins file (Part B)\nRunning Docker container as build agent from Jenkins file\nUnderstanding Docker in Docker\nBuilding Custom Docker in Docker image for Jenkins master\nBuilding and running custom Docker in Docker image of Jenkins master\n\n\nBuilding and deploying application with Jenkins agent within container\n\n\nBuilding custom docker container with Jenkins master and automating it.\n\n\nAt the end of this course, one can have a clear understanding of what Jenkins is and its awesomeness with simplicity.",
      "target_audience": [
        "QA",
        "Dev",
        "DevOps"
      ]
    },
    {
      "title": "Practice ISTQB Test Analyst Advanced Exams - 2025",
      "url": "https://www.udemy.com/course/istqb-test-analyst-advanced-level-exams/",
      "bio": "Practice timed ISTQB® Test Analyst Exams and get ready to be an ISTQB® software certified test analyst CTAL.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course maps to the latest ISTQB® advanced level test analyst syllabus v3.1, 2021.\nTest your knowledge of Software Testing and prepare yourself to take the ISTQB Test Analyst Advanced Level exam CTAL. The questions are related to the ISTQB® Test Analyst Advanced Level latest Syllabus.\n\nThere are many questions on the web that are either outdated or wrongly answered. I am trying here to filter all those questions and provide you with a nice tool to practice the exam similar to the real-life exam as much as possible.\nThe course currently contains 3 full exams. Each has 40 questions and you have two hours to complete the test.\nThe questions are mostly from old real ISTQB® exams and have been re-edited to match the latest syllabus\nYou can take the test as many times as you like\nEach question has a detailed explanation, and I will be happy to provide any extra explanation to clarify any answer\nThe questions are distributed according to the ISTQB® Test Analyst Advanced Level guidelines EXACTLY like the real exam according to difficulty and distribution.\nThe result you get after completing the “ISTQB® Test Analyst Advanced Level” practice exam is just to assess your testing knowledge and should not be taken as an indication for the result of the real exam!.\nThis material is not accredited with the ISTQB®.\nISTQB® is a registered trademark of the International Software Testing Qualifications Board.",
      "target_audience": [
        "Anyone wishing to gain the ISTQB® Advanced Level Test Analyst",
        "Testers",
        "Business analysts",
        "Domain testers, customer and users"
      ]
    },
    {
      "title": "Software Quality Assurance",
      "url": "https://www.udemy.com/course/software-quality-assurance/",
      "bio": "Software quality is more important to us today than ever. Broad introduction of the subject matter.",
      "objectives": [
        "Write a software quality plan",
        "Define software quality metrics",
        "Prepare software quality checklists",
        "Develop an overall process improvement plan",
        "Understand how to best help your colleagues with the quality of their outputs",
        "Ensure the highest possible quality products",
        "Deliver value-added products",
        "Help your company win more business by delivering higher quality"
      ],
      "course_content": {
        "Software Quality Control: Introduction": [
          "Introduction to Software Quality Control"
        ],
        "Software Quality Control: Success": [
          "Software Quality Control: Success"
        ],
        "Reflections on Software Quality Control": [
          "Reflections: Concepts, Thinking and Ideas"
        ],
        "Terms and Concepts": [
          "Software Quality Control: Terms and Concepts"
        ],
        "Software Quality Control: Competencies": [
          "Competencies Part 1",
          "Competencies Part 2",
          "Competencies Part 3"
        ],
        "Software Quality Control: Standards": [
          "Standards"
        ],
        "Software Quality Control: Software Lifecycle Models": [
          "Software Lifecycle Models Part 1",
          "Software Lifecycle Models Part 2"
        ],
        "Software Project Management": [
          "Software Project Management Part 1",
          "Software Project Management Part 2",
          "Software Project Management Part 3",
          "Software Project Management Part 4"
        ],
        "Adoption of PM Practices": [
          "Adoption of PM Practices"
        ],
        "Software Quality Assurance": [
          "Software Quality Assurance Part 1",
          "Software Quality Assurance Part 2"
        ]
      },
      "requirements": [
        "Have a general knowledge of software development life cycles.",
        "Does not require knowledge of any programming languages"
      ],
      "description": "This program is designed for Software Quality Control and Assurance Manager, Project Manager and Software Development Team Member who is interested in increasing the likelihood of project success. The course looks at software quality control and assurance processes and practices, as well as support disciplines such as software project management, software configuration management and release management. Successful software quality assurance is the result of the combination and integration of these practices, and complements SE practices.\nTopics include:\nSuccess, Reflections, Terms and Concepts\nCompetencies, Standards, Software Lifecycle Models, Software Quality Assurance\nSoftware Project Management, Adoption of PM Practices\nReviews and Inspections, Software Testing, Testing Effort, Advances in Testing\nSoftware Quality as a Profession\nMetrics and Analysis, Software Configuration Management\nRelease Management\nVideo Duration Time: 6 Hours 31 Minutes and 11 Seconds\nClick on the Promo Video to view the introduction of the \"Software Quality Assurance\" learning video.\nThere are 18 well organized, high impact yet easy to follow Lectures. A test for Software Quality Assurance Certification is available upon finishing the course.\nContact Us for more information and licensing options.",
      "target_audience": [
        "Learners and practionares of quality control, quality assurance and quality management.",
        "software developers",
        "software project managers and team leaders",
        "Example: Beginner level course ideally suited for someone who knows very little about software quality assurance."
      ]
    },
    {
      "title": "REST API Testing, Automation using POSTMAN",
      "url": "https://www.udemy.com/course/rest-api-testing-automation-using-postman/",
      "bio": "Learn many features of the POSTMAN REST client for testing Restful API's, file uploads, data driven testing & many more.",
      "objectives": [
        "Capture Network Traffic by setting up Proxies",
        "Learn how to do multi-part File Uploads",
        "Perform data driven testing (create 1000 students with a click of a button)",
        "Learn how to send SOAP Requests using POSTMAN",
        "Integrate POSTMAN with NEWMAN & JENKINS",
        "Different types of Authentication (BASIC,OAUTH1.0,OAUTH2.0)",
        "Scripting in POSTMAN"
      ],
      "course_content": {
        "Introduction to Postman": [
          "Introduction to Postman"
        ],
        "Installing POSTMAN": [
          "Installing the Postman Standalone App(Windows & macOS)"
        ],
        "POSTMAN Features": [
          "POSTMAN APP Walkthrough",
          "Parameters,Response Handling in PostMan",
          "Starting the student App",
          "IMPORTANT: For users with Java 17+",
          "Launching Student app docker image",
          "GET Request(query parameters, path parameters)",
          "Create a new Student (POST method)",
          "Update student info(PUT request)",
          "Update partial info (PATCH request)",
          "Delete a student (DELETE method)",
          "HEAD method",
          "Options Method(Getting information about APIs)",
          "Generating code snippets in POSTMAN",
          "Creating presets"
        ],
        "Collections & Environments in POSTMAN": [
          "Setting up BestBuy API Playground",
          "(ALTERNATIVE)-Launching Bestbuy API playground docker image",
          "Global,Environment & Collection Variables",
          "Variable Precedence in POSTMAN",
          "Creating collections in Postman",
          "IMPORT/EXPORT Collections in Postman",
          "Collection Runner in Postman",
          "Creating Documentation for API's",
          "Importing Data in POSTMAN"
        ],
        "SOAP Requests using POSTMAN": [
          "Making SOAP Requests in POSTMAN"
        ],
        "Multipart FileUpload using Postman": [
          "Setting up account on zamzar.com",
          "Multipart FileUpload using Postman"
        ],
        "Interceptor & Proxy to capture browser network traffic": [
          "Capture traffic with Interceptor",
          "Setting up proxy in Postman"
        ],
        "Mock Servers & Mock Requests in Postman": [
          "Overview on Mocking Apis",
          "Create Mock Server from requests & collections"
        ],
        "Using Authentication in POSTMAN": [
          "Basic Authentication in Postman",
          "Introduction to paypal",
          "Creating developer account in paypal",
          "OAuth WorkFlow",
          "OAUTH2.0 Authentication with Paypal",
          "Introduction & Setup for Twitter API",
          "Creating,Reading tweets in Twitter using POSTMAN"
        ],
        "Data Driven testing using Postman": [
          "Starting the student app",
          "Creating 1000 students using POSTMAN"
        ]
      },
      "requirements": [
        "Basic understanding of RESTful services",
        "Basic knowledge of javascript"
      ],
      "description": "POSTMAN is a very popular tool used by software development teams in many companies. It is a very handy tool used by Developers when building RESTful web services, It is also used by many QA Engineers for testing, automating RESTful services.\nIt is the \"SWISS ARMY KNIFE\" of REST API Development, Testing. It provides many out of the box features for consuming Restful services.\nIn this course, you will learn many functionalities of the POSTMAN tool with practical examples. Below are some of the highlights of this course.\nCapture Network Traffic by setting up Proxies\nOrganize requests using Collections\nLearn how to do multi-part File Uploads\nLearn how to send SOAP Requests using POSTMAN\nPerform data driven testing (create 1000 students with a click of a button)\nDifferent types of Authentication (BASIC,OAUTH1.0,OAUTH2.0)\nScripting in POSTMAN\nIntegrate POSTMAN with NEWMAN\nIntegrate POSTMAN with JENKINS to execute scheduled tests.\nWhether you are developing API's or testing them, this course will provide you with all the examples needed to understand the Rich features provided by POSTMAN",
      "target_audience": [
        "Developers, QA Engineers, SDET's, Devops, IT Professionals"
      ]
    },
    {
      "title": "Web Automation with Selenium WebDriver and Python",
      "url": "https://www.udemy.com/course/web-automation-with-selenium-webdriver-and-python/",
      "bio": "Discover the powerful automation capabilities of Selenium with Python!",
      "objectives": [
        "Setting up the development environment, including installing Python and Selenium WebDriver",
        "Understanding the Selenium WebDriver API and how to use it to interact with web pages",
        "Locating web elements using different techniques, such as CSS selectors and XPath",
        "Manipulating web elements, including entering text, clicking buttons, and selecting options from dropdown menus",
        "Handling web page navigation, including refreshing pages, navigating back and forward, and switching between tabs",
        "Implementing techniques for effective testing, including waiting for elements to load and handling dynamic content",
        "Debugging and troubleshooting common issues that may arise when using Selenium WebDriver"
      ],
      "course_content": {
        "Course Welcome with FAQs, Files, and Links. Please read!": [
          "Welcome to the Course! FAQs, Links, and Files"
        ],
        "Course Overview": [
          "Welcome to the Course!",
          "Course Curriculum",
          "Environment and Course Set-up",
          "Selenium Use Cases"
        ],
        "Chrome Dev Tools": [
          "Using Chrome Dev Tools",
          "What is Selenium"
        ],
        "Locating Page Elements": [
          "Locating by CSS Selector",
          "Locating by ID",
          "Locating by Name",
          "Locating by Tag Name",
          "Locating by XPath",
          "Locating by Link Text",
          "Chaining Locators",
          "Useful Web Element Methods and Attributes"
        ],
        "Guided Project One": [
          "Guided Project Overview",
          "Guided Project Walkthrough"
        ],
        "Page Navigation": [
          "Opening and Closing Windows",
          "Opening and Closing Tabs",
          "Navigating iFrames",
          "Browser History",
          "Alerts",
          "Cookies and Storage",
          "Resizing Windows"
        ],
        "Automation of Filling in Forms": [
          "Buttons",
          "Input Elements",
          "Radio Buttons and Checkboxes",
          "Dropdown Menus",
          "Calendar Pickers",
          "File Upload and Download",
          "Drag and Drops",
          "Sliders",
          "Keyboard Actions"
        ],
        "Guided Project 2": [
          "Guided Project 2 - Overview",
          "Guided Project 2 - Code Along Walkthrough"
        ],
        "Waits": [
          "Implicit Waits",
          "Explicit Waits",
          "Adjusting Network Settings"
        ],
        "Selenium for Mobile": [
          "Setting Up Mobile Views",
          "Mobile Actions"
        ]
      },
      "requirements": [
        "Python experience required"
      ],
      "description": "Welcome to our comprehensive Selenium WebDriver with Python course!\nAre you looking to learn how to automate web testing using the powerful combination of Selenium WebDriver and Python? Then this course is for you!\nIn this course, you will learn the fundamentals of using Selenium WebDriver with Python, including how to set up your development environment, understand the Selenium WebDriver API, and use it to interact with web pages. You'll also learn how to locate web elements using different techniques, such as CSS selectors and XPath, and manipulate them to enter text, click buttons, and select options from dropdown menus.\nBut that's just the beginning. We'll also cover important topics such as web page navigation, including refreshing pages, navigating back and forward, and switching between tabs. You'll learn how to handle web page events, such as JavaScript alerts and prompts, and implement effective testing techniques, including waiting for elements to load and handling dynamic content.\nIf you run into any issues along the way, don't worry. We've got you covered. We'll teach you how to debug and troubleshoot common problems that may arise when using Selenium WebDriver, so you can keep your automation scripts running smoothly.\nBy the end of this course, you'll have a solid foundation in using Selenium WebDriver with Python to automate web testing tasks. You'll be able to write scripts that can interact with web pages, locate and manipulate elements, and handle events and dynamic content. You'll be well on your way to becoming a proficient automation engineer.\nSo if you're ready to take your web testing skills to the next level, sign up for our Selenium WebDriver with Python course today! With our comprehensive curriculum and expert instructors, you'll have everything you need to succeed. Don't wait any longer to start your journey towards becoming a Selenium WebDriver with Python pro.\nEnroll now and we'll see you inside the course!",
      "target_audience": [
        "Python developers interested in automating interactions on the web"
      ]
    }
  ]
}