{
  "courses": [
    {
      "title": "Boost your website speed without any coding!",
      "url": "https://www.udemy.com/course/boost-your-website-speed-without-any-coding/",
      "bio": "In this Website speed course, you will see how to enhance your WordPress website speed, your google rank, and your SEO.",
      "objectives": [
        "Understand what is website speed and why improving it is MANDATORY.",
        "Learn How to Boost your website speed without writing any single line of coding!",
        "Boost your website traffic by enhancing your SEO",
        "Learn how to measure your website speed and how to analyze the results you get.",
        "Know the best and the quickest ways to optimize each part of your website.",
        "Find out how to set up your plugins so you can maintain an excellent speed with a minimum effort."
      ],
      "course_content": {
        "Introduction": [
          "Hi there!",
          "What is Website speed and why enrolling in this course is a smart choice?",
          "How to test your website speed and to analyze your results!"
        ],
        "Easy and Quick Ways to speed up your website": [
          "Easy warming ups by cleaning your website and deleting all your unwanted data",
          "Clean up your broken links"
        ],
        "Optimizing your website": [
          "Stay safe! Learn how to back up your site!",
          "The tricks I use to optimize my images up to 90% while keeping their quality!",
          "How to optimize your video!",
          "The best way to optimize your database and boost your website performance!",
          "How to solve your hosting problem!",
          "Caching plugin: The one thing you can use to improve your speed in one minute!",
          "The secret trick I use to simplify your website code WITHOUT doing any coding!",
          "BONUS: How to fasten your website by a simple copy/paste move!",
          "Lecture 13: List of links you need"
        ]
      },
      "requirements": [
        "You should only have a Laptop and a wordpress website"
      ],
      "description": "Hey guys!\nIn this course, I am going to teach you how to speed up your WordPress website without doing any coding or paying any extra dollar!\nI am Rihab, an Engineer with more than 5 years experience in web designing and seo. I have helped hundreds of people to enhance their website speed and now I intend to help you enhance your website speed.\nI know how frustrating it is to have a slow website; I have been there myself and I know what you might be feeling right now. Especially, when every article in the internet is telling you that you have to fix your website speed.\nFirst of all, you should know that Website speed affects your user's experience. Clients usually avoid slow websites, and not only do they run away from such websites, they also never come back to visit them again!\nImagine yourself going to eat at a restaurant. You sit on your table waiting for the waiter to come and give you the menu. And you keep on waiting for a long time without him showing up. What will you do then? I bet you will leave the restaurant and go to the closest one!\nThat is exactly what happens when someone visits a slow website.\nFurthermore, Website speed affects your Google ranks, and this is something no one should tolerate! Google aims to give their clients the best experience they can get, that is why it favors fast websites and ranks them highly. So if you are aiming for a higher Google rank you have to take good care of your website speed.\nI know you might have tried so many online solutions, read dozens of articles, downloaded many plug-ins hoping to speed up your website… and nothing really worked out, nothing fixed your website speed.\nBut do not panic. In this course you will find the solution for all your problems, and not only will you be able to fix your website speed instantly but you will also provide your website with the suitable plans to keep it running fast with a minimum of efforts and without having to do any coding!\nWe will start this course by explaining what is website speed.\nThen we'll see together the method of measuring the website speed and how to analyze the results we get.\nNext, you will learn how to clean up your wordpress website so that you save space for your valuable data.\nThen I will teach you, step by step, how to optimize your existing media as well as your new media before uploading them to your website… And believe me, you will be surprised to see how easy this is and how much your media optimization will affect your website speed.\nAfterwards, I will reveal to you the special tricks I use to change slow and boring websites into fast and vivid ones. These tricks will be the key points in the transformation of your website speed. When I first discovered them, I thought that I had put my hands on some kind of magic tricks because the huge amount of improvement you will see and experience in your website speed shall astonish you.\nIn this course, I will deliver these tricks to you in a simple easy way. I will show you the tricks and I will accompany you into applying them step by step.\nHere I will teach you how to optimize every part of your website and how to keep it optimized all the time with a minimum of efforts! To maintain a high website speed!\nThis course is simple, quick and straight to the point. It is structured to respond to all your needs and to suit everyone. Both Wordpress beginners and experts will benefit from it.\nYou can start by applying these techniques tonight; I guarantee you that within 2 days you will experience a better website speed, and, thus, you will enhance your Google rank as well.\nThis course doesn't have a fixed price; it gets more expensive every day, i.e. if you visit this page tomorrow you might find that the price of the course has changed. Therefore, you'd better take profit of the opportunity and subscribe today at a lower price.\nDo not wait or hesitate because each passing minute of your website-life counts. Now, at this very moment, you are losing visitors, clients, and money _and you are losing them for good_, because of your website speed. Act and fix your website speed, let it rank highly in Google, let your visitors enjoy your website, and make them your permanent clients so that you can start collecting your profits!\nAnd do not forget you can also check the free parts of my course.\nSee you in few minutes.",
      "target_audience": [
        "This course is structured to fit everyone! Both beginners and experts will benefit from it!"
      ]
    },
    {
      "title": "AWS Storage- S3, Glacier, EFS, EBS, Storage Gateway",
      "url": "https://www.udemy.com/course/aws-storage-s3-glacier-efs-storage-gateway/",
      "bio": "master all Storage services on Amazon Cloud",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Amazon Cloud- Amazon Web Services.",
        "You would learn various types of Cloud storages on AWS",
        "You will learn about Simple Storage Service (AWS S3), Glacier and much more",
        "You will also learn about AWS File Storage and Block Storage"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Introduction to AWS": [
          "Exploring Amazon Web Services",
          "Creating an AWS account"
        ],
        "AWS Command Line Interface": [
          "AWS CLI: Installation and Configuring with IAM user credentials",
          "AWS CLI: Command Reference"
        ],
        "AWS Storage": [
          "Amazon S3 (Simple Storage Service)",
          "S3- Practical",
          "Amazon Storage Gateway",
          "Storage Gateway- Practical",
          "Amazon EFS (Elastic File Storage)",
          "EFS- Practical",
          "Amazon Glacier",
          "Glacier- Practical",
          "Amazon EBS (Elastic Block Storage)"
        ],
        "Practice test": [
          "Quick Practice test on AWS storage services"
        ],
        "Last words": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prerequisites at all, but if you are aware of some cloud based or web development tools and technologies, it is helpful.",
        "Having basic understanding of DevOp tools and concepts could be helpful."
      ],
      "description": "In this course, you will learn about various AWS Storage services available on Amazon Cloud. When you are preparing for an AWS Certification, Storage is the first thing you should learn and explore. You will be learning all kinds of Storage options available on AWS cloud with some hands-on demonstration of how you can actually create and instance and make use of various options available. You will be learning right from creating an AWS free tier account, running the AWS CLI and a brief introduction to AWS, so don't worry if you are a beginner. If you are already familiar with AWS, you can skip the first few sections and head directly to the Storage section. On AWS you will find various kind of Storage services, and you will be learning all of them in this course. Below are the Storage options on AWS:\nWhat is Amazon S3 (Simple Storage Service)?\nIt is a general-purpose object storage that works well for unstructured data sets such as media content. Amazon S3 provides the highest level of data durability and availability on the AWS Cloud. There are three tiers of storage: one each for hot, warm, or cold data. In terms of pricing, the colder the data, the cheaper it is to store, and the costlier it is to access when needed.\nWhat is Amazon Glacier?\nIt is a long-term storage service for storage of infrequently accessed data, such as end-of-lifecycle, compliance, or regulatory backups. Different methods of data retrieval are available at various speeds and cost. Retrieval can take from a few minutes to several hours.\nWhat is Amazon EBS (Elastic Block Storage)?\nIt provides durable block-storage option for use with EC2 instances. Use Amazon EBS for data that requires long-term persistence and quick access at guaranteed levels of performance. There are two types of block storage: solid-state-drive (SSD) storage and hard-disk-drive (HDD) storage.\nWhat is Amazon EFS (Elastic File Storage)?\nIt provides simple, scalable file storage for use with EC2 instances. Amazon EFS supports any number of instances at the same time. Its storage capacity can scale from gigabytes to petabytes of data without needing to provision storage. Amazon EFS is designed for workloads and applications such as big data, media-processing workflows, content management, and web serving.\nWhat is Amazon Storage Gateway?\nIt is generally used to quickly transfer data to any of the cloud storage- S3, EBS, EFS, or Glacier. You can move on-premise data to the Cloud with simplified storage management.",
      "target_audience": [
        "Anyone who just wants to learn and test Amazon Web Services Platform or any developer willing to develop his/her application over Amazon Cloud- Amazon Web Services."
      ]
    },
    {
      "title": "Kickstart Your Hyvä Adventure: Crafting Lightweight Magento",
      "url": "https://www.udemy.com/course/kickstart-your-hyva-adventure-crafting-lightweight-magento/",
      "bio": "Simplify, Speed Up, Succeed: Crafting Magento / Adobe Commerce with Hyvä + 6 months FREE JetBrains IDE",
      "objectives": [
        "Hyvä Theming Mastery: Understand the fundamentals of Hyvä theming, including setup, customization, and best practices for Magento development.",
        "Responsive Design Skills: Learn to create lightweight, responsive Magento frontends using Tailwind CSS and AlpineJS for modern user experiences.",
        "Practical Implementation Techniques: Gain hands-on experience with ViewModels, icon management, and building interactive components for dynamic eCommerce sites.",
        "ViewModel Utilization: Discover how to effectively use ViewModels to separate logic from presentation, improving code organization and maintainability.",
        "Building Custom Components: Develop the skills to create reusable components that enhance functionality and improve the user experience of your Magento store.",
        "Understanding Layout Handles: Explore layout handles in Hyvä to manage page structures and create flexible, dynamic layouts.",
        "Final Project Application: Apply your knowledge through a comprehensive final project that showcases your skills in building a complete Hyvä theme.",
        "Hyva Object and the HeroIcons: Best practices for integrating Hyvä with HeroIcons and with the window hyva Object.",
        "Hyvä Custom and Product Sliders: Presentation of the Custom and - SSR Product Sliders with practical ToDos",
        "Modals: Creating modern featured product modals using Modal ViewModal with nested Modal and the related ViewModel Model API Reference",
        "BASE_URL and fetch(): Using BASE_URL and fetch() to Create a Customer on the Fly",
        "Hyvä's Alpine JS Plugins: Better Performance and Interactivity for the Customer",
        "Hyvä JavaScript Events: Working with the different JavaScript Events like toggle-auth, update-gallery, toggle-cart",
        "Hyvä SectionData: Learn about the SectionData Management within the Hyvä Theme",
        "Hyvä Forms and the reCAPTCHA Integration: Learn about the Form Validations from Basic to Advanced and the reCAPTCHA Integration",
        "Hyvä Patterns: Learn about the different Hyvä Patterns like Components in Alpinejs",
        "Hyvä Section Cards and Product Attributes: Adjusting the PDPs with new Section Cards and Product Attributes"
      ],
      "course_content": {
        "Introduction to Hyvä Themes": [
          "Hyvä Theme Introduction",
          "Getting Started with the Hyvä Theme",
          "How to Claim Your 6-Month FREE JetBrains IDE License and Exclusive Offers",
          "Hyvä Custom Development Module Installation and Practical Exercises Guide",
          "How can I engage with the practical lessons without an active Hyvä license?",
          "Understanding the Benefits and Performance of Hyvä Theme for Magento"
        ],
        "Configuring Your Hyvä Frontend Theme": [
          "Creating Child Theme Based on the Hyvä Theme",
          "Hyvä Themes Overview",
          "Key Features and Functionalities in Hyvä Themes"
        ],
        "Hyvä Theme Styling Pre-Configuration": [
          "Configuring Tailwind CSS",
          "Browserlist",
          "Installing npm Packages",
          "PostCSS Settings In PHPStorm and Browser Sync",
          "Tools and Best Practices in Hyvä"
        ],
        "Tailwind CSS in the Hyvä Theme": [
          "Tailwind Introduction",
          "Master Tailwind Practice Tests ToDo",
          "Master Tailwind Practice Tests Solution",
          "Windy for Tailwind"
        ],
        "Layout and Design": [
          "Styling Layout Containers",
          "Hyvä Layout Handles",
          "Layout Containers and Handles in Hyvä Themes"
        ],
        "Enhancing Interactivity with Alpine.js in Hyvä Theme": [
          "Alpine.js Introduction",
          "Advanced Alpine.js Introduction",
          "Magics in Alpine.js",
          "Alpine.js Support in PHPStorm",
          "Master Alpine.js Practice Test ToDo",
          "Master Alpine.js Practice Test Solution",
          "Alpine.js: Core Concepts and Advanced Features"
        ],
        "Elevating Icons with Hyvä": [
          "HeroIcons in Hyvä",
          "Hero Icons Examples",
          "Master Icons Binding in Hyvä ToDo",
          "Master Icons Binding in Hyvä Solution"
        ],
        "Harnessing the Power of ViewModels and the - Registry in Hyvä": [
          "ViewModel Usage Example with the Footer Implementation",
          "ViewModelRegistry in Hyvä Themes",
          "Create Featured Products Modal Skeleton",
          "Create Featured Products ViewModel with Modal and Product Collection",
          "Style and Finalize the Featured Product Modal with Tailwind CSS"
        ],
        "Nested Modal and the Modal ViewModel API Reference": [
          "Modal ViewModel API Reference",
          "Create Nested Modal",
          "Modals only with JavaScript"
        ],
        "Hyvä Sliders": [
          "Create Hyvä Custom Slider",
          "Presentation of the SSR Hyvä Product Slider and the ToDo",
          "Hyvä Product Slider Solution"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, CSS, and JavaScript: Familiarity with web development fundamentals will help you understand the concepts taught in this course.",
        "Understanding of Magento: A foundational knowledge of Magento is beneficial, as this course focuses on enhancing frontend development within the platform.",
        "Development Environment Setup: Students should be able to set up a local development environment, including PHPStorm and necessary packages for Hyvä theming."
      ],
      "description": "Are you ready to supercharge your Magento store's performance and user experience? This course is your gateway to mastering Hyvä, the revolutionary theme framework that brings unparalleled speed and simplicity to Magento development.\nIn Kickstart Your Hyvä Adventure, I’ll guide you step-by-step through the process of building a lightweight, high-performance Magento / Adobe Commerce storefront using  Hyvä. You’ll discover how Hyvä streamlines frontend development with its modern tooling—Tailwind CSS for rapid styling and Alpine.js for dynamic interactivity-while drastically reducing bloat and enhancing site speed.\n\nThinking about getting Hyvä certified? Now’s your chance!\n\nWhat You'll Learn:\nThe core principles behind Hyvä’s minimalistic approach to Magento theming.\nHow to configure Hyvä with Tailwind CSS and Alpine.js for clean, responsive design.\nTechniques for crafting sleek, high-performance Magento stores with a fraction of the resources.\nHow to leverage Hyvä’s ViewModel and Registry for flexible, maintainable code.\nBest practices for integrating Hyvä with HeroIcons, Custom and Product Sliders and with the window.hyva Object.\nUsing BASE_URL and fetch() to Create a Customer on the Fly\nHyvä's Alpine.js Plugins for Better Performance and Interactivity\nHyvä JavaScript Events\nWorking with SectionData within the Hyvä Theme\nHyvä Forms with Basic and Advanced Validations\nHyvä Forms with reCAPTCHA Integration\nHyvä Patterns (Components)\nHyvä Section Cards\nHyvä Product Attribute Management on PDPs\nHyvä with GraphQL\nHyvä Content\nWho Is This Course For? This course is perfect for Magento developers looking to streamline their workflows, store owners who want a faster, more responsive site, and anyone excited to explore the future of Magento development through Hyvä.\nBy the end of this course, you'll have the tools and knowledge to build lightweight, fast, and modern Magento storefronts using Hyvä, setting you up for success in the competitive e-commerce landscape.\n\n\nThis is just the start! I’ll keep the course updated with the latest Hyvä insights to help your Magento eCommerce platform stay lightweight and fast.\n\nExclusive Offer for You:\nAs a valued student, you’ll gain access to exclusive offers that will further enhance your learning experience:\n6 Months FREE Access to Top JetBrains IDEs:\nPhpStorm – Perfect for PHP and Adobe Commerce / Magento development.\nWebStorm – The ultimate IDE for modern JavaScript and front-end development.\nIntelliJ IDEA – Ideal for Java and Kotlin developers.\nPyCharm – The go-to IDE for Python development.\nAnd More JetBrains IDEs...\nAutomatic 40% Discount on your selected IDE subscription after the free 6-month period — ensuring you continue to save as you grow your skills.\nStay tuned for even more exciting discounts and offers exclusively for my students!",
      "target_audience": [
        "Frontend Developers: Ideal for developers looking to enhance their skills in Magento frontend development using modern theming techniques and tools like Hyvä.",
        "Magento Enthusiasts: Perfect for Magento users who want to learn how to create lightweight, responsive themes and improve their eCommerce stores.",
        "Web Designers: Suitable for designers interested in combining design principles with practical development skills to create visually appealing Magento frontends."
      ]
    },
    {
      "title": "Laravel 11 with Inertia.js and Vue 3 | A Practical Guide",
      "url": "https://www.udemy.com/course/laravel-with-inertia-and-vue/",
      "bio": "The ultimate guide to build Single Page Applications with Laravel 11, Vue 3, and Inertia | Build Practical Projects",
      "objectives": [
        "Learn how to Build Single Page Applications using Laravel 11, Inertia and Vue 3",
        "Learn how to Implement Roles and Permissions on an Inertia based App (Without using any external package)",
        "Learn how to Build dependent dropdowns in Laravel and Vue",
        "Learn how to Build Data-tables using Laravel, Inertia and Vue.",
        "Learn how to build a Multiple Drag and Drop File Uploading and Processing with Laravel/Inertia/Vue",
        "Learn how to Implement Translations in an Inertia based app.",
        "Learn how to implement Infinite Scrolling in Inertia Based Applications",
        "Learn how to Customize Error Pages in Inertia"
      ],
      "course_content": {},
      "requirements": [
        "Beginner Level knowledge of PHP/Laravel is required",
        "Beginner Level knowledge of Vue is required"
      ],
      "description": "In this course, we will be Learning Inertia.js (A tool to build single-page apps, without creating any APIs)  along with Vue.js in a practical way by building multiple practical projects along the way.\n\n\nInertia serves as the solution, seamlessly connecting Laravel as a backend with a frontend Framework (React/Vue/Svelte), enabling us to build everything in one application (a monolith) while achieving the same outcome. The best part? We don't have to create an API.\n\n\nProjects Roadmap and Status:\n[Uploaded] Learn Inertia\n[Uploaded] Flexible Flash Notifications with Inertia\n[Uploaded] Customizing Error Pages in Inertia\n[Uploaded] Building a Simple Student's Management System\n[Uploaded] Implementing Roles/Permissions in Inertia-Based Applications.\n[Uploaded] Multiple Drag And Drop File Uploading and Processing with Inertia\n[Uploaded] Translations with Laravel and Inertia\n[Uploaded] Infinite Scrolling with Inertia\n\n\nProject Description:\n\n\n[Uploaded] Learn Inertia\nIn this section, we'll look into the basics of Inertia and some of the fundamental features of Inertia.js.\nSome of the topics we'll cover in this section include:\n\n\nLearn how to set up Laravel with Inertia and Vue Stack.\nLearn how to Format the data with API Resources.\nLearn about how to work with forms, and display validation errors\nLearn how to preserve the scroll behavior, and preserve the state of the page\nLearn how to implement Manual Visits and Partial Reloads in Inertia.\nLearn how to Implement Authorization checks (on both frontend and backend)\nLearn how to Customize the default Error pages and render Custom Inertia Pages (403, 404, 419 pages)\nLearn how to display Flash Notifications in Inertia/Vue\nLearn how to Set up page titles and meta tags.\n\n\n[Uploaded] Flexible Flash Notifications with Inertia\n\n\nIn this Section, we'll learn how to build a flexible flash notifications feature in Inertia.\nBy the end of the section, we'll have the ability to flash any notification, anywhere in our application, without repeating any code.\n\n\n[Uploaded] Customizing Error Pages in Inertia\nLearn how to Customize the default error pages in Inertia.\nWe'll learn the following in this Section:\nLearn how to customize the default error pages in Laravel\nLearn how to return an Inertia Response whenever any error is encountered in our app.\nLearn how to render different types of errors by re-using the same vue component.\nLearn how to define a config to enable/disable the rendering of custom error pages\n\n\n[Uploaded] Building a Simple Student's Management System\nIn this section, we'll build a simple CRUD app and dive into the fundamentals of building CRUD applications with Laravel, Inertia, and the Vue Stack, and we will learn the following topics along the way:\n\n\nLearn about Watchers in Vue.js and Build dependent dropdowns in Inertia/Vue\nLearn how to work with Factories and Seeders in Laravel, and seed the necessary data for all of our Models\nLearn how to use a Re-usable Vue Component to display validation messages.\nLearn how to Implement Server Side Pagination from scratch.\nLearn how to Implement Search Functionality in an Inertia/Vue Data-table.\nLearn how to Implement filters in an Inertia/Vue data table.\n\n\n[Uploaded] Implementing Roles/Permissions in Inertia-Based Applications.\nWe'll continue from where we left off in the previous section and implement the Roles and Permissions functionality without using any external plugins.\nSome of the features that we'll cover in this section are listed below:\n\n\nImplement Roles CRUD.\nManage Permissions related data for a specific role on Role Create/Edit Pages\nImplement Authorization/Gate Checks throughout the project (on both frontend and backend)\n\n\n[Uploaded] Multiple Drag And Drop File Uploading and Processing with Inertia\nIn this section, we'll build a multiple-file chunked uploader in Inertia/Vue with the ability to pause, resume, and cancel uploads.\nAnd learn the following along the way:\n\n\nLearn how to Integrate and Use Laravel Reverb in an Inertia/Vue Application.\nLearn how to edit metadata (like the title and description) for each upload — even while they’re uploading and processing.\nLearn how to queue and process uploaded files on the Backend\nLearn how to report progress updates to the client using Laravel Reverb.\nAnd many more...\n\n\n[Uploaded] Translations with Laravel and Inertia\nLocalization is a breeze in Laravel applications, but what happens when you need to bring this to the client side? Turns out in Inertia, it's pretty simple.\nIn this section, we'll build a language switcher, share translations with the client, and build a simple translation helper for Vue to use directly in templates. We'll also cover caching translations to keep things running smoothly.\n\n[Uploaded] Infinite Scrolling with Inertia\nIn this section, we'll seed our database with a bunch of data and start building the solution, we'll start by using Inertia's router to load additional data, and later we'll optimize the infinite scrolling flow by replacing the router with Axios.",
      "target_audience": [
        "Students who want to Build Monolith(SPA) Applications using Laravel, Inertia and Vue"
      ]
    },
    {
      "title": "MERN Stack Car Rental Application 2021 : React ,Redux ,Node",
      "url": "https://www.udemy.com/course/mern-stack-car-rental-application-2021-react-redux-node/",
      "bio": "Build real time Car Rental Service Application with React , Redux , Node",
      "objectives": [
        "Building complex applications with MERN Stack",
        "Using state management tool redux for data managing in react",
        "Hands on experience with actions , reducers , store",
        "Making the applications responsive with bootstrap and antd"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Front End Setup": [
          "React setup",
          "Routes config",
          "Creating layout"
        ],
        "Backend Setup": [
          "Node setup",
          "Mongo Node Connection",
          "Create car model",
          "Add static data to cars collection",
          "Get all cars API"
        ],
        "Homepage Design": [
          "Redux Store Setup",
          "Get redux state to Homepage",
          "Home page design",
          "Car Hover Effect"
        ],
        "User Authentication": [
          "Login , Register pages design",
          "Login and Register actions",
          "User authentication API",
          "Protected Routes",
          "Car animation in login/register pages"
        ],
        "Car Booking": [
          "Booking screen",
          "Working on timeslots",
          "Booking car - frontend",
          "Booking car backend-1",
          "Booking car backend-2"
        ],
        "Cars Filtering": [
          "Filter cars based on availability",
          "Booked timeslots modal"
        ],
        "Payment gateway": [
          "Stripe demo",
          "Payment gateway - frontend",
          "Payment gateway - backend"
        ],
        "User Bookings Page": [
          "User Bookings Design",
          "User Bookings Logic"
        ],
        "Admin Panel": [
          "Add new car - design",
          "Add new car-api",
          "Edit Car Design",
          "Edit car - api",
          "Delete Car"
        ]
      },
      "requirements": [
        "Javascript",
        "React",
        "Node"
      ],
      "description": "React is an open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser\nExpress.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs. It has been called the de facto standard server framework for Node.js.\nMERN is a free and open-source JavaScript software stack for building dynamic web sites and web applications. Because all components of the MERN stack support programs that are written in JavaScript, MEAN applications can be written in one language for both server-side and client-side execution environments\nTechnologies Used\nReact,\nRedux,\nNode\nExpress,\nMongo DB,\nAnt Design\nConcepts Covered\nStripe Payment Gateway Integration,\nSingle Applicatons\nState Management\nRedux actions , reducers , store\nWorking with complex and Dynamic layouts\nReal time car rental service concepts\nUser Dashboard,\nAdmin dashboard,\nManage Users, Cars, Bookings from the Admin panel\nPushing Code to Github,\nHosting application in HerokuSingle Page Applications\nSingle Page Applications\nResponsive Designs\nHover Effects and Animation\nBy the end of the course, you will know how to work with complex apps without REDUX including the payment gateway.\n24/7 Q/A Support.",
      "target_audience": [
        "React Developers",
        "Node Developers"
      ]
    },
    {
      "title": "Complete Website Design and Development with WordPress",
      "url": "https://www.udemy.com/course/complete-website-design-and-development-with-wordpress/",
      "bio": "Learn to Become a Professional Website Designer without Coding (WordPress)",
      "objectives": [
        "Design a Business and an E-commerce Website",
        "Design a Website from Scratch",
        "Design a Website with Different Pagebuiders",
        "Develop a template or script for further designs",
        "Install Wordpress, Master Cpanel and create a Business Email account"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Website Design and Development",
          "Domain Name Overview and Purchase",
          "How to Purchase Website Hosting",
          "Cpanel Overview and WordPress Installation"
        ],
        "Website Design Checklist": [
          "Website Design Checklist",
          "How to Design a Website With Layouts and Template",
          "How to Design a Business Logo"
        ],
        "Homepage Designs": [
          "How to Design a Website Homepage Part 1",
          "Homepage Design and Customization Part 2",
          "Homepage Design and Customization Part 3"
        ],
        "About Us and Contact us Page Design": [
          "About Us and Contact us Page Design",
          "Page Design and Customization Continues"
        ],
        "How to Design a Website with Elementor": [
          "How to Design a Website with Elementor Page Builder"
        ],
        "How to Design an E-commerce Website": [
          "How to Design an E-commerce Website Part 1",
          "How to Design an E-commerce Website Part 2",
          "How to Create a Template and Script",
          "Digital Marketing Courses (E-BOOKS)"
        ]
      },
      "requirements": [
        "No programing experience needed, you will learn everything you need to know"
      ],
      "description": "This is a Complete Step by Step Website Design and Development Training. Learn to Become a Professional Website Designer without Coding (WordPress).  At the end of this training, you should be able to design a professional looking website from scratch for your business and other businesses on the internet. At the end of this training, you should be able to position yourself as a professional website designer and be your own BOSS! Building a Website is not that difficult especially with the use of a software called WORDPRESS. You can design various types of websites without writing a single line of code. WordPress is an amazing tool that helps you design websites like business websites, ecommerce website, portfolio website, Landing pages, school portals as well as school management system.\nWhat You Are Going To Learn in this Training Includes...\nComplete Step by Step Video on How to Design a Professional and  Responsive Business Website\nHow to design an E-commerce Website\nHow to design a logo\nHow to Resize Images Using Software\nHow to create business emails, forwarders and autoresponders\nHow to design a website with templates\nHow to create a template and scripts for designing websites\nHow to install WordPress and Premium Themes.\nThis Training also comes with amazing resources like Logo and graphics design software, premium themes and plugins, page builders and 24/7 support.",
      "target_audience": [
        "Beginners and Advance Individuals in WordPress"
      ]
    },
    {
      "title": "Introduction to Computer Networks",
      "url": "https://www.udemy.com/course/computer-networks/",
      "bio": "Learn everything about Computer Networks, in a fast & engaging way!",
      "objectives": [
        "Types of networks (size, topology)",
        "Cables in computer networks",
        "TCP/IP architecture & ISO/OSI model",
        "IP protocol (IP address, routing)",
        "TCP & UDP - How they work and what they do",
        "Domain Name System (DNS) - What is does and how it works"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Say Hello :)"
        ],
        "The basics: How computer network works": [
          "Types of networks",
          "Cables in computer networks",
          "TCP/IP Architecture and ISO/OSI model",
          "IP protocol",
          "TCP & UDP - How they work?",
          "TCP: Connection establishing, Data flow, Close connection",
          "DNS: How it works & What it does"
        ],
        "BONUS: Discounts to my other courses!": [
          "BONUS: Discounts to my other courses!"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "I remember the time when I took Computer Network class at my University. It was extremely boring. Though the professor had great knowledge about Computer Networks, he couldn't explain it in a simple, fast and engaging way. That is why I created this course.\nIn this course I will explain the most important concepts of Computer Networks in a simple, fast and engaging way!\nWho is this course for?\nAnyone who wants to learn the most important concepts of Computer Networks\nPerson who just wants to learn how the Internet works\nAnyone who is studying on their Computer Network exam.\nWhat will you learn?\nAs I wrote earlier, you will learn the most important concepts of Computer Networks. The exact topics include:\nTypes of networks (size, topology)\nCables in computer networks\nTCP/IP architecture\nISO/OSI model\nIP protocol (IP address, routing)\nTCP & UDP - How they work and what they do\nTCP - Connection management\nDNS Servers\nWhat things do I need?\nIn order to take this course, you only need your computer or smartphone and internet connection.\n\n\nAlso, if you don't understand something or if you need help with something. You can always reach out to me. Mostly I respond within a Day.\nAt the end of this course, You will get a certificate of completion. That you can put on your resume or on your linked in profile.\nThe course also comes with amazing 30 day money back guarantee. So you can try the course, risk free.\n\n\nSo do you want to learn how the internet works?\nEnroll today and I will see you in the course",
      "target_audience": [
        "Anyone who wants to learn the most important concepts of Computer Networks",
        "Person who just wants to learn how the Internet works",
        "Anyone who is studying on their Computer Network exam."
      ]
    },
    {
      "title": "The Complete WordPress Automation Course For Beginners!",
      "url": "https://www.udemy.com/course/how-to-automate-a-wordpress-website-complete-walkthrough/",
      "bio": "Learn how to automate your wordpress website using certain unique plugins!",
      "objectives": [
        "The best complete automation plugins (both the free and paid ones).",
        "How to automate a wordpress membership site.",
        "How to automate your wordpress website contents (content marketing).",
        "How to automate a wordpress ecommerce website.",
        "How to link your social media platform to your wordpress website and automate the process.",
        "How to automate the maintenance process of your wordpress website.",
        "How to figure out what to automate in your wordpress website."
      ],
      "course_content": {
        "Explaining the process of automation": [
          "Content Marketing Automation",
          "Website Maintainance Automation",
          "Different Automation Scenarios",
          "Social Media Automation",
          "Ecommerce Automation",
          "Membership Automation",
          "Best Complete Automation Plugins (free and paid)"
        ]
      },
      "requirements": [
        "Money to purchase wordpress plugins",
        "An already created wordpress website",
        "You'll need to have an idea of the kind of wordless website you're running"
      ],
      "description": "Hi there,\nI hope you're alright,  My name is James Gabriel (learn more about me on my profile). First of all I want to say a Happy new year to you and thank you stopping by to find out what this course or training is all about (i really appreciate it). Now, it's obvious you've seen this course title and subtitle, right? if the answer is yes, then I'm sure that you're actually looking for ways to automate your wordpress website (it's very important, especially in this era or age of modern technology), if this is the case, then you're actually in the right place. Now, if you run a online business or company, then you would understand the importance of a website, and automating it will give you more time to focus on your marketing strategy, so as to increase or optimize your business revenue,etc. For this reason, I've decided to create a unique course in which I'm gonna educate you on how to automate your wordpress website using certain unique plugins that are used in the website automation industry (this are top plugins in the website automation industry).\nNow, i'm gonna start off this course by talking about different automation scenarios that will help you to actually figure out what you actually want to automate in your wordpress website (just in case you have no idea of what you really want to automate in your wordpress website), then after which i'm talk about the following:\nHow to automate the maintenance process of your wordpress website.\nHow to link your social media platform to your wordpress website and automate the process.\nHow to automate  a wordpress ecommerce website.\nHow to automate a wordpress membership site.\nHow to automate your wordpress website contents (content marketing).  The best complete automation plugins (both the free and paid ones).\nNow, this premium course or training is made for businesses or individuals who wish to automate their wordpress website and I strongly recommend you watch this course preview or promo video, so as to get a clear idea of the rare information and goodies packed inside this course. In case you don't know, the information that will be disclosed to you in this course is something that other website automation experts would easily charge you for a minimum of $500, but i decided not to (the $500 minimum price), because I understand that fact that you guys are actually a newbie, when it comes to wordpress website automation. if i were in your shoes and I came across a rare and premium course or training just like this particular one, then, i will consider it as a golden opportunity and won't let it slip off my fingers for any reason at all, considering the kind of information that i'm gonna get or acquire from this course (personally speaking).\nNow, if you've decided that you want to automate you website by enrolling for this video course, then there are gonna be a few things that you'll need in order to get the most information out of this premium course and they including the following:\nAn already created wordpress website.\nWillingness to purchase certain paid wordpress automation plugins (they are also  free plugins that will be disclosed to you in this course but we highly recommend you purchase the paid plugins because they often tend to provide more automaton functionality).\nAn idea of the type of wordpress website you're  running and what you wish to automate (i'm gonna run some quick automation scenarios to help decide or figure out what you really want to automate in your wordpress website).\nNow, it's left for you to decide if you really want to tap into the world of wordpress website automation or if you really want to do everything manually forever. I hope you take a wise decision that will be the best for you.\nWish you the best,\nJames Gabriel.",
      "target_audience": [
        "individuals and businesses who wish to automate their wordpress website using unique plugins"
      ]
    },
    {
      "title": "XML Crash Course For Beginners",
      "url": "https://www.udemy.com/course/xml-crash-course-for-beginners-learn-xml-with-in-one-hour/",
      "bio": "Quickly Learn basics of XML & start writing the web applications which use XML aggressively",
      "objectives": [
        "Get a strong hold on XML Technology",
        "Use XML properly in JavaScript & other programming & script languages",
        "Create XML based documents"
      ],
      "course_content": {
        "Introduction & Overview of the Lecture": [
          "Introduction & Overview",
          "What is XML?"
        ],
        "XML Technology": [
          "Declaration, Syntax, Tags & Elements",
          "Attributes & Comments",
          "Namespace",
          "Characters Entities & CDATA",
          "Validation & Online Tools",
          "What Next?"
        ]
      },
      "requirements": [
        "Desire to Learn XML Technology",
        "Basics of Internet"
      ],
      "description": "This course is for anyone who is interested in quickly learning XML & it's power to utilize it in Web Development. Currently no web site or Web Service exist which do not offer support to XML. This course will give you the strong basic understanding of XML using practical implementation on screen & help you implement it in your web development projects.\nI designed this course for anyone including non-technical person. So if you are not a developer and still interested in learning about the XML & see how it works then this course is for you.\nHere we will start from zero & go to higher level very quickly. You don't need multiple hours long course to learn XML Schema. This course will make you strong enough for the interviews, your college of office projects, your freelancing projects to build basic & complex Web Services as well as applications.",
      "target_audience": [
        "Anyone interested in building their career in Web Development",
        "Anyone interested in learning web development",
        "Anyone interested in learning XML & XML Schema",
        "Anyone going to attend an Interview for a Web Developer & want to revise their basics"
      ]
    },
    {
      "title": "PHP CodeIgniter for Absolute Beginners",
      "url": "https://www.udemy.com/course/php-codeigniter-for-absolute-beginners/",
      "bio": "Master the MVC Code Igniter framework from scratch",
      "objectives": [
        "Learn core concepts of MV and Code Igniter",
        "Learn all about the CI structure and best practices",
        "Build a real world app along the course",
        "Learn Real world web development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Understanding CodeIgniter": [
          "Introduction to CodeIgniter",
          "Installation CodeIgniter",
          "MVC Framework",
          "Basics CodeIgniter",
          "Models",
          "Configuration in Codeigniter",
          "CRUD Functionality(Introduction)",
          "Creating a Database and Model",
          "Controllers for CRUD functionality",
          "Creating views for CRUD functionality",
          "Checking the output and routing"
        ],
        "Cookie and Session Management": [
          "Understanding Cookies and Sessions",
          "Session Management",
          "Cookie Management",
          "Libraries CodeIgniter"
        ],
        "Managing Website Features": [
          "Tempdata Codeigniter",
          "FlashData Codeigniter",
          "Page Caching",
          "CodeIgniter Hooks",
          "Security",
          "Page Redirection"
        ],
        "Advanced CodeIgniter Features": [
          "File Uploading",
          "Error Handling",
          "Email Configuration",
          "Internalization CodeIgniter- Introduction",
          "Internalization Output CodeIgniter",
          "Helpers in CodeIgniter"
        ],
        "Project Overview": [
          "Introduction to Software Project",
          "Database Design",
          "Scope of Project",
          "Creation Login Mechanism",
          "Dashboard with header and footer views",
          "User Listing and logout mechanism",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of PHP, HTML and JavaScript is required to complete the course"
      ],
      "description": "Learn CodeIgniter from scratch with this simple and easy to master course!\nBuilding dynamic websites is not an easy challenge and requires time and effort dedicated to coding every bit and piece of the website, which is why anytime there is a new tool that promises to ease the woes of coding, developers always jump at the chance to try it.\nCodeIgniter is a simple open-source framework that makes it the coding tasks easier by providing a faster way to set up a PHP website from the ground-up. This tool with a small framework, ensures that developers can design websites that are light, fast and dynamic.\nSo, for any developer that wants to become a server-side master, this is a tool that they should definitely have in their toolkit. But, it’s not always easy to find a course that is clear and concise and targets exactly what you are looking for!\nThis is why we have designed this course with an aim to do just that. Using a no-fluff and clear approach at the topic at hand, this tutorial will breakdown CodeIgniter into simple and easy to learn videos.\nAt the end of this course, you will have not only learnt the CodeIgniter framework, but you will actually be able to start building your own projects from scratch. In addition to knowledge, this course will also give you the practical hands-on experience and the confidence to start coding your own websites.\nThe course will start at the very beginning with a detailed introduction into the CodeIgniter framework, from there moving on to installing the framework. From there you will become familiar with the framework, before you start tackling the basic functions and tools that make CodeIgniter special.\nWhile the theoretical will include numerous examples, at the end of the theoretical session, you will then actually practice what you learn by building a complete project from scratch with the framework.\nAll of this and so much awaits you in this course. Enroll now and we’ll see you on the other side!",
      "target_audience": [
        "Any one who wants to learn the PHP- Code Igniter framework will find this course very useful"
      ]
    },
    {
      "title": "Web Applications for Everybody Specialization on Development",
      "url": "https://www.udemy.com/course/web-applications-for-everybody-specialization-on-development/",
      "bio": "Build dynamic real-world applications and web apps. Use PHP, MySQL and CSS to build web and database applications.",
      "objectives": [
        "Learn Mastery skills for web application development",
        "Applying ChatGPT AI skills for your real - world practical tasks",
        "Create your own stunning, layouts for awesome websites using generative AI prompts",
        "Apply on Application development to Start their own online business",
        "Master client-end design using CSS3, back-end development PHP coding with MySQL",
        "Create your own source code for real-world problem statements",
        "Learn to get ChatGPT AI prompt solutions for your development",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask a great questions",
          "Introduction CSS",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "CSS Syntax",
          "Creating a first page with CSS Style",
          "What is Source code",
          "Add ChatGPT AI skills for your Course Learning",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "CSS Basic": [
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "CSS Classes",
          "CSS IDs",
          "Colors",
          "Backgrounds",
          "Floating",
          "Positioning",
          "Margins",
          "Padding",
          "Borders",
          "Color style tag exercise"
        ],
        "CSS Intermediate": [
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "Font Family",
          "Font Styles",
          "Applying Google Fonts",
          "Box Model",
          "Icons",
          "Tables",
          "Navigation-Menu",
          "Dropdowns"
        ],
        "CSS Advanced": [
          "Advanced Selectors",
          "Forms",
          "Website Layout",
          "Rounded Corners",
          "Color Keywords",
          "Animations",
          "Pseudo Classes",
          "Gradients",
          "Shadows",
          "Calculations",
          "Creating Responsive Page"
        ],
        "CSS Expert": [
          "Button Styles",
          "Pagination",
          "Multiple Columns",
          "Image Reflection",
          "UI - UX Design",
          "Social Media Icons",
          "External CSS Style adding"
        ],
        "PHP Introduction": [
          "What is PHP",
          "Installing XAMPP for PHP, MySQL and Apache",
          "Installing Code Editor(Visual Studio Code)",
          "Creating PHP Project on XAMPP",
          "Hello World Program"
        ],
        "PHP Basic": [
          "Variables",
          "Echo and Print",
          "Data Types",
          "Numbers",
          "Boolean",
          "Arrays",
          "Multi-Dimensional Array",
          "Sorting Arrays",
          "Constants"
        ],
        "PHP Strings": [
          "Strings",
          "String Formatting",
          "String Methods",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "PHP Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Increment – decrement operators",
          "Logical operators",
          "Ternary operator"
        ],
        "PHP Decision making system": [
          "If statement",
          "If-else statement",
          "If-elseif-else statement",
          "Switch-case statement"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "The \"Web Applications for Everybody Specialization on Development\" is a comprehensive course designed to teach you the essential skills required to build dynamic and scalable web applications. This specialization is perfect for beginners looking to dive into web development, covering key technologies like PHP, MySQL, and front-end development fundamentals.\n\n\nStarting with the basics of web development, you’ll learn how to design and develop interactive websites. You’ll gain hands-on experience in PHP, one of the most popular server-side scripting languages, and learn how to build dynamic, data-driven web applications. Learn to handle user input, create user authentication systems, and manage session data.\n\n\nNext, dive into MySQL, where you’ll learn to design and manage databases for storing and retrieving data efficiently. Master SQL queries, including creating tables, performing joins, and implementing database relationships. Understand how to connect PHP to MySQL and retrieve, insert, update, and delete data seamlessly, forming the backbone of your web applications.\n\n\nYou’ll also cover front-end development basics, including HTML, CSS, and JavaScript, to enhance the user experience with responsive and interactive designs. Learn how to manipulate the Document Object Model (DOM), validate forms, and update content dynamically using JavaScript and AJAX.\n\n\nBy the end of this specialization, you’ll be able to build fully functional, full-stack web applications from scratch using PHP, MySQL, and front-end technologies. Enroll today and start building real-world web applications with confidence!",
      "target_audience": [
        "Beginner PHP coding, MySQL and CSS developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build web applications using ChatGPT AI skills",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer with Generative AI",
        "Who wants to create Business intelligence reporting system"
      ]
    },
    {
      "title": "Advanced Woocommerce - Step by Step",
      "url": "https://www.udemy.com/course/advanced-woocommerce/",
      "bio": "Take your Woocommerce knowledge to the next level.",
      "objectives": [
        "After this course you will be able to customize all aspects of the Woocommerce shopping experience."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Woocommerce Layout - Location of the Files": [
          "Part 1 - Archive Product/Shop Page",
          "Part 2 - Single Product Page",
          "Part 3 - Cart and Checkout Pages",
          "Part 4 - Order Complete and My Account Pages"
        ],
        "General Modifications": [
          "Breadcrumbs Overview and Written Function",
          "Breadcrumb function - Part 1 - !is_front_page()",
          "Breadcrumb function - Part 2 - is_archive() & is_tax()",
          "Breadcrumb function - Part 3 - is_single()",
          "Breadcrumb function - Part 4 - is_category() & is_page() & is_tag()",
          "Breadcrumb function - Part 5 - is_day() & is_month() & is_year()",
          "Breadcrumb function - Part 6 - is_author(), get_query_var('paged'),is_search()",
          "Remove the Sidebar and Make All Your Pages Full Width - Part 1",
          "Remove the Sidebar and Make All Your Pages Full Width - Part 2 - PAGE.PHP"
        ],
        "Working with Products": [
          "Mix and Match Variable Products"
        ],
        "Archive Product Page Modifications": [
          "Change the \"Add to Cart\" Text on Product Archive page"
        ],
        "Single Product Page Modifications": [
          "Customize the \"Add to Cart\" Text on Single Product pages",
          "Creating a Custom Single Product page - Part 1",
          "Creating a Custom Single Product page - Part 2"
        ],
        "Working with Search": [
          "Making an Advanced Product Search page - Part 1",
          "Making an Advanced Product Search page - Part 2",
          "Making an Advanced Product Search page - Part 3",
          "Making an Advanced Product Search page - Part 4",
          "Making an Advanced Product Search page - Part 5"
        ],
        "Cart Modifications": [
          "Creating a Custom Cart page",
          "Require a Minimum Purchase Amount for an Order - Part 1",
          "Require a Minimum Purchase Amount for an Order - Part 2",
          "If a certain product is in the cart, cart eligible for special discount"
        ],
        "Checkout Modification": [
          "Alter the Default State on the Checkout page",
          "Removing Certain States from the Drop Down",
          "Remove Unwanted Woocommerce Checkout Fields",
          "Adding an Extra Fee/Surcharge in Woocommerce Checkout - Part 1",
          "Adding an Extra Fee/Surcharge in Woocommerce Checkout - Part 2",
          "Modify the Checkout Page Based on the Type of Product"
        ],
        "Working with Shipping": [
          "Offer free shipping on orders over $50 - Part 1",
          "Offer free shipping on orders over $50 - Part 2",
          "Automatically add product to cart on visit - Part 1",
          "Automatically add product to cart on visit - Part 2",
          "Prevent Shipment to PO Boxes - Part 1",
          "Prevent Shipment to PO Boxes - Part 2"
        ]
      },
      "requirements": [
        "A basic knowledge of WordPress.",
        "Basic knowledge of PHP and MySQL.",
        "Experience working with Woocommerce."
      ],
      "description": "Advanced Woocommerce - Step by Step\nThis course is for anyone interested in taking their Woocommerce knowledge to the next level and beyond.  In this course, we dig deep under the hood and examine the structure and layout of various Woocommerce files.  We start from the Shop page and work our way forward through the Woocommerce folder and show you the where, the how and the why.\nA Marketable Skill For all Current and Future Developers\nBy the conclusion of the course, you will be able to successfully:\nNavigate Woocommerce successfully\nCustomize the Shop page\nCustomize the Single Product page\nCustomize the Cart page\nCustomize the Checkout page\nCustomize the Order Complete page\nCustomize the My Account page\nMove all these files into your child theme\nand so much more....\n\nWith this newly acquired knowledge, you will be able to provide more in-depth repair, build and design services for Woocommerce.  This course contains 44 lectures and almost 3 hours of content.\n\nI look forward to beginning of our learning journey.",
      "target_audience": [
        "Anyone who wants a deep understanding of how Woocommerce works.",
        "Anyone who wants to customize any part of the Woocommerce user shopping experience."
      ]
    },
    {
      "title": "React JS Practice Test For Personal Development",
      "url": "https://www.udemy.com/course/certified-react-js-practice-test-for-personal-development/",
      "bio": "React JS",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Multiple choice questions and answers (MCQs) on React to prepare for exams, tests, and certifications. These questions are taken from a real written exam and some parts are taken from an interview. So you will find questions on basic techniques such as UI, DOM, services, JSX, and more. This quiz will easily prepare anyone to pass their online test.\nFrom below you will learn many things that need to help you to pass this exam and your personal development.\n\n\n1. Why we Should Learn React Js?\nReactJS presents graceful solutions to some of the front-end programming’s most persistent issues. It’s fast, scalable, flexible, powerful, and has a robust developer community that’s rapidly growing. There’s never been a better time to learn React.\nYou’ll develop a strong understanding of React’s most essential concepts: JSX, class and function components, props, state, lifecycle methods, and hooks. You’ll be able to combine these ideas in React’s modular programming style.\nIt’s not a framework\nAngular or Ember are frameworks where some decisions are already made for you. React is just a library and you need to make all decisions by yourself. It focuses on helping you to build user interfaces using components.\n2. Expressions in JSX\nYou can include a JavaScript expression using a pair of curly brackets anywhere within JSX:\nNested JSX elements\nconst myClasses = (\n<a href=\"payal . com\">\n<h1> Sign Up! </h1>\n</a>\n);\nFor the code to compile, a JSX expression must have exactly one outermost element. In the below block of code the <a> tag is the outermost element.\nSX is a syntax extension of JavaScript. It’s used to create DOM elements that are then rendered in the React DOM.\nA JavaScript file containing JSX will have to be compiled before it reaches a web browser. The code block shows some example JavaScript code that will need to be compiled.\n3. React Virtual DOM\nIf you are using React or learning React, you must have heard of the term “Virtual DOM”. Now what is a Virtual DOM, and why does React use it?\nVirtual DOM\nThat’s where the concept of virtual DOM comes in and performs significantly better than the real DOM. The virtual DOM is only a virtual representation of the DOM. Every time the state of our application changes, the virtual DOM gets updated instead of the real DOM.\nWell, you may ask ” Isn’t the virtual DOM doing the same thing as the real DOM, this sounds like double work? How can this be faster than just updating the real DOM?”\nThe answer is virtual DOM is much faster and efficient, here is why.\nHow is Virtual DOM faster?\nWhen new elements are added to the UI, a virtual DOM, which is represented as a tree is created. Each element is a node on this tree. If the state of any of these elements changes, a new virtual DOM tree is created. This tree is then compared or “diffed” with the previous virtual DOM tree.\nOnce this is done, the virtual DOM calculates the best possible method to make these changes to the real DOM. This ensures that there are minimal operations on the real DOM. Hence, reducing the performance cost of updating the real DOM.\n4. How does React use Virtual DOM\nNow that you have a fair understanding of what a Virtual DOM is, and how it can help with the performance of your app, let's look into how React leverages the virtual DOM.\nIn React every UI piece is a component, and each component has a state. React follows the observable pattern and listens for state changes. When the state of a component changes, React updates the virtual DOM tree. Once the virtual DOM has been updated, React then compares the current version of the virtual DOM with the previous version of the virtual DOM. This process is called “diffing”.\nOnce React knows which virtual DOM objects have changed, then React updates only those objects, in the real DOM. This makes the performance far better when compared to manipulating the real DOM directly. This makes React stand as a high-performance JavaScript library.\nIn simple words, you tell React what state you want the UI to be in, and it makes sure that the DOM matches that state. The great benefit here is that as a developer, you would not need to know how the attribute manipulation, event handling or the manual DOM updates happen behind the scenes.\nAll of these details are abstracted away from React developers. All you need to do is update the states of your component as and when needed and React takes care of the rest. This ensures a superior developer experience when using React.\n5. Props in JSX\nThere are several different ways to specify props in JSX.\nJavaScript Expressions as Props\nYou can pass any JavaScript expression as a prop, by surrounding it with {}. For example, in this JSX:\n<MyComponent foo={1 + 2 + 3 + 4} />\nFor MyComponent, the value of props .foo will be 10 because the expression 1 + 2 + 3 + 4 gets evaluated.\nif statements and for loops are not expressions in JavaScript, so they can’t be used in JSX directly. Instead, you can put these in the surrounding code. For example:\nfunction NumberDescriber(props)\n{  let description;  if (props .number % 2 == 0)\n{  description = <strong>even</strong>;  } else {    description = <i>odd</i>;  }\nreturn <div>{props .number} is an {description} number</div>;\n}\nYou can learn more about conditional rendering and loops in the corresponding sections.\nProps Default to “True”\nIf you pass no value for a prop, it defaults to true. These two JSX expressions are equivalent:\n<MyTextBox autocomplete /><MyTextBox autocomplete={true} />\nIn general, we don’t recommend not passing a value for a prop, because it can be confused with the ES6 object shorthand {foo} which is short for {foo: foo} rather than {foo: true}. This behavior is just there so that it matches the behavior of HTML.\n6. ReactJS — Components\nIn this chapter, we will learn how to combine components to make the app easier to maintain. This approach allows you to update and change your components without affecting the rest of the page.\nStateless Example\nOur first component in the following example is App. This component is the owner of the Header and Content. We are creating Header and Content separately and just adding it inside the JSX tree in our App component. Only the App component needs to be exported.\n7. Props And PropTypes In React\nProps and PropTypes are an important mechanism for passing information between React components, and we’re going to look into them in great detail here. This tutorial will introduce you to the details about props, passing and accessing props, and passing information to any component using props. However, it’s always a good practice to validate the data we are getting through props by using PropTypes. So, you will also learn how to integrate PropTypes in React.\nUnderstanding Props\nReact allows us to pass information to components using things called props (short for properties). Because React comprises several components, props make it possible to share the same data across the components that need them. It makes use of one-directional data flow (parent-to-child components). However, with a callback function, it’s possible to pass props back from a child to a parent component.\nThese data can come in different forms: numbers, strings, arrays, functions, objects, etc. We can pass props to any component, just as we can declare attributes in any HTML tag. Take a look at the code below:\n<PostList posts={postsList} />\nIn this snippet, we are passing a prop named posts to a component named PostList. This prop has a value of {postsList}. Let’s break down how to access and pass data.\n8. Optimizing Performance In React Apps\nSince React was introduced, it has transformed the way front-end developers build web applications, and its virtual DOM is famous for effectively rendering components. In this tutorial, we will discuss various methods of optimizing performance in React applications, and also the features of React that we can use to improve performance.\nDuring the initial rendering process, React builds a DOM tree of components. So, when data changes in the DOM tree, we want to React to re-render only those components that were affected by the change, skipping the other components in the tree that were not affected.\nHowever, React could end up re-rendering all components in the DOM tree, even though not all are affected. This will result in longer loading time, wasted time, and even wasted CPU resources. We need to prevent this from happening. So, this is where we will focus our optimization effort.\n9. State in React\nUntil now, we discussed only static components with static data passed down the components tree. Often, it’s needed to create a stateful component where the state is changing over time.\n10. React Hooks\nReact Hooks\nHooks are the new feature introduced in the React 16.8 version. It allows you to use state and other React features without writing a class. Hooks are the functions which “hook into” React state and lifecycle features from function components. It does not work inside classes.\nHooks are backward-compatible, which means it does not contain any breaking changes. Also, it does not replace your knowledge of React concepts.\nWhen to use a Hooks\nIf you write a function component, and then you want to add some state to it, previously you do this by converting it to a class. But, now you can do it by using a Hook inside the existing function component.\nRules of Hooks\nHooks are similar to JavaScript functions, but you need to follow these two rules when using them. Hooks rule ensures that all the stateful logic in a component is visible in its source code. These rules are:\nOnly call Hooks at the top level\nDo not call Hooks inside loops, conditions, or nested functions. Hooks should always be used at the top level of the React functions. This rule ensures that Hooks are called in the same order each time a components renders.\nOnly call Hooks from React functions\nYou cannot call Hooks from regular JavaScript functions. Instead, you can call Hooks from React function components. Hooks can also be called from custom Hooks.\nConclusion\nWe have now learned the Core Concept of ReactJs what we can accomplish. If you feel inspired to build on these examples. Cheers!",
      "target_audience": [
        "Beginner"
      ]
    },
    {
      "title": "Learning PHP Data Objects PDO",
      "url": "https://www.udemy.com/course/learning-php-data-objects-pdo-for-beginners/",
      "bio": "PDO: The Powerful and secure way to access database. Learn how to Shift from MYSql & MySQLi syntax to PHP data objects.",
      "objectives": [
        "Most in Demand Database Skill in Comprehensive way.",
        "PHP Data Objects",
        "Making PHP Application FREE of Hack",
        "Making PHP Application FREE of SQL Injection",
        "PDO Transactions",
        "PDO Functions",
        "PDO Prepaired Statements",
        "Secure way to access database."
      ],
      "course_content": {
        "Introduction": [
          "Promo of Course",
          "Introduction"
        ],
        "All Coding Exercises": [
          "Source Codes"
        ],
        "Building Blocks": [
          "Connecting Database",
          "Executing Simple Query",
          "Fetch",
          "Fetch All",
          "Fetch Column",
          "Counting Rows",
          "Errors of SQL in General",
          "Errors of SQL via PDO",
          "2 Statements",
          "Exec",
          "Preventing SQL Injection"
        ],
        "Working with Prepared Statements": [
          "Creating Form",
          "Named Parameter",
          "Using Question Mark",
          "Passing Array",
          "Passing 2nd Method Array",
          "Binding Columns"
        ],
        "Working with Transactions": [
          "How Transaction Works",
          "Info",
          "Selecting",
          "Initiating the Transaction",
          "Completing Transaction",
          "Showing Errors"
        ],
        "Bonus": [
          "What Next",
          "For more"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge",
        "Satarter Knowledge of working with any database."
      ],
      "description": "While working with PHP you have a choice to adopt any supported database. You can pick MySQL, ODBC SQLite , ODBC, IBM DB2, FireBird, PostgreSQL, 4D, CUBRID, ORACLE Database, SQL Server, Informix. And if you choose Mysql , your php application will only work with the selected database. But somehow if you have to move to some other database e.g. Sqlite then of-course you have to go through every line of your application to make it compatible with SQLite. And that’s a bit difficult.. Right?\nSo instead of creating individual database code we pick centralized form which is portable and that will allow you to shift within minutes in case.And that centralized code is called PDO (PHP DATA OBJECTS). Which allows you to change your database anytime you want, by just changing its connection type.\nPDO Provides Common interface to any number of database systems.It allows developers to create code which is portable across many databases and platforms. That’s reflects its highest performance and and power, And on top of everything its extremely easy to write. And this course is gonna teach you how? Whether you are new to PDO or planning to shift from your existing platform to PDO.\nThis Course will teach you all the bread & butter of PDO. As in PDO we have multiple ways to deal with CRUD operations. That’s why 1 single project can not express all the methods. So, we will work on individual concepts step by step so that you can implement PDO in your own application out there within minutes.\n-----------------------------------------------------------\n--\n------------------------------------------------------------------------------\n\n\nWhat are the Advantages of Using PDO in PHP Application?\nPDO is the Most in Demand Database Skill in Comprehensive way. It means that it allows a lot of functionalities along with many database support. As many developers are using it as a first priority that is why you will find a great support and code example according to easy and difficult scenarios out-there on the internet, blogs, groups etc.\nBefore PDO, After implementing many appropriate security measures on PHP Applications, they were still more open to hacks, whenever we have to take user data through Contact / Registration form or in any way of dealing with input fields, because databases put the input field directly into SQL that led to SQL Injection but with PDO we bind the input fields which made our  PHP Applications FREE of Hack and SQL Injection.\nIf you are planning to create some enterprise PHP application or some banking application, PDO has a great solution to create them. By using PDO Transactions, you can create more complex hierarchical application in most easiest and secure way and minimize all the haphazard within minutes.\nFor doing one type of task PDO offers many supported functions which you can use according to your own need and reduce the memory usage and can make PHP application up and running in timely manner.\nCourse Road Map\nFunctions\nError Handling\nPrepared Statements\nTransactions\nEnroll Now!\n-------------------------------------------------------------------------------------\nBasic PHP Knowledge is required for this Course\n-------------------------------------------------------------",
      "target_audience": [
        "PHP Aspirants",
        "Students who want to shift from mysql,mysqli,Sqlite,ODBC etc, to PDO",
        "Students who want to create Hack/SQL Injection Free Application"
      ]
    },
    {
      "title": "Angular Advanced (v. 16+)",
      "url": "https://www.udemy.com/course/angular-advanced/",
      "bio": "Mastering advanced features in Angular v.16+: Boost your skills, pass interview and become a Professional!",
      "objectives": [
        "Increase knowledge in Angular",
        "Pass technical interviews",
        "Understand Angular deeper",
        "Build technically pumped applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Change Detection": [
          "Strategies",
          "OnPush strategy and Input",
          "OnPush strategy and Event",
          "OnPush and AsyncPipe",
          "Manual manage of the DI"
        ],
        "Dependency Injection": [
          "Injecting and providing dependencies",
          "Hierarchy of Injectors",
          "Resolution modifiers: @Optional, @Self, @SkipSelf, @Host",
          "Provider keys: useClass, useExisting, useFactory, useValue"
        ],
        "ZoneJS and NgZone": [
          "ZoneJS",
          "NgZone",
          "NgZone run() and runOutsideAngular()"
        ],
        "Content Projection": [
          "ViewChild",
          "ViewChildren",
          "ContentChild",
          "ContentChildren"
        ],
        "Microfrontends & ModuleFederation": [
          "Monorepo, Multirepo and project structure approaches",
          "Semantic versioning and ModuleFederation",
          "Building Microfrontend"
        ],
        "Signals": [
          "Why? When? How?",
          "Practice"
        ],
        "Standalone": [
          "NgModule app architecture",
          "Standalone app architecture",
          "Building standalone application"
        ],
        "Service Workers": [
          "Service Workers overview",
          "Service Workers setup",
          "Push notifications"
        ],
        "Web Workers": [
          "Web Workers usage"
        ]
      },
      "requirements": [
        "Experience in Angular more than 6 months"
      ],
      "description": "Welcome to my course Angular Advanced!\nThis is your chance to boost your knowledge in Angular - the most powerful front-end framework. The demand for the Angular developers grows constantly and the technology develops over time. And in this course you will develop your skills in building Angular applications, will deeply dive into the framework capabilities and upgrade your knowledge with the new features of Angular 16.\nI have extended practical experience in interviewing Angular developers and also I have collected the questions that cause the greatest technical difficulties in understanding and explanation.\n\n\nThe course contains more than 4,5 hours of content, and the topics are presented as concisely as possible and with practical examples and presentations.\n\n\nMore specifically, you'll learn about:\nChange Detection in-depth\nZoneJS and NgZone\nDependency Injection in-depth\nContent projection\nMicrofrontends with Module Federation\nService Workers\nWeb Workers\nNew features in Angular 16\nThis course is for developers, who already have the experience in Angular, so you should have the basic familiarities with MVC model, structure of the angular application, component's creation and of course JavaScript.\n\n\nEvery section includes several videos and concludes with a coding tasks and practical examples to help you master what you learn in that section.\n\n\nHave a good journey!",
      "target_audience": [
        "Middle and Senior Angular Developers"
      ]
    },
    {
      "title": "How Web Developers Make Passive Income with React JS?",
      "url": "https://www.udemy.com/course/how-web-developers-make-passive-income-with-react-js/",
      "bio": "Build a Crypto Currency Converter",
      "objectives": [
        "Understand how to make money with your own ideas",
        "Build a crypto currency converter with React JS"
      ],
      "course_content": {},
      "requirements": [
        "Just know the basics of web development",
        "html & css",
        "javascript"
      ],
      "description": "Hey Guys,\nIf you are looking to make money with the skills you already have as a web developer this course is for you. I've made over $150,000 dollars in the past 4 years just by creating small services for online users. All it takes is to have an idea and do research on a niche field can be health care, financial, arts or any other field you might be interested on. Then create a small service application using the skills you already know then make money from the advertising or by selling the service to them directly. Take this course where we use the latest front end framework React 16 to help you earn an extra $30-50k a year.",
      "target_audience": [
        "Any developer who is looking to make side income",
        "Anyone looking to make an extra $10,000 dollars a month"
      ]
    },
    {
      "title": "Login & Registration with PHP MYSQL and Bootstrap4",
      "url": "https://www.udemy.com/course/complete-authentication-system-with-php-mysql-and-bootstrap4/",
      "bio": "Login Registration Email verification Authentication system Forgot-Reset password Profile Management PHP MySQL Bootstrap",
      "objectives": [
        "Student will be able to create a Login & Registration System",
        "Student will be able to create a Forget & Reset password functionality",
        "Student will master SQL CRUD operations",
        "Students will be able to upload an image to the server",
        "Students will be able to use cookies",
        "Students will be able to verify their accounts via email",
        "Students will be able to explain what XSS & SQL Injection prevention is"
      ],
      "course_content": {
        "Introduction": [
          "Course Preview",
          "Before you get started",
          "What we will build"
        ],
        "Setup Environment": [
          "Section Overview",
          "PHP environment",
          "Installing XAMPP",
          "Database Creation"
        ],
        "Project Implementation - Part 1": [
          "Section Overview",
          "POST vs GET",
          "Registration - Validation",
          "Registration - Required",
          "Registration - Complete"
        ],
        "Project Implementation - Part 2": [
          "Section Overview",
          "Login - Validation",
          "Login - Remember Me",
          "Login - Account Verify"
        ],
        "Project Implementation - Part 3": [
          "Section Overview",
          "Forgot Password",
          "Upload Image",
          "Profile Management"
        ],
        "Project Finished": [
          "Recap",
          "Bonus"
        ]
      },
      "requirements": [
        "Students should know how to use a code editor",
        "Basic PHP, MySQL, HTML & CSS knowledge is an advantage",
        "Be able to learn quickly"
      ],
      "description": "Include Bootstrap 4.3!\nHi! Welcome to the PHP Login, Registration System with MySQL and Bootstrap 4. This course will teach you how to create a fully secured:\nuser login & registration\nprofile management\nforgot/reset password\nemail account verification\nremember me functionality\nupload files such as profile images\nThis is a fast-paced course. This means that the instructor explains the flow of the work behind the scenes without writing any code. This benefits you by:\nSaving you a lot of time watching me writing code\nYou will learn really fast\nYou won't be bored\nYou are going to learn each concept step by step. You will not only learn to build a simple login system. Course major topics include:\nLogin/Logout/Register/Profile Management\nUploading file securely\nYou’ll learn how to implement form validation and verification.\nYou'll learn how to implementing Forgot/Reset Password.\nDelete your account\nEmail verification with SMTP server in PHP\nSecure testing of SQL INJECTION, XSS\nThis course comes with a 30-day money-back guarantee! If you are not satisfied in any way, you'll get your money back.\nSo what are you waiting for?  Learn the concepts about authentication in PHP & MYSQL, advance your career and increase your knowledge, all in a fun and practical way!\n\n\nI am excited to see you on the course!",
      "target_audience": [
        "Beginner level students looking to improve their skills in PHP and MySQL",
        "Students that have some very basic knowledge in PHP & MySQL",
        "Students that have a basic understanding of HTML, CSS & Bootstrap",
        "Students with no basic knowledge will find the course more 5% harder"
      ]
    },
    {
      "title": "React, Next.js and Django: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/react-django-advanced/",
      "bio": "React with Typescript, Next.js, Redux, DRF 3.1, Docker, Redis, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "React Hooks with Typescript",
        "React Material UI",
        "NextJS with Typescript",
        "Use Redux"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django Admin": [
          "Setup",
          "Docker",
          "Models",
          "Database",
          "Wait for db",
          "User Manager",
          "Admin Authentication Endpoints",
          "Common App",
          "Register",
          "Login",
          "Jwt",
          "Static Methods",
          "Authenticated User",
          "Logout",
          "Profile",
          "Admin Endpoints",
          "Ambassadors",
          "Faker",
          "Products",
          "Links",
          "Orders"
        ],
        "Django Ambassadors": [
          "Ambassador Authentication Endpoints",
          "Setup",
          "Scopes",
          "Revenue",
          "Ambassador Endpoints",
          "Products",
          "Redis",
          "Searching Products",
          "Sorting Products",
          "Paginating Products",
          "Clearing the cache",
          "Creating Links",
          "Stats",
          "Rankings",
          "Redis Sorted Sets"
        ],
        "Django Checkout": [
          "Endpoints",
          "Getting Link Data",
          "Creating Orders",
          "Atomic Transactions",
          "Stripe",
          "Sending Emails"
        ],
        "React Admin": [
          "Setup",
          "Template",
          "Router",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Material UI",
          "Pagination",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Orders",
          "Profile",
          "Redux",
          "Using Redux"
        ],
        "React Ambassador": [
          "Setup",
          "Common Files",
          "Navigation",
          "Header Component",
          "Stats and Rankings",
          "Products",
          "Searching Products",
          "Sorting Products",
          "Lazy Loading",
          "Selecting Products",
          "Generating Links"
        ],
        "Next.js Checkout": [
          "Setup",
          "Template",
          "Routes",
          "Link Data",
          "Order Total",
          "Submitting the Form",
          "Stripe",
          "Confirming Orders"
        ]
      },
      "requirements": [
        "Good understanding of React",
        "Good understanding of Python and Django"
      ],
      "description": "Learn how to create an Ambassador App using React, Next.js and Django Rest Framework. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Django API.\nIn Django you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nLogin with Scopes\nUse Redis\nUse Stripe\nSending Emails\nFilter Cached products\nIn React you will learn:\nCreate a React project with Typescript\nCreate a Next.js project with Typescript\nReact Material UI\nUse Redux\nUse React Hooks\nCreate public and private routes\nRestrict routes for unauthorized users\nUse Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Django 2.1 - Python Web Development for Beginners",
      "url": "https://www.udemy.com/course/django-21-python-web-development-for-beginners/",
      "bio": "Django is simple enough for beginners, powerful enough for the pros. Use it to create amazing websites and python apps.",
      "objectives": [
        "3.5 hours of Full HD video material divided into 15 downloadable lectures",
        "Access to our private facebook group available to only students of this Django course",
        "Build and publish your first Website using django python",
        "Host your django websites on Heroku for free",
        "How to Build Database Driven Websites With Django 2.1",
        "How to Use Static Image Files",
        "Create beautiful websites using Bootstrap 4.1"
      ],
      "course_content": {
        "Creating the Django App Basics": [
          "Introduction to Django 2.1",
          "Migrations and Django Admin",
          "Creating a Django App"
        ],
        "Building up the Django Website": [
          "Rendering HTML files using Templates",
          "Static files in Django HTML Templates",
          "Navigation bar using Bootstrap 4",
          "Dynamic Web with Django"
        ],
        "Backend using Django": [
          "Creating Models",
          "Django Querysets and Database Shell",
          "Django Forms",
          "Integrating Bootstrap 4 with Django",
          "Sending data from view to django templates"
        ],
        "Hosting Django on Heroku": [
          "Installing dependencies for Heroku",
          "Deploying the App",
          "Adding custom domains"
        ]
      },
      "requirements": [
        "You should already have a basic understanding of Python. Example - What are variables, functions etc.",
        "A code editor of your choice - Recommended is Pycharm IDE",
        "You won’t need to buy any software – everything we are going to use will be free"
      ],
      "description": "When I first learned Django, I was overwhelmed with the amount of information in front of me. I came from a background of basic web development. So, I had an idea about html, css etc. but had no idea how to transfer that information to building websites using Python.\nI had a project in my mind and worked on that project for a couple of months. It took me a lot of try and errors to figure out what works and what doesn't work. Surprisingly the Django documentation isn't that good.\nIn this course, I have put in my years of experience of Django and condensed into 2 hours of practical application of Django Python for Beginners. Here is what we gonna do -\nWe will build your first web app in MINUTES\nWatch over my shoulders, as I build a Personal Website that you can replicate\nI will provide step by step instruction on what to do at every point.\nAt no moment you will feel that you are lost on what to do next.\nYou will also be given access to a private facebook group just for the students of this group, where you can talk with your fellow students, exchange information and help each other out. Even after you finish the course, this community will be there for you to grow.\nWhy choose me as an instructor? Why buy this course among all those other courses?\nWhen i was a kid i saw this YouTube video on how make a folder  invisible on Windows I was so fascinated with this idea. Since then my love for technology has only grown. I understand the  people who are passionate about learning new things. At the end of each  section we will take a quiz to check up on your skills and see if we’re  ready for the next section. We will create this project together from  start to finish.\nSo, why wait? If all this sounds great to you, Press on “Take this Course” and start learning today! 100% money-back guarantee!",
      "target_audience": [
        "Beginners who want to build their first Website using Django in 2 hours",
        "Python developers who have a desire to create Django Web Applications",
        "Students who want to learn about Python Web Development to build beautiful websites",
        "Any person who wants a quick start to developing web apps using django",
        "Do NOT take this course if you are a Django Developer with many years of experience"
      ]
    },
    {
      "title": "Create a Google Blogger Clone Using PHP, MySQL, JavaScript",
      "url": "https://www.udemy.com/course/create-a-blogger-clone-from-scratch-javascript-php-mysql/",
      "bio": "Build a WordPress & Blogger like CMS & Learn, How to Create Multi Blogging Platform in PHP,PDO,JavaScript,MySQL",
      "objectives": [
        "Build your own CMS like Blogger with most amazing features such as multi blogs, subdomains, Template edtior, Drag and drop Gadgets, new Posts and much more!",
        "Know how to easily use PDO with MySQL databases",
        "Learn how to develop using an PHP OOP (Object Oriented) approach",
        "Understand how to use JavaScript to retrieve data to display popups, updating posts, blog data",
        "Write clean codes",
        "Learn to rewrite clean SEO Friendly URLs for blogs",
        "Learn to create MySQL Database Relationships"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Xampp installation",
          "Text editor",
          "Directory Structure",
          "Project Files And Login Form"
        ],
        "Creating Database Class": [
          "Connecting To Mysql Database",
          "Creating a separate file for classess",
          "Creating Database Class",
          "Creating method to access PDO methods"
        ],
        "Creating User Login": [
          "Creating Users Table",
          "Creating Validate Class",
          "Creating method to include classes automatically",
          "Validating login",
          "Creating method to check if Email is already exist",
          "Logging User in",
          "Creating Method to Check if User is Logged in"
        ],
        "Creating Dashboard(Admin Panel for Blogs)": [
          "Setting up Dashboard page",
          "Creating Search Engine friendly URLs",
          "Creating New Table for Blogs",
          "Creating Method to return Data from tables",
          "Creating New Table For Blog Permissions",
          "Creating method to check if user is Admin",
          "Creating New Table For Blogs Posts",
          "Creating Method to Display Blog Posts",
          "Creating New Table for Post Labels",
          "Creating Method to Display Post Labels",
          "Creaitng Method for LabelMenu",
          "Creating JS function to display LabelMenu",
          "Creating Js Function to display add new label Box",
          "Creating Ajax request for label menu",
          "Validating addLabel Ajax file",
          "Creating Create Method (CRUD Functions)",
          "Creating Delete Method (CRUD Functions)",
          "Creating Function to add labels by label list",
          "Creating function to check all posts",
          "Creating Js funciton to publish posts (as bulk)",
          "Creating Condition to publish posts at once",
          "Creating Update Method (CRUD Functions)",
          "Creating method to draft posts at once",
          "Creating function delete multiple posts at once",
          "Creating function to delete post by link",
          "Creating js function to search posts in dashboard",
          "Creating method to display searched posts",
          "Creating method to display total number of pages for posts",
          "Creating conditions to display draft, publish, all post",
          "Creating Method To Count Total Number of Pages For Posts",
          "Creating new js file to handle our pagination methods",
          "Creating click event for page number",
          "Creating conditions to display next pages post",
          "Creating conditions to display next page",
          "Creating condition to display previous page",
          "Creating codition to display post by post limit option",
          "Creating condition to display draft or publish posts page",
          "Add links to dashboard tabs"
        ],
        "Creating Page": [
          "Creating new file for pages",
          "Make pagination buttons work for pages",
          "Adding scripts to make publish, draft and delete buttons work"
        ],
        "Creating Comments Page": [
          "Creating comments page",
          "Creating new table for blog comments",
          "Creating method to display comments",
          "Creating method to display comment pages number",
          "Making pagination buttons work for comments pages",
          "Creating conditions to delete comments from comment page",
          "Creating condition to delete coment by link",
          "Creating new page for Pending comments",
          "Creating functions to publish comments",
          "Creating method publish comment by link"
        ],
        "Blogs Settings Page": [
          "Creating settings page",
          "Creating method to update title of blog",
          "Creating method update description",
          "Creating method to display blog authors list",
          "Creating js file for blog author section",
          "Creating method to display image before uploading it",
          "Making close button work for author section",
          "Inserting blog author",
          "Creating method to upload images",
          "Creating new js function to display author Menu",
          "Creaing method to change user permission",
          "Creating method to delete authors",
          "Creating method to update Meta Description",
          "Creating js function to update PostLimit",
          "Creating method to update custom error",
          "Creating method to update comment moderation",
          "Creating method to update profile",
          "Creating method to update password",
          "Creating logout method"
        ],
        "Blogs methods": [
          "Creating method to display blog data using subdomain",
          "Setting up subdomain in localhost",
          "Creating method to display blog data using subdomain",
          "Creating 404 error page",
          "Creating method to display blog posts",
          "Creating method to display post image as thumbnail",
          "Creating post page to display post data",
          "Creating method to get post data using slug url",
          "Display post data on post page",
          "Creating method to display post labels on post page",
          "Creating new table for blog widgets",
          "Creating method to display header gadget",
          "Creating method to display Nav Gadget",
          "Creating condition to include domain links in blog template",
          "Creating method to display label posts",
          "Displaying label posts in post page",
          "Creating method to diplay widgets on sidebar",
          "Creating method to display labels gadget",
          "Creating html-javascript widget",
          "Creating method to display list widget",
          "Creating method to display author gadget",
          "Creating method to display top Posts gadget",
          "Creating method to display footer gadgets",
          "Display title for label posts page",
          "Making search gadget work",
          "Creating method to display search posts",
          "Limitng text on posts preview to display",
          "Creating method to display comment Form",
          "Creating method to display comments on post",
          "Creating method to display replies on comments",
          "Creating method to post comments on blog post",
          "Creating method to display comments on post"
        ],
        "Creating Post editor to post posts and pages": [
          "Creating new page for new post",
          "Creating method to display labels on new post page",
          "Creating method to display label in textarea",
          "Creating js method to check if user typing for title in the title field",
          "Creating method to generate post link using title",
          "Creating js condition to make link options work",
          "Validating custom url input field",
          "Creating ajax request to create post",
          "Creating method to publish post",
          "Creating method to save post",
          "Creating new page for edit post",
          "Creating method to update post",
          "Creating method to make published post draft",
          "Creating js function to upload image in editor",
          "Uploading images to post editor",
          "Creating method to new page",
          "Creating method to update page"
        ],
        "Creating Layout Section for Blogs": [
          "Creating layout page",
          "Creating method to display widgets on sidebar to edit",
          "Display footer gadgets",
          "Creating drag and drop function for gadgets",
          "Creating method to update position for gadget",
          "Creating gadget list page",
          "Dislaying gadget list",
          "Display gadget form",
          "Creating method to insert popular posts gadget",
          "Creating method to add search gadget to blog",
          "Creating method to add html gadget to blog",
          "Creating method to add profile gadget to blog",
          "Creating method to add labels gadget",
          "Creating js function to add lists gadget",
          "Adding list gadget",
          "Creating method to delete gadgets",
          "Creating method to edit gadgets",
          "Display gadget data for edit gadget page",
          "Displaying header, nav gadgets edit form",
          "Creating method to update nav header gadget"
        ]
      },
      "requirements": [
        "A computer or laptop with local web server installed (xampp)",
        "A very basic knowledge of PHP language"
      ],
      "description": "Absolutely Complete PHP Master Course\nI’ve created this Google Multi Blogging platform: High-end PHP, JavaScript, PDO, MySQL Course. This course includes a PHP Project Building a Content Management System Like Blogger which is one of the most famous blogging platforms on the Internet.\nApart from WordPress, Blogger is quite challenging to make. It doesn't matter if you're a beginner or an experienced programmer, you just have to know the basics of PHP, MySQL, HTML, CSS and JavaScript.\n\n\nWhat Will You Learn!\nIn this course you will learn PHP,JavaScript, MYSQL, PDO ,By creating step by step CMS featuring most of the aspects of Multi Blogging from scratch to complete in pure PHP and vanilla JS.\n\n\nThere are lots of features but here are some of them.\nSubdomain for Each Blogs\nTemplate Engine\nTemplate Editor and Edit live Template\nGadgets/Widgets Drag and Drop for Layout Page\nFront Blog Template\nAnd much more (“You can read entire list below”)\n\n\nI’m a web developer just like you and constantly learning and improving my PHP skill and knowledge has given me the ability to make money online by just staying at home.\n\n\nLearning Is a key aspect of anything , A web programming language like PHP can allow anyone to earn literally valuable income online.\n\n\nJust Take My Course and MASTER IT! and learn everything that I've taught. Once you learn you will be able to build web applications, Content Management systems like WordPress, Blogger, Tumblr, or even you can make your own social networking websites like Twitter, Facebook etc..\n\n\nPHP is one of the MOST FAMOUS and The Most Popular Web programming languages to learn, Because the majority of websites and applications are based on PHP.\nYou can easily find a job or work at home on websites like Odesk or UpWork as a freelance web developer.\n\n\nSome of my students review this course.\nHighly Rec\nI highly recommend this course, Aizaz teaching php mysql and js on really interesting project which called blogger, if i making some mistakes or do not understand some things, Aizaz help me always correct my mistakes and explain things that i want to understand.\n\nFantastic PHP course\nfantastic course with very unique php mysql project build, i am very happy to find this, learn so much in each video! The instructor is very responsive and kind, help me the same day! Good work 5 stars professional course!!\n\nIncredible course\nWow, instructor in exuberant state, enjoyed the way he presents the course that teaches to build real life projects that helps to upgrade skills for students like us. Keep it up ? , I hope to see API development course in future, with a real life project, not only project but also with full of explanation (theory part, with the way to architect API). Thank you so much for making such incredible the course.\n\nUp to Date Course for PHP *\nI'm so excited to take this course! The instructor seems really engaging the content seems up to date for PHP, and he speaks with a clear voice that I can understand. I'm sure I will love this course as I go through it! I've been looking all over for a good well-rounded course on PHP, but they're either to short or so disorganized that it's hard to follow and stay motivated. Wish me luck and I wish anyone else luck that decides on this course! :)\n\nSupport\nBy taking this course you will get my full support. I’m always loved to help my students (could be you). I’ve answered all that question that students asked so far. I’m always in ninja mood, if there’s been question it’ll be answered within an hour or few. By all this mean is if you have any error. I'll be happy to check codes, errors.\n\n\nThis PHP Course Covers the following\n• Admin panel / Dashboard In PHP\n• Multi Blog System In PHP\n• Subdomain for Each Blogs In PHP\n• Pageviews Stats Analytics System In PHP\n• Template Engine In PHP\n• Template Editor and Edit live Template In PHP\n• Drag and Drop System for Gadgets/Widgets In PHP\n• System in PHP for Changeable Positions for Gadgets/Widgets In PHP\n• Build Post / Page System In PHP\n• Build Admin / Author roles\n• Login / Signup System | Form Submissions in PHP\n• Blog Comments System in PHP\n• Pending Comments System in PHP\n• Publish Comments System in PHP\n• Draft Posts System in PHP\n• Publish Posts System in PHP\n• Draft Pages System in PHP\n• Publish Pages System in PHP\n• Post Editor in PHP\n• New Page Editor in PHP\n• Front Blog Template in PHP\n• Blog Settings Page in PHP\n• User Profiles Page in PHP\n•And Much More…..\n\n\nThe ASTONISHING & AMAZING BLOGGER CMS project we build, you will Gain all the SKILLS to earn the job you want or project you crave to build. This is a absolute real project that we take online and I’ll be here to answer any question you have.\n\n\nPlease look at all the lectures to see more things that are covered.",
      "target_audience": [
        "For PHP beginners who want create CMS platform like Blogger blogspot using PHP, PDO OOP",
        "For anyone who wants to learn use of PHP OOP in real world",
        "For anyone who wants to learn use of PDO with MySQL",
        "For anyone who want to develop their own high end professional website"
      ]
    },
    {
      "title": "Creating NPM packages: The Complete Guide",
      "url": "https://www.udemy.com/course/creating-npm-packages-the-complete-guide/",
      "bio": "Create and publish your own tree-shakable NPM packages and learn this must-have skill every web developer should acquire",
      "objectives": [
        "Learn all basic & advanced configurations every NPM package creator must know",
        "Implement tree shakable packages (dive deep and truely understand this concept)",
        "Publish your NPM package with ease using automated CI tools",
        "Ship your package with vaious module systems",
        "Handle parallel development of pre-release versions of your package while maintainning stable versions",
        "Create your package with Typescript support"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get help"
        ],
        "Creating our first basic npm package": [
          "Section intro",
          "Verifing Node version",
          "Create git repo for the package",
          "Generate source code",
          "Package json name property",
          "Module systems in packages",
          "Important update about module systems",
          "Setting tsconfig.json",
          "Installing Rollup",
          "Rollup configuration",
          "Configurations explained",
          "Package entry points",
          "The files field",
          "Creting our npm account",
          "Publishing our package",
          "Section wrap up"
        ],
        "Experimenting with the package": [
          "Section intro",
          "Installing a Vite app",
          "Using the package inside the app",
          "Exploring the app's production bundle",
          "How our package is consumed?",
          "Express App",
          "Installing & running express app",
          "Using the package inside express",
          "Experimenting with the express app",
          "Section wrap up"
        ],
        "Versioning & Publishing": [
          "Section intro",
          "Changesets action",
          "Semantic versioning",
          "Initializing changesets",
          "Writing github workflow",
          "Explain the workflow",
          "Creating a Github token",
          "Creating a NPM token",
          "Publishing with changesets",
          "Multiple tasks with changesets",
          "Section wrap up"
        ],
        "Pre releases": [
          "Section intro",
          "Linking our package",
          "Behind the scenes of npm link",
          "Planning pre release",
          "Enter pre release mode",
          "Working in parallel",
          "Publish our first pre release version",
          "Consume the pre release version",
          "Parallel work on regular release",
          "Consume the regular package release",
          "Promoting our pre release tag",
          "Releasing the next major version",
          "Trying the new major version",
          "Section wrap up"
        ],
        "Tree shaking": [
          "Section intro",
          "Explaining tree shaking",
          "Components package code",
          "Creating git repo for the new package",
          "Exploring the package's code",
          "Prepare for publishing",
          "Generating github token",
          "Generating npm token",
          "Publishing the components package",
          "using our new package",
          "Is our package tree shakable",
          "First condition for tree shakable package",
          "NPM packages and side effects",
          "How to leverage the side effects optimization",
          "Package built with typescript",
          "A little typo",
          "Publish our tree shakable package",
          "Testing if the package is tree shakable",
          "One more mystery to solve",
          "Section wrap up"
        ],
        "Closing notes": [
          "Congratulations"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript"
      ],
      "description": "NPM packages are the most popular and powerful way today for making your code reusable and share it between various projects. But as most of us are starting to code for the web by developing web applications, when the time comes and we need to create and publish our own first NPM package, we find ourselfs guessing what are the best practices we should follow\nThat's what happened to me a few years ago when I was required to create my first NPM package. I tried to search for some detailed tutorial or an in-depth course to guide me, but pretty soon I realized such source doesn't really exist. So I started gathering the knowledge through endless blog posts, short tutorials, friends, colleagues and mainly a lot of exploring and experimenting I did on my own.\nYears later, I'm really happy to publish this course and share the knowledge I accumulated during all this time. One of the main purposes of doing so, is to make your journey with NPM packages much easier and pleasant. So I hope you will enjoy this ride of learning and start implementing your own amazing NPM packages\nThis course will start from the basic stuff regarding NPM packages and then continue to the most advanced topics it involves\nYou will learn the basic structure of an NPM package, all the configurations involved in creating it, and of course the various properties that the package json file should include. We will experiment with our newly created package, ship it with different module systems, develop it with full typescript support and see the differences between consuming it through frontend and backend applications. We will then learn how we can automate the process of versioning and publishing the package, with some of the most popular and exciting CI tools. Pre-releases will also be on the menu, and we will learn some techniques that will enable us to publish pre-release versions while maintaining our current stable version. We will test various ways of building our packages, and of course, we will take a deep dive into the interesting topic of tree shaking, where we will see live examples and reveal all the behind the scenes of it.\nAfter this course you will feel confident regarding your ability to create NPM packages with best practices, and you will have the tools to debug the behavior of your package and adjust its configurations according to your needs\nI hope you will have a great experience during our time together, and wish you will soon start to implement your own creative ideas for your popular, brand-new, NPM package",
      "target_audience": [
        "All levels Javascript developers that want to expand their knowledge on NPM packages and create NPM package with best practices"
      ]
    },
    {
      "title": "30+ React Projects, Learn React JS by Building 30+ Web Apps",
      "url": "https://www.udemy.com/course/30-react-projects-learn-react-js-by-building-30-web-apps/",
      "bio": "Learn React.js and its most powerful and commonly used React Hooks like, useState, useEffect, useRef, useContext.",
      "objectives": [
        "Learn how to work with the React JavaScript Framework and create awesome web applications",
        "Learn all the React Hooks like (useState, useEffect, useContext, useMemo, useRef) and use them in simple to more complex projects",
        "Create powerful React Components witch you can use in later projects",
        "Learn how to install and use React Icons and use them in a multitude of projects",
        "Learn how to install and use React Styled Components and use them in a multitude of projects",
        "Learn to create simple-to-grasp workflows using using React powerful libraries",
        "Learn JSX syntax for extended HTML"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get the most out of this course ?",
          "Course Resources and Useful Links"
        ],
        "Optional Env Setup & React Crash Course inkl Project": [
          "Setting up the React Development Env.",
          "Node.js and npm resources",
          "React Crash Course"
        ],
        "P01 E-signature-App": [
          "Project overview",
          "Create Title component and general styling in React",
          "Learn how useState works and manipulate name and date",
          "Finished project files"
        ],
        "P02-Randomize-colors": [
          "Project overview",
          "Using events and functions",
          "Finished project files"
        ],
        "P03-Like my photo": [
          "Project overview",
          "Card design",
          "Install and use React Icons to the project",
          "React useState to like on click and double Click",
          "Finished project files"
        ],
        "P04- Testimonials": [
          "Project overview",
          "Resources",
          "Create a React Button components",
          "Get Post/Users/Comments using React useState and useEffect Hooks",
          "Finished project files"
        ],
        "P05- Alerts": [
          "Project overview",
          "Create a Alert component",
          "Automatically close alert with delay using time trigger",
          "Finished project files"
        ],
        "P06-Temperature-controller": [
          "Project overview",
          "Design the Controller component",
          "Change temperature using the React useState Hook",
          "Finished project files"
        ],
        "P07-Dark-mode": [
          "Project overview",
          "Create a Blog component",
          "Dark mode using useContext",
          "Finished project files"
        ],
        "P08-Slide-to-unlock": [
          "Project overview",
          "Create the UI",
          "Create Lock screen",
          "Creating the Lock screen state",
          "Lock the screen",
          "Toggle Lock and Unlock Screen",
          "Finished project files"
        ]
      },
      "requirements": [
        "Basic HTML",
        "Basic CSS",
        "Basic JavaScript",
        "PC or Mac"
      ],
      "description": "About This Course\n\n\nThis React Course is a project based Course that focuses on sharpening your skills as a Web Developer by creating modern Web Applications using the React JavaScript Framework and its large library of npm packages.\nThis course will also teach you the most powerful and commonly used React Hooks like, useState, useEffect, useRef, useContext and together with them you will be able to build  powerful reusable components for future projects.\n\n\nThis course will use only functional components and NOT class based components.\n\n\nWho is this course for?\nThis course if for beginner and intermediate React developers who want to create a solid react projects portfolio with modern web applications ranging form simple to more complex ones, while also learning:\nStructure\nUse of React Hooks\nCreation of reusable React components\n\n\nWhat will you learn in this course?\nBy taking this course you will learn multiple use cases for the most powerful and commonly used React Hooks like, useState, useEffect, useRef, useContext.\nYou will also learn:\nHow to process data using local db's and server based db using mock servers.\nHow to use React Icons\nHow to use React styled components.\nHow to use React routing system\nHow to install and use third party npm packages\nand more much much more... .\n\n\nWhy you should learn ReactJS?\nReact saves you time and money on development because it's component-based. You can break down an interface into reusable components that allow you to build dynamic user interfaces. This taps into the current thinking behind 'Design Systems'.\n\n\nWhat is React ?\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies\n\n\nHere are even more reasons why you should learn React.\n1. React is declarative\n2. React makes app development easier\n3. The React community is amazing\n4. React is all about Reusable Components\n5. React is used by huge organizations\n6. React is SEO-friendly\n7. React fully embraces JavaScript and TypeScript\n8. React has a fast learning curve\n\n\n\n\nAt the end of the course, you will be able to build 30 Web Apps\nHere are all of the projects we are going to build in this course:\n\n\nE-signature-app\nRandomize-colors\nLike my photo\nTestimonials\nAlerts in web apps\nTemperature-controller\nDark-mode\nUnlock slider\nSlider App\nHidden-search-bar\nMagic Popup...\n\n\nMy name is Norbert",
      "target_audience": [
        "Beginner React developers who are looking to learn React js.",
        "Beginner Front End developers who want to learn a front end JavaScript Framework.",
        "Beginner developers who want to create simple-to-grasp dev workflows and have Ultimate flexibility and compatibility.",
        "Developers who seek High performance reinforced by Virtual DOM and Hassle-free reusability. of components",
        "Beginner or intermediate web developers who want to understand Reacts unique hooks."
      ]
    },
    {
      "title": "WordPress Web Design and Advanced Theme Development",
      "url": "https://www.udemy.com/course/wordpress-web-design-and-advanced-theme-development/",
      "bio": "Design Website in designing software then convert it into HTML & CSS, then transform your template into WodPress theme",
      "objectives": [
        "You will know how to use Adobe Photoshop to design Websites",
        "You will learn how to code HTML and HTML5 template",
        "You Will Learn PHP and Will become very comfortable coding in PHP which is an vital skill required to become a WordPress Developer",
        "You will learn how to style your HTML5 template using CSS",
        "You will learn how to convert PSD file into HTML and CSS",
        "You will learn how to add animation using jQuery",
        "You will Learn and familiarize your self with Adobe Fireworks",
        "You will Learn to operate WordPress",
        "You will learn the core principles of WordPress theme development",
        "You will learn to create stunning Advanced WordPress theme"
      ],
      "course_content": {
        "Course Introduction": [
          "Essential software’s that you will need to start.",
          "Setting up working environment",
          "Section 1 re-cap"
        ],
        "Intermediate Photoshop": [
          "Introduction to Photoshop",
          "3. Working with Marquee tool",
          "4. Working with Lasso tool",
          "MagicWand, Crop, Perspective Crop, Slice, Slice Selection & Eye drope",
          "Spot healing brush, Healing brush, Patch brush, Content Aware, Red eye",
          "Working with Brush tool, Pencil tool, Color Replacement tool and Mixer Brush",
          "Clone Stamp, Clone Pattern, History Brush and Art History Brush tool",
          "Working with Eraser, Background eraser and Magic Eraser tool",
          "Working with Gradient and Paint Bucket tool.",
          "Working with Blur, Sharpen and Smudge tool.",
          "Working with Dodge, Burn and Sponge tool.",
          "Working with Pen tool",
          "Working with Text Tool",
          "Working with Shape Tool",
          "Working with Hand Tool and Rotate view tool",
          "Photoshop Quiz"
        ],
        "Adobe Fireworks": [
          "All about Adobe Fireworks"
        ],
        "Web Design Essential": [
          "Introduction to Web Design",
          "Introduction to user Experience",
          "Color and Typography",
          "Working with Icons"
        ],
        "Let's Design A Professional Website": [
          "Let's Design The Header Section",
          "Important Aspects Of Web Design",
          "Let's Design My Specialties Section",
          "Let's Design My Packages Section Pt.1",
          "Let's Design My Packages Section Pt.2",
          "Lets Design My Portfolio Section",
          "Let's Design About Me Section",
          "Let's Design Contact Me Section",
          "Let's Design The Footer Section",
          "Lets Design The Blog Page pt1",
          "Lets Design The Blog Page pt2",
          "Let's Design The Contact Us Page",
          "Congratulations! You have done it!"
        ],
        "Responsive Grid System": [
          "Introduction to Responsive Grid System"
        ],
        "Convert our PSD into HTML and CSS": [
          "An overview on our working environment",
          "Let's download all the necessary files",
          "Let's plugin all of our CSS and JavaScript files",
          "Let's plugin ionicon fonts",
          "Convert the header section into HTML and CSS Pt.1",
          "Convert the header section into HTML and CSS Pt.2",
          "Convert the header section into HTML and CSS Pt.3",
          "Convert My Specialties section into HTML and CSS Pt.1",
          "Convert My Specialties section into HTML and CSS Pt.2",
          "Convert My Packages Section Pt.1",
          "Convert My Packages Section Pt.2",
          "Convert the My Portfolio section into HTML and CSS",
          "Convert About Me section into HTML and CSS",
          "Convert the Contact Me section into HTML and CSS",
          "Convert the Footer section into HTML and CSS",
          "Creation of the Blog and the Contact Us Page",
          "HTML Template Download"
        ],
        "Installing XAMPP (A Web Server) and WordPress": [
          "Installing XAMPP Web Server",
          "Install WordPress on XAMPP Server"
        ],
        "PHP Basics": [
          "Static vs Dynamic Data",
          "Our First PHP Script",
          "PHP Syntax Pt.1",
          "PHP Syntax Pt.2",
          "PHP Comments Pt.1",
          "PHP Comments Pt.2"
        ],
        "PHP Intermediate": [
          "PHP Variable",
          "PHP Variable Types",
          "PHP Local Variable",
          "PHP Function Variable",
          "PHP Global Variable",
          "PHP Static Variable"
        ]
      },
      "requirements": [
        "You should have good command of English language",
        "You should know basic HTML and CSS",
        "You need the below listed Software'",
        "Adobe Photoshop CS3 | CS5 | CC (Any of these version will do )",
        "Adobe Fireworks (Optional as you can use Adobe Photoshop to do all the designing work )",
        "Adobe Brackets",
        "XAMPP Web Server",
        "WordPress Software"
      ],
      "description": "Would you like to make more money as a web developer? or maybe you want to start making money as a new web developer because it gives you a lot of free time and flexibility? Or maybe you want to start your own Web Development business? or want to work as a Web Designer and Developer at the freelancing market places?  No matter what your reason is to be a professional web developer, you're in the right place.  No Matter how old you are and what your educational background is, that after finishing this your you will have enough knowledge to start your own Web Design and Development business or start a new career as a freelance web designer and developer.\nAfter finishing this course you will become job-ready and you will have the below skillset.\nHTML and HTML5\nPHP and WordPress\nCSS and CSS3\njQuery\nPHP Language (basic)\nAdobe Photoshop\nAdobe Fireworks (Better than Photoshop when it comes to designing Websites)\nPSD to HTML & CSS template creation ability\nAbility to use WordPress (There are tons of jobs out there for Web Systems Administrators)\nAbility to create Advanced WordPress Theme (Endless job opportunities for WordPress Developers)\n\n\nI've started learning about HTML CSS, jQuery, jQuery UI,  Photoshop back in 2005 and I have learned it the traditional way which is to learn by reading books and even though I love reading books, I found it pretty difficult to acquire or generate a  visual concept by reading text-based learning materials and I didn't have anyone (an instructor) to answer to my queries.  In this course, I have covered and covered all the step learning curves that I have endured during my journey to become a Web Designer and Developer so that you don't struggle to understand any concept which may be vital for your journey to become a Web Designer and Developer.\nSo What are you waiting for? Start becoming a professional web designer and a WordPress Developer today and change your World!",
      "target_audience": [
        "This Course has been designed for Students who has some knowledge of HTML, CSS and operational knowledge of WordPress Software",
        "Enroll as Beginners, complete the course and become PRO"
      ]
    },
    {
      "title": "Porto Visual Composer CSS Woocommerce Zero to Hero 2020",
      "url": "https://www.udemy.com/course/porto-visual-composer-css-woocommerce-zero-to-hero-2020/",
      "bio": "Porto Visual Composer Advanced CSS Woocommerce and Visual composer Custom field Custom post types",
      "objectives": [
        "Porto Visual Composer and Divi 2020 toolset",
        "Divi 2020",
        "Toolset",
        "Advanced css"
      ],
      "course_content": {
        "wordpress installation porto theme installation": [
          "Introduction to porto theme",
          "WP Bakery page builder part 1",
          "WP Bakery page builder part 2",
          "WP Bakery page builder part 3"
        ],
        "extra topics Revolution slider master slider smart slider": [
          "Revolution Slider",
          "Revolution Slider Part 2",
          "Responsive website",
          "Master Slider",
          "Smart Slider",
          "Smart Slider part 2 and Nex Forms"
        ],
        "Divi 2020 and toolset": [
          "Divi 2020 and toolset introduction",
          "Divi builder 2020 and toolset builder",
          "3divi and toolset html",
          "4divi builder and toolset html",
          "5divi builder and toolset html toolset forms"
        ]
      },
      "requirements": [
        "Visual Composer Advanced Css"
      ],
      "description": "The Class is from zero to hero everything will be explained\nI will Teach you how to install porto theme and how to use Visual Composer with very advanced way and add Css to rows and classes\nand use essential plugins for your wordpress website and make your custom header and footer with visual composer and insert header and footer free plugin use royal css plugin for posts and pages add back up for your wordpress website master slider and how to make beautiful images slider\n///Revolution slider /// Master Slider/// Smart Slider  /// Layer Slider /// Nex Forms\nPorto Theme installation\nLogo\nTheme Components\nExtra Plugins\n1-Custom css js\n2- Smush\n3-Insert Header and footer\n4-Royal Css\n5-all migration back up\n6-Master slider\n7-Custom post types\n8-Advanced Custom field\nVisual Composer\n1-Elements\n2-Advanced CSS\nElements\n1-Row\n2-Text\n3- Single image\n4-Image gallery\n5-Tabs\n6-Accordion\n7-Post Grid\n8-ACF and custom post types\nWoo Commerce\n1-Products\n2-Orders\n3-Visual composer\n4- Woo Commerce and  visual composer\n\n\nVisual composer\nDrag & Drop Any Layout Fast and Easy. No Coding Needed. Create Your Website Today! Responsive Design. Header & Footer Builder. Premade Templates. Any Layout. Fast & Easy. Drag & Drop Editor. Types: Easy to use, No coding skills needed, Save time\n\n\nMaster Slider - Power Up Your Website\nMaster Slider. Get Yours Today! Enhance Your Website Today with this WP Plugin. The No.1 Code Marketplace. Plugins & Scripts From $1. 100% Money Back Guarantee. Premium Support. Secure Shopping Cart. 60M+ Items Sold. Sign Up Free. Join the 10M+ Community.\nPorto | Multipurpose & WooCommerce Theme WordPress Plugins\nAre you looking for the best themes & plugins for your WP website? Download Unlimited, Responsive WP Themes with a single subscription. Latest Version. Instant Download. Unlimited Domain Usage. Save Thousands Of Dollars.",
      "target_audience": [
        "Wordpress Visual Composer Woocommerce advanced css 3",
        "Visual Composer",
        "Woocommerce",
        "advanced",
        "css"
      ]
    },
    {
      "title": "HTML 5 & CSS 3 Mastery - Build Responsive Modern Websites",
      "url": "https://www.udemy.com/course/html-5-css-3-mastery-build-responsive-real-websites/",
      "bio": "Learn how to code in HTML 5 and CSS 3 to build beautiful responsive websites from scratch.",
      "objectives": [
        "How to build a complete fully responsive beautiful website with HTML 5 and CSS 3",
        "The basics of web design and how to design beautiful websites",
        "CSS Transitions and Animations",
        "The basics of PHP to build an interactive website",
        "How to fully optimize a website for speed and SEO"
      ],
      "course_content": {
        "Welcome to the Course": [
          "Welcome to the Course",
          "Connect with Me"
        ],
        "Introduction to HTML": [
          "Writing our First HTML Code",
          "Our Text Editor",
          "What is HTML?",
          "Basic Structure of an HTML Page - Tags & Elements",
          "HTML Attributes",
          "HTML Headings & Paragraphs",
          "HTML Links",
          "HTML Images & File Paths",
          "Assignment 1",
          "HTML Lists",
          "HTML Styling",
          "HTML Text Formatting",
          "Block vs Inline Elements",
          "The Break Tag",
          "Divs & Spans, Classes & IDs",
          "Combining Inline & Block Elements",
          "The Head Tag",
          "HTML 5 Semantic Elements",
          "Conclusion",
          "Section Quiz"
        ],
        "CSS 3": [
          "Section Preview",
          "What is CSS?",
          "Download the HTML File",
          "CSS Syntax - Selectors, Declarations, Properties & Values",
          "Linking HTML & CSS",
          "The Power of CSS",
          "Font-Family Property",
          "Other Font Properties",
          "Classes & IDs",
          "Background-Image Property",
          "Display Property",
          "CSS Margins, Paddings & Borders",
          "CSS Box Model",
          "Max-Width Property",
          "Position Property",
          "The Z-Index Property",
          "CSS Specificity",
          "Section Quiz"
        ],
        "Course Project": [
          "Section Preview",
          "Download the Files",
          "Going through the Initial Code",
          "The Inspect Tool",
          "Creating the Header - Part 1",
          "Creating the Header - Part 2",
          "Designing the Header - Part 1",
          "Designing the Header - Part 2",
          "Adding our Background Image for the Header",
          "Adding the Hero Section",
          "Styling the Hero Section",
          "Transitioning our Buttons",
          "Building the About Us Section",
          "Building the Services Section",
          "The Clear Property",
          "Styling the Services Section",
          "Building the Why Us Section",
          "Building the Team Section",
          "Testimonials Challenge",
          "Building the Testimonials Section",
          "Creating the Clients Section",
          "Styling the Clients Section",
          "Creating the Contact Form",
          "Styling the Contact Form - Part 1",
          "Styling the Contact Form - Part 2",
          "Building the Footer",
          "Styling the Footer - Part 1",
          "Getting our Icons from Font Awesome",
          "Styling the Footer - Part 2",
          "Adding the Remaining Icons",
          "Adding the Navigational Anchor Links",
          "Adding Animations",
          "Adding Filter Effects",
          "Section Review"
        ],
        "Mobile Responsiveness": [
          "Section Preview",
          "Introduction to Responsiveness",
          "Creating the Break Points",
          "Creating the Mobile Header - Part 1",
          "Creating the Mobile Header - Part 2",
          "Tablet Responsiveness - Part 1",
          "Tablet Responsiveness - Part 2",
          "Phone Responsiveness",
          "Section Review"
        ],
        "Site Optimization & Launch": [
          "Section Preview",
          "Search Engine Optimization",
          "Optimizing Speed - Part 1",
          "Optimizing Speed - Part 2",
          "Adding our Favicons",
          "HTML Markup Validation",
          "Launching our Website",
          "Script Management",
          "YOU DID IT !!!",
          "Review Update"
        ],
        "Web Design Basics": [
          "Introduction to Web Design",
          "Site Structure",
          "Choosing your Fonts",
          "Working with Colors",
          "Working with Icons",
          "Working with Background Images",
          "Spacing",
          "Section Review"
        ],
        "PHP Basics": [
          "Section Preview",
          "Creating the Footer.php file",
          "Creating the Header.php file",
          "Creating the contact.php file",
          "Updating the Menu Links",
          "PHP Challenge",
          "The Date Function",
          "Making our Contact Form work"
        ],
        "Conclusion": [
          "Getting your Certificate",
          "Thank You"
        ]
      },
      "requirements": [
        "No coding or design experience is required",
        "A computer",
        "A text file editor like Notepad++ or Sublime"
      ],
      "description": "*** BRAND NEW HTML AND CSS COURSE WITH THE VERY LATEST WEB DEVELOPMENT TECHNIQUES ***\nDo you want to learn how to build beautiful modern and responsive websites with HTML and CSS? Look no further because you have come to the right course.\nWelcome to the HTML 5 and CSS 3 mastery course where you will learn all the necessary techniques to build yourself a website.\n\n\nBut wait ... there are hundreds of other HTML & CSS courses? What is different about this course? Why should I enroll in it?\nReason #1: The most up to date HTML/CSS course\nThis course focuses purely on HTML 5 and CSS 3 coding standards for the year 2020. You will learn all the very latest techniques and coding syntax used to build modern responsive websites.\nReason #2: It is project based\nIn this course, you are not just going to learn how to code but you are also going to apply that new found knowledge to build a REAL website.\nReason #3: You will not just learn how to code\nYes Coding is great, but it's not everything! This is why I am going to show you how to properly design a website by teaching you the basics of web design. You will learn how to choose the right type of fonts, colors, images and also how to properly structure your website.\nYou will also learn how to apply good SEO techniques and also how you can optimize your code and content for speed.\nReason #4: You will have a full website to add to your Portfolio\nBy the end of the course, you will have a complete, ready-to-launch website that looks great on any computer, tablet, and smartphone. You will also get all the code used throughout the course for quick and easy reference.\nReason #5: Additional Content\nIn addition to learning HTML and CSS, you will also learn how to use browser inspectors, code in PHP and also learn how to add transitions and animations to make your website exciting. You will also get my PDF handbook for HTML and CSS resources.\n\n\nSounds great but what exactly am I going to learn in this course?\nWhen you enroll in this course, here is what you can expect to learn:\nEasy-to-follow and hands-on web development with HTML 5 and CSS 3\nHow to use browser inspector tools to perform live design changes on any website\nSimple-to-use web design guidelines and tips to design beautiful websites\nResponsive web design: learn how to create websites that look good on all screen sizes.\nHow to get and use free images, fonts and icons on your website\nHow to optimize your website for good speed performance and for search engines (SEO)\nHow to choose a domain name and web hosting\nHow to transfer your local code over to a live server\nHow to launch your website on the internet\nand much more\n\n\n** Perfect for Complete Beginners or Intermediate Coders**\nIf you have never written a single line of code before, then this course is going to be perfect for you as I start from the very basics and then slowly begin to introduce you to more advanced topics.\nThe course is also great for you if you already know some HTML and CSS but you struggle with trying to apply them to build a full website.\nI hope to see you registered in the course.",
      "target_audience": [
        "Complete Beginners who want to learn how to build a complete responsive website with HTML and CSS",
        "Students with some knowledge of HTML and CSS but don't feel confident enough to build a full website"
      ]
    },
    {
      "title": "GraphQL: Learning GraphQL with Node.Js",
      "url": "https://www.udemy.com/course/learning-graphql-with-nodejs/",
      "bio": "Learning GraphQL by building real world APIs with GraphQL, NodeJs, MongoDB And Sequelize",
      "objectives": [
        "Master fundamental concepts behind structuring GraphQL servers",
        "Building APIS with GraphQL",
        "Integrating GraphQL with NodeJs and MongoDB",
        "Integrating GraphQL with NodeJs and Sequelize"
      ],
      "course_content": {
        "Introduction": [
          "What is GraphQL",
          "Source Code",
          "GraphQL Cheat Sheet"
        ],
        "Understanding GraphQL Queries": [
          "Queries In GraphQL",
          "Working with HackerNews API",
          "Arguments In GraphQL",
          "Required Arguments In GraphQL"
        ],
        "Handling Data In GraphQL": [
          "GraphQL Schema And Types",
          "Aliases In GraphQL",
          "Fragments In GraphQL",
          "Nested Fields"
        ],
        "Operations And Mutations": [
          "Operations In GraphQL",
          "Variables In GraphQL",
          "Mutations In GraphQL",
          "Directives In GraphQL"
        ],
        "Setting Up GraphQL with Nodejs": [
          "Initial Setup",
          "Setup ES6",
          "Creating GraphQL Schema",
          "Adding Item Field"
        ],
        "GraphQL Types And Schemas": [
          "Defining Array Type",
          "Creating Mutation",
          "Refactoring Resolvers",
          "Understanding Scalar Types",
          "Adding Enum Types",
          "Creating Array Type inside another Type",
          "Working with GraphQL Tools"
        ],
        "Integrating GraphQL with MongoDB": [
          "Fixing Middleware Error",
          "Fixing Resolvers Arguments",
          "Connecting To Mongoose",
          "Creating Item Mutation",
          "Creating Get Items Query",
          "Creating User Mutation",
          "Update User Mutation",
          "Delete User Mutation",
          "Find Users Query"
        ],
        "Integrating GraphQL with Sequelize": [
          "Setting Up Sequelize",
          "Creating Post Muation",
          "Creating Query to Get All Posts"
        ],
        "Learning Path to Become a FullStack Developer": [
          "Learning Path to Become a FullStack Developer"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript required"
      ],
      "description": "GraphQL is a new API standard that provides a more efficient, robust and flexible alternative to REST. It was developed and open-sourced by Facebook and is now maintained by a large community of companies and individuals from all over the world.\nAPIs have become ubiquitous components of software infrastructures. In short, an API defines how a client can load data from a server.\nAt its core, GraphQL enables declarative data fetching where a client can specify exactly what data it needs from an API. Instead of multiple endpoints that return fixed data structures, a GraphQL server only exposes a single endpoint and responds with precisely the data a client asked for.\nHow GraphQL is better than REST\n1. Increased mobile usage creates need for efficient data loading\nIncreased mobile usage, low-powered devices and sloppy networks were the initial reasons why Facebook developed GraphQL. GraphQL minimizes the amount of data that needs to be transferred over the network and thus majorly improves applications operating under these conditions.\n2. Variety of different frontend frameworks and platforms\nThe heterogeneous landscape of frontend frameworks and platforms that run client applications makes it difficult to build and maintain one API that would fit the requirements of all. With GraphQL, each client can access precisely the data it needs.\n3. Fast development & expectation for rapid feature development\nContinuous deployment has become a standard for many companies, rapid iterations and frequent product updates are indispensable. With REST APIs, the way data is exposed by the server often needs to be modified to account for specific requirements and design changes on the client-side. This hinders fast development practices and product iterations.\nWhat you will learn?\nFirst of all I will teach you the basics or fundamentals of GraphQL then we will move forward to building APIS with GraphQL and NodeJs. This course will cover these following topics\nWhat is GraphQL\nWhy do we need GraphQL\nFundamentals of GraphQL\nSetting Up GraphQL Server with NodeJs\nIntegrating GraphQL with Mongoose\nPerform CRUD Operations with GraphQL and Mongoose\nIntegrating GraphQL, NodeJs app to Sequelize",
      "target_audience": [
        "Programmers looking to learn GraphQL",
        "Programmers looking to learn GraphQL with Nodejs"
      ]
    },
    {
      "title": "Laravel - Creating Custom Commands & Scheduling Tasks",
      "url": "https://www.udemy.com/course/laravel-creating-custom-commands-scheduling-tasks/",
      "bio": "Learn to Automate Your Laravel Apps with Cron JOBS and Custom Scripts",
      "objectives": [
        "Students will learn to automate Laravel apps with custom commands and cron jobs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Reference Files",
          "Creating our First Command and Intro",
          "Setting Up our first Custom command",
          "Deleting Email with Our Custom Command",
          "Deleting Inactive Users with Our Custom Command",
          "Laravel Cron Jobs Explained",
          "Scheduling Custom Commands with Laravel Job Feature",
          "Creating a Cron Job in C-PANEL",
          "Scheduling Multiple Commands with Laravel",
          "Conclusion"
        ]
      },
      "requirements": [
        "Laravel knowledge is required"
      ],
      "description": "On this small course you will learn how to create custom commands with Laravel. You will also learn to create and use cron jobs with Laravel so that you can make your App do automatic tasks.\nLaravel makes scheduling tasks real easy with its built in code ready to automate really awesome features in your application. Come and join me in this small but really important adventure in the Laravel world!",
      "target_audience": [
        "Anyone looking to automate their app with scheduled commands"
      ]
    },
    {
      "title": "AI in Science Mastery: ChatGPT’s Transformative Role",
      "url": "https://www.udemy.com/course/ai-in-science-mastery-chatgpts-transformative-role/",
      "bio": "Physics, Chemistry, Biology & Computer Science Through AI",
      "objectives": [
        "Understand ChatGPT's role and capabilities in science education.",
        "Develop skills to effectively integrate AI in teaching various science subjects.",
        "Master the art of crafting prompts for AI-assisted problem solving.",
        "Gain proficiency in using ChatGPT for complex scientific data analysis.",
        "Explore innovative ways to apply ChatGPT in experimental physics simulations.",
        "Learn to navigate and solve advanced problems in mathematics with ChatGPT.",
        "Apply ChatGPT in chemistry for research support and solving numerical problems.",
        "Enhance biology learning through AI in areas like genetics and bioinformatics.",
        "Utilize ChatGPT for developing software and debugging in computer science.",
        "Understand ethical considerations and future AI trends in science education."
      ],
      "course_content": {
        "Introduction to ChatGPT in Science Education": [
          "Introduction",
          "Overview of ChatGPT",
          "Integrating AI in Science Learning",
          "How to write prompt in Chatgpt"
        ],
        "Physics with ChatGPT": [
          "Fundamental Concepts in Physics",
          "Problem-Solving: Mechanics, Thermodynamics, Electromagnetism",
          "ChatGPT in Experimental Physics: Simulations and Data Interpretation",
          "Exercises and Unsolved Problems"
        ],
        "Chemistry Learning with ChatGPT": [
          "Basics of Chemistry: Atoms, Molecules, and Reactions",
          "Organic and Inorganic Chemistry: Structures and Mechanisms",
          "ChatGPT in Chemical Analysis and Research Support",
          "Numerical Problems and Conceptual Questions"
        ],
        "Mathematics Tutoring via ChatGPT": [
          "Mathematical Foundations: Algebra, Calculus, and Geometry",
          "Advanced Topics: Statistics, Discrete Mathematics, and Analysis",
          "Using ChatGPT for Problem-Solving and Conceptual Understanding",
          "Exercises and Problems"
        ],
        "Biology Education with ChatGPT": [
          "Cellular Biology, Genetics, and Evolutionary Concepts",
          "Human Biology: Anatomy and Physiology",
          "ChatGPT in Biotechnology and Bioinformatics",
          "Problems and Quizzes"
        ],
        "Computer Science Learning with ChatGPT": [
          "Programming Basics: Languages and Algorithms",
          "Advanced Computing: AI, Machine Learning, and Data Science",
          "ChatGPT in Software and App Development and Debugging",
          "Questions & Answers"
        ],
        "Environmental Sciences and ChatGPT": [
          "Earth Systems and Climate Science",
          "Environmental Challenges and Sustainability",
          "ChatGPT in Environmental Policy and Research",
          "Quiz for Students"
        ],
        "Biomedical Sciences with ChatGPT": [
          "Understanding of Biomedical Science with ChatGPT",
          "Biomedical Research and ChatGPT",
          "ChatGPT in Medical Education and Patient Awareness"
        ],
        "Integrating ChatGPT in Science Labs and Research": [
          "Enhancing Laboratory Learning Experiences",
          "ChatGPT in Data Analysis and Research Collaboration",
          "Ethical Considerations and Limitations"
        ],
        "Evaluating ChatGPT's Effectiveness in Science Education": [
          "Assessing Learning Outcomes",
          "Future Directions and Technological Advancements"
        ]
      },
      "requirements": [
        "Basic understanding of general science concepts.",
        "Familiarity with digital learning platforms and tools.",
        "Open-mindedness towards AI and technology in education.",
        "No advanced AI or science background needed; beginners welcome.",
        "Access to a computer with internet for interactive sessions."
      ],
      "description": "Dive into the revolutionary world of AI-assisted science education with our cutting-edge course, \"AI in Science Mastery: ChatGPT’s Transformative Role\". This meticulously designed program unveils the power of ChatGPT in transforming the landscape of science learning across diverse fields, including Physics, Chemistry, Biology, and Computer Science. Over the span of this course, participants will journey through the fundamentals of ChatGPT, understanding its capabilities and limitations as a science tutor, and how to craft effective prompts to maximize learning outcomes.\nEmbark on a deep exploration of Physics with ChatGPT, tackling fundamental concepts and engaging in problem-solving across Mechanics, Thermodynamics, and Electromagnetism. Delve into the core of Chemistry, from atoms and molecules to complex organic and inorganic reactions, utilizing ChatGPT for chemical analysis and research support. Mathematics sessions will cover everything from Algebra to Discrete Mathematics, empowering you with AI-driven problem-solving strategies. Biology modules will guide you through the intricacies of cellular biology, genetics, and human anatomy, with ChatGPT assisting in biotechnology and bioinformatics.\nMoreover, the course extends into Computer Science, covering programming basics to advanced computing concepts, including AI and Machine Learning. Environmental Sciences and Biomedical Sciences are also featured prominently, highlighting ChatGPT's application in sustainability, medical education, and patient awareness. The comprehensive curriculum not only focuses on subject knowledge but also integrates ChatGPT in lab settings, research, and ethical considerations, preparing educators and students for future AI advancements in science education.\nThis course is not just an educational journey; it's a transformation into the future of science learning, where AI and ChatGPT become integral tools in uncovering the mysteries of the universe. Join us to not only stay updated with the latest AI trends in education but also to become a part of a community of AI-enabled educators, ready to shape the future of science teaching and learning.",
      "target_audience": [
        "Science educators seeking to integrate AI tools like ChatGPT into their teaching methodologies.",
        "Students in science disciplines (physics, chemistry, biology, computer science) looking for supplementary AI-assisted learning resources.",
        "Educational technologists exploring innovative approaches to enhance science education through AI.",
        "Researchers in scientific fields interested in leveraging ChatGPT for data analysis, simulations, and research collaboration.",
        "Lifelong learners with a curiosity about the intersection of AI and science, aiming to understand future trends in science education.",
        "Software developers and data scientists seeking to apply their skills in educational contexts, particularly in developing AI-enhanced learning tools."
      ]
    },
    {
      "title": "The Complete Font Awesome 5 Course: Beginner's Guide",
      "url": "https://www.udemy.com/course/font-awesome-5-the-complete-beginners-guide/",
      "bio": "The Easiest Way To Build Modern HTML Icon Based Websites With The Most Popular Iconic SVG, Font, & CSS Framework",
      "objectives": [
        "Solid understanding of Font Awesome 5 icon library and how it works.",
        "Basic use of Font Awesome 5 classes.",
        "Integrating Font Awesome 5 into your Web projects.",
        "Set icon sizes.",
        "Learn how to set icons to the same fixed width.",
        "Use list icons to replace default HTML bullets in unordered lists.",
        "Add borders & Pull icons left or right inside of its parent container.",
        "How to add basic animations to icons, especially icons in the Spinner Category.",
        "How to stack Icons - (Classic Method)",
        "How to position Icons - (Classic Method)",
        "Add Power Transform effects [Scaling, Positioning, Rotating & Flipping] - (New).",
        "Combine 2 icons to create 1 single color shape by Masking - (New).",
        "How to add Layers, Text & Counters to Font Awesome icons - (New).",
        "Learn the quickest way possible to upgrade your current projects based on Font Awesome version 4 to Font Awesome version 5 using Shim files."
      ],
      "course_content": {
        "Introduction And Getting Started": [
          "Introduction",
          "IMPORTANT! READ BEFORE YOU START",
          "Getting Started",
          "Course Resources"
        ],
        "Project Setup - Using SVG With JavaScript | RECOMMENDED!": [
          "UPDATE: Using CDN - SVG With JS (EASY METHOD)",
          "Using CDN - SVG With JS (EASY METHOD)",
          "UPDATE: Manual Setup Using Downloaded Files - SVG With JS",
          "Manual Setup Using Downloaded Files - SVG With JS"
        ],
        "[LEGACY] Project Setup - Using Web Fonts With CSS | OPTIONAL": [
          "About This Section",
          "Manual Setup Using Downloaded Files - Web Fonts With CSS"
        ],
        "Font Awesome Built-in Classes - Basic Use And How To's": [
          "Basic Usage",
          "Icon Size Classes",
          "Set Icons To The Same Fixed Width",
          "How To Use List Icons To Replace Default Bullets In Unordered List",
          "Bordered & Pulled Icon Classes",
          "Animated Icon Classes",
          "Rotate & Flip Icon Classes",
          "How To Stack Multiple Icons",
          "Knowledge Check - Section 4"
        ],
        "Power Transform Icons - SVG With JavaScript": [
          "Introduction - Power Transform",
          "Power Transform - Scaling",
          "Power Transform - Positioning",
          "Power Transform - Rotation & Flipping",
          "Knowledge Check - Section 5"
        ],
        "Masking Icons - SVG With JavaScript": [
          "How To Mask Icons",
          "Knowledge Check - Section 6"
        ],
        "Layering, Text, & Counters - SVG With JavaScript": [
          "Introduction - Layers, Text, And Counters",
          "Stacking Multiple Icons by Layering",
          "How To Add A Text Layer On An Icon",
          "Adding Counters On An Icon",
          "Knowledge Check - Section 7"
        ],
        "Upgrading From Version 4 To Version 5": [
          "Upgrade From Version 4 To Version 5 By Using Shim Files - Quickest Way"
        ],
        "Conclusion": [
          "Thank You And Congratulations",
          "Optional Course Resources"
        ]
      },
      "requirements": [
        "A basic understanding of HTML and CSS (You don't have to be a master).",
        "Any computer and OS will work — Windows, macOS or Linux.",
        "Any text editor of your choice. E.g Visual Studio Code, Sublime Text, Atom... etc",
        "Internet connection.",
        "Drive to learn something new."
      ],
      "description": "Do you want to learn the number #1 iconic Web font toolkit that most popular websites use on the Internet?\nAre you tired of wasting your time on random YouTube videos or Font Awesome courses that are too difficult to follow?\nDo you want to learn how to build icon based web designs?\nDoes the quality of your image based icons become poor and pixelated when you resize your website?\nOR\nDo you struggle to read and understand documentation of a web framework?\nIf your answer is YES... then this is exactly the course you are looking for!\nBy the end of this course you will be comfortable with:\nSolid understanding of Font Awesome 5 icon library and how it works.\nBasic use of Font Awesome 5 classes.\nIntegrating Font Awesome 5 into your Web projects\nSet icon sizes\nHow to set icons to the same fixed width.\nUse list icons to replace default bullets in unordered lists\nAdd borders & Pull icons left or right inside of its parent container.\nHow to add basic animations to icons, especially icons in the Spinner Category.\nHow to stack Icons - Classic Method\nHow to position Icons - Classic Method\nAdd Power Transform effects [Scaling, Positioning, Rotating & Flipping] - New\nCombine 2 icons to create 1 single color shape by Masking - New\nAdding Layers, Text & Counters to Font Awesome icons - New\nThe quickest way possible to upgrade your current projects based on Font Awesome version 4 to Font Awesome version 5 using Shim files.\nWhy is it important to learn the above?\n- These days, just knowing HTML, CSS, and JavaScript is great for beginners, but you have to constantly keep on learning to improve your skill set.\n- Nowadays, icons are playing a major role in website designing. Developers are constantly focusing on icons because they are very important for any website. Research shows that most users try to scan a website when they visit for the first time.\nTherefore, developers should build a very interactive website that should attract users. One way of creating interactive websites is to add icons to your website.\nSo why should you include icons in your web projects?\na. Because icons support content by drawing attention:\nPictures are important and worth a thousand words, just like icons too.\nWebsites without icons and pictures turn off people when they visit your website. That is why it's important to integrate icons, images, and other visuals into your designs.\nb. Because Icons can increase readability:\nLists can increase the readability of your content. However, regular list bullets can be less appealing to the end user visiting your website.\nInstead of using regular list bullets, you can use engaging icons to draw attention to paragraphs and other blocks of content. This is because icons are easier to recognize and remember than regular list bullets. Also, icons make it easier to separate different blocks of text from one another.\nThis course is a perfect fit for you if...\n#1. You want to gain a deep understanding of the most popular Iconic Web font framework on the Internet.\n#2. You searched YouTube or other resources only to find outdated lessons and tutorials.\n#3. Interested in learning how to add icons to your website by using the popular icon library Font Awesome.\nNow is the time to decide. This is what you get:\nLifetime access to HD quality videos. No! monthly subscription. Learn at your own pace, whenever you want.\nAll videos are downloadable. Learn wherever you want, even without an Internet connection!\nDownloadable resources which contain starter code for each section.\nInteractive annotations to help you keep track and follow along when looking at the code.\nBasic animations to help you understand concepts.\nFree and helpful support in the course Q & A when you have questions or get stuck.\nBite-sized and easy to digest videos.\nPractice Quizzes in each section to test your understanding.\n\n\nIf this sounds great? Then start this adventure with me today by enrolling in this course and join me in the only Font Awesome 5 course that you will need!",
      "target_audience": [
        "Take this course now if you know basic HTML and CSS or just completed any Web Development course.",
        "Take this course now if you want to build icon based web designs.",
        "Take this course now if you want to add another web development skill to your existing skill set.",
        "Take this course now if you want to gain a better understanding of the most popular iconic SVG, Font and CSS framework in the world.",
        "Take this course now if you've taken other Font Awesome courses but you are still confused and do not feel confident. This course is perfect for you.",
        "Take this course if you want to get started with Font Awesome 5. (Latest Version Currently).",
        "Take this course now if you want to easily use completely free, flexible, and scalable icons in your web projects in order to enhance User Experience."
      ]
    },
    {
      "title": "CSS Grid - Build Modern Real World websites fast (+projects)",
      "url": "https://www.udemy.com/course/css-grid-build-modern-real-world-websites-fast-projects/",
      "bio": "Learn all the CSS Grid concepts and create professional responsive website designs - multiple website layout projects",
      "objectives": [
        "CSS Grid concepts with multiple projects for practical experience",
        "How to create 4+ layouts that can be fleshed out into modern, fully responsive websites",
        "How to design blogs, business websites, portfolio websites, etc with just a few lines of CSS grid code",
        "How to create professional 2 dimensional web layouts with just a few lines of code",
        "How to create and design websites, from simple 2 column blogs to complicated website layouts with multiple columns and rows",
        "How to make your website into a full-blown responsive website, without using any external frameworks like Bootstrap.",
        "How to create widgets, carousels, applications, galleries, navigation bars, menu items",
        "How to control the position, size and spacing of any number of elements you create without collapsing them.",
        "How to layout the elements of your website both horizontally and vertically and change the alignments with a single line of code",
        "How to order elements on the page without changing their order in your HTML code.",
        "How to create nested website layouts with multiple grid templates inside them - like how it's done in the real world",
        "How to create real world websites with CSS Grid, while also creating website layout mockups you can show your clients (for approval)."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basics of CSS Grid": [
          "Basics of CSS Grid - Display property and grid container",
          "Grid items",
          "Grid columns",
          "Grid columns - part 2",
          "Grid columns - part 3 - fractions",
          "Grid rows",
          "Grid rows - part 2",
          "Grid auto rows property",
          "Grid auto rows property - part 2"
        ],
        "Grid lines + 2 projects (2 website layouts)": [
          "Grid lines - intro",
          "Grid lines - grid columns and grid rows properties",
          "Grid lines - grid columns and grid rows properties - part 2",
          "Nested grids",
          "Alignment - align items",
          "Alignment - justify items",
          "Alignment - justify content",
          "Alignment - align content",
          "Alignment - align self & justify self",
          "Project #1 - Layout 1",
          "Project #1 - Layout 1 - part 2",
          "Project #1 - Layout 1 - part 3",
          "Layout 1 code",
          "Project #2 - Layout 2",
          "Project #2 - Layout 2 - part 2",
          "Project #2 - Layout 2 - part 3",
          "Project #2 - Layout 2 - part 4",
          "Project #2 - Layout 2 - part 5",
          "Layout 2 code"
        ],
        "Grid Areas + 2 projects (2 website layouts)": [
          "Grid area - intro",
          "Grid area property",
          "Project #3 - Layout 3",
          "Project #3 - Layout 3 - part 2",
          "Project #3 - Layout 3 - part 3",
          "Layout 3 code",
          "Project #4 - Layout 4",
          "Project #4 - Layout 4 - part 2",
          "Project #4 - Layout 4 - part 3",
          "Project #4 - Layout 4 - part 4",
          "Layout 4 code"
        ],
        "Real world project - desktop + mobile websites": [
          "Real world website project - desktop design - HTML part",
          "Real world website project - desktop design - basic styles",
          "Real world website project - desktop design - grid areas",
          "Real world website project - desktop design - aligning it right",
          "Real world website project - desktop design - more stylings",
          "Real world website project - desktop design - content and sidebar",
          "Real world website project - desktop design - footer",
          "Real world website - non-responsive design code",
          "Real world website project - responsive design",
          "Real world website project - responsive design - part 2",
          "Real world website project - responsive design - part 3",
          "Real world website - mobile design code"
        ],
        "Conclusion": [
          "Conclusion & Bonus - Continue your journey!!"
        ]
      },
      "requirements": [
        "A laptop or computer",
        "A text editor like Notepad or notepad++ or Brackets to write the programs on",
        "A very basic understanding of HTML & CSS (just the basic syntax is enough)"
      ],
      "description": "Before CSS Grid arrived on the screen, we had to use relative or absolute positioning, floats, clears and 100s of lines of code to achieve a decent website layout.\nAll of that's changed now.\nWith CSS Grid, you can layout your website's design in just a few lines of code, and even make it responsive!\nIn fact, you can create really complicated website designs with just 10 or so lines of code. That's how easy it is!\nNo more frameworks like Bootstrap to make up for the shortcomings in CSS. Become a professional web designer in just a few hours.\nIf you know the very basics of HTML and CSS, you're all set.\nSpend a few hours learning a bunch of CSS Grid syntaxes, and you'll be creating awesome 2D web layouts in no time at all!\nYou don't need to learn a bunch of frameworks to become a pro web designer now!\n\n\nWhat will you learn in our course?\n1. How to create professional 2-dimensional web layouts with just a few lines of code\n2. How to create and design websites, from simple 2 column blogs to complicated website layouts with multiple columns and rows\n3. How to make your website into a full-blown responsive website, without using any external frameworks like Bootstrap.\n4. How to create widgets, carousels, applications, galleries, navigation bars, menu items\n5. How to control the position, size and spacing of any number of elements you create without collapsing them.\n6. How to layout the elements of your website both horizontally and vertically and change the alignments with a single line of code\n7. How to order elements on the page without changing their order in your HTML code.\n8. How to create nested website layouts with multiple grid templates inside them - like how it's done in the real world\n9. How to create real world websites with CSS Grid, while also creating website layout mockups you can show your clients (for approval).\n\n\nWhat are some real world applications of what you learn in this course?\nBy applying the concepts you learn in this course, you can code and design:\n1. Professional website layouts - from blog layouts to complicated business website layouts with multiple columns and rows\n2.  Pretty much any kind of website design. With the concepts you learn, your imagination is your only limit. You can make the layout as simple or complicated as you want it to be.\n3. Create websites for smart phones and tablets and iPads. Responsive web designing.\n4. Reduce the lines of code in an existing website drastically by applying the CSS Grid properties you learn to redesign it again.\n5. Create portfolio websites of every kind that can be showcased in your projects and job applications.\n6. Get freelance projects on the fly because you now have a VERY valuable skillset added to your resume.\n7. Create 2 dimensional websites where you can manipulate how every single row and column is laid out in the grid.\nSky is the limit! You can apply what you learn here anywhere in the web space, in any sphere.\nYour imagination is your only obstacle to how you apply what you learn here in your real world projects.\n\n\nHow is this course designed?\nOur course has 4 modules, where each module will thoroughly explain the intricacies of one of the concepts in CSS Grid with a wealth of over-the-shoulder examples.\nWe'll be using a real world example to explain the concepts.\nHere are the modules:\nModule 1 - CSS Grid property - This is the foundations module. We’ll look at how to make an element a Grid container so that its child items can be manipulated. We'll also look at what Grid items are and their significance. In this module, we'll be looking into how to create grid columns and rows and how they can be used to layout the website elements in simple ways.\nModule 2 - Grid lines - In this module, we’ll look at a very important concept - Grid lines. This concept can be used to create full blown websites that are placed on 2 dimensional grid lines (hence the name). We'll look at how to use grid lines to create website layouts, and then we'll create 2 website layout projects using Grid lines as well. We'll also look into how to align grid items or the website's elements using the various Grid alignment properties.\nModule 3 - Grid Areas - In this module, we'll look at yet another important concept - Grid areas. We'll look at how we can use grid areas to create complicated website layouts much easier than grid lines. We'll be looking at 2 more website layout projects in this module.\nModule 4 - Create a website - real world project (non responsive and responsive) - In this module, you'll learn how to create a simple, 2-column business website, one that looks like most of the small business HTML websites out there. You'll also learn how to make it completely responsive.\nWe also cover a lot of examples and projects, like:\n1. Project #1 - We'll be applying Grid line properties to create the first website layout - it's a simpler blog layout.\n2. Project #2 - Our 2nd website layout will be created using Grid lines, but we'll created a more complicated design this time, with\n3. Project #3 - We'll be using Grid areas to create a very complicated business website layout with just a few lines of code.\n4. Project #4 -  We'll be using Grid areas again to created a simpler business + blog website layout, but with nested elements this time.\n5. A real world 2-column website with a responsive header, navigation bar, 2 columns (main content and sidebar) and footer. We'll also make the entire website responsive.\n\n\nWhy should you choose our course?\n1. We like to be thorough in our teaching. You'll find everything you need to start creating awesome web designs and layouts with Flexbox code/syntaxes in this course. You won't have to look anywhere else.\n2. We strongly advocate learning by doing, rather than just listening or reading. Our lectures are filled with a wealth of examples that explain every concept clearly.\n3. If you follow along with our examples in our over-the-shoulder trainings, and create the mini project and apply the properties along with us, you'll be confident in embarking into the world of Flexbox and web design (responsive and otherwise) by the time you finish our course. You'll be able to confidently add this as a skill in your resume.\n4. We prefer creating fun projects to explain the concepts and to keep things interesting as well. You'll learn how to apply the concepts you learn in the course in the real world projects and examples.\n\n\nSo, what are you waiting for? Enroll now and start creating awesome web layouts and designs with CSS Grid syntaxes in no time at all!",
      "target_audience": [
        "A fledgling designer who wants to start creating better websites.",
        "Responsive web designer who's stuck in the world of Bootstrap and wants a simpler solution.",
        "Experienced web designer who wants a simpler way of creating website designs and layouts.",
        "Freelancers, employees, students - anyone can take up our course and benefit from it.",
        "Designers and developers who want to create 2 dimensional website layouts in 10 lines of code or less"
      ]
    },
    {
      "title": "Complete Practical .NET Core Worker Service Development",
      "url": "https://www.udemy.com/course/workerservice/",
      "bio": "Updated 2024 - .NET 9.0 | Build .NET Core Worker Service apps. Deploy as Windows Service, Linux/macOS Daemons, Azure",
      "objectives": [
        "Learn .NET Core worker service development",
        "Build multiple worker services in one application",
        "Develop practical worker service applications with consuming Thread, Timer and Socket",
        "Implement worker service for File Watcher",
        "Implement worker service with Entity Framework Core and SQL Server database",
        "Develop worker service for ASPNET Core MVC",
        "Build worker service for Windows Service, Linux and macOS Daemons",
        "Publish .NET Core worker service applications to Microsoft Azure",
        "Build various projects based .NET Core worker service"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Preparation"
        ],
        "Basic Worker Service Development for .NET Core": [
          "Introduction to Worker Service",
          "\"Hello World\" Worker Service for .NET Core",
          "Understanding Life Cycle of Worker Service",
          "Creating Multiple Worker Services",
          "Consuming a Scoped Service",
          "Reading appsettings.json File from Worker Service",
          "Building Timed Worker Service",
          "Developing Worker Service with Thread",
          "Developing Worker Service for File Watcher",
          "Developing Worker Service with Client-Server Socket"
        ],
        "Practical Project: Worker Service with SQL Server Database": [
          "Project Overview",
          "Database Preparation",
          "Creating Worker Service Project",
          "Adding and Configuring Entity Framework Core",
          "Developing Worker Service with Entity Framework Core",
          "Running and Testing",
          "Upgrade Project Source Codes to .NET 6.0"
        ],
        "Practical Project: Worker Service for ASP.NET Core": [
          "Project Overview",
          "Preparing Database",
          "Creating ASP.NET Core Project",
          "Adding and Configuring Entity Framework Core",
          "Building ASP.NET Core MVC for Uploading File",
          "Developing Worker Service",
          "Running and Testing",
          "Upgrade Project Source Codes to .NET 6.0"
        ],
        "Making Windows Service and Daemon Services": [
          "Introduction to Windows Service, Linux and macOS Daemons",
          "Developing Worker Service for Windows Service",
          "Developing Worker Service for Linux Daemon",
          "Developing Worker Service for macOS Daemon"
        ],
        "Publishing .NET Core Worker Service to Microsoft Azure": [
          "Publishing .NET Core Worker Service to Microsoft Azure"
        ],
        "NEW 2022 | Worker Service Development for .NET Core 6.0": [
          "Migrate Worker Service Project to .NET 6.0",
          "Migrate All Source Codes from \"Basic Worker Service..\" Section to .NET 6.0"
        ],
        "NEW 2023 | Code Migration | Worker Service Development for .NET Core 7.0": [
          "Migrate All Source Codes from \"Basic Worker Service..\" Section to .NET 7.0",
          "Migrate to .NET 7.0 \"Practical Project: Worker Service with SQL Server Database\"",
          "Migrate to .NET 7 \"Practical Project: Worker Service for ASP.NET Core\"",
          "Migrate to .NET 7.0 \"Making Windows Service and Daemon Services\"",
          "Migrate to .NET 7.0 \"Publishing .NET Core Worker Service to Microsoft Azure\""
        ],
        "NEW 2024 | Code Migration | Worker Service Development for .NET 9.0": [
          "Migrate All Source Codes from \"Basic Worker Service..\" Section to .NET 9.0",
          "Migrate to .NET 9.0 \"Practical Project: Worker Service with SQL Server Database\"",
          "Migrate to .NET 9.0 \"Practical Project: Worker Service for ASP.NET Core\"",
          "Migrate to .NET 9.0 \"Making Windows Service and Daemon Services\"",
          "Migrate to .NET 9.0 \"Publishing .NET Core Worker Service to Microsoft Azure\""
        ]
      },
      "requirements": [
        "Basic C# programming knowledge",
        "Computer with Windows, Linux or macOS",
        "Installed .NET Core 2.x, 3.x or later"
      ],
      "description": "Worker Service is a project template from .NET Core. This application is designed to build background process and long-process applications. This course is presented to help you get started with .NET Core Worker Service development. Various project samples are provided to enhance your skills to apply Worker Service in real-projects.\nYou can run a worker service application as standalone application or integrating with your application such as ASP.NET Core application, Console application and background service app.\nThe bootcamp is delivered with step-by-step approach and focused on the following topics.\nbasic .NET Core Worker Service development\nconsuming Timer, Thread, FileSystemWatcher and Socket in .NET Core Worker Service\nintegration with Entity Framework Core and SQL Server\ncollaborating between Worker Service and ASP.NET Core MVC\npublishing Worker Service as Windows Service, Linux and macOS daemons\npublishing .NET Core Worker Service application to Microsoft Azure\nYou should have a basic knowledge of C# programming to follow this bootcamp.\nThe bootcamp starts with basic worker service application development. You can run multiple worker services in an application. We also learn how to integrate with database and ASP.NET web application.\nLast, we can deploy a worker service application as background service in Windows, Linux and macOS. We also learn how to deploy this application to Microsoft Azure.\nUpdated:\n17 November 2024: Migrating all projects to .NET 7.0. All source codes are migrated to .NET 9.0\n23 July 2023: Migrating all projects to .NET 7.0. All source codes are migrated to .NET 7.0\n19 February 2022: Add tutor video for migrating to .NET 6.0. All source codes are migrated to .NET 6.0",
      "target_audience": [
        ".NET developers",
        "Student developers",
        "Professional developers"
      ]
    },
    {
      "title": "How to build a website using WordPress",
      "url": "https://www.udemy.com/course/how-to-build-a-website-using-wordpress-in-1-day/",
      "bio": "Wordpress Tutorial : Wordpress Course - Website Installation & creation Step By Step : Create A Wordpress Website",
      "objectives": [
        "After completing this Wordpress Course you will be able to build your website step by step.",
        "You will be able to avoid deadly mistakes that a lot of people make while building a website using Wordpress.",
        "The tutorial will strengthen your Wordpress knowledge base on what should be done and why it should be done.",
        "You will get the actual step by step execution of building your Wordpress Website through practical demonstrations featured in this tutorial."
      ],
      "course_content": {
        "Wordpress Course : Wordpress Site tutorial - Introduction to Wordpress basics": [
          "What is a Content Management System?",
          "What is WordPress?",
          "11 reasons why you should use WordPress",
          "Difference between WordPress.com and WordPress.org",
          "How WordPress works?",
          "WordPress License"
        ],
        "Domains and hosting": [
          "Domain Names",
          "Different types of Hosting and Servers type"
        ],
        "Understanding WordPress admin panel and settings (Theory + Practical)": [
          "How to install WordPress automatically ?",
          "How to access WordPress ?",
          "WordPress Admin Panel and how to use it ?",
          "Practical Video on WordPress Admin Panel and how to use it?",
          "WordPress Toolbar and how to use it?",
          "WordPress Configuration Settings",
          "How to configure general settings in WordPress?",
          "How to configure writing settings in WordPress?",
          "How to configure reading settings in WordPress?",
          "How to configure discussion settings in WordPress?",
          "Avatars",
          "Media Settings",
          "Permalink Settings",
          "Practical demonstration of WordPress Settings",
          "User roles in WordPress"
        ],
        "What are posts and pages and how to create them?": [
          "Pages and posts",
          "How to create a page in WordPress?",
          "How to use a page template?",
          "Page Hierarchies",
          "What is a post in WordPress?",
          "How to decide between creating a post or a page?",
          "How to create a post in WordPress?",
          "How to publish a post?"
        ],
        "Media Library, Categories and Tags": [
          "What is media library?",
          "How to add media elements in posts and pages?",
          "What is oembed technology?",
          "What are categories and tags?",
          "How to use categories and tags?"
        ],
        "WordPress themes and how do decide which to use": [
          "WordPress themes",
          "What are free WordPress themes?",
          "Why do developers offer free WordPress themes?",
          "Pros and cons of free vs paid themes",
          "How to decide between free vs paid themes?",
          "What do you actually get when you purchase a paid theme?",
          "How to check an existing theme in WordPress?",
          "How to add a new theme?",
          "How to add a new theme using WordPress administration panel?",
          "How to add a new theme by using cPanel?",
          "How to select active theme in WordPress?",
          "Customizing theme options",
          "Practical Video on Themes"
        ],
        "What is File Transfer Protocol (FTP) & how to use it?": [
          "How to add a new theme by using FTP?",
          "How to use FTP software Filezilla?"
        ],
        "WordPress Plugins, Widgets & Menus": [
          "Shortcodes in WordPress",
          "What are plugins in WordPress?",
          "How to install plugins in WordPress?",
          "Plugins brief practical",
          "Different types of menus and how to create them",
          "Practical on Menus",
          "What are widgets?",
          "Difference between plugins and widgets",
          "How to add and remove widgets in WordPress?",
          "Widgets Practical"
        ],
        "What is Bootstrap and how to use it in WordPress ?": [
          "What is bootstrap and what are its benefits?",
          "How to install bootstrap in WordPress",
          "Bootstrap grid system and how to use it in WordPress?",
          "Bootstrap grid system in detail",
          "Practical on using bootstrap part 1",
          "Bootstrap layout options",
          "Practical on using bootstrap part 2"
        ],
        "How to create an actual Website ? (Practical training)": [
          "How to create your home page?",
          "How to build about us and contact us page",
          "How to build a blog post and discussion settings configuration?"
        ]
      },
      "requirements": [
        "A working computer, either Windows or Mac.",
        "A modern browser like Chrome, Firefox, or Safari.",
        "Internet access for many of the lessons."
      ],
      "description": "Wordpress Tutorial : Wordpress Course : Website Installation & creation Step By Step\nThis is one of the best WordPress courses you will find. You can start this course with no knowledge nor understanding of WordPress and can become super confident in your ability to produce quality Wordpress websites!\nCongratulations for reading till here and for being ready to take this important decision !",
      "target_audience": [
        "Do you wish your business to be open even when you are sleeping or on vacation?",
        "Are your customers going to your competitors because you don’t have an online presence?",
        "Do you worry about online threats and wish you have a secure website?",
        "Do you wish there was a simple way to make your website and update it whenever you want?",
        "Do you want to have peace of mind with your website?",
        "If you have answered yes to any of the questions Then, this course is for you!",
        "This course is not for advanced WordPress developers. It is a Wordpress Tutorial for Beginners",
        "#wordpresstutorial #wordpresscourse #wordpresssite #wordpresswebsite"
      ]
    },
    {
      "title": "The Complete Angular & NestJS Course",
      "url": "https://www.udemy.com/course/the-complete-angular-nestjs-course/",
      "bio": "Build stand-alone Admin & User Authentification apps! NestJS APIs, Angular 10, Typescript, TypeORM, MySQL, Google Cloud",
      "objectives": [
        "Build an admin app!",
        "Build a user authentication web app!",
        "Use Docker",
        "Use TypeORM",
        "Generate Jwt Token",
        "Connect NestJS with MySQL",
        "Login with HttpOnly Cookies",
        "Upload Images",
        "Export CSV files",
        "Angular CLI",
        "Angular Animations",
        "Create charts with c3js",
        "Deploy to Google Cloud Platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "NestJS Authentication": [
          "Authentication Project Demo",
          "Setup",
          "Controllers",
          "Database",
          "Entities",
          "Services",
          "Register",
          "Validations",
          "Login",
          "HttpOnly Cookies",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Forgot Password",
          "Sending Emails",
          "Reset Password"
        ],
        "Angular Authentication": [
          "Installation",
          "Navigation",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Forgot Password",
          "Reset Password"
        ],
        "NestJS Admin": [
          "Admin Project Demo",
          "Setup",
          "Docker",
          "Modules & Controllers",
          "Migrations",
          "Services",
          "Global Prefix",
          "Register",
          "Hashing Passwords",
          "Validations",
          "Login",
          "Jwt and HttpOnly Cookies",
          "Authenticated User",
          "Interceptors",
          "Logout",
          "Guards",
          "Creating Users",
          "Common Module",
          "Updating Users",
          "Pagination",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Abstract Service",
          "Circular Dependencies",
          "Products",
          "Uploading Images",
          "Orders",
          "Expose Fields",
          "Export CSV",
          "Raw SQL",
          "Custom Decorators",
          "Access Guard"
        ],
        "Angular Admin": [
          "Setup",
          "Template",
          "Modules",
          "Routes",
          "Register Form",
          "HttpClient",
          "Login",
          "Services",
          "Authenticated User",
          "Interfaces",
          "Logout",
          "Inputs",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Redirecting",
          "Users",
          "Pagination",
          "Deleting Users",
          "Users Create Form",
          "Creating Users",
          "Updating Users",
          "Abstract Classes",
          "Roles",
          "Roles Create Form",
          "Form Arrays",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Nested Tables",
          "Animations",
          "Export CSV",
          "Chart"
        ],
        "Deployment": [
          "Google Cloud",
          "Cloud SQL",
          "Config Module",
          "Multi-Stage Docker Builds",
          "Container Registry",
          "Cloud Run",
          "Deploying the Backend",
          "Deploying the Frontend",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge is helpful, but not a prerequisite"
      ],
      "description": "Welcome to The Complete Angular & NestJS Course - the perfect course for beginners, or anyone looking to brush up on their Angluar/NestJS skills!\nAngular was created by Google and is used by Microsoft, Samsung, Deutsche Bank, PayPal, and more!\nNestJS is an Angular-inspired NodeJS framework for building efficient, reliable and scalable server-side applications.\nThe average Angular Developer salary in the US is $112,292 per year(!)\nBy the end of this course you'll have built a stand-alone admin app and an online authentication web app from scratch!\nMaster the skills, tips and tricks you need to create your own projects using Angular and NestJS, and give your coding career a kickstart at the same time!\nStudents start with the basics, before moving on to the two big practical projects...\nLogin/Password web app, with:\nSign in form\nUser registration form\nForgot password function (with email)\nPassword reset form\nStand-alone admin app, with:\nAdmin dashboard\nDaily sales chart\nAbility to create, update and delete users\nAbility to assign levels of user access\nList products (with image, price and description)\nAnimate user orders\nDeploy the app to Google Cloud\nCreated especially for Codestars students, The Complete Angular & NestJS Course combines two of Antonio Papa’s original short courses (Angular and NestJS: A Practical Guide with Docker, and Angular and NestJS Authentication: Forgot and Reset Password) with 1.5 hours of BRAND NEW material!\nAcross the course and the two practical projects, you will learn the following elements of Angular and NestJS:\nIn NestJS you will learn:\nUse Docker\nUse TypeORM and connect with MySQL\nUse Typescript\nUse Interceptors and Guards\nCreate custom Decorators\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV's\nCreate public and secure routes\nRun Migrations\nSend Emails\nIn Angular you will learn:\nHow to use Angular CLI\nCreate classes, interfaces, abstract classes\nUse interceptors\nCreate public and private routes\nAngular Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nUse Reactive Forms\nCreate components and routes\nConsume API calls\nUse Event Emitters\nPerfect for beginners, or anyone new to Antonio’s courses, plus Antonio explains everything he does on screen… and if you ever get stuck, just post in the course Q&A forum and Antonio will reply asap!\nEnjoy the course!",
      "target_audience": [
        "Students new to Angular and NestJS",
        "Coders who want to improve their Angular and NestJS skills",
        "Javascript Developers"
      ]
    },
    {
      "title": "Angular & Loopback - Build a Complete Website from Scratch",
      "url": "https://www.udemy.com/course/angular-loopback-build-complete-website-from-scratch/",
      "bio": "Loopback note taking app having registration, login, forget password, email verification, change password and dashboard.",
      "objectives": [
        "Note Taking App in Loopback",
        "Authentication with Loopback and Angular",
        "Angular",
        "Loopback",
        "Website designing with Angular Material",
        "Email Verification in Loopback",
        "Reset Password in Loopback",
        "Change Password in Loopback",
        "Lazy loading in Angular",
        "Angular Material",
        "Angular components communication",
        "Mongodb with Loopback"
      ],
      "course_content": {
        "Introduction": [
          "Overview of the course",
          "What you should already know",
          "Required tools"
        ],
        "Setting Up Loopback Project": [
          "Create Loopback Project",
          "Go through loopback project structure",
          "Create User Model",
          "Add Mongodb as data source",
          "Loopback custom routes and nodemon",
          "Loopback Commands"
        ],
        "Setting Up Angular Project": [
          "Create Angular Project",
          "Build Angular Project Structure",
          "Add Angular Material and Use it",
          "Create Login Register Feature Module",
          "Setup Login Register Routes",
          "Feature Level Navbar",
          "Angular Basics"
        ],
        "Design and Validate Feature Pages in Angular": [
          "Register User Form Builder",
          "Design Register User Form",
          "Design and Validate Login Form",
          "Design and Validate Forget Password Form",
          "Reactive Forms"
        ],
        "Build Angular Support Services": [
          "Build Helper Service",
          "Build Constant Service",
          "Build Compiler Service",
          "Build Auth Service",
          "Build Interceptor Service",
          "Build Guard Service",
          "Add Configurations for Support Services",
          "Core Services for Authorization"
        ],
        "User Registeration": [
          "SuperUser Model and Relations in Loopback",
          "Add Email smtp Server in Loopback",
          "Loopback Remote Methods for User Registration",
          "User Registration from Angular",
          "Build User Related Interfaces",
          "Error Handling and Loader",
          "User Registration Commands"
        ],
        "Email Verification": [
          "Email Verification in Loopback",
          "Build Email Verification Page in Angular",
          "Send Email Remote Method in Loopback",
          "Resend Verification Email in Angular",
          "Auth Guard Service with Verification",
          "Email Verification in Loopback and Angular"
        ],
        "User Login": [
          "Login User in Loopback",
          "Login Configurations in Angular",
          "User Login in Angular"
        ],
        "Forgot Password in Loopback": [
          "Reset Password Email in Loopback",
          "Send Reset Password Email in Angular",
          "Build Reset Password Component in Angular",
          "Forget Password Remote Method in Loopback",
          "Error Handling and Test Forgot Password"
        ],
        "Build Dashboard": [
          "Build Home Feature in Angular",
          "Design Dashboard Page in Angular",
          "Logout User in Angular & Loopback"
        ]
      },
      "requirements": [
        "Student should be passionate in learning",
        "Should have basic concepts of programming and want to enhance knowledge with website development",
        "Should know basic html and css",
        "Having knowledge about javascript is an edge but not required"
      ],
      "description": "Loopback is Nodejs framework for creating apis and providing UI for testing the apis. Angular is Javascript framework for creating single page web apps. After completing this course, you will be able to build a complete and full fledge note taking web app using Loopback and Angular 8.\nIf you want to learn even one technology like Angular or Loopback, this course provide you enough knowledge to build high level web applications with best code practices.\nI will start with creating folder structures of the Angular and Loopback projects, following the best practices and code quality. These are the following topics I will be covering in this course.\n\n\nLoopback\nLoopback introduction\nUser registration in Loopback\nUser login in Loopback\nUser email verification in Loopback\nForget password in Loopback\nChange password in Loopback\nCreating Loopback models using commands\nBuild proper folder structure in Loopback project\nBuild custom templates in Loopback\nCreating remote methods in loopback\nUsing hooks in Loopback\nModel relationships in Loopback\nAccess controls in Loopback\n\n\nAngular\nAngular cli commands\nAngular Routing\nAngular Components communication\nAngular project folder structure\nLazy Loading in loopback\nBest Practices and Interfaces\nUsing rich text box for creating notes\nUtilising loopback apis in angular\nBuild nice looking Angular material UI\n\n\nIn this course, I will build a note taking app that will include categories and each category will have multiple notes which we can perform CRUD operations on.\nI can assure, you will become a full stack developer after completing this course and can build hight level enterprise web apps. I hope to see you taking this course.",
      "target_audience": [
        "Website designers who wants to learn website development",
        "Beginner programmers who want to learn web technologies",
        "Who want to become full stack developer by learning backend and front using loopback and angular"
      ]
    },
    {
      "title": "Build 6 Responsive Real World Websites using HTML CSS JS",
      "url": "https://www.udemy.com/course/build-real-world-website-using-html5-css3-and-javascript/",
      "bio": "Become a Front-End Web Developer with HTML5,CSS3 and by building stunning websites for your portfolio",
      "objectives": [
        "Real-world skills to build real-world websites: professional, beautiful and truly responsive websites",
        "Able To Create any kind of website that you imagine",
        "Project 1 - Mobile Responsive Ecommerce Website",
        "Project 2 - Responsive Dark Mode Portfolio Website",
        "Project 3 - Build Responsive Travel Website",
        "Project 4 - Build Responsive Website for Digital Agency",
        "Project 5 - Build Complete Responsive Portfolio website from scratch - Light Theme",
        "Bonus Projects : Free photos generator, Cool Tic Tac Toe UI and more..",
        "Project 6 - Build Complete Professional website for a fictional tech company with animations"
      ],
      "course_content": {
        "Project 1 - Mobile Responsive Ecommerce Website": [
          "Project 1 - Demo",
          "Build Navigation Bar and Header Section",
          "Let's finish up other sections",
          "Making Mobile Responsive"
        ],
        "Project 2 - Responsive Dark Mode Portfolio Website": [
          "Project 2 - Demo",
          "Header Section - Nav and Main Content",
          "About Me Section",
          "Services and Projects Section",
          "Contact and Footer",
          "Making It Responsive"
        ],
        "Project 3 - Multiple Pages Responsive Website": [
          "Project 3 - Website Demo",
          "Build Complete Website step by step"
        ],
        "Project 4 - Responsive Travel Website": [
          "Project 4 - Demo",
          "Building Travel Website"
        ],
        "Project 5 - Complete Responsive Website for a Digital Agency": [
          "Project 5 - Demo",
          "Building Complete Website"
        ],
        "Project 6 - Complete Responsive Portfolio Website - Light Theme": [
          "Project 6 - Demo",
          "Navbar & Header Section",
          "Skills & Portfolio Section",
          "Testimonials & Contact Section",
          "Making Mobile Responsive"
        ],
        "Bonus - HTML & CSS Projects": [
          "Build Cool Tic Tac Toe UI with HTML & CSS",
          "Build A Beautiful Landing Page",
          "Build Free Photos Generator with HTML CSS & Js",
          "Responsive Mobile Navbar With HTML CSS"
        ],
        "Learn Javascript by building these Projects": [
          "Build Your First Javascript Project - 10million colors Generator",
          "Advanced Todo App - Learn Javascript CRUD, Local Storage and more..",
          "Build Dynamic Counter using JavaScript"
        ],
        "(OLD) : Complete website using HTML CSS Javascript": [
          "Project 7 : Trailer",
          "Header And Services ( Flexbox)",
          "Portfolio And Projects ( CSS Grid )",
          "Blog And Footer Section",
          "Team And Testimonial Section ( Grid, Hover Effects )",
          "Add Animations and dark mode for website"
        ]
      },
      "requirements": [
        "For Beginners: \"Just bring your enthusiasm and a willingness to learn! This course is designed with the absolute beginner in mind, so no prior experience in web development is necessary. All you need is a computer with internet access and a desire to create something amazing.\"",
        "For Intermediate Students: \"If you have a basic understanding of web browsers and are comfortable with using text editors, you're ready to jump in! Any experience with HTML or CSS is a bonus but not a requirement—we'll cover everything from the ground up.\""
      ],
      "description": "This course is about Building Modern Websites with HTML5, CSS3 and javascript.\nDive into the world of modern web development with this comprehensive course focused on building real world websites using HTML5, CSS3, and JavaScript.\n\nGet ready to immerse yourself in 10.5 hours of dynamic learning,\n\nIn this course we gonna build 6 complete professional and beautiful websites from scratch and 4 bonus projects and 3 JavaScript Projects\nThe course is completely project-based\nTogether we hand-code a beautiful websites step-by-step, you will learn more and more HTML5 and CSS3 features, animations, from beginner to advanced.\nThis huge projects will teach you all the real-world skills to build real-world HTML5 and CSS3 websites. This will allow you to build any website you can imagine... From complete scratch.\n\n\n#Project 1 : Mobile Responsive Ecommerce Website\n#Project 2 : Responsive Dark Mode Portfolio Website\n#Project 3 : Multiple Pages Responsive Website\n#Project 4 : Build Responsive Travel Website\n#Project 5 : Build Responsive Website for Digital Agency\n#Project 6 :  Build Complete Responsive Portfolio website from scratch - Light Theme\nBonus Projects : Free photos generator, Cool Tic Tac Toe UI and more..\n\nJavascript Projects :\n#1 Color Flipper\n#2 Advanced Todo app - Learn CRUD, Local Storage, DOM\n#3 Dynamic Counter App\n\n\nYou will learn the following by building these projects :\nCrafting semantic HTML5 layouts\nStyling with CSS3 to create visually engaging websites that stand out.\nImplementing responsive design principles to make websites look perfect on any device.\nUsing advanced CSS techniques like Flexbox and Grid to layout pages efficiently.\nEnhancing user interfaces with CSS animations, transitions, and transformations.\nUnique professional designs\nAdding Cool colors to design\nAdding Different Fonts to your website\nMaking Any website Mobile Responsive\nJavaScript DOM, Local Storage, CRUD operations\nCreating Beginner to intermediate level JavaScript Projects\n\n\nLet's now find out if this course is for you. It's a perfect fit if...\nStudent #1: You are a complete beginner with no idea on how to build a website.\nStudent #2: You already know some HTML and CSS from some tutorials or videos, but struggle to put together a good-looking, complete website.\nStudent #3: You are a designer and want to expand your skills into HTML5 and CSS3, because all your designer colleagues are learning how to code.\n\n\nThis is what you get:\n• Lifetime access to my HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• English captions for students with hearing impairment.\n• All lectures are downloadable to make your learning experience even better.\n• Downloadable code and design assets for the entire project. You can keep this code as a starting point for your own projects.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n\nWe are going to build all these cool stuff step by step from scratch, I am soo excited to build this awesome real world websites.\nSounds great? Then just click the “Take this course\" button, and let's start this fantastic journey together!",
      "target_audience": [
        "This course is for any one, beginner to advanced",
        "For Career Starters: \"This course is perfect for anyone looking to start a career in web development.",
        "For Continuous Learners: \"Even if you're already in the tech field, this course will help you update and refine your skills. Stay current with the latest in HTML5, CSS3, and JavaScript to ensure your web development abilities are up-to-date.\""
      ]
    },
    {
      "title": "Learn Livewire V3 from Scratch : Practical Course",
      "url": "https://www.udemy.com/course/learn-livewire-from-scratch/",
      "bio": "Learn Livewire practically by building multiple real-world projects along the way.",
      "objectives": [
        "Learn how to Build Practical Applications using the TALL Stack",
        "Learn how to build Custom Re-Usable Livewire Components from scratch.",
        "Learn how to Build Real-Time Applications with Laravel and Livewire",
        "Learn how to Build Multi-Step Forms with the TALL Stack",
        "Learn how to build amazing data-tables using the TALL Stack including features like Bulk Actions, Excel Exports, Filters, Multi-Column Searching/Sorting etc.",
        "Learn how to Build a Re-Usable Drag & Drop Uploader Component with the TALL Stack"
      ],
      "course_content": {
        "Getting Started": [
          "Install and Setup Laravel/Livewire",
          "Defining Components in Livewire",
          "Actions",
          "Properties",
          "Lifecycle Hooks",
          "Full Page Components",
          "Alpine.js"
        ],
        "Let's Build a Students Management System": [
          "Introduction to Students Management System",
          "Install and Setup Laravel/Livewire",
          "Let's Define the Models and Migrations",
          "Define the Factories/Seeders and Relationships",
          "Let's Display the Students Data",
          "Start working on the Record Creation flow",
          "Implement Dependent Dropdowns and Finalize Record Creation flow",
          "Let's work on the Record Update flow",
          "Define a dedicated form object for the Create flow",
          "Define a dedicated form object for the Update flow",
          "Deleting Individual Records",
          "Implement wire:navigate",
          "Fix Remaining Issues"
        ],
        "Building Feature-Rich Data Tables with the TALL Stack": [
          "Implement Loading Indicators",
          "Let's Implement Search Functionality",
          "Start Working on Column Sort Functionality",
          "Finalize Sort Functionality",
          "Implement Bulk Actions and Finalize Bulk Delete",
          "Implement Excel Export Feature",
          "Install and Configure Filament Notifications Package",
          "Implementing the Select All Checkbox",
          "Improving the Bulk Select Workflow",
          "Implementing Indeterminate Checkbox States",
          "Implement Select All Button",
          "Refactoring to Traits",
          "Implement Lazy Loading"
        ],
        "Let's Build a Re-usable Comments System with Livewire": [
          "Introduction to Building a Re-usable Comments System with Livewire",
          "Install and Setup Laravel",
          "Setup Article and Episode Model",
          "Install Livewire and Define Comment Component",
          "Define Comment Model and Setup Relationships",
          "Listing Parent Comments",
          "Listing the Replies",
          "Creating a Comment",
          "Toggling the Reply State",
          "Creating a Reply",
          "Hiding the Reply Form on a Successfull Reply",
          "Implement Eager Loading Strategies",
          "Toggling the Edit State",
          "Start Working on Updating the Comment",
          "Finalize the Comment Update flow",
          "Implement Proper Authorization Checks",
          "Using Model Presenters",
          "Deleting Comments",
          "Finalize Comment and Reply Deleting Flow",
          "Prevent making a Reply to Replies",
          "Implement Pagination",
          "Address Alpine.js's Blip Issue",
          "Autofocus Textarea when Editing/Replying to Comments"
        ],
        "Building Multi-Step forms with Livewire": [
          "Introduction",
          "Install and Setup Laravel and Livewire",
          "Start Working on the Multi-Step forms flow",
          "Configure Wizard Component",
          "Navigating Steps",
          "Storing and Accessing State",
          "Refactor stateToStore method",
          "Creating the Product Wizard",
          "Add Previous Buttons",
          "Adding a top Navigation on all Steps",
          "Creating the Product Record up front",
          "Using Custom State",
          "Uploading the Image",
          "The Final Step (Publish Step)",
          "Handling Backsteps",
          "Adding a Step Navigation Component",
          "Handling more Complex Backsteps",
          "Using Computed Properties to Prevent Redundant Database Queries",
          "Dealing with Specific State Issues"
        ],
        "Let's Build a Re-Usable Drag and Drop Uploader with Livewire and Alpine.js": [
          "Introduction to Building a Re-Usable Drag and Drop Uploader with Livewire",
          "Install and Setup Laravel/Livewire",
          "Define Uploader Livewire Component",
          "Handling Uploaded Files",
          "Handling Dragged and Dropped Files",
          "Validating Uploaded Files",
          "Storing Uploaded Files",
          "Showing the Progress Bar",
          "Listing and Downloading the Uploaded Files",
          "Making the Uploader Re-Usable for Multiple Models"
        ],
        "Learn how to Implement Infinite Scrolling with Livewire": [
          "Install and Setup Laravel",
          "Define the model/migration/factory/seeder and seed the data",
          "Working with Chunks",
          "Fetching Records for a Chunk",
          "Adding an Intersection Observer"
        ],
        "Building real-time applications with Laravel, Livewire and Reverb": [
          "Building Real-time applications with Laravel, Livewire and Reverb",
          "Install Laravel",
          "Setting Up Laravel Reverb",
          "Scaffolding Chat Rooms",
          "Work on the Chat Interface",
          "Textarea Behaviour",
          "Storing Messages",
          "Seeding Fake Messages in Order",
          "Displaying the Messages",
          "Applying Conditional Classes",
          "Ordering Messages with Flexbox",
          "Pushing new Messages",
          "Broadcasting and Pushing new Messages",
          "Showing Online Users",
          "User Joining and Leaving Events",
          "Detecting Typing Events",
          "Whispering Typing Status",
          "Better Formatted Dates and Times"
        ]
      },
      "requirements": [
        "Beginner Level knowledge of PHP/Laravel is required"
      ],
      "description": "In this course, we will be Learning Laravel Livewire v3 (A tool to build Powerful, dynamic, front-end UIs without leaving PHP)  along with Laravel (TALL stack in general) in a practical way by building multiple practical projects along the way.\n\n\nProjects Roadmap and Status:\n[Uploaded] Livewire Basics\n[Uploaded] Building a Simple Student's Management System\n[Uploaded] Building Amazing and Performant data tables with the TALL Stack\n[Uploaded] Building a re-usable Comments System with Livewire\n[Uploaded] Building Multi-Step Forms with Livewire\n[Uploaded] Building a Re-Usable drag and drop Uploader\n[Uploaded] Building real-time applications with Laravel, Livewire and Reverb\n\n\nProject Description:\n\n\n[Uploaded] Livewire Basics\nIn this section, we'll look into the basics of Livewire and some of the fundamental features Livewire provides.\nSome of the topics we'll cover in this section include:\n\n\nLearn how to Define Components in Livewire\nLook into Properties and Actions in Livewire and their general use cases.\nLearn about Lifecycle Hooks in Livewire and their conventions.\nLearn about Full Page Components in Livewire, how to use them, and some issues we might face. (these eliminate the use of Laravel Controllers and intermediate views)\nA gentle introduction to Alpine.js and how to use it in Livewire/Blade\n\n\n[Uploaded] Building a Simple Student's Management System\nIn this section, we'll build a simple CRUD app and dive into the fundamentals of building CRUD applications with Livewire and the TALL Stack, we'll start by installing Laravel and then set up Livewire along with Laravel Breeze installation, and we will learn the following topics along the way:\n\n\nLearn about Lifecycle hooks and Build dependent dropdowns in Livewire\nLearn how to extract properties and methods to a Form Object and use it in a Livewire Component\nLearn how to work with Factories and Seeders in Laravel, and seed the necessary data for all of our Models\nLearn about the new #[Rule] attribute syntax in Livewire and implement Validations.\nLearn about wire:navigate and implement SPA kind of experience in a Livewire-based app.\nLook into the issues we might face while using dedicated form objects, and eventually fix all of them.\n\n\n[Uploaded] Building Performant data tables with the TALL Stack\nWe'll continue from where we left off in the previous section and build an interesting data table in this section.\nThis includes Excel Exports, Filtering Functionality, Bulk Records Selection, Loading Indicators etc.\n\n\nSome of the features that we'll cover in this section are listed below:\n\n\nLearn how to Implement Loading Indicators (while paginating data or while performing any operation)\nLearn how to Implement Search functionality (supporting multi-column searching)\nLearn how to Implement Columns Sort functionality (supports multi-column sorting)\nLearn how to implement Bulk Actions (a feature to select multiple rows and perform group action on all of them)\nLearn how to implement Excel Exports\nWe'll also learn how to install and configure the Filament Notifications package to display notifications.\nWe'll also implement Selecting all the records (across all the pages), and make the necessary visual changes.\nLearn how to Implement Filter Functionality\nAnd many more...\n\n\n[Uploaded] Building a re-usable Comments System with Livewire\n\n\nIn this Section, we'll be building a re-usable Comments Component that instantly works for any model. We'll use polymorphic relationships, which can be attached to multiple models.\n\n\nSome of the features that we'll cover in this section are listed below:\n\n\nLearn how to build a re-usable Comments Component that supports multiple models along with Comment Edit, Delete, and Reply Functionality.\nLearn how to implement proper authorization checks (on both frontend and backend) so that only the authorized user can delete the comment.\nWe'll sprinkle in Alpine.js to make our Livewire Component more interactive (like showing reply/edit forms, applying transitions etc.)\nWe'll also learn how to automatically focus the reply/edit forms when it is rendered in the form. (using Alpine.js)\nWe'll also implement replying to Comments, Editing Comments/Replies, Deleting Comments and Replies\nLearn how to properly paginate the comments and fix a few issues along the way.\nAt the end, we'll look at how to optimize our database queries using eager loading strategies.\n\n\n[Uploaded] Building Multi-Step Forms with Livewire\nIn this section, We'll learn about everything we need to build multi-step forms in Livewire. We'll cover the basics of creating a multi-step form, adding steps, navigating steps and accessing state, and building a practical project at the end of the Section.\n\n\nSome of the features that we'll cover in this section are listed below:\n\n\nLearn how to navigate between the steps of the multi-step form seamlessly, we'll also implement proper Validations along the way.\nWe'll use a Laravel package dedicated to building multi-step forms in this section, and build features on top based on our needs.\nLearn how to work with Image Uploads and fix state-related issues\nLearn how to define a configurable navigation component to show the state of the Multi-Step Component.\nFinally, we'll build a fully working practical example with more advanced step navigation, file uploads, and custom state.\n\n\n[Uploaded] Building real-time applications with Laravel, Livewire and Reverb\n\n\nLearn how to Integrate Laravel with Reverb to build Real-Time Applications\nLearn how to display user typing events using Whisper and Client-to-Client communication\nLearn how to use presence channels to show online users for each room\nLearn how to use Flexbox tricks to keep messages scrolled into view as they roll in\nSeeding databases in Order\nListening for Broadcasted events from the backend and reacting to them accordingly in Livewire\nWe'll also learn how to listen for users leaving or joining events and add/remove them from the online user list",
      "target_audience": [
        "Laravel developers interested in Learning Livewire and the TALL Stack"
      ]
    },
    {
      "title": "PHP Web Developer Course with 3 Projects",
      "url": "https://www.udemy.com/course/the-web-developer-course/",
      "bio": "Develop Web Applications with PHP MySQL - Become Expert in Development",
      "objectives": [
        "Able to Develop Web Application",
        "Able to become master in Web Development",
        "Able to become Web Programmer and Coder."
      ],
      "course_content": {
        "Required Software Installation": [
          "2 Projects - Introduction",
          "Project Introduction",
          "Install Atom Source Code Editor",
          "My First PHP Program [Hello World]",
          "Install Xampp and Wamp Servers to Run PHP Files",
          "Install Wamp Server Software"
        ],
        "Get Stared": [
          "Install Project Database",
          "Project Index File"
        ],
        "Project Front End": [
          "Display Record on Index File - 1 Class Part_01",
          "Front End - Display Record on Index File - 1 Class Part_02",
          "Front End - Show Record on Index File from Database - 2 Class",
          "Page Navigation - 3 Class",
          "Front End - Main Page Product Detail - 4 Class PHP Code _01",
          "Show Product Detail on Mainpage - 4 Class Part _02",
          "Product Detail - 4 Class Part _03",
          "Show Value on Add Order Form Part_01",
          "Display Value on Add Order Form Part_02"
        ],
        "Member Registration": [
          "Learn How to manage Sign Up Form - 06 Class Part 01",
          "How to Work our Sign Up Form - 06 Class Part 02",
          "Sign up Form Validation PHP - 6 Class _02",
          "Learn Sign up Form Validation PHP - 6 Class _03",
          "Sign in Form Validation with PHP Code - 7 Class _01",
          "Sign in Form Validation with PHP Code - 7 Class _02",
          "Logout PHP File - 7 Class",
          "Only Register Member can Access - 8 Class Part_01",
          "Authorization Access with Session - 8 Class Part_02",
          "Only Register Member Authorization Access with Session - 8 Class Part_03",
          "Place Order - 9 Class _01",
          "Place Order - 9 Class Part _02",
          "Place Order - 9 Class Part _03",
          "Track Order with GET ID from URL - 10 Class Part_01",
          "Track Order with GET ID from URL - 10 Class Part_02",
          "Track ID Detail with Post Field - 10 Class"
        ],
        "Member Panel": [
          "Member can Access its Panel - 11 Class",
          "Member Panel - 12 Class Part_01",
          "Member Panel - 12 Class Part_02"
        ],
        "Admin Panel": [
          "Admin Feature Add Product - 13 Class",
          "Admin Feature Add Product into Database - 13 Class Part_01",
          "Admin Feature Add Product into Databse - 13 Class Part_02",
          "Admin Feature Display products on PHP Product file - 15 Class _01",
          "Admin Feature Display products on PHP Product file - 15 Class _02",
          "Admin Feature Delete Product - 16 Class",
          "Display Value on Form for Edit Product - 17 Class",
          "Admin Features Update Product - 18 Class",
          "Display Orders on Order PHP File - 19 Class",
          "Create Table into Database - 20 Class",
          "Contact with Admin via Contact Form - 20 Class_01",
          "Contact with Admin via Contact Form - 20 Class_01",
          "Display Messages in Admin Panel - 21 Class",
          "Delete Messages from Message PHP file - 22 Class",
          "Display Order Records on Edit File - 23 Class",
          "Update Order in Admin Panel - 24 Class",
          "Delete Order in Admin Panel - 25 Class"
        ],
        "Final Assignment": [
          "Assignment for The Web Development Project",
          "Assignment Support - 26 Class",
          "Solve Assignment - Create User PHP file Display all users in admin panel - 27",
          "Solve Assignment - Edit Update User - 28 Class",
          "Solve Assignment - Delete Users - 29 Class",
          "Solve Assignment - Add User from Admin Panel - 30 Class"
        ],
        "Download Section": [
          "Download Source Code"
        ],
        "Project 2 - Create Education Web App development": [
          "Setup - Installation",
          "Project - development planing with webappbuilder",
          "WebAppBuilder - Create Database - dvip and courses table",
          "webappbuilder - create table lectures orders vip in database",
          "WebAppBuilder - Generate php mysql Source Codes for dvip project",
          "courses project explain",
          "manage courses project sidebar - enable and disable db tables",
          "enable database tables on admin dashboard",
          "Add course into database in admin dashboard",
          "display database contents on front end web page",
          "display title price images from database table to front end",
          "Add next product as course into admin dashboard",
          "Create detail and cart web pages",
          "Product Detail Page Linking display record with id",
          "display database records on web page - using php coding",
          "Create Cart php web page",
          "write coding for cart web page confirm order",
          "Add products into cart",
          "change something in code and database",
          "duplicat eproducts issue fixing",
          "confirm order in bootstrap 5",
          "add product into cart",
          "add new features in product detail access vip only"
        ],
        "Project 2 - Source code download": [
          "download section"
        ]
      },
      "requirements": [
        "Able to use PC and HTML Basic",
        "Latest Version Wampserver - Atom Code Editor [ Software Required ]",
        "Need Unlimited Interest of Learning"
      ],
      "description": "In this course we are going to learn in detail about PHP Web Developer Course with Project. We are developing a web application. My app name is Naeem. In this app I add three panels. First Front end for visitors. Second Member panels for registered members. Third for Admin.\nProject 1  PHP Web Developer Course Project  Outlines\nFront End\nIndex page [Main Page].\nPage Navigation\nProduct Detail\nTrack Orders\nContact Form\nSign in / Sign-out\nMember Panels\nPlace Orders.\nOrder Details\nAdmin Panel\nAdd Edit Delete Products\nAdd Update Delete Orders\nManage Users\nManage Messages\nOverview about Project 1\nThis complete project design and created in PHP 7.2 and MySQL in Latest version. I teach everything from start in this course. I cover topics step by step with output result of every code. After completing of this course. I am fully sure. You will learn many things about project.\n\n\nProject 2  -  PHP Web Developer Course with Project New\nNew Online Educational Project in PHP MySQL\n\n\nlearn to setup and installation\nplan to development of project\nCreate database for project\ncreate table for courses lectures vip in database\nGenerate php MySQL source code\nshort project explaining\nenable admin and use\nadd product from admin panel\nadmin panel\nadd products\nadd lectures\nactivate vip member\nmanage members\nUser panel\ncheck vip\nadd product into cart\ncheck status of product\nOverview about Project 2\nNew project developed with xampp latest version php version 8.2.4 and latest MySQL. This is a educational project which has many features.\n\n\nProject 3 -  PHP Web Developer Course with Project New Latest\nWatch Video Get Reward as Coins\nNew Project is developed with new way we used WebAppBuilder Tool it is source code generator it saves month of work within hours.\nFront End\nindex page\nLanding page\nheader\ndetail section\nfooter\nregister page\nlogin page\nAdmin Panel\nControl complete project\nAdd Members\ndelete member\nedit member\nadd rewards\ncheck detail\ncheck history\ncheck member referrals\nMember Panel\nDaily Task\nCheck History\nUpdate Account\nConvert coin into real currency\nAdd Reward\nReferral System\nOverview about Project 3\nWeb developer course project 3 uses latest version of xampp server (freeware) for offline development and VS Code source editor tool (Freeware) you enjoy a lot.\nConclusion\nIn final Lecture. I also give assignment. Which will boost up your coding style. I try my best to help you in the assignment to be solved.  I also add source code in every lecture. As student can practice on this and learn practically.  I wish you would learn more and get everything clear that whatever I teach.\nBest of Luck.",
      "target_audience": [
        "Web Developers",
        "Code Learners",
        "Anyone who wants to Develop and Design Web Applications"
      ]
    },
    {
      "title": "Laravel 12 Build Advanced Inventory Management System A-Z",
      "url": "https://www.udemy.com/course/laravel-build-advanced-inventory-management-system/",
      "bio": "In This Course, You Will Build Multi Warehouse Inventory Management System with Laravel 12 And Build It From Scratch.",
      "objectives": [
        "Advance Inventory Management Project With Laravel 12",
        "Basic Dynamic Company Website With Laravel 12",
        "User Role Management With Laravel 12",
        "User Roles and Permission",
        "Crud System for Brand",
        "Crud System for Warehouse",
        "Advance Product Page Setup",
        "Product Details Page",
        "Manage Purchases System",
        "Manage Purchases Store",
        "Purchases Details Page Setup",
        "Purchases PDF Invoice Page Setup",
        "Manage Purchases Return",
        "Manage Sales System",
        "Manage Sales Return",
        "Due Management",
        "Manage Transfer Product in Warehouse",
        "Report Management",
        "Setup User Roles in Permission"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Inventory Management System - What You Will Build",
          "Basic Company Website - What You Will Build",
          "Need Your Support",
          "My Mission"
        ],
        "Build Basic Company Website With Laravel 12 A-Z": [
          "What You Will Build",
          "Project Excise Files - Downloadable Resources",
          "Initial Setup for Start",
          "Install Laravel 12",
          "Laravel 12 File Structure",
          "Install Laravel Breeze",
          "Laravel Breeze Forget and Reset Password System"
        ],
        "Project Admin Panel Setup": [
          "Project Theme Over View",
          "Admin Template Setup",
          "Admin Logout Option",
          "Customize Login Form",
          "Customize Register Form",
          "Customize Login Form Validation",
          "Refresh Admin Template"
        ],
        "Two-Factor Authentication (2FA) Using a Verification Code": [
          "Two-Factor Authentication Part 1",
          "Two-Factor Authentication Part 2",
          "Two-Factor Authentication Part 3"
        ],
        "Setup Admin Profile": [
          "Admin Profile & Image Update Part 1",
          "Admin Profile & Image Update Part 2",
          "Admin Profile & Image Update Part 3",
          "Admin Profile & Image Update Part 4",
          "Adding Toster In For View Message",
          "Admin Profile Change Password Part 1",
          "Admin Profile Change Password Part 2"
        ],
        "Project Frontend Theme Setup": [
          "Frontend Theme OverView",
          "Frontend Template Setup",
          "Frontend Theme Layout Setup Part 1",
          "Frontend Theme Layout Setup Part 2",
          "Frontend Header Menu Update",
          "Frontend Header Setup User login and Not Login Button"
        ],
        "Home Review Section Setup": [
          "Home Review Section Setup Part 1",
          "Home Review Section Setup Part 2",
          "Home Review Section Setup Part 3",
          "Home Review Section Setup Part 4",
          "Install Image Intervention",
          "Home Review Section Setup Part 5",
          "Home Review Section Setup Part 6",
          "Home Review Section Setup Part 7",
          "Show Review in Frontend"
        ],
        "Backend Home Slider Setup": [
          "Backend Home Slider Setup Part 1",
          "Backend Home Slider Setup Part 2"
        ],
        "Show Slider in Home Page": [
          "Show Slider in Home Page",
          "Slider Update With Onclick Part 1",
          "Slider Update With Onclick Part 2",
          "Features Header Update With Onclick",
          "Users Header Update With Onclick",
          "Answers Header Update With Onclick"
        ],
        "Backend Setup Home Features Section": [
          "Backend Setup Home Features Section Part 1",
          "Backend Setup Home Features Section Part 2",
          "Backend Setup Home Features Section Part 3",
          "Frontend Show Home Features"
        ]
      },
      "requirements": [
        "You have to know basic PHP",
        "Basic HTML, CSS, Bootstrap",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp",
        "Text Editor/IDE: Sublime Text, Visual Studio Code, PHPStrom etc"
      ],
      "description": "Unlock the power of Laravel 12 to build a robust, scalable, and feature-rich Laravel 12 Inventory Management System from scratch! This comprehensive course is designed for developers who want to master Laravel by creating a real-world application with advanced functionality. Whether you're a beginner or an experienced developer, this step-by-step guide will equip you with the skills to build a professional inventory system.\nIn this course, you'll develop a complete inventory management system with features like Admin Panel Setup, CRUD operations for Brands, Warehouses, Suppliers, Customers, and Product Categories, Product Management, Purchases and Sales Management, Returns, Due Management, Warehouse Transfers, Report Generation, and User Role Permissions. You'll also learn to create PDF Invoices, manage product details, and implement secure, efficient workflows.\nBy the end, you'll have a fully functional inventory system ready for real-world use, along with a deep understanding of Laravel 12's advanced features, best practices, and modern development techniques.\nWhat You'll Learn\nSet up a secure Admin Panel with user profile management.\nBuild CRUD systems for Brands, Warehouses, Suppliers, Customers, and Product Categories.\nCreate and manage Product Pages with edit, update, and delete functionality.\nImplement Purchases Management with store, edit, delete, and PDF invoice generation.\nHandle Sales Management, including returns and due management.\nManage product transfers between warehouses efficiently.\nGenerate detailed reports for inventory insights.\nSet up user roles and permissions for secure access control.\nDevelop responsive, user-friendly interfaces using Laravel 12.\nMaster Laravel 12 features like Eloquent ORM, Blade templating, and middleware.\nCourse Features\nHands-on Project: Build a complete inventory management system.\nStep-by-Step Guidance: Easy-to-follow instructions for all skill levels.\nReal-World Application: Learn practical skills for professional development.\nDownloadable Resources: Get code files and project assets.\nSEO-Optimized Learning: Build a system ready for business use.\nWhy Enroll?\nThis course goes beyond theory, guiding you through building a fully functional inventory management system that you can customize or deploy. With Laravel 12's latest features, you'll learn modern web development techniques while creating a real-world application. Enroll now to transform your Laravel skills and build a professional-grade inventory system!\nJoin today and start building your Advanced Inventory Management System with Laravel 12!",
      "target_audience": [
        "Beginner developers eager to learn Laravel 12 through a practical project.",
        "Intermediate developers looking to build advanced inventory systems.",
        "Professionals aiming to enhance their Laravel skills for career growth.",
        "Entrepreneurs who want to create custom inventory solutions."
      ]
    },
    {
      "title": "Angular 12 and .NET Core Web API Full Stack Master Course",
      "url": "https://www.udemy.com/course/angular-12-and-net-core-web-api-full-stack-master-course/",
      "bio": "learn to create a full stack web application from scratch using .NET Core Web API and Angular 12.",
      "objectives": [
        "Full Stack Web Development",
        "Angular 12 Front End Web Development",
        ".NET Core Web API Backend Web Development with SQL Server, Mongo DB, My SQL and Postgre SQL",
        "Build RESTful APIs"
      ],
      "course_content": {
        "Angular 12, .NET Core & Microsoft SQL Server": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install SQL Server Management Studio",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "Angular 12, .NET Core & Mongo DB": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install Mongo DB Compass",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "Angular 12, .NET Core & MySQL": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install MySQL Workbench",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "Angular 12, .NET Core & PostgreSQL": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install PG Admin",
          "Install Node JS",
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API",
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "The demand for a Full-Stack Web Developer is the highest compared to any technology professional. They are paid exceptionally well both in the companies and also as freelancers.\nThis is due to the fact that full-stack web developers have diverse set of skills.\nThey are good at Database Development.\nBackend Development.\nAnd also in Front End Development.\nIn this course, you will learn full stack web development with Angular 12 for the frontend and .Net Core Web API for the backend.\nWe will build the same backend project with different databases such as Microsoft SQL Server, My SQL, Mongo DB and Postgre SQL.\nSections in this Master Course:\n1) Angular 12, .NET Core Web API and Microsoft SQL Server.\n2) Angular 12, .NET Core Web API and Mongo DB.\n3) Angular 12, .NET Core Web API and Postgre SQL.\n4) Angular 12, .NET Core Web API and My SQL.\nWith Angular 12, you will learn to\n* Add routing to our app.\n* Add bootstrap table with custom sorting and filtering features.\n* Add modal pop up window with drop down and date picker.\n* We will also learn how to upload an image and save it in the backend sever.\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        ".net, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Learning wordpress from the scratch",
      "url": "https://www.udemy.com/course/wordpress-complete-guide/",
      "bio": "WordPress for the beginners",
      "objectives": [
        "Create all kinds of commercial websites, using WordPress, to sell to clients",
        "Master the inner workings of WordPress, for fixing, troubleshooting, and building websites",
        "Set up server and hosting environments in the most economical and secure way",
        "Build and edit websites within staging and development environments"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation for Window",
          "Installation for mac"
        ],
        "Exploring the world of Wordpress": [
          "WordPress : Dashboard",
          "WordPress : Header",
          "WordPress : Footer",
          "Blogs in WordPress",
          "PLAY WITH WORDPRESS"
        ],
        "section 3": [
          "creating of simple websites",
          "customize creating websites",
          "how design tool bar",
          "page builder basics"
        ],
        "Personal websites": [
          "Creating header, about me, services",
          "pop up, link, others"
        ],
        "hosting": [
          "wordpress debugging",
          "wordpress essential"
        ]
      },
      "requirements": [
        "A working computer, either Windows, Mac or Linux.",
        "A modern browser like Chrome, or Firefox.",
        "Internet access for some of the lessons."
      ],
      "description": "\"Welcome to our WordPress course, where we take you on an immersive journey through the intricacies of one of the world's most popular website creation platforms. This comprehensive program is designed for beginners, guiding you step-by-step from the basics to advanced techniques.\n\n\nThroughout the course, you'll delve into the core principles of WordPress, learning how to set up and configure your website with ease. We'll cover everything from installing WordPress to navigating the dashboard and understanding key terminology.\n\n\nBut we won't stop there. Our course goes beyond the basics, teaching you how to customize your website to reflect your unique style and brand identity. You'll explore the world of themes and plugins, discovering how to choose the right ones for your site and modify them to suit your needs\n\n\nAnd because mobile responsiveness is non-negotiable in today's digital landscape, we'll show you how to ensure that your website looks great and functions seamlessly on any device.\n\n\nBut perhaps most importantly, our course is designed to empower you to take control of your online presence. By the end of our program, you'll have the skills and confidence to create stunning websites that stand out from the crowd and achieve your goals.\n\n\nWhether you're a freelancer looking to expand your skillset, an entrepreneur launching a new venture, or simply someone with a passion for creativity and innovation, our WordPress course is your gateway to success in the digital age. Join us today and unlock your full potential!\"",
      "target_audience": [
        "WordPress Beginners"
      ]
    },
    {
      "title": "New to Unix / Linux Command?Learn Step by Step|Adv. Commands",
      "url": "https://www.udemy.com/course/unix-file-operations/",
      "bio": "File Creation , Comparison, Validations, Step by Step Unix- Linux Commands | Shell Scripting |",
      "objectives": [
        "Advance level unix/linux commands with practical exposer",
        "Ready to face backend interview questions",
        "Get expertise in Unix/ Linux commands with practical implemenation",
        "Multiple usage of each and every command in practice scenario",
        "Realtime exposer of file and process handling on unix/linux environment"
      ],
      "course_content": {
        "System Management Commands": [
          "Create Environment Variables",
          "Change File Permission",
          "User Commands",
          "What is Sudo"
        ],
        "Memory Management": [
          "Capture disk allocation",
          "Find memory allocation to files and folder",
          "Find user and free memory"
        ],
        "Process Management": [
          "Display Running Process",
          "Process : Filter Process",
          "View Process with consumed resources",
          "View Process in Interactive manner",
          "Kill Process"
        ],
        "Network Commands": [
          "Network Command",
          "Network Command -1",
          "Network Command : Download Page"
        ],
        "Record Everything you perform on Terminal": [
          "Script Command",
          "Script Command Options"
        ],
        "Compress Files and Folders": [
          "Compress Folders",
          "Compress Files"
        ]
      },
      "requirements": [
        "Basic knowledge of Unix/ Linux Environment",
        "Basic Knowledge of Working on Unix Terminal"
      ],
      "description": "UNIX is an operating system. It is a stable, multi-user, multi-tasking system for servers, desktops and laptops.\nUNIX systems also have a graphical user interface (GUI) similar to Microsoft Windows which provides an easy to use environment. However, knowledge of UNIX is required for operations which aren't covered by a graphical program, or for when there is no windows interface available, for example, in a telnet session.\nThis course gives coverage in following areas\n1. Memory Command\n2. Network Command\n3. System Management\n4. Process Management\n5. Compress Files & Folders\n6. Record Scrips\nUNIX is an operating system. It is a stable, multi-user, multi-tasking system for servers, desktops and laptops.\nUNIX systems also have a graphical user interface (GUI) similar to Microsoft Windows which provides an easy to use environment. However, knowledge of UNIX is required for operations which aren't covered by a graphical program, or for when there is no windows interface available, for example, in a telnet session.\nThis course gives coverage in following areas\n1. Memory Command\n2. Network Command\n3. System Management\n4. Process Management\n5. Compress Files & Folders\n6. Record Scrips\n\n\nUNIX is an operating system. It is a stable, multi-user, multi-tasking system for servers, desktops and laptops.\nUNIX systems also have a graphical user interface (GUI) similar to Microsoft Windows which provides an easy to use environment. However, knowledge of UNIX is required for operations which aren't covered by a graphical program, or for when there is no windows interface available, for example, in a telnet session.\nThis course gives coverage in following areas\n1. Memory Command\n2. Network Command\n3. System Management\n4. Process Management\n5. Compress Files & Folders\n6. Record Scrips",
      "target_audience": [
        "Developers working on backend",
        "Software Tester doing backend testing | Automation",
        "Freshers looking opportunity in IT industry"
      ]
    },
    {
      "title": "Full Stack Development with React and Express Js API",
      "url": "https://www.udemy.com/course/node-js-api-development/",
      "bio": "Step by Step Restful API development with Node JS, Express, Sequelize ORM, UUID, MySql, React JS and Bootstrap.",
      "objectives": [
        "Working with more demanded technology in the industry",
        "REST API development from the scratch",
        "Working with MySQL database with Node JS and Express",
        "Will learn about the most popular Sequelize ORM",
        "You will learn to work with React and Bootstrap as well"
      ],
      "course_content": {
        "Backend API Development": [
          "Introduction",
          "Environment Setup",
          "Environment Setup",
          "Node JS Project Setup",
          "Database Design",
          "Creating Controller for Registration",
          "Setting up Sequelize ORM",
          "Connecting Sequelize with Express",
          "Starting with Registration API",
          "Fixing Registration Route Issue",
          "Starting with Login API",
          "Continue with Login API",
          "Fixing Database Issue",
          "Source Files"
        ],
        "React Frontend": [
          "Project Setup",
          "Route",
          "Register Form Design",
          "Register API Interaction",
          "Register API Continuation",
          "Handling CORS Error",
          "Login Form Design",
          "Login API Integration with Fetch",
          "Login API Integration with Axios",
          "Bootstrap - Login Page Design",
          "Bootstrap - Registration Page Design",
          "Final Source Code"
        ]
      },
      "requirements": [
        "Installed Node JS and a editor of your choice"
      ],
      "description": "Are you about to start with Node JS API development? then, you have landed in the right place. This course is designed for those who are starting with Restful API development using Node and Express. We expect you to have some basic knowledge of Node and JavaScript.\nWe are going to develop an application that takes care of user registration and login functionality. The code that we are going to develop is ended to end working code. The course is designed to start from absolute scratch and whatever the error we are facing while developing, those error gets explained and fixed properly. I expect you to raise queries you’re getting or the issue you're facing while setting up the development environment or any other related to the course. Whatever may the queries, don't ever hesitate to ask. I'm here to help you guys get comfortable with Node and React JS.\nAt the end of the course, you will have a good base knowledge of setting up the Node JS application from absolute scratch, you will come to know to create tables, secure the database credentials, Salt generation and also you will also come to know the standards of making the user registration functionality and login functionality. We are going to use Sequelize ORM to connect to the MySQL database.\nThat's it from my side hope you enjoy the course. Let's meet in the course.\nPrerequisites\nExpected to have basic knowledge of JavaScript\nExpected to have Node js and an editor of your choice installed on your machine.",
      "target_audience": [
        "This course is for the beginner who started with Node JS REST API development using Express",
        "Developers who wanted to have basic knowledge of Sequelize ORM, React, Bootstrap. Node and Express"
      ]
    },
    {
      "title": "Develop CHATBOT with Microsoft Azure",
      "url": "https://www.udemy.com/course/develop-chatbot-with-microsoft-azure-2019/",
      "bio": "Build web chatbot, LUIS, Facebook chatbot, QnA maker. Deploy chatbot using bot emulator. Embed chatbot in website, fb",
      "objectives": [
        "Create Facebook Messenger Chatbots",
        "Understand intents, Entities and Utterance",
        "Create FAQ into bots",
        "Learn how to crawl semi structured data like FAQ links, documentation",
        "Run Chatbot locally using Microsoft Bot Emulator",
        "Create webchat for html website",
        "Develop LUIS(Language Understanding) bot"
      ],
      "course_content": {
        "Welcome to Microsoft Azure Bot Services Learning": [
          "Overview",
          "Introduction"
        ],
        "Let's starts with by creating simple chatbot": [
          "Simple Bot: Test in Web chat"
        ],
        "WebChat bot": [
          "WebChat bot :Get Embeded Code",
          "WebChat bot : Deploy chatbot"
        ],
        "Facebook Chatbot": [
          "Facebook Chatbot : Create Facebook App for FB Business page",
          "Facebook Chatbot : Gather Credentials",
          "Facebook Chatbot : Connect bot services with Facebook App",
          "Facebook Chatbot : Deploy",
          "Facebook Chatbot : Deleting resources"
        ],
        "QnA Chatbot": [
          "QnA : Introduction",
          "QnA : Creating QnA Maker services",
          "QnA : Knowledge Base",
          "QnA : Deploy"
        ],
        "LUIS bot": [
          "LUIS : Introduction",
          "LUIS : Creating and testing LUIS app",
          "LUIS : Publish LUIS app",
          "LUIS : Adding some modification to LUIS app",
          "LUIS : Sentiment Analysis using LUIS App"
        ],
        "Last Words": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should have a Facebook business page",
        "You should have Microsoft Azure account"
      ],
      "description": "According to Gartner, 25% of customer service and support operations will integrate virtual customer assistant (VCA) or chatbot technology across engagement channels by 2024, up from less than 2% in 2017.\nNow chatbots are increasingly becoming common as the best form of online communication between brands and consumers.\nOrganizations report a reduction of up to 70% in call, chat and/or email inquiries after implementing a VCA, according to Gartner research.\nIt simply means, one who works in IT industry must know how to build and deploy Chatbots or virtual assistant into websites.\nGiant companies make a lot of profit using chatbot and they will hire those who are capable of building chatbot or VA. As it eliminates the manual intervention, hence there has been reduced observed in cost as less number of employee required as of now. It also manages customer queries 24*7, promoting better customer engagement for the product.\nIn this learning path you will learn different bot services which are being offered by Microsoft Azure. First of all you will learn the basic concepts related to bot like why we need it and how it is useful in business.\nThen you'll build and deploy simple chatbot, integrate into website and  Facebook page which will create better customer engagement and provide better 24*7 services to customers.\nThen learn how to crawl from different sources like FAQ links , documentation, product manual etc to create FAQ bot or you can called it as QnA chatbot. Then at last you will be going to deploy Luis app.",
      "target_audience": [
        "Basic knowledge of web development",
        "Minimal level of Azure Services"
      ]
    },
    {
      "title": "Learn ASP.Net Web API 2 for Absolute Beginner",
      "url": "https://www.udemy.com/course/learn-aspnet-web-api-2-for-absolute-beginner/",
      "bio": "This course will give you a low level understanding of ASP.Net web API 2 & how to implement it in RESTful manner.",
      "objectives": [
        "Create their own RESTful APIs",
        "Provide Authentication for API",
        "Create Versioning of API",
        "Test & Debug API with jQuery Ajax requests"
      ],
      "course_content": {
        "Introduction to ASP.Net Web API 2": [
          "What is Web API?",
          "Before we start",
          "Creating your First API",
          "Use POST, PUT, DELETE methods",
          "Quiz for Introduction to ASP.Net Web API 2"
        ],
        "Using SQL Server with Web API": [
          "Implement HTTP GET method",
          "Implement HTTP POST method",
          "Implement HTTP PUT method",
          "Implement DELETE method",
          "Quiz for Using SQL Server with Web API"
        ],
        "Basic Modifications": [
          "Using Parameters as Query String",
          "Content Negotiation",
          "Media Type Formatters",
          "FromUri vs FromBody",
          "Customize Method Names",
          "Quiz for Basic Modifications"
        ],
        "Routing for API": [
          "Attribute Routing",
          "RoutePrefix Attribute",
          "Route Constraints",
          "Route Name",
          "Quiz for Routing for API"
        ],
        "Advance Modifications": [
          "HttpResponseMessage vs IHttpActionResult",
          "Testing API with AJAX",
          "Cross domain access",
          "Cross domain access using CORS",
          "Enable HTTPS & SSL",
          "Quiz on Advance Modifications"
        ],
        "Basic Authentication": [
          "Create Login Method",
          "Create Attribute",
          "Using jQuery",
          "Quiz on Basic Authentication"
        ],
        "Versioning of API": [
          "Versioning API using URI",
          "Versioning API using Query String",
          "Versioning API using Custom Header",
          "Quiz on Versioning of API",
          "Conclusion"
        ]
      },
      "requirements": [
        "Familiar with ASP.Net & C#",
        "Basic knowledge of SQL server & jQuery (optional)"
      ],
      "description": "ASP.NET Web API is a framework for building HTTP services that can be accessed from any client including browsers and mobile devices. It is an ideal platform for building RESTful applications on the .NET Framework. However it can also use to create non RESTful services.\nIt works more or less the same way as ASP.NET MVC web application except that it sends data as a response instead of html view.\nASP.Net web API became very popular because of it’s a very easy to implement RESTful api with less amount of time.\nThrough this series we will learn how to handle Http Methods, Content Negotiation, Media Type Formatters, Authentication, and Versioning of API.\nAlong with this we will also see how to send request from jQuery Ajax and a postman app.\nWe will learn all above things through this video series. If you have any doubts then you can contact me via mail and Q & A.",
      "target_audience": [
        "This is for newbies who want to learn ASP.Net Web API 2",
        "Who want to make RESTful APIs using ASp.Net web api 2"
      ]
    },
    {
      "title": "The Ultimate Apache Tomcat Training Course: All In One",
      "url": "https://www.udemy.com/course/the-ultimate-apache-tomcat-training-course-all-in-one/",
      "bio": "This course takes you from A to Z in logical stages, covering all the essentials of Tomcat to building your own servers.",
      "objectives": [
        "Successfully install and configure Apache Tomcat.",
        "Configure realms, roles, users, and servlet sessions for optimized server functionality.",
        "Implement and manage JNDI resources, including JDBC DataSources.",
        "Deploy individual servlets and entire web applications effectively.",
        "Measure and enhance Tomcat's performance through tuning techniques.",
        "Integrate Apache Tomcat with the Apache HTTP Server.",
        "Secure Tomcat to protect against common security threats.",
        "Master the configuration of essential files such as server xml and web xml.",
        "Understand the architecture and components of Tomcat, including Server, Service, Engine, Host, Context, and Wrapper.",
        "Utilize helper components like Loader, Manager, and Valve for efficient server management.",
        "Leverage the JNDI API for resource management and naming services in Java EE environments.",
        "Provide middleware support and resolve migration issues for hosted websites.",
        "Conduct regular maintenance and troubleshooting for Tomcat servers."
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Welcome Message",
          "Course Material & Source Code"
        ],
        "Getting started": [
          "Introduction",
          "Learn About Apache Tomcat Software - 1",
          "Learn About Apache Tomcat Software - 2",
          "Learn How to Install Apache Tomcat - 1",
          "Learn How to Install Apache Tomcat - 2",
          "Learn and Understand Core Java",
          "Apache Tomcat - Learn About Request Mapping",
          "Apache Tomcat - Learn About Directory Structure",
          "Apache Tomcat - Take the Exercise"
        ],
        "Apache Tomcat - Learn How to Deploy the Web App": [
          "Introduction",
          "Learn and Understand Http Basics",
          "Understanding Web Container & Web App",
          "Understanding Web App Deployment",
          "Understanding Deployment Examples",
          "Learn and Understand Web App Deployment Basics",
          "Learn How to Use Deployment Tools",
          "Understanding Ant Script Demo",
          "Apache Tomcat - Take the Exercise",
          "Apache Tomcat Deployment Assessment"
        ],
        "Apache Tomcat - Learn and Understand Troubleshooting": [
          "Introduction",
          "Understanding Web-App Navigation Issues",
          "What We've learned",
          "Learn About Tomcat's Web Console",
          "Learn About Tomcat Troubleshooting",
          "Learn About Bad XML Files",
          "JSP Script To Java Servlet Translation",
          "Learn About JSP Translation Errors",
          "Learning Tomcat Help On Run-Time Error Detection",
          "Understanding Precompiling JSP Scripts",
          "Section Outro"
        ],
        "Learn About Web-App Types & Concurrency Issues": [
          "Introduction",
          "Learning the Web Site Example",
          "Learning the Web Service Example",
          "Learning the Web Socket Example",
          "Learn About Concurrency Issues In Web Apps",
          "Learn and Understand Thread-Unsafe Servlet",
          "Concurrency & Thread-Safety Summary",
          "Section Outro"
        ],
        "Apache Tomcat - Understanding Security": [
          "Introduction",
          "Learn About A Security Example",
          "Learning the Security Concepts",
          "Learn About Peer Authentication & The Https Handshake",
          "Learn About Tomcat Configuration For Https",
          "Let's Take the Exercise",
          "Learn About Https Exercise Assessment",
          "Apache Tomcat - Request Redirection & Https",
          "Learn About Users-Roles Security",
          "Learn About Tomcat Security Realms",
          "A Web-App Demonstration of Container-Managed Security",
          "Section Outro"
        ],
        "Learning Advanced Apache Tomcat Topics": [
          "Introduction",
          "Apache Tomcat - Learn and Understand Virtual Hosts",
          "Apache Tomcat - Remote Monitoring & Management",
          "Understanding Apache Tomcat & CGI"
        ],
        "Course Summary": [
          "Summary",
          "Thank You"
        ]
      },
      "requirements": [
        "A PC or Mac",
        "Internet Access"
      ],
      "description": "Ignite Your Web Application Expertise: The Definitive Apache Tomcat Mastery Course\nConstantly Evolving, Consistently Cutting-Edge: This isn't just another Tomcat course. We've meticulously re-engineered this program from the ground up to deliver an unparalleled learning journey. Committed to your success, we provide continuous updates, ensuring you're always armed with the most current knowledge, advanced techniques, and industry best practices in the dynamic world of Apache Tomcat.\nStep into the elite tier of web application deployment and management with our definitive guide to Apache Tomcat. As the cornerstone of the open-source Java ecosystem and a powerhouse behind many of the world's most trafficked web applications, mastering Tomcat is no longer optional—it's essential. This comprehensive course empowers you to harness the full capabilities of this leading Java-based web application container, transforming you from a novice into a confident Tomcat professional.\nWhether you're launching your journey into web server administration or aiming to sharpen your existing skills, this immersive, hands-on experience is meticulously designed for mastery. We'll navigate you through every critical aspect—from flawless installation and intricate configuration to sophisticated performance tuning and ironclad security protocols. Prepare to gain the practical, real-world expertise needed to deploy, manage, and optimize Tomcat servers with precision and confidence.\nTransform Your Skills: What You'll Master\nFlawless Tomcat Installation & Setup: Hit the ground running with expert, step-by-step guidance on installing Apache Tomcat. Configure your environment for optimal performance and stability from day one.\nDeep-Dive Configuration & Control: Command Tomcat's core components. Master realms, roles, users, and servlet sessions to tailor server functionality and unlock peak performance, adapting settings with agility to meet any project demand.\nStrategic JNDI & JDBC Resource Management: Unravel the complexities of the Java Naming and Directory Interface (JNDI). Skillfully set up and configure JDBC DataSources, forging robust database connections that enhance your application's efficiency and scalability.\nSeamless & Agile Web Application Deployment: Implement industry-leading practices for deploying individual servlets and enterprise-scale web applications. Conquer the deployment lifecycle, ensuring smooth rollouts and effortless updates.\nPeak Performance Tuning & Optimization: Acquire critical techniques to measure, diagnose, and supercharge Tomcat's performance. Implement proven strategies to build lightning-fast, responsive applications capable of handling high-volume traffic with ease.\nSynergistic Tomcat & Apache Web Server Integration: Architect for resilience and scale by integrating Tomcat with Apache HTTP Server. Understand the nuances of this powerful combination for superior load balancing and enhanced performance.\nFortified Security & Threat Mitigation: Identify common vulnerabilities and shield your Tomcat server against emerging threats. Implement robust security strategies to protect your applications, data, and reputation.\nAuthoritative Configuration File Command: Gain an unparalleled understanding of critical Tomcat configuration files like server.xml and web.xml. Learn to fine-tune these blueprints for maximum performance, security, and streamlined management.\nBy the conclusion of this transformative course, you will possess a profound understanding of Apache Tomcat’s intricate architecture—including the Server, Service, Engine, Host, Context, and Wrapper. You’ll also gain practical, hands-on experience with vital helper components like the Loader, Manager, and Valve, and see firsthand how Tomcat masterfully utilizes the JNDI API for sophisticated resource management and naming services.\nWhy This Course Is Your Undisputed Path to Tomcat Expertise\nThis program transcends mere instruction; it’s an anointing in Tomcat mastery. By immersing yourself in the subtleties of this formidable platform, you will acquire practical, immediately applicable skills. Whether you're a Java developer aspiring to build more robust applications, a system administrator aiming for operational excellence, or an IT professional committed to leading-edge solutions, this course will significantly elevate your command of web technologies, middleware, and application deployment.\nUnlock Career-Defining Advantages:\nHolistic Mastery: Develop a comprehensive, 360-degree understanding of Apache Tomcat, from foundational setup to advanced optimization and security.\nBattle-Tested, Real-World Skills: Acquire hands-on techniques directly transferable to your projects and server management responsibilities.\nAccelerated Career Trajectory: Expertise in Apache Tomcat places you in high demand. Become an indispensable asset as a skilled web server administrator or a senior Java developer.\nPragmatic, Actionable Learning: Our step-by-step, practical methodology ensures you can confidently apply your newfound knowledge to real-world challenges immediately.\nYour Journey to Apache Tomcat Expert Begins Now.\nThis is your opportunity to gain the definitive skills to deploy, manage, and optimize web applications that are not just functional, but exceptionally fast, secure, and resilient. Elevate your career, amplify your impact, and become the Tomcat authority your organization needs.\nEnroll today and architect the future of web application performance!",
      "target_audience": [
        "Java programmers who need a really good web server to publish their web apps",
        "System admins who need to support the publishing of Java web apps"
      ]
    },
    {
      "title": "Learn Azure Serverless Functions in a Weekend",
      "url": "https://www.udemy.com/course/microsoft-azure-serverless/",
      "bio": "Python based mini projects Included | Serverless Computing for Event Driven Applications | In-Demand Azure Cloud Skill",
      "objectives": [
        "Learn Azure Serverless Functions from scratch in a step wise manner",
        "Introduction to Serverless Computing & Event driven application",
        "Learn an important and mandatory skill of Microsoft Azure's Serverless Computing",
        "Azure Serverless Functions Interaction with Database Interaction",
        "Azure Service Bus and Queue Bindings in Azure Serverlesss Functions",
        "Sending Emails with Azure Functions",
        "Azure Function Monitoring",
        "Function Integrations with Azure Service Bus",
        "Developing a Transaction Management System with Azure Functions"
      ],
      "course_content": {
        "Introduction": [
          "Course Structure",
          "Introduction to Serverless Computing",
          "Event Driven Architecture",
          "What is Azure Function",
          "Your Voice Matters"
        ],
        "Course Supplementary Material": [
          "Download Course Book",
          "Source Code"
        ],
        "Creating Azure Function in Azure Portal": [
          "Deploying Function App in Azure Portal",
          "Creating First function in Azure Portal"
        ],
        "Azure Function Local Development Environment": [
          "Configuring the Local Development Environment",
          "Creating Function App & Understanding the File Structure",
          "Developing Azure Function in Local Function App"
        ],
        "Develop Azure Function with VS Code": [
          "Develop Azure Function with VS Code"
        ],
        "Developing Azure Function Applications with Azure SQL Database": [
          "Environment Setup - Creating a serverless Azure SQL Database",
          "Developing Azure Function API to Get Online Course Details - Part 1",
          "Developing Azure Function API to Get Online Course Details - Part 2",
          "Azure Function to Collect Feedback & Store in Database",
          "Azure Function to Perform Schedule Database Cleanup"
        ],
        "Azure Service Bus": [
          "Introduction to Azure Service Bus",
          "Deploy Azure Service Bus"
        ],
        "Azure Function Integrations": [
          "Azure Function to take input from http and write blobs",
          "Azure Function to process blob storage",
          "Azure Function to add message into storage queue",
          "Azure Function to add message to service bus topic"
        ],
        "Azure Function Integrations - Enhancing the Function Code": [
          "Importing/Shared code for Azure functions",
          "Binding Expression and Function Monitoring"
        ],
        "Developing a Transaction Processing System": [
          "Transaction Management System - Requirement & Architecture",
          "HTTP Function to Queue Message",
          "Azure Service Bus Trigger Function to add records to Database",
          "Send Email with Azure Function",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "PC/Laptop installed with Windows OS",
        "Some basic understanding of command line (Win CMD/Unix Shell) will help quickly picking up",
        "Visual Studio Code in installed in laptop",
        "You should be able to use PC/laptop comfortably."
      ],
      "description": "This course is designed to teach you Azure Serverless Computing concepts with Azure Functions. The important concepts are intelligently crafted in such a way that you can complete this course within a weekend from start to end.\n\n\nImportant Concepts\nLearn Azure Serverless Functions from scratch in a step-wise manner\nBasic Concepts of Serverless Computing, Event-driven application, Azure Functions & Azure Service Bus\nLearn an important and mandatory skill of Microsoft Azure's Serverless Computing\nAzure Serverless Functions Interaction with Database Interaction\nAzure Service Bus and Queue Bindings in Azure Serverless Functions\nSending Emails with Azure Functions\nVersion Control of Azure Functions with GitHub Actions Workflow\nAzure Function Monitoring\nDeveloping Transaction Management System\nAzure Function Integrations\n\n\n\n\nServerless functions\nExecute code—written in the language of your choice—with Azure Functions, an event-driven compute experience. Scale on-demand and pay only for the time your code is executed. Available as a managed service in Azure and Azure Stack, the open-source Functions runtime also works on multiple destinations, including Kubernetes, Azure IoT Edge, on-premises, and even in other clouds.\n\n\n\n\nPrecisely, The Azure Functions is an in-demand skill and this course is the one-stop solution to gain this absolutely important skill for getting a nice project at your work or increase the chances of a getter you a better paying job.",
      "target_audience": [
        "Cloud Consultants who work on platform automation requirements",
        "Those want to experience the power of Azure Serverless Computing",
        "Azure IAAS & PAAS Administrators",
        "Azure Developers",
        "Cloud Computing Enthusiast",
        "Application Developers"
      ]
    },
    {
      "title": "Go Full Stack JWT Authorization With Spring Boot and Angular",
      "url": "https://www.udemy.com/course/go-full-stack-jwt-authorization-with-spring-boot-and-angular/",
      "bio": "JWT Authorization and Authentication, Java, Json Web Token, Access Token vs refresh Token, MySQL, Hibernate, Maven",
      "objectives": [
        "Full Stack Development with Spring Boot and Angular",
        "Spring Boot Model View Controller Structure",
        "Angular Model View Controller Structure",
        "Java Full Stack Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Architecture of All System",
          "What do We Try to Do in This Course?"
        ],
        "Setting Up Development Environment": [
          "Download and Install Java 11+",
          "Download and Install Intellij",
          "Download and Install Lombok on Intellij - Pre Intellij 2021",
          "Download and Install MySQL",
          "Download and Install Postman"
        ],
        "Overview for Basic Frameworks and Tools": [
          "Spring Boot Overview - Annotations, Beans, Configuration",
          "Rest API Overview - Http Methods",
          "SQL Overview - Basic CRUD Operations",
          "Lombok Overview - Getter, Setter, Constructors"
        ],
        "Restful Web Services - Overview": [
          "@RequestParam Annotation and How does it work?",
          "@PathVariable Annotation and How does it work?",
          "@RequestBody Annotation and How does it work?"
        ],
        "Backend": [
          "Source Code",
          "Overview - Architecture of Server Side",
          "Create Project with Spring Initializer",
          "Create Database-User on MySQL with MySQL-Workbench",
          "Configure Database Properties on Application Properties",
          "Implement the User Entity Class",
          "Do you want to learn more about ID Generated Strategies? - Optional",
          "Implement the User Repository Class with JPA CRUD Repository",
          "Implement the User Service Class - Business Layer"
        ],
        "Overview for Spring Security - Optional": [
          "What is Authentication?",
          "What is Authorization?",
          "How does Spring Security handle Authentication and Authorization?"
        ],
        "Implement Security - Spring Security": [
          "Load User by Username - User Details Service",
          "Configure Security - Authentication Manager and HttpSecurity",
          "Circular Reference Error - Spring Boot 2.6+"
        ],
        "JWT Implementation": [
          "JWT Overview and Install JWT Libraries",
          "JWT Helper Methods - Token Generation, Validation",
          "Implement JWT Authorization Filter"
        ],
        "Refresh Token": [
          "What is Refresh Token - Refresh Token vs Access Token",
          "Entity Class for JWT Refresh Token",
          "Refresh Token Repository - JPA Repository",
          "Refresh Token Service - Helper Methods for Refresh Token"
        ],
        "Implement User and Admin Operations": [
          "Authenticate User with Authentication Manager - Service",
          "Create Endpoints for User Sign In, Sign Up and RefreshToken - Controller",
          "Implement User Controller",
          "Implement Admin Controller"
        ]
      },
      "requirements": [
        "Basic Java knowledge"
      ],
      "description": "In this course, we will create a project like an user-management-system. When I say user-management-system, we can think of it like that we will have login, register pages and users can sign-in and sign-up from those pages then we can list all users and we can see the details of users.\n\n\nAnd we will implement this project using Spring Boot, Angular, and MySQL.\n\n\nIn our project, we will implement CRUD operations. These CRUD operations will be for users. We will use users for user sign-in, sign-up and authorization operations.\n\n\nThese CRUD operations will be requested from Angular. So on the backend, we will create an infrastructure for these CRUD operations and on the frontend, we will serve them with the user interface.\n\n\nOur project goes on with User operations.\nOur main operations will be user login, register, user-list etc.\nAlso, we will go on with the role based application. So we will use different roles like “Admin”, “User”. User role will have typical operations like login, register.\nBut admin role will have some specific operations like to list all users. Then we will provide different authorizations to these users according to the role.\nAnd this all things will be provided with a secure way in both Angular and Spring Boot.\n\n\n\n\nWe will have two main components to implement our project.\nThese are server side and client side.\n\n\nIn Server Side:\n\n\nOf course here, our main library will be Spring-boot. We will implement the whole infrastructure on the backend with the Spring boot. It will provide easy and fast configuration to us.\n\n\nWe will implement the Model view controller architecture on our project.\n\n\nSpring-security will be one of the main topics in our application. Also, we will use JWT to provide security. Also in the JWT part, we will see the differences between access-tokjen and refresh-token.\n\n\nIn Spring Boot, Data will be presented to the client as an API call so Spring Rest Controller will be used to handle it.\n\n\n\n\nWe will use MySQL as Database. Because most of us are familiar with it.\n\n\nWe will also use Object Relational Mapping with Java Persistence API and Hibernate.\n\n\nYou know, We can map our database tables to objects with hibernate.\n\n\nWe will use JPA Repository and Crud Repository in Spring Boot.\nSo these repository templates will handle common database operations like save, update, find, delete.\n\n\nWith Spring Boot, we will also use the Lombok library to clear code.\nYou know that we don't want to implement getter, setter, equals and hashcode. So we can escape it using Lombok @Data or @Value annotation.\n\n\nWe will use Maven To handle all dependencies on the server side. Actually, here we can also use Gradle. Gradle provides better performance than maven but Maven is the most common one. So we'll go on with maven.\n\n\nThat's all about Server side.\n\n\n\n\nLet's talk about Client Side.\n\n\nWe will create an angular application on the client side and it will provide a cool user-interface. So we will create some pages like admin dashboard, login page and register-page. Then we will assign the server apis to these pages and we will consume and produce the data from the user-interface easily and user friendly.\n\n\nOn angular, we will also implement the model view controller architecture. We will use the cool features of typescript etc.\n\n\nLast but not least, we will implement security and authorization on angular also. We will work with different roles and according to these roles, we will implement unauthorized and not-found pages on the user interface also.\n\n\nWe will see the details of them one by one.",
      "target_audience": [
        "All developers curious about JWT authorization"
      ]
    },
    {
      "title": "JSF - building complete CMS with Java and JavaServer Faces",
      "url": "https://www.udemy.com/course/jsf-building-complete-cms-with-java-and-javaserver-faces/",
      "bio": "Build responsive multilanguage content management system from scratch to finish with JavaServer Faces, MySQL, Primefaces",
      "objectives": [
        "Write own content management system (CMS) on Java web technologies",
        "Know how to use JavaServer Faces (JSF) in action, and how to develop system in both backend and frontend part",
        "Use Java technology for web development - JavaServer Faces, which is technology which supersedes JavaServer Pages (JSP) and is developed through the Java Community Process",
        "Develop multilanguage system",
        "Manipulate data - create, read, update, delete (CRUD) data through database such as MySQL",
        "Implement PrimeFaces components for image and file uploaders",
        "Develop user authentication functionality",
        "Adjust server like Apache Tomcat to handle server directives and static data like images and files",
        "Know how to develop web applications with JSF's templating system",
        "Write JSF components without <table>, <tr> and <td> html tags (tableless html design)",
        "Implement rich text editor (CKEditor for Java), also with tabs on textarea elements",
        "Use managed beans and bean scopes",
        "Bind Java beans to JSF components, manipulating with URL paths and params and HTML",
        "Create image thumbnails of easily redefined dimensions",
        "Use JSTL conditions in action",
        "Use JQuery and JavaScript alongside JavaServer Faces and PrimeFaces",
        "Write custom data to log files through own custom logging class",
        "Develop system based on MVC pattern",
        "Create custom JDBC database manager",
        "Update project to newer version of JDK, Apache Maven, Apache Tomcat and Eclipse IDE",
        "Write pom xml file and use Maven",
        "Mavenize Java project",
        "Use Java 11 in JSF applications"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Setting up Development Environment": [
          "Setting up Java and Eclipse IDE, getting familiar with Eclipse IDE"
        ],
        "Getting Started With JSF in Eclipse": [
          "Creating and Setting up Project",
          "Adding Necessary Libaries and Setting up Server",
          "Creating Necessary Files and Folders"
        ],
        "Creating Skeleton Code, Packages and Classes for our Project": [
          "Adding Skeleton Code to XHTML Files",
          "Creating Packages and Classes",
          "Writing Model Classes"
        ],
        "Developing Database Manager": [
          "Developing Database Manager (1/2)",
          "Developing Database Manager (2/2)"
        ],
        "Testing Database Connection and Setting up Database Environment": [
          "Testing Database Connection, Installing and Setting up MySql/PhpMyAdmin"
        ],
        "Database Creation": [
          "Creating Database, Importing Database Structure and Data"
        ],
        "Creating Various Methods for Database Manager": [
          "Writing Method Inside Config class for later use in database manager.",
          "Writing Database Manager Method for Saving Items (Insert and Update)",
          "Writing Method for Getting Data From Any Table",
          "Writing Method for Getting Listings of Items, News, etc From the Database",
          "Writing Method for Deleting Data From the Database"
        ],
        "Writing The Deployment Descriptor: web.xml": [
          "What Should be Contained Inside web.xml?",
          "Writing web.xml Directives, Defining Directives for Global Variables (1/3)",
          "Writing web.xml Directives, Defining Directives for Global Variables (1/3)",
          "Writing web.xml Directives, Defining Directives for Global Variables (2/3)",
          "Writing web.xml Directives, Defining Directives for Global Variables (3/3)",
          "Writing web.xml Directives, Defining Directives for Global Variables (3/3)"
        ],
        "Creating Login Authentication Functionality": [
          "JSF bean scopes",
          "Writing LoginController Class (1/2)",
          "Writing LoginController Class (1/2)",
          "Writing LoginController Class (2/2)",
          "Writing LoginController Class (2/2)",
          "Coding in login.xhtml. Definition And Usage of Neccessary Namespaces",
          "Coding in login.xhtml. Definition And Usage of Neccessary Namespaces",
          "Coding in login_form.xhtml. Binding Attributes With Bean",
          "Coding in login_form.xhtml. Binding Attributes With Bean",
          "Coding in head_tag.xhtml. Responsive Design Definitions, Usage of JSTL",
          "Coding in head_tag.xhtml. Responsive Design Definitions, Usage of JSTL"
        ]
      },
      "requirements": [
        "Students will need to know Java programming for beginners (if statements, while and for loops, concepts of methods and classes). Students also need Eclipse IDE for project development."
      ],
      "description": "Update - 2019-01-11 Project is Mavenized and updated to: Java 11, Apache Maven 3.6.0, Apache Tomcat 9.0.14, Eclipse IDE 2018-12. Beside mavenization, project is also modularized (please check section: Appendix).\nAre you interested in Java web developement? Tired of JSP?\nWhy not use JSF? Did you know that as Oracle states: \"JSP technology is considered to be a deprecated presentation technology for JavaServer Faces\"?\nWhat is JSF?\n\"JSF is a component based MVC framework which is built on top of the Servlet API and provides components via taglibs which can be used in JSP or any other Java based view technology such as Facelets. Facelets is much more suited to JSF than JSP. It namely provides great templating capabilities such as composite components, while JSP basically only offers the <jsp:include> for templating, so that you're forced to create custom components with raw Java code (which is a bit opaque and a lot of tedious work in JSF) when you want to replace a repeated group of components with a single component. Since JSF 2.0, JSP has been deprecated as view technology in favor of Facelets.\nAs being a MVC (Model-View-Controller) framework, JSF provides the FacesServlet as the sole request-response Controller. It takes all the standard and tedious HTTP request/response work from your hands, such as gathering user input, validating/converting them, putting them in model objects, invoking actions and rendering the response. This way you end up with basically a JSP or Facelets (XHTML) page for View and a JavaBean class as Model. The JSF components are used to bind the view with the model and the FacesServlet uses the JSF component tree to do all the work.\"\n\"JavaServer™ Faces technology simplifies building user interfaces for JavaServer application\"\n\"JavaServer Faces (JSF) is a Java specification for building component-based user interfaces for web applications and was formalized as a standard through the Java Community Process being part of the Java Platform, Enterprise Edition. It is also a MVC web framework that simplifies construction of user interfaces (UI) for server-based applications by using reusable UI components in a page.\"\n\"Java Server Faces (JSF) is a Java-based web application framework intended to simplify development integration of web-based user interfaces. JavaServer Faces is a standardized display technology, which was formalized in a specification through the Java Community Process.\"\n\"It simplifies development by providing a component-centric approach to developing Java Web user interfaces. JavaServer Faces also appeals to a diverse audience of Java/Web developers. \"Corporate developers\" and Web designers will find that JSF development can be as simple as dragging and dropping user interface (UI) components onto a page, while \"systems developers\" will find that the rich and robust JSF API offers them unsurpassed power and programming flexibility. JSF also ensures that applications are well designed with greater maintainability by integrating the well established Model-View-Controller (MVC) design pattern into it's architecture. Finally, since JSF is a Java standard developed through Java Community Process (JCP), development tools vendors are fully empowered to provide easy to use, visual, and productive develop environments for JavaServer Faces.\"\nIf all this sounds interesting to you, and you want to learn about Java web developement, then this is course for you!\nTechnologies used in this course:\n- Java/JavaServer Faces (JSF)/PrimeFaces/Xampp/MySQL/Apache Tomcat/JSTL/XML/HTML/Javascript/JQuery/CSS\nWhat is covered in course:\n- Making of Content management system (CMS) web application project, step by step, from scratch to finish\n- writing of Java classes, XML, HTML and JSF templates, JSTL, Javascript files; binding Java Beans to JSF components, manipulating with URL and HTML\ndata\n- Writing files from blank step by step, explanations of all code files\n- Creating database with all tables\n- Defining server paths and properties\n- Use of Eclipse IDE for writing project code, building and running application\n- solving errors and bugs\nWhat will CMS web app consist of:\n- JSF project without tables - tableless html design (div and span tags used, except of item listings pages)\n- Responsive html design\n- Multi-language CMS\n- Image and file multi-uploaders\n- Rich text editors\n- Login screen\n- Menu with categories and subcategories\n- Web pages including header, menu, forms for entering and editing data, footer\n- Web pages including header, menu, listings of entered data, footer\n- Configuration file for both local and live settings\nWhat will CMS web app be capable of:\n- View-ing and manipulating data\n- CRUD (create, read, update and delete) data (via database)\n- Login (authentication), session while logged in; logout\n- Upload of data (images and files)\n- Logging developer data\n- Using tabbed view of rich text editors for defined languages\n- Storing image thumbnails of easily redefined dimensions\n- Upload of defined extension types\nWhat special features will be covered from Java and JSF:\n- MVC controller\n- Working with managed beans\n- JSF View Scope\n- JSF Session Scope\n- Extended model to controller\n- Various JSF html tags\n- JSF working with ajax\n- JSF iteration of data\n- Defining JSTL conditions\n- Primefaces for image and file uploaders\n- Java implementation of rich text editor\n- Quality image resizer",
      "target_audience": [
        "Target students are intermediate programmers/developers who want to get more of JavaServer Faces and Java web development; but also course is made in a way easy to follow so even beginners with basic understanding of programming should finish this course if they follow the instructions."
      ]
    },
    {
      "title": "Build a Photo Blog with Ruby on Rails",
      "url": "https://www.udemy.com/course/build-a-photo-blog-with-ruby-on-rails/",
      "bio": "Learn how to build a robust Ruby on Rails photo uploading and management application in this project based course.",
      "objectives": [
        "Learn how to build a Ruby on Rails photo uploading application",
        "Learn how to work with the Amazon Web Services (AWS) API",
        "Fully scaffold a blog application",
        "Learn skills such as dynamic image sizing",
        "Build applications with a MVC (model, view, controller) structure",
        "Gain an introductory level of experience with RSpec testing",
        "Work with the Postgres database"
      ],
      "course_content": {
        "Application Creation": [
          "Creating the Rails Application",
          "Reviewing the File Setup in the Application",
          "Setting up the application's Model, Views, and Controller",
          "Working with the Rails Console",
          "Integrating Validations for Data Integrity",
          "Setting up the homepage in the route's file"
        ],
        "Integrate photo uploading processes": [
          "Gems for image uploading and connecting to the AWS API",
          "Creating the Carrierwave Upload Generator File",
          "Configuring the file upload parameters with custom resize methods",
          "Integrating the photo upload process into the model",
          "Setting up Figaro for secure environment variable management"
        ],
        "Connecting to the AWS CDN": [
          "Creating AWS Buckets on the CDN server",
          "Integrating a connector to the AWS API with Fog"
        ],
        "Integrating photo uploading and rendering": [
          "Integrating the file upload field into the view form",
          "Rendering images from the server onto the web application",
          "Integrating photo rendering on the homepage",
          "Making images clickable"
        ],
        "Introduction to Rspec Testing": [
          "RSpec Setup and Installation",
          "Creating the User Model",
          "Creating and Running User Validation Tests",
          "Integrating Length Validations and Running in Documentation Mode"
        ]
      },
      "requirements": [
        "Basic understanding of the Ruby on Rails framework",
        "Have Ruby on Rails setup on their systems"
      ],
      "description": "In this intermediate Ruby on Rails development course you will learn how to create a rails application from scratch and implement all of the code necessary for creating a photo uploading feature for a blog. This includes: creating and scaffolding the rails application with full CRUD functionality, building out the upload configuration files and dynamic sizing methods, connecting to the Amazon S3 CDN server for both uploading and downloading files for the application, building out the view files in the application to render the images, and much more. At the end I've also included an introduction to RSpec testing and how to integrate it into the application.\nThe frameworks, systems, and libraries you will learn how to use in this course are:\nRuby on Rails, version 4.2\nCarrierwave for file upload processing\nAmazon Web Services (AWS) CDN API for storing and retrieving image files\nFigaro for secure credential management\nFog for AWS API connections\nRspec for automated testing\nMiniMagick for dynamically manipulating file sizes\nActiveRecord for managing database migrations and queries\nAnd the processes associated with building a real Ruby on Rails web application!\nBy the end of this course you will be able to create a fully functional image uploading application, you can either extend it's functionality to turn it into something that fits your needs, or leverage the processes to include photo uploading and management into your own applications.\nAll of the source code for the working application is available for students to review and use.\nFinally, it's my goal that all students are able to get through the course successfully, and I therefore check the course message board daily and assist students through any parts of the course.",
      "target_audience": [
        "This Ruby on Rails course is meant for developers with a basic level of Ruby on Rails experience, this is an intermediate level course."
      ]
    },
    {
      "title": "Laravel RESTful APIs and Docker: A Practical Guide",
      "url": "https://www.udemy.com/course/laravel-rest-apis-admin-app/",
      "bio": "Laravel 8, Docker, Laravel REST API, Laravel Sanctum, Login with HttpOnly Cookies, Export CSV, Upload Images, Gates",
      "objectives": [
        "Use Docker",
        "Authentication and Authorization",
        "Laravel Sanctum",
        "Login with HttpOnly Cookies",
        "Laravel Gates",
        "Upload Images",
        "Export CSV files",
        "Open Api (Swagger) Documentation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Admin": [
          "Installation",
          "Docker",
          "Frontend",
          "Migrations",
          "Routes",
          "Register",
          "Custom Requests",
          "Laravel Sanctum",
          "Login",
          "Authenticated User",
          "HttpOnly Cookies",
          "Logout",
          "Ide Helper",
          "Api Resources",
          "Users",
          "Pagination and Seeders",
          "Profile",
          "Roles and Permissions",
          "Foreign Keys",
          "One To Many Relationships",
          "Json Resources",
          "whenLoaded",
          "Many To Many Relationships",
          "Attach, Detach and Sync Collections",
          "Products",
          "Uploading Images",
          "Orders",
          "Nested Factories",
          "Attributes",
          "Export CSV",
          "Chart",
          "Gates",
          "Testing the Frontend"
        ],
        "Open API (Swagger) - Legacy": [
          "Setting Up",
          "Authorization",
          "Parameters",
          "Requests",
          "Tags"
        ]
      },
      "requirements": [
        "Basic Knowledge of PHP"
      ],
      "description": "Learn how to create an Admin App using Laravel Rest APIs.\nIn this tutorial you will learn:\nHow to create Rest APIs with Laravel\nAuthenticate using Laravel Sanctum\nAuthorization using Laravel Gates\nLogin with HttpOnly Cookies\nLaravel JSON Resources\nInstall and use Docker\nUpload Images\nExport CSV's\nUse Open API(Swagger) Documentation\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner PHP Developers"
      ]
    },
    {
      "title": "Create a Responsive Website with Bootstrap 3",
      "url": "https://www.udemy.com/course/create-a-responsive-website-with-bootstrap-3/",
      "bio": "Get started with Bootstrap 3 to create your responsive websitequickly, using this free and open source framework.",
      "objectives": [
        "By the end of the course, you will have a fundamental knowledge of creating responsive websites using Bootstrap 3.",
        "Learn how to add navigation elements.",
        "Add Glypicon icons to your site",
        "Discover Fuel UX to create checkboxes, radio buttons and more.",
        "Add forms including login and registration forms.",
        "Work with breadcrumbs, badges and bars.",
        "Use emulators to test a website on different devices.",
        "Create a data table and using FooTable"
      ],
      "course_content": {
        "Introduction to Bootstrap": [
          "What is Bootstrap and Where to Download It",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Course Demo Files"
        ],
        "Learning Bootstrap": [
          "Hello World Example",
          "Adding Navigation Elements",
          "Course demo files"
        ],
        "Introduction to Controls": [
          "Advanced Features and Controls - Part 1",
          "Advanced Features and Controls - Part 2"
        ],
        "Emulation": [
          "Testing the Website in Different Devices"
        ],
        "Social Media": [
          "Using Media Class to Add Images and Comments"
        ],
        "Cross Device and More Nav Bar Features": [
          "Cross Device Nav Bar ; Logo and Toggle Button",
          "Dropdown & Glyphicon"
        ],
        "Button Enhancements": [
          "Adding Dropdown and Glyphicon to Buttons; Adding Search Field"
        ],
        "Forms": [
          "Adding a Login Form",
          "Adding a Registration Form - Part 1",
          "Adding a Registration Form - Part 2",
          "Breadcrumbs, Badges and Bars"
        ],
        "Plug-ins": [
          "Modal Dialog and Tool Tip",
          "Bootstrap Validator - Part 1",
          "Bootstrap Validator - Part 2"
        ],
        "Data Tables": [
          "Creating a Data Table and Modifying It using FooTable"
        ]
      },
      "requirements": [
        "Prerequisites include a foundation of creating basic websites, an understanding of HTML/CSS familiarity, and basic web concepts."
      ],
      "description": "Learn the essentials you’ll need to get started with using Bootstrap, the most popular HTML, CSS and JS framework for developing responsive sites.\nBuilding fantastic websites that look awesome on different devices is crucial. The Bootstrap framework and its mobile-first framework allow you to kick-start your development.\nDuring this course, your instructor will get you started with the essentials of Bootstrap with some practical examples.\nLearn how to test your website on different devices to ensure they look perfect before you publish your site to the masses!\nCreate a Responsive Website with Bootstrap 3 also teaches advanced topics including adding a login and registration form, creating data tables, adding check boxes and radio buttons, and using themes for rapid implementation.\nBy the end of this course, you will feel confident that you understand the fundamentals needed to effectively use Bootstrap 3. You will also know how to overcome design challenges that commonly face web developers today.",
      "target_audience": [
        "Web masters or web designers who need to improve their development skills with a focus on learning how to build responsive websites.",
        "People who are familiar with older versions of Bootstrap and need to upgrade their knowledge on Bootstrap 3."
      ]
    },
    {
      "title": "The Complete Course of IIS Web Server",
      "url": "https://www.udemy.com/course/iis-web-server-course/",
      "bio": "Learn how to Manage and configure IIS Web Server in a Professional way. Become an expert in IIS, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master IIS Web Server, to be able to manage and configure your own Internet Information Services from scratch",
        "You will be able to create, deploy and host Websites in IIS, understanding all the logic and ending with advanced practical examples and complete projects",
        "You will become familiar with user interface, toolbars and basic commands, and you will master all the phases of the configuration process",
        "You will learn in a professional way how to create Application Pools, and you will work with the Autehntication, Authorization and SSL Certificate in the server",
        "You will master all the Perfomance Optimization otpions in IIS and the Logging and Monitoring using Perfomance Monitor and Windows Event Viewer",
        "You will learn the High Availability and Failover in IIS, disaster recovery options, conducting the Best Practices and understanding their interpretation",
        "You will master all the Security and Hardening against common vulnerabilities in IIS",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the hands-on projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {},
      "requirements": [
        "Having basic notions of Internet Information Services can help, but the course starts from scratch",
        "Download and install IIS (if you don't know how, don't worry, it's very easy, free and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become an IIS Web Server professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that students, web developers, server administrators, IT specialysts... can learn Internet Information Servies IIS from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as an Engineer and Developer, I have realized that nowadays mastering IIS Web Server to host web applications is very necessary in web server administration, system management, or other web applications. Knowing how to use it can give you many job opportunities and many economic benefits, especially in the world of the IT.\nThe big problem has always been the complexity to perfectly understand IIS web server it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 8 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Information Services. The course will teach you IIS configuration and management in a practical way, from scratch, and step by step.\nWe will start with the installation of IIS on your computer. Then, we'll cover a wide variety of topics, including:\nIntroduction to IIS and course dynamics\nInstallation and configuration of IIS\nGeneral familiarization with the user interface (GUI) and basics commands\nComplete Website and Application Management: creating websites, deploying web applications in IIS or Application Pools in detail\nAuthentication, Authorization, SSL Certificate, etc.\nPerfomance Optimization: IIS perfomance tuning and optimization techniques, caching static and dynamic content, compression and bandwidth throttling, and load balancing and scalability\nLogging and Monitoring using Perfomance Monitor and Windows Event Viewer\nHigh Availability and Failover in IIS, disaster recovery options and Best Practices\nSecurity and Hardening against common vulnerabilities\nMastery and application of absolutely ALL the functionalities of IIS Web Server\nPractical exercises, complete projects and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to carry out a wide variety of real projects quickly and make versatile and complete use of Internet Information Services IIS. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning IIS Web Server has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used IIS Web Server before",
        "Web developers, server administrators, students... who want to learn a way to host Web Applications",
        "Intermediate or advanced IIS students who want to improve their skills even more!"
      ]
    },
    {
      "title": "Make your own Netflix clone website 101",
      "url": "https://www.udemy.com/course/make-your-own-netflix-clone-website-101/",
      "bio": "share movies,Tv series with all Netflix features",
      "objectives": [
        "making a clone website like Netflix",
        "Sharing movies & tv series online",
        "making extra money every month"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Script": [
          "Get The script",
          "upload the script into the web server (Cpanel)"
        ],
        "Database": [
          "Create database & user",
          "link database into my website",
          "Publishing the website"
        ],
        "Configuration": [
          "Admin Panel overview",
          "Add genre",
          "add actors",
          "add movies",
          "add Tv series"
        ],
        "customizing the website": [
          "Changing the backgrounds and solve the server's problems",
          "customizing the website and create your own logo",
          "generate refund and privacy policy"
        ],
        "Payment system": [
          "Create paypal account",
          "Create stripe account",
          "Activating Stripe Account",
          "Link Paypal and Stripe accounts to Netflix Clone"
        ],
        "Congrats!": [
          "Congratulation!"
        ]
      },
      "requirements": [
        "Nothing required",
        "You have to follow the steps",
        "you have to be patient"
      ],
      "description": "in this course you will learn how to create a clone Netflix website. At the beginning you will understand how to buy a web hosting server with cheap prices, get the script and upload it into the Cpanel, creating database & user, give the permissions or the privilege to the user. You will understand how to configure ad customize the clone website like (add pages, change the backgrounds ... etc). And i will help you make a payments system to help yourself make extra money from the membership options. Before the end of the course you will be able to make a full Netflix clone website and start sharing movies,Tv series, actors, genre and more ...",
      "target_audience": [
        "ANYONE WHO WANTS TO MAKE A NETFLIX CLONE WEBSTITE",
        "anyone who want to understand the basics of the web hosting and how to create databases"
      ]
    },
    {
      "title": "Master HTML & CSS: Your Web Dev Foundation 2025",
      "url": "https://www.udemy.com/course/web-development-foundation/",
      "bio": "Build Responsive Websites With HTML5 and CSS3 (Flexbox, Grid, Transitions, Animation, SVG) / Along with Bootstrap / SASS",
      "objectives": [
        "Build 6 stunning real-world projects for your portfolio, learn from basics with no previous knowledge!",
        "Learn website structuring with semantic and accessible HTML5",
        "Strong foundation to CSS fundamental concepts with implementations (Selectors, Specificity, Box Model, Display, Position, Units)",
        "Support any device size with Responsive Design (Mobile, Tablets & Desktop)",
        "Play games to practice important CSS concepts (Selectors, Flexbox, CSS Grid)",
        "Use common components, utilities and layout patterns for professional website development",
        "Learn to find free design assets such as images, fonts, and icons",
        "Learn how to use each skill in the real world with project implementations",
        "Work with CSS Preprocessor: SASS (variables, nesting, mixins, extend/inheritance)",
        "Work with CSS Framework: Bootstrap 5 (layouts, forms, components & utilities)",
        "Website deployment on Web using Netlify"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction & Curriculum Walkthrough",
          "Welcome - Lets Get Started!"
        ],
        "Resources & Setup": [
          "Resources [Important]",
          "Resources [Important]",
          "How Web Works? [Optional]",
          "Environment Setup"
        ],
        "HTML Fundamentals": [
          "HTML Introduction",
          "Head Section",
          "Common HTML Tags",
          "Media Tags",
          "Linking Page",
          "Forms I",
          "Forms II",
          "Comments",
          "List",
          "Tables",
          "Inline and Block",
          "Id & Classes"
        ],
        "HTML Semantics": [
          "Semantics I",
          "Semantics II",
          "HTML Entity"
        ],
        "CSS Fundamentals 1.0": [
          "Introduction To CSS",
          "CSS Types and Order",
          "Selectors",
          "Selector Game I",
          "Selector Game II",
          "Specificity / R029",
          "Common Properties"
        ],
        "CSS Fundamentals 2.0": [
          "Box Model",
          "Box Sizing",
          "Box Model Values",
          "Unit Values"
        ],
        "CSS Fundamentals 3.0 (Display & Positions)": [
          "Display",
          "Display vs Visibility",
          "Position / R041",
          "Z Index",
          "Pseudo Elements & Pseudo Classes / R042"
        ],
        "CSS Fundamentals 4.0 (Responsive Web Design)": [
          "Responsiveness: Media Query / R043",
          "Viewport Units: Height & Width / R044"
        ],
        "Project 1 - Profile Card": [
          "Project Source Code - Github",
          "Transform / R045",
          "Position / R046",
          "Google Font",
          "Button Design",
          "Margin Auto vs Text Align Center",
          "Box Shadow",
          "Icons",
          "Color suggestion",
          "CSS Sequence: Advise"
        ],
        "Project 2 - Login Page": [
          "Project Source Code - Github",
          "Background Gradient",
          "Input fields",
          "Forgot Password",
          "Login Button",
          "Min Max Width"
        ]
      },
      "requirements": [
        "No coding/design experience necessary",
        "All computer works (Windows, macOS or Linux)",
        "We use Industry recommended free tools (No paid software needed)"
      ],
      "description": "Welcome to Web Development Foundation, one single course to start your web development journey as a beginner step-by-step. This course touches on each and every important topic through concept explanation, documentation, and implementation. The entire course is designed for beginners with one goal in mind, to build responsive websites using HTML5, CSS3, Bootstrap & SASS.\nThroughout the course, we will explore the most important topics step-by-step along with 6 projects:\n1. How Does The Web Work?\nClient and Server\nHTTP Requests (GET, POST, PUT, DELETE)\nHTTP Response (Status Code, Content-Type)\n2. HTML Fundamentals\nSyntax\nDocument Structure\nMeta Data\nLinks\nImages and Media\nForm Elements\nForms\n\n3. HTML Semantics\nSections (body, article, section, nav, aside, h1...h6, header, footer)\nGrouping Elements (main, div, p, hr, ul, ol, li, figure, pre)\nText Level (a, em, strong, span, br)\n\n4. CSS Fundamentals\nAdding CSS (Inline, Internal and External)\nSyntax: selectors, declaration block, properties, declared value\nCSS Selectors (universal, type, class, id, attribute)\nCascade and Specificity\nBox Model\nSizing (padding, margin, width, height and border)\nUnits\nPosition (absolute, relative, fixed, static and sticky)\nDisplay Property\nFonts and other formatting properties\nAdvanced Selectors\n\n5. Responsive Design\nText Effects\nImages and video resizing\nDifferent viewports\nMedia queries\n\n6. Layouts\nFlexbox\nCSS Grids\n\n7. Advanced\nVariables\nTransition & Animations\nTransforms\nShadows and Gradients\nDesign Patterns\nWebsite Planning\n\n8. SVG\n\n9. CSS Libraries\n\n10. Bootstrap (CSS Framework)\nLayouts\nContent\nForms\nComponents\nUtilities\n\n11. SASS (CSS Preprocessor)\nVariables\nNesting\nPartials & Modules\nMixins\nExtend/Inheritance\nOperators\n\n12. Website Deployment\n\n\nWhy this course?\nComplete course is focused on the concept learning approach, you learn every concept through a logical and visual learning approach.\nLearn all important concepts in the simplest possible way with examples and real-life projects.\nYou don't need any knowledge, we will cover everything step-by-step from scratch.\n\nAfter completing this course you will be ready to work as an Intern, Fresher, or Freelancer and you will also be able to implement everything yourself! Most importantly you will be ready to divide deep with future practice and hard level questions of website building.\nEnroll now, I will ensure you learn best about HTML, CSS, Bootstrap and SASS.",
      "target_audience": [
        "Absolute beginners who want to learn how to build a beautiful and responsive website",
        "Designers who want to expand their skill set into HTML5, CSS3, Bootstrap and SASS"
      ]
    },
    {
      "title": "Complete JWT Authentication Course with Node, Mongo, Express",
      "url": "https://www.udemy.com/course/complete-jwt-authentication-course-with-node-mongo-express/",
      "bio": "Build a complete JWT Authentication REST API using Node.js, MongoDB & Express.js",
      "objectives": [
        "Build a complete JWT Authentication API",
        "What Model-Route-Controller is and how it works",
        "How Access Tokens & Refresh Tokens work",
        "Create Environmental Variables",
        "Validate Input on Server-Side",
        "Setting Up MongoDB Atlas & Community Server",
        "Setting Up Express API Server",
        "Login & Registration Functionality",
        "Email Confirmation & Password Reset Functionality",
        "Email Change Functionality"
      ],
      "course_content": {
        "Welcome to the course!": [
          "Course Overview",
          "Meet Your Instructor",
          "What is API and How Does It Work?",
          "What is JWT and How Does It Work?"
        ],
        "Preparing the Back End": [
          "Installing Prerequisites for Mac",
          "Installing Prerequisites for Windows",
          "Setting Up MongoDB Atlas"
        ],
        "Setting Up the Back End": [
          "Plan of Action",
          "Setting Up MongoDB Community Server",
          "Setting Up Basic Express API Server",
          "Setting Up Environmental Variables",
          "What is the MRC Pattern (Model-Route-Controller)?",
          "Implementing User Model",
          "Implementing User Controllers",
          "Implementing User Routes",
          "API Rate Limiter - Prevent API Spam",
          "Running & Testing our API!"
        ],
        "Implementing JWT Authentication & Authorization": [
          "Plan of Action",
          "Access Token Verification Middleware",
          "Registration Functionality",
          "Refresh Token Functionality",
          "What is Mailtrap & Nodemailer?",
          "Email Confirmation Functionality",
          "Login Functionality",
          "Password Reset Functionality",
          "Email Change Functionality",
          "Running & Testing our completed API!"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge"
      ],
      "description": "Learn key API and JWT concepts to get you up to speed with the benefits of setting up modern JSON Web Token authentication through a microservice. Covering:\nWhat is API and how does it work?\nWhat is JWT and how does it work?\nSetting Up MongoDB Atlas & Community Server\nSetting Up Express API Server\nModel-Route-Controller Design Pattern Implementation\nAccess Token Verification Middleware\nRefresh Token Functionality\nLogin & Registration Functionality\nEmail Confirmation & Password Reset Functionality\nEmail Change Functionality\nHere is what you will get with this course:\n1. Complete beginner to API & JWT concepts – You will learn what API and JWT is, how they work and how you can practically implement them into a fully functional microservice that can be integrated with any front-end and back-end.\n2. Useful resources – You will get useful PDF resources and code templates as you move towards progressing through the lectures. The PDF files will be in form of quick explanation guides and the code templates will include the previous functional code and code snippets.\n3. Real-world challenges – At the end of some section you will be given at least one mini challenge to extend the functionality of the API before moving onto the next section, just to push you a little further when it comes to self-teaching and learning new things.\n4. Advanced concepts & security - You will build an API that is completely secure and takes into consideration security holes and insecure practices. This will help all beginners, intermediate and advanced programmers to build a secure back-end and front-end integration.\n5. Ask me anything – I understand that you may have questions about any aspect of the course, therefore I am more than happy to answer any questions in Q&A section within a very timely manner!",
      "target_audience": [
        "Beginners who are building their first authentication API",
        "Intermediate & Advanced students who want to improve the structure and security of their authentication API"
      ]
    },
    {
      "title": "REST APIs Python Flask: Docker, AWS, Git and SQLAlchemy",
      "url": "https://www.udemy.com/course/rest-apis-python-flask-docker-aws-git-and-sqlalchemy/",
      "bio": "Master Flask, SQLAlchemy, Docker, Git, and AWS to Create Scalable APIs with Real-World Applications",
      "objectives": [
        "Build Professional-Grade APIs: Learn to develop robust and scalable APIs using Flask, covering RESTful principles and HTTP methods.",
        "Integrate Databases with SQLAlchemy: Understand how to connect and manage databases using SQLAlchemy ORM for efficient data handling.",
        "Implement Authentication & Authorization: Secure your APIs with token-based authentication and role-based access control.",
        "Deploy Flask Applications: Gain hands-on experience deploying Flask APIs using Docker and AWS for real-world scalability.",
        "Create a Portfolio-Worthy Capstone Project: Develop a fully-functional blog API to showcase your skills to potential employers or clients."
      ],
      "course_content": {
        "A Comprehensive Python Starter Kit": [
          "Getting the Most Out of This Course",
          "IDE - Code Editor for the Course",
          "Values and Types",
          "Variables",
          "Operators",
          "Asking User for Input",
          "Python Comments",
          "Variable Naming",
          "Boolean Expressions",
          "Conditional Execution",
          "Nested Conditionals",
          "Chained Conditionals",
          "Multiple IF Statements",
          "Logical Operators",
          "Try and Except",
          "Calling Builtin Functions",
          "Math Module",
          "Random Module",
          "Defining Function",
          "Indentation in Python",
          "Function with Inputs",
          "Positional and Keyword Arguments",
          "Function with Output",
          "Docstring",
          "List and Iterations",
          "For Loop",
          "Updating Variables",
          "Loop Over Custom Function",
          "Range Function with Loop",
          "While Loop",
          "Continue and Break",
          "What is a String?",
          "String Operations",
          "String Methods",
          "String Parsing",
          "Escape Sequence",
          "String Formatting",
          "Python Starter Kit Quiz"
        ],
        "Local Development Environment": [
          "Installing Python",
          "Download PyCharm",
          "Installing PyCharm on Mac",
          "Installing PyCharm on Windows",
          "Common Features of PyCharm"
        ],
        "Application Programming Interfaces (APIs)": [
          "What is API?",
          "API Endpoints. How to make API calls? What is JSON?",
          "API Responses, API Exceptions and JSON data",
          "API Parameters",
          "API Authentication - Using Keys to Authenticate",
          "Environment Variables",
          "POST API - HTTP POST Requests",
          "PUT/PATCH and DELETE APIs - HTTP Put/Patch and Delete Requests",
          "APIs"
        ],
        "Introduction to Flask and Setting Up Flask Environment": [
          "What is REST?",
          "What is Flask? Installing Flask"
        ],
        "Creating and Testing Basic Endpoints, Postman, JSON and HTTP Codes": [
          "Create Basic Endpoint and Test with Postman",
          "Return JSON in Flask API",
          "Return HTTP Codes in Flask API"
        ],
        "Working with Request Data - Parameters and Variables": [
          "Handling Flask API Parameters",
          "Handling Flask API Variables",
          "Parameters and Variables in Flask API"
        ],
        "SQLAlchemy ORM - CRUD operations": [
          "What is SQLite?",
          "SQLite Browser",
          "What is SQLAlchemy?",
          "Connecting DB using SQLAlchemy",
          "Insert Data to DB Using SQLAlchemy ORM",
          "Retrieve Data from DB using SQLAlchemy ORM",
          "Filter Data using SQLAlchemy ORM",
          "Update Data using SQLAlchemy ORM",
          "Delete Data from DB using SQLAlchemy ORM",
          "Building Relationship using SQLAlchemy ORM",
          "Join Tables using SQLAlchemy for ORM"
        ],
        "Integrating Flask API with Database using SQLAlchemy ORM": [
          "Integrating Flask API with Database",
          "Flask CLI"
        ],
        "Flask API Best Practices - GET/POST/PUT/PATCH/DELETE Methods": [
          "GET Method - Flask API",
          "Handling Response with Marshmallow- Flask-RESTful",
          "GET Method - Single Data",
          "POST Route - Flask API",
          "POST Route with JSON Body - Flask API",
          "PATCH Route - Flask API",
          "DELETE Route - Flask API",
          "NEW Version of GET/POST/PATCH/DELETE Routes",
          "Flask API Structure"
        ],
        "Authentication and Authorization": [
          "Basic Authentication",
          "JSON WebTokens",
          "Securing endpoints with Flask-JWT"
        ]
      },
      "requirements": [
        "Basic Python Skills"
      ],
      "description": "Are you ready to become a master in Flask API development? Whether you’re a beginner looking to kickstart your programming journey or a seasoned developer aiming to expand your backend expertise, this course is designed for YOU!\nIn this comprehensive Flask API Mastery course, you’ll learn how to build powerful, scalable APIs from scratch while mastering the most in-demand tools and technologies, including SQLAlchemy, Docker, Git, and AWS. With hands-on projects and real-world applications, you’ll gain the confidence to tackle any API challenge.\nWhat You’ll Learn:\nThe fundamentals of Flask and RESTful API development.\nHow to set up and manage databases using SQLAlchemy ORM.\nAuthentication and authorization techniques to secure your APIs.\nDeploying APIs with Docker and managing your code with Git.\nCloud deployment using AWS to scale your applications.\nAdvanced Flask features like middleware, error handling, and more!\nWhy This Course?\nBeginner-Friendly: Start with the basics of Python and Flask, even if you have no prior experience in web development.\nHands-On Learning: Build a portfolio-ready Capstone Blog Project, a fully functional API you can showcase to employers or clients.\nComprehensive Tools: Go beyond Flask—learn to integrate SQLAlchemy, use Docker containers, manage code with Git, and deploy apps on AWS.\nReal-World Skills: Develop APIs with industry best practices, ready for use in real-world applications.\nWho Should Enroll?\nBeginners eager to learn Python and backend development.\nWeb developers wanting to expand their skill set with API development.\nBackend developers ready to integrate advanced tools and deploy apps to the cloud.\nEntrepreneurs and freelancers who want to create API-powered applications.\nWhat’s Included in the Course?\nStep-by-step video tutorials with easy-to-follow instructions.\nPractical exercises and coding challenges to solidify your learning.\nFull capstone project: Build a blog API with all the features you’ve learned.\nGuidance on deploying your Flask API using AWS and Docker.\nBy the end of this course, you’ll have the confidence and skills to build professional-grade Flask APIs and deploy them like a pro!\nEnroll now and start your Flask API journey today!",
      "target_audience": [
        "Beginners in Programming: You have basic knowledge of Python and want to explore web development and API creation.",
        "Aspiring Backend Developers: You want to master Flask and gain hands-on experience in building real-world APIs.",
        "Web Developers: You’re looking to expand your skill set by learning how to integrate databases, secure APIs, and deploy them to the cloud.",
        "Tech Enthusiasts: You’re curious about how RESTful APIs work and want to add a valuable skill to your toolbox.",
        "Entrepreneurs & Freelancers: You aim to build your own API-powered applications or offer API development as a service."
      ]
    },
    {
      "title": "Full-Stack Web Development with Flask",
      "url": "https://www.udemy.com/course/full-stack-web-development-with-flask/",
      "bio": "Learn to create and deploy simple yet powerful websites using the Flask Framework",
      "objectives": [
        "Use the template system to build elegant templates.",
        "Create impressive web forms with the Flask-WTF extension.",
        "Work with effective NoSQL database systems such as FlaskSQLAlchemy and Flask-MongoEngine.",
        "Add support for quickly building REST APIs using Flask-RESTPlus.",
        "Locally check requests and responses during web API development using Postman.",
        "Install and configure Flask-Security to add basic security and authentication features."
      ],
      "course_content": {
        "Setting Up the Virtual Environment and Framework": [
          "The Course Overview",
          "Installing Python and Flask",
          "Configuring Flask",
          "Creating and Running a Simple Flask Application"
        ],
        "Creating a Flask Project": [
          "Creating the Enrollment Application",
          "Running and Configuring the Development Server",
          "Creating the Home Page",
          "Creating Navigation Links and Route Patterns"
        ],
        "Working with Templates": [
          "Creating the Base Template",
          "Creating Child Templates",
          "Passing Data to the View",
          "Accessing Data Via Request and Response Objects"
        ],
        "Working with Databases": [
          "Installing Database Systems",
          "Setting Up the Database",
          "Connecting to The Database",
          "Creating Documents and Data",
          "Creating the Data Models"
        ],
        "Working with Web Forms and Flask-Security": [
          "Installing and Configuring Flask-WTF and Flask-Security Extensions",
          "Creating the Login and Registration Pages",
          "Processing Form Data and Updating the Database",
          "Creating the Courses Page",
          "Creating the Enrollment Page",
          "Creating Sessions and Authentication"
        ],
        "Creating and Testing REST APIs Using Postman": [
          "Installing Postman and Flask-RESTPlus Extension",
          "Fetching Data Using GET",
          "Inserting Data Using POST",
          "Updating Data Using PUT",
          "Deleting Data Using DELETE"
        ]
      },
      "requirements": [
        "Working knowledge of Python is assumed."
      ],
      "description": "In this course, we will cover everything you need to know to build a dynamic web application using the Python and Flask frameworks for seamless full-stack web development. You'll dive into the Flask environment and get to know its directory structure, template, and routing systems. Then you'll learn to connect to databases such as Flask-SQLAlchemy and Flask-MongoEngine to help store and track data.\nWe will show you how to build styled websites for an amazing UI experience using this popular front-end tool, how to get to grips with The Flask-RESTPlus extension, and how to call the API from JavaScript and use Postman to test the API. You'll learn to integrate Flask-Security, which allows you to add common security mechanisms. The course will also teach you options for deploying your Flask application.\nFinally, you'll be able to build amazing personal or effective business websites while writing your code in Python's Flask framework and its popular front-end framework. The course will develop your experience in Flask and when you've completed it you will be able to build your own complex web applications\nAbout the Author\nChristian V. Hur is an instructor and author who holds a Master of Science in Computer Information Systems (with an emphasis on Web Application Development) from Boston University. His career in web technologies spans over 20 years and he has taught computer programming and web development courses at both the undergraduate and graduate level.\nIn industry, he has built websites and web-based applications using various web technologies throughout his career. In addition to authoring books published by MC Press, he produces online training courses for Lynda .com and Packtpub .com. In his spare time, he enjoys exploring new web technologies, learning AR/VR and game development, and contributing to Stack Overflow and Quora.",
      "target_audience": [
        "This course is aimed at Python developers who want to get into full-stack web development with Flask, a micro-framework for web development using Python."
      ]
    },
    {
      "title": "Web Developer 101-Use Web Servers to Build Sites on your PC",
      "url": "https://www.udemy.com/course/web-developer-101-use-web-servers-to-build-sites-on-your-pc/",
      "bio": "Setup your pc to start making websites on Apache & IIS Web Servers. Wordpress, Joomla Drupal, ASP.NET, NodeJS, etc..",
      "objectives": [
        "Setup web developer environments with Apache and IIS Web Servers",
        "Learn essential Web Server Configurations: Adding logins to websites, virtual hosts, proxies, etc.",
        "Host websites in a variety of ways locally while they are under development",
        "3rd party hosting options for production-ready websites"
      ],
      "course_content": {
        "Introduction": [
          "What is a web server?",
          "Which operating systems we will use",
          "Understanding URL addresses",
          "Web Server Types",
          "Why choose a 3rd party over self hosting"
        ],
        "Learning Linux (Ubuntu version) and installing 1st Apache Web Server": [
          "Installation steps and Apache Server Filepaths",
          "Web servers and Web language compatibility: Front End Languages",
          "Web servers and Web language compatibility: Server Side Languages",
          "Installing PHP",
          "Apache GUI (Installation)",
          "Apache GUI (Walk through)",
          "Linux File Permissions",
          "Editing Website Files",
          "Web Server Configuration Files and Changing the Root Directory",
          "Changing the Directory Index",
          "What is htaccess and how to enable it?",
          "Error Handling: Error 404 Page/URL Rewrite with htaccess",
          "Authentication with htaccess: Single-user login",
          "Authentication with htaccess: Multi-user login"
        ],
        "2nd Apache Web Server Install on Linux using XAMPP": [
          "XAMPP Overview",
          "Installation Steps",
          "Ports",
          "Configurations",
          "Using XAMPP",
          "Apache on Linux Wrap-Up"
        ],
        "Install Apache Web Server on Windows": [
          "Install",
          "Configurations Overview",
          "Server Configurations Pt 1: Web Directory, Directory Index",
          "Server Configurations Pt 2: Aliases, Virtual Hosts",
          "Site Specific Configurations: Error 404 pages and rewrites (.htaccess)",
          "Site Specific Configurations: URL Rewrite Extended",
          "Website Password Protection with .htaccess"
        ],
        "Microsoft IIS Web Server Installation and Configuration om Windows": [
          "Introduction",
          "Enabling IIS Server on Windows",
          "IIS Overview",
          "Basic Settings (default website directory, website names, file permissions)",
          "Host Headers (Virtual Hosts)",
          "Ports",
          "Default Document",
          "Setting up passwords for your websites",
          "lnstalling Modules",
          "URL Rewrite Module Overview",
          "URL Rewrite Module: Blank Rules",
          "URL Rewrite Module: Canonical Domain Name Rule",
          "Error Pages",
          "Installing PHP",
          "HTTP Response Headers",
          "Virtual Directories",
          "Proxy Servers (A Discussion and Setup Tips)",
          "IIS Wrap-Up"
        ],
        "Adding Website Builders to our IIS and Apache Servers": [
          "Intro to Website Builders",
          "Install Wordpress on your Apache Server included with XAMPP",
          "Managing your WordPress Logins",
          "Wordpress Pages and Themes",
          "Wordpress Plugins, XAMPP Requirements, Uploading to hosting provider",
          "Install Joomla on your Apache Server",
          "Joomla Overview",
          "Install Drupal on Apache Server",
          "Drupal Overview",
          "Installing Wordpress on IIS Web Server",
          "Installing Wordpress on IIS Web Server Pt 2 (Maria Database Server & DB Setup)",
          "Installing Wordpress on IIS Web Server Pt 3 (PHP configs for plugins/themes)",
          "Install Joomla on IIS Web Server",
          "Wrap-Up: How to modify websites made with website builders for easy hosting"
        ],
        "Scripting Environments on your web server": [
          "An Overview of coding your website",
          "Native web languages and using the Notepad++ code editor to edit native scripts",
          "A Basic HTML script",
          "An Overview ASP.NET Framework in Visual Studio",
          "Hosting ASP.NET Applications",
          "NodeJS: Setup and Hosting a Visual Studio Project Template",
          "Nodejs: Starting Server from terminal and Database Configurations",
          "NodeJS: Setting up a MongoDB Server",
          "NodeJS: Managing Databases on the MongoDB Server",
          "NodeJS: Hosting App On IIS Using a Reverse Proxy",
          "NodeJS: Installing IIS Node to host NodeJS Apps",
          "NodeJS: Hosting App on IIS Using IIS Node",
          "Wrap Up: Ideal web server setups/coding environments for a web developer"
        ],
        "Hosting Providers": [
          "How 3rd Party Host Providers Host Sites",
          "Recommended Hosting Options",
          "Understanding Web Hosting on Amazon",
          "Hosting on Github",
          "Replacing preset Github URL with Custom Domain",
          "cPanel Hosting Intro: An Interface for Apache",
          "Setting up CPanel/Uploading Local Website Files",
          "Website Configurations using htaccess files in the CPanel",
          "Website Configurations using the CPanel User Interface",
          "CPanel Apps and Wrap-Up"
        ],
        "Conclusion": [
          "Final Words",
          "Wrap-Up Test"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Hello:\n\n\nThis class will cover a variety of ways to install and setup web servers on your pc so you can start making websites that can be locally viewed and tested. The ways covered will include:\n\n\n• Installing an Apache Web Server on the Ubuntu version of the Linux operating system (many custom configurations to the server will also be covered)\n• Installing an Apache Web Server included with XAMPP on a Linux operating system (custom configurations to the server will also be covered)\n• Installing a Microsoft IIS Web Server on a Windows operating system (many custom configurations to the server will also be covered)\n• Installing an Apache Web Server included with XAMPP on Windows (refer to the Apache Server videos on Linux for custom configurations)\nAfter each server installation, I will detail how you can configure websites on each web server with things like password protection, virtual directories, url redirects, reverse proxies, and more.\n\n\nAdditionally, I will cover how to:\n• Install website builders such as Wordpress, Drupal and Joomla on both the Apache and Microsoft IIS Servers\n• Set up the ASP.NET core and NodeJS web development scripting frameworks on a Microsoft IIS Server\n• Publish your websites when they are ready to be hosted the World Wide Web using affordable Hosting options such as Bluehost, CPanel, and Github (free).\n• Use a paid web domain from GoDaddy for a website hosted on Github Pages\n• Upload your local website files to your hosting provider using FileZilla and CPanel's File Manager\n\n\nThe course will also have several downloadable resources and a lengthy quiz at the end. I look forward to seeing you in the course.\n\n\n-Brandon",
      "target_audience": [
        "Those interested in Web Development or Web Server Administration"
      ]
    },
    {
      "title": "2020 Complete Ruby on Rails 6 Bootcamp: Learn Ruby on Rails",
      "url": "https://www.udemy.com/course/2020-complete-ruby-on-rails-6-bootcamp-learn-ruby-on-rails/",
      "bio": "Learn Ruby on Rails like a Pro! Start from the basics and go all the way to creating your own applications!",
      "objectives": [
        "Learn to use Ruby and Ruby on Rails professionally, learning with the most up to date versions of Ruby (2.7.1) and Ruby on Rails (6)!",
        "Learn advanced Ruby on Rails features, like the deployment and rapid development!",
        "Understand complex topics, like Ruby blocks, built-in and custom helpers!",
        "Get an understanding of how to create web applications with HTML, CSS, testing, version control and production deployment!",
        "Create three Ruby on Rails projects, including a fully-functioning user authentication and login application!",
        "Learn to use Object Orientated programming with classes!",
        "Understand how to use version control with Git and GitHub!",
        "Full Ruby coding crash course",
        "Build a complete understanding of Ruby on Rails from the ground up!"
      ],
      "course_content": {
        "Course Overview": [
          "Course Introduction",
          "Auto-Welcome Message"
        ],
        "Setting up Ruby on Rails": [
          "Installing Ruby on Rails on Windows",
          "Installing Ruby on Rails on macOS",
          "How to setup a cloud development environment (Step-by-Step)"
        ],
        "You First Ruby on Rails Application": [
          "Setting up a local Ruby on Rails web server",
          "Creating a Hello World application",
          "Introduction to version control using Git",
          "Introduction to GitHub",
          "Deploying to Heroku"
        ],
        "Rapid Rails Development": [
          "Introduction to scaffolding",
          "Creating a users resource",
          "Introduction to controllers",
          "Creating a resource to receive feedback",
          "How to associate models"
        ],
        "Milestone Project - Orbit Application": [
          "Setting up the Orbit application",
          "Creating a HTML Controller",
          "How to configure Rails routes",
          "How to add HTML pages",
          "Creating automated tests for page titles",
          "How to create dynamic page titles",
          "Version control and red/green testing"
        ],
        "Ruby Crash Course": [
          "Built-in and custom helpers",
          "Ruby strings",
          "Objects and message passing",
          "How to create methods",
          "Application helpers",
          "Ruby arrays and ranges",
          "Ruby blocks",
          "Ruby hashes and symbols",
          "Nested hashes",
          "Updating CSS",
          "Ruby classes",
          "Class inheritance",
          "Modifying built-in classes",
          "The controller class",
          "The user class"
        ],
        "Updating Orbit application layout": [
          "Adding CSS to Orbit",
          "Adding the Bootstrap framework to Orbit",
          "Creating a header logo",
          "Creating Ruby partials",
          "The Asset Pipeline",
          "Implementing SASS",
          "Adding layout links",
          "Working with Rails routes",
          "Adding integration tests",
          "Creating the initial user signup",
          "Running our first migration"
        ],
        "The User Model": [
          "Creating the user model",
          "User objects",
          "Adding user validations",
          "Validating for presence",
          "Validating for length",
          "Validating correct email address format",
          "Validating for uniqueness- Part 1",
          "Validating for uniqueness- Part 2",
          "Adding a secure password to Orbit",
          "Secure passwords and standards",
          "Creating and authenticating a user"
        ],
        "Signing users up": [
          "Adding debug information",
          "Styling debug information",
          "Retrieving users from the database",
          "Adding a gravatar",
          "Adding a sidebar to the user profile page",
          "Creating a signup form",
          "Handling invalid signups",
          "Ruby mass assignment",
          "Adding an error message partial",
          "Testing for invalid submissions",
          "Adding a flash message",
          "Configuring Orbit for deployment to production"
        ],
        "Allowing users to log in": [
          "A basic login sessions controller",
          "Creating a login form",
          "Finding and authenticating a user",
          "Displaying a flash error message",
          "Logging in to Orbit - Part 1",
          "Creating a current user",
          "Logging in to Orbit - Part 2",
          "Testing layout changes",
          "Logging a user in at signup",
          "Logging a user out",
          "Committing and merging code"
        ]
      },
      "requirements": [
        "Access to a computer with an internet connection"
      ],
      "description": "Become a web developer with Ruby on Rails and learn one of employer's most requested skills of 2020!\nThis is one of the most comprehensive, yet straight-forward, courses for the Ruby programming language and the Ruby on Rails web development framework you can take! Whether you have never programmed before, already know basic syntax, or want to learn about the advanced features of Ruby and Ruby on Rails, this course is for you! In this class we will teach you Ruby version 2.6 and Ruby on Rails version 6.0.\nWith over 120 lectures and more than 14 hours of video this comprehensive course leaves no stone unturned! This course includes full source code for you to download and use offline to learn at your own pace. You also get instructor access so you can ask questions as you learn.\nLearn how to use Ruby on Rails for real-world web development, such as creating Rails applications, running a local server, deploying to Heroku, configuring Amazon Web Services, Creating user signups and sign-ins, working with image files, validations, and much more!\nThis class will teach you Ruby and Ruby on Rails in a practical manner, with every lesson comes a full coding HD video and corresponding code that you can download! Learn in whatever manner is best for you!\nWe will start by helping you get Ruby, Rails and other dependecies installed on your computer, regardless of your operating system, whether it's MacOS, or Windows, we've got you covered.\nWe cover a wide variety of topics, including:\nInstalling Ruby, Rails and other dependencies\nCreating Rails applications\nRunning a local server\nRuby programming language\nRails Scaffolding\nDeploying to Heroku\nAmazon Web Services\nUser Interface Design\nHTML and CSS\nBootstrap\nVersion Control with Git\nUsing GitHub\nModels, Views, Controllers (MVC)\nRails Routes\nAutomated Testing\nIntegration Tests\nTest Driven Development (TDD)\nRuby Custom Helpers\nObject Oriented Programming\nInheritance\nAsset Pipeline\nValidations\nUser signups and sign-ins\nUser authentication\nDatabases\nand much more!\nYou will get full access to over 120 lessons, plus corresponding code for you to download.\nSo what are you waiting for? Learn web development with Ruby on Rails in a way that will advance your career and increase your knowledge, all in a fun and practical way!\nWho this course is for:\nBeginners who have never programmed before\nProgrammers switching languages to Ruby and Ruby on Rails\nIntermediate Ruby programmers who want to level up their skills!\nSee you in you in the course!",
      "target_audience": [
        "Beginners who have never programmed before.",
        "Programmers switching languages to Ruby and Ruby on Rails.",
        "Intermediate Ruby and Ruby on Rails programmers who want to advance their skills!"
      ]
    },
    {
      "title": "NodeJs: Building REST APIS With HapiJs",
      "url": "https://www.udemy.com/course/nodejs-building-rest-apis-with-hapijs/",
      "bio": "The complete guide to build Rest Apis with Hapijs And Mongoose",
      "objectives": [
        "Build highly scalable REST APIS with HapiJs and Mongoose",
        "Build APIS for any kind of Applicaitons(Mobile, Web Apps)",
        "Learn the best practices to create REST API"
      ],
      "course_content": {
        "Introduction": [
          "What is HapiJs",
          "Why You Should Use HapiJs",
          "Who Is Using HapiJs",
          "Getting Setup",
          "Building Blocks Of HapiJs"
        ],
        "Building APIS": [
          "API Endpoints",
          "Http Response Status Code",
          "Creating New Server",
          "Creating routes in Hapijs",
          "Connecting To MongoDB",
          "Creating New Model",
          "Creating New Company",
          "Find Companies",
          "Update Company By Id",
          "Delete Company By Id",
          "Restructuring the App",
          "Understanding Request LifeCycle"
        ],
        "Validations": [
          "Introduction To Joi",
          "Validating Payload",
          "Validating Input Params",
          "Validating Response"
        ],
        "Plugins": [
          "Creating Custom Plugin",
          "Loading Multiple Plugins",
          "Adding Hapi-Swagger Plugin",
          "Adding Documentation For Endpoints",
          "Creating Mongoose Plugin",
          "Restructuring App Into Modules"
        ],
        "Adding Relationship Between Models": [
          "Introduction",
          "Setup Application Module",
          "Creating Jobs And Candidate Modules",
          "Adding Company And Candidates Relation",
          "Async/Await Demo",
          "Moving To Asycn/Await",
          "Populate Candidates With Companies",
          "Populate Company with Candidates",
          "Adding Relation With Company And Jobs",
          "Adding Relationship With Application",
          "Find All Applications",
          "Refactoring Plugins Code"
        ],
        "Authentication": [
          "Understanding JWT Authentication Flow",
          "Creating User Module",
          "Creating User Model",
          "Creating Signup Route",
          "Creating New User",
          "Encrypting the User Password",
          "Error Handling With Boom",
          "Debugging Setup in Webstorm",
          "Debugging Setup in Visual Studio Code",
          "Creating Login Route",
          "Implementing Login",
          "Comparing User Password",
          "Creating JSON Web Token",
          "Debugging The Login Method",
          "Applying Authentication To All Routes",
          "Adding Authorization Header",
          "Debugging The Authentication Process",
          "Adding Relation With User And Company",
          "Refactoring Configs",
          "Refactoring Tags",
          "Logging In HapiJs"
        ],
        "Learning Path to become a full-stack developer": [
          "Learning Path to Become a FullStack Developer"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript required",
        "Students must be familar with Nodejs",
        "Knowledge of ExpressJs will be beneficial for you!"
      ],
      "description": "What's this course about?\nLearn how to build rest APIs with HapiJs and Mongoose. I will teach you how to learn code by doing. You will solve real-world problem with HapiJs and Mongoose. At the end of this course, you will build APIS in HapiJs. You will be able to create APIS for any web application, e-commerce, recruitment platform, content management system, etc.\nMore details, please!\nJavascript runs everywhere. You can build modern web applications by using Javascript. Nodejs is a very efficient approach to develop your backend application. All the Highly successful companies are using Nodejs in production. Some of them are:\nPaypal\nNetflix\nLinkedIn\nWalmart\nMicrosoft\nThere are many frameworks in Nodejs some of them are:\n\nExpress\nSails\nLoopback\nWhy you should learn HapiJs\nWalmart Labs developed HapiJs. Walmart is using this framework in production level. HapiJs is built on the top of the ExpressJs framework. Express is a very minimalistic framework. You can make highly scalable web APIs in HapiJs. Walmart tested the HapiJs framework on Black Friday. They got a beneficial response. Paypal is also using HapiJs.\nOne of the best features of HapiJs provides plugins. You can extend the Hapi Application by using HapiJs. Plugins also allow you to divide your applications into modules. There are many useful plugins available to document your rest APIs in HapiJs\nWhat's the course?\nWhat is HapiJs\nWhy you should use HapiJs\nWhy HapiJs is an excellent choice for building APIS\nLearn Building Blocks of HapiJs\nLearn how to create APIS\nLearn how to connect HapiJs Application to MongoDB\nLearn how to use Hapi Application to Mongoose\nLearn the best practices to handler Errors in Hapi\nLearn the validations in HapiJs\nHow to use Plugins\nHow to extend server functionality by using external plugins\nHow to create your own custom plugin\nHow to divide or modularize application with the help of plugins\nLearn how to create relationship between models\nLearn how to add one to many relationships in Mongoose\nLearn how to implement many to many relationships in Mongoose\nUnderstanding how to apply JWT authentication in HapiJs\nLearn how to secure your routes using jwt scheme\nLearn how to do logging in Hapi Application",
      "target_audience": [
        "Students who want to learn how to build REST APIS in HapiJs",
        "Students who want to learn how to build REST APIS in NodeJs",
        "Students who want to take their web services knowledge to the next level.",
        "Students who know ExpressJs and want to learn HapiJs"
      ]
    },
    {
      "title": "JavaScript Basics for Beginners Introduction to coding",
      "url": "https://www.udemy.com/course/learn-javascript-for-beginners-introduction-to-coding-course/",
      "bio": "Learn the foundations of JavaScript coding develop the core skills you need to apply JavaScript to your web projects",
      "objectives": [
        "write JavaScript code",
        "make things happen within their web pages",
        "create interactive content",
        "create logical code in JavaScript to perform tasks"
      ],
      "course_content": {
        "JavaScript Foundations Introduction to using JavaScript": [
          "JavaScript Foundations Course Introduction",
          "JavaScript course intro",
          "JavaScript first code",
          "JavaScript adding in JavaScript code on your page",
          "JavaScript structure introduction",
          "JavaScript Literals and Identfiers",
          "Source for literals",
          "JavaScript basics of functions"
        ],
        "Learn JavaScript making it Dynamic": [
          "JavaScript Functions Explained",
          "index Source 2",
          "JavaScript Math and numbers",
          "JavaScript working with strings",
          "JavaScript working with arrays",
          "JavaScript Learning about Objects",
          "source code 3",
          "JavaScript conditions and comparisons",
          "JavaScript Loops while",
          "Source Code 4 Loops"
        ],
        "Bonus Section": [
          "JavaScript Create page elements DOM example",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "desire to learn javascript",
        "basic computer skills",
        "knowledge of using HTML and CSS"
      ],
      "description": "In this course we teach you the core fundamental skills that you need to know in order to apply JavaScript to your webpages. Understanding the core coding options allows you to develop a solid base to build even more complex JavaScript.\n\nJavaScript is an excellent gateway to learning scripting languages, its perfect for beginners. Learn how to use JavaScript Step by Step. JavaScript can be fun to work with and really help bring your web concepts to life.\nI've created hundreds of websites and have over 15 years real world web development experience. This is a course that outlines key areas that anyone starting out with JavaScript should learn. Build a solid foundation for future web development.\nJavaScript allows your web pages to interact with your visitors, creating dynamic customized interactions. React to user actions bringing your web content to the next level.\nIn this course you will learn to....\nCreate your first JavaScript code - its easy I promise.\nlearn how to add JavaScript to your web pages\nBetter understand the structure of JavaScript\nKey JavaScript components like Functions, Arrays, Objects, Loops and conditionals and how to apply them in code\nWeb development skills to the next level\nJavaScript Core functionality learn about using Math, Strings, literals identifiers and more.\nExperience what can be possible with JavaScript. Learn to create your own immersive web experiences with JavaScript. Make interactive websites.\n\nLet's start Coding JavaSCript",
      "target_audience": [
        "anyone who wants to create JavaScript code",
        "take this course to develop core skills in JavaScript",
        "Build a solid base of JavaScript Skills",
        "better understand fundamental concepts in JavaScript"
      ]
    },
    {
      "title": "JavaScript DOM Example code Interactive Dynamic JavaScript",
      "url": "https://www.udemy.com/course/dom-javascript-course/",
      "bio": "Create Dynamic and Interactive web pages with JavaScript and the DOM",
      "objectives": [
        "Write the basics of JavaScript",
        "Add JavaScript to web pages and make them interactive",
        "Select and manipulate elements"
      ],
      "course_content": {
        "Introduction Quick Start with JavaScript Document Object Model": [
          "DOM Course Introduction",
          "JavaScript DOM Dev Setup",
          "What is the DOM",
          "Source Code what is DOM",
          "DOM Manipulation",
          "Source Code DOM-Manipulation",
          "JavaScript DOM Selection",
          "Source Code JavaScript DOM Selection",
          "Element Text Manipulation",
          "Source Code Element Text Manipulation",
          "Change Classes DOM",
          "Source Code Change Class DOM",
          "Change Styles DOM",
          "Source Code Change Styles DOM",
          "Element Attribute Manipulation",
          "Source code Element Attribute Manipulation",
          "Interactive DOM Events",
          "Use DOM Select Multiple Elements",
          "Source Code Multiple Element Selection",
          "JavaScript DOM KeyPress Events",
          "Source Code eventKeyPress",
          "DOM Mouse Events",
          "Source code mouse events",
          "Create your own Elements",
          "Source Code create elements",
          "Event listeners to New elements",
          "Source Code Event listeners",
          "JavaScript DOM Create Dynamic List",
          "List Project JavaScript DOM Input add new Element.",
          "Source Code List Project Source",
          "Bonus Adding Object Value",
          "Source Adding Values to the DOM"
        ],
        "Bonus Section JavaScript Questions and Code Examples JavaScript DOM": [
          "JavaScript DOM input focusout event on input field example",
          "How to update element link with input value on focusout event JavaScript Code",
          "JavaScript White Space Cleaner Code Example",
          "Source Code JavaScript White Space Cleaner Code Example",
          "Additional Educational Resources"
        ]
      },
      "requirements": [
        "HTML and CSS",
        "JavaScript Basics",
        "Internet Access",
        "Desire to learn about JavaScript"
      ],
      "description": "Learn how to make web-pages Dynamic and Interactive using JavaScript to connect with the Document Object Model and influence and manipulate page elements.\nThe Document Object Model is a Massive object that represents your page elements and their attributes.  JavaScript can easily select objects within the DOM and use the content to change the display, add interactive events, update styling and a whole lot more.   JavaScript makes your webpage come to life.    JavaScript gives you the ability to open up that door and make amazing things happen on your website.  This course covers only the JavaScript Document Object Model and prior JavaScript knowledge is a prerequisite to this course.\nPacked with Source Code and Exercises so you can try the same code from the lessons!!!\nBonus 2 PDF ebooks also included containing information about Object in JavaScript and the DOM\nCourse covers\nSelecting elements within the DOM\nManipulating element content and text output\nAdding styling and classes using JavaScript\nEvent Listeners to add user interaction to your web content\nBuilding and creating elements with JavaScript\nBuild an interactive list project from scratch\nJavaScript is the technology that makes things happen online.  Learn how to create Dynamic and Interactive web pages applying JavaScript with the DOM.\nTaught by an instructor with over 20 years of web development experience, ready to help you learn and answer any questions you may have.\nWhat are you waiting join now to start learning JavaScript Document Object Model, you have nothing to lose.",
      "target_audience": [
        "Anyone who wants to learn more about JavaScript",
        "Web Developers",
        "Front end application Developers",
        "Anyone who wants to practice and learn how to make websites interactive"
      ]
    },
    {
      "title": "LEARNING PATH: Elixir: Web Development with Elixir",
      "url": "https://www.udemy.com/course/learning-path-elixir-web-development-with-elixir/",
      "bio": "Explore the Elixir programming concepts for building maintainable applications",
      "objectives": [
        "Build applications using the Mix tool set",
        "Grasp the core concepts of the language and its data structures",
        "Work with complex data structures and manipulate them with ease",
        "Know how to use conditions and loops to build complex logic for your application",
        "Learn to manipulate and combine complex data structures",
        "Store complex data in the table form, accessible with powerful routines",
        "Understand how to extend the base language with your own constructs and metaprogramming",
        "Use OTP and its behaviour suite to create robust applications",
        "Monitor your application using the Elixir toolset"
      ],
      "course_content": {
        "Getting Started with Elixir": [
          "The Course Overview",
          "What is Elixir?",
          "Functional Programming",
          "Literals and Operators",
          "Collection Types",
          "Pattern Matching versus Assignment",
          "Forms of Pattern Matching",
          "Functions and Modules",
          "Pattern Matching in Functions",
          "Anonymous Functions",
          "Recursion",
          "Conditionals",
          "Exception Handling",
          "Standard IO",
          "Files",
          "Creating an Application",
          "Importing Dependencies",
          "Running Tests"
        ],
        "Advanced Elixir and OTP": [
          "The Course Overview",
          "Enumerables",
          "Streams",
          "Defining Protocols",
          "Implementing Protocols",
          "Launching and Linking",
          "Messaging",
          "ETS",
          "DETS and Mnesia",
          "Quote and Unquote",
          "Macros",
          "Introduction to OTP",
          "OTP Feature Set — GenServer",
          "Application",
          "The Supervisor Behaviour",
          "Supervision Strategies",
          "Agents and Tasks",
          "Umbrella Applications",
          "Releases"
        ]
      },
      "requirements": [
        "No prior knowledge of Elixir is needed",
        "Basic knowledge of Erlang is required"
      ],
      "description": "Elixir is a dynamic, friendly, easy-to-use, functional language designed to build scalable and maintainable applications. Elixir leverages the Erlang VM, known for running low-latency, distributed, and fault-tolerant systems, while also being successfully used in web development and the embedded software domain. So, if you're a developer who wish to learn Elixir for building scalable and efficient web applications, then go for this Learning Path.\nPackt’s Video Learning Path is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\n●  Learn the functional programming style with Elixir\n●  Build and monitor applications with the robust Elixir toolset\n●  Learn how to use macros and metaprogramming to write dynamic code\nLet’s take a quick look at your learning journey. This Learning Path begins with explaining the origin of Elixir programming language. You will then dive into the functional programming paradigm and know why this language is so special. You will also learn the core programming concepts of Elixir such as the language syntax, defining modules, manipulating the characteristics of common data structures, and more.\nNext, you will learn about Elixir installation along with successfully running its interactive shell called IEx and its build tool, Mix, which is used to scaffold, build, and test projects. You will get to know Elixir data types and collections to perform complex computations along with familiarizing yourself with the concept of pattern matching used to extract data from complex structures.\nMoving ahead, this Learning Path teaches you the I/O concepts which will allow you to present data in much more useful ways. Next, you will learn how to use OTP and its behaviour suite to create robust applications. Finally, you will learn to monitor your applications using the Elixir toolset.\nBy the end of this Learning Path, you will gain a complete knowledge on Elixir and be able to build your own applications with ease.\nMeet Your Expert:\nWe have the best works of the following esteemed author to ensure that your learning journey is smooth:\nJoao Goncalves is a professional software engineer with over 7 years of experience in various areas of software development, from banking and telco software to embedded systems and web development. He has recently discovered and developed his passion for functional programming and finds Elixir a very enjoyable language to use.",
      "target_audience": [
        "This Learning Path is for developers who want to learn Elixir programming for building efficient web applications."
      ]
    },
    {
      "title": "Build a Full-Stack Chrome Extension with NodeJS and MongoDB",
      "url": "https://www.udemy.com/course/build-a-full-stack-chrome-extension-with-nodejs-and-mongdb/",
      "bio": "Build a Chrome Extension that Scrapes Amazon Search Results while Learning To Keep Your Codebase Clean & Extendable",
      "objectives": [
        "How to Build a Chrome Extension",
        "How To Scrape Web Data with Your Chrome Extension",
        "How to Select Elements in the DOM via Your ContentJS Script",
        "How To Handle AJAX Requests from Your Background to Your Server",
        "The Chrome Extension Messaging API - How To Pass Data Between Different Elements of Your Chrome Extension (Popup->Content->Background->Server...)",
        "How to Setup The NodeJS Server, Routes, and Backend API For Your Extension",
        "How to Manage Amazon Product Data with MongoDB",
        "How To Accept User Input From A Chrome Extension",
        "How to Persist User Login Data and Other User-Related Data Within the Background Page's Local Storage",
        "Best Practices To Keeping Your Chrome Extension Code Clean, Bug Free, and Highly Extendable",
        "Organizing your Popup, Content and Background Pages"
      ],
      "course_content": {},
      "requirements": [
        "Beginner level of JavaScript or any other coding language",
        "NodeJS Experience is a plus (but not a must)",
        "Knowledge of MongoDB or MySQL Database is a plus (but not a must)",
        "Beginner level of any server-side technology",
        "jQuery is a plus (but not a must)",
        "AngularJS is a plus (but not a must)",
        "HTML and CSS is a plus (but not a must)"
      ],
      "description": "In this course, we'll be developing a new Full-Stack Chrome Extension that Scrapes Amazon, and automatically saves Product Data within a MongoDB Database.\nOur finished product (which you'll be able to publish to the Chrome Store) will be a Chrome Extension that enables any user to Scrape their own Amazon Purchase History, the results of any Amazon Search URL, or the results of multiple Amazon Search Keywords - one after the next.\n*Code Samples Included All Along Your Path To Mastering Chrome Extension Development*\n\n\nThe Technology Stack you'll be dealing with in this course:\n- Chrome Extension\n- AngularJS (for the Chrome Extension Popup)\n- jQuery *(for interacting with the Amazon DOM)\n- NodeJS Server\n- Mongo Database\n\n\nThe Functionality For the Chrome Extension:\nSignup and Login via the Popup View\nSelect Elements From The DOM with the Content.js Page\nScrape Your Own Amazon Purchase History\nScrape Amazon Search Results of a Given Page\nScrape Amazon Search Results of Multiple Keywords (one after the next automatically)\nSave The Amazon Product Title\nSave The Amazon Product Description\nSave The Amazon Product Image\nSave The Amazon Product Reviews\nSave The Product Rating\nSave The Amount of Ratings of a Given Product\nMake The Chrome Extension Automatically Navigate Through All Pages of Search Results\n\n\nWhile developing this awesome sample project, you'll learn:\na) How To Scrape Any Data From The Web Programatically via the Power of Chrome Extensions\nb) The Manifest.json File\nc) The Popup.js File\nc) The Background.js File\nd) The Content.js File\ne) How To Debug Your Chrome Extension\n\n\nGetting the architecture of your Chrome Extension right is super crucial to keeping your code clean and structured! We'll be covering lots of considerations when building a Full-Stack Chrome Extension.\nI built this course because all of the other Chrome Extension courses on Udemy don't go quite as deep (compare the Amount of Hours this course provides relative to the competitors), and because Chrome Extensions are like the surf-suit for websurfers - users can take them with them anywhere they go on the web.\nIf you're excited about the Awesome Power of Chrome Extensions and Web Scraping, then I hope you get a lot out of this course.\nThe Architecture is meant to be re-usable no matter what type of Chrome Extension / Web Scraper you'd like to build, so feel to reach out if you need help taking the codebase in your own direction, or if you have any questions along the way.\n\n\nSincerely,\nElisha",
      "target_audience": [
        "JavaScript Developers looking to build a Chrome Extension",
        "Coders interested in scraping web data with Chrome Extensions",
        "Internet Entrepreneurs looking to build a Social Shopping App",
        "E-commerce Professionals seeking to glean insights from Amazon Product listings"
      ]
    },
    {
      "title": "Realtime Backend System Design with WebSockets",
      "url": "https://www.udemy.com/course/scalable-real-time-backends-with-websockets/",
      "bio": "Advanced WebSockets internals for Building scalable Real-Time bidirectional gaming and chatting backends",
      "objectives": [
        "System Design for Real-Time backend scaling",
        "The Internals of WebSockets",
        "How WebSockets Work",
        "WebSockets on Secure TLS",
        "Scaling WebSockets with Layer 4 Proxying",
        "Scaling WebSockets with Layer 7 Proxying",
        "WebSockets on HTTP/2 and HTTP/3",
        "Building a Real-time Group Chatting App (IO Intensive)",
        "Building a Real-time Game App (CPU Intensive)"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Who is this course for?",
          "Course Outline",
          "Course Data"
        ],
        "Foundations of Web Communications": [
          "Web Communications Section Introduction",
          "Understanding the OSI Networking Model",
          "Overview of Transmission Control Protocol (TCP)",
          "Overview of the HTTP Protocol",
          "Overview of HTTPS and TLS",
          "Web Communications Fundamentals Quiz"
        ],
        "WebSockets Internals": [
          "WebSockets Internals Section Introduction",
          "The WebSockets Protocol",
          "The WebSockets Handshake",
          "WebSockets Frame Structure",
          "WebSockets Security (WSS)",
          "WebSockets on HTTP/2 and HTTP/3",
          "The Limitations of WebSockets",
          "WebSockets Internals Quiz"
        ],
        "Scaling WebSockets Backends": [
          "Scaling WebSockets Section Introduction",
          "Forward Proxy vs Reverse Proxy",
          "WebSockets Stream Proxying (Layer 4)",
          "WebSockets Application Proxying (Layer 7 h1 & h2)",
          "Scaling Backend Quiz"
        ],
        "Real-Time Systems - Building Scalable IO Intensive Chatting Backend": [
          "Group Chat System - What Are We Building?",
          "Group Chat System Design 1",
          "Group Chat System Design 2",
          "Group Chat System Design 3",
          "Group Chat System Design 4",
          "Implementation - Chat System"
        ],
        "Real-World System - Scalable CPU Intensive Gaming Backend": [
          "Gaming System - What are We Building?",
          "Real-Time Gaming System Design 1",
          "Real-Time Gaming System Design 2",
          "Implementation - Game System"
        ],
        "Conclusion": [
          "Course Summary & Next Steps"
        ]
      },
      "requirements": [
        "Fundamentals of Backend Engineering"
      ],
      "description": "Engineering efficient and scalable backends is such an enjoyable design activity. Understanding the frontend workflows, designing the APIs, picking the right protocols and databases for the task, and determining the communication patterns—whether the workload is CPU- or I/O-intensive—are all part of the fun.\nHowever, what’s truly more challenging is designing real-time backend applications that support unfettered and ad-hoc bidirectional communication. The workloads of gaming, chatting, and even mission-critical real-time applications are unique in that they require a “push” nature to function effectively.\nI spent a few months designing this course, and I chose the WebSockets protocol as the foundation for this work. WebSockets is by far the most widely available bidirectional protocol, supported across all clients—from browsers and command-line apps to runtimes like Node and Bun, and even other languages like C and Go.\nWhile there is the newer WebTransport protocol, it isn’t yet as widely supported or battle-tested as WebSockets. Perhaps I’ll refresh this course in a few years when WebTransport matures.\nThis course is divided into three main sections:\n1. WebSockets Internals – A deep dive into the inner workings of the protocol: the handshake, keepalive mechanisms, frame headers, and how it behaves over TLS. We’ll also discuss limitations—because I believe understanding limitations helps us build better applications. Each lecture will include a coding session and a quiz at the end of the section.\n2. Scaling WebSockets – Taking your WebSocket knowledge to the maximum: how to scale this protocol over HTTP/1.1, HTTP/2, and HTTP/3. We’ll cover implementation with proxies in both stream mode (Layer 4) and application mode (Layer 7), along with their pros and cons. Each lecture will include a coding session and a quiz at the end of the section.\n3. Building Real-Time System Designs – Putting everything into practice by designing two systems: an I/O-intensive chat system and a CPU-intensive game. I’ll propose multiple designs for each and choose one to implement.\n\n\nPrerequisite: Fundamentals of Backend Engineering.\nI hope you enjoy the course.",
      "target_audience": [
        "Intermediate Backend Engineers wanting to build scalable backends"
      ]
    },
    {
      "title": "The Complete PHP Course from Core PHP to PHP7 & Codeigniter",
      "url": "https://www.udemy.com/course/the-complete-php-course-from-core-php-to-php7-and-codeigniter/",
      "bio": "Complete the guide step by step from core PHP to PHP5 and PHP7 with Bootstrap and one PHP framework, Codeigniter",
      "objectives": [
        "Build a Website from scratch with PHP",
        "Understanding all core concepts and OOP",
        "Understanding PHP7 features",
        "CRUD Operation in core PHP",
        "Creating queries using SQL",
        "Build the website using Codeigniter 4",
        "Login system in Codeigniter 4",
        "Sign up for the system in Codeigniter 4",
        "Libraries, helpers, and many things in CodeIgniter 4",
        "MVC approach",
        "Bootstrap 3/4"
      ],
      "course_content": {
        "Basic PHP": [
          "course requirements",
          "Downloading and installing XAMPP",
          "How to create the file and some information about PHP",
          "PHP script some tips about html",
          "Comments and case sensitive",
          "PHP variables",
          "Data types in PHP",
          "Concatenation in PHP",
          "Arithmetic Operator",
          "if and else in PHP",
          "Local and global variables",
          "echo and print functions in PHP",
          "For loop, While and do while loop in PHP",
          "Exit and die in php",
          "Function in php",
          "Arrays in php",
          "Global variables",
          "Server variable",
          "$_POST variable in php",
          "Time and date in php",
          "Session in PHP",
          "How to Upload the file in PHP",
          "Cookie in PHP"
        ],
        "Object Oriented Programming(OOP) OR PHP5": [
          "Class Object Properties & Constructors in PHP",
          "Visibility Static Methods & Inheritance in PHP Classes",
          "Understanding Interfaces & Abstract Classes in PHP",
          "Leveraging Traits & Namespaces in PHP",
          "Handling Exceptions with Try-Catch in PHP",
          "CRUD Operations with PDO & Exception Handling in PHP",
          "Exploring Magic Methods Namespaces & Autoloading in PHP"
        ],
        "SQL": [
          "Introduction to SQL",
          "Introduction to RDBMS",
          "Basic syntax",
          "SQL and NO-SQL databases",
          "Introduction to mysql database and tools",
          "Creating database and table",
          "Select statement in SQL",
          "elect distinct statement in SQL",
          "Where Clause in SQL",
          "SQL And, OR, not operators",
          "Order by keyword in SQL",
          "Insert statement in SQL",
          "NULL values in SQL",
          "Update statement in SQL",
          "Delete statement in SQL",
          "IN operator in SQL",
          "SQL Alias",
          "Between operator in SQL",
          "Min,Max,Sum,Count,Avg in SQL",
          "Like in SQL",
          "Inner Join in SQL",
          "Left join in SQL",
          "Group by in SQL",
          "Having clause in SQL",
          "Introduction to subquery in SQL",
          "Creating the Databases",
          "Creating the tables in SQL",
          "Alter Columns in SQL",
          "SQL constraints in SQL"
        ],
        "Database with PHP": [
          "Working with Database with Front"
        ],
        "PHP8": [
          "PHP 8 Essentials: Navigating the Latest Upgrade",
          "JIT Compiler in PHP 8: Enhancing Performance",
          "Union Types: Broadening PHP 8's Type System",
          "Named Arguments: A New Approach in PHP 8",
          "Match Expressions: Refined Decision Making in PHP 8",
          "Attributes in PHP 8: Annotating Classes and Methods",
          "Constructor Property Promotion: Streamlining Class Definitions in PHP 8",
          "The Nullsafe Operator: Simplifying Null Checks in PHP 8",
          "Stringable Interface: Enhancing String Handling in PHP 8",
          "Mixed Type Declaration: Understanding PHP 8's Type Flexibility"
        ],
        "CRUD in PHP": [
          "Crud Operation in PHP"
        ],
        "Codeigniter 4": [
          "Server Requirements to run codeigniter 4",
          "Downloading the codeigniter 4",
          "Download the codeigniter 4 using composer",
          "Application structure or the folder structure",
          "App folder structure in codeigniter 4",
          "Design patterns and MVC design pattern",
          "Running application OR local development server",
          "Controllers in codeIgniter 4",
          "CodeIgniter URL in codeigniter 4",
          "Views in codeigniter 4",
          "Introduction Helpers in codeigniter",
          "Form Helper in codeigniter",
          "Inflector helper in codeigniter 4",
          "URL helper in codeigniter 4",
          "Setting the database in codeigniter 4",
          "Connecting with database in codeigniter 4",
          "Query builder Class in codeigniter 4",
          "Query helper methods in codeigniter 4",
          "select, where, where_in, where_no_tin with and or in codeigniter 4",
          "like, or_like, not_like, having,group by in codeigniter 4",
          "insert,update, update_batch, delete in codeigniter",
          "Method chaining in codeigniter 4",
          "Database metaData in codeigniter 4",
          "In coming request class in codeigniter 4",
          "PHP alternative synatx",
          "Embedding the bootstrap 4 in CodeIgniter 4",
          "Modeling Data and ORM in codeigniter 4",
          "Creating model in codeigniter 4",
          "Query builder with model in codeigniter 4",
          "Update and delete using model in codeigniter 4",
          "Getting recoreds from model and sending to the view in codeigniter 4",
          "Removing the public and index.php from url in codeigniter 4"
        ],
        "Some Other Concetps in Codeigniter 4": [
          "Introduction to versions in Codeigniter Development OR production",
          "Introduction to libraries",
          "Creating the database and setting with our system with the model in Codeigniter",
          "Creating the pagination in Codeigniter 4",
          "What are the services in codeigniter 4",
          "Creating the form for validation class in Codeigniter 4",
          "Validation data in Codeigniter 4 using validating class",
          "Upload the image with upload library in Codeigniter 4",
          "Session library in codeigniter 4",
          "Embedding the bootstrap 4 template in Codeigniter 4",
          "Setting bootstrap 4 templates in Codeigniter 4"
        ],
        "CRUD operation in CodeIgniter 4": [
          "Introduction to crud in Codeigniter 4",
          "Downloading the project and creating the Database with a table for crud operatio",
          "Creating the model in Codeigniter 4",
          "Creating the form and inserting the record",
          "Showing all the results",
          "Updating the student record",
          "Delete the student",
          "Adding Bootstrap 4 in the Crud Application"
        ],
        "Signup and Login system in codeigniter 4": [
          "Introduction to signup system and setting our enrolment",
          "Creating the registration form in Codeigniter 4",
          "Creating a database and tables in Codeigniter 4",
          "Validate the form in Codeigniter 4",
          "How to send email in Codeigniter 4",
          "Validating user before inserting data in Codeigniter 4",
          "Flash data in Codeigniter 4 with redirect method",
          "Creating the Login form in Codeigniter 4",
          "Conclusion"
        ]
      },
      "requirements": [
        "Server XAMPPOR WampServer",
        "Basic programming language concepts",
        "Editor(IDE)",
        "PC"
      ],
      "description": "Welcome to \"The Complete PHP Course from Core PHP to PHP7 & Codeigniter\" - your ultimate pathway to mastering PHP, one of the world's most popular and powerful web development languages. This course is designed to take you on a comprehensive journey through the realms of PHP, from its core concepts to the sophisticated techniques in PHP7 and the robust framework of Codeigniter 4.\n\n\nStarting with Core PHP, this course lays a solid foundation by introducing you to the basics of PHP programming. You'll learn about variables, data types, operators, and control structures, allowing you to create simple yet effective web applications. The course then delves into more advanced topics like functions, sessions, and cookies, which are essential for enhancing your web application's functionality and user experience.\n\n\nAs you gain confidence with the basics, the course shifts focus to Object-Oriented Programming (OOP) in PHP. This section elevates your programming skills, covering crucial OOP concepts such as classes, objects, inheritance, and encapsulation. By mastering OOP, you'll be able to write more efficient, scalable, and maintainable code, a skill highly valued in complex web development projects.\n\n\nWith PHP8, you'll be introduced to PHP's latest advancements and new features. This includes a deep dive into the JIT compiler, union types, named arguments, attributes, and match expressions. These features not only enhance the performance of PHP applications but also offer more powerful and expressive ways of coding.\n\n\nThe final part of the course is dedicated to Codeigniter 4, a lightweight yet powerful PHP framework. You'll learn to set up Codeigniter, work with its MVC architecture, and utilize its libraries and helpers. The course will guide you through creating full-featured web applications using Codeigniter, covering database access, form validation, session management, and security practices.\n\n\nThroughout the course, you'll be engaged in hands-on projects and real-world scenarios, providing practical experience and insights into modern web development. You'll also have access to numerous resources, code examples, and exercises to reinforce your learning.\n\n\nBy the end of this course, you will have a thorough understanding of PHP in all its aspects, from the basics to PHP7, coupled with the skills to develop dynamic, database-driven websites using Codeigniter 4. Whether you're a beginner eager to dive into web development or a seasoned programmer looking to update your skills, this course is tailored to provide a comprehensive, engaging, and rewarding learning experience.\n\n\nEnroll in \"The Complete PHP Course from Core PHP to PHP7 & Codeigniter\" today and start your journey towards becoming a proficient PHP developer, ready to tackle the challenges of modern web development!",
      "target_audience": [
        "Anyone who wants to learn PHP from scratch",
        "Anyone who wants to learn all Version of PHP, including PHP Framework Codeigniter 4",
        "Anyone who wants to learn Bootstrap with Codeigniter 4",
        "Anyone who wants to learn CRUD in Codeigniter",
        "Anyone who wants to learn the Login and Signup system in Codeigniter 4"
      ]
    },
    {
      "title": "HTML Made Simple For Beginners: Create a One Page Website",
      "url": "https://www.udemy.com/course/html-made-simple-create-your-own-webpage-step-by-step/",
      "bio": "Learn how to write easy to understand HTML code and create a basic one page website with an image ,audio and video.",
      "objectives": [
        "In this course you will learn how create a simple one page website and gain useful skills",
        "Learn to add audio and video to a webpage",
        "Learn to add images and make them clickable",
        "Learn to create links to other websites"
      ],
      "course_content": {
        "HTML : The Building Block for Websites and Web Applications": [
          "Overview of HTML",
          "Introduction",
          "Creating A folderStructure",
          "Text Editors",
          "HTML Document Structure",
          "Indenting and HTML Document Tree (Parent-Child Relationship)",
          "HTML Comments",
          "HTML Headings Tags",
          "HTML Paragraph Tag",
          "Elements, Attribute and Links",
          "Adding Images to a web Page",
          "Non Breaking Space Entity",
          "Adding Video and Audio To A Webpage",
          "Div ; Id ; Class",
          "HTML Lists",
          "Creating Your Own One Page Website Project",
          "Conclusion",
          "HTML"
        ]
      },
      "requirements": [
        "Only the willingness to learn"
      ],
      "description": "HTML is mark-up language used with all websites and web based applications in the world. It is responsible for the structure of all website, HTML markup language is used in millions of web sites and applications.\n\n\nHTML, or HyperText Markup Language, allows web users to create and structure sections, paragraphs, and links using elements, tags, and attributes. However, it’s worth noting that HTML is not considered a programming language as it can’t create dynamic functionality.\nHTML has a lot of use cases, namely:\nWeb development. Developers use HTML code to design how a browser displays web page elements, such as text, hyperlinks, and media files.\nInternet navigation. Users can easily navigate and insert links between related pages and websites as HTML is heavily used to embed hyperlinks.\nWeb documentation. HTML makes it possible to organize and format documents, similarly to Microsoft Word.\nIt’s also worth noting that HTML is now considered an official web standard. The World Wide Web Consortium (W3C) maintains and develops HTML specifications, along with providing regular updates.\n\n\nIn this course you will learn how create a simple one page website and gain useful skills\nLearn to create a basic one page website with images, audio and video\nYou will learn how to view the html from any website\nYou will learn how to write clean, easy to read and understand\nHtml code.\nYou will learn how to create list items and much more\nLearn to code with HTML and create a basic website with images, video and audio",
      "target_audience": [
        "This course is suitable for anyone who has access to the internet"
      ]
    },
    {
      "title": "Live Online Shop (Ecommerce) by ASP .NET Core 8 MVC and SQL",
      "url": "https://www.udemy.com/course/live-online-shop-ecommerce-by-asp-net-core-mvc/",
      "bio": "Real World (E-commerce) From Scratch by ASP .NET Core MVC Project - C# Net Core - SQL Database - Entity Framework Core",
      "objectives": [
        "Start using ASP .NET Core Mvc 8 with Visual Studio 2022 step by step",
        "Real World Online Shop (Ecommerce) From Scratch by ASP .NET Core Mvc",
        "Using SQL in ASP .NET Core Mvc by Entity Framework",
        "Designing Main page",
        "Banners & Sliders",
        "Products Page and it's admin view",
        "Review for Products",
        "Register user & Login Pag",
        "Password Recovery",
        "Shopping Cart and Checkout Page",
        "PayPal Payment and Order Details",
        "New Arrivals & Best Sellings",
        "Admin Dashboard"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download project files of this course"
        ],
        "Starting the Online Shop": [
          "Structure of online shop",
          "Create new project for ASP.NET Core MVC Project",
          "Adding layout",
          "Quiz 1",
          "Quiz 2"
        ],
        "Design of Main Menu": [
          "What is Entity Framework",
          "Structure of Entity Framework Core",
          "Entity Framework Core steps",
          "Adding database to sql server",
          "Installing Nuget Packages for Entity Framework Core",
          "Scaffolding menu table",
          "Adding Area to ASP.NET Core MVC Project",
          "Adding controllers and views for menu",
          "Customizing admin layout",
          "Adding select tag to menu view",
          "Make menus dynamic for ASP .NET MVC Project",
          "Quiz 3"
        ],
        "Banners & Sliders": [
          "How to backup and restore project",
          "Adding banner to project",
          "Customizing banner views",
          "Save and load image in create view",
          "Adding image column to index view",
          "Showing image in edit view",
          "C# code to upload image in edit view",
          "C# code in delete view",
          "Adding banners to application",
          "Customize create view",
          "Loading slider c# code",
          "Loading banners c# code",
          "Quiz 4"
        ],
        "Products Admin Page": [
          "Adding product in application",
          "Customize create view of product",
          "C# code to save main image",
          "C# code to save the gallery images",
          "Customize edit view of product",
          "Deleting the gallery image",
          "Editing main image & gallery image",
          "Deleting the product records"
        ],
        "Products Page": [
          "Adding products controller",
          "Adding index view for shop",
          "Loading main image of products",
          "Adding discount tag to products",
          "Adding price to products",
          "Searching the products",
          "Adding product details",
          "Loading product images",
          "Resize product images",
          "Loading product data",
          "Loading product info tab",
          "Fixing the width of items",
          "Adding “new product” section",
          "Completing new products item"
        ],
        "Review for Products": [
          "Review section",
          "Show comments",
          "Submit comment",
          "Scaffolding comments table"
        ],
        "Register & Login Page": [
          "Creating and Scaffolding user table",
          "Creating register form",
          "C# code to save registration form",
          "Adding guard to registration form",
          "Adding login view",
          "C# code to for login view",
          "Completing login process"
        ],
        "Password Recovery": [
          "Creating password recovery view",
          "Sending recovery code to user",
          "Creating reset password view"
        ],
        "Shopping Cart": [
          "Cart structure",
          "Cart part 1",
          "Cart part 2",
          "UpdateCart action",
          "Update mini cart part 1",
          "Small cart action",
          "Finalize small cart",
          "Creating shopping cart view",
          "C# code for shopping cart action",
          "C# code for shopping cart view",
          "C# code for update QTY and grand total"
        ]
      },
      "requirements": [
        "General knowledge of C# , SQL ,Html , CSS, Bootstrap and ASP Core Mvc"
      ],
      "description": "Hi There!\nHere I am with you to share my knowledge with you.\nSo\nIf you try you will be a Ecommerce website developer!\nIf you wanna make a lot of money!\nIf you wanna find best jobs in programming!\nIf you Want to learn the ASP .NET Core Mvc\nIf you are beginners or student looking for a tutorial that teach  ASP .NET Core Mvc with real project in simplest way!\nIf you want really to be a programmer so it is best place that you can start to learn  ASP .NET Core Mvc.\nThis course includes :\nStart using  ASP .NET Core Mvc with Visual Studio 2022 step by step\nDesigning Main page\nUsing SQL in ASP .NET Core Mvc by Entity Framework  Core\nStarting the Online Shop\nDesign of Main Menu\nBanners & Sliders\nProducts Admin Page\nProducts Page\nReview for Products\nRegister & Login Page\nPassword Recovery\nShopping Cart\nCheckout Page\nOrder Details\nPayPal Payment\nNew Arrivals & Best Sellings\nAdmin Dashboard\nSettings Section\nand …\nDo not hesitate to start learning ASP .NET Core Mvc\nEvery thing will be discussed with sample project and you will have lot of tips and tricks within my course.\nSay Hi ASP .NET Core Mvc world and lets go !",
      "target_audience": [
        "Web developers that wanna learn how to design real world ecommerce website by ASP .NET Core Mvc"
      ]
    },
    {
      "title": "Next.js React Ultimate Ecommerce Development",
      "url": "https://www.udemy.com/course/react-nextjs-ecommerce/",
      "bio": "[With 175 page PDF] FullStack Course with Advance CRUD Cart Filtering Rating Likes Payments Tax Refunds Orders",
      "objectives": [
        "Build a Modern Ecommerce Application",
        "Master React and NextJs FullStack Web Development",
        "Implement User Authentication using NextAuth",
        "Integrate Payment Gateway using Stripe",
        "Tax Calculations, Shipping & Coupons",
        "Credit Card Payment (Supports Apple Pay / Google Pay)",
        "Dashboard for Users and Admin",
        "Managing Products and Orders",
        "Learn to use ChartJs Material CSS",
        "Star Rating and Comments System",
        "Advance Filtering, Pagination and more"
      ],
      "course_content": {
        "Introduction": [
          "Download PDF Booklet",
          "Download Source Code",
          "Create NextJs Project",
          "Using Bootstrap Material CSS",
          "Create Navigation"
        ],
        "NextJs API and MongoDB": [
          "NextJs API Routes",
          "Mongo Atlas Connection String",
          "ENV Variables",
          "Connect to MongoDB"
        ],
        "User Registration": [
          "Create User Model",
          "Register API Route",
          "Register Page",
          "Register Form",
          "Register API Request"
        ],
        "NextAuth Sign In": [
          "NextAuth Sign In",
          "NextAuth Configuration",
          "Session Provider",
          "Logged In User Info and Logout"
        ],
        "Pages (Loading, 404, Protected and Redirects)": [
          "Loading Page and Status",
          "404 Page Not Found",
          "Protecting Pages and Middleware",
          "Redirect Back to Intended Page"
        ],
        "Social Login and Session": [
          "Login With Google",
          "Social Login User in Database",
          "User Role in Session"
        ],
        "Protected Pages & Deployment to Vercel": [
          "Admin Layout and Page",
          "Role Based Page Protection for Admin",
          "Deploy to Vercel"
        ],
        "Ecommerce Categories CRUD API": [
          "Planning Ecommerce Project",
          "Create Category API",
          "List Categories API",
          "Updating Category",
          "Category Delete"
        ],
        "Ecommerce Categories Context": [
          "Category Context",
          "Category Create Function",
          "List Categories Function",
          "Update Category Function",
          "Category Delete Function",
          "Category Provider"
        ],
        "Ecommerce Categories CRUD by Admin": [
          "Admin Category Page",
          "Category Create Form",
          "Category Create API Request",
          "Category Create Error Message",
          "Category List Update Clear and Delete"
        ]
      },
      "requirements": [
        "Basic Web Development Knowledge",
        "Familiarity with JavaScript and React",
        "Desire to Learn"
      ],
      "description": "[Includes a 175-page PDF that accompanies video lectures]\nLearn to Build and Ultimate Ecommerce Application using latest cutting edge technologies:\nReact 18\nNextjs 13\nReact Context\nNextjs API Development\nNext Auth\nFull Login & Registration System\nSocial Login\nStripe Payment Gateway\nEmailing Users\nBootstrap Material CSS\nChart.js\nMongoDB\nDashboard for Users and Admin\nAdvance Product Searching & Filtering\nStar Rating & Commenting System\nLikes Feature\nPagination\nSale Price\nShipping\nCoupons\nCredit Card, Apple Pay, Google Pay\nReferral Links / Promotional url\nSEO\nTax calculation\nOrder Management\nDeployment\nIncludes 175 Page PDF\nPlus 100's of tips\nWelcome to \"Full-Stack Ecommerce App with Next.js, React.js, NextAuth and NextAPI\" In this comprehensive course, you'll learn how to develop a modern and fully functional ecommerce application using an array of powerful and popular technologies in the web development ecosystem.\nThroughout this course, we'll dive deep into Next.js, the leading React framework for building server-rendered applications, and React.js, the renowned JavaScript library for building user interfaces. You'll gain hands-on experience with both frameworks and leverage their powerful features to create dynamic and high-performance web applications.\nWe'll explore entire JavaScript eco-system to harness the power of building advance full stack application all the way from scratch to deploying to live servers.\nAdditionally, we'll cover Next.js API, a built-in API route feature that allows you to create serverless API endpoints effortlessly. You'll learn how to leverage this feature to handle backend logic, process data, and communicate with your ecommerce application.\nNextAuth will also be a focal point of this course. You'll discover how to integrate NextAuth into your application to provide secure and user-friendly authentication and authorization functionality. With NextAuth, you'll be able to implement features like sign-up, sign-in, password reset, and more.\nTo enhance the visual appeal and maintain a responsive design, we'll incorporate Bootstrap Material CSS, a most popular, easy to use CSS framework. You'll grasp the foundations of Bootstrap CSS and leverage its extensive collection of utility classes to create a sleek and visually stunning ecommerce application.\nBy the end of this course, you'll have the skills and knowledge to confidently build a full-stack ecommerce application using Next.js, React.js, NextAuth, NextAPI, Bootstrap Material CSS and Stripe. Join me on this exciting journey and take your web development skills to the next level!\nEnroll now and start building your own full-stack ecommerce application today, along with the core fundamentals of React and Next.js!",
      "target_audience": [
        "Web Developers",
        "React Enthusiasts",
        "Aspiring Full Stack Developers",
        "Ecommerce Enthusiasts",
        "Students and Professionals",
        "Entrepreneurs and Business Owners"
      ]
    },
    {
      "title": "Full Stack Data Science Developer Course from scratch",
      "url": "https://www.udemy.com/course/complete-css-python-and-microsoft-sql-course-from-scratch/",
      "bio": "Expertise in Development with CSS, Python Programming and Microsoft SQL Database for Data Science",
      "objectives": [
        "Learn to write python coding for Data Science applications",
        "Get a job as a junior web developer",
        "Create your own stunning, layouts for awesome websites",
        "Preparing Python coding for Data Science projects and Libraries",
        "Master client-end design using CSS, back-end development Python coding with Microsoft SQL",
        "Apply CSS, Python for data science and Microsoft SQL database queries on real-world tasks",
        "Create fully function web apps using Python, CSS and Microsoft SQL",
        "Write master code on machine learning and analytical programs",
        "learn what is Generative AI for future learning",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask great questions",
          "Introduction CSS",
          "Choosing Code Editor",
          "Installing Code Editor (Sublime Text)",
          "CSS Syntax",
          "Creating a first page with CSS Style",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "CSS Basic": [
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "CSS Classes",
          "CSS IDs",
          "Colors",
          "Backgrounds",
          "Floating",
          "PosiPositioning tioning",
          "Margins",
          "Padding",
          "Borders",
          "CSS Color style exercise"
        ],
        "CSS Intermediate": [
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "Font Family",
          "Font Styles",
          "Applying Google Fonts",
          "Box Model",
          "Icons",
          "Tables",
          "Navigation-Menu",
          "Dropdowns"
        ],
        "CSS Advanced": [
          "Advanced Selectors",
          "Forms",
          "Website Layout",
          "Rounded Corners",
          "Color Keywords",
          "Animations",
          "Pseudo Classes",
          "Gradients",
          "Shadows",
          "Calculations",
          "Creating Responsive Page"
        ],
        "CSS Expert": [
          "Button Styles",
          "Pagination",
          "Multiple Columns",
          "Image Reflection",
          "UI - UX Design",
          "Social Media Icons",
          "External CSS style adding"
        ],
        "Python Introduction": [
          "Introduction to Python",
          "Python vs. Other Languages",
          "Why Its Popular",
          "Command Line Basics",
          "Python Installation (Step By Step)",
          "PyCharm IDE Installation",
          "Getting Start PyCharm IDE",
          "First Python Hello World Program"
        ],
        "Python Basic": [
          "Variables",
          "Data Types",
          "Type Casting",
          "User Inputs",
          "Comments"
        ],
        "Python Strings": [
          "Strings",
          "String Indexing",
          "String Slicing",
          "String Built-in Functions",
          "Formatting String (Dynamic Data)"
        ],
        "Python Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "AND Operator",
          "NOT Operator",
          "Booleans"
        ],
        "python Data Structures": [
          "Arrays in Earlier",
          "Lists",
          "Add List Items",
          "Remove List Items",
          "Sort Lists",
          "Join Lists",
          "Tuples",
          "Update tuples",
          "Join tuples",
          "Dictionaries",
          "Add Dictionary Items",
          "Remove Dictionary Items",
          "Nested Dictionaries",
          "Sets",
          "Add Set Items",
          "Remove Set Items",
          "Join Set Items"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Become a proficient Full Stack Data Science Developer with the \"Full Stack Data Science Developer Course from Scratch\" using CSS, Python, and Microsoft SQL. This course is designed to take you from a beginner to a full-fledged data science developer, teaching you how to build complete data-driven applications from scratch.\n\n\nYou’ll start by mastering Python, the core language of data science. Learn how to use Python libraries Gain hands-on experience in implementing python algorithms using coding skills to build predictive models that can solve real-world data problems.\n\n\nNext, you’ll explore Microsoft SQL Server, learning how to design and manage relational databases, perform complex queries, and optimize data storage. You’ll gain a solid understanding of T-SQL for working with large datasets and databases with SQL to fetch, manipulate, and analyze data seamlessly.\n\n\nFor front-end development, you'll master CSS to style your web applications and create responsive, user-friendly interfaces. Learn how to integrate CSS with HTML to design aesthetically pleasing data dashboards and applications that present your insights clearly.\n\n\nThe course emphasizes hands-on projects where you will build full-stack data applications, including interactive dashboards and data-driven websites that interact with databases and display real-time insights. By the end of the course, you'll have the skills to build complete data science solutions, from data extraction to presentation, ready for deployment in the real world.\n\n\nEnroll today and become a Full Stack Data Science Developer using CSS, Python, and Microsoft SQL!",
      "target_audience": [
        "Beginner CSS, Python coding and Microsoft SQL developers curious about data science development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Build a WebSocket server with Node.js - no libraries - 2025",
      "url": "https://www.udemy.com/course/websocket-server/",
      "bio": "Advanced WebSocket server course for everyone! Build a WebSocket server from scratch using pure JavaScript. No libraries",
      "objectives": [
        "Build a custom WebSocket server, from scratch using Node",
        "Understand how to analyze a WebSocket frame (FIN, OPCODE, MASKING, PAYLOAD)",
        "Your server will be able to handle large fragments of WebSocket data (this is advanced, and unique)",
        "Master advanced concepts of WebSocket fragmentation, streaming and chunks",
        "Build a custom project that will take your WebSocket skills to the next level",
        "Gain a deep understanding of pure WebSockets on server side (you heard me, NO libraries)",
        "Understand and work with Buffers",
        "Learn Bitwise parsing (shift operators, AND, OR and XOR)",
        "Learn how to process a binary frame of WebSocket data",
        "Use the debugger to test and fix server code",
        "Understand SHA hashing and the crypto module",
        "And TONS MORE!!!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "To build a WebSocket server, we need to be RFC compliant",
          "Course Structure",
          "Take matters into your own hands.",
          "Foundations of setting up a WebSocket server"
        ],
        "Creating a NodeJS server": [
          "WebSocket Server Goal: Create a HTTP web-server",
          "What happens to your HTTP server?",
          "Project Files: starting HTML and CSS",
          "Overview of HTML and CSS",
          "Setting up our HTTP server",
          "Creating custom modules and finishing off the HTTP server",
          "Implementing basic error handling",
          "Using \"Run and Debug\" to examine the forEach loop",
          "Testing our error handling code",
          "Project Files: HTTP server",
          "Creating a web server"
        ],
        "Establishing a WebSocket Connection": [
          "WebSocket Server Section Goal: Establish a WebSocket Connection",
          "Using the 'upgrade' event listener to receive 3 important object",
          "Examining the request object in the terminal",
          "Reading the client's opening handshake request headers",
          "Sending a \"400 Bad Request\" response if the client handshake headers fail",
          "Generate the server response headers object",
          "Extracting the Sec-WebSocket-Key and using the crypto module",
          "Timeout! What is SHA-hashing and the crypto module?",
          "Generate the Sec-WebSocket-Accept value and send back headers to the client",
          "Testing our code and opening up a valid WebSocket connection",
          "Summary",
          "Project Files: Establishing a WebSocket connection",
          "Bonus Part 1 of 2 - How to run Live Server over HTTPS",
          "Bonus Part 2 of 2 - How to run our WebSocket Node Server over HTTPS",
          "Establishing a WebSocket Connection"
        ],
        "Receiving WebSocket Data": [
          "WebSocket Server Section Goal: Extract Payload Data",
          "Setting up our file for the next goal",
          "The socket object inherits from the stream.Duplex class",
          "The socket object is a duplex stream, allowing us to listen for chunks",
          "Defining our data event handler",
          "Quick cut - adding the 'end' event listener to our socket object",
          "Define the processBuffer() function",
          "The WebSocket binary frame structure",
          "Coding the task management looping function",
          "Extract the first 2 bytes of data from the WebSocket data frame",
          "Quick Break",
          "What are Buffers?",
          "Buffers are mandatory",
          "Why is the letter \"a\" sent as 7 bytes?",
          "Using the Debugger tool to analyze code",
          "Extracting the FIN bit",
          "Bitwise operators",
          "Extracting the MASK, OPCODE and initial LENGTH information",
          "Next steps",
          "Setting up code to extract the payload length details",
          "The 3 categories of payload lengths",
          "Payload length recap",
          "Calculating the payload length",
          "Summary",
          "Breakdown of the getLength() method",
          "The readUInt16BE() method",
          "Payload length checks",
          "Next Steps",
          "Extract the Masking Key",
          "Next steps",
          "Define the getPayload() method",
          "Checking for whether we need additional chunks of data",
          "Extract one full frame of data (masked)",
          "Why did I not use the _consumeHeader() method?",
          "Unmasking the frame payload",
          "What is the modulus operand",
          "Create a persistent fragments array and check for more frames (FIN bit check)",
          "Why have a fragments array?",
          "SMALL payloads - Using the debugger to analyze logic",
          "Fixing the error in our consumePayload() method",
          "Adding a prepopulate button to the HTML",
          "MEDIUM Payloads - Using the debugger to analyze logic",
          "Why did I use readUInt16BE()",
          "LARGE Payloads: Part 1 of 3. Understanding getLength() logic",
          "What is BigInt?",
          "Chunks, Frames and Messages",
          "LARGE Payloads: Part 2 of 3. Waiting for additional chunks",
          "LARGE Payloads: Part 3 of 3. Processing the entire payload into _fragments",
          "Improvements comments and adding opcode checks",
          "Advanced - chunk size variation between debugger vs live environment",
          "Improving our _getInfo() method",
          "Project Files: Extract Payload Data",
          "Receiving WebSocket data"
        ],
        "Sending WebSocket Data": [
          "WebSocket Server Section Goal: Send A WebSocket Message",
          "Getting project files ready to send data to the client",
          "Creating a blueprint of the sending frame",
          "Calculating the size of the variable-length header field",
          "Variable-Sized Frame Headers in WebSockets",
          "Create the binary frame buffer blueprint",
          "Creating the first byte of the frame",
          "Why did I choose to set opcode to BINARY",
          "Bitwise shift operators",
          "Populate the frame header with data",
          "Sending the frame to the client",
          "Testing whether the client received the frame",
          "Blobs - did you know?",
          "Sending data to the client via the write() method",
          "Creating a reset() function",
          "Using debugger tool to examine code",
          "How does the WebSocket API handle fragmentation",
          "Displaying the WebSocket message on the client-side",
          "Why did I use the FileReader interface?",
          "Project Files: Sending Data",
          "Sending WebSocket Data"
        ],
        "Responding to a closure frame": [
          "WebSocket Server Section Goal: Send & Receive A Closure Frame",
          "Setting up project code and defining our mini-goal",
          "Closing handshake",
          "Extracting the body (closure code and reason) of the close frame",
          "Both peers have to send a close frame",
          "Close Frame Structure",
          "Construct the payload buffer for the close frame",
          "Closure codes",
          "Completing and sending the final close frame back to the client",
          "Testing our code",
          "Using Wireshark to master the TCP closure process",
          "Checking for \"ping\" and \"pong\" data type, and payloads larger than max size",
          "Ping and Pong",
          "Ping & Poing vs TCP Keepalive",
          "Extracting the server response from the CloseEvent object",
          "Sending a closure frame if the masking bit is not set correctly by the client",
          "Check whether client has sent a closure code",
          "Displaying default closure message (for normal closure event)",
          "Fixing comments and removing server response text when new connection is made",
          "Server side validation for text",
          "Fixing the refresh issue killing the server",
          "Project Files: Dealing with Closure Frames",
          "Closing a WebSocket Connection"
        ],
        "Outro & next steps": [
          "Outro",
          "Next Steps"
        ]
      },
      "requirements": [
        "A basic knowledge of WebSockets is required. If you like, you can first do my WebSockets fundamentals course",
        "Basic knowledge of JavaScript and HTML will be helpful",
        "Desire to understand the INNER-WORKINGS of the pure WebSocket protocol (no libraries)",
        "A computer is required as you need to code alongside me to learn effectively"
      ],
      "description": "*** BUILD A WEBSOCKET SERVER ***\nBuild a complete WebSocket server, using pure Node.js and JavaScript, from scratch.\nI will code alongside you the entire time!\nLearn bitwise parsing, frames, chunking and streaming\nUnderstand how to analyze a WebSocket frame (FIN, OPCODE, MASKING, PAYLOAD)\nNo libraries.\nNo modules.\nWe use ONLY pure Node.js and pure JavaScript to benefit YOU most.\nMany developers know how to set up a simple node server to handle WebSocket data. But very few understand how to build a node server that can handle LARGE data from WebSockets. Step by step I'll show you how to create a WebSocket application that receives large data from a client, and sends it back over a WebSocket connection. IMPORTANT: A huge edge in this course is that you will learn how to send large payloads . This requires you to learn how to manage chunking, streaming, and fragmentation properly. You will not get this information elsewhere.\nKey Focus Areas\nPure Node.js and JavaScript: Empower yourself. Master the art of building a WebSocket server from scratch, leveraging only the core capabilities of Node.js and JavaScript.\nHandling Large Payloads: Unlike other resources that focus on small to medium-sized payloads, this course will teach you how to manage chunking and fragmentation for large data transfers. This is a critical skill, as handling large payloads is a significant challenge that many developers shy away from.\nReal-World Application: Develop an application that can efficiently handle large data payloads, ensuring your WebSocket server is robust, scalable, and reliable.\nSuch comprehensive and advanced course may not be available elsewhere. This advanced WebSockets course is dedicated to writing pure native server code that focuses on WebSockets. This course is particularly special because I show you how to handle sending and receiving large data payloads with WebSockets. Most other courses or information on the web only focuses on small to medium sized payloads. That's relatively easy to do. So, as has become my trademark or characteristic of my courses, I tackle the hard practical stuff to elevate your learning to the next level so that you benefit most.\n\n\nYOU NEED TO CATER FOR LARGE PAYLOADS WITH WEBSOCKETS\nOften a user needs to send several megabytes to gigabytes. So the available information and courses which limit the WebSocket data payloads to 65,535 bytes is inadequate\nThis is not good enough for you!\nMany modern applications, such as real-time analytics, file sharing, live updates, and multimedia streaming, involve transferring large amounts of data. If your WebSocket server cannot handle these large payloads, it may lead to performance issues, data loss, or even crashes.\nTHE CHALLENGES IN BUILDING A WEBSOCKET SERVER FOR LARGE PAYLOADS\nWhile the WebSocket protocol itself is designed to handle continuous, bi-directional communication, building a server that efficiently handles large payloads can be challenging for several reasons:\nProtocol Complexity: The WebSocket protocol involves several layers of complexity, including message framing chunking and fragmentation. Understanding these nuances is essential for building a robust server.\nBuffering and Streaming: Large payloads often require efficient buffering and streaming mechanisms to prevent memory overflow and ensure smooth data transfer. Implementing these mechanisms correctly can be tricky.\nError Handling: Large payloads increase the likelihood of errors during transmission. A well-designed server must include error handling mechanisms to manage and recover from such errors gracefully.\nMy course is here to empower you, period.\nWhy Knowing How to Build a fully-functional WebSocket server is a Game Changer for Web App Developers\n#1 Deep Understanding and Customization. Building a Node.js WebSocket server from scratch without using libraries is crucial for web developers because it provides a deep understanding of the underlying protocol and its mechanics. By implementing WebSockets purely in JavaScript, developers gain hands-on experience with the intricacies of real-time communication, including framing, chunking, working with readable streams, fragmentation, and error handling. This knowledge allows for better customization and optimization of the server to meet specific application needs, ensuring performance and scalability.\n#2. Mastering Core Concepts and Flexibility. Learning to build a WebSocket server from scratch also enhances problem-solving skills and flexibility. Without the abstraction of libraries, developers must handle every detail, from establishing connections to managing state and handling errors. This approach fosters a comprehensive understanding of the technology, enabling developers to troubleshoot and optimize their applications more effectively. Additionally, it allows for the creation of tailored solutions that can be adapted to various use cases, making the developer more versatile and proficient in handling complex real-time applications.\nTHIS COURSE FOCUSES ON THE PURE WEBSOCKET PROTOCOL, INFORMATIVE, WITHOUT LIBRARIES.\n\n\nWHAT SKILLS ARE NEEDED?\nYou need to have a basic idea of what WebSockets are.\nIf you have never come across the term before, then I encourage you to take my WebSockets Protocol - Very Informative course. In that course, I take you through the WebSocket protocol from the basics through to the advanced.\nA basic knowledge of HTTP, HTML and JavaScript will also be helpful.\n\n\nWHAT YOU'LL LEARN IN THIS WEBSOCKET SERVER COURSE\nThis comprehensive course has unique content and will guide you through the entire process of building a Node.js WebSocket server from scratch, without relying on any libraries. You'll gain a deep understanding of the WebSocket protocol and master its implementation on the server side.\nYou'll learn and master the WebSocket protocol, without relying on libraries.\n1. Creating the Initial HTTP Server:\nStart by setting up an HTTP server, which will serve as the foundation for your WebSocket connection.\n2. Implementing the Handshake Process:\nLearn how to calculate the Sec-WebSocket-Accept value on the server and send back the required headers to upgrade the HTTP connection to a WebSocket connection.\n3. Receiving WebSocket Data:\nUnderstand how to listen for data events on the WebSocket connection.\nExtract important information from WebSocket frames, including the FIN bit, opcode, and payload length fields.\nLearn how to extract the Masking Key from the client and use it to decrypt the received data.\n4. Sending WebSocket Data:\nUnpack the structure of WebSocket data frames.\nConstruct and send binary frames to the client over the wire.\n5. Handling Closure Frames and the Closing Handshake:\nLearn how to process different types of WebSocket frames, including closure frames.\nUnderstand how to extract closure codes and reasons on both the client and server.\nDiscover how to send a close frame to the client and gracefully close the underlying WebSocket connection in compliance with the RFC.\nADVANCED CONCEPTS COVERED\nBuffers and Bitwise Parsing: Master the use of buffers and bitwise operations to parse and construct WebSocket frames. These concepts are also used in most other programming languages like PHP, Python, C, C++, Java, etc, setting you up for success.\nChunking and Fragmentation: Learn how to handle large payloads by chunking and fragmenting data in compliance with the WebSocket protocol.\nReading and Writing to Buffers: Understand how to efficiently read from and write to buffers.\nSHA Hashing: Learn how to perform SHA-1 hashing for the WebSocket handshake.\nExamining Data Packets: Gain insights into examining and processing data packets using bitwise operators.\nEncrypting and Decrypting Data: Understand how to encrypt and decrypt data using the Masking Key and the modulus operator.\nAND TONS MORE!\n\n\nWhy This Course Stands Out\nThe focus is on YOU. This course is uniquely dedicated to writing pure native server code for WebSockets, a topic often overlooked in favour of simpler, library-based solutions.\nThis course shows you how to deal with large WebSocket data payloads, you'll gain a deep understanding of the WebSocket protocol and the skills to tackle even the most demanding real-time applications\n\n\nMeet Your Instructor: ME\nClyde is a coding enthusiast who has been immersed in the world of computers since the age of 7 in the early 1990's.\nWith years of experience in web development and a passion for teaching, Clyde brings a wealth of knowledge and practical insights to the course. His engaging teaching style and real-world examples will make complex concepts accessible and enjoyable.\n\n\nEnrol now\nDon’t miss this opportunity to elevate your web development skills by building a WebSocket server from scratch.\nWeb development is a blazing hot topic at the moment. But you have a distinct advantage. This course offers memorable learning topics, actionable tactics and real-world examples.\nGet ready to transform your projects into interactive experiences that captivate users and make you money!\nLet's get crackin'",
      "target_audience": [
        "Developers interested in learning the art and science behind building a native WebSocket server",
        "Developers interested in mastering the WebSocket protocol and dealing with large chunks of data",
        "Anyone interested in learning the art and science behind creating a WebSocket framework",
        "BUSY PEOPLE who want to become certified and confident about what it takes to build a WebSocket server from scratch",
        "YES: This course is for intermediates. It’s aimed at people who have some knowledge of WebSockets, but want to dig deeper",
        "Those who want to learn modern coding without third party libraries and frameworks",
        "Anyone wishing to master WebSockets"
      ]
    },
    {
      "title": "Vue JS Portfolio Project - Vue Training for Beginners",
      "url": "https://www.udemy.com/course/vue-and-vuex-building-real-project-from-scratch/",
      "bio": "Build Vue JS Portfolio Project with Vuex With My Vue Training for Beginners",
      "objectives": [
        "Vue JS Portfolio Project",
        "Write high quality code",
        "Create reusable modules and components",
        "Vue Training with real Vue and Vuex usage"
      ],
      "course_content": {
        "Preparing tools": [
          "What is this section about?",
          "Preparing Vue project",
          "Setting up own api",
          "Installing Prettier",
          "Updating Vue to version 3",
          "File structure in Vue"
        ],
        "Registration": [
          "What is this section about?",
          "Register layout",
          "Redux and Vuex",
          "Creating Vuex auth module",
          "Vuex actions",
          "Making register API request",
          "Improving register page",
          "Saving access token",
          "Rendering validation errors"
        ],
        "Authentication": [
          "What is this section about?",
          "Refactoring naming",
          "Adding login page",
          "Creating topbar",
          "Getters in Vuex",
          "Getting current user"
        ],
        "Feed": [
          "Preparing a feed",
          "Rendering a feed",
          "Implementing pagination",
          "Calculating offset",
          "Implementing popular tags",
          "Adding helper components",
          "Creating your feed and tag feed",
          "Adding feed toggler"
        ],
        "Article pages": [
          "Creating article page",
          "Adding article delete",
          "Adding tag list",
          "Creating article form",
          "Adding create article page",
          "Adding edit article page"
        ],
        "Profiles": [
          "Implementing settings page",
          "Namespacing in Vuex",
          "Adding to favorites",
          "Creating user profile"
        ],
        "What's next?": [
          "Homework",
          "My Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "Some knowledge about Vue and optionally Redux/Vuex"
      ],
      "description": "In this course we will build a Vue JS portfolio project using Vue and Vuex. This Vue Training for beginners is fully focused on fast and deep dive into creation of real application with Vue and Vuex. We will start from scratch and step by step you will get close to finished real application. You will deeply understand how to structure your application, build reusable and understandable modules and components and split code into smaller chunks of code. We will write code together in efficient way to make it pure and avoid data complexity.\nFor each lesson you'll get source code of the lesson, so it's easy to see the progress and get a working app on any lesson you want.\nWhat you will learn in this course:\nStructure and configure project\nWrite high quality code with Vue and Vuex on real project\nCreate reusable modules and components\nImplementing authentication\nDeeply understand Vuex design patterns\nBy the end of this course, you will be much comfortable to work with Vue and Vuex.\nIf you are feeling like you learned Vue but you still still missing knowledge of how to build your own real application this course is what you need. This course is fully focused on creating the application without getting deep into basic knowledge of Vue!",
      "target_audience": [
        "This course is for you if you want to develop real project from beginning to the end",
        "This course is for everyone who is interested in learning developing with Vue",
        "This course is for you if you want to improve you knowledge of Vue and Vuex"
      ]
    },
    {
      "title": "Heroku for NodeJS",
      "url": "https://www.udemy.com/course/heroku-for-nodejs/",
      "bio": "Don't get left behind by the cloud hosting revolution: use node.js to build and deploy your first four Heroku websites",
      "objectives": [
        "Deploy your first four websites on Heroku",
        "Build web apps using the Express framework",
        "Use add-ons such as Redis",
        "Troubleshoot errors",
        "Configure and customise your Heroku environment"
      ],
      "course_content": {
        "Introduction": [
          "Welcome"
        ],
        "Getting set up": [
          "Setting up your environment",
          "Creating a Heroku account",
          "Installing the Heroku CLI",
          "Example code"
        ],
        "Setting up Heroku on Windows": [
          "Windows setup instructions",
          "Installing git on Windows",
          "Installing Heroku CLI on Windows",
          "Using Git Bash on Windows"
        ],
        "Your first Heroku app": [
          "Heroku architecture",
          "Installing Express",
          "Writing our first app",
          "Creating a git repo",
          "Connecting to Heroku",
          "Adding a Procfile",
          "Redeploying the app"
        ],
        "Using config vars": [
          "What are config vars?",
          "Running project 2",
          "Adding a local config variable",
          "Pushing to Heroku",
          "Remote config variables",
          "Config vars in the dashboard"
        ],
        "Using add-ons": [
          "What are add-ons?",
          "Running project 3",
          "Using Redis",
          "Deploying the app",
          "Redis add-on",
          "Redis in action",
          "Add-on documentation",
          "Resources and elements"
        ],
        "Troubleshooting errors": [
          "Running project 4",
          "Breaking the app",
          "Viewing the logs",
          "Rolling back"
        ],
        "Configuration": [
          "Exploring the dashboard",
          "Changing dyno type",
          "Configuring SSL and domains"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "You should be a programmer with a basic understanding of NodeJS or JavaScript",
        "No prior knowledge of Heroku, cloud or PaaS is required"
      ],
      "description": "Are you a Node.js/JavaScript programmer? If so, this course will get you up to speed with Heroku in record time.\nInvest just one hour of your life to learn to use Platform-as-a-Service (PaaS) cloud hosting and I promise you that you will fall in love, as well as adding a valuable skill to your CV.\nFollowing along step-by-step, you will:\n* Deploy your first four websites to the cloud\n* Use add-ons such as Redis\n* Troubleshoot errors using the Heroku CLI\n* Configure and customise your virtual server\nClick the \"Buy Now\" button to get started immediately. The course comes with lifetime access to the videos and materials. If you don't love it, just use the 30-day money-back guarantee.\nWhat is Heroku?\nHeroku is a cloud hosting platform that allows you to deploy websites and web applications with a simple git push.\nHeroku manages the environment, including installing Node.js on your own virtual server: all you have to do is tell it what to do and Heroku does the rest.\nWhat should I learn Heroku?\nIf you run your own website, Heroku is a cost-effective and convenient way to host it without having to manage your own server or be dependent on your hosting company to give you the correct version of Node.js\nIf you are an employee, many companies are converting to cloud platforms such as Heroku. Therefore, having this skill on your CV will increase your employment opportunities and make you more valuable to your existing employee.\nWhy should I sign up for this course?\nI've designed this course to get you up to speed as fast as possible. We will dive straight in and write code: you can follow along with all of the examples and get your first web application live in the first hour.\nI've been working as a software consultant for over ten years, as well as being a teacher here on Udemy and I will be here to help you every step of the way.",
      "target_audience": [
        "Programmers who want to join the Heroku revolution"
      ]
    },
    {
      "title": "Mern Full Stack with Authentication and MERN Stack Projects",
      "url": "https://www.udemy.com/course/mern-full-stack-with-authentication-and-mern-stack-projects/",
      "bio": "Full Stack Web Development & MERN Full Stack with Hands-on Mern Stack Projects | React Js, Nodejs, MongoDB, Express",
      "objectives": [
        "'MERN' stands for the four technologies that make up the stack: MongoDB, Express. js, React, and Node. js.",
        "MERN is used extensively in mobile and web application development. As a result, numerous companies need developers with a working knowledge of this system.",
        "MERN allows you to add database functionality to applications by utilizing MongoDB, Express. js, JavaScript-powered React, and Node. js.",
        "Full Stack Web Development using MERN",
        "Learn how to build backend API using node and express",
        "React Hooks, Async/Await & modern practices",
        "Learn how to build powerful and fully functional social media website using MERN",
        "Learn how to handling forms",
        "Learn about Redux (Best state management tool)",
        "Learn styling with Material-ui",
        "Learn JWT Authentication",
        "Deployment",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Full stack mern stack mern projects with react js, nodejs, express js, mongodb",
        "The good news is that web development generally uses light-weight code that is easier to learn than many other languages.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstra",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, Mongodb",
        "What is React used for? React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard",
        "Learn about Redux (Best state management tool)",
        "Full stack web development with mern stack project",
        "Mern Full stack",
        "What is React? React is a front-end library in Javascript that was developed by Facebook",
        "The simplest definition of React is that it is a user interface library used for building UI components for the web.",
        "The most common use of React is to build dynamic user interfaces for single-page web applications.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice.",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy managemMern full stack with react js, express js, mongodb, nodejsent of asynchronous functions.",
        "NodeJs is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers.",
        "A runtime system is a platform where a software program runs",
        "Mern full stack with react js, express js, mongodb, nodejs"
      ],
      "course_content": {
        "Intro to Course": [
          "What is MERN and How to Get Help?",
          "FAQ about Mern Full Stack Projects with react, express, nodejs, mongodb",
          "Mern Stack Project Github Link",
          "Quiz Mern Full Stack"
        ],
        "Let’s Start": [
          "App Preview",
          "Installation"
        ],
        "Initial Setups": [
          "Backend Setup",
          "Frontend Setup",
          "General Setup (body parser & cors)",
          "Database Setup (MongoDB)",
          "How to connect to Database",
          "quiz"
        ],
        "Creating Routes and Controllers on Server": [
          "Creating Routes for Backend",
          "Setup Folder Structure",
          "Set up schema",
          "Adding More Controllers",
          "quiz"
        ],
        "Setup Client Side and Redux": [
          "Creating Front-end Structure",
          "Implementing Styles",
          "Implementing API requests",
          "Initializing Redux",
          "Building Reducers",
          "Styling Components",
          "Creating action Creators",
          "Fetching data with redux thunk",
          "Fetching data from global state",
          "quiz"
        ],
        "Handling Forms": [
          "Building Form Component",
          "Adding some more form items",
          "File Input",
          "Handling Form Submit",
          "Quiz Mern Full Stack"
        ],
        "Building Posts and Post Components": [
          "Creating Story list component",
          "Creating Story Component",
          "quiz"
        ],
        "Handling Functionalities (Edit, Delete, Like)": [
          "Creating Update Route(Backend)",
          "Creating Update Functionality (Front end)",
          "Create update action",
          "Updating and Reseting Form",
          "Adding route for delete action",
          "Delete story action for frontend",
          "Implement update action in backend",
          "Like Story Action(Backend)",
          "Creating constants for action type (Front-end)",
          "quiz"
        ],
        "Some Enhancements": [
          "Environmental Variables"
        ],
        "Authentication with JSON Web Token": [
          "App Overview",
          "Installing Dependencies"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Ability to install software on your computer",
        "Must understand and write JavaScript code",
        "Must be familiar with main technologies like Node, React, MongoDB",
        "Desire to learn Mern full stack projects with react, nodejs, express, mongodb",
        "Desire to learn with react, nodejs, express, mongodb",
        "Desire to learn mern stack full stack react js, nodejs, express, mongodb",
        "Desire to create real world mern stack projects with react, redux, hooks and context, nodejs, mongodb, express",
        "Desire to learn react project with node js, express js, mongodb",
        "Desire to learn web development with mern full stack (mongodb, express js, react js, nodejs)",
        "Desire to create real world react projects",
        "Nothing else! It’s just you, your computer and your ambition to get started today.",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device."
      ],
      "description": "MERN Stack Main Insight; mern, mern stack, mern full stack, react, mern stack project, node js, mern project, full stack web development\nFull Stack Web Development Main Insight ; full stack web development, web development, full stack, full stack developer, full stack java developer, backend web development, react js, full stack development, fullstack, fullstack web development\n\n\nHello there,\nWelcome to the \" Mern Full Stack with Authentication and MERN Stack Projects \" course.\nFull Stack Web Development & MERN Full Stack with Hands-on Mern Stack Projects | React Js, Nodejs, MongoDB, Express\nIn this course, we will be building a full-stack Social Media project application using Node.js, Express, React, and MongoDB. This is not an \"Intro to React\" or \"Intro to Node\" course. It is a practical hands-on course for building an app using the incredible MERN Stack.\nMERN Stack is an open-source JavaScript stack used for ease in the development and deployment of applications.\n'MERN' stands for the four technologies that make up the stack: MongoDB, Express.js, React, and Node.js. MongoDB is a cross-platform document-oriented database used for JSON-like storage, including ad-hoc queries, indexing, replication, and load balancing. Express is a Node.js back-end web application framework utilized for building web applications and APIs. React is a front-end library used for making user interfaces. And lastly, Node.js is a back-end JavaScript runtime environment, which allows programmers to run code outside of a web browser. MERN stack is not to be confused with MEAN web dev stack, which uses Angular.js instead of React.js as the JavaScript library.\nMERN is used extensively in mobile and web application development. As a result, numerous companies need developers with a working knowledge of this system.\nMERN is a multi-tiered application stack that allows you to add database functionality to applications by utilizing MongoDB, Express.js, JavaScript-powered React, and Node.js. By combining the capabilities of these four platforms, you can build powerful mobile and web applications. The MERN stack is widely popular among developers, because it only requires one programming language, which is JavaScript.\nMERN Stack is an open-source JavaScript stack used for ease in the development and deployment of applications. 'MERN' stands for the four technologies that make up the stack: MongoDB, Express.js, React, and Node.js.\nThis is a practical hands-on course for building an app using the incredible MERN Stack.\nThis course project is probably the biggest and most exciting project you have built so far. It is packed with hundreds of tips and tricks that can help you build almost any type of full-stack app (not limited to this project).\nYou can build the biggest and most complex apps of your dream or as required at your job. Master the stack of all stacks and become the most productive and innovative developer on your team. I welcome you to be a part of this incredible journey.\nIn this course, you will learn to develop a web application with Full stack Projects with React JS, NodeJS, MongoDB, Express from scratch.\nIf you are thinking to start to learn ReactJS, this course is the best match for you.\nWe have explained React from beginner to all levels. We have explained all the topics as simple as possible with examples, slides, and diagrams.\nWe have created a lot of projects while explaining the subjects. Because we believe that applied educations are much more useful than other teaching methods.\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels.\nWe paid attention to explain all the topics in order. Because we think that the order of presentation of the subject is as important as the content of education. We have seen this shortcoming in many pieces of training we have examined and tried to explain these issues to you in the best way.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser.\nNodeJS and Express is a growing web server technology. By learning Node with Express, you can improve your skills, get a new job and you can build a powerful, robust backend.\nLearning Node.js is a great way to get into backend web development, or expand your fullstack development practice. With Udemy’s hands-on Node.js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime.\nNode.js is essential to developing real-time applications in JavaScript and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows. Its schemaless nature allows greater flexibility or changing application requirements. It’s one of the best databases in terms of developer productivity.\nMongoDB is a document-oriented database designed to allow developers to scale their applications to meet scalability demands. MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster.\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React. This course will take you from a beginner to a more advanced level with hands-on examples.\nYou will be confident in using React JS, and if you ever get stuck, we will be there to help.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS. In this course, we will be teaching React by creating various projects.\n\nIn this Full stack Mern Projects with React Js course, you will learn\n\n\nBuilding an extensive backend API with Node.js & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nHandling Forms\nJWT Authentication\nCreating a build script, securing our keys, and deploy to Heroku using Git\nReact js, and react projects, mern stack projects\nExpress\nExpress js\nReact\nReactjs nodejs\nNodejs\nNode js\nReact js\nExpressjs\nFull stack\nFull stack javascript\nFull stack react\nJavascript\nReact js node js\nNodejs reactjs\nReact js and node js\nNode\nMern stack\nNode js react\nMern full stack\nMongodb\nFull stack react js with redux node.js, express.js, mongodb\nExpress\nReact node\nReact nodejs\nNodejs express js mongodb\nReactjs and nodejs\nMern\nNode react\nWeb development with react js, mern stack\nReact js full stack\nMern full stack projects with express js, mongodb, nodejs\nFull stack react projects with redux, hooks and context\nFront end web development\nBackend web development\n\nThis course project is probably the biggest and most exciting project you have built so far. It is packed with hundreds of tips and tricks that can help you build almost any type of full-stack app (not limited to this project).\nYou can build the biggest and most complex apps of your dream or as required at your job. Master the stack of all stacks and become the most productive and innovative developer of your team. I welcome you to be a part of this incredible journey.\n\n\nAt the end of the course\nBy the end of the course, you will be able to build amazing React single-page web applications.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\n\n\nWhat is MERN Stack?\nMERN Stack is an open-source JavaScript stack used for ease in the development and deployment of applications. 'MERN' stands for the four technologies that make up the stack: MongoDB, Express.js, React, and Node.js. MongoDB is a cross-platform document-oriented database used for JSON-like storage, including ad-hoc queries, indexing, replication, and load balancing. Express is a Node.js back-end web application framework utilized for building web applications and APIs. React is a front-end library used for making user interfaces. And lastly, Node.js is a back-end JavaScript runtime environment, which allows programmers to run code outside of a web browser. MERN stack is not to be confused with MEAN web dev stack, which uses Angular.js instead of React.js as the JavaScript library.\nWhat skills should I have before learning MERN Stack?\nIt is crucial to have a foundational understanding of web development before learning the MERN stack. So, HTML5, CSS3, and JavaScript skills are all required before you take on learning MERN Stack. In addition, it is good to have a working knowledge of Git and GitHub, the essentials of HTTP, and some understanding of JavaScript frameworks. Furthermore, it is also beneficial to be familiar with back-end language, database/web storage, and web application architecture. These skillsets will make for a smoother learning process as you navigate the intricacies of MERN Stack.\nWhy should I use MERN Stack?\nMERN Stack remains completely open-source, uses only one programming language (JavaScript), and has superior UI rendering and performance compared to competing Stacks. The only difference between MERN Stack and MEAN Stack is that the former uses React.js (instead of Angular.js) for the JavaScript library/framework. Thus, the framework and library are where the differences for UI rendering and performance come into play. React.js library is newer than the Angular.js framework, but beware when comparing the two because both have pros and cons. Also, some programmers have noted Angular.js's steep learning curve when compared to React.js.\nWhat is full stack web development?\nFull stack web development refers to the process of developing both client- and server-side software. That means you can expect anyone with \"full stack\" included in their job title to have expertise in several front- and backend languages and frameworks. On the frontend, mastery in HTML and CSS is a common requirement for the field. Developers also tend to use JavaScript, jQuery, or Angular when developing a browser platform. Concerning the backend, full stack development consists of programming servers and databases. A server might call for code in PHP, ASP, Python, or Node, while a database can accept languages like SQL, SQLite, or MongoDB.\nWhat are some common frameworks for full stack web development?\nBecause full stack web development includes both front- and backend frameworks, you should be familiar with some of the common frameworks for both. If you work in a Python-based environment, for example, Django will be of interest to you. For the frontend, both React and React JS are currently growing as the most widely used frameworks. However, companies that are using more legacy frontend frameworks may use Angular. Spring Boot is a Java-based backend framework. Rails, known as Ruby on Rails, is a backend web app framework based on Ruby. Development environments that use JavaScript on the backend are likely to use Node.js with Express.js or MetorJS. You can also use Symfony as your web development framework, which stems from PHP.\nWhat is the difference between full stack, backend, and frontend web development?\nFrontend web developers write client-side code. This is all the code that runs on the user's computer when they visit a website. Generally, this includes everything that the user can see. To write frontend code, you need to know HTML, CSS, and JavaScript. Backend web developers write server-side code. This is all the code that runs on the website's server. Backend code controls the logic of the website. For example, a frontend developer may code where a username will appear on a website and its style, but the backend developer will write the code that retrieves the username from the database. Backend developers need to know a server-side programming language in addition to HTML and JavaScript. Not all projects have a front and backend web developer. Some projects only have full-stack web developers, which do both front and backend coding. The team composition depends on the needs of the project. Full-stack web developers need to be strong front and backend coders.\nAre full stack web developers in demand?\nFull stack developers are in high demand across multiple industries, making it a great career path to follow. You'll find this to be especially true in the computer software, IT, internet, financial services, and higher education fields. Even better news is that you can expect full stack developers to be a popular job title for a while. This is due to the fact that many companies are in a constant state of evolving their software to meet the ever-changing needs of the users they service and the servers they host on. If you're interested in helping businesses advance their software, now is the perfect time to become a full stack developer.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time. Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nAfter taking this course, I decided to adopt Node.js as my specialized language/technology. Thank you.\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nMern Full Stack with Authentication and MERN Stack Projects course\nFull Stack Web Development & MERN Full Stack with Hands-on Mern Stack Projects | React Js, Nodejs, MongoDB, Express\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "React / Node / JavaScript developers of all skill levels",
        "Anyone who want to learn about Full Stack Web Development",
        "Anyone who want to learn MERN stack",
        "Node developers looking to learn more about front-end technologies (React)",
        "This course is for anyone who is in the software industry.",
        "People who want to become mern stack developer",
        "People who want to create real world mern stack project with react js, mongodb, express js, nodejs",
        "People who want to create real world react projects with express js, node js, mongodb",
        "People who want to create react project with redux, hooks and context",
        "People who want to learn creating mern stack projects with react, express js, mongodb"
      ]
    },
    {
      "title": "Django Mastery 2025: Build AI-Powered Apps Like a Pro",
      "url": "https://www.udemy.com/course/django-mastery-build-ai-powered-apps-like-a-pro/",
      "bio": "Complete Full-Stack Django: Build Restaurant Apps, AI Systems & Deploy Production-Ready Projects | Zero to Expert 2025",
      "objectives": [
        "Understand the fundamentals of Django and its architecture for web development.",
        "Set up a Django development environment using Python and Visual Studio Code.",
        "Navigate and configure Django settings for optimal performance.",
        "Work with models to manage data effectively in your applications.",
        "Utilize the Django Admin interface to manage application content easily.",
        "Develop views and URL routes to connect user requests with responses.",
        "Create dynamic templates that render data from models seamlessly.",
        "Implement advanced features like forms, class-based views, and static files.",
        "Deploy a Django application on a VPS server, ensuring production readiness."
      ],
      "course_content": {
        "Introduction to Django": [
          "Introduction",
          "What is Django and why use it?",
          "Overview of Features and Capabilities."
        ],
        "Setting Up Django for First-Time Users": [
          "Installation and Setup of Python and Visual Studio Code.",
          "Set up a virtual environment for Django."
        ],
        "Project One: Creating Your First Django Application (A Restaurant App).": [
          "Creating your first Django project and app.",
          "Understanding our project structure."
        ],
        "Navigating the Django Settings": [
          "Understanding the settings module: Part One.",
          "Understanding the settings module: Part Two.",
          "Understanding the settings module: Part Three.",
          "Choosing and installing a suitable database for your application.",
          "Configuring your project’s database."
        ],
        "Working with Models": [
          "Creating and activating your models.",
          "Playing with the Django API."
        ],
        "Navigating the Django Admin Interface": [
          "Understanding how the Django Admin interface works.",
          "Understanding and configuring the admin.py module.",
          "Playing with the admin interface."
        ],
        "Working with Views and URL routes.": [
          "Creating simple views and their URL routes.",
          "Connecting the app URLs to the project URLs.",
          "Accessing models using views."
        ],
        "Creating Templates for Your App": [
          "Adding your first template and rendering it using views.",
          "Passing data from models to template using views: Part One.",
          "Passing data from models to template using views: Part Two.",
          "Template inheritance: Part One.",
          "Template inheritance: Part Two.",
          "Template inheritance: Part Three."
        ],
        "Dealing with static and media files": [
          "Configure settings.py and urls.py for your static and media files.",
          "Adding and Accessing static and media files to your application: Part One",
          "Adding and Accessing static and media files to your application: Part Two"
        ],
        "Adding Functionality to your code.": [
          "Completing the index page: Part One",
          "Completing the index page: Part Two",
          "Completing the index page: Part Three",
          "Completing the index page: Part Four",
          "Completing the index page: Part Five",
          "Implementing ordering: Part One",
          "Implementing ordering: Part Two",
          "Implementing ordering: Part Three",
          "Building an order details page: Part One",
          "Building an order details page: Part Two",
          "Implementing a simple access control"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts (preferably in Python).",
        "Familiarity with HTML, CSS, and JavaScript is beneficial but not mandatory.",
        "A computer with internet access to install software and tools.",
        "Visual Studio Code or any preferred code editor installed.",
        "Willingness to learn and experiment with new technologies.",
        "No prior Django experience required; beginners are welcome!"
      ],
      "description": "Ever wondered how top companies build and deploy Django applications that scale to millions of users?\nDiscover the secrets of professional Django development in this course that takes you from complete beginner to AI-integrated deployment master. This isn't your typical Django tutorial – it's an immersive journey into real-world application development that actually powers modern businesses.\nThroughout this masterclass, you'll build a production-grade Restaurant Management System from the ground up, followed by an AI-powered Email Application that showcases modern integration techniques. You'll learn exactly how professional developers structure their projects, implement robust testing strategies, and write clean, maintainable code that scales.\nWhile other courses barely scratch the surface, we dive deep into the advanced territory that employers demand: custom admin interfaces, complex form handling, API development, and battle-tested security practices. You'll master the Django MVT architecture through hands-on practice, understanding not just the how, but the why behind every decision.\nThe journey culminates in a real-world deployment phase where you'll learn the exact process of taking your application live. From configuring servers and managing databases to implementing security measures, you'll gain the confidence to handle any development challenge thrown your way. Our AI integration modules ensure your skills remain relevant in today's rapidly evolving tech landscape.\nBy the time you complete this course, you'll have the skills to architect, build, and deploy Django applications that can handle real-world traffic and scale with your business needs. Stop watching scattered tutorials that leave you confused and join the developers who are building the next generation of web applications. Your journey to mastering Django starts here – are you ready to build something extraordinary?",
      "target_audience": [
        "Beginners: Individuals new to web development who want to learn Django from the ground up.",
        "Aspiring Developers: Those looking to build a solid foundation in Python and web application development.",
        "Intermediate Programmers: Developers with some programming experience who want to deepen their understanding of Django and its advanced features.",
        "AI Enthusiasts: Learners interested in integrating AI technologies into web applications using Django.",
        "Entrepreneurs: Business owners or startups seeking to create and deploy their own web applications without extensive coding knowledge.",
        "Career Changers: Professionals looking to transition into tech roles, specifically in web development, using a popular framework like Django."
      ]
    },
    {
      "title": "Learn Serverless Computing With AWS Lambda! JavaScript/Node",
      "url": "https://www.udemy.com/course/aws-lambda-nodejs/",
      "bio": "Learn Cloud Computing and Severless Computing with AWS Lambda! Interact with databases, servers and S3!",
      "objectives": [
        "AWS Lambda",
        "Lambda",
        "Cloud Computing",
        "Serverless Computing",
        "AWS",
        "JavaScript",
        "NodeJs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Meet Your Instructor!",
          "Is this course right for you?",
          "What is AWS? Why?",
          "AWS Link about their services.",
          "Create Your AWS Account / AWS Basics",
          "Basic AWS Security Practices",
          "AWS Regions"
        ],
        "Building Basic Lambda Functions": [
          "Lambda Overview",
          "Building Our First Lambda Function",
          "General Lambda Configuration + Pricing",
          "Lambda Pricing Link",
          "Lambda Response Object",
          "Taking In Information To Our Lambda Function",
          "Error Handling",
          "Not Defined Vs Undefined w/ Variables",
          "Basic If Statements and Triple Equals vs Double Equals",
          "Building Lambda Function to Test For the Current Season",
          "Lambda Context",
          "Lambda Getting Information From an External Webpage",
          "Uploading a Package to our Lambda Function",
          "Hashing info with our Lambda Function",
          "/tmp/"
        ],
        "AWS + S3": [
          "S3 Overview",
          "S3 Pricing Link",
          "AWS JavaScript Documentation",
          "Making a S3 Bucket With Lambda",
          "Making an Object with a Lambda Function",
          "List all the Items in a S3 Bucket with a Lambda Function",
          "Count all Items in Bucket with a Lambda Function",
          "Getting Info From Object in S3 Bucket with Lambda",
          "Overwriting Object in S3 with Lambda Function",
          "Appending to an Object with a Lambda Function",
          "Deleting an Object From a Lambda Function",
          "Deleting Objects From a Lambda Function",
          "Clear Bucket From a Lambda Function",
          "Deleting Bucket From a Lambda Function",
          "List All Buckets with Lambda",
          "Duplicate Item in S3 Bucket with Lambda",
          "S3 Trigger"
        ],
        "Lambda + API Gateway": [
          "Basic API Gateway + Exposing our Lambda Function",
          "Setting up Postman",
          "Setting Up an API Gateway to Handle Different types of Methods",
          "Post Request and Sending Info Through API Gateway",
          "JSON Crash Course",
          "Testing Our Post Request Micro Service"
        ],
        "Lambda + DynamoDB": [
          "DynamoDB Overview",
          "DynamoDB Console Management",
          "DynamoDB Pricing",
          "Put Operation From Lambda",
          "Deploying a Put Operation to API Gateway",
          "Changing request to a Post Request",
          "Scanning DynamoDB Table with Lambda",
          "Filtering through some of the Data coming back from the scan.",
          "Adding a Filter to our Scan Operation",
          "Adding a ProjectionExpression On to Our Scan Operation",
          "Query DynamoDB Table with a Lambda Function",
          "Updating an Item with Lambda",
          "DynamoDB Streams",
          "DynamoDB Streams Part 2"
        ],
        "Lambda + SQL(RDS)": [
          "Setting up a SQL Server",
          "Setting Up Security to allow Inbound Access for our Server",
          "Creating a database in our Server Via Lambda Function",
          "Upgrading Our Security between our Database and Lambda",
          "Setting up a Table in our Database with a Lambda Function",
          "Inserting Information into Our Table",
          "Selecting Rows with Lambda",
          "Updating Value with AWS Lambda",
          "Environment Variables with Lambda"
        ],
        "Misc Lambda Functions": [
          "EC2 Server Set Up",
          "Stopping EC2 Server from Lambda",
          "Starting EC2 Server From Lambda",
          "Invoke a Lambda Function From Another Lambda Function",
          "Invoking Lambda Function on a Schedule"
        ],
        "Section 8": [
          "Conclusion + Thank you"
        ]
      },
      "requirements": [
        "Basic Programming knowledge"
      ],
      "description": "Take your cloud skills to the next level!! There is so much that you can do with the information that you will learn from this course. With serverless computing and AWS lambda sky really is the limit. Everything APIs, to databases, to S3 storage, lambda is the computational power that can connect your backend services together.\nTopic Covered:\nAWS\nSQL\nDynamoDB\nLambda Events\nEC2 Servers\nS3\nAPI Gateways\nAWS Account Security\nNodeJs\nJavascript\nAWS Roles\nAWS Permissions\nBasic Security\nWorking with JSON\nAND SO MUCH MORE!!\nSo come along for the ride and take your AWS Skills to a whole new level!!!\n\n\n--Austin Patkos (eJPT, CCP, SAA, DVA, SOA, BCCe) has taught over 45,000 students on Udemy. As former Krav Maga instructor, he is passionate not only about tech but about teaching tech too. Knowing that remembering information isn't enough, you have to have a deeper understanding to be able to retain all of the information. He teaches in a manner that is sure to help you develop your skills and take you to the next level as a developer. He teaches a careful balance of giving enough information but also taking time to practice it too. Austin has developed these courses to teach people just like how to become better developers, security practitioners and IT professionals.",
      "target_audience": [
        "Anyone looking to expand their skills."
      ]
    },
    {
      "title": "Learning Functional Programming with F#",
      "url": "https://www.udemy.com/course/learning-functional-programming-with-f/",
      "bio": "Get started on building end-to-end web applications with F#",
      "objectives": [
        "Learn to build interactive F# concepts",
        "Learn the various aspects of F# applications and logic",
        "Get a detailed insight over Interference, properties, and compositions"
      ],
      "course_content": {
        "An Introduction to F# and Setting It Up": [
          "The Course Overview",
          ".NET Core",
          "First Hello World Application with F#",
          "Visual Studio Versus Visual Studio Code"
        ],
        "Functional Programming from 30,000 Feet": [
          "Procedural, OOP, and Functional Programming",
          "Functional Programming in 21st Century",
          "Principles of Functional Programming"
        ],
        "Object Oriented Programming with F#": [
          "Using Classes and Constructors",
          "Interfaces and Members",
          "Interacting with .NET and C#",
          "Comparison of C# and F#"
        ],
        "Functional Programming with F#": [
          "Composition",
          "Partial Application",
          "Immutability and Data Structures",
          "Records and Equality",
          "Discriminated Unions",
          "Option Types and Null Values"
        ],
        "Advanced Functional Programming with F#": [
          "Pattern Matching",
          "Map and Apply",
          "Bind",
          "Monads and Computation Expressions",
          "Async Workflows",
          "Mailbox Processors"
        ]
      },
      "requirements": [
        "Experienced learners can dive straight into the topic of their choice."
      ],
      "description": "In today’s world fully functional web applications are a key requirement and a necessity.\nWe can have a run through developing web applications that includes server-side as well as the client-side programming using Fable, F# to JavaScript compiler.\nWe will focus on the .NET Core platform so that your application will work in a cross-platform manner.\nAbout the Author\nOnur Gumus is a Lead Software Engineer based in Dubai. He has diverse interests in software development, architecture, Wing Chun, and Chess. He spends most of his time building .NET applications. His previous experience is as Software Architect at P.I. Works, where he developed several F# projects and gave internal tutorials to the developers. He is extremely passionate about F# and functional programming, and hopes to spend more and more time helping developers in the community to become proficient at functional programming.",
      "target_audience": [
        "The course is for everyone, from beginner to advanced level, so they can make powerful apps."
      ]
    },
    {
      "title": "Front End Web Development-How to Sell on Themeforest & Earn",
      "url": "https://www.udemy.com/course/front-end-web-development-themeforest/",
      "bio": "Front end web development insights. Create a Premium HTML Template From Scratch. Get Approved On Themeforest.",
      "objectives": [
        "How to create a premium quality website template with HTML, CSS & jQuery",
        "More advanced and practical way of front end web development",
        "How to submit the template on Themeforest and earn passive income",
        "Different ideas about front end web development",
        "Basic use of adobe photoshop",
        "How to create preview image, thumbnails, logo and documentation",
        "Rules of high standard coding practices"
      ],
      "course_content": {
        "Introduction": [
          "Promo Video",
          "Introduction",
          "Resources"
        ],
        "Getting started with the template": [
          "Finding a name for the template",
          "Creating a logo",
          "Creating a fevicon",
          "Downloading the resources",
          "Adding the resources",
          "Default styling of the template",
          "Markup of the hero section",
          "Styling of the hero section",
          "Adding the typewritter effect",
          "Markup of the header",
          "Styling of the header",
          "Adding the scrollspy & fixed on scroll effect"
        ],
        "Requirements of Themeforest": [
          "Types of Rejections in Themeforest",
          "Unique Design",
          "Proper Commenting",
          "Other Requirements Part 1",
          "Other Requirements Part 2"
        ],
        "About and Portfolio Section": [
          "Markup of the about section",
          "Styling of the about section",
          "Markup of the portfolio section",
          "Designing of the portfolio section",
          "Adding the isotope function & magnific popup"
        ],
        "Blog, Contact and Footer Section": [
          "Markup of the blog section",
          "Styling of the blog section",
          "Markup of the contact section",
          "Styling of the contact section",
          "Markup and styling the footer"
        ],
        "Completing the coding process": [
          "Adding responsiveness & solving issues",
          "Adding the preloader"
        ],
        "Creating Multiple Versions and Demo Site": [
          "Making of multiple demo style",
          "Taking the screenshots of the template",
          "Create a Showcase Template",
          "Upload the template on live server"
        ],
        "Preparing the Template for Submission": [
          "W3c Validation",
          "Replace the Images",
          "Creation of Preview Image",
          "Creation of Thumbnail Image",
          "Writting a Description",
          "Submitting in Themeforest"
        ]
      },
      "requirements": [
        "Basic knowledge in front end web development will be very helpful",
        "A personal computer with a code editor and browser",
        "Willingness to learn something new"
      ],
      "description": "Front End Web Development-How to Sell on Themeforest & Earn\nBuild A Premium Html Template Using Your Front End Web Development Knowledge: How To Create A Premium HTML From Scratch For Themeforest.\nIn this course, you will learn everything you will need to create and sell a premium front end template that is guaranteed to get accepted on marketplaces like ThemeForest.\nBecome a Website Template expert and make money online by publishing your templates! After finishing the course you will be able to do:\nYou can create a premium quality site template for premium marketplaces like ThemeForest and earn money.\nYou will go one step further in the path of becoming a professional front end web developer.\nYou will be able to use advanced javascript plugins on your website to make it more attractive and eye-catching.\nYou can submit your front end templates on Themeforest and other marketplaces all by yourself.\nYou will have the basic skills of graphics designing and you will be able to design a simple logo, favicon, thumbnail image, preview images, etc.\nYou will be able to create awesome designs and get ideas about design.\nYou will be able to make money right away by using your front end web development skills.\nTake your HTML & CSS knowledge to the next level\nAre you looking to code premium HTML templates that will pass the coding standards review on websites like themeforest?\nDo you have great designs or you work with a designer and you have HTML/CSS/JS knowledge and you want to convert your designs into a great front end website templates?\nDo you have some front end web development knowledge and you want to expand your knowledge and get deeper into the world of professional front end web developers and be able to sell themes online?\nThen this course is for you!\nThis course is the essence of my experience with submitting templates to the themeforest. In these lectures, I will share everything I know about creating HTML templates. After completing the course you will be able to create templates coded to match Themeforest's coding standards. You should have no problems passing themeforest's code review as long as you have a great design!\n\n\nThis is not a Design/HTML course!!! If you are looking for that, I am sure you will find a lot of other resources. In this course, I will just focus on the complete process of creating and submitting an HTML website templates in ThemeForest using Front End Web Development.\nAlso, you should have some basic front end web development knowledge. I will not teach you html & css from scratch here, so if you are interested in taking this course, I suggest taking a beginner's front end web development course first!\nWho is the target audience?\nDevelopers who have basic HTML/CSS knowledge and wish to create professional HTML templates from scratch.\nFront end web developers who want to take their knowledge to the next level.\nFront end web developers looking to create premium templates that get approved on marketplaces like themeforest.\nAnyone interested in learning advanced coding practices and standards.\nIntermediate level front end web development learners.\n\n\nThis course has a rating of 4.82. See what are the students saying about this course:\nDawa Rinzin Tamang:\n\"Awesome! Excellent teaching method. Worth Money. What you invest you will get double of it. No need to worry. Thanks sir for this.\"\nPrince Velasco:\n\"WORTH THE MONEY! Every code is written is well explained! And it is up to date. I wish that you create more courses like this.\"\n\n\n#frontendwebdevelopment #createpremiumhtmltemplate#Front End Web Development",
      "target_audience": [
        "Beginner level web developers",
        "Intermediate level front end web developers who doesn't know how to earn with their skills",
        "Someone who want to know about premium marketplaces of website templates",
        "Who want to upgrade the knowledge about front end web development"
      ]
    },
    {
      "title": "MERN Stack Work Management Tool",
      "url": "https://www.udemy.com/course/mern-stack-work-management-tool/",
      "bio": "Build a MERN Stack Work Management Tool using React , Node , Express , Mongo",
      "objectives": [
        "In this course, we will cover a range of topics, including using Tailwind CSS and Ant Design for styling purposes, implementing Redux and Redux Toolkit for stat",
        "We will also cover how to create separate interfaces for users, owners, admins, and employees. The owner will have access to the entire application, while the a",
        "The owner has the ability to delete admins and employees if any suspicious activity is found in the portal. They can also create new projects and invite other u",
        "Admin will have the access to the tasks they have assigned and assign new tasks to an employee",
        "Throughout the course, we will provide 24/7 QA support and code access to help you along the way."
      ],
      "course_content": {
        "Intro and Demo": [
          "Promo",
          "Project Demo & Source Code"
        ],
        "Front End Setup": [
          "React app",
          "Antd Installationa and setup",
          "Tailwind installation and setup",
          "Routing and folder structure"
        ],
        "Authentication screens": [
          "Login screen",
          "Registration screens"
        ],
        "Backend Setup": [
          "Node Setup",
          "Mongo DB and Node JS Connection"
        ],
        "Login and Register API": [
          "User Model",
          "Register API",
          "Login API",
          "Register API Integration",
          "Login API Integration"
        ],
        "Authentication Middlewares": [
          "Authorization - 1",
          "Authorization - 2"
        ],
        "State Management": [
          "Redux Store setup",
          "User data in redux",
          "Loaders using redux"
        ],
        "Layout": [
          "Default Layout",
          "User Roles/Profiles"
        ],
        "Add Project": [
          "Add Project UI",
          "Project Modal",
          "Project API",
          "Add Project API Integration",
          "Show Projects"
        ],
        "Edit and Delete Project": [
          "Edit Project",
          "Delete Project'"
        ]
      },
      "requirements": [
        "MERN Stack"
      ],
      "description": "Hello and welcome to the course on building a work management tool using the MERN stack!\n\n\nIn this course, we will cover a range of topics, including using Tailwind CSS and Ant Design for styling purposes, implementing Redux and Redux Toolkit for state management, and working with complex MongoDB queries.\n\n\nWe will also cover how to create separate interfaces for users, owners, admins, and employees. The owner will have access to the entire application, while the admin will have access to the tasks they have assigned and can also assign new tasks to employees. An employee can see and filter the tasks assigned to them and update the task status based on their activity.\n\n\nThe owner has the ability to delete admins and employees if any suspicious activity is found in the portal. They can also create new projects and invite other users to the project. Whenever the task status has been updated, both the admin and the respective employee will receive a notification. If an employee or admin is invited to the project, they will also receive a notification.\n\n\nThroughout the course, we will provide 24/7 QA support and code access to help you along the way.\n\n\nThis course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a work management tool with complex MongoDB queries and different user interfaces for owners, admins, and employees. By the end of this course, you will have the skills and knowledge needed to create a fully functional work management tool with real-time notifications and access controls.\n\n\nWhat is MERN Stack?\nMERN Stack is a collection of powerful technologies and robust, used to develop scalable master web applications comprising backend, front-end, and database components. It is JavaScript that is used for the faster and easier development of full-stack web applications. MERN Stack is a technology that is a user-friendly full-stack JavaScript framework for building applications and dynamic websites.\nMERN Stack consists of four main components or can say four main technologies:\nM stands for MongoDB ( Database ), mainly used for preparing document databases,s and is a NoSQL (Non-Structured Query Language ) Database System\nE stands for Express, mainly used for developing Node.js web framework\nR stands for React, mainly used for developing a client-side JavaScript framework\nN stands for js, mainly used for developing the premier JavaScript web server\n\n\nEach of these four technologies is important in providing an end-to-end framework for the developers. Even these four technologies play an important role in the development process of web applications.\nBefore MERN stack, it was earlier named as MEAN stack, MERN Stack is one of the variations of MEAN, here MEAN also comprises of four components or say four different technologies, i.e., M is for MongoDB, ' E ' is for Express, ' A ' is for Angular.js, and ' N ' is for Node, here if you will observe, then you can identify that in MEAN, ' A ', i.e., Angular.js is replaced by ' R ', i.e., React.js in MERN, the main reason behind is - MERN Stack is mainly used for faster development of smaller applications as compared with MEAN, MEAN stack is a mainly better option for large-scale applications. Still, it takes more time for the development of smaller applications. They also both have different structures comparatively.",
      "target_audience": [
        "This course is suitable for developers who have some experience working with the MERN stack and want to learn how to build a work management tool with complex MongoDB queries and different user interfaces for owners, admins, and employees. By the end of this course, you will have the skills and knowledge needed to create a fully functional work management tool with real-time notifications and access controls."
      ]
    },
    {
      "title": "Java Web Services and REST API with Angular Frontend",
      "url": "https://www.udemy.com/course/java-web-services-angular-dynamic-web-development/",
      "bio": "Build Java Web Services & REST API - with Spring & Spring Boot. Learn REST API & Web Services",
      "objectives": [
        "Build Java web services",
        "Understand and work with MySql",
        "Display dynamic web content",
        "Build dynamic web services",
        "Understand the Frameworks Spring and Springboot"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install Java SDK",
          "Install Java IDE",
          "Create Java Web Service Project",
          "Load the Project"
        ],
        "Create your first endpoint": [
          "Request GET method",
          "Adding Parameters",
          "Case specific output",
          "Create your endpoint"
        ],
        "Setup Database": [
          "Install MySql Workbench",
          "Install Xampp",
          "Connect and create Database",
          "Insert into Datebase Table",
          "Add content to your table"
        ],
        "Java Service and Mysql": [
          "JDBC Entity",
          "JpaRepository",
          "Mysql credentials and Get Service + Code Example"
        ],
        "Angular - Frontend": [
          "Angular ClI and project Creation",
          "Http Service request",
          "Fetch and display Data",
          "Adding Bootstrap",
          "Add Sanitizer",
          "Displaying video element",
          "Display list of video elements",
          "Display your own list of videos",
          "Did your front-end work?"
        ],
        "Dynamic Photo Display": [
          "Create photos Table",
          "Update Java Web Service with new Request Method",
          "Display Dynamic Photos Front end",
          "Say Hello"
        ],
        "Secure your App": [
          "OWSAP Top 10",
          "SQL Injections"
        ]
      },
      "requirements": [
        "Computer",
        "Internet"
      ],
      "description": "Looking to enhance your Java programming skills with web services and REST API development? Then look no further than our \"Java Web Services and REST API with Spring Boot\" course!\nThis course is perfect for intermediate to advanced Java developers who want to learn how to build modern web services and REST APIs using Spring Boot. We'll start by introducing you to the fundamentals of web services and REST APIs, as well as the Spring Boot framework. You'll learn how to create REST endpoints, handle HTTP requests and responses, and work with data in the form of JSON.\nAlong the way, you'll work on several real-world projects that will allow you to apply your knowledge in a practical way. You'll create a simple CRUD (Create, Read, Update, Delete) web service, implement user authentication and authorization, and even build a complete e-commerce REST API from scratch.\nOur instructors are experienced Java developers who have worked on countless web service and REST API projects. They will guide you through the process, providing you with the knowledge and expertise you need to build your own powerful REST APIs using Spring Boot.\nSo whether you're a Java developer looking to expand your skill set or a programmer looking to learn about web services and REST API development, this course is for you. By the end of the course, you'll be able to confidently create and deploy REST APIs using Spring Boot, making you a valuable asset to any team!",
      "target_audience": [
        "Web developers",
        "Java developers",
        "programmers",
        "Back-end developers"
      ]
    },
    {
      "title": "React Portfolio Project - React Training for Beginners",
      "url": "https://www.udemy.com/course/react-hooks-building-real-project-from-scratch/",
      "bio": "Build React Portfolio Project with My React Training for Beginners",
      "objectives": [
        "Build React Portfolio Project",
        "Write high quality code",
        "Create reusable hooks and components",
        "React Training with real React and React context usage"
      ],
      "course_content": {},
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "Some knowledge about React and optionally Redux"
      ],
      "description": "In this course we will build a Medium clone using React and React hooks as a React portfolio project. This React training is fully focused on fast and deep dive into creation of real application with React and hooks. We will start from scratch and step by step you will get close to finished real application. You will deeply understand how to structure your application, build reusable and understandable hooks and components and split code into smaller chunks of code. We will write code together in hooks way to make it pure and avoid data complexity.\n\n\nFor each lesson you'll get source code of the lesson, so it's easy to see the progress and get a working app on any lesson you want.\n\n\nWhat you will learn in this course:\nStructure and configure project\nWrite high quality code with React and hooks on real project\nCreate reusable hooks and components\nImplementing authentication\nUnderstand standard react hooks\nUnderstand rerendering of components using hooks\nWrite custom hooks\nGetting data from API with hooks\n\n\nIf you are feeling like you learned React but you still still missing hooks knowledge to build your own real application this course is what you need. This course is fully focused on creating the application without getting deep into basic knowledge of React!",
      "target_audience": [
        "This course is for you if you want to develop real project from beginning to the end",
        "This course is for everyone who is interested in learning react hooks",
        "This course is for you if you want to improve you knowledge of React and hooks"
      ]
    },
    {
      "title": "Go Java Full Stack With Spring Boot and Vue JS (Inc. Vuex)",
      "url": "https://www.udemy.com/course/go-java-full-stack-with-spring-boot-and-vue-js-inc-vuex/",
      "bio": "Heroku Cloud Deployment, PostgreSQL, Lombok, Maven, Vue-Router, Vuex, Hibernate, Full Stack Web Development",
      "objectives": [
        "Full Stack development with Spring Boot and Vue JS",
        "Vue Router",
        "Vuex State Management Service",
        "Spring Boot Model View Controller Architecture",
        "Font-Awesome usage in vue js"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Architecture Of All System",
          "What do We Try to Do in This Course?"
        ],
        "Setting Up Development Environment": [
          "Download and Install Java 11+",
          "Download and Install Intellij",
          "Download and Install PostgreSQL",
          "Download and Install Git",
          "Download and Install Lombok on Intellij - Pre Intellij 2021",
          "Download and Install Postman"
        ],
        "Overview for Basic Frameworks and Tools": [
          "Spring Boot Overview - Annotations, Beans, Configuration",
          "Rest API Overview - Http Methods",
          "SQL Overview - Basic CRUD Operations",
          "Lombok Overview - Getter, Setter, Constructors",
          "Git Overview - Git vs Github"
        ],
        "Restful Web Services - Overview": [
          "@RequestParam Annotation and How does it work?",
          "@PathVariable Annotation and How does it work?",
          "@RequestBody Annotation and How does it work?"
        ],
        "Spring Boot - Backend - Server Side": [
          "Source Code for the Backend",
          "Overview - Architecture of Backend Project",
          "Create Project with Spring Initializer",
          "Create Database on PostgreSQL with PgAdmin",
          "Configure Database Properties on Application Properties",
          "Entity Diagram",
          "Implement The User Entity Model Class",
          "Do you want to learn more about ID Generated Strategies? - Optional",
          "Implement The Device Entity Model Class",
          "Hibernate Overview",
          "Implement The Purchase Entity Model Class",
          "Implement the User Repository Class with JPA CRUD Repository",
          "Implement the Device Repository Class with JPA CRUD Repository",
          "Implement the Purchase Repository Class with JPA CRUD Repository + Projections",
          "Implement the User Service Class - Business Layer",
          "Implement the Device Service Class - Business Layer",
          "Implement the Purchase Service Class - Business Layer"
        ],
        "Overview for Spring Security - Optional": [
          "What is Authentication?",
          "What is Authorization?",
          "How does Spring Security handle Authentication and Authorization?"
        ],
        "Security Implementation": [
          "Load User by Username - User Details Service",
          "Configure Security - Authentication Manager and HttpSecurity",
          "Circular Reference Error - Spring Boot 2.6+"
        ],
        "JWT Implementation": [
          "JWT Overview and Install JWT Libraries",
          "JWT Helper Methods - Token Generation, Validation",
          "Implement JWT Authentication Filter"
        ],
        "Implement User Log In and User Sign Up": [
          "Authenticate User with Authentication Manager - Service",
          "Response Entity Overview",
          "Create Endpoints for User Log In and User Sign Up - Controller"
        ],
        "Other Endpoints - Rest Controller": [
          "Implement Device Controller - Rest Controller",
          "Implement Purchase Controller - Rest Controller",
          "Implement User Controller - Rest Controller"
        ]
      },
      "requirements": [
        "Basic Java knowledge and laptop"
      ],
      "description": "In this course, we will create a new project like online-technology-shopping.\n\n\nWhen I say online-technology-shopping application, we can think of it like that we will have a device-list page. Somehow users or customers will see these device-lists and they can buy one of them. Of course, at the end of it, this purchase will be stored and displayed later.\n\n\nAnd we will implement this project using Spring Boot, VueJS, and PostgreSQL.\n\n\nIn our project, we will implement CRUD operations. These CRUD operations will be for users and devices. We will use users for user sign-in, sign-up and authorization operations. And we will use the devices for creating, editing, deleting device operations.\n\n\nThese CRUD operations will be requested from VueJS. So on the backend, we will create an infrastructure for these CRUD operations and on the frontend, we will serve them with the user interface.\n\n\nOur project goes on with User and device operations.\nOur main operations will be user login, register, book-list, create-device, delete-device etc.\nAlso, we will go on with the role based application. So we will use different roles like “Admin”, “User”. Then we will provide different authorizations to these users according to the role.\nAnd this all things will be provided with a secure way in both Device and Spring Boot.\n\n\nWe will have two main components to implement our project.\nThese are server side and client side.\n\n\nIn Server Side:\n\n\nOf course here, our main library will be Spring-boot. We will implement the whole infrastructure on the backend with the Spring boot. It will provide easy and fast configuration to us.\n\n\nWe will implement the Model view controller architecture on our project.\n\n\nSpring-security will be one of the main topics in our application. Also, we will use JWT to provide security.\n\n\nIn Spring Boot, Data will be presented to the client as an API call so Spring Rest Controller will be used to handle it.\n\n\nWe will use PostgreSQL as Database. We can use other databases also but at the end of it we will deploy our codes to Heroku. Postgresql can be used on Heroku for free so we chose that.\n\n\nWe will also use Object Relational Mapping with Java Persistence API and Hibernate.\n\n\nYou know, We can map our database tables to objects with hibernate.\n\n\nWe will use JPA Repository and Crud Repository in Spring Boot.\nSo these repository templates will handle common database operations like save, update, find, delete.\n\n\nWith Spring Boot, we will also use the Lombok library to clear code.\nYou know that we don't want to implement getter, setter, equals and hashcode. So we can escape it using Lombok @Data or @Value annotation.\n\n\nWe will use Maven To handle all dependencies on the server side. Actually, here we can also use Gradle. Gradle provides better performance than maven but Maven is the most common one. So we'll go on with maven.\n\n\nFor our all services, we will create cloud deployment with Heroku. Heroku is an amazing free framework. We can deploy our spring-boot projects with some configuration over github easily. So At the end of the course, we will have an application on production and we will have a code on github that is accessible by everyone.\n\n\nThat's all about Server side.\n\n\nLet's talk about Client Side.\n\n\nWe will create a vueJS application on the client side and it will provide a cool user-interface. So we will create some pages like home-page, admin dashboard, login page and register-page. Then we will assign the server apis to these pages and we will consume and produce the data from the user-interface easily and user friendly.\n\n\nAt the end of it, we will build it and we will serve it to heroku also. So at the end of the course, we will have a live application on production.\n\n\nLast but not least, we will implement security and authorization on VueJS also. We will work with different roles and according to these roles, we will implement unauthorized and not-found pages on the user interface also.\n\n\nWe will see the details of them one by one.\n\n\nFor now, that’s all.\nThank you.",
      "target_audience": [
        "All curious developers about VueJS and Spring Boot"
      ]
    },
    {
      "title": "Full Stack Web Developer Masterclass - React - Next - Mongo",
      "url": "https://www.udemy.com/course/full-stack-web-developer-masterclass-react-next-mongo/",
      "bio": "Unleash Your Web Development Potential with the Full Stack Masterclass - Harnessing ReactJS, NextJS, MongoDB, MERN Stack",
      "objectives": [
        "Master Latest Versions of ReactJS, NextJS, MongoDB and MUI.",
        "Use their learned skills, knowledge and abilities to develop web applications",
        "Learn About Web Application Optimization, Security and SEO Management In ReactJS and NextJS",
        "Learn Basic, Intermediate and Advanced Concept Of Each Topic, Technology and Concepts In The Course",
        "Develop front end website architecture",
        "Design User Interface and User Interactions on web pages",
        "Develop adaptive content for multiple devices (cell phone, tablets, etc.)Ensure cross-platform optimization for mobile phones Ensure responsiveness",
        "Develop backend server architecture with serverless functions.",
        "Implementing Authentication, Global Context, Built-Ins and Customizations",
        "Showcase Your Skills By Completing Our Hands-On Milestone Project at the End Of The Course"
      ],
      "course_content": {
        "Introduction to the Journey": [
          "Course Overview",
          "Course Intro",
          "Setup - part 1",
          "Setup - Part 2",
          "Journey Walkthrough",
          "Getting Help"
        ],
        "Revising a Few Basics": [
          "HTML Basics to get started",
          "CSS Beginner",
          "Javascript - All you need to learn about the basics",
          "Modern Javascript",
          "Modules in Javascript",
          "API - Everything you need to know"
        ],
        "Understanding ReactJS - Basics": [
          "What is ReactJS",
          "Getting Started With Your First React App",
          "Understanding The React Folder Structure",
          "Understanding JSX, Rendering and Debugging",
          "What are components in React ?",
          "Props in React Components",
          "Why Use React ?"
        ],
        "Understanding ReactJS - Intermediate": [
          "A deeper understanding towards Conditional Rendering in React",
          "Hierarchy in React",
          "Introduction to hooks - useState() and Handling Events - Counter App",
          "The useEffect() Hook",
          "Rendering Lists in React - To do List App",
          "Context in React for Global State Handling",
          "Rule Of Hooks"
        ],
        "Understanding ReactJS - Advanced": [
          "Understanding Refs and the DOM",
          "Controlled and Uncontrolled Components",
          "Optimizing in React - useMemo() and useCallback()",
          "Optimizing In React - memoization",
          "Optimizing in React - Lazy Loading",
          "Optimizing in React - Debouncing",
          "Few More Advanced Concepts",
          "Some Importants extensions for React",
          "THE END",
          "Complete Your First React Certification"
        ],
        "What is NextJS and Why ?": [
          "Understanding WHAT, WHY AND HOW of NextJS.",
          "Getting Started with NextJS - Installation",
          "Understanding Layout of App Directory",
          "Creating Routes in NextJS",
          "Linking Routes in NextJS",
          "Structuring your Application with Layouts - In Depth",
          "Some More Files For Structuring - head.js, loading.js and error.js"
        ],
        "NextJS Advanced": [
          "Introduction to Client Side and Server Side Rendering in NextJS Components",
          "Client Side and Server Side Components - In Depth",
          "Some Points to Remember in SSR and CSR Components",
          "Data Fetching in NextJS",
          "Data Fetching - Advanced Concepts",
          "Patterns in Data Fetching",
          "Dynamic Data Fetching"
        ],
        "NextJS In-builts and Customizations": [
          "What is next.config.js and How to use ?",
          "Optimized NextJS HTML Tags",
          "Some Important Hooks in NextJS",
          "Polling App"
        ],
        "Milestone project with MongoDB, NextJS, React, MUI and Authentication": [
          "Project Intro",
          "Understanding MUI and Implementation",
          "Creating the Front-End Part 1 - The SignUp Page",
          "Creating the Front-End Part 2 - The SignIn Page",
          "Creating the Front-End Part 3 - The Listing Page",
          "Adding Static Functionality To The Listing Page",
          "Handling States in Sign In and Sign Up Page",
          "Why Using MongoDB as a Database - The Setup",
          "The Beginning of the Backend - Creating your first API - THE SIGNUP",
          "Connecting The Frontend By Passing the Input to the API and Saving to the DB",
          "The Beginning of the Backend - Part 2 - Setting Up the Authentication",
          "Completing the Authentication Setup And Integration with Front-End - Signin In",
          "Storing all the Data and Updates from the Listing Page to the Database",
          "Project Completion - Congratulations on becoming a Full Stack Web Developer",
          "Last But Not The Least - Deployment to the Production"
        ],
        "NextJS Latest Updates - 2023": [
          "Built-In SEO",
          "Using Route Handlers",
          "Optimizing Package Imports"
        ]
      },
      "requirements": [
        "No Programming Experience Needed. All We Require In This Course Is your DEDICATION !"
      ],
      "description": "Unlock Your Path to Full Stack Web Development Mastery! Join Now for a Self-Paced, Intuitive Masterclass – Your Gateway to Success!\n\n\nWhat's New?\nA React Certification Assignment By A Well-Known Organization. Join The Course To Avail yours.\nNextJS Latest Updates - Optimising Package imports ( NEW )\nNextJS Latest Updates - Built-In SEO ( NEW )\nNextJS Latest Updates - Using Route Handlers ( NEW )\nNextJS Latest Updates - Tips and Tricks - How to Read A Code Documentation  ( NEW )\nNextJS Latest Updates - Security Aspects With NextJS - Important  ( NEW )\n\n\nMaster the Latest Version of NextJS 14 with Serverless Functions\nUse MongoDB For Database CRUD OPS\nReact 18 Masterclass with core functionalities and optimizations\nMilestone Project For Boosting Your Confidence while Developing\nMUI for Design With Authentication\n\n\nPost This Course You will be able to:-\nA Full-Stack developer is a professional responsible for working on both front-end and back-end development processes. They design, develop, and maintain fully-fledged and functioning platforms with databases or servers. These servers do not need other third-party applications to build an entire system from scratch.\n\n\nSome FAQs and Perks of a Full Stack Developer:-\nWhat does a Full Stack Developer do?\nThe Full-Stack Developer designs and maintains websites and systems to serve a company's needs. They develop these platforms to function independently, not needing to rely on third-party services to remain consistent. They manage these services' client and server side, ensuring they're functional and usable.\nWhat are the duties and responsibilities of a Full Stack Developer?\nFull Stack Developers are responsible for designing and developing websites and platforms. They work with design teams to ensure that user interactions on web pages are intuitive and engaging. They also provide back-end functionality that can run smoothly from any device or browser type commonly used today.\nWhat makes a Good Full Stack Developer?\nGood Full-Stack developers are fluent in modern frameworks and know how to use the latest versions of JavaScript. In addition, they have an eye for design and can work with any website's layout so that it meets all legal requirements. They also need to be able to work in groups, as they often interact with design teams.\nWho does a Full Stack Developer work with?\nFull Stack Developers work alongside Back-End Developers, who specialize in developing and maintaining the server and the technical side of website development. As Full-Stack handles both sides of development, they often collaborate with those specializing in this form of development to ensure consistent functionality.",
      "target_audience": [
        "This Course Is For New Aspiring Computer Background Students Who Want To Learn Full Stack Web Development",
        "This Course is For Web Developers who wants to upskill for better hike in their salary",
        "This Course is For People who want to learn New And Updated Technologies"
      ]
    },
    {
      "title": "React JS 2025 Masterclass with MySQL & PostgreSQL Database",
      "url": "https://www.udemy.com/course/react-js-and-vite-masterclass-hands-on-project-course/",
      "bio": "Master React JS with Real-World Projects. You also get Complete MySQL and PostgreSQL Bootcamp to Master Database Design",
      "objectives": [
        "Setting up Visual Studio Code and Node.js for React development",
        "Creating a React App using Vite for optimized performance",
        "Writing and understanding JSX and React-SX Fragments",
        "Mastering Functional Components and their best practices",
        "Adding CSS Styling to React Components",
        "Building a Reusable Card Component in React",
        "Understanding Props, PropTypes, and defaultProps",
        "Implementing Conditional Rendering (If-Else, Ternary, Logical Operators)",
        "Rendering and managing Lists in React, including sorting and filtering",
        "Handling Events and Event Parameters in React",
        "Using the useState Hook to manage component state",
        "Creating a Digit Counter App using useState Hook",
        "Implementing Form Handling with onChange() Event Handler",
        "Building an E-commerce Form and a Color Picker App",
        "Mastering Updater Functions to modify states efficiently",
        "Updating Objects, Arrays, and Array Objects in State",
        "Developing a To-Do List App with Full Functionality",
        "Implementing useEffect Hook to manage side effects",
        "Creating a Digital Clock and Window Resizing App with useEffect",
        "Exploring useContext Hook for state management",
        "Using useRef Hook for direct DOM manipulation and optimizations",
        "Building a Stopwatch App in React"
      ],
      "course_content": {
        "Introduction to React JS and Vite Masterclass": [
          "Welcome to React JS and Vite Hands-On Project Course",
          "Free React JS Mastery Book - Grab Your Enrollment Gift",
          "Download and Installation of Visual Code Studio",
          "Project Setup and Live Server Installation",
          "Download and Installation of Node JS",
          "How to create React App",
          "Writing our first JSX code in React",
          "Understanding React JS Fragment"
        ],
        "Mastering React JS Components": [
          "Mastering Functional Component in React JS",
          "How to add CSS Styling in React",
          "How to create a Card Component in React"
        ],
        "Props in React JS": [
          "Introduction to Props in React JS",
          "Mastering Props, PropTypes and defaultProps in React JS"
        ],
        "Rendering in React JS": [
          "Conditional Rendering in React JS using If-Else Statement",
          "Conditional Rendering in React JS using Ternary operator",
          "Conditional Rendering in React JS using Logical Operator",
          "Multiple Conditional Rendering in React JS",
          "Add CSS Styling to Conditional Rendering in React JS"
        ],
        "List Rendering in React JS": [
          "List Rendering in React JS",
          "How to Render Multi-Array List in React JS using Key",
          "Sorting and Filtering List in React JS"
        ],
        "Event Handlers in React JS": [
          "Create Alert Box using Event Handler in React JS",
          "Event Parameters in React JS"
        ],
        "useState React Hook": [
          "Introduction to useState Hook in React Hooks",
          "Create Digit Counter using useState Hook in React JS"
        ],
        "onChange( ) Event Handler in React JS": [
          "Form Input using onChange( ) Event Handler in React JS",
          "Build Ecommerce Form using onChange( ) Event Handler in React JS",
          "Build a Color Picker App in React JS"
        ],
        "Updater Function": [
          "Introduction to Updater Function in React JS",
          "How to Update Objects in State",
          "How to Update Array in State",
          "How to Update Array Objects in React JS",
          "Create a To Do List App in React JS",
          "Styling To Do List App with CSS",
          "Add functionality on To Do List App"
        ],
        "useEffect React Hook": [
          "Introduction to useEffect React Hook",
          "Color Change using useEffect React Hook",
          "Get windows width and height using useEffect React Hook",
          "Create Digital Clock in React JS (Part 1)",
          "Create Digital Clock in React JS (Part 2)"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript is recommended but not required",
        "A computer (Windows, macOS, or Linux) with an internet connection",
        "Willingness to learn and apply new concepts through hands-on projects"
      ],
      "description": "Are you ready to master React JS with Vite and build real-world applications in 2025? Whether you're a beginner or an experienced developer looking to enhance your React skills, this Hands-On Project Course will guide you through everything you need to know to become proficient in modern React development.\nReact is one of the most in-demand JavaScript libraries for building fast and interactive user interfaces, and Vite is the next-generation build tool that makes React development faster and more efficient. In this comprehensive course, you will learn React from scratch, starting from setup and installation to building dynamic applications using React Hooks, Props, Conditional Rendering, Event Handling, List Rendering, and much more.\nThis is not just a theory-based course! You will build practical projects such as:\nA Color Picker App\nAn Ecommerce Form\nA To-Do List App\nA Digital Clock\nA Stopwatch\nAnd more!\nBy the end of this course, you will be equipped with the skills to build modern, interactive React applications and confidently apply your knowledge to real-world projects.\nWhat You Will Learn\n1. Getting Started with React & Vite\nIntroduction to React JS\nDownload and Installation of Visual Studio Code\nDownload and Installation of Node.js\nHow to create a React app with Vite\nWriting your first JSX code in React\nUnderstanding React-SX Fragment\n2. Mastering React Components & Styling\nMastering Functional Components in React JS\nHow to add CSS Styling in React\nCreating a Card Component in React\n3. Understanding Props and PropTypes\nIntroduction to Props in React JS\nMastering Props, PropTypes, and defaultProps\n4. Conditional Rendering Techniques\nUsing If-Else Statements for Conditional Rendering\nUsing Ternary Operators for Conditional Rendering\nUsing Logical Operators for Conditional Rendering\nImplementing Multiple Conditional Renderings\nAdding CSS Styling to Conditional Rendering\n5. Handling Lists and Events in React\nList Rendering in React\nHow to Render a Multi-Array List using a Key\nSorting and Filtering Lists in React\nCreating an Alert Box using Event Handlers\nUsing Event Parameters in React\n6. Mastering React Hooks\nuseState Hook\nIntroduction to useState Hook\nCreate a Digit Counter using useState Hook\nHandling Form Input using onChange( ) Event Handler\nBuild an Ecommerce Form using onChange( ) Event Handler\nBuild a Color Picker App in React JS\nIntroduction to the Updater Function in React JS\nHow to Update Objects in State\nHow to Update Arrays in State\nHow to Update Array Objects in React JS\nCreate a To-Do List App in React JS\nStyling the To-Do List App with CSS\nAdding Functionality to the To-Do List App\nuseEffect Hook\nIntroduction to useEffect Hook\nImplementing Color Change using useEffect Hook\nGet Window Width & Height using useEffect Hook\nCreate a Digital Clock in React JS\nuseContext Hook\nIntroduction to useContext Hook\nuseRef Hook\nIntroduction to useRef in React JS\nInspect Color Change with useRef\nBuild a Stopwatch in React JS\n\n\nWho Should Take This Course?\nThis course is designed for:\nBeginners who want to learn React JS from scratch.\nJavaScript developers looking to advance their skills in modern front-end development.\nWeb developers transitioning into React.js development.\nFreelancers & Entrepreneurs who want to build dynamic, interactive web applications.\nComputer science students or programming enthusiasts eager to gain hands-on experience.\n\n\nCourse Requirements\nBasic knowledge of HTML, CSS, and JavaScript is recommended but not required.\nA computer (Windows/Mac/Linux) with internet access.\nInstallation of Visual Studio Code and Node.js (Step-by-step guidance provided in the course).\nA willingness to learn, practice, and build real-world projects!\n\n\nWhy Take This Course?\nHands-on approach: Build multiple real-world projects.\nLatest techniques: Learn React.js with Vite for blazing-fast development.\nStep-by-step guidance: Easy explanations with practical examples.\nCareer-boosting skills: Master React.js and stay ahead in 2025!\nIf you’re serious about learning React JS and want to build powerful, real-world applications, this course is for you!\nEnroll now and start building amazing React applications today!",
      "target_audience": [
        "Absolute Beginners in React JS who want a practical and hands-on learning approach",
        "Frontend Developers looking to upgrade their skills with React and Vite",
        "Web Developers who want to master modern React development techniques",
        "Computer Science Students and self-taught learners interested in React",
        "Anyone who wants to build real-world projects while learning React"
      ]
    },
    {
      "title": "Understand CodeIgniter Framework 3",
      "url": "https://www.udemy.com/course/codeigniter-premium-course/",
      "bio": "Premium Course on CodeIgniter Application Development Framework for PHP. Compatible with version 3 and above",
      "objectives": [
        "How to easily create website using CodeIgniter",
        "How to use CodeIginter framework",
        "Good Knowledge of MVC concept",
        "Making use to MVC under CodeIngiter"
      ],
      "course_content": {
        "Background": [
          "Before we start",
          "Sort history of CodeIgniter",
          "Downloading CodeIgniter",
          "Setting-up web-server",
          "Installing CodeIgniter",
          "CodeIgniter's development design pattern MVC",
          "Understanding the pattern of URL under CodeIgniter",
          "About the Author",
          "Linkedin and Instagram links"
        ],
        "Controller": [
          "Controller - Part 1",
          "Controller - Part 2",
          "Controller - Part 3",
          "Controller part 4",
          "Connect on LinkedIn, \"It's good!\""
        ],
        "Before we start with View": [
          "Downloading IDE (Netbeans)",
          "Bootstrap",
          "Discussion forum"
        ],
        "Understanding View": [
          "Integrating template to project - Part 1",
          "Integrating template to project - (Header and Footer) Part 2",
          "Integrating template to project - (Header and Footer) Part 3",
          "Integrating template to project - (Header and Footer) Part 4",
          "Sending data to view",
          "About Project files"
        ],
        "Model under CodeIgniter": [
          "Understanding PhpMyAdmin tool",
          "Before we start with Model",
          "How to create table into database from CodeIgniter",
          "How to add record into database from CodeIgniter",
          "How to read data from data arrays",
          "We have started AI related courses",
          "Project files for lectures above"
        ],
        "Mini project 1 - A simple login for user registration and login": [
          "Registration form",
          "Form validation under CodeIgniter Part 1 - Basics",
          "Form validation under CodeIgniter Part 2 - Advance",
          "Take a look on query builder class",
          "Login form Part 1",
          "What is session",
          "Login form Part 2",
          "Login form Part 3",
          "Mini project files (login form)"
        ],
        "Working with huge data": [
          "What is pagination",
          "Pagination under CodeIgniter Part 1",
          "Pagination under CodeIgniter Part 2",
          "Project files"
        ],
        "Mini project 2 : Image gallery": [
          "File upload form",
          "Image gallery - Part 1",
          "Image gallery - Part 2",
          "Image gallery - Part 3 - Embedding force download",
          "Image gallery - Part 4 - Download all images in form of zip file",
          "Project files for image gallery mini project"
        ],
        "Extending the framework": [
          "Take a look at article on how to extend helpers",
          "Extending helpers and creating custom helpers - Part 1",
          "Extending helpers and creating custom helpers - Part 2",
          "Extending helpers and creating custom project files",
          "Take a look at article on how to extend libraries",
          "Creating custom libraries",
          "Creating custom libraries project files",
          "Extending the CodeIgniter's library",
          "Extending the CodeIgniter's library project files"
        ],
        "CodeIgniter miscellaneous": [
          "5 components on webpage",
          "Javascript with CodeIgniter (basics)",
          "AJAX call to CodeIgniter's function Part 1 - Integrating Jquery",
          "AJAX call to CodeIgniter's function Part 2 - AJAX call",
          "AJAX call to CodeIgniter's function Part 3 - AJAX call",
          "AJAX call to CodeIgniter's function Project files",
          "Security best practices",
          "Understanding CodeIgniter configurations bit more",
          "CodeIgniter routes",
          "Migrating CodeIgniter version 2.2.x to 3.0.x",
          "Claim your certificate"
        ]
      },
      "requirements": [
        "PHP basics"
      ],
      "description": "What is the course about ?\n\nThis course is about Codeigniter framework,more information about this framework is provided at the end of the document. Codeigniter framework for PHP is a fabulous for rapid application development. Our team has researched and created this easy-to-understand course for you.\nHow is the course structured?\n\nThis structure of course is researched and created by a team, it's easy to understand. StudyEasy!\nWhy take this course?\nThis is a very easy to understand, our team have made every possible effort to make this course short and powerful.\n\n\nABOUT FRAMEWORK\n\n\nWhy CodeIgniter?\nFramework with a small footprint\nCodeIgniter 3 has a 2MB download, including the user guide.\nClear documentation\nThe CodeIgniter User Guide comes with the download. It contains an introduction, tutorial, several \"how to\" guides, and then reference documentation for the components that make up the framework.\nCompatibility with standard hosting\nCodeIgniter 3 only needs PHP 5.2.4, and plays nicely with almost all shared or dedicated hosting platforms. Many webapps need a database, and CodeIgniter supports the most common, including MySQL.\nNo restrictive coding rules\nUse your own coding and naming conventions, with only a few caveats that deal with classname conflicts. CodeIgniter looks to empower you, not shackle you.\nSimple solutions over complexity\nCodeIgniter encourages MVC but does not force it on you.\nExceptional performance\nCodeIgniter consistently outperforms most of its competitors.\nNo large-scale monolithic libraries\nCodeIgniter is not trying to be all things to all people. It is a lean MVC framework, with enough capabilities to improve your productivity, while providing for third-party addons/plugins for additional functionality.\nNearly zero configuration\nMuch of the CodeIgniter configuration is done by convention, for instance putting models in a \"models\" folder. There are still several configuration options available, through scripts in the \"config\" folder.\nNo need for a template language\nCodeIgniter comes with a simple, substitution based, templating tool. Addons/plugins are available for most of the full-blown templating engines if that is what you are used to.\nSpend more time away from the computer\nDon't we all want it? CodeIgniter is easy to learn and to get proficient with.\n#Codeigniter #Codeigniter3 #Rapid application development\n#BCIT #Basics #Background #MVC #PHP #studyEasy #Easy Course\n\n\n#Framework #Bootstarp #Performance #Websites",
      "target_audience": [
        "PHP developers",
        "People willing to create websites and web application",
        "PHP basic knowledge required",
        "People who what rapid application development",
        "PHP basics"
      ]
    },
    {
      "title": "Docker for beginners",
      "url": "https://www.udemy.com/course/docker-for-beginners-q/",
      "bio": "Learn to deploy your applications in Containers.",
      "objectives": [
        "Setup Docker Desktop",
        "Create account on Docker hub",
        "Run a Docker container",
        "Create a Docker image",
        "Run a Docker image",
        "Publish a Docker image to Docker hub",
        "Pull a Docker image"
      ],
      "course_content": {
        "Docker Setup": [
          "Introduction",
          "What is Docker",
          "What can Docker be used for",
          "Docker Architecture",
          "What is Docker Desktop",
          "Installing Docker Desktop",
          "Installing Docker Part 2",
          "Exploring Docker Desktop",
          "What is Docker Hub",
          "Run a sample Container",
          "Create a docker image",
          "How to run a Docker image",
          "How to publish a Docker image",
          "How to pull a Docker image"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Docker is an open-source project that automates the development, deployment and running of applications inside isolated containers. Containers allow developers to bundle up an application with all of the parts it needs, such as libraries and other dependencies, and ship it as one package.\n\n\nDocker is both a daemon (a process running in the background) and a client command. It’s like a virtual machine but it’s different in important ways. First, there’s less duplication. With each extra VM you run, you duplicate the virtualization of CPU and memory and quickly run out resources when running locally. Docker is great at setting up a local development environment because it easily adds the running process without duplicating the virtualized resource. Second, it’s more modular. Docker makes it easy to run multiple versions or instances of the same program without configuration headaches and port collisions.\nThere are  several reasons to use Docker. I’ll focus here on three: consistency, speed and isolation. By consistency, I mean that Docker provides a consistent environment for your application from development all the way through production — you run from the same starting point every time. By speed, I mean you can rapidly run a new process on a server. Because the image is preconfigured and installed with the process you want to run, it takes the challenge of running a process out of the equation. By isolation, I mean that by default each Docker container that’s running is isolated from the network, the file system and other running processes.",
      "target_audience": [
        "Beginners to Docker"
      ]
    },
    {
      "title": "AWS BUNDLE- Master COMPLETE Amazon Web Services",
      "url": "https://www.udemy.com/course/complete-amazon-web-services-bundle-2018/",
      "bio": "Learn all AWS services like lambda, S3, EC2, VPC and AWS fundamental concepts. A Beginners guide for AWS certification.",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Amazon Cloud- Amazon Web Services.",
        "Having command over all the options, services and tools available.",
        "You could develop Mobile, Web, IoT, AI, and other applications.",
        "Learn to create an Object Storage, Alexa ChatBOT, DevOps Toolchain, etc",
        "You would learn about various Machine Leaning, DevOps, Security and other services",
        "You would also learn about Mobile, Analytics, Compute, Storage, Database and other cloud services"
      ],
      "course_content": {
        "Introduction": [
          "AWS Introduction",
          "Create an account"
        ],
        "Compute": [
          "What is EC2? How to create EC2 instance?",
          "Connecting Amazon EC2 instance from Windows using PUTTY",
          "Creating simple web application and deploying them using AWS EC2",
          "Deploying sample web application with the help of elastic beanstalk.",
          "Deploying python web application with the help of elastic beanstalk.",
          "Launch a Virtual Machine",
          "Register a Domain",
          "Create Backend for Mobile App",
          "Connect an IoT device",
          "Build using Virtual Server",
          "Start Development Project",
          "Deploy Serverless Microservice",
          "Build a Web app"
        ],
        "Containers": [
          "Building docker image locally",
          "Public Repository",
          "Private Repository",
          "Creating cluster for AWS Fargate",
          "Creating task for AWS Fargate",
          "Running the tasks for the first time",
          "Accessing the application and creating more similar tasks",
          "Creating cluster for AWS ECS with EC2",
          "Defining Task",
          "Running Task",
          "Creating and Running Services",
          "Installing eksctl",
          "Creating Cloudformation stack",
          "Starting up minikube cluster",
          "Creating Pod with ECR image",
          "Creating Replicaset and Scaling UP/DOWN",
          "Configuring Kubernetes cluster",
          "Creating Deployment and Service",
          "Accessing application"
        ],
        "AWS Services": [
          "AWS EC2",
          "Configuring EC2",
          "Launching EC2 instance",
          "AWS VPC",
          "VPC",
          "AWS EC2 container",
          "AWS Beanstalk",
          "PRACTICAL- Beanstalk",
          "AWS Lambda",
          "AWS Lightsail",
          "Aws Analytics EMR",
          "Aws Analytics Kinesis",
          "PRACTICAL- EKS",
          "PRACTICAL- ECS",
          "PRACTICAL- Batch",
          "Aws Database intro",
          "Aws Database DynamoDB",
          "Create a Table in DynamoDB",
          "Add rows and columns using form and Json in Dynamodb",
          "Scan and Query with Filter table",
          "Aws Database Elasticache",
          "Aws Database RDS",
          "Create RDS database",
          "Aws Database Redshift",
          "Aws Storage EBS",
          "Aws Storage EFS",
          "Aws Storage Gateway",
          "Aws Storage Glacier",
          "Aws Storage S3",
          "Cloud Formation Designer",
          "Quiz- AWS Storage"
        ],
        "Data Preparation, Visualization and Analysis with AWS Quicksight": [
          "Getting Started with Quicksight",
          "Importing dataset and understanding group and values",
          "Creating Treemap and Customizing charts",
          "Data Preparation- Editing Dataset before creating Charts",
          "Create a Calculated Field using Functions- ceil and concat",
          "More calculated fields",
          "Creating Filters and Excluded list",
          "Map Chart and Conditional Formatting",
          "Pivot table"
        ],
        "Devops on AWS": [
          "Creating first code commit repository",
          "Creating new branch and pushing content into it",
          "Code Build 1",
          "Code Build 2",
          "Code Build 3",
          "Creating Source, Build and Deploy stage in AWS Code Pipeline Part 1",
          "Creating Source, Build and Deploy stage in AWS Code Pipeline Part 2",
          "Cloud 9",
          "Running flask application in Cloud 9",
          "Deleting Cloud 9 environment"
        ],
        "Understanding Lambda functions": [
          "AWS CLI- Part-1",
          "AWS CLI- Part-2",
          "How lambda works internally",
          "Handler Function",
          "Event Object",
          "Context Object",
          "Callback object",
          "Working with Logs",
          "Creating Lambda function with ZIP files",
          "Creating a Lambda function",
          "Connecting with API Gateway as Trigger",
          "Passing Information through API Gateway",
          "Writing data to DynamoDB",
          "Reading data from DynamoDB"
        ],
        "Amazon Redshift": [
          "Create a Redshift Cluster",
          "Redshift Query Editor and JDBC odbc connection",
          "Cluster Properties and Actions",
          "Setting up cloudwatch alarms",
          "Execute SQL queries on Redshift",
          "Save and Schedule SQL queries",
          "Database connections with new tab in Query editor"
        ],
        "Cognito Mobile": [
          "What is Amazon Cognito?",
          "Amazon Cognito (optional reading)",
          "Cognito In-depth",
          "Cognito- Practical",
          "Mobile Hub",
          "Mobile Hub {demo}",
          "AppSync",
          "Mobile AppSync {demo}",
          "DeviceFarm",
          "Mobile DeviceFarm {demo}",
          "Mobile Analytics",
          "Mobile Analytics {demo}",
          "Quiz- AWS Mobile and Cognito"
        ],
        "AWS Deep Composer": [
          "Overview- Deep composer",
          "Getting started with Music Studio",
          "Using GAN to generate other instruments"
        ]
      },
      "requirements": [
        "No prerequisites at all. You just need a little experience of doing GOOGLE search only ! But if u are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "In this course, you would be learning a wide range of tools and services available on Amazon Web Services (also know as AWS for short). You will be learning all the available services under catalog, and things we can do with each service provided with platform and Infrastructure categories. This is a Bundle course, with very large learning content spanning more then 17 hours. So take time to learn and practice, and we are here to support you in your learning adventure on AWS. And if you dedicate your time in learning AWS skills and practice them accordingly, you could simply learn AWS in 30 days.\nIf you are preparing for any kind of AWS Certifications, then you can take this course to build up your overall skills on wide range of tools and services in almost all the categories available on AWS. On completing this course, you would be very confident on your AWS cloud skills.\nWhat is AWS?\nAWS or Amazon Web Services is one of the leading cloud computing platform where you can use a wide array of cloud services to create and manage almost anything from database to machine learning models and much more.\nYou will be learning each of them in some depth building practical demonstration, and certain projects on topics like Lambda, IAM, API Gateway, etc. At later parts we would develop and deploy our test applications on AWS.\nThis course covers wide range of AWS services including-\nSTORAGE Services-  S3, Glacier, EBS, EFS, Storage Gateway\nCOMPUTE Services-  EC2, Beanstalk, Lambda, Container, Lightsail, VPC\nDATABASE Services-  DynamoDB, Elasticache, RDS, Redshift\nANALYTICS Services-  Kinesis, Elastic Map Reduce, Athena, Cloudsearch, Quicksight\nMOBILE Services-  Mobile Hub, AppSync, Device Farm, Pinpoint\nACCESS MANAGEMENT- IAM, Cognito, Cloud Watch\nAWS DEVELOPER TOOLS- Cloud9, Code Build, Code Commit, Code Pipeline, Code Star\nMACHINE LEARNING- Amazon Comprehend, Lex, Polly, Amazon Rekognition, Transcribe and Translate, Sagemaker\nGAME, Augmented Reality and Virtual Reality- Gamelift, Sumerian\nMIGRATION Services- Migration Hub, Snowball\nAPPLICATION INTEGRATION- Amazon MQ, Simple Notification Service, Simple Queue Service, Step Function, SWS\nSECURITY Services- Artifact, Certificate Manager, Cloud HSM, Directory Service, Guard Duty, Inspector, Secrets Manager, Single Sign on, WAF and Shield.",
      "target_audience": [
        "Anyone who just wants to learn and test Amazon Web Services Platform or any developer willing to develop his/her application over Amazon Cloud- Amazon Web Services."
      ]
    },
    {
      "title": "Package Development for Laravel & PHP",
      "url": "https://www.udemy.com/course/laravel-packages/",
      "bio": "Learn to build your own reusable packages for open source or profitable projects.",
      "objectives": [
        "Create your own packages for Laravel",
        "Reuse code in different projects",
        "Add ode coverage to your packages with php unit",
        "Make your own packages available in Packagist"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & What is a Package",
          "Creating your first package",
          "How to autoload classes in your packages",
          "Facades, Service Container & Service Providers explained",
          "How to add Package Auto-Discovery in Laravel",
          "How to test your packages",
          "How to add routes to your package",
          "How to add controllers to your package",
          "How to add views to your packages",
          "Allow the users to overwrite the package views",
          "How to allow configuration in your packages",
          "How to add models and migrations to your packages",
          "How to allow to modify migrations in your packages",
          "How to add translations to your packages",
          "How to add assets to your packages",
          "How to add Code Coverage to you packages",
          "Creating a Real Package",
          "How to use Git & Github with your packages",
          "How to add Semantic versioning to your packages",
          "What is the README file for",
          "How to choose a License"
        ]
      },
      "requirements": [
        "PHP programming experience is needed"
      ],
      "description": "Stop repeating code\nHas it happened to you that, when you are coding, you say to yourself:\nI already wrote this feature!\nBut, what you do not remember is when you did it, or where you have it, and starting to search at that precise moment means leaving the flow in which you are working on to burn time in winding searches, hoping not to repeat what has already been done.\nConsuming your time and energy on useless things; not only delays your work, it’s also frustrating, cuts off your inspiration and represents less professional quality; therefore, slower and lower income.\nThe master key\nWhat if you could immediately use all the code you've already written, by installing a single command?\nThe key is to extract your code to a package; this way you will have immediate access whenever you need to use the resources you have already created.\nSurely you have already heard this!\nBut if you haven't implemented it in your development practices yet, it could be for several reasons:\nYou have searched for FREE video tutorials that show you a part of the puzzle, but there are always missing pieces to achieve it and after many tries, you finally get tired of searching.\nYou have bought courses, and watch long, unedited videos at 2× speed learning any or very little, which discourages you from investing again.\nYou have found a lot of information about it, but you don't know what is really going to help you and you feel confused.\nIn the end, all this has made you take a step back and continue with the same rudimentary practice of copy - paste or rewrite your code every time you need it, even if it is a real headache.\nHow to do it right?\nHave you ever wondered what is the simple, effective and fast way to make a package?\nFirst of all, you must be clear that you can find EVERYTHING on the web, but although there is a lot of “FREE” content, everything has a price and the most expensive is: your precious time.\nGiving value to your time and your intelligence while you learn is the main source of income in your near future.\nIf you get rid of the stress of looking for something good and \"FREE\", having to read many reviews of what you randomly find to learn \"FREE\", if you have questions and do not find the answers in what you are learning \"FREE ”; if you get rid of all this and decide to invest a few dollars and decide not to continue spending your precious time of life that is not \"FREE\", I assure you that in a few hours you can learn to pack efficiently and you will start flowing in your projects more happily.\nIf you are tired of searching and not finding, if you want to access professionally, and high quality content, by and for a professional web developer; this course is your answer.\nWith this Course you will achieve in just 2 hours:\nOptimize your time and your productive energy.\nFlow in the development of your applications without having to stop to solve things that you have already done.\nimplement a good practice, as all professional web developers do.\nCourse Features:\nThis course has a duration of 2h 04m.\nIt is distributed in 21 very short and clearly explained lessons, which will take you step by step on how to build packages for Laravel.\nYou will have access to compact and well-explained content, to achieve your goal in the shortest possible time.\nYou will access carefully produced material with excellent audio and video quality in each of the lessons.\nOther benefits:\nWith this Course, you can learn anytime, anywhere and at your own pace.\nUsing packages prevents you from repeating codes that you have already created.\nUsing packages will optimize your resources and work faster.\nYou will not burn your time and energy looking for resources that you have already worked on.\nYou will not cut your inspiration in the creation of new projects.\nUsing your packages you can focus your skills on building new ideas.\nCourse Outline\nIntroduction & What is a Package\nIn this lesson we quickly review what packages are and what we need to start creating them.\nCreating your first package\nIn this lesson we create a package from scratch and learn how to use it in a Laravel application locally.\nHow to autoload classes in your packages\nIn this lesson we learn how to automatically load our package classes using PSR-4\nFacades, Service Container & Service Providers explained\nIn this lesson we learn what the Laravel Service Container is, what Service Providers are and how to create them, and what Facades are and how to create them.\nHow to add Package Auto-Discovery in Laravel\nIn this lesson we add a ServiceProvider and a Facade that are automatically registered to make it easier to use our package in Laravel.\nHow to test your packages\nIn this lesson we configure PHPUnit and add tests to our package in the same way that we would if we were inside a Laravel application.\nHow to add routes to packets\nIn this lesson we learn how to define routes and load route files that can be used by applications that install our package.\nHow to add controllers to your package\nIn this lesson we learn how to use controllers in our packages, and how to use them without using namespaces.\nHow to add views to your packages\nIn this lesson we learn how to load our package views with namespaces, and how to use them.\nAllow the users to overwrite the package views\nIn this lesson we give the end user the option to publish the views of our package so that they can modify them according to their requirements.\nHow to allow configuration in your packages\nIn this lesson we learn how to add configuration files to our Laravel packages and how to allow the end user to modify these configurations.\nHow to add Models and Migrations to your packages\nIn this lesson we learn to provide migrations and templates to the end user of our packages\nHow to allow to modify Migrations in your packages\nIn this lesson we allow the end user of our package to be able to publish the migrations in order to modify it according to their needs.\nHow to add translations to your packages\nIn this lesson we learn how to auto-load and publish PHP and JSON translations to our Laravel packages.\nHow to add assets to your packages\nIn this lesson we learn how to publish static CSS and JS files so that they can be used immediately after publishing.\nHow to add Code Coverage to you packages\nIn this lesson we learn what it is and how to use Code Coverage in our packages and in any PHP application.\nCreating a Real Package\nIn this lesson we create an actual package that allows executing the storage:link command on servers shared with cpanel without console access.\nHow to use Git & Github to publish on Packagist\nIn this lesson we initialize our package's local repository with GIT, publish it to GITHUB, and finally add it to Packagist so it can be installed into any Laravel application using Composer.\nHow to add Semantic versioning to your packages\nIn this lesson we learn about the semantic versioning specification and how to implement it in our packages.\nWhat is the README file for\nIn this lesson we learn what a README file is and what it is for as we create one for our package.\nHow to choose a License\nIn this lesson we learn how to choose and add a license to our packages according to the needs of the project.",
      "target_audience": [
        "PHP Developers",
        "Laravel Developers",
        "Web Developers"
      ]
    },
    {
      "title": "XML XSLT - Crash Course for Beginners",
      "url": "https://www.udemy.com/course/xml-xslt-crash-course-for-beginners/",
      "bio": "Quickly Learn basics of XML XSLT (Stylesheet) & start creating the web applications which use XML aggressively",
      "objectives": [
        "Get a strong hold on XML Stylesheet (XSLT)",
        "Use XML properly in JavaScript & other programming & script languages",
        "Build XML-based documents & develop XML-based Projects with ease"
      ],
      "course_content": {
        "Introduction & Overview": [
          "Introduction & Overview of the Course",
          "What is XML?",
          "What is XSLT?"
        ],
        "XML XSLT": [
          "Syntax, <template> & <value-of> Tags",
          "<for-each> & <sort>",
          "<if> & <choose>",
          "<Key> & <message>",
          "<apply-template> & <import>"
        ],
        "Bonus Lecture: What Next?": [
          "What's Next?"
        ]
      },
      "requirements": [
        "Basics of XML",
        "Basics of HTML",
        "Basics of Internet"
      ],
      "description": "This course is for anyone who is interested in quickly learn the XML XSLT (EXtensible Stylesheet Language Transformation) & it's power to utilize it in Web Development. Here I will teach you how to write the stylesheet of the XML documents using XSLT standard & display them properly in the web browsers like HTML table etc.\nCurrently every web site or web service offer support to XML. This course will give you the strong basic understanding of XML XSLT using practical implementation on screen & help you implement it in your web development projects.\nI designed this course for anyone including non-technical person. So if you are not a developer and still interested in learning about the XML XSLT & see how it works then this course is for you.\nHere we will start from zero & go to higher level very quickly. You don't need multiple hours long course to learn XML Stylesheet (XSLT). This course will make you strong enough for the interviews, your college projects, office projects, your freelancing projects to build basic & complex Web Services as well as applications.",
      "target_audience": [
        "Anyone interested in building their career in Web Development",
        "Anyone interested in learning web development",
        "Anyone interested in learning XML & XML Schema",
        "Anyone going to attend an Interview for a Web Developer & want to revise their basics"
      ]
    },
    {
      "title": "Angular 8 and 9 - Elements",
      "url": "https://www.udemy.com/course/angular-elements/",
      "bio": "Learn how to create Angular 9 Element and use it in non-angular applications",
      "objectives": [
        "Developers/Students will learn to create Angular 7 and 8 Elements and use them in non Angular applications. They will enable teams/projects in organization to reuse the Angular 7/8 Elements.",
        "The takeaway of this course is to use Angular Components in non Angular applications!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Why Angular Element?",
          "Who should take this course?",
          "Tools and Software Required for this course",
          "What is Web Component?",
          "Introduction to Angular CLI",
          "Installing Angular CLI and creating first Angular application"
        ],
        "Create First Angular Element": [
          "Preparing Angular CLI project for Angular Element development",
          "Demo - Installing required packages to create Angular Elements in our project",
          "Demo - Add logic to a component to display \"Hello World\" title with data binding",
          "Demo - Add the root module logic to bootstrap Angular Element",
          "Demo - Bundle Angular Element",
          "Demo - Using Angular Element in simple HTML page",
          "Demo - Install and configure Bootstrap 4.x framework in Angular Element project",
          "Download Source Code"
        ],
        "Angular 8 Changes": [
          "What's new in Angular 8?",
          "Demo - Angular 8 Element",
          "Download Source Code"
        ],
        "Angular Element - Communication with DOM": [
          "Create new Angular Element with Input and Output properties",
          "Demo - Input and Output properties with Angular Element",
          "Download Source Code"
        ],
        "Integrating Highcharts chart with Angular Element": [
          "Getting ready to use Highcharts chart library with Angular Element project",
          "Demo - Installing and configuring Highcharts chart library",
          "Demo - Create Highcharts Angular Element",
          "Demo - Using Angular Element in simple HTML page",
          "Download Source Code"
        ],
        "A closer look at REST API build with Node JS, Express JS and Mongo DB": [
          "Introduction to Mongo DB",
          "Demo - Creating Mongo DB database, collection and inserting the required data",
          "Introduction to back end application template",
          "Demo - Installing and understanding the application template of REST API",
          "Download Source Code"
        ],
        "Passing REST API data to Angular Element": [
          "Demo - Preparing application to accept the data from REST API",
          "Demo - Writing service and component logic to render Highcharts chart",
          "Demo - Using Angular Element in a simple HTML",
          "Demo - Display multi series Highcharts chart",
          "Download Source Code"
        ],
        "Integrating Angular Material Table with Angular Element": [
          "Introduction Angular Material table",
          "Demo - Preparing our application for Angular Material table integration",
          "Demo - Using Angular Element in simple HTML page",
          "Adding Sorting and Filtering functionality in our Angular Element",
          "Demo - Modifying Angular project for Sorting and Filtering functionality",
          "Download Source Code"
        ],
        "Build weather report and forecast widget Angular Element": [
          "Getting a open weather API key to fetch the city wise weather data",
          "Demo - Getting a open weather API key",
          "Weather report widget as an Angular Element",
          "Adding a service to fetch weather report data",
          "Create current Weather Report components",
          "Using Weather report widget element in simple HTML page",
          "Creating forecast Weather Report Angular Element",
          "Download Source Code"
        ],
        "Using Angular Element in React application": [
          "Using Angular Element in React JS Application",
          "Demo - Create and run first React application",
          "Demo - Using Angular element in React application",
          "Download Source Code"
        ]
      },
      "requirements": [
        "Developers/Students must know Angular 6/7 along with Typescript. They should have basic knowledge of Bootstrap Framework 3/4. They should have an introductory knowledge of Angular CLI latest version.",
        "Having a knowledge of back end development will be an added advantage."
      ],
      "description": "Starting from Angular 2 to 8 framework, Angular comes with number of features which we have used in our Angular applications by designing and developing Angular Components. For example - Rich data binding support, Angular Directives, Pipes, Dependency injection, HTTP Services, Differential Loading, Opt-in Ivy support and many more. How about using these component which uses these features in Non-Angular Applications like jQuery, JavaScript, React JS and other JavaScript frameworks and libraries?\nThis course is the answer of this question. In this course, we will use Angular Components in Non-Angular applications by bundling them as Angular Elements. Here, you will learn how to create new Angular Elements, bundle them and use them in Non-Angular application.\nDuring the course, we will see number of examples like - Hello World Angular Element, Communication between Angular Element and DOM and vice versa, Using Highcharts chart as Angular Element, Using Angular Material table as Angular Element and developing weather report widgets. Finally, use these elements in React JS application.",
      "target_audience": [
        "Developers/Students who have a good knowledge of Angular 6/7 and have a good knowledge on Typescript.",
        "Developers who wants to use Angular components in non Angular applications like JavaScript, React JS and other JavaScript libraries and frameworks!"
      ]
    },
    {
      "title": "Basic Python for Beginners",
      "url": "https://www.udemy.com/course/basic-python-for-beginners/",
      "bio": "Build a foundation of Python and become a programmer!",
      "objectives": [
        "Learn the basics of Python",
        "Learn how to use Anaconda and Jupyter Labs",
        "Learn the importance of Python",
        "Understand the importance of Python today",
        "Learn how to retrieve user input, basic methods and statements",
        "Learn how to create and use variables of the most basic data types",
        "Build a solid foundation of programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "Programming Support",
          "What is Python?",
          "Software Download and Installation",
          "Software Tour and Project Creation"
        ],
        "Course Lectures": [
          "First Line of Code and Text Shortcuts",
          "Variables and Data Types",
          "Math Functions with Variables",
          "Retrieving User Input",
          "The If Statement",
          "Additional Operators and Nested If Statements",
          "Basic Text Methods",
          "Basic Math Methods",
          "Data Type Conversion",
          "The While Loop",
          "The For Loop",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "No knowledge is needed, just a computer"
      ],
      "description": "Welcome to Basic Python Programming for Beginners!\nMy name is Matthew Dewey, lead programmer at Programming Tut. I am an experienced programmer, having received several accommodations on programming in my formal education as well as taught several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in a fun and easy manner. In this course I do just that with the Python programming language.\nPython, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving programming over any other language. Of course, it goes without saying that Python is an excellent language, but do you know what is required of you to start programming Python?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course.\nI help you:\nInstall your software, Anaconda\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nas well as BONUS methods and code!\nGo no further if you're looking for the course that will guide you into the world of programming! With my course I can guarantee that the knowledge you learn will help you get a head-start in Python programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "For those keen on learning Python this is the course for you!"
      ]
    },
    {
      "title": "Web Development : Mastering MERN Stack",
      "url": "https://www.udemy.com/course/mastering-mern-stack/",
      "bio": "Guide to Full-Stack Development with MongoDB, Express.js, React, and Node.js",
      "objectives": [
        "Develop a deep understanding of the MERN stack.",
        "Create responsive and dynamic frontend applications using React. js, implementing state management and advanced concepts like hooks.",
        "Build a robust backend with Node. js and Express. js, including the development of RESTful APIs, user authentication, and file handling.",
        "Design and optimize MongoDB databases, understanding NoSQL principles and effective data modeling. And lot more."
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Applications of MERN stack",
          "Downloading VS Code",
          "Setting Up React",
          "Setting up nodejs",
          "Setting up data base"
        ],
        "Frontend Development with React.js": [
          "JSX -- React",
          "Components and props--React",
          "Module stylesheet",
          "Ternary Operators for conditional statements",
          "Lists in react",
          "States",
          "React router introduction",
          "React-Router-Configuring routers",
          "React-router-Configuring routers - introduction",
          "React-router-Navigation - Introducton",
          "React-router-Navigation",
          "React-router-UseNavigate - Introduction",
          "React-router-UseNavigate",
          "React-router-Non existing page",
          "React-router-Nested routing - Introduction",
          "React router-Nested routing",
          "React-router-Dyanmic routing - Introduction",
          "React-router-Dynamic routing",
          "React-router-Search params - Introduction",
          "React-router-Seacrh params",
          "React-router-Authentication - Introduction",
          "React-router-Authentication",
          "controlled and uncontrolled inputs - Introduction",
          "Controlled and uncontrolled inputs"
        ],
        "Backend Development with Node.js and Express.js": [
          "Nodejs Introduction",
          "Nodejs-process.argv",
          "Nodejs- outputs",
          "Nodejs--inputs",
          "Nodejs--error_handling",
          "Nodejs-file path",
          "Nodejs-file_system",
          "Expressjs Introduction",
          "Express js Routing",
          "Expressjs--middleware",
          "Express and Mongodb routing",
          "Expressjs controllers",
          "Express js with mongodb",
          "Express with mongodb crud operation",
          "JWT User authenticantion and protecting routes- part-1",
          "JWT User authentication and protecting routes part-2"
        ],
        "Full-Stack Integration & Final Project": [
          "Introduction for the final project",
          "Final project -frontend",
          "Final project-backend"
        ]
      },
      "requirements": [
        "Basic understanding of web development concepts (HTML, CSS, JavaScript).",
        "Familiarity with programming concepts and logic.",
        "Access to a computer with a reliable internet connection.",
        "Willingness to learn and collaborate in a development environment."
      ],
      "description": "Welcome to \"Mastering MERN Stack: A Comprehensive Guide to Full-Stack Web Development\"!\nLook no further! This course is your gateway to mastering the MERN stack – MongoDB, Express.js, React, and Node.js.\n\n\nWhat Will You Learn?\n\n\nFull-Stack Mastery: Understand the MERN stack inside out, from frontend to backend, and become a versatile web developer.\nReact.js Fundamentals: Dive into React.js, covering JSX, components, props, state management, and advanced features like hooks.\nExpressive Backend Development: Build a robust backend with Node.js and Express.js, creating RESTful APIs, handling user authentication, and managing files.\nIntegration and Full CRUD Operations: Connect your frontend and backend seamlessly, implementing full CRUD operations and real-time communication (optional).\nSecurity and Optimization: Learn best practices for secure authentication, authorization, and optimization for both frontend and backend.\n\n\nRequirements:\nBasic web development knowledge (HTML, CSS, JavaScript).\nProgramming understanding and logic.\nComputer with internet access.\nCode editor (e.g., Visual Studio Code).\nA passion for learning and collaboration.\n\n\nWho Is This Course For?\nAspiring full-stack developers eager to master the MERN stack.\nWeb developers looking to enhance their skills with the latest technologies.\nProgrammers want to broaden their skill set in a collaborative development environment.\n\n\nWhy Choose This Course?\nHands-on Projects: Apply your skills with real-world projects and a collaborative final project.\nExpert Guidance: Benefit from clear explanations, practical examples, and continuous support.\nCareer-Ready Skills: Acquire the skills demanded by the industry, from authentication to deployment.\nUp-to-date Content: Stay ahead with the latest features in React and Node.js.\n\n\nUnlock the full potential of web development with \"Mastering MERN Stack.\"\nEnroll now and take the first step towards becoming a proficient full-stack developer!",
      "target_audience": [
        "This course is designed for aspiring full-stack developers, web developers, and programmers who want to master the MERN stack.",
        "Beginners with basic web development knowledge and experienced developers looking to expand their skill set will find this course valuable."
      ]
    },
    {
      "title": "Python Django FULL Stack Web Developer | Python Backend Code",
      "url": "https://www.udemy.com/course/web-development-bootcamp-python-django-web-course-2025/",
      "bio": "Become a Python Django FULL Stack Web Developer | Build Dynamic Websites with Python Django from Scratch | PROJECTS",
      "objectives": [
        "How to create and manage a Django project and its applications.",
        "How to work with Django templates, URL routing, and views.",
        "The basics of Django ORM and how to manage databases.",
        "How to implement user authentication and authorization."
      ],
      "course_content": {
        "Course Introduction": [
          "Meeting Before Course Start | Roll Play",
          "Introduction",
          "Course Objectives",
          "Course Outline",
          "Instructor Guidelines"
        ],
        "Course Updated : 30 September 2025": [
          "New Updates"
        ],
        "Chapter 01": [
          "1 Python Django Chpater 01 Outline",
          "2 Introduction to Framework",
          "3 What is Web Framework",
          "4 Django Jobs in Market",
          "5 MVC and MVT Patterns in Web Framework",
          "6 Key Features in Django",
          "7 Comparision Django Framework with other",
          "Ask Question to AI Character"
        ],
        "Chapter 02": [
          "01 Python Django Chapter 02",
          "02 Django Prerequistes and Django Installation",
          "03 Virtual Environment in Python Django",
          "04 Creating first Django Project",
          "05 Understanding Django Project files",
          "06 Creating Apps in Django Project Part 01",
          "07 Creating apps in Project Part 2",
          "08 Multiple Apps in Django Project"
        ],
        "Chapter 03": [
          "01 Python Django Chapter 03 Outlines",
          "02 Django Views Introduction",
          "03 Function based views with Examples",
          "04 render Method in Django",
          "05 URL Configuration in Django",
          "06 Django Moduler Structure",
          "07 Assignment for Students"
        ],
        "Chapter 04": [
          "01 Django Chapter 04 outlines",
          "02 Django Template Overview",
          "03 Introduction to Django DTL",
          "04 Django DTL Tags",
          "05 Django Filters",
          "06 Custom Filters in Django",
          "07 Template Inheritance"
        ],
        "Chapter 05": [
          "01 Python Django Chapter 05 Outlines",
          "02 Static file in Django",
          "03 Settings for Static file in Django Project",
          "04 Media Files in Django Projects"
        ],
        "Chapter 06": [
          "01 Python Django Chapter 06 Outlines",
          "02 Database in Django",
          "03 Setting up a Database in Django",
          "04 Introduction to Django Models",
          "05 MakeMigrations and Migrate Commands",
          "06 Django Model Field Types with Examples",
          "07 Common Django Model Field Attributes with Examples",
          "08 Part 02 Common Django Model Field Attributes with Examples",
          "09 Model Relationships in Django",
          "10 One to One Relationship",
          "11 One to Many Relationship",
          "12 Many to Many Relationship",
          "13 Django Model Validation",
          "14 Django Custom Validation",
          "15 Creating Superuser in Django",
          "16 Django Admin Integration",
          "17 Custom Model Methods in Django"
        ],
        "Django Beginner Projects": [
          "Project #1",
          "Project# 2",
          "Project # 3"
        ]
      },
      "requirements": [
        "Basic knowledge of Python programming.",
        "A computer with internet access to follow along with the coding exercises.",
        "Basic knowledge of HTML and CSS"
      ],
      "description": "Welcome to “The Python Django Full Stack Web Development Course with Projects & Exercises”\nYour gateway to becoming a confident, job-ready Python Django full stack web developer starts here!\nThis course is designed for aspiring web developers, Python programmers, and anyone eager to build real-world web applications using Python Django, the high-level web framework trusted by companies like Instagram, Pinterest, and Mozilla.\nNo prior experience? No problem – we guide you step by step from basics to advanced Python Django full stack development.\nWhether you’re a complete beginner or already know some coding, this course equips you with the practical skills to build robust, scalable Python Django projects quickly.\nFrom beginner to job-ready full stack Python developer – all in one course.\nWhy Learn Django?\nIn-Demand Skill – Python Django full stack is highly requested by employers and freelance clients.\nRapid Development – Build and scale full stack web applications fast and efficiently.\nScalable & Secure – Django REST Framework enables powerful, API-ready Python backend systems.\nBuilt-In Power – Features like user authentication, URL routing, and database management make Python Django full stack web development easier than ever.\nWe’re here to support you – ask questions anytime and get answers directly from your instructor.\nHands-On Project-Based Learning\nYou won’t just watch tutorials—you’ll build real Python Django projects to add to your portfolio:\nPersonal Portfolio Website\nE-commerce Store with Cart System\nBlog or News Platform\nRESTful API with Django REST Framework\nThese projects let you gain confidence and apply your skills to real-world business needs.\nUnlock Career & Earning Opportunities\nAfter completing this course, you can:\nStart working as a Python Django full stack web developer\nOffer Python Django backend services on freelancing platforms (Upwork, Fiverr, Freelancer)\nLaunch your own startup or SaaS product\nBuild and sell custom Python Django web applications\nLand a job as a backend or full-stack Python developer\nWhy Students Love This Course\n\"I built my first real web app with Django after this course!\"\n\"Perfect for learning Django REST Framework and deploying projects.\"\n\"This course helped me land freelance Django gigs—highly recommended!\"\nCourse Benefits\nBuild job-ready Python Django full stack projects from day one\nLifetime access + future updates (new lectures & assignments added regularly)\nInstructor support for all questions and challenges\nCertificate of Completion to boost your resume\nOpportunities After the Course\nFreelance Web Developer: Build dynamic websites and earn through freelance platforms.\nFull-Stack Developer: Work on both frontend and backend using Python Django full stack skills.\nEntrepreneurship: Create web-based applications like e-commerce platforms, blogs, or SaaS products.\nHow to Make Money with Django\nOffer Python Django full stack web development services online\nBuild and sell custom web applications to clients\nStart a side business by creating and monetizing your own Django-based projects\nIf you’re serious about web development, mastering Python Django full stack is the smartest move. Don’t miss this chance to become a Python Django full stack web developer and start building powerful web applications today!\nEnroll now and take the first step toward launching your Python backend and full stack web development career!",
      "target_audience": [
        "Beginner Python developers who want to learn web development.",
        "Aspiring full-stack developers looking to expand their skills.",
        "Entrepreneurs wanting to create and deploy their own web applications."
      ]
    },
    {
      "title": "Newsletter Signup using PHP, MySQL, Ajax and Bootstrap 5",
      "url": "https://www.udemy.com/course/newsletter-signup-using-php-mysql-ajax/",
      "bio": "In this course, a newsletter form data will be saved into the MySQL database using PHP, PDO and Ajax",
      "objectives": [
        "Signup form validation technique",
        "Creating database and tables using xampp server",
        "Database connection using pdo and php",
        "Validating and inserting data into database using ajax",
        "Email sending technique using phpmailer",
        "Email verification logic",
        "Exporting data as csv format",
        "Uploading the project in web server using cpanel",
        "Creating database, users, email addresses in web server using cpanel"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Installing and using XAMPP server",
          "Installing and using code editor"
        ],
        "Creating Layout": [
          "Creating front end interface using bootstrap 5"
        ],
        "Database and Table": [
          "Creating database and table for the project",
          "Connecting database with PHP using PDO"
        ],
        "Developing the application": [
          "Validating and Inserting form data into database using ajax",
          "Sending email to the subscriber for email verification",
          "Verifying the subscription",
          "Fixing the success message issue with phpmailer",
          "Exporting the data as CSV format"
        ],
        "Uploading project into web server": [
          "Exporting the database as SQL format",
          "Login to cpanel and upload the files as zip",
          "Creating database and import the SQL file",
          "Creating email address and getting SMTP information",
          "Change config file and SMTP info to test the application"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CSS",
        "Basic understanding of PHP",
        "Intermediate Computer Skill",
        "Ability to install xampp or any local server on PC",
        "Basic understanding of database queries"
      ],
      "description": "In this course, I have shown the subscriber newsletter signup process using php, mysql, ajax and bootstrap 5. There are a lot of beginner students who do not understand how to perform the task of email confirmation. This tutorial will greatly help those. Not only this, after completing this course, a php developer can build something new, for example, he can make a registration system with email verification using the same concept and logic. Also, as I have used the ajax to save information and to send email, that will help a lot of beginner and intermediate programmers to use the code on their projects.\nAfter completing the main development process, I have shown how to upload the complete projects into web server. The server was cpanel based shared server. Using cpanel, I have shown how to upload files, create database and tables, how to create email address and how to use the SMTP information from the server to send emails.\nIn this course, I have added an export database system as CSV format. So in a real life application, a person can collect all the emails he get from subscribers, export that list and can use in any email marketing campaign or other purposes.",
      "target_audience": [
        "Beginner web developers wanting to learn php in more details",
        "Students who already know about php, mysql and other stuff, but now wanting to learn more advanced skill"
      ]
    },
    {
      "title": "WordPress Plugin Development 2023 and Proversion for selling",
      "url": "https://www.udemy.com/course/wordpress-plugin-development-and-proversion-for-selling/",
      "bio": "Applying it to the “Official Plugin Directory” and promote your plugin",
      "objectives": [
        "Create Proversion plugin for selling",
        "Make Front-end type plugin",
        "Make Back-end type plugin",
        "Creating database table and deleting tables",
        "Make Customfield plugin",
        "Having \"Quiz\" so that your sure to understand the creation of the plugin",
        "Link to \"Code Reference\" to understand each plugin functions",
        "Now-how of the shortcodes to use it inside the plugin",
        "Use ColorPicker to change color",
        "How to promote your plugin by using recommended plugin section",
        "Introducing shopping site created by WordPress",
        "Use Woocomerce for the purchasing website",
        "About paypals and stripe for the payments"
      ],
      "course_content": {
        "Getting Started": [
          "Intro Promotion",
          "A brief explanation of this course",
          "Tools and text editors that you can use"
        ],
        "Let's set up a local environment": [
          "How to set up local environment on your computer"
        ],
        "Overview of Plugin Development": [
          "Header Fields , Activation hook, and Deactivation hook",
          "Uninstall hook, and Footer action",
          "get_option(), update_option(), and wp_enque_style()"
        ],
        "Let's make a simple plugin": [
          "Insert header fields on the main PHP file and create readme file",
          "Place three actions hooks",
          "Two ways to structure you plugin. Using \"int hook\""
        ],
        "Let's make \"To Top\" plugin": [
          "About setting the screenshot, bannars, and icons",
          "Link the external files. About the versions of jQuery",
          "Escaping variables and using \"nonce\" for security"
        ],
        "Let's make \"Stats Counter\" plugin": [
          "About the database table",
          "Create versions for the database table, charset, and creating a table",
          "Create \"footer section\". About \"dates\". Inserting data to the database table",
          "Insert the front-end section, Create HTML, Use current_time()",
          "Fixing the bug, review"
        ],
        "Customize \"Stats Counter\"": [
          "Add option page to show the title and the link of the post views",
          "Avoid the same title and the link"
        ],
        "Let's make \"Custom Field\" plugin": [
          "What is \"Meta Box\"? Use add_meta_box() function",
          "The saving section, Update \"meta key\" function, and creating CSS section"
        ],
        "Customize \"Custom Field\" Plugin": [
          "Create smart phone checkbox",
          "Placing \"Color Picker\""
        ],
        "Quiz": [
          "Place \"Color Picker\" to the \"To top button\"",
          "Place \"Exclude posts and pages\" text area on \"To top button\""
        ]
      },
      "requirements": [
        "Basic HTML , CSS , jQuery , PHP",
        "Wordpress Installation",
        "Text Editor of your choice"
      ],
      "description": "Hi! “WordPress Plugin Development Course & Proversion for selling” will give you the know-how to create the front-end and the back-end type of plugins. We’ll gonna place “To top button” on the footer section with the color changing and it’s animation speed.\n\nNot only these normal kinds of plugins but we’ll be going to make a proversion plugin for selling. To do that, applying it to the “Official Plugin Directory” is the key. You can promote your plugin by setting the “Recommended Plugin Section”. Thus, your plugin install will increase which concludes to sell your proversion plugins more.\n\nYou can easily set the shopping site for the proversion plugin by using WordPress and the Woocomerce plugin. You can set PayPal and credit cards paying for this.\n\n\nThe merit for this plugin creation is that you don’t need to make difficult structured coding. The simple but attractive and useful plugin will increase your installs.\n\nBasic and Pro type plugin can be sure to succeed with this course.  Step-by-step instructions and detailed summary at the end of each section. Downloadable files are attached to each plugin creation. Also, there are files that link to WordPress codex.\n\nPlease have fun with this course, and I’m sure you can create your original plugins and proversions for selling.",
      "target_audience": [
        "WordPress Plugin Creators",
        "WordPress Theme Creators",
        "PHP Programmers",
        "Who want to create provesion and sell your plugin",
        "Entrepreneurs",
        "Webdesigners",
        "Web Developers",
        "WordPress Creators"
      ]
    },
    {
      "title": "JavaScript DOM Course Dynamic Interactive webpages beginners",
      "url": "https://www.udemy.com/course/learn-javascript-dom-course/",
      "bio": "Learn to create Dynamic and Interactive web pages using JavaScript. JavaScript Document Object Model - For Beginners",
      "objectives": [
        "How to apply JavaScript",
        "Use of JavaScript",
        "Making web pages interactive",
        "How to make website dynamic"
      ],
      "course_content": {
        "Introduction to Interactive Web pages": [
          "Introduction to JavaScript DOM course",
          "Resource Guide",
          "Setup Developer Environment",
          "create an index page",
          "Script file JS",
          "Source Code",
          "Console Log Options",
          "Source Code",
          "JS Document Object.",
          "Source Code for html index page that can be used as a sample webpage",
          "Selecting Elements",
          "Source Code",
          "Selection by tag",
          "Source Code",
          "querySelector",
          "Source Code",
          "querySelectorAll",
          "Source Code",
          "Complex CSS querySelectorAll.",
          "Source Code",
          "Update Images",
          "Source Code",
          "ChildNodes Children and more",
          "Source Code",
          "Element Style Update",
          "Multi Element Style Update.",
          "Source Code",
          "Add Classes to Elements",
          "Source Code",
          "Set Attribute.",
          "Source Code",
          "JavaScript Create Element",
          "Source Code",
          "append and prepend",
          "Source Code",
          "AddEvent Listeners",
          "Source Code",
          "AddEvent Mulitple Listeners",
          "Source Code",
          "Mouse move events.",
          "Source Code",
          "Fun with Images",
          "Source Code",
          "Fun with Images part 2",
          "Source Code",
          "Form Values",
          "Source Code",
          "Annoying Blinker",
          "Source Code",
          "Animation JavaScript.",
          "Source Code",
          "DOM Conclusion"
        ],
        "Course Q&A examples and JavaScript Bonus lessons": [
          "Adding Click Events",
          "Arrow Functions",
          "Supplementary Educational Resources: Downloadable Content, Practical Examples"
        ]
      },
      "requirements": [
        "HTML and CSS",
        "Basics of JavaScript coding",
        "Desire to learn JavaScript",
        "Fundamental JavaScript"
      ],
      "description": "Learn about how JavaScript can be used to apply interaction and dynamic content to web pages.\nPlease note that JavaScript - HTML and CSS are prerequisites to this course\nScope of this course is to cover JavaScript and how it can be used to select elements from the web page.  Create new element, updates elements and manipulate elements directly using JavaScript.  Explore how easy it is to make your website come to life.  Using the DOM Document Object Model connect to the elements via JavaScript.\nExplore how JS can be added to web pages\nLearn about console and debugging with JavaScript\nFind out more about DOM Document Object Model\nUse JavaScript to select elements from the page\nSelect multiple elements from the page\nUpdate element attributes\nUpdate element style properties and values\nAdd classes and manipulate element class values.\nLearn how to create elements using JavaScript and add them to a webpage\nCreate interaction using event listeners in JavaScript\nForm values\nMini projects to highlight what was learned\nSource code is inlcuded\ntry the code for yourself and explore what you can do with JavaScript\nFast Friendly support to help answer any questions you might have and to help clarify content is always available in the Q&A section.  Taught by an instructor with over 20 years real world experience ready to help you learn more.  Step by step training resources and source code is also included to get you started quickly.",
      "target_audience": [
        "Web developers",
        "Web designers",
        "Anyone who wants to learn how to make interactive web applications"
      ]
    },
    {
      "title": "PHP CodeIgniter 4: Build Complete Job Portal",
      "url": "https://www.udemy.com/course/php-codeigniter-4-for-2023-build-complete-job-portal/",
      "bio": "Build Complete Job Portal with Admin Panel in PHP CodeIgniter 4 MySQL and Bootstrap and Up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Shield package",
        "Learn how the MVC structure works in CodeIgniter",
        "Integrate your own theme easily",
        "Work with Models the professional way",
        "Work with views the professional way",
        "Work with Controllers the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn to create a working search box",
        "Learn some advanced routing ways",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Learn to create a working multi search box",
        "work with Filters"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing Visual Studio Code"
        ],
        "Creating Authentication System and Getting Started": [
          "Design and Code for the Project",
          "Creating our Project with CodeIgniter pt.1",
          "Creating our Project with CodeIgniter pt.2",
          "Creating Authentication System with Shield",
          "Creating Master Template and Home Page"
        ],
        "Getting Main Features Done": [
          "Displaying Jobs in Home Page",
          "Displaying Single Job",
          "Sharing Jobs Through Social Media",
          "Displaying Related Jobs"
        ],
        "Working with Jobs and Categories and Applying for Jobs and More": [
          "Displaying Number of Jobs and Categories",
          "Displaying Jobs by Category",
          "Saving Jobs",
          "Validating Saving Jobs",
          "Applying for Jobs pt.1",
          "Applying for Jobs pt.2"
        ],
        "Working with Profile Pages and Searching for Jobs and More": [
          "Creating Profile Pages",
          "Updaing Profiles",
          "Updating CV",
          "Displaying Saved Jobs and Applied Jobs for Users",
          "Validating and Cleaning up pt.1",
          "Validating and Cleaning up pt.2",
          "Searching for Jobs"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Creating Authentication System pt.1",
          "Creating Authentication System pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying all Admins",
          "Creating New Admins"
        ],
        "Working with Categories Section": [
          "Displaying all Categories",
          "Creating New Categories",
          "Updating Categories",
          "Deleting Categories"
        ],
        "Working with Jobs Section": [
          "Displaying all Jobs",
          "Creating New Jobs",
          "Deleting Jobs with Images"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of CodeIgniter would help a lot"
      ],
      "description": "Learn how to build a complete job portal using PHP CodeIgniter 4 in this comprehensive online course.\nThis course is designed for beginners who want to learn how to create a fully functional job portal from scratch. You will learn the basics of PHP CodeIgniter 4, as well as more advanced concepts such as:\n\n\nDatabase design and implementation\nUser authentication and authorization\nForm validation\nError handling\nSearch functionality\n\n\nBy the end of this course, you will be able to build your own job portal that can be used by job seekers and employers alike.\nWhat you will learn:\n\n\nHow to install and configure PHP CodeIgniter 4\nHow to create a database for the job portal\nHow to create the user interface for the job portal\nHow to implement the functionality of the job portal, such as:\nJob posting\nJob search\nUser registration and login\nEmployer and job seeker profiles\nContact forms\nWho this course is for:\nThis course is for beginners who want to learn how to build a job portal using PHP CodeIgniter 4.\nWhat you will get:\nAccess to all course materials, including video lectures, code examples, and quizzes\nA certificate of completion upon completion of the course\nThe support of a dedicated instructor\nSign up today and start building your own job portal!\nHere are some additional details about the course:\nThe course is taught by an experienced PHP developer who has built many successful job portals.\nThe course is divided into 10 modules, each of which covers a different aspect of building a job portal.\nThe course also includes a final project, in which you will build your own job portal from scratch.",
      "target_audience": [
        "People who learned PHP CodeIgniter and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "React Testing: Unit Testing React and E2E Testing",
      "url": "https://www.udemy.com/course/react-testing-unit-testing-react-and-e2e-testing/",
      "bio": "Prepare for React unit testing with Jest and Testing E2E with Cypress. Learn React testing skills and concepts.",
      "objectives": [
        "Be very well prepared for any React testing you will have",
        "Excel in a wide variety of React testing possibilities",
        "Strengthen you React testing skills and your knowledge of important testing concepts",
        "Learn the skills, concepts, and techniques of testing",
        "Feel very confident in testing React projects"
      ],
      "course_content": {
        "Introduction": [
          "Why testing?",
          "Source code under the video",
          "Setting up project",
          "What editor to use?"
        ],
        "Unit Testing": [
          "What is this section about?",
          "What is unit testing?",
          "Setting up Vitest",
          "Testing utilities and helpers",
          "Testing a simple component",
          "Testing inputs and outputs",
          "Mock and Spy functions",
          "Testing useState hook",
          "Testing useEffect with API calls",
          "Testing a simple custom hook",
          "Testing a complex custom hook",
          "Real React project - testing React context",
          "Real React project - testing header component",
          "Real React project - testing footer component",
          "Real React project - adding custom render",
          "Real React project - testing todo component",
          "Real React project - testing main component",
          "Testing setTimeout in React"
        ],
        "Testing Redux": [
          "Testing reducers",
          "Testing components with Redux store"
        ],
        "E2E testing": [
          "What is E2E testing",
          "Real React project - E2E testing user interactions"
        ],
        "Homework": [
          "Homework",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic React knowledge"
      ],
      "description": "This course is great preparation for any React testing that you may have coming up. Quality code testing needs a lot amount of knowledge, but the best way to prepare for it is a lot of practice! In this course you will everything that come from real React projects about testing. There are no excersises that nobody asks here. In every video you will learn something useful that you will write every day. We will take a deep dive into the skills, concepts, and techniques that are required to solve each problem.\nWhen you have completed this course you will have mastered React testing on a high level and you will also have learned the concepts, skills, and techniques, like testing with Vitest and Cypress and using things like mocking and spying that are necessary for you to excel in any testing. You will feel very confident testing any React project you will have. On top of all this, you will strengthen your React programming skills and React fundamentals in overall.\nCore topics of the course:\nUnit testing concepts\nE2E concepts\nTesting context and hooks\nMocking and spying dependencies\nTesting components\nTesting Redux\nFull project unit testing on a real project\nCypress testing on a real project",
      "target_audience": [
        "Anyone who wants to learn React testing",
        "Anyone who wants to make React code safe",
        "Anyone who wants to strengthen their React skills and knowledge",
        "Anyone who wants to improve their code"
      ]
    },
    {
      "title": "React Native Complete Course with Redux, NodeJS & MongoDB",
      "url": "https://www.udemy.com/course/the-complete-2021-react-native-guide-with-nodejs-mongodb/",
      "bio": "Full stack react native with redux, hooks & context, nodejs, and mongodb. Build your react, react native projects.",
      "objectives": [
        "React Native set up virtual environment",
        "Install ReactNative dependencies for MAC and Windows",
        "Run Android and IOS simulator in React Native",
        "React Native Expo installation",
        "Run React Native Expo App on Mobile Device",
        "JSX syntax and expressions with React or React js",
        "ES6 syntax with React Native",
        "See the content on the simulator in React",
        "Styling with React-Native and flex-box rules",
        "Send an HTTP request to a remote API",
        "React native State ve Props systems",
        "Reusable components in React native",
        "Reach another app on the phone from the React-Native app",
        "React Navigation Library",
        "Route Between Different Screens",
        "Data Transfer Between Different Screens with React Navigation",
        "Learn to create react native Hooks and Context structures",
        "Creating Hooks and Context structures with explanatory diagrams",
        "What is Context Api in and how it is used",
        "Using Context Api and Hooks together",
        "Creating Context with Class Component",
        "Access to Context with Context Type",
        "To manipulate the data in Context",
        "How to Use Multiple Context",
        "How to Create Reducer in React Native",
        "How to Use Reducer in React Native",
        "useState, useEffect, useReducer, and useContext hooks",
        "Reducer, action and dispatch concepts and much more with React Native",
        "How to use coding techniques to make efficient development with React",
        "Build fast, user-friendly web apps with React",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works with Mongodb, express js, node js",
        "Understand and use the Event Emitter in React Js",
        "Understand Buffers, Streams, and Pipes with React native, node js, mongodb",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "Learning React Native is a great avenue through which to gain experience developing mobile apps.",
        "React Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android",
        "React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms.",
        "React, also known as React js, saves time and effort for developers since they only need one programming language.",
        "Businesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desk",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice",
        "Node js is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "Node is designed around an event loop, which allows for easy management of asynchronous functions.",
        "MongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows.",
        "It’s schemaless nature allows greater flexibility or changing application requirements.",
        "MongoDB is an document-oriented database designed to allow developers to scale their applications to meet scalability demands.",
        "MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS Redux and Mongodb",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces."
      ],
      "course_content": {
        "Introduction to React, React Native with Nodejs and mongodb": [
          "What will we learn in React native with nodejs, mongodb?",
          "How To Get Help to React native with redux. hooks and context?",
          "Github Complete Course Repo in React Native with Nodejs and express js",
          "FAQ about React Native with redux, nodejs, express, mongodb"
        ],
        "React Native - Set Up For Windows": [
          "Free Tools For Windows",
          "Windows Setup for React Native",
          "How to Start Emulator In Android Studio for React Native projects",
          "Android Emulator Setup Checklist in React Native"
        ],
        "React Native - Setup For OSX": [
          "Free Tools for IOS",
          "OSX Setup for React Native",
          "Start the Emulator in React Native with nodejs and mongodb",
          "MAC IOS Emulator React Native Setup Checklist"
        ],
        "React Native and Expo": [
          "React Native on Mobile Device",
          "React Native Expo CLI Project"
        ],
        "React Native and JSX": [
          "How To Create An App with React Native",
          "See Content on Emulator in React Native",
          "Why Do We Need React and React Native?",
          "ES6 Syntax ( Let, Const, Var ) in React",
          "React First Component",
          "How To Show Component on Device in React",
          "How to Build Our First React App",
          "How To Connect A Component To The Root Component in React Native",
          "Import A Component To Another Component with react, redux, hooks and context",
          "quiz"
        ],
        "Styling For React Native": [
          "Styling with JSX in React",
          "Displaying Of Views in React Native",
          "Header Component’s Styling in React",
          "React Props",
          "How To Reuse Code With Props System with React Native, redux, hooks and context",
          "quiz"
        ],
        "API Request With React Native": [
          "How To Show a List To The User",
          "The List Component with React redux",
          "Func Component vs Class Based Component"
        ],
        "LifeCycle Methods in React js and react native": [
          "When Do We Need Lifecycle Methods?",
          "LifeCycle Methods in React js and react native",
          "Making Request With Axios",
          "quiz"
        ],
        "State in React Native": [
          "What Is State And How To Initial State",
          "Using of State",
          "A Component’s Lifecycle With State",
          "List Component",
          "List Item Component",
          "Reusable Components",
          "Styled Component for List Items",
          "Usage of Props.Children",
          "Item Section",
          "quiz"
        ],
        "Layout With Flexbox in React Native": [
          "Introduction to the Flexbox",
          "Section Header Component",
          "How To Show An Image",
          "Scrollable Content",
          "User Interaction with React Native",
          "Event Handlers",
          "How To Open Another App (Browser)",
          "quiz"
        ]
      },
      "requirements": [
        "No prior React and React-Native knowledge",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don't need to be an expert",
        "Basic ES6 knowledge would be beneficial but not required",
        "Desire to learn React Native",
        "Computer with access to the internet",
        "Desire to learn React Native with node js and mongodb",
        "Desire to learn Node js",
        "Desire to learn Mongodb",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "Desire to learn React Native with redux, hooks and context",
        "Desire to become mobile app developer",
        "Desire to learn mobile development with react native, redux, hooks and context, nodejs, mongodb",
        "Desire to learn full react native course with nodejs and mongodb",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello there,\nWelcome to React Native Complete Course with Redux, NodeJS & MongoDB course.\nFull stack react native with redux, hooks & context, nodejs, and mongodb. Build your react, react native projects.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React is all you need to create awesome mobile apps that work on both Android and iOS.\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nLearning Node.js is a great way to get into backend web development, or expand your full stack development practice. With Udemy’s hands-on Node.js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime.\nThis course is for all levels. To be able to take this course, all you need is a basic understanding of JavaScript.\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nLater on in the course, we are going to learn the basics of React and React Navigation. JSX, 'props system', and 'state system' are going to be crystal clear for you at the end of the course. We are going to create nice-looking reusable components. You are going to be able to use these reusable components in your own future projects. You are going to go to different screens from the app with React navigation.\nFinally, you are going to learn the latest React features \"Hooks and Context\" system. We are going to create two nice-looking apps, teach you \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nNode.js is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows. It’s schemaless nature allows greater flexibility or changing application requirements. It’s one of the best databases in terms of developer productivity.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nAt the end of the course;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class Based and Functional Components\nHow to Consume Context in Class Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nReact\nReact Native\nReactnative\nReact native redux\nReact native firebase\nReact native expo\nReact native android\nReact native app\nReact native advanced\nReact native animaiton\nNodejs mongodb react native\nReact native node\nReact native mongodb\nReact native 2021\nThe complete react native and redux course\nMongodb react nodejs\nNode js\nMongodb\nReact native expo\nReact native mongo\nComplete react native course\nReact native with node js\nReact native node js\nNode js\nMongodb\nexpress framework\nnosql\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and React is easy to understand for beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhat is microservices architecture and how can Node.Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate. Each has a very well-defined operation and interface and can deploy on its own. In essence, it’s a way of developing modules that you can repurpose from one program or application to another. When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained. The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program. You can use Node.Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules). The beauty of microservices is that you can use the best language for the specific microservice. But where highly scalable, fast programs are needed, Node.Js would be a top contender.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React.JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\n\n\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time. Now I can create simple single-page applications, and I fell in love with CodePen and VS Code\nThe course is great and he does not say anything without an explanation. If you want to really understand how to use MongoDB, how to test it, and how to set up and use Express with MongoDB, then this is an amazing course.\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our React Native Complete Course with Redux, NodeJS & MongoDB course.\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Programmers who want to learn React and React-Native",
        "Anyone who wants to learn React Hooks & Class-based Components",
        "Anyone who wants to create mobile applications with both react-native-cli and expo-cli",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "People who are planning a career in the application world",
        "Developers who have researched React but have had trouble mastering some concepts",
        "Anyone who want to start from scratch and to move more advanced level",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who want to take their web development skills to the next level and learn a future-proof technology",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who want to learn mobile app development with react native",
        "People who want to learn mobile app development with react native, redux, hooks and context",
        "People who want to learn mobile app development with react native with nodejs and mongodb",
        "People who want to learn react native expo",
        "People who want to learn react native cli",
        "People who want to learn react or react js with node js, mongodb"
      ]
    },
    {
      "title": "Node.js API - making it shine!",
      "url": "https://www.udemy.com/course/nodejs-api-with-clean-architecture/",
      "bio": "Clean architecture Node.js + Express.js + MongoDB Bootcamp",
      "objectives": [
        "Node + Express js + MongoDB with real life example",
        "Create good software architecture and separation of concerns",
        "Clean architecture principles",
        "Test back-end applications",
        "Use dependency injections in Node js back-end projects"
      ],
      "course_content": {
        "Course introduction": [
          "About this course",
          "Project overview",
          "Into the Clean architecture"
        ],
        "Let's start coding": [
          "Project start",
          "Create basic server"
        ],
        "Let's build the Repositories": [
          "Section Introduction",
          "User entity",
          "In-memory DB",
          "User's repository",
          "User's repository tests",
          "Product entity",
          "Hands on: create product's repository",
          "Product's repository",
          "Hands on: test the product's repository",
          "Product's repository tests",
          "Order entity",
          "Hands on: create order's repository",
          "Order's repository",
          "Hands on: test the order's repository",
          "Order's repository tests"
        ],
        "Let's build the use cases": [
          "Section Introduction",
          "Add user use case",
          "Add user use case tests",
          "Get user by ID use case",
          "Get user by ID use case tests",
          "Update user use case",
          "Update user use case test",
          "Delete user use case",
          "Delete user use case test",
          "Hands on: create the add product use case",
          "Add product use case",
          "Hands on: test the add product use case",
          "Add product use case tests",
          "Hands on: create the get product by ID use case",
          "Get product by ID use case",
          "Hands on: test the get product by ID use case",
          "Get product by ID use case tests",
          "Hands on: create the update product use case",
          "Update product use case",
          "Hands on: test the update product use case",
          "Update product use case test",
          "Hands on: create the delete product use case",
          "Delete product use case",
          "Hands on: test the delete product use case",
          "Delete product use case test",
          "Hands on: create order use cases",
          "Add order use cases",
          "Hands on: test the order use cases",
          "Create order use case test"
        ],
        "Let's build controllers": [
          "Section Introduction",
          "Response Contracts",
          "Initialize controllers by creating add user controller",
          "Get User by ID controller",
          "Delete user controller",
          "Update user controller",
          "User's controller tests",
          "Hands on: create an add product controller",
          "Add product controller",
          "Hands on: create the delete product controller",
          "Delete product controller",
          "Hands on: create the update product controller",
          "Update product controller",
          "Hands on: create the get product by ID controller",
          "Get product by ID controller",
          "Hands on: create an add order controller",
          "Add order controller",
          "Hands on: create get order by ID controller",
          "Get order by ID controller",
          "Hands on: create an update order controller",
          "Update order controller",
          "Hands on: create delete order controller",
          "Delete order controller",
          "Add application error handler"
        ],
        "Let's create Business Validations": [
          "Section Introduction",
          "Add order business validations",
          "Fix tests after adding business validation rules"
        ],
        "Let's move to Mongo": [
          "Section introduction",
          "Create Mongo Cluster",
          "Initialize Mongo with Mongoose",
          "Create user's schema",
          "Hands on: create product schema",
          "Create product schema",
          "Hands on: create order schema",
          "Create order schema",
          "Create Mongo users repository",
          "Hands on: create Mongo product repository",
          "Hands on: create Mongo orders repository",
          "Create products + orders Mongo repositories"
        ],
        "Finish": [
          "Thank you! And how to contact with me?"
        ]
      },
      "requirements": [
        "Beginner coding experience"
      ],
      "description": "In this course, we will create Node.js basic shop API using Express.js and MongoDB. We will start this journey by understanding what clean architecture means, and right after will dive deep into coding.\nWe will start this course using in-memory DB and after that will move our app to MongoDB and Mongoose. I made a decision to make the course this way to show you how it's easy to move from one library to another when you are using good architecture.\nWe will test out the application using jest with the newest test stack and methodologies.\nIn this course, you will see how to use dependency injections in a really easy format and what it gives you. We will also make business validations for entity creation and updates. I want to show you how to use the response contracts layer to give one look at your every response from the server.\nWe will create an Application error handler to handle every exception or error and respond to a formatted response.\nAfter every step of this course, you will have hands-on exercises and an answer right after.\nJoin this course to make a cool Node.js server. Enjoy and be happy :)",
      "target_audience": [
        "All Level Node js developers",
        "Software developers",
        "Back-end developers"
      ]
    },
    {
      "title": "Blazor, .NET Core Web API and Microsoft SQL full-stack app",
      "url": "https://www.udemy.com/course/blazor-net-core-web-api-and-microsoft-sql-full-stack-app/",
      "bio": "learn to create a full stack web application from scratch using Microsoft SQL Server, .NET Core Web API and Blazor",
      "objectives": [
        "Full Stack Web Development",
        ".NET Core Web API and SQL Server Backend",
        "Angular 12 Frontend",
        "Build RESTful APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Environment": [
          "Install Visual Studio",
          "Install Postman",
          "Install SQL Server Management Studio"
        ],
        "Backend : .NET Core and SQL Server": [
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API"
        ],
        "Frontend : Blazor": [
          "Create Blazor Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering"
        ],
        "Extra": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "Hello Everyone, and welcome to this course on Blazor, .NET Core Web API, Microsoft SQL Server  full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* Microsoft SQL Server for the database.\n* .NET Core Web API for the back end web development.\n* And Blazor for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using .NET Core Web API.\n-Finally we will be using Blazor to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our Blazor App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "TypeScript from Scratch: Go from zero to hero in TypeScript",
      "url": "https://www.udemy.com/course/type-script/",
      "bio": "With this course you will learn how to use TypeScript, starting from scratch i.e absolute beginner to expert level",
      "objectives": [
        "Understand TypeScript and Tools for development with TypeScript",
        "Implement Types and variables",
        "Use Conditional Statements, Loops and Arrays",
        "Implement Functions in TypeScript",
        "Use Databases and Node .js with TypeScript",
        "Understand Promises and Asynchronous Programming",
        "Implement NodeJS Web Server",
        "Use ExpressJS",
        "Deploy Mongoose with Node .js and MongoDB",
        "App Deployment in Cloud",
        "Master OOP with TypeScript",
        "Define classes, Arrow functions and Decorators"
      ],
      "course_content": {
        "TypeScript Overview": [
          "Download Code and PPT",
          "TypeScript Overview"
        ],
        "Tools for development with TypeScript": [
          "Download PPT",
          "Development Tools for TypeScript"
        ],
        "Types and variables": [
          "Download Code and PPT",
          "Data Types in TypeScript",
          "Numbers in TypeScript",
          "Integer Numbers",
          "Floating-Point numbers",
          "Boolean Type",
          "String Type",
          "Undefined and Null Values",
          "Declaring Variables",
          "Assigning Values to Variables"
        ],
        "Conditional Statements": [
          "Download Code and PPT",
          "if and if-else",
          "Nested if Statements",
          "Switch-case"
        ],
        "Loops": [
          "Download PPT",
          "Using while loop",
          "Do-while Loop",
          "For Loop",
          "For-in Loop",
          "For-of Loop",
          "Nested Loops"
        ],
        "Arrays": [
          "Download Code and PPT",
          "Declaring and Creating Arrays",
          "Using Arrays",
          "Iterating Arrays",
          "Inserting and Removing Elements from Arrays",
          "Array Methods"
        ],
        "Functions in TypeScript": [
          "Download Code and PPT",
          "Functions Overview",
          "Declaring and Creating Functions",
          "Calling Functions",
          "Functions with Parameters",
          "The arguments Object",
          "Returning Values From Functions",
          "Function Scope"
        ],
        "Introduction to Node.js": [
          "Download PPT",
          "Node.js Overview",
          "Running Node.js",
          "Running Node.js with TypeScript"
        ],
        "Promises and Asynchronous Programming": [
          "Download PPT",
          "Asynchrony in JavaScript",
          "Callback-oriented Programming",
          "Promises",
          "ES2015 Promises",
          "Promise methods",
          "Function Generators",
          "Async Operations"
        ],
        "NodeJS Web Server": [
          "Download PPT",
          "What is a Web Server",
          "Create basic server with Node.js",
          "The Request Stream Object",
          "The Response Stream Object",
          "Route Requests",
          "NodeJS as Client"
        ]
      },
      "requirements": [
        "System with Internet",
        "Knowledge of JavaScript is beneficial"
      ],
      "description": "TypeScript is a free and open-source programming language developed and maintained by Microsoft. TypeScript is JavaScript that Scale\nTypeScript is a typed superset of JavaScript that compiles to plain JavaScript. Any browser. Any host. Any OS.\nType Script follows the same syntax and semantics that millions of JavaScript programmers use today.\nTypeScript offers support for the latest and evolving JavaScript features, including those from ECMAScript 2015 and future proposals, like async functions and decorators, to help build robust components\nWith this course you will learn how to use TypeScript, starting from scratch i.e absolute beginner to expert level\nThis TypeScript course is particularly designed for UI Developers / Web Developer who want to learn TypeScript to develop UI, desktop App and cross platform mobile apps\nBy the end of the course you will be able to\nUnderstand TypeScript and Tools for development with TypeScript\nImplement Types and variables\nUse Conditional Statements, Loops and Arrays\nImplement Functions in TypeScript\nUse Databases and Node.js with TypeScript\nUnderstand Promises and Asynchronous Programming\nImplement NodeJS Web Server\nUse ExpressJS\nDeploy Mongoose with Node.js and MongoDB\nApp Deployment in Cloud\nMaster OOP with TypeScript\nDefine classes, Arrow functions and Decorators\n\nLearning TypeScript is a definite way to advance your career and will open doors to new Job opportunities.\n100% MONEY-BACK GUARANTEE\nThis course comes with a 30-day money back guarantee. If you're not happy, ask for a refund, all your money back, no questions asked.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "JavaScript Developers looking to learn and implement TypScript"
      ]
    },
    {
      "title": "JavaScript Pro: From Basics to Real-World Applications",
      "url": "https://www.udemy.com/course/javascript-the-complete-modern-javascript-masterclass/",
      "bio": "Learn Modern JavaScript by building real-world Projects! JavaScript ES6+, OOP, Async JavaScript, Webpack and much more..",
      "objectives": [
        "7 real world projects with pure JavaScript",
        "JavaScript Fundamentals: variables, if-else, loops, functions, arrays, objects etc.",
        "Write solid, powerful JavaScript code",
        "Master DOM without jQuery",
        "Explore all about Object Oriented Programming",
        "Explore the latest cutting-edge features from ES6, ES7, ES8 and so on",
        "Understand how to use Promises & Async/Await with asynchronous JavaScript",
        "Asynchronous JavaScript with Ajax, Fetch API",
        "Modern JavaScript - Webpack, Babel & ES6 modules",
        "Downloadable code & all projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course"
        ],
        "Setting Up Environment": [
          "Why JavaScript?",
          "How to Follow the Course?",
          "GitHub Repository For All Projects",
          "Setting up Code Editor"
        ],
        "JavaScript Basics": [
          "Console & alert in JavaScript",
          "var, let, const - Variable Declaration",
          "Comments in JavaScript",
          "Data Types in JavaScript",
          "Number in JavaScript",
          "String in JavaScript",
          "Type Conversion & Type Coercion",
          "Template Literals",
          "Date & Time",
          "JavaScript Math Object",
          "Operators in JavaScript"
        ],
        "JavaScript Control Flow": [
          "if & if else statement",
          "Logical Operators",
          "Ternary Operator",
          "else if statement",
          "Switch statement",
          "While Loop",
          "Do While Loop",
          "For Loop in JavaScript",
          "forEach Loop in JavaScript",
          "Break & Continue"
        ],
        "Functions, Objects & Arrays": [
          "Functions in JavaScript",
          "Arrow Function",
          "Local Vs Global Scope",
          "Object Literal",
          "Arrays in JavaScript",
          "Important Array Methods",
          "this Keyword"
        ],
        "JavaScript DOM & Events": [
          "What is DOM?",
          "Understanding the Document",
          "DOM Selectors Methods",
          "DOM querySelector & querySelectorAll",
          "Manipulating Styles & Attributes",
          "Events in JavaScript",
          "Event Listeners",
          "Mouse & Keyboard Events"
        ],
        "Four Amazing DOM Projects": [
          "Introduction to Projects",
          "BMI Calculator - Designing UI",
          "BMI Calculator - Adding Logic",
          "Random Quotes Generator - Designing UI",
          "Random Quotes Generator - Adding Logic",
          "What is JSON?",
          "Bookmark APP - Designing UI",
          "Bookmark APP - Saving Bookmarks in Local Storage",
          "Bookmark APP - Rendering Bookmarks from Local Storage",
          "Bookmark APP - Delete Bookmarks from Local Storage",
          "Memory Game - Designing UI",
          "Memory Game - Adding Logic to Game"
        ],
        "Object Oriented Programming (OOP)": [
          "What is OOP?",
          "Factory Functions",
          "Constructor Functions",
          "Prototypes",
          "ES6 Classes",
          "First Pillar - Encapsulation",
          "Second Pillar - Abstraction",
          "Third Pillar - Inheritance",
          "Prototype Inheritance",
          "Fourth Pillar - Polymorphism",
          "Difference between Functions & Methods"
        ],
        "Employee App using OOP Concepts": [
          "Introduction to Project",
          "Designing App UI",
          "Adding Employee Data to UI",
          "Clear Fields, Custom Alert, Delete Employee",
          "Save & Render Employees from Local Storage",
          "Delete Employee from Local Storage"
        ],
        "Regular Expressions (Regex)": [
          "Regular Expression & Important Methods",
          "Character classes",
          "Groups & Ranges",
          "Quantifiers",
          "Assertions",
          "Creating URL Validator"
        ]
      },
      "requirements": [
        "Basic HTML & CSS knowledge",
        "Basic Bootstrap knowledge",
        "No coding experience is necessary to take this course."
      ],
      "description": "Why Learn JavaScript?\n\n\nDo you know how much JavaScript developers make in the USA per annum? According to Indeed, JavaScript developers earn an average of $103,699 annually with exclusive benefits. Isn't it amazing to dive into the world of JavaScript?\n\n\nJavaScript is the most popular and fastest-growing programming language. While many believe that web development with JavaScript is easy compared to other programming languages, the reality is different. Learning JavaScript requires time and dedication.\n\n\nStop randomly searching YouTube for JavaScript videos if you're new to programming or JavaScript. Start from scratch and grasp the essential fundamentals of JavaScript. That's why I've created this course – to guide you on where to begin your programming journey.\n\n\nWhat's Inside this Course?\nWe won't focus on libraries or frameworks; we're diving into Vanilla JavaScript (No Libraries, No Frameworks). This course aims to build a rock-solid foundation in JavaScript programming.\n\n\nYou'll master writing efficient JavaScript code, transforming you from a complete beginner to an advanced developer. Learn how to debug code in case of errors.\n\n\nWe'll explore important concepts, ensuring you understand JavaScript inside out.\n\n\nPRODUCT IN COURSE:\nBMI Calculator\nRandom Quotes Generator\nBookmark App\nMemory Game\nEmployee App (Using OOP)\nMovie App (Using Fetch API & AJAX)\nJobs Portal (Using Webpack, Babel, Node)\n\n\nSuper Friendly Support\nIf you ever encounter a problem, I'm here to help you get unstuck. I respond promptly because I know how frustrating programming issues can be. Your success matters to me!\n\n\nUnlock Your Potential NOW\n\n\nAfter completing this course, you'll become a proficient JavaScript developer and enhance your skills in AngularJS, NodeJS, React.js, MongoDB, and all other JavaScript-based technologies.\n\n\nAre you ready for this exciting journey? If yes, click ENROLL and join me today in this ultimate Modern JavaScript course. Let's embark on a JavaScript adventure together!",
      "target_audience": [
        "Anyone who wants to become JavaScript Developer",
        "Anyone who wants to start his career as a programmer",
        "Anyone who wants to learn web development",
        "Anyone who wants to enhance his skills in Vanilla JavaScript",
        "Anyone who is interested in programming"
      ]
    },
    {
      "title": "Laravel 10 - Making a Complete Non-Profit Charity Website",
      "url": "https://www.udemy.com/course/laravel-making-complete-non-profit-charity-website/",
      "bio": "Learning Laravel fundamentals (A to Z) and developing a complete dynamic non-profit charity website with Laravel 10",
      "objectives": [
        "Laravel 10 from scratch",
        "Laravel Fundamentals (A to Z)",
        "Laravel Single and Multi Auth (with Guard) System",
        "Visual Studio Code Editor and Important Plugins",
        "Laravel CRUD option",
        "Laravel Login System",
        "Forget Password and Reset Password System",
        "Email Verification System Logic and Implementation",
        "Contact form email sending",
        "Website logo, favicon and other items setup",
        "Admin profile management",
        "Photo uploading system",
        "Toastr message notification system",
        "User Profile Management",
        "User Login and Registration",
        "PayPal and Stripe Payment Methods integration",
        "Event Management",
        "Event Ticket Purchase Management System",
        "Cause Management System",
        "Cause Donation Management System"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local Server Setup (Windows OS)": [
          "Installing XAMPP",
          "Shift between php versions in XAMPP",
          "Installing Laragon",
          "Shift between php versions in Laragon"
        ],
        "Local Server Setup (Mac OS)": [
          "Installing XAMPP",
          "Installing MAMP",
          "Shift between php versions in MAMP"
        ],
        "Code Editors": [
          "Code Editors"
        ],
        "Visual Studio Code Editor": [
          "VS Code Installation",
          "Opening Folders (Single and Multiple)",
          "Autosave",
          "Installing Extensions",
          "Export Settings",
          "Reset VS Code",
          "Creating and Working with Snippets",
          "Extension - Bootstrap 5 Quick Snippets",
          "Extension - Auto Rename Tag",
          "Extension - Material Icon Theme",
          "Extension - Vscode Great Icons",
          "Extension - Live Server",
          "Extension - Live Server Preview",
          "Extension - HTML CSS Support",
          "Extension - Laravel Blade Snippets",
          "Extension - Laravel Blade Spacer",
          "Extension - Laravel Artisan",
          "Extension - Laravel-goto-controller",
          "Color Scheme",
          "Working with Terminal",
          "Settings Sync"
        ],
        "Fundamental - Installation": [
          "Install Laravel",
          "Folder and File Structure",
          "Artisan CLI Commands",
          "Laravel Tinker"
        ],
        "Fundamental - Route": [
          "Basic Route",
          "Route Parameters",
          "Named Route",
          "Fallback Route",
          "Route Group",
          "Route Redirect",
          "Route View",
          "Resourceful Routes",
          "Regular Expression Constraints",
          "Global Constraints"
        ],
        "Fundamental - View": [
          "Creating View",
          "Nested View Directories",
          "Passing Data into View",
          "Sharing Data with All Views",
          "Share Different Items to Different Views",
          "View Component",
          "View Caching"
        ],
        "Fundamental - Blade": [
          "Displaying Data",
          "Displaying Unescaped Data",
          "Blade Directive - if statement",
          "Blade Directive - switch statement",
          "Blade Directive - Raw PHP",
          "Blade Directive - Loop",
          "Blade Directive - Including Subview",
          "Blade Directive - Comment",
          "Building Layout using Template Inheritance"
        ],
        "Fundamental - Controller": [
          "Creating Controller",
          "Working with Controller",
          "Resource Controller",
          "Invokable or Single Action Controller"
        ]
      },
      "requirements": [
        "Basic Knowledge in PHP Language",
        "Basic Knowledge in OOP Concept",
        "Knowledge about using local server. Ex: xampp, wampp or mamp",
        "Basic knowledge about HTML, CSS and Bootstrap",
        "Basic knowledge about using code editor like Notepad++, Sublime Text or any"
      ],
      "description": "In this course, I have taught the students the Laravel framework from scratch. After showing all the basics of Laravel, authentication system, template mastering etc., I have developed a complete real estate listing web application with the latest version of Laravel, Laravel 10.\n\nThe persons who are very beginner in Laravel and only have few php and oop idea, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have coded following the standard and showed some advanced features.\nAdmin Panel Features:\nAdmin can change logo, favicon etc.\nAdmin can change top bar and footer information.\nAdmin can update the home page information.\nAdmin can update the contact page information.\nAdmin can create, edit and delete sliders.\nAdmin can create, edit and delete FAQs.\nAdmin can create, edit and delete blog categories.\nAdmin can create, edit and delete blog posts.\nAdmin can create, edit and delete events.\nAdmin can create, edit and delete causes.\nAdmin can create, edit and delete why choose us section\nAdmin can create, edit and delete testimonials.\nAdmin can create, edit and delete photos of photo gallery.\nAdmin can create, edit and delete videos of video gallery.\nAdmin can send email to subscribers\nAdmin can see all the user profiles\nAdmin can manage volunteers\nAdmin can change his own photo, information and password\nAdmin can update the privacy policy page information.\nAdmin can update the terms and conditions page information.\nUser Features:\nUsers can create account for free\nUsers can login and edit profile\nUsers can reset the password if they forget\nUsers can pay using PayPal and Stripe for any particular event to purchase tickets\nUsers can pay using PayPal and Stripe for any particular cause to donate\nUsers can see order history for cause or event ticket\nUsers can see invoice and print for cause or event ticket",
      "target_audience": [
        "Persons who want to learn a php framework from scratch",
        "Persons who want to learn making a complete web application from beginning",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to learn making a non-profit charity application with Laravel"
      ]
    },
    {
      "title": "React JS and Python Django Full Stack Master Course",
      "url": "https://www.udemy.com/course/react-js-and-python-django-full-stack-master-course/",
      "bio": "learn to create a full stack web application from scratch using Python Django and React JS.",
      "objectives": [
        "Full Stack Web Development",
        "React JS Front End Development",
        "Python Django Backend Development with Mongo DB, SQL Server, MySQL, PostgreSQL and SQLite Databases.",
        "Build REST APIs"
      ],
      "course_content": {
        "React JS, Django and Mongo DB": [
          "Introduction",
          "Install Python",
          "Install Visual Studio Code",
          "Install Postman",
          "Install Mongo DB Compass",
          "Install Node JS",
          "Create Django Project",
          "Models",
          "Serializers",
          "API Methods",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, Django and MySQL": [
          "Introduction",
          "Install Python",
          "Install Visual Studio Code",
          "Install Postman",
          "Install MySQL Workbench",
          "Install Node JS",
          "Create Django Project",
          "Models",
          "Serializers",
          "API Methods",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, Django and Microsoft SQL": [
          "Introduction",
          "Install Python",
          "Install Visual Studio Code",
          "Install Postman",
          "Install SQL Server Management Studio",
          "Install Node JS",
          "Create Django Project",
          "Models",
          "Serializers",
          "API Methods",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, Django and PostgreSQL": [
          "Introduction",
          "Install Python",
          "Install Visual Studio Code",
          "Install Postman",
          "Install PG Admin",
          "Install Node JS",
          "Create Django Project",
          "Models",
          "Serializers",
          "API Methods",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ],
        "React JS, Django and SQLIite": [
          "Introduction",
          "Install Python",
          "Install Visual Studio Code",
          "Install Postman",
          "Download SQLite Studio",
          "Install Node JS",
          "Create Django Project",
          "Models",
          "Serializers",
          "API Methods",
          "Upload File API",
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering",
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css, javascript and python programming"
      ],
      "description": "The demand for a Full-Stack Web Developer is the highest compared to any technology professional. They are paid exceptionally well both in the companies and also as freelancers.\nThis is due to the fact that full-stack web developers have diverse set of skills.\nThey are good at Database Development.\nBackend Development.\nAnd also in Front End Development.\nIn this course, you will learn full stack web development with React JS for the frontend and Python Django for the backend.\nWe will build the same backend project with different databases such as Microsoft SQL Server, My SQL, Mongo DB, PostgreSQL and SQLite.\nSections in this Master Course:\n1) React JS, Python Django and Mongo DB.\n2) React JS, Python Django and My SQL.\n3) React JS, Python Django and PostgreSQL.\n4) React JS, Python Django and Microsoft SQL Server.\n5) React JS, Python Django and SQLite.\nWith React JS, you will learn to\n* Add routing to our app.\n* Add bootstrap table with custom sorting and filtering features.\n* Add modal pop up window with drop down and date picker.\n* We will also learn how to upload an image and save it in the backend sever.\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "python developers, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "MERN Stack Job Portal App : React ,Redux ,Node ,Mongo 2021",
      "url": "https://www.udemy.com/course/mern-stack-job-portal-app-react-redux-node-mongo-2021/",
      "bio": "Build a Complete MERN Stack Job Portal application from scratch with React , Node , Express",
      "objectives": [
        "Ant Design Framework",
        "Ant Design Layouts , Tabs , Forms , Tables",
        "Working with API End Points",
        "Mongo DB atlas and Compass",
        "Redux States and Reducers",
        "Working with local storage and Redux store",
        "React Hooks, Async , Await with latest ES6",
        "Dynamic Forms with Ant Design",
        "Post Jobs , Apply Jobs",
        "Getting Applied Candidates Resume.",
        "Edit and Delete Options for Posted Jobs.",
        "Responsive UI",
        "Manage Jobs , Users anytime.",
        "Protected routes for logged in users.",
        "Deployment to Heroku.",
        "By the end of the courses you will know how to work with redux states ,reducers,actions.",
        "24/7 Q/A Support , Complete Source Code"
      ],
      "course_content": {
        "Introduction / Source Code": [
          "Introduction / Source Code"
        ],
        "Antd Topics": [
          "Ant Intro",
          "Ant Forms",
          "Ant Forms IntialValues",
          "Ant Forms Rules",
          "Ant Nested Forms (FormList)",
          "Ant Tables",
          "Ant Tabs"
        ],
        "Front End Setup": [
          "Creating React app",
          "Default Layout",
          "Navigation in Default Layout"
        ],
        "Backend Setup": [
          "Node and Express Server Setup",
          "Mongo DB Connection"
        ],
        "First API Route": [
          "Creating Job Model",
          "Adding static data to Mongo DB",
          "Get all jobs API - Postmon"
        ],
        "Redux Setup": [
          "Setup Redux Store and Reducers",
          "Bring Redux State to Homepage",
          "Get all jobs action",
          "Loading reducer",
          "Design Homepage with API Data",
          "Design JobInfo Page"
        ],
        "User Authentication": [
          "Creating User Model",
          "User Authentication API",
          "User Authentication Design",
          "User Authentication Actions"
        ],
        "Updating user profile": [
          "Update user profile form - 1",
          "Update user profile form - 2",
          "Update user profile Actions and API"
        ],
        "Posting New Job": [
          "Post Job - Design",
          "Post Job Action and API",
          "Posted Jobs List"
        ],
        "Edit Posted Jobs": [
          "Edit Jobs - Design",
          "Edit Jobs - Actions and API"
        ]
      },
      "requirements": [
        "React Basics",
        "Node Basics",
        "Javascript Basics"
      ],
      "description": "This is a Full Stack (MERN) Job Portal Application developed using React and React for Front End, Redux-Thunk for Asynchronous operations,\nNode JS for Runtime environment, Express JS for Backend Routing, and Mongo DB for Database.\nIn this course, you will learn the following topics\nAnt\nAnt Forms\nAnt Tables\nAnt Tabs\nReact Class and Functional Components\nBuilding Complex and Dynamic forms with React and Ant\nWorking with React-Redux actions, reducers, store\nUser Authentication\nAdding new jobs from react\nApplying to the jobs in the portal\nGetting applied candidates list\nSeparate UI for Job seeker and Job Poster\nManage Users, Jobs from React\nProtected routes\nPushing Application to GITHUB.\nVersion Control using GIT\nBy the end of the courses, you will know how to work with redux states, reducers, Middelwares including the payment gateway.\n24/7 Q/A Support.\nMERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js frontend framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and really any frontend JavaScript framework can work.\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework, and Node.js the popular and powerful JavaScript server platform. Regardless of which variant you choose, MERN is the ideal approach to working with JavaScript and JSON, all the way through.",
      "target_audience": [
        "Full Stack Developers",
        "React Developers",
        "MERN Stack Developers"
      ]
    },
    {
      "title": "Create a Simple Photo Gallery with Dropzonejs, Slick and PHP",
      "url": "https://www.udemy.com/course/create-a-simple-photo-gallery-with-dropzonejs-slick-and-php/",
      "bio": "Learn Multi-file Upload With Admin Panel and Database Interactivity From Scratch.",
      "objectives": [
        "Upload multiple files and create a nice gallery from uploaded files",
        "Learn how to validate image upload even with drag and drop function",
        "Learn how to seperate PHP logic from presenatation",
        "Learn how to use Slick Carousel",
        "Drag n drop with preview",
        "Access to my Introduction to Programming in PHP Course on Devscreencast dot com",
        "Learn How to store image path in MySQL",
        "Dynamically determine which images will be shown on the slider and which images will be hidden",
        "Build a lightweight admin panel with update and delete functions and Bootstrap 4"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course!",
          "Uploading files",
          "Displaying Uploaded files",
          "How to Review This Course",
          "Validation",
          "Seperating PHP Logic from Presentation",
          "Creating a Photo Gallery",
          "Styling the Photo Gallery",
          "Handling when no file has been uploaded",
          "Bonus Lecture - Discounts"
        ],
        "Adding Database Functionality": [
          "Creating a Database and Connecting With PDO",
          "Save Image Path to Database During Upload",
          "Load Slider Images from the Database"
        ],
        "Admin Panel: Managing Uploaded Images": [
          "Setup Admin Index Page With Bootstrap 4",
          "Display All Images From The Database In The Admin Panel",
          "Hide or Show Slider Images",
          "Deleting Image"
        ]
      },
      "requirements": [
        "Computer with internet connections",
        "Already Setup PHP Development Environment"
      ],
      "description": "DropzoneJS is a helpful and open source tool designed to make uploading files to a website easier. It stands out because it lets you just drag and drop files into it, and it shows previews of images as soon as you upload them. This feature is especially useful for those who need to handle file uploads on their websites efficiently.\nIn this focused and short course, you will delve into how to use DropzoneJS effectively. The course is structured in a way that you will first learn how to integrate DropzoneJS into the front end of a website for uploading files. This means you'll be able to see how files, especially images, can be added to a website by simply dragging and dropping them into a designated area.\nThe course also covers the use of PHP, a widely-used programming language, for processing these files on the back end. This means after the files are uploaded using DropzoneJS, PHP will take over to manage these files on the server.\nA key part of the course involves learning how to check (or validate) files during the upload process. This is crucial for ensuring that only the right types of files are uploaded and that they meet certain criteria, like size or format.\nAnother exciting aspect of this course is teaching you how to create a photo gallery. This isn't just any gallery, but one that uses the slick carousel - a popular tool for making sliding image displays. You'll learn how to control which images appear in this slider through an admin panel. This includes setting conditions for displaying certain images and also the ability to delete images from the gallery.\nHowever, to take this course, you need to have a PHP development environment already set up on your computer.",
      "target_audience": [
        "Anyone who wants to learn about DropzoneJs Library",
        "Anyone who wants to learn how to create a photo gallery",
        "Anyone who wants to learn how to upload and read images with PHP",
        "Anyone who wants to learn how to build a lightweight admin panel for managing images"
      ]
    },
    {
      "title": "PHP Date and Time with Carbon by Edwin Diaz",
      "url": "https://www.udemy.com/course/crash-course-learn-to-create-date-and-time-in-php-easily/",
      "bio": "Learn to customize Date and Time in your PHP applications easily and fast with Edwin Diaz.",
      "objectives": [
        "At the end of the course students will be able to customize time in PHP",
        "At the end of this course students will be able to implement custom time and date features to any PHP application",
        "A the end of this course students will be able to create any time and date feature in PHP easily"
      ],
      "course_content": {
        "Let's start customizing time and date": [
          "Introduction",
          "Installing our package with composer (Optional)",
          "Requiring our date and time features manually",
          "Let's create some time",
          "Formating dates",
          "Some get methods",
          "Some set methods",
          "Setting up time-zone",
          "Date and time manipulation",
          "Comparison methods",
          "Differentiation methods",
          "Method modification",
          "Preventing object alteration by copying it",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Basic OOP in PHP"
      ],
      "description": "Have you even struggled with dates and time in PHP?\nHave you ever wished there was an easier way to implement dates and time in PHP?\nThen this course is for you.\nIn this course you will learn techniques that will allow you to create really awesome date and time functionality for your PHP applications using a great PHP API extension for DataTime called Carbon.\nSay good bye to complicated timestamp modifications and complicated code. No more coding for hours building a time / date feature for your application with Carbon this is a thing of the past.\nWith this course you will create time / date features for your application in minutes if not seconds.\nWhy I created this course?\nI created this course because I saw myself spending too much time with dates and time when building my applications, so I needed a better solution. A solution that would take little time and a solution that was easy to implement. I figured if I was spending too much time on this,  others probably had the same issue, right?\nEnjoy!\nI love all my students and my success depends on theirs, or I should say on yours. Come join me in this course and learn to create date and time the easy way.",
      "target_audience": [
        "Student with basic OOP in PHP can take this course",
        "Students struggling to create date and time in PHP should take this course",
        "Students looking an easy way to implement date and time features in their PHP applications should take this course"
      ]
    },
    {
      "title": "Deep Dive into Functional JavaScript",
      "url": "https://www.udemy.com/course/deep-dive-into-functional-javascript/",
      "bio": "A practical guide to mastering functional programming in ES6 from the perspective of building real-world applications.",
      "objectives": [
        "Discover the principles of functional programming",
        "Learn the benefits and drawbacks of functional programming compared to other styles",
        "Learn the language constructs of ES6 that are used for functional programming",
        "Write elegant code with chaining and context binding",
        "Understand function composition and function sequencing in depth",
        "Learn about higher order functions with a special emphasis on map, reduce, and filter",
        "Translate SQL queries into chained map and reduce calls",
        "Learn currying and partial application in practice",
        "Learn recursion, tail-call optimization, and the role of accumulator variables",
        "Experiment with optimization techniques combating the performance drawbacks of functional programming",
        "Map out a plan for how to continue after the course"
      ],
      "course_content": {
        "Introduction to Functional Programming": [
          "The Course Overview",
          "Imperative and Declarative Programming by Example",
          "Principles of Writing Code in Functional Style",
          "Benefits and Drawbacks of Functional Programming"
        ],
        "Functional Programming in ES6": [
          "Getting Started with ES6",
          "Deep and Shallow Cloning in JavaScript",
          "Context Binding by Example",
          "Chaining and Function Composition"
        ],
        "Higher Order Functions in JavaScript": [
          "What are Higher Order Functions?",
          "Handling JavaScript Arrays with Higher Order Functions",
          "Introducing Map, Reduce, and Filter",
          "Joins with Map-Reduce",
          "Filtering Examples",
          "Converting an Array of Nodes to a Tree"
        ],
        "Currying and Partial Evaluation": [
          "Definitions",
          "Deep Dive into Currying",
          "Partial Application",
          "Rendering Templates Using Partial Application"
        ],
        "Recursion, Tail Recursion, and Accumulator Variables": [
          "Recursive and Iterative Solutions in JavaScript",
          "Optimization Techniques with Recursion"
        ],
        "Summary and Outlook": [
          "Your Functional Programming Utility Belt",
          "Your Learning Path"
        ]
      },
      "requirements": [
        "Take this course if you understand the fundamentals of JavaScript, such as scopes and closures, and you are familiar with at least the ES5 syntax."
      ],
      "description": "In this course, you will have an in-depth overview and the tools in your utility belt to write maintainable code in JavaScript.\nWe will stick to the latest version of JavaScript in this course, ES2017. You don't have to know ES2017 to benefit from the course, as we will introduce the language constructs that we use during it.\nYou will experience the benefits of functional programming even if your code is not purely functional. In this course, you will learn the building blocks that act as a utility belt in your arsenal, enabling you to write code that's easy to understand, extend, test, and debug. You will get hands-on practice on how to use currying, partial evaluation, map, reduce, filter, recursion, and other functional programming concepts in ES6.\nAbout the Author\nZsolt Nagy is a web development team lead, mentor, and software engineer living in Berlin, Germany. As a software engineer, Zsolt continuously challenges himself to stick to the highest possible standards when improving his own knowledge. The best way of learning is to create a meaningful product on the way. Until you reach this state, the second best way of learning is to share with others what you learned and how you structure your thoughts.\nZsolt is an author of the book and video course ES6 in Practice, introducing you to all meaningful features of ES6. He is also an author of the book The Developer’s Edge – How to Double Your Career Speed with Soft-Skills.",
      "target_audience": [
        "This course is geared towards software developers who would like to improve their skills and expertise by sticking to the highest quality standards when it comes to writing code."
      ]
    },
    {
      "title": "SVG (Scalable Vector Graphics) 2025 - Inside the Code",
      "url": "https://www.udemy.com/course/scalable-vector-graphics-inside-the-code/",
      "bio": "Learn, understand, write, and modify SVG markup",
      "objectives": [
        "Where to find and how to author SVGs",
        "Ways to add SVGs to your web pages",
        "Understand the underlying code of SVG images",
        "Become familiar with SVG elements and attributes",
        "How to modify, transform, and animate SVG images"
      ],
      "course_content": {
        "Introduction to Scalable Vector Graphics (SVG)": [
          "Course Introduction",
          "SVG vs Raster Graphics and SVG Advantages for the Web",
          "Access to Codepens shown throughout this course"
        ],
        "Finding, Making, and Using SVGs": [
          "Downloading, Authoring, or Coding SVGs",
          "Helpful Tools for this Course",
          "Adding SVGs to a Web Page"
        ],
        "Introduction to SVG Code": [
          "Introduction to SVG Code Elements",
          "SVG Visual Elements - Basic Shapes",
          "SVG Structural, Container, and Descriptive Elements",
          "Introduction to SVG Attributes"
        ],
        "Styling SVGs": [
          "How to Style SVG Elements"
        ],
        "SVG Paths and Path Commands": [
          "Introduction to SVG Paths",
          "SVG Path Commands: MoveTo and LineTo",
          "SVG Path Commands: Curves and Arcs",
          "Viewing and Modifying SVG Paths"
        ],
        "SVG Text": [
          "Introduction to SVG Text",
          "SVG Text on a Path"
        ],
        "SVG Sizing - Viewport and viewBox": [
          "Introduction to SVG Sizing and Positioning",
          "SVG Aspect Ratios"
        ],
        "SVG Transformations and Animations": [
          "SVG Transforms",
          "SVG Animations - Part 1",
          "SVG Animations - Part 2",
          "SVG Line Drawings"
        ],
        "Other SVG Features and Topics": [
          "Linear and Radial Gradients",
          "SVG Filters",
          "Clip-Paths and Masks"
        ],
        "SVG Manipulation by JavaScript": [
          "Using JavaScript to Manipulate SVG Elements"
        ]
      },
      "requirements": [
        "This course requires prior knowledge of HTML and CSS.",
        "Familiarity with Visual Studio Code or another source code editor will be helpful but not absolutely required.",
        "A desire to learn the most cutting-edge information about scalable vector graphics."
      ],
      "description": "This course is all about SVGs - Scalable Vector Graphics. We cover where to find and download SVGs, how to author SVGs in programs such as Inkscape and Illustrator, and ways to add SVGs to your web pages.  But the primary focus is toward understanding the underlying text-based code of SVGs. We show how to view, comprehend, write, and modify markup by detailing the definitions and uses of numerous SVG elements and attributes. We cover such topics as:\nHow to code for basic shapes such as circles, lines, curves, and polygons.\nHow to understand paths and the commands used for drawing them.\nHow to add artistic text elements to a SVG.\nHow to target and style specific SVG elements using CSS or presentation attributes.\nHow to understand viewports, viewBox, sizing, and positioning of SVG elements.\nHow SVG elements can be transformed or animated.\nHow to implement gradients, filters, clip-paths, and masks.\nHow to create, modify, or remove SVG elements from a web page using JavaScript.\nHow titles, descriptions, roles, and aria attributes can be used for SVG accessibility and SEO.\nPrior coding experience is not absolutely necessary as this course provides a good overview of SVG fundamentals. But to really get the most out of the lessons, it helps to have knowledge of or experience with HTML5 and CSS3.",
      "target_audience": [
        "This course is intended for web designers, developers, and anyone else with curiosity about SVGs (scalable vector graphics). Perhaps you have heard of SVGs or even used them in the form of logos and icons and now want to really understand them. Perhaps you have taken a look at SVG code and found it too complex and overwhelming. Or maybe you visited a fast-loading website with some amazing graphics and animations and wanted to know how they were made. If any of these describe you, then you have chosen the right course. I fully understand that SVGs can be complicated and the code can be intimidating. But when you take the time to understand what the code means and how SVGs can be manipulated and animated, you can do amazing things on your website."
      ]
    },
    {
      "title": "The Complete Course of Umbraco 2025",
      "url": "https://www.udemy.com/course/umbraco-course/",
      "bio": "Learn how to build Websites in a Professional way from Scratch. Become an expert in Umbraco CMS, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master Umbraco CMS, to be able to develop your own websites from scratch",
        "You will be able to build step by step Webs, understanding all the logic and ending with advanced practical exercises, assignments, and a complete project",
        "You will become familiar with the Umbraco interface, toolbars and basic commands, and you will master all the phases of the configuration process",
        "You will learn in a professional way how to create Content Nodes, Templating basics, Compositions, and Inheritance",
        "You will master the property editors: checkbox list, date picker with time, dropdown, eye dropper color picker, file upload, media picker & text area/box/editor",
        "You will use CSS Styling for Umbraco Websites",
        "You will work with templates, data structures, partial views, packages, and Umbraco forms",
        "You will learn the use of Content Delivery API: get content using ID and Route, Query Methods, Swagger, and API Security Configurations",
        "You will discover the Techniques for the optimization of Umbraco Website, understanding their interpretation and implementation",
        "You will use User Authentication and Authorization",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the final project (complete web)",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to Umbraco": [
          "Course welcome",
          "Introduction to CMS",
          "Overview of Umbraco",
          "Quiz",
          "Installing Umbraco using CLI",
          "Installing Umbraco using Visual Studio IDE",
          "Exploring the Umbraco Interface"
        ],
        "Building a Basic Website": [
          "Creating Content Nodes",
          "Templating Basics",
          "Compositions, Understanding Inheritance",
          "Property Editors",
          "Checkbox List",
          "Date Picker with Time",
          "Dropdown",
          "Eye Dropper Color Picker",
          "File Upload",
          "Media Picker",
          "Text Area / Text Box / Rich Text Editor",
          "Basic CSS Styling for Umbraco Websites",
          "Assignment Section 2",
          "Assignment Section 2 answer"
        ],
        "Intermediate Concepts": [
          "Working with Templates",
          "Master Templates",
          "Data Structures",
          "Partial Views",
          "Extending Umbraco with Packages",
          "Umbraco Forms",
          "Assignment Section 3",
          "Assignment Section 3 answer"
        ],
        "Advanced Topics": [
          "Content Delivery API",
          "Get content using ID and Route",
          "Query Methods",
          "Swagger",
          "Content Delivery API Security Configurations",
          "Optimization of Umbraco Website",
          "User Authentication and Authorization",
          "Assignment Section 4",
          "Assignment Section 4 answer"
        ],
        "Final Project Development: The complete website": [
          "Creating a Project and Choosing the right Template",
          "Creating Content Nodes and Templates",
          "Creating a Form",
          "Building About Us Page",
          "Building Services Page",
          "Building Clients Page",
          "Building Partial Views for Navigation"
        ]
      },
      "requirements": [
        "Having basic notions of Umbraco can help, but the course starts from scratch",
        "Download and install Umbraco and needed software (if you don't know how, don't worry, it's very easy, free and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become an Umbraco professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that students, developers, IT enthusiasts... can learn Umbraco CMS from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in development, we have realized that nowadays mastering Umbraco is very necessary for web development. Knowing how to use this package can give you many job opportunities and many economic benefits, especially in the world of IT.\nThe big problem has always been the complexity to perfectly understand Umbraco it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 10 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Umbraco CMS. The course will teach you web applications development in a practical way, from scratch, and step by step.\nWe will start with the installation of the Umbraco on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to Umbraco and course dynamics\nDownload and Install Umbraco latest version, packages and configuring it\nGeneral familiarization with the user interface and elements\nCreating Content Nodes, Templating basics, Compositions, and Inheritance\nMastering property editors: checkbox list, date picker with time, dropdown, eye dropper color picker, file upload, media picker, and text area/box/editor\nCSS Styling for Umbraco Websites\nWorking with templates, data structures, partial views, packages, and Umbraco forms\nFull use of Content Delivery API: get content using ID and Route, Query Methods, Swagger, and API Security Configurations\nTechniques for the optimization of Umbraco Website\nUser Authentication and Authorization\nBuilding from scratch your complete website and all its pages\nMastery and application of absolutely ALL the functionalities of R Shiny\nPractical exercises, assignments, complete project and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to build a wide variety of webs quickly and make versatile and complete use of Umbraco CMS. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning Umbraco has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used Umbraco CMS before",
        "Developers, IT enthusiasts, students... who want to learn an effective way to develop Websites",
        "Intermediate or advanced Umbraco students who want to improve their skills even more!"
      ]
    },
    {
      "title": "HTML & CSS 2025: Hands-on No-nonsense Guide",
      "url": "https://www.udemy.com/course/html-css-less-flex-grid-course-tutorial/",
      "bio": "Build online CV in two completely different templates. Includes modern Responsive Web Design (RWD) with Flexbox and Grid",
      "objectives": [
        "Create basic and advanced HTML pages with images, lists, tables, forms, audios and videos",
        "Create responsive web design (RWD) layouts using divs, semantic tags as well as modern flexbox and grid mechanisms",
        "Style the HTML pages with the use of CSS stylesheets and modern CSS features such as transforms, transitions, flexbox, grid layouts",
        "Know how to balance between cutting-edge technologies and supported devices maximization",
        "Create a complete capstone project - an online CV page in two completely different layouts."
      ],
      "course_content": {
        "Introduction": [
          "Course Promo Video",
          "Pre-Tests and Post-Tests",
          "Downloading Source Code",
          "Support & Community"
        ],
        "HTML - Images, Links, Lists, Tables, Forms": [
          "HTML Section Introduction",
          "HTML files. Creating and displaying. Basic syntax.",
          "Text formatting in HTML. Basic tags and text styles.",
          "Inserting and basic positioning.",
          "Acquring and copyright.",
          "File formats and optimization.",
          "Positioning and transforms.",
          "Links",
          "Lists",
          "Tables",
          "Forms",
          "HTML Section Summary"
        ],
        "CSS and Responsive Web Design (RWD)": [
          "CSS Section Introduction",
          "Basics of CSS",
          "CSS for Responsive Design (RWD)",
          "HTML layout using divs and semantic tags (RWD)",
          "HTML layout using Flexbox (RWD)",
          "HTML layout using Grid (RWD)",
          "HTML media. Video and audio",
          "CSS transitions. Animations in HTML",
          "CSS web fonts",
          "Can I use? HTML and CSS features’ support level",
          "HTML and CSS resources",
          "Less Installation",
          "Less Features",
          "Less Watchers - Continuous CSS Compilation",
          "Less Resources",
          "CSS Section Summary"
        ],
        "CV Zen Garden Capstone Project Initialization": [
          "Project Initialization Section Introduction",
          "Capstone Project Introduction",
          "Inspiration and reference",
          "Concept of the Layout",
          "Project Initialization",
          "Semantic HTML",
          "Project Initialization Section Summary"
        ],
        "Modern Layout - CV Zen Garden Capstone Project": [
          "Modern Layout Section Introduction",
          "Grid. Colors. Typography - Modern Layout",
          "Header - Modern Layout",
          "About Me Section - Modern Layout",
          "Education Section - Modern Layout",
          "Work Experience Section - Modern Layout",
          "Languages Section - Modern Layout",
          "Skills Section - Modern Layout",
          "Hobbies Section - Modern Layout",
          "Contact and Address Sections - Modern Layout",
          "RWD Mobile Version - Modern Layout"
        ],
        "Newspaper Layout - CV Zen Garden Capstone Project": [
          "Newspaper Layout Section Introduction",
          "Grid. Colors. Typography - Newspaper Layout",
          "Job and Address Sections - Newspaper Layout",
          "About Me Section - Newspaper Layout",
          "Photo Section - Newspaper Layout",
          "Education Section - Newspaper Layout",
          "Work Experience Section - Newspaper Layout",
          "Languages Section - Newspaper Layout",
          "Skills Section - Newspaper Layout",
          "Hobbies Section - Newspaper Layout",
          "RWD Mobile Version - Newspaper Layout"
        ],
        "Summary": [
          "Capstone Project Summary",
          "Course Summary"
        ],
        "Web Dev Ideas and Challenges": [
          "Additional Web Dev Ideas",
          "Pinterest-like Layout using CSS only",
          "Limit Lines of Text on Cards with CSS",
          "How to make a block or image full-screen with CSS"
        ],
        "Continuing Your IdeaSpot.TV Journey": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know.",
        "Some technical background might be helpful.",
        "Join me if you like to learn in an agile, hands-on, no-nonsense manner."
      ],
      "description": "This course contains human-made closed-caption (CC) subtitles in English. This course is updated regularly with fresh content.\nHello and welcome! This course will guide you through the process of learning and practicing modern websites’ creation with HTML5 and CSS3.\nMy name is Dr. Artur Karczmarczyk and I am a Full-Stack Web Developer and Software Engineer with 16 years of commercial experience. I am also an Associate Professor at a well-known Technical University in Poland and have taught IT and web development skills to hundreds of students.\nBy the time you finish this course:\nYou’ll be able to create basic and advanced HTML pages with images, lists, tables, HTML5 forms, audios and videos.\nYou will know how to create responsive layouts using divs, semantic tags as well as modern Flexbox and Grid mechanisms.\nYou will be able to style HTML pages with the use of cutting-edge CSS and LESS features.\nIn the next 12 hours I will take you through all the important steps in creating HTML5 web pages. We will start by creating your first Hello World web page in a free code editor that I will show you how to install and configure. Then I will guide you through some basic text formatting. You will learn about acquiring, inserting and positioning images on your pages. I will show you how to legally acquire images and photos for your commercial projects. Then, we will dive into the common HTML structures – links, lists, tables and forms, including modern HTML5 inputs and validation methods. After that, in Section 3, we will introduce CSS and use it to create responsive web design (RWD). We will use divs, semantic tags, Flexbox and Grid, always to create a layout that works great on both mobile and desktop devices. We will also introduce LESS, so you can create CSS stylesheets easier and more efficient. In the final three sections I will guide you through a capstone project. Inspired by CSS Zen Garden website, we will create an online CV page using semantic HTML and then use CSS to create two completely different themes for it.\nThis course is for you if you have some technical skills but are completely new to web development. If you want to know modern up-to-date HTML5, CSS3 and LESS technologies, use this course to learn them in an agile, hands-on, no-nonsense manner.\nSo, feel free to take a look through the free previews and then join me as we create your first HTML5 web pages and solve tens of HTML and CSS challenges together!",
      "target_audience": [
        "Beginner Web developers with technical mindset."
      ]
    },
    {
      "title": "Tree Data Structure and Algorithms",
      "url": "https://www.udemy.com/course/tree-data-structure-and-algorithms/",
      "bio": "Mastering the art of solving Tree problems and acing the Coding Interviews",
      "objectives": [
        "Be able to visualize the Tree data structure clearly.",
        "Build a strong base for the most common tree based algorithms asked in the interviews.",
        "Be able to break down a bigger problem into smaller and easily solvable sub-problems.",
        "Understand what kind of problems are asked in the recent coding interviews.",
        "Gain confidence for the coding interviews."
      ],
      "course_content": {
        "Introduction": [
          "Trees Introduction",
          "Root-Finding",
          "Binary Tree Introduction",
          "Counting Things"
        ],
        "Inorder Traversal": [
          "Inorder Traversal Introduction",
          "Catalan Numbers",
          "Q1) N'th node in an Inorder traversal",
          "Summing Squared Nodes",
          "Q2) Inorder Predecessor",
          "Inorder Traversal without using Recursion"
        ],
        "Preorder and Postorder Traversals": [
          "Introduction",
          "Post from In & Pre",
          "Highest level of a node",
          "Counting highest level nodes",
          "Copy a Tree",
          "Delete a Tree",
          "Expression Tree",
          "Expression Tree traversal"
        ],
        "Binary Search Tree": [
          "Introduction",
          "Identify BST",
          "Searching in a BST",
          "Iterative Searching in BST",
          "Insertion in a BST",
          "Valid Insertion Sequence",
          "Deletion in a BST",
          "Operations Clubbed BST",
          "Sort the Nodes",
          "Sort the nodes in decreasing order",
          "Lowest Common Ancestor in BST",
          "Lowest Common Ancestor Range",
          "LCA concept extended"
        ],
        "Bonus": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basics of programming such as if/else statements, loops & functions.",
        "Some basic knowledge of recursion (not necessary though)"
      ],
      "description": "Are you looking for a zero to hero course on Tree Data Structure and Algorithms?  Do you want to master the topic which is most frequently asked in any coding interview?  Are you a passionate problem solver/algorithm enthusiast/theoretical computer scientist who is looking to scale up his problem solving skills? Have you been using trees but still not able to understand it perfectly and thoroughly or are you looking for a course that helps you feel and visualize the tree data structure/algorithms? Are you looking forward to train your mind on how to think instead of cramming algorithms?\nAre these some of the questions that come to your mind?\nIf yes, then you are reading the description of a perfect course you intended for.\nUnderstanding the tree data structure and algorithms is of utmost importance in the journey to become a top-notch programmer. This is because trees are fundamental data structures and they pop up at more places than you realize. Be it the file system on your PC or the PDF that you read or the chess game that you play against an AI or even the auto-correct/spell-checker that you use while documenting something, all of them are using trees under the hood. In fact they are the first data structure you will perform meaningful recursive computation on and therefore understanding trees even helps to strengthen and solidify the recursion concepts and divide and conquer paradigm.\nThis is the reason why coding interviews are majorly constituted by tree problems. Understanding the tree data structure and algorithms is undoubtedly mandatory for acing the interview process of the the Tech Giants like Google, Apple, Facebook, Microsoft, IBM etc.\nWe have spent a great amount of time in developing and organizing the content of the course taking into consideration that the learning should be as fluid and smooth as possible. The contents are systematically laid out. We follow a fundamental approach for imparting our knowledge and for explaining the concepts intensively. We start with a thorough and an in-depth coverage of theory followed by a great collection of solved interview problems regarding the topic studied. Apart from that we provide various brain twister quizzes and coding assignments along with their true solutions(C++ and Java codes for the programming assignments) for every topic that we study. We have always been praised for the quality questions that we put in our assignments by our students who believe that it has helped them to grasp and remember more.\nThe student would be able to maximize his learning if he follows the course from the start till the end along with an active usage of the discussion forums. We have a highly responsive team who are looking forward to help the students in the discussion forums with alacrity.\nSo what are you waiting for. Just go ahead and sign up for this easy to understand course and get one step closer in the path of becoming a top notch programmer and get ready to land up your dream job by mastering the art of understanding tree data structure and algorithms.",
      "target_audience": [
        "Anyone who wants to prepare for any kind of a coding interview.",
        "Anyone who is interested in improving their problem solving skills.",
        "Anyone who wants to get started with Tree data structure and related algorithms.",
        "Anyone who wants to strengthen their existing knowledge on trees and visualize how the things work under the hood."
      ]
    },
    {
      "title": "PHP and Wordpress for Beginners",
      "url": "https://www.udemy.com/course/php-and-wordpress-for-beginners/",
      "bio": "Learn PHP and Wordpress from scratch and Build websites and Applications",
      "objectives": [
        "Build a good business or personal website with Wordpress",
        "Build a basic website with PHP",
        "Install WordPress locally",
        "Install WordPress on Shared Hosting",
        "Setup PHP development environment",
        "Update PHP Webpages easily",
        "Understand PHP Data Types",
        "Understand PHP Variables",
        "Understand PHP Functions",
        "Understand PHP Conditional Statements",
        "Understand PHP Loops",
        "Understand Wordpress Themes",
        "Understand Wordpress Plugins",
        "Understand Wordpress Widgets",
        "Understand how to login and logout of Wordpress"
      ],
      "course_content": {
        "Setting Up PHP Development Environment": [
          "Introduction",
          "What is PHP",
          "Installing PHP",
          "XAMMP Control Panel",
          "PHP Syntax",
          "PHP Code Comments",
          "PHP Data Types",
          "Some examples of PHP Data Types",
          "PHP PRINT and ECHO Statements"
        ],
        "Introduction to PHP Variables": [
          "What are Variables",
          "How to create Variables",
          "What are Variable Scopes",
          "PHP Local Variable Scope",
          "PHP Global Variable Scope",
          "PHP Static Variable Scope"
        ],
        "Introduction to PHP Operators": [
          "What are operators",
          "Arithmetic Operators",
          "Assignment operators",
          "Comparison Operators",
          "Increment and Decrement Operator",
          "Logical operators",
          "String operators",
          "PHP Array Operators"
        ],
        "Introduction to PHP Conditional Statements": [
          "What are conditional statements",
          "IF Statements",
          "IF ELSE Statements",
          "IF ELSE IF ELSE Statement",
          "Switch Statements"
        ],
        "Introduction to PHP Loops": [
          "What are Loops",
          "WHILE Loops",
          "DO WHILE Loops",
          "FOR Loops",
          "FOREACH Loops"
        ],
        "Introduction to PHP Functions": [
          "What are Functions",
          "Function Arguments",
          "DATE Functions",
          "DATE Functions - Part 2",
          "STRING Functions",
          "STRING Functions - Part 2"
        ],
        "Introduction to PHP Arrays": [
          "What are Arrays",
          "Indexed Arrays",
          "Associative Arrays",
          "Multidimensional Arrays"
        ],
        "PHP Project: Build A MIni Website": [
          "What we will build",
          "Using PHP INCLUDE",
          "Creating the website -Part 1",
          "Creating the website -Part 2",
          "Creating the website -Part 3"
        ],
        "Introduction to WordPress": [
          "What is wordpress",
          "Installing Wordpress locally",
          "How to access Wordpress locally",
          "Bitnami Manager",
          "Shared Hosting and Domain Name",
          "Getting Domain Name and Hosting",
          "How to change hostgator password",
          "Installing wordpress on shared hosting",
          "How to Login and Logout of Wordpress",
          "How to change WordPress Password",
          "Post WordPress installation emails"
        ],
        "Create a Business or Personal Website with Wordpress|2018": [
          "What we will build",
          "What is a Wordpress Theme",
          "How to change Wordpress Theme",
          "WordPress Plugins",
          "Creating a Logo",
          "Adding Logo to website",
          "Getting Images for a slider",
          "Adding images to slider",
          "What are Widgets",
          "Exploring Widgets",
          "Adding a gallery to website",
          "Adding social media icons to website",
          "Adding video to webpage",
          "Editing Permalinks",
          "Creating blank webpages",
          "Creating a menu",
          "Adding content to pages part 1",
          "Adding content to pages part 2",
          "Adding a contact form and Google Maps",
          "Changing font properties",
          "Adding links",
          "Thank You"
        ]
      },
      "requirements": [
        "You should have basic knowledge of HTML and CSS",
        "You should have some basic JavaScript Knowledge",
        "You should be able to use a PC at beginner level",
        "You should be able to navigate the internet at beginner level"
      ],
      "description": "PHP is a popular programming language that you can use to write simple code for web pages. If you have been using HTML to develop websites, learning PHP will allow you to create dynamic pages. In this course,  you will learn the fundamentals of PHP. The course covers concepts such as how to embed PHP code into an HTML page, and reviews the basic PHP data types such as strings and arrays. The course also covers the different control structures in PHP, how to work with built-in PHP functions, and how to define your own custom functions.\nPHP is  one of the the most popular server-side language used to build dynamic websites.\nTopics include:\nHow to setup local PHP development environment\nWhat is PHP\nBasic PHP Syntax\nPHP Data Types\nPHP Variables\nPHP Variable Scopes\nPHP Arrays\nUsing Print and Echo Statements\nUsing code  comments\nPHP Operators\nUsing PHP Conditional Statements to make decisions\nUsing switch statement\nUsing while loops\nUsing For and foreach loops\nPHP Functions\nFunction arguments\nPHP String functions\nCreating custom functions\nPHP String functions\nPHP Include statement\nUsing echo and print statement\nPHP Date functions\nBuilding a simple PHP wesite\n\n\nIn  this course you will learn  how to create a good looking and functional website  from scratch using WordPress without knowing how to code. The course gives you the option of creating a website on a remote shared hosting computer that the whole world can visit or on you own computer where you can show  your creativity to friends and family.\nWhy pay hundreds or even thousands of dollars or pounds to a professional web developer to create a  website for you when you can learn to do it yourself in a fun way and maybe even create websites for others yourself.\nWhat you will learn includes:\nHow to install WordPress on your own computer\nHow to signup for a shared hosting account\nHow to register a domain name\nHow to install WordPress on a shared hosting remote server (powerful computer that is on 24/7)\nHow to install and customise a theme\nHow to install and use plugins\nHow to add a slider with images  to website\nHow to add video to website\nHow to add image gallery to website\nHow to create webpages\nHow to add a functional contact form to website\nHow to add google map to show your location\nHow to create a logo\nHow to add social media icons to website\nBy the end of this course, you will have a good looking WordPress website and would learnt some useful skills along the way.",
      "target_audience": [
        "Beginner PHP Developers",
        "Beginner We Developers",
        "Beginner Programmers",
        "Beginners to Wordpress"
      ]
    },
    {
      "title": "Build AI Apps with Spring AI, OpenAI, Ollama & SpringBoot",
      "url": "https://www.udemy.com/course/build-ai-apps-with-spring-ai-openai-springboot/",
      "bio": "Learn chat with LLMs, Retrieval-Augmented Generation, tool calling, and multimodal AI using Spring AI.",
      "objectives": [
        "Learn to integrate Large Language Models (LLMs) with Spring AI to build interactive chat applications using Java and Spring Boot.",
        "Understand and implement Retrieval-Augmented Generation (RAG) to enhance LLM responses using custom and external knowledge sources.",
        "Master tool calling with Spring AI to enable your LLM apps to take real-world actions like querying APIs or performing tasks.",
        "Build multimodal applications that work with text, images, and audio by leveraging the latest OpenAI capabilities in Spring AI.",
        "Learn how to configure and work with Spring AI clients, including prompt templates, message history, and streaming responses.",
        "Build and deploy multiple real-world projects that cover chatbots, search assistants, and AI-powered tools using Spring AI."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Pre-requestites"
        ],
        "Course Slides and Source Code": [
          "Course Slides",
          "Source Code"
        ],
        "Introduction to Large Language Models (LLMs), OpenAI & ChatGPT [ Theory ]": [
          "The World Before LLMs: A Glimpse into the Past\"?",
          "Large Language Models and its Evolution",
          "Advantages, Challenges with LLMs",
          "Sign up for a ChatGPT Account and Start Exploring"
        ],
        "Getting Started with Spring AI and OpenAI API": [
          "Introduction to Spring AI",
          "Setup OpenAI Account & Open AI Playground",
          "Set Up Java using SDKMan",
          "Set up the Base Project using Gradle and IntelliJ",
          "Lets Chat with OpenAI Platform using Spring \"ChatClient\"",
          "Setting Up Insomnia to Test the Chats Endpoint",
          "How does the ChatClient Work under the hood ? - AutoConfiguration & API call to",
          "Prompt, Tokens and Tokenization - What are they ?",
          "OpenAI Request Parameters - temperature",
          "OpenAI Request Parameters - max_tokens",
          "Understanding System, Assistant, and User Messages in OpenAI",
          "System, Assistant, and User Messages in Action",
          "Streaming OpenAI Responses"
        ],
        "Global ErrorHandler to deal with Exception/Errors using Github Copilot": [
          "SetUp Copilot in Intellij",
          "Error Handling using ControllerAdvice"
        ],
        "Streamlining Message Passing to LLMs using StringTemplates & PromptTemplates": [
          "Building prompts using the Prompt and ChatClient",
          "Enhancing Prompt Management with StringTemplate",
          "Using PromptTemplate: A Simplified Way to Pass Messages to AI",
          "Passing Dynamic Values to Prompts - Alternative Approach"
        ],
        "Spring AI Advisors: Enhancing AI Interactions": [
          "A Quick Introduction to Spring Advisors",
          "Spring Advisor in Action - SimpleLoggerAdvisor",
          "Let's build our own Build Custom Advisor"
        ],
        "Prompt Engineering": [
          "Prompt Engineering & PromptTemplate",
          "Prompt Engineering in Action - Lets explore the Travel Plan Prompt",
          "Understanding Prompt Injection and How to Mitigate it?",
          "Zero Shot Prompting",
          "Few Shot Prompting",
          "Chain of Thought Prompting",
          "Mastering Multi-Step Prompts"
        ],
        "Generating Structured Data with OpenAI & Spring AI": [
          "Introduction to Structured Outputs in LLM",
          "Structured outputs using Prompt Engineering",
          "Structured outputs with Few Shot Examples using Prompt Engineering",
          "Structured Outputs using entity() function - Using BeanOutputConverter",
          "How Structured Outputs work in SpringAI - Under the Hood?",
          "Using ParameterizedTypeReference for Structured Outputs - List Collection Types",
          "Generate Structured Outputs of type \"Map\" Collection Type"
        ],
        "Augmenting LLMs using Tool Calling using Spring AI": [
          "Tool Calling - What & Why ?",
          "Tool Calling with OpenAI: Accessing System Time",
          "How Tool Calling works under the hood\" in OpenAI and Spring AI?",
          "Tool Calling in Action: Accessing Live Currency Exchange Rates",
          "Tool Calling in Action using Functions: Accessing Live Weather Data",
          "Tool Calling in Action using Spring Beans: Accessing Live Weather Data",
          "Structured Outputs using Tool Calling with \"ReturnDirect\"",
          "Adding Metadata to the Tool Calling using ToolContext"
        ]
      },
      "requirements": [
        "Basic knowledge of Java and Spring Boot will help, but the course covers concepts from scratch for new learners.",
        "No prior experience with AI, OpenAI, or LLMs is required—everything is explained in a simple, hands-on way.",
        "Familiarity with REST APIs and JSON can be helpful, but not mandatory to follow along with the projects.",
        "Curiosity and willingness to experiment with code are the most important things you’ll need for this course."
      ],
      "description": "Course Description\nUnlock the power of Generative AI within your Java applications using Spring AI, OpenAI, and Ollama!\nIn this hands-on course, you’ll learn how to build intelligent, scalable AI-driven applications using the robust Spring Boot ecosystem. From crafting prompts to building full RAG-based systems, you’ll gain practical skills to integrate LLMs into real-world projects.\nHere’s a breakdown of what you’ll learn in each section:\nCourse Introduction & Setup\nUnderstand the course structure, prerequisites, and how to set up your Java and Spring AI environment.\nIntroduction to Large Language Models (LLMs), OpenAI & ChatGPT\nLearn the basics of LLMs, their evolution, applications, and how OpenAI’s ChatGPT fits into modern AI workflows.\nGetting Started with Spring AI and OpenAI API\nConfigure your project and IDE, create your first chat-based app using ChatClient, and understand prompts, tokens, and OpenAI request parameters.\nWorking with Chat Models and OpenAIChatModel\nCustomize LLM responses using ChatOptions, enable streaming, and build responsive AI chat applications.\nPrompt Engineering with Spring AI\nMaster prompt engineering techniques like zero-shot, few-shot, chain-of-thought, and multi-step prompting to guide AI outputs effectively.\nGenerating Structured Data with Spring AI\nLearn to create structured outputs using prompt templates and Spring’s converters, including lists, maps, and entity objects.\nTool Calling (Function Calling) with Spring AI\nIntegrate external systems into your AI apps with OpenAI’s tool calling—fetch live data like weather, currency rates, and more.\nBuilding RAG Applications (Retrieval-Augmented Generation)\nBuild an end-to-end RAG-powered Q&A system using PgVector, document chunking, indexing, and semantic retrieval.\nDocument Ingestion Strategies\nExplore how to ingest and chunk various document types including PDFs, Word files, and plain text using different readers and splitters.\nExploring Multimodality: Vision Capabilities\nLeverage OpenAI’s image models to generate, analyze, and process images including real-world examples like invoice parsing.\nExploring Multimodality: Audio Capabilities\nConvert text to realistic voice using TTS, and transcribe or translate speech to text using the Whisper API.\nBuilding Local AI Apps with Spring AI and Ollama\nRun LLMs locally using Ollama, integrate it with Spring AI, and build applications without relying on external APIs.\nBy the end of this course, you’ll be equipped to build full-stack AI-powered applications using Java and Spring Boot, with integrations that span cloud-based models, local deployments, vision, audio, and retrieval-augmented techniques.\nYou’ll walk away with the confidence and experience to bring Generative AI into production-ready Java applications.",
      "target_audience": [
        "Java developers curious about building AI-powered apps using Spring AI and modern generative AI techniques.",
        "Beginners looking to get started with Spring AI, LLMs, and practical generative AI use cases without needing prior AI experience.",
        "Backend engineers and full-stack developers wanting to integrate OpenAI’s LLMs into real-world Spring Boot applications.",
        "Tech enthusiasts and students eager to explore hands-on projects involving chatbots, RAG, tool calling, and multimodality.",
        "Professionals interested in learning how to build production-ready AI applications with Spring Boot and OpenAI.",
        "Anyone looking to future-proof their Java skills by diving into the world of generative AI and building practical AI tools."
      ]
    },
    {
      "title": "Tailwind CSS : The Complete Guide ( Project Included )",
      "url": "https://www.udemy.com/course/complete-guide-of-tailwind-css-/",
      "bio": "The Complete Guide to TailwindCSS - Learn How to Create Awesome Modern Websites Without Writing Any CSS Code",
      "objectives": [
        "Tailwind CSS basics",
        "How to use tailwindcss to create modern websites",
        "How to create custom components with tailwindCss",
        "How to customize existing utility classes and create new utility classes",
        "A to Z of TailwindCSS Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Resources"
        ],
        "TailwindCSS Basics": [
          "Introduction & Setup of TainwindCSS",
          "Width & Height",
          "Borders & Colors",
          "Margins and paddings",
          "Flexbox",
          "Box Alignment",
          "Typography",
          "Box Shadow and Opacity",
          "Hover Effects",
          "Transition Properties",
          "Default Animations of TailwindCSS",
          "Containers",
          "Transform and Its' Properties",
          "Background Properties",
          "Grid System",
          "Responsive Designing with Tailwind CSS",
          "Customization"
        ],
        "Let's Get Into The Project": [
          "Introduction",
          "Setting Up The Environment For The Project",
          "Add Custom Stylings",
          "Coding of The Top Search Bar",
          "Coding of The First Post",
          "Coding of The Second Row",
          "Coding of The FInal Row",
          "Subscription & Footer Section",
          "Making the Template Responsive",
          "Adding A Navigation Bar"
        ]
      },
      "requirements": [
        "Students should have basic understanding of HTML & CSS",
        "An internet connection",
        "A computer to work with"
      ],
      "description": "Welcome To The Tailwind CSS: The Complete Guide\n⇉ Watch the promo video to See How You Can Begin Mastering TailwindCSS To Build You Next Professional Website Today!\n__________________________________________________________________________\nLearn the basic concepts, tools, and functions that you will need to build beautiful, fully functional, professional landing pages within the TailwindCss framework. But that is not all you will learn from enrolling in our course...\nYou Will Learn:\nAll the types of utilities that tailwind has to offer\nHow to use the utilities properly in our project\nHow to customize the existing utilities of Tailwind\nHow to add new utilities to our project\nTailwind Layouts\nResponsive web design\nHow to add hover & focus effects\nSo Much More!\nThis course will help you create a perfect responsive web page for your app, business, portfolio, or blog. Having a little knowledge of HTML & CSS is ideal to get you started on the quicker route to tailwind, however, it isn't essential. I will walk you through every step of code to ensure you have the right understanding and tools to further your learning after you have completed the course.\nYou will not only create a clean, modern professional looking tailwindcss landing page, you will also add animations and Google Webfonts to make sure your website stands out from the crowd. We start by understanding the basics of tailwindcss utilities, how it works and how it is implemented. We will cover the famous grid system and media queries to ensure your new page looks its best on all devices.\nYou will learn-by-doing which will help you understand all aspects of the tailwindcss framework and give you the tools to re-design our template or build an entirely new landing page specifically how you want it. You will be able to download project files throughout the course, which will be yours to keep and work on at your leisure\n__________________________________________________________________________\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards Mastering TailwindCSS To Build You Next Professional Websites Today!\nWhen I learn something new, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nThis course will not remain at this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nSofiullah Chowdhury",
      "target_audience": [
        "Front end web developers who want to step up in their game.",
        "Anyone who wants to use CSS framework for their task.",
        "Web Developers who are searching for a better framework then bootstrap!"
      ]
    },
    {
      "title": "Unit Testing in Node.js with Jest - e2e Testing & more",
      "url": "https://www.udemy.com/course/unit-testing-in-nodejs-with-jest/",
      "bio": "Nodejs Unit Testing with Jest, e2e Testing, Test Coverage, Test Driven Development (TDD), Mocking and more",
      "objectives": [
        "In depth understanding of unit testing",
        "Will be able to unit testing a complete Node API",
        "Understand all about Mocks, Spy and more",
        "Nodejs unit testing & e2e testing using Jest",
        "Testing a complete REST API",
        "Learn how to write unit tests for errors",
        "e2e testing of Node API",
        "All about Jest",
        "Basics of Test Driven Development (TDD)",
        "How to generate Test Coverage Report",
        "much more…"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "What is Testing?"
        ],
        "Setting up Environment": [
          "Installing all required tools"
        ],
        "*** SOURCE CODE OF PROJECT ***": [
          "How to get Source code of project"
        ],
        "Basics of Unit Testing in Jest": [
          "What is Jest?",
          "Writing our first unit test",
          "What is Mock or Mocking",
          "mockImplementation and mockImplmentationOnce",
          "Jest spyOn",
          "Describe & it",
          "beforeEach, afterEach, beforeAll, afterAll"
        ],
        "Lets Unit Test Jobs API": [
          "Overview of Jobs API",
          "Job API Config file",
          "Mock Request & Mock Response",
          "Mock User Model & bcryptjs",
          "Unit Test Register User",
          "Jest restoreAllMocks",
          "Unit Test Register user Validation Error",
          "Unit Test Duplicate Email Error",
          "Unit Test Missing Login Email & Password",
          "Unit Test Invalid Email or Password for Login",
          "Unit Test Login User"
        ],
        "Testing Jobs Resource": [
          "Jobs Controller Mocks",
          "Testing Get All Jobs",
          "Unit Test Create Job",
          "Unit Test Create Job Validation error",
          "Unit Test Get Job By ID",
          "Unit Test CastError",
          "Unit Test Update Job",
          "Unit Test Unauthorized error",
          "Unit Test Delete Job"
        ],
        "Testing Middleware’s": [
          "Overview of auth middleware",
          "Testing Missing Authorization header",
          "Testing Missing JWT error",
          "Unit testing auth middleware"
        ],
        "Testing Models": [
          "Testing User Model",
          "Testing User Model Validation error",
          "Testing missing password"
        ],
        "Testing Utils": [
          "Unit Testing getJwtToken",
          "Unit Test sendEmail with Nodemailer",
          "Overview of AWS S3 Class",
          "Unit Test upload image to AWS S3"
        ],
        "e2e Testing - Auth": [
          "Let’s start e2e testing",
          "DB handler with mongodb-memory-server",
          "Connecting & Closing DB",
          "Testing Register user",
          "Testing Login user",
          "Testing 404 Routes"
        ]
      },
      "requirements": [
        "Your should know Nodejs, express and mongodb",
        "You should know how to build API in Nodejs",
        "Basic of Testing will be helpful (but not required)"
      ],
      "description": "If you have any confusion or question about Unit testing in your mind, then you are at the right place. In this, In-depth Node.js Unit Testing course we will start from scratch and write units test with Jest.\n\n\nUnit testing can be really confusing something especially if you are a beginner. In this course, we will start from the basics of Jest and then write units of a complete Jobs API that contains each and every example.\n\n\nWe will write unit tests for our controllers, models, utils, middleware, and much more. We will talk about how to handle error cases in Jest and how we can mock different libraries or packages.\n\n\nYou don’t need to be a Node.js expert for this course but you should know basic and should how to build an API. We will cover all the particle cases of unit testing.\n\n\nWe will also take a deep dive into the e2e Testing in which we will test our API from A-Z to make sure every part of the API is working as expected. We will also learn how to generate a Test Coverage Report with Jest which will give us an idea of how much code of our API is covered in Unit Testing and e2e Testing.\n\n\nTopic Covered in this Unit Testing Course\n\n\nBasics of Unit Testing in Jest\nTesting API Controllers\nTesting Middleware’s\nTesting Models\nTesting Utils\ne2e Testing\nJest Test Coverage\nTest Driven Development\nReact Unit Testing Basics - BONUS\n\n\n\n\nIf you are willing to learn or improve your Unit Testing skills then I will see you in the course!",
      "target_audience": [
        "Nodejs Developers",
        "Anyone how wants to learn Unit testing",
        "Anyone how wants to test API in Nodejs",
        "Anyone who want to write clean code",
        "Anyone who wants to learn Jest"
      ]
    },
    {
      "title": "CodeIgniter 4 - Beginner to Expert. The best PHP framework",
      "url": "https://www.udemy.com/course/codeigniter-4-beginner-to-advanced-the-best-php-framework/",
      "bio": "Learn How to use the Easiest PHP MVC Framework and create the best applications and webpages, easily, securely and fast.",
      "objectives": [
        "Install and Configure CodeIgniter",
        "Use the most important functions of CodeIgniter",
        "Import templates",
        "Upload files",
        "Increase CodeIgniter skills and code faster",
        "Make petitions to Databases",
        "Create a Web application"
      ],
      "course_content": {
        "Introduction": [
          "What is CodeIgniter?",
          "Model-View-Controller (MVC)"
        ],
        "Download all software required": [
          "Download CodeIgniter 4",
          "Download Xampp and adding CodeIgniter",
          "Choose a text editor"
        ],
        "URL Configuration": [
          "Delete index.php from the URL",
          "Create a Virtual Host using Xampp"
        ],
        "Our first controller": [
          "The first controller",
          "Send variables to the functions of the controller",
          "Change the controller by default",
          "Communications among functions of the controller and Protected functions"
        ],
        "Our first view": [
          "Load Views and send them variables",
          "Parsing"
        ],
        "Create and configure the Database": [
          "Create the Database",
          "Configure the Database in CodeIgniter",
          "Create Tables in the Database"
        ],
        "Our first Model": [
          "Create and use the Model"
        ],
        "Download and install a template": [
          "Search and download a Template",
          "Separate the Template into several files",
          "Configure the URL of the files",
          "Create the LoadViews function"
        ],
        "THE PROJECT - First steps": [
          "Create the Posts table in the Database",
          "Create the Model for the Posts",
          "Create post Part I |Upload files",
          "Create Post Part II | Modify the Database and Model for the categories",
          "Create Post Part III | Validation Form I",
          "Create Post Part IV | Validation Form II",
          "Create Post PArt V | Add styles to the Form",
          "Create Post Part VI | Add WYSWYG to the Form",
          "Final rectifications"
        ],
        "THE PROJECT - Edit the views": [
          "Edit the Header",
          "Edit the Footer and modify file uploading"
        ]
      },
      "requirements": [
        "Basic knowledge regarding PHP",
        "Basic knowledge regarding SQL",
        "Basic knowledge regarding HTML and CSS"
      ],
      "description": "In this course you will learn how to use the CodeIgniter framework from scratch. CodeIgniter is a framework Model-View-Controller (MVC) which is very powerful. You will be able to create almost everything that you have your mind set on in terms of development.\nIn this course you will learn by practising. We will create an application web, in this case a Blog, from scratch. You will be able to practise the most important aspects of CodeIgniter by applying them on this project.",
      "target_audience": [
        "People interested in learning how CodeIgniter works, a very powerful framework to develop Web pages",
        "People who want to learn all that is required to develop a Web application with CodeIgniter",
        "Those with some knowledge in this topic who want to advance their coding skills"
      ]
    },
    {
      "title": "HTML for Beginners: Master the Basics of Web Development",
      "url": "https://www.udemy.com/course/html-for-beginners-master-the-basics-of-web-development/",
      "bio": "Learn the essential HTML skills to build and structure web pages from the ground up, no prior coding experience needed",
      "objectives": [
        "Master HTML tags and elements to create and structure web pages from scratch",
        "Create a complaete talent agency web-site from scratch",
        "Learn how to embed images, videos, and audio into web pages",
        "Build interactive forms for user input and feedback",
        "understand modern HTML semantics for better SEO and accessibility"
      ],
      "course_content": {
        "Introduction": [
          "What are we going to make?"
        ],
        "Introduction To HTML": [
          "What is html"
        ],
        "Setting up your Code Editor": [
          "Setting up your code editor"
        ],
        "Downloadable resources for your first project": [
          "Downloadable resources for the project"
        ],
        "Html document structure": [
          "HTML document structure"
        ],
        "Html text elements": [
          "HTML text elements"
        ],
        "Lists- ordered and un-ordered lists": [
          "Lists- ordered and un-ordered lists"
        ],
        "Adding Images": [
          "Add images in HTML"
        ],
        "Adding Hyperlinks": [
          "Adding hyperlinks in HTML"
        ],
        "Adding Video": [
          "Adding Video in HTML"
        ]
      },
      "requirements": [
        "No coding experience is needed, everything is taught from scratch"
      ],
      "description": "Welcome to \"HTML for Beginners: Master the Basics of Web Design and Structure\"—the ultimate course designed to introduce you to the world of HTML! Whether you're a complete beginner or someone looking to brush up on your HTML skills, this course is your gateway to understanding the building blocks of the web.\nWhat You’ll Learn:\nIn this course, we’ll break down complex HTML concepts into simple, digestible lessons that anyone can follow. By the end of this course, you’ll have a strong foundation in HTML and will be able to create web pages from scratch. Here's what we’ll cover:\nHTML Elements & Tags: Understand the core components of HTML and how to structure a webpage.\nHeadings, Paragraphs, and Links: Learn how to create readable content and seamless navigation for your users.\nImages and Multimedia: Incorporate images, videos, and even audio into your web pages, bringing your sites to life.\nForms: Create interactive forms for gathering user input.\nHTML5 Semantic Elements: Get familiar with modern HTML elements for better SEO and accessibility.\nWhy Take This Course?\nHTML is at the core of every web page, and mastering it opens up endless possibilities for your future in web development. By the end of this course, you’ll be able to create web pages with multimedia elements such as videos and audio, giving you the skills to create engaging, user-friendly websites.\nEach module comes with hands-on projects and quizzes to help you practice what you’ve learned and solidify your understanding.\nWhether you're looking to start a career in web development or simply build a personal website, this course will provide you with the knowledge and skills to get there.\nJoin now and start your journey into web development today!",
      "target_audience": [
        "Anyone and everyone interested in the art of webdevelopment"
      ]
    },
    {
      "title": "Microsoft Azure Service Fabric",
      "url": "https://www.udemy.com/course/microsoft-azure-service-fabric/",
      "bio": "Service fabric",
      "objectives": [
        "Importance of Microservices Architecture",
        "Monolythic vs Microservices",
        "Azure Service Fabric Architecture",
        "Developing and Hosting Microservices using .NET and Azure Service Fabric",
        "Configuration of Microservices",
        "Deploying Microservices in Azure Service Fabric cluster."
      ],
      "course_content": {
        "Introduction To Micro Services And Service Fabric": [
          "Introduction To Micro Services And Service Fabric"
        ],
        "Building A Service Fabric Application": [
          "Building A Service Fabric Application"
        ],
        "Communication Between Micro Services": [
          "Communication Between Micro Services"
        ],
        "Working With Configuration Files": [
          "Working With Configuration Files"
        ],
        "Publishing To Microsoft Azure": [
          "Publishing To Microsoft Azure"
        ],
        "Performing Rolling Application Upgrade.": [
          "Performing Rolling Application Upgrade."
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "C# Programming Language",
        "Knowledge of Building web applications"
      ],
      "description": "This, Microsoft Azure training is targeted for ANYONE who wants to move their current skillset to Microsoft Azure cloud taking the benefit of unlimited computing, storing and networking power.\nThe Microsoft Azure course will enable you to design, build, maintain and monitor robust and scalable cloud solutions and most important you will start thinking BIG. This course also focuses on the architectural considerations and decisions necessary when building a highly available solution in the cloud.\nTeaching methodology of Mr. Sandeep Soni is pretty simple, for every topic it all begins with in-depth understanding of concepts followed by practical demos of how the feature can be incorporated in real-time situations",
      "target_audience": [
        "Azure Developer"
      ]
    },
    {
      "title": "Uploading images to PHP Server via AJAX",
      "url": "https://www.udemy.com/course/php-ajax/",
      "bio": "Explore how you can use AJAX and HTML forms to upload images to PHP servers",
      "objectives": [
        "How to send images to the server",
        "Showing previews of images",
        "Returning back the path of the new upload"
      ],
      "course_content": {
        "Introduction to image upload via PHP": [
          "PHP upload course introduction",
          "System Setup and Resources",
          "HTML form setup and phpinfo check",
          "Get FILE information from submission",
          "Image validation check in PHP",
          "Check upload size and check for errors",
          "Save file to server PHP",
          "Source File upload to server",
          "Send to separate php file show image",
          "add jQuery and setup form for upload",
          "Create AJAX request to PHP",
          "Preview image as base64 format",
          "Decode base64 image using PHP",
          "Source Code index.html",
          "index.html code review",
          "Source Code uploader.php",
          "uploader.php source code review",
          "source code save.php",
          "code review save.php"
        ],
        "Resources and links": [
          "Course Resources",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "jQuery AJAX",
        "Basic PHP knowledge"
      ],
      "description": "Explore how to upload images to your server using AJAX and PHP.\nPlease note this course covers PHP within the scope of saving files, specifically image files on your server.  Knowledge of PHP is a prerequisite  to this course.  AJAX is done via jQuery which is also a prerequisite to this course.  jQuery is only covered within simple AJAX calls and some element html updates.\nThis course covers a number of methods to store image data onto your server.\nLearn how to create a Simple Form with a file input and submit the data to a PHP file.    Use PHP to check for valid images, file sizes and check for errors.\nUsing AJAX to submit form file contents to the server removes the need for a page reload and lets you make use of the response data and output it into your HTML.   Simple easy clean way to send images to your server.\nBASE64 image data to PHP server can be used to create an image and save it to a file location on the server.  This method will ensure you have an image format as its not simply coping the file but actually using the encoded data to create the image file.   This method is useful when the image is also generated on the fly.\nSource code is included to get you started quickly.\nResources and helpful links are also included\nTaught by an instructor with over 18 years of real world web development experience, ready to answer any questions you may have.\nJoin now and start creating your own PHP applications today.",
      "target_audience": [
        "Web developers",
        "PHP developers",
        "Anyone who wants to learn how to upload images"
      ]
    },
    {
      "title": "Consume Web API in ASP.Net Core MVC (step by step project)",
      "url": "https://www.udemy.com/course/web-api-asp-net-core-mvc/",
      "bio": "Consume CRUD API with ASP .NET Core 2.2 MVC using HttpClient and Entity Framework. Project-based learning.",
      "objectives": [
        "Using API in ASP .Net Core MVC",
        "Using and Implementing .Net Core Services",
        "Use of C# Interfaces",
        "Use of Dependency Injection",
        "Consuming CRUD API in MVC Pattern",
        "Use of Re-usable ViewComponents",
        "Using ListItems for Multiple Selections",
        "1-to-Many and Many-ToMany Relationships"
      ],
      "course_content": {
        "Introduction": [
          "Demo of the Project",
          "Source Code, Help, Discounts, and Misc"
        ],
        "Creating and Setting Up Project": [
          "MUST WATCH - Setting up the API",
          "Creating New Project",
          "Configuring StartUp.cs"
        ],
        "Creating Interfaces for HTTP GET Requests": [
          "Why Use Interfaces?",
          "Creating ICountry Interface",
          "HOMEWORK - Creating Interfaces",
          "Creating ICategory Interface",
          "Creating IReviewer Interface",
          "Creating IReview Interface",
          "Creating IAuthor Interface",
          "Creating IBook Interface"
        ],
        "Building HttpGet Requests for Country Object": [
          "Implementing GetCountries Method",
          "Finishing Implementation of GetCountry Method",
          "Creating Index Action for Countries Controller",
          "Creating Index View for Countries Controller"
        ],
        "Adding Support for Tag Helpers and Bootstrap": [
          "Adding Tag Helpers to the Project",
          "Using Tag Helpers in the Index View For Countries Controller",
          "Adding Bootstrap to the Project"
        ],
        "Finishing HttpGet Requests for Country Object": [
          "Routing and Testing GetCountries API Request",
          "Implementing GetCountryById Method",
          "Creating GetCountryById Action",
          "Creating GetCountryById View",
          "Testing GetCountryById View",
          "Implementing GetCountryOfAnAuthor Method",
          "Implementing GetAuthorsFormACountry Method"
        ],
        "Building HttpGet Requests for Category Object": [
          "HOMEWORK - Implement ICategory Interface, Actions, And Views",
          "Implementing GetCategories Method",
          "Implementing GetCategoryById Method",
          "Implementing GetAllCategoriesOfABook Method",
          "Implementing GetAllBooksForCategory Method",
          "Creating Index Action for Categories Controller",
          "Creating Index View For Categories Controller",
          "Creating GetCategoryById Action",
          "Creating GetCategoryById View",
          "Modifying GetCategoryById Action",
          "Creating CategoryBook ViewModel",
          "Adding ViewModel to GetCategoryById Action",
          "Adding ViewModel to GetCategoryById View",
          "Testing GetCategoryById Action and View"
        ],
        "Implementing IReviewer and IReview Interfaces": [
          "HOMEWORK - Implementing Reviewer And Review Interfaces",
          "Implementing GetReviewers Method",
          "Implementing GetReviewerById Method",
          "Implementing GetReviewerOfAReview Method",
          "Implementing GetReviewsByReviewer Method",
          "Implementing GetReviews Method",
          "Implementing GetReviewById Method",
          "Implementing GetReviewsOfABook Method",
          "Implementing GetBookOfAReview Method"
        ],
        "Building HttpGet Requests for Reviewer Object": [
          "HOMEWORK - Create Reviewers Controller and Actions",
          "Creating Index Action for Reviewers Controller",
          "Creating Index View for Reviewers Controller",
          "Creating ReviewerReviewsBooks ViewModel",
          "Creating GetReviewerById Action",
          "Finishing GetReviewerById Action",
          "HOMEWORK - Creating GetReviewerById View",
          "Creating GetReviewerById View",
          "Finishing GetReviewerById View",
          "Debugging Reviewer Actions"
        ],
        "Building HttpGet Requests for Review Object": [
          "Creating Index Action for ReviewController",
          "Creating ReviewReviewerBook ViewModel",
          "Creating GetReviewById Action",
          "Creating Index View For Reviews Controller",
          "HOMEWORK - Creating GetReviewById View",
          "Creating GetReviewById View",
          "Testing GetReviewById Action and View"
        ]
      },
      "requirements": [
        "4-6 months of programming in C# is recommended",
        "Basics of C# OOP programming, understanding Collections and Interfaces",
        "Have time to dedicate to following along and doing practice homework assignments",
        "The course uses Visual Studio 2017"
      ],
      "description": "Welcome to Consuming CRUD API in Asp .Net Core MVC.\nAs the title of the course suggests, we will be building an ASP .Net Core MVC app that consumes and interacts with third-party API.\nThis course is all about CRUD operations. Step by step, we will set up a complete MVC app that handles API for each of the operations in a multi-table database. For the next several hours, we will dedicate our time to interfaces, dependency injection, 1 to many and many to many database relationships, .Net Core Services, Models, Data Transfer Objects, Controllers, Actions, Views, and of course, C# language. But don’t let any of that scare you. Quite the opposite.\nGet excited to learn a ton of new material and dive into the new world of .net core. The course makes the learning easy with the mix of slow introduction of new material, repetition, and lot of practice! Every line of code is coded on camera, there are no mysteriously appearing blocks of code. Every step is explained every time, not just the first time you are introduced to it. And you will have a chance to practice what you learned in homework assignments.\nLet’s go over few details. First, let’s discus what this course IS\n\n\nIntroduction to using CRUD API in Asp .Net Core MVC.\nWe go over creationg of complete API driven MVC app\nI introduce new concepts as they are needed in regards to progression of the project\nThis is a “follow along” and “practice what you learned” course\nNo code is skipped over.\n\n\nWhat this course is NOT:\nComplete or Deep Dive course\nLearn C# or .net core course\nTheory with explanation and code snippets\nReady to Deploy Real World project\n\n\n1. API are a huge subject, and so is .Net Core. In this course we will build a website that consumes a CRUD API. Nothing more, nothing less. Do not expect a dive into security, database optimization, asynchronous processing or anything else. Just CRUD. Pure and simple. We will work only with C# language inside .net core. So do not expect any javascript or fancy javascript framework or library. There is none in this course. But don’t expect to use this course as a “Learn C# course”. It is not that. I’m sure you will pick up some new syntax and C# tricks, but you do need some C# skills prior to taking this course. The project we use is a great starting point as it introduces several of the essential techniques and concepts, including often neglected CRUD operations on database tables with many-to-many relationships, this certainly isn’t a deploy-ready project.\n2. Remember, this is a course, and a practical tutorial. There are lot of courses that will show you the way into one topic and then quickly move on to another topic. This is not one of those courses! My goal is to lead you step by step, all the way, through the new territory inside .net core and introduce you to new concepts and topics and help you learn them. And equally important is to then help you understand and retain what you learned through practice and repetition. If you prefer to be shown something once and then jump to another topic, then this course is NOT for you. If, on the other hand, you learn by combining explanation, coding along, and practicing the concepts while still having the option to see the instructor coding the whole solution, then this course is definitely for you!\n3. Did this ever happen to you? You took a course, and you just loved it! Everything was clearly explained, and you had lots of aha moments. Then the course ended…and suddenly, you felt lost. You felt like you learned so much while taking the course, yet could barely remember anything once it ended. Even when you revisited the source code supplied by the instructor, it just didn’t even seem familiar. Suddenly you felt like you didn’t learn anything. All the concepts that seemed so clear during the course felt totally foreign when you were on your own. In my experience, this is often the case when you simply take a course that starts exactly where your current skills are, but moves past the threshold of skills you are ready for. Like trying to go from crawling straight to sprinting. In this course, we go step by step, introducing new concepts slowly and only after you had a chance to practice what you learned.\n4. is this course for you? What skills should you have before taking it? If you are a programmer with decent understanding of OOP principles and C#, than you have the all the skills needed to benefit from this course. There are no prerequisites for .net core, or entity framework or how to create an API. Since you are interested in this course, I assume you heard of these things and perhaps played around a little too. That’s all that is needed to take this course.\nWell, let's code!",
      "target_audience": [
        "Students new to .Net Core (but not new to C#)",
        "Students who want to learn how to consume CRUD API in .Net Core MVC",
        "Students who learn best by hands-on programming",
        "Students who can dedicate time to doing homework assignments"
      ]
    },
    {
      "title": "Ruby On Rails: Understanding Ruby and The Rails Controller",
      "url": "https://www.udemy.com/course/ruby-on-rails-superhero-generator/",
      "bio": "Learn Intermediate Ruby on Rails Fast! Become a Fullstack Web Developer quickly. Learn Full Stack Coding the easy way!",
      "objectives": [
        "Build a Superhero Name Generator Website",
        "You will have a solid understanding of building websites with Ruby on Rails",
        "You will learn the Bootstrap CSS framework",
        "You will learn to use a third party API"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "First Things First: How To Get Support Fast!",
          "Rails Overview",
          "Install Node.js",
          "Install Sublime and Git Bash Terminal",
          "Create SSH Key",
          "Install The Heroku Toolbelt",
          "Install Ruby on Rails",
          "Update!",
          "Create Test Project and Handle Errors",
          "Create New Project and Run Server",
          "Ruby on Rails Directory Overview",
          "Version Control With Git",
          "Version Control With Github"
        ],
        "Building Web Sites With Ruby On Rails": [
          "Generate A Web Page",
          "Create A Second Web Page",
          "Understanding the Application.html.erb file",
          "Adding Links",
          "Rails Partials"
        ],
        "Bootstrap CSS Framework": [
          "Bootstrap Intro",
          "Install Bootstrap",
          "Bootstrap Partials",
          "Bootstrap Panels",
          "Make Your Website Mobile Ready with Bootstrap"
        ],
        "Ruby Programming": [
          "Introduction to Ruby Programming",
          "What Is Object Oriented Programming",
          "Ruby Variables",
          "Numbers and Math in Ruby",
          "Assignment Operators",
          "Conditional Statements - If / Else / Elsif",
          "Arrays",
          "Hashes",
          "While Loops",
          "Each Loops",
          "Methods",
          "Classes Part 1",
          "Classes Part 2",
          "Class Inheritance"
        ],
        "Faker Gem and Controller": [
          "Introduction To The Rails Controller",
          "Controller Filter Actions",
          "Intro To The Faker Gem",
          "Faker Superhero",
          "Faker Corp Stuff",
          "Faker Avatar Intro",
          "Faker Avatar Variables",
          "Faker Avatar Image"
        ],
        "Page Layout With CSS": [
          "Page Layout CSS",
          "Styling Text With CSS"
        ],
        "Web Forms": [
          "Intro To Web Forms",
          "Rails Guides and Form Helpers",
          "The Form Tag",
          "The Select Tag",
          "POST Form Routing",
          "Form Params",
          "Form Conditionals",
          "Form Partials",
          "Team Looping",
          "Team Looping Part 2",
          "Looping Avatars"
        ],
        "Hosting Our App With Heroku": [
          "Intro To Heroku Hosting",
          "Pushing To Heroku",
          "Custom Domain Names With Heroku"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prerequisites"
      ],
      "description": "In this course we'll learn how to build apps (web sites) with Ruby on Rails.\nWe'll build this fun little superhero name generator website that will allow us to connect with a third party API to generate data and images, then we'll learn how to manipulate that on our app.\nI'll also teach you the Ruby programming language. Most people get Ruby on Rails and Ruby confused, but they're two different things. Rails is a web framework for building apps, Ruby is a programming language...we'll learn both in this course!\nWe'll also really dive into the the Rails controller (the \"C\" in the Rails MVC system). Learning how to work with the Controller gives you all kinds of power over your app to do really cool things.\nFinally, we'll also learn how to use the hugely popular Bootstrap CSS framework to style our app. Bootstrap is easily the most popular CSS framework in the world, and you'll learn everything you need to use it right here in this course.\nIf you already know a little Ruby on Rails, this course will make you a much stronger developer. If you've never seen or used Rails at all; you'll fit right in too!  I take things slow and explain absolutely everything you need to know!\nSee you inside!\n\n\n-John Elder",
      "target_audience": [
        "Anyone who wants to learn to make web apps with Ruby on Rails"
      ]
    },
    {
      "title": "Go Full Stack With Spring Cloud Microservices and Angular",
      "url": "https://www.udemy.com/course/go-full-stack-with-spring-cloud-microservices-and-angular/",
      "bio": "Spring Boot, Spring Cloud, Angular, Eureka Discovery Client & Server, PostgreSQL, MySQL, H2-Database, Lombok, Router",
      "objectives": [
        "Spring Boot and Spring Cloud",
        "Microservices with Spring Boot",
        "Full Stack Development with Spring Boot and Angular",
        "Eureka Discovery Server and Client",
        "Develop and design RESTful web services with Spring Boot",
        "Build and run RESTful Microservices",
        "Develop MICROSERVICES with Spring Boot and Spring Cloud"
      ],
      "course_content": {},
      "requirements": [
        "Basic java knowledge and a computer"
      ],
      "description": "In this course, we will create a project like an online-course-application.\nWhen I say online-course-application, we can think of it like that we will have a product-list page such as book-list, food-list or course-list. Somehow users or customers will see these product-lists and they can buy one of the products. Of course, at the end of it, this transaction will be logged.\nActually, in our application, we will try to implement these processes with different microservices.\n\n\nTo implement this application, we will use five different microservices.\nOur microservices will be api-gateway, course-service, purchase-service, eureka-discovery-service and frontend-with-angular.\n\n\nIn api-gateway, we will manage APIs. This microservice will be a gateway for the whole application. To access the other services, we will use this microservice. In this microservice, we will handle user-management also. We will authorize users and if the users are authorized, other services can be available.\n\n\nIn course-service, we will manage course CRUD operations. This service will be a course-management-service.\n\n\nIn purchase-service, we will manage purchase CRUD operations. This service will store the logs coming from the course purchases. For example, the UserX bought the CourseX on DateX etc.\n\n\nOur other microservice will be eureka discovery service. To provide it we will use spring-cloud-netflix-eureka library.\nThis microservice allows services to find and communicate with each other without hard coding hostname and port.\nWith eureka service, other services can register eureka servers and all of them can reach each-other with application name.\n\n\nThese four microservices will be used for server side.\nOn the client side, we will use Angular to consume all data which come from these microservices. And we will provide a user-friendly UI with angular.\n\n\nOur microservices dependency process will be like that.\nClients can access the system from the UI. On angular-UI,users can take different actions like creating courses, purchasing courses etc. All requests coming from angular-UI will go to api-gateway. So all traffic will pass over api-gateway.\nTo access the api-gateway, the client should pass the login process. Then other services will be accessible over the api-gateway.\n\n\nSpring-security will be one of the main topics in our application. Also, we will use JWT to provide security.\nHere, the important point is, we will also use secure connections among microservices. To provide it, we will use secure-key-tokens.\n\n\nAs a database, we will use MySQL, PostgreSQL and H2Database. We will use different databases to show the functionalities of microservices.\n\n\nWe will provide connections between microservices with the OpenFeign library. OpenFeign will handle connection problems in the gateway.\n\n\nAlso, on the backend to provide the connection among all microservices, we will use eureka discovery server. Eureka-discovery-server will be aware of all microservices and it helps to create connections between microservices easily.\n\n\nIn addition to these libraries, In our project, we will use lots of technologies like Spring Boot, Spring Security, Hibernate, MySQL, PostgreSQL, Maven, Lombok, JWT etc.\n\n\nOf course here, our main library will be Spring-boot. It will provide a simpler and faster way to set up, configure, and run rest API applications.\n\n\nAt the end of each microservices, we will test our applications with Postman. Postman is another amazing tool to debug networking.",
      "target_audience": [
        "All curious developers about Microservices and Angular"
      ]
    },
    {
      "title": "Next.js & Laravel 11 Build a Modern Full-Stack Application",
      "url": "https://www.udemy.com/course/nextjs-laravel-build-full-stack-application/",
      "bio": "In This Course, You Will Build Complete Full-Stack Application with Next.js Laravel 11 and API. Build It From Scratch",
      "objectives": [
        "React js Fundamental",
        "Next js Fundamental",
        "Complete Design for Frontend with Next JS",
        "Backend with Laravel 11",
        "Two-Factor Authentication (2FA) Using a Verification Code",
        "Customize Admin Template Setup",
        "Laravel Breeze Forget and Reset Password",
        "Image Upload with Image intervention 3",
        "Create Full Frontend API with API",
        "Full API Base Complete Project",
        "Build Backend API with Postman",
        "Create Total Frontend Design with Tailwind css",
        "User Authentication",
        "Build Complete Full-Stack Application",
        "Create Get and Post API From Backend"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "Need Your Support",
          "My Mission"
        ],
        "React Fundamentals React Structure, JSX component & Rendering": [
          "React Introduction",
          "Create New React App Using Vite",
          "Project Run And Build Command",
          "Dive Inside React Project Structure",
          "Organizing File Folders",
          "Best VS Code Extensions And Settings For React Development",
          "Primary Understanding On Component Part 1",
          "Primary Understanding On Component Part 2"
        ],
        "JSX And Conventions": [
          "JSX And Conventions",
          "JSX Short Hand If else",
          "JSX Immediately invoked function",
          "JSX Loop Inside",
          "JSX Conditional Rendering Using If Else",
          "JSX Conditional Rendering Using Switch Statement",
          "JSX Conditional Rendering Using Ternary Operator",
          "JSX Conditional Rendering Using Logical And And",
          "JSX Conditional Rendering Using Immidiatly Invoked Function"
        ],
        "Manage React Component": [
          "Passing Properties to Child Component",
          "Passing Simple String to Child Component",
          "Passing Object to Child Component",
          "Passing Function to Child Component",
          "Managing Click Event",
          "Managing Form Submit"
        ],
        "React Routing": [
          "Applying React Router Dom",
          "Link And NavLink For Router",
          "Browser Router VS HashRouter",
          "Passing Parameter Via Naviagation"
        ],
        "React Hook & State Management": [
          "[Hook] Meet With Hook",
          "[Hook] useRef InnerText InnerHTML",
          "[Hook] useRef Working With Attribute",
          "[Hook] useRef Working With Input Element",
          "[Hook] useRef Working With CSS Class",
          "[Hook] useRef Caching Expensive Computation",
          "[Hook] useState Understading Inside",
          "[Hook] useState Working With Immutable Object",
          "[Hook] useState Working With Immutable Array Part 1",
          "[Hook] useState Working With Immutable Array Part 2",
          "[Hook] useState Managing Form Like Pro Part 1",
          "[Hook] useState Managing Form Like Pro Part 2",
          "[Hook] useEffect understanding arguments and uses",
          "[Hook] useEffect calling api using promises",
          "[Hook] useEffect calling api usig async await"
        ],
        "Next JS Foundation": [
          "Environment Tools Setup",
          "What and Why Next JS-",
          "What is the Different between React and Next js",
          "Create New App And Explore Build Optimization Process",
          "Playing With Project Structure",
          "Primary Page Concept And Functional Component",
          "Working With Static Asset Inside Public",
          "Working With Global And Module CSS",
          "Exploring Client Side Rendering",
          "Exploring Server Side Redering",
          "Where use SSR Where CSR",
          "Why we are writing use Client",
          "Exploring Directory Routing Concept",
          "Neasted Directory Routing Concept",
          "Basic Link Component",
          "Progress Bar In Routing",
          "Managing Active Link",
          "Link Component Query",
          "Link Component Query With useSearchParams",
          "Link Component Prefetch and Replace Properties",
          "Programmatically Routing Details",
          "Thinking In Next JS What About Server Component",
          "Thinking In Next JS What About Client Component"
        ],
        "Next.js Advance Config and Optimizations": [
          "Understanding Base Path And Environment Variable",
          "Understanding Header Config",
          "Header Security Config Part 1",
          "Header Security Config Part 2",
          "Header Security Config Part 3",
          "Connection And Compression",
          "Image Optimization",
          "Font Optimization Part 1",
          "Font Optimization Part 2",
          "Script And Static Assets"
        ],
        "Next.js Middleware And 404 page": [
          "Middleware Setup Part 1",
          "Middleware Setup Part 2",
          "Not Found Page"
        ],
        "Start To Build Next JS Complete Website with Laravel": [
          "Welcome to the Course",
          "Project Excise Files - Downloadable Resource",
          "Course Structure How i Design This Course",
          "Environment Setup",
          "Create Next Js Project",
          "Project Setup File"
        ]
      },
      "requirements": [
        "Basic Understanding of JavaScript",
        "Good Grasp of Tailwind CSS",
        "HTML and CSS Knowledge",
        "Basic Command Line Knowledge"
      ],
      "description": "Next.js & Laravel 11 Build a Modern Full-Stack Application\nUnlock the power of modern web development with Next.js and Laravel 11 in this hands-on, project-based course! Whether you’re a beginner or an experienced developer looking to expand your skill set, this course will guide you step-by-step through building a robust full-stack application. Combining the scalability of Next.js for the frontend with the strength of Laravel 11 on the backend, you'll gain real-world experience in crafting dynamic, high-performing web applications.\n\n\nWhat You’ll Learn:\nMaster Next.js, the React-based framework for building lightning-fast, SEO-friendly web applications.\nHarness the power of Laravel 11, the leading PHP framework, to create secure and efficient backends.\nIntegrate RESTful APIs seamlessly between Next.js and Laravel.\nImplement authentication, authorization, and custom email verification features.\nManage and query relational databases with ease using Laravel’s Eloquent ORM.\nDeploy your full-stack application to production with industry best practices.\n\n\nWhy This Course?\nThe demand for developers with expertise in both Next.js and Laravel is growing rapidly. By mastering these cutting-edge technologies, you'll stand out in the competitive job market. This course is designed to give you a deep understanding of how to build modern, scalable, and secure web applications using a powerful tech stack.\nDon’t miss the opportunity to take your web development skills to the next level. Enroll now and start building modern full-stack applications with Next.js and Laravel 11 today!",
      "target_audience": [
        "Aspiring developers who want to learn full-stack development.",
        "Backend developers looking to transition into frontend technologies like Next JS",
        "Frontend developers who want to enhance their backend skills using Laravel 11",
        "Entrepreneurs and startups aiming to build scalable web solutions"
      ]
    },
    {
      "title": "Object Oriented PHP, Ajax, Flexbox Build Messenger App",
      "url": "https://www.udemy.com/course/build-your-own-messenger-with-object-oriented-php-flexbox/",
      "bio": "Learn Object Oriented PHP, Ajax, Flexbox, Advanced CSS and PDO From Scratch. Build Your Own OOPS Base PHP Websites.",
      "objectives": [
        "PHP object oriented form scratch",
        "Ajax from scratch",
        "CSS Flexbox from scratch",
        "CSS Variables & CSS Units",
        "PDO(PHP Data Object) from scratch",
        "Advanced CSS",
        "CSS Media queries",
        "Ajax file/image uploads",
        "Send emojies",
        "PHP base cool validations",
        "Your own alert messages",
        "PHP Security like XSS attacks, Password security"
      ],
      "course_content": {
        "Tools": [
          "Download Text Editor",
          "Download Local Server Xampp"
        ],
        "AJAX Fundamentals": [
          "Section Intro",
          "What is Ajax?",
          "Create Folder Structure",
          "Create Index File & Link CSS File & jQuery File",
          "Ajax Post Method",
          "Ajax Post Method Part2",
          "Ajax Get Method",
          "Ajax Method"
        ],
        "PHP Object Oriented Concept Fundamentals": [
          "Section Intro",
          "What Is Object Oriented Programming",
          "What Is Class",
          "Class Methods & Class Objects",
          "Constructor Magic Method",
          "Destruct Magic Method",
          "What Is Inheritance?",
          "Access Level Modifiers",
          "Static Methods & Static Variables",
          "What Is Final Keyword?",
          "__autoload & spl_autoload_register Magic Methods"
        ],
        "PDO Basics (PHP Data Object)": [
          "Section Intro",
          "Create Database Connection Using PDO",
          "Insert Data Using PDO",
          "Update & Delete Records Using PDO",
          "Fetching Data Using PDO"
        ],
        "Design Signup & Login Form": [
          "Section Intro",
          "Project Setup",
          "What Is CSS Variable?",
          "What Is Rem & Em Units In CSS",
          "CSS3 Flexbox Basics",
          "Design Signup & Login Form",
          "Design Signup & Login Form Part2",
          "Design Signup & Login Form Part3",
          "Design Signup & Login Form Part4",
          "Design Signup & Login Form Part5"
        ],
        "Design Chat Area With CSS & Flexbox": [
          "Section Intro",
          "Create Blue Print",
          "Style Navigation",
          "Style Sidebar links",
          "Build & Design Messages Section",
          "Build & Design Messages Section Part2",
          "Build & Design Messages Section Part3",
          "Design Custom Scrollbar",
          "Design Chat Form & Files Upload",
          "Add Emoji's",
          "Create Change Password Form",
          "Add Media Query",
          "Add Media Query Part2",
          "Divide Layout In Components",
          "Add Favicon"
        ],
        "Submit Signup & Login Form": [
          "Section Intro",
          "Create Database Connection",
          "Create Base Class",
          "Submit the signup form",
          "Email Validations",
          "Password Validations",
          "Image Validations",
          "Set Form Values",
          "Submit Form/Insert Values in database",
          "XSS Attacks",
          "Flash Message",
          "Submit login form",
          "Submit login form part2"
        ],
        "Dynamic Dashboard": [
          "Section Intro",
          "User Authentications",
          "Change Password",
          "Change Password Part2",
          "Success Flash Message",
          "Error Flash Message",
          "Session Base Success Message",
          "Change/Update Name",
          "Change/Update Photo",
          "Change/Update Photo Part2",
          "Authentication Error Message",
          "Update User Status",
          "Send Message",
          "Send Message Part2",
          "Send Files/Images",
          "Send Files/Images Part2",
          "Send Files/Images Part3",
          "Send Emojis",
          "What Is Foreign Key & How to Create Foreign Key Relation",
          "What Is Inner Join",
          "Send Ajax Request to Fetch Messages",
          "Explain The Logic",
          "Show Messages",
          "Show Messages Part2",
          "Show Messages Part3",
          "Show Messages Part4",
          "Show Messages Part5",
          "Show Messages Part6",
          "Show Messages Part7",
          "Add Time Ago Feature",
          "Add Time Ago Feature Part2",
          "Set Country TimeZone",
          "Auto Messages",
          "Display Online Users",
          "Display Online Users Part2",
          "Display Online Users Part3",
          "Display Online Users Part4",
          "Clean User Messages History",
          "Fix Problems",
          "Display Online Users On All Files",
          "Add Website Loader",
          "Display Website Loader Once Time",
          "Add CSS to Online Users",
          "Final Video"
        ]
      },
      "requirements": [
        "Any computer and OS will work — Windows, Linux or macOS",
        "There is not need of any paid software.",
        "Basic understanding of basic PHP and CSS"
      ],
      "description": "Welcome to \"Build Your Messenger With Object Oriented PHP & CSS Flexbox\" course, if you want to boost your PHP, CSS and ajax skills then this course is for you. In this course you will learn everything from scratch, in this course you will learn\nObject Oriented PHP from scratch\nAjax from scratch\nPDO (PHP Data Object) from scratch\nCSS Flexbox from scratch\nCSS Variables & CSS Units\nAdvanced CSS\nAfter completing this course you will be able to create your own PHP Object Oriented base websites, you will be confidently use advanced CSS in your projects. The most important thing you learn how to images/files with ajax and how to send emojis, we will discuses PHP security like XSS attack, password top security, you will learn how to do jQuery type validations with pure PHP and we will build our own alerts messages with cool jQuery effects.",
      "target_audience": [
        "PHP Developers who want to update their skills.",
        "Any one can buy this course developers and designers."
      ]
    },
    {
      "title": "React and Next.js with Typescript: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/react-influencer/",
      "bio": "React, Next.js, Redux, Typescript, React Hooks, React Material UI, Frontend & Backend Filtering",
      "objectives": [
        "Use React with Typescript",
        "Use Next js with Typescript",
        "React Material UI",
        "Use React Hooks",
        "Redux",
        "Pay with Stripe"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of Javascript"
      ],
      "description": "Learn how to create an Ambassador App using React, Next.js with Typescript. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a prebuild API.\nIn React you will learn:\nCreate a React project with Typescript\nCreate a Next.js project with Typescript\nReact Material UI\nUse Redux\nUse React Hooks\nCreate public and private routes\nRestrict routes for unauthorized users\nUse Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Mastering CodeIgniter 4 with Bootstrap 4: Projects and Advan",
      "url": "https://www.udemy.com/course/the-complete-codeigniter-4-series-with-bootstrap-4projects/",
      "bio": "Embark on a journey from scratch to mastery with CodeIgniter 4 and Bootstrap 4, enriched with advanced topics and real-w",
      "objectives": [
        "Understanding the why and how of CodeIgniter 4 and Bootstrap 4.",
        "The key differences and upgrades from CodeIgniter 3 to CodeIgniter 4.",
        "Fundamentals and advanced concepts of CodeIgniter 4.",
        "Building web applications and websites using CodeIgniter 4 and Bootstrap 4.",
        "How to utilize helpers, libraries, and query builders in CodeIgniter 4.",
        "Implementing MVC (Model View Controller) approach in projects.",
        "Form validation and important security tips.",
        "Working with AJAX and jQuery for real-time data handling.",
        "Introduction to ORM (Object Relational Mapping).",
        "Performing CRUD operations and building login/signup systems in CodeIgniter 4.",
        "Integrating third-party and admin panel templates into projects.",
        "Understanding and using CodeIgniter 4's layout and libraries.",
        "Using jQuery plugins within projects.",
        "How to use jQuery and javascript",
        "Custom Routes",
        "Create Dynamic pages system like WordPress",
        "Working with databases using CodeIgniter's Model and Entity Classes."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Server Requirements to run codeigniter 4"
        ],
        "General Concepts": [
          "Downloading the codeigniter 4",
          "Application structure or the folder structure",
          "Design patterns and MVC design pattern",
          "Running application OR local development server",
          "Controllers in codeIgniter 4",
          "CodeIgniter URL in codeigniter 4",
          "Views in codeigniter 4"
        ],
        "Helpers in codeigniter 4": [
          "Introduction Helpers in codeigniter",
          "Form Helper in codeigniter",
          "Inflector helper in codeigniter 4",
          "URL helper in codeigniter 4"
        ],
        "Working with Database and Query builder": [
          "Setting the database in codeigniter 4",
          "Connecting with database in codeigniter 4",
          "Query builder Class in codeigniter 4",
          "Query helper methods in codeigniter 4",
          "select, where, where_in, where_no_tin with and or in codeigniter 4",
          "like, or_like, not_like, having,group by in codeigniter 4",
          "insert,update, update_batch, delete in codeigniter",
          "Method chaining in codeigniter 4",
          "Database metaData in codeigniter 4"
        ],
        "Basic Concepts": [
          "In coming request class in codeigniter 4",
          "PHP alternative synatx"
        ],
        "Adding Bootstrap 4": [
          "Embedding the bootstrap 4 in CodeIgniter 4"
        ],
        "Data Modeling": [
          "Modeling Data and ORM in codeigniter 4",
          "Creating model in codeigniter 4",
          "Query builder with model in codeigniter 4",
          "Update and delete using model in codeigniter 4",
          "Getting records from model and sending to the view in codeigniter 4",
          "Removing the public and index.php from url in codeigniter 4"
        ],
        "CodeIgniter Versions": [
          "Introduction to versions in codeigniter Development OR production"
        ],
        "Introduction to libraries": [
          "Introduction to libraries",
          "Creating the database and setting with our system with model in codeigniter 4",
          "Creating the pagination in codeigniter 4",
          "What are the services in codeigniter 4",
          "Creating the form for validation class in codeigniter 4",
          "Validation data in codeigniter 4 using validating class",
          "Upload the image with upload library in codeigniter 4",
          "Session library in codeigniter 4",
          "Embeding the bootstrap 4 template in codeigniter 4.",
          "Setting bootstrap 4 template in Codeigniter 4"
        ],
        "CRUD operation in CodeIgniter 4": [
          "Introduction to crud in Codeigniter 4",
          "Downloading the project and creating the Database with a table for crud operatio",
          "Creating the model in codeigniter 4",
          "Creating the form and inserting the record",
          "Showing all the results",
          "Updating the student record",
          "Delete the student",
          "Adding Bootstrap 4 in the Crud Application"
        ]
      },
      "requirements": [
        "Basic knowledge of Server (XAMPP, WAMPP)",
        "Basic knowledge of Programming",
        "Basic knowledge of CorePHP (PHP4)",
        "Basic knowledge of HTML",
        "Basic knowledge SQL",
        "PHP 5.x is required"
      ],
      "description": "Embark on an engaging and dynamic learning journey with \"Mastering CodeIgniter 4 with Bootstrap 4: Projects and Advanced Concepts\". This course is meticulously designed for both beginners and seasoned developers who wish to grasp the fundamentals of CodeIgniter 4 and Bootstrap 4 and dive deep into advanced concepts.\n\n\nWe kickstart this course by understanding the significance of CodeIgniter 4 and its key differences from its predecessor, CodeIgniter 3. Once we've established a solid foundation, we swiftly move on to the practical aspects, including building comprehensive web applications and websites.\n\n\nWe delve into a variety of exciting topics, from harnessing the power of helpers, libraries, and query builders to understanding and implementing the MVC (Model View Controller) approach in projects. You'll also gain hands-on experience in form validation, security protocols, AJAX, and jQuery for real-time data handling.\n\n\nAs we progress, we unravel the mysteries of ORM (Object Relational Mapping) and learn how to execute CRUD operations. We also learn how to construct efficient login and signup systems using CodeIgniter 4.\n\n\nMoreover, we explore integrating third-party and admin panel templates, using jQuery plugins, and understanding the significance of CodeIgniter 4's layout and libraries. Toward the end of the course, we focus on effectively working with databases using CodeIgniter's Model and Entity Classes.\n\n\nSo, if you're enthusiastic about web development and wish to take your skills to new heights, this course is just for you. Sign up and let's embark on this enriching learning adventure together!",
      "target_audience": [
        "Aspiring web developers who are eager to learn CodeIgniter 4 with Bootstrap 4 from scratch.",
        "Developers familiar with CodeIgniter 3 looking to upgrade their skills to CodeIgniter 4.",
        "Anyone interested in building practical projects using CodeIgniter 4 and Bootstrap 4. Developers who wish to gain a comprehensive understanding of MVC, CRUD operations, AJAX, and ORM.",
        "Individuals seeking to learn about integrating third-party templates and working with databases in CodeIgniter 4."
      ]
    },
    {
      "title": "MERN Stack Resume Builder - React , Node , Mongo DB , AntD",
      "url": "https://www.udemy.com/course/mern-stack-resume-builder-react-node-mongo-db-antd/",
      "bio": "Develop your own Resume Builder Application with the worlds most popular tech stack MERN",
      "objectives": [
        "MERN Stack all CRUD Operations",
        "Understanding how Real Time Projects developed using the world most popular tech stack MERN.",
        "Building complex Web Apps without using State Management Tool like Redux.",
        "Working with the best Non Relational database Mongo DB",
        "Develop your own Resume Builder without depending on any third party websites.",
        "24/7 Support from the team",
        "By the end of the course you will know you to work full stack applications in both local and production environment",
        "Deploying the app to Heroku ( Live Production Environment )"
      ],
      "course_content": {
        "Introduction / Resources": [
          "Promo / Github Repo"
        ],
        "FrontEnd Setup": [
          "React App Setup",
          "Routing and Folder Structure"
        ],
        "Layout Setup": [
          "Layout Part-1",
          "Layout Part-2"
        ],
        "Backend Setup": [
          "Node",
          "Mongo Connection",
          "User Model",
          "Authentication API's"
        ],
        "Authentication": [
          "Login / Register Screens",
          "Login / Register API Integration"
        ],
        "Loaders and Protected Routes": [
          "Loader",
          "Protected Routes"
        ],
        "Update Profile UI": [
          "Profile Page",
          "Update Profile - Personal Info",
          "Update Profile - Skills & Education",
          "Update Profile - Projects and Experience"
        ],
        "Update Profile API Integration": [
          "Update Profile API",
          "Update Profile Integration"
        ],
        "Templates Creation": [
          "Templates Intro",
          "First Template - 1",
          "First Template - 2"
        ],
        "Pointing Templates to Homepage": [
          "Home page",
          "Pointing templates to homepage"
        ]
      },
      "requirements": [
        "React Basics",
        "Node JS Basics",
        "Better understanding of Javascript"
      ],
      "description": "Hi , Welcome to the course MERN Stack Resume Builder\nIf went want to build any professional Resume / CV , mostly we will choose third party websites or MS Word . But now as a Web Developer we should not depends like other people for resumes. We can develop our own resume builder with the technologies which we already knew.\nSo In this course I will teach you how to develop your own resume builder with the worlds most popular tech stack MERN.\nWe will learn the following concepts on the next five hours.\nMERN Stack all CRUD Operations\nUnderstanding how Real Time Projects developed using the world most popular tech stack MERN.\nBuilding complex Web Apps without using State Management Tool like Redux.\nWorking with the best Non Relational database Mongo DB\nDevelop your own Resume Builder without depending on any third party websites.\n24/7 Support from the team\nBy the end of the course you will know you to work full stack applications in both local and production environment\nDeploying the app to Heroku ( Live Production Environment )\nMERN Stack: MERN Stack is a JavaScript Stack that is used for easier and faster deployment of full-stack web applications. MERN Stack comprises of 4 technologies namely: MongoDB, Express, React and Node.js. It is designed to make the development process smoother and easier.\nMongoDB: A document-oriented, No-SQL database used to store the application data.\nNodeJS: The JavaScript runtime environment. It is used to run JavaScript on a machine rather than in a browser.\nExpress JS: A framework layered on top of NodeJS, used to build the backend of a site using NodeJS functions and structures. Since NodeJS was not developed to make websites but rather run JavaScript on a machine, Express JS was developed.\nReactJS: A library created by Facebook. It is used to build UI components that create the user interface of the single page web application.\nEach of these four technologies plays an important role in providing an end-to-end framework for the developers. Even these four technologies play an important role in the development process of web applications.\nBefore MERN stack, it was earlier named as MEAN stack, MERN Stack is one of the variations of MEAN, here MEAN is also comprises of four components or say four different technologies, i.e., M is for MongoDB, ' E ' is for Express, ' A ' is for Angular.js, and ' N ' is for Node, here if you will observe, then you can identify that in MEAN, ' A ', i.e., Angular.js is replaced by ' R ', i.e., React.js in MERN, the main reason behind is - MERN Stack is mainly used for faster development of smaller applications as compared with MEAN, MEAN stack is a mainly better option for large-scale applications. Still, it takes more time for the development of smaller applications. They also both have different structures comparatively.",
      "target_audience": [
        "MERN Stack Developers",
        "React Developers",
        "Full Stack Developers",
        "Students who want to build Real World Projects with MERN Stack"
      ]
    },
    {
      "title": "Build Complete Blog System With Laravel 8 ( Upgraded to 9 )",
      "url": "https://www.udemy.com/course/build-complete-blog-system-with-laravel-8/",
      "bio": "Learn How to Build a Complete Blog System And Complete Admin Dashboard Using Laravel 8 and upgraded to 9",
      "objectives": [
        "How to create professional laravel project from zero",
        "how to create Advanced Blog system.",
        "How to Send Ajax Requests and work with Json responds.",
        "How to Manage User Roles and Permissions"
      ],
      "course_content": {
        "Setup Blog Template": [
          "Template Overview",
          "Create Project With Setup Breeze Package for Authentication.",
          "Building Home page and Fixing Css and JS Links",
          "Build Master Layout and Single Post Page",
          "Build Contact and About Pages",
          "Implementing Logout And Fixing Login Button Style"
        ],
        "Database Migrations, Models and Relationships.": [
          "User & Role Models And Relationships",
          "Fixing users migration Foreign Key",
          "Post Model And Relationship With User Model",
          "Category Model And Relationsiph With Post Model",
          "Tag Model And Relationship With Post Model",
          "Comment Model And Relationship With Post Model",
          "Image Model And ( Polymorphic ) Relationship Between Image, Post And User"
        ],
        "Generate Dummy Data Using Models Factories and Database Seeder": [
          "User and Role Factories",
          "Post and Category Factories",
          "Comment Factory",
          "Tag Factory",
          "Image Factory",
          "Recap & make a Git Commit"
        ],
        "Lets Make it Dynamic Using Controllers.": [
          "Get All Posts At Home",
          "Get Posts Images Dynamicly",
          "Get Sidebar Recent Posts Dynamicly",
          "Get Sidebar Categories Dynamicly",
          "Home Posts Pagination.",
          "Single Post",
          "Implement Post Comment Button in Single Post",
          "Show Flash Message when Posting Comment",
          "Working on About Controller",
          "Working on Contact Controller ( Store Contact Messages )",
          "Working on Contact Controller ( Sending Contact Email )",
          "Sending Contact Markdown Email",
          "Implement Send Contact Email with AJAX ( part 1 )",
          "Implement Send Contact Email with AJAX ( part 2 )",
          "Category Posts Page",
          "Tag Posts Page",
          "Categories Page"
        ],
        "Admin Dashboard - Overview": [
          "Intro to Admin Dashboard ( Rocker )",
          "Setup Admin Dashboard",
          "Merge Dashboard Page to Our Project And Fixing css and js links",
          "Prevent users from accessing admin pages Using Middleware."
        ],
        "Admin Dashboard - Posts": [
          "Create New Post Form",
          "Uploading Images onTinyMCE Editor at Post Form",
          "Validate Data and Inserting Post",
          "Edit Post",
          "Update And Delete Posts",
          "View All Posts",
          "Making Commit on Git"
        ],
        "Admin Dashboard - Categories": [
          "Create New Category Form",
          "Valdiate Data and Store New Category",
          "Edit and Update Category",
          "Delete Category and Show All Categories"
        ],
        "Admin Dashboard - Tags": [
          "Insert and Update Tags inside Post Form",
          "Detach Related Tags After Deleting Post AND Fixing Post Thumbnail.",
          "Fixing - Update Tags in Post Form.",
          "View All Tags"
        ],
        "Admin Dashboard - Comments": [
          "Create Comment Form",
          "Store Comment",
          "Edit, Update And Delete Comment",
          "View All Comments"
        ],
        "Admin Dashboard - Roles & Permissions": [
          "Introduction to Roles and Permissions",
          "Dynamically Store All Permissions",
          "Attach Roles With Permissions",
          "Create Role Form",
          "Store Role",
          "View All Roles"
        ]
      },
      "requirements": [
        "Good Understanding PHP and OOP",
        "Understand Laravel Basics (Routing, Controllers, models, relations, blade, .....)"
      ],
      "description": "We are going to learn How to Build a Complete Blog System And Complete Admin Dashboard Using Laravel 9 And We'll Deploy it,\n\n\nCourse Will Be Splitted into two phases\n\n\nPhase 1: Building The Completed Project From Scratch.\n- You will learn How To Start Any Laravel Project From Scratch, How To work with controllers, model, middlewares, migrations , .....\n- You will Learn How to use Ajax with Laravel and much more.\n- You will Upload it on Github and Will Deploy The project on Real Server.\n\n\nPhase 2: Building Its API.\n\n\n- The API in this phase did not added yet to this course, and It will be after a while from Uploading this course.\n\n\n- Project Description:\n1- Simple Blog System Project\n2- Posts, Categories, Tags, Comments and User Registeration System.\n3- Admin Dashboard For Admin, Editors and other roles.\n4- Each Rule has its own Permission as Admin Specified.\n5- Contact Page to contact with your visitors and Full Control inside Admin Dashboard.\n6- About Page For Visitors and Full Controll For Admin To Edit it.\n7- TinyMCE Editor will be included to Work with Posts.\n8- Code Will be Available on Github.\n9- We will Deploy The project.\n\n\n- Future Updates\n1- Complete API For The Blog to use it on Mobile Application or other website.\n2- Chat System Between Registered Users.\n3- Enhancing The Front end A little and Working With Livewire.\n\n\nCourse Features:\nSimple\nEasy To Follow.\nInstructor Responds to Messages quickly, So you can Ask What ever you want.\nCheap.\n30 Days refund guarantee\n\n\nDo Not Enroll To This Course If You:\nDo not know PHP.\nDo not know OOP.\nDid not Create At Least One Project Using Native PHP and Another Using PHP OOP.",
      "target_audience": [
        "New Laravel Developers",
        "Beginners Laravel Developers",
        "Developers Who did not create thier own projects.",
        "Devlopers Or Students Who have Experience in PHP OOP and wanna take a step forward."
      ]
    },
    {
      "title": "Build a website HTML5 CSS3 Beginner Course",
      "url": "https://www.udemy.com/course/how-to-build-a-website-html5-css3-beginner-course/",
      "bio": "Complete Starters Guide to Creating a website form scratch HTML5 CSS3 PHP contact from Responsive Design Templates",
      "objectives": [
        "create HTML5 CSS3 websites",
        "be able to send contact from content to emails",
        "make any website responsive",
        "use PHP to build out multi page sites",
        "create and style HTML and CSS code"
      ],
      "course_content": {
        "How to Create a Website from Scratch": [
          "Introduction to making your own website",
          "Resources",
          "HTML5 website what you need to get started",
          "HTML5 create a basic HTML5 template",
          "HTML5 Basic Source",
          "HTML5 website body structure Wireframe",
          "HTML5 website navigation header setup",
          "HTML5 website add Styling",
          "HTML5 website create navigation bar",
          "HTML5 website main content sections",
          "HTML5 website container width",
          "HTML5 website Styling Content area floating columns",
          "HTML5 website add content better web development",
          "HTML5 website sidemenu",
          "HTML5 website create a footer",
          "HTML5 website complete footer",
          "HTML5 website project completed",
          "Website Source Code"
        ],
        "Next Steps HTML5 website development": [
          "HTML5 website create a contact form",
          "HTML5 style contact form on website",
          "PHP form data HTML5 website contact",
          "PHP send mail",
          "Contact form and PHP source",
          "PHP create template header and footer",
          "PHP web template for multi page websites",
          "HTML5 website responsive CSS",
          "Responsive Source 4",
          "All Source Code"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learn more with PDF guides and Resources for additional learning"
        ]
      },
      "requirements": [
        "computer",
        "desire to learn"
      ],
      "description": "Complete web developer guide to creating an amazing fully functional website!\nAll of the source files and resources needed to create a custom website from scratch are included in this course. This course is perfect for anyone who wants to learn about website creation. All of the source code is explained in a step by step easy to follow structure. Learn to make your own websites, grow your portfolio and more.\nWeb development skills are in high demand, this course will teach you how to make websites. Starting with a blank page, code is added and explained. Starting with a wireframe we build out the site step by step within this course. Watch the code come to life!\nStart with a basic HTML5 template which you can use to create any website.\nWe show you how to create a content page structure, using a header, container, submenu and footer. Format your websites using this base structure to create unlimited number of variations.\nCreate a NAV bar for website navigation\nStyle your HTML to make it look amazing\nAdd main content area and submenu for more navigation\nSource files are included, follow along creating your own content.\nCreate a footer and your website is ready to go.\nNext steps are also included. Add simple PHP code to create added functionality such as a contact form. Make your website multi page ready with PHP headers and footers. You will be able to create and propagate changes in the heading across as many pages as you like. We also walk you through how to make your website responsive to be viewed on any screen.\nComplete website development course, create your own version of this website use it in your portfolio.",
      "target_audience": [
        "Anyone who wants to create websites",
        "anyone who wants to learn more about making websites",
        "anyone who wants to build a full complete website",
        "anyone who wants to learn HTML5 CSS3 and PHP together"
      ]
    },
    {
      "title": "Svelte with Test Driven Development",
      "url": "https://www.udemy.com/course/svelte-with-test-driven-development/",
      "bio": "Learn Svelte by applying test driven development (using jest, testing-library/svelte)",
      "objectives": [
        "Build application with Svelte 3",
        "Build an application with internationalization (i18n)",
        "Build an application with client side routing",
        "Store, actions, reactive declarations and many more features of Svelte",
        "Practice Test Driven Development in a complete project from beginning to the end.",
        "Learn the test runner, Jest and understand how to structure test modules",
        "How to mock external dependencies in testing.",
        "Feel how the test driven development is giving confidence when refactoring your application."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Methodology",
          "Create Project",
          "Running the App",
          "Test Dependency Configuration Warning",
          "Test Environment Setup",
          "Development Environment Tools",
          "Project Source Code",
          "Resources"
        ],
        "Sign Up": [
          "Sign Up",
          "Sign Up Form Layout",
          "Interacting with Form",
          "Dependency Warning for Axios",
          "Making API Request",
          "Mock Service Worker Update",
          "Mocking",
          "Proxying Requests to Backend",
          "Styling",
          "Progress Indicator",
          "Sign Up Success Layout",
          "Refactor Tests",
          "Fix Test Order Problem"
        ],
        "Validation": [
          "Validation",
          "Display Validation Error",
          "Restoring Button State",
          "Input Component",
          "Styling Input",
          "Remaining Validations",
          "Client-side Validation",
          "Hiding Validation Errors",
          "Refactor"
        ],
        "i18n - Internationalization": [
          "Internationalization - i18n",
          "i18n Library",
          "Changing Language",
          "Language Selector Component",
          "Local Validation Messages",
          "Adding Language to API Requests",
          "Refactor"
        ],
        "Routing": [
          "Routing",
          "Client-side Routing",
          "NavBar",
          "Styling NavBar",
          "Declerative Routing",
          "Svelte Routing Library",
          "Account Activation Page",
          "Account Activation API Request",
          "Spinner Component"
        ],
        "Listing Users and User Page": [
          "Listing Users and User Page",
          "UserList",
          "Refactor Page Responses in Tests",
          "Next and Previous in UserList",
          "Styling",
          "Link to UserPage",
          "Actions",
          "Default Profile Image",
          "Keyed Each",
          "UserList Progress Indicator",
          "Translations",
          "ProfileCard Component",
          "UserPage Progress Indicator",
          "User Not Found Case"
        ],
        "Authentication": [
          "Authentication",
          "Login Form",
          "Interactions",
          "Authentication Request to Backend",
          "Authentication Errors",
          "Translations",
          "Navigation After Successful Authentication",
          "ButtonWithProgress Component",
          "Card Component"
        ],
        "Client State Management": [
          "Client State Management",
          "Logged in Layout",
          "NavBar Component",
          "Using LocalStorage",
          "LocalStorage Abstraction",
          "Svelte Store Practice",
          "LocalStorage Encryption",
          "Storing Credentials"
        ]
      },
      "requirements": [
        "Experience with javascript is required"
      ],
      "description": "The frontend world is having very popular frameworks which are heavily used in most of the applications. Svelte is joining this competition by bringing lots of cool, developer friendly features. After practicing svelte, it will be hard to go back and work with other frameworks. You will be amazed when you see how much you can do with less code.\nIn this course we will be learning Svelte by creating a web application with it. Also we will apply test driven development (TDD) methodology from beginning to the end.\nWe will use one of the most popular test libraries of javascript. jest and testing-library\nwhile building this application, we will learn\nclient-side routing. we will apply our custom implementation then we will use svelte-routing library\ninternationalization\nglobal state management in a component based application\nand we will see\nhow test driven development works.\nhow it's affecting our code quality, reusability\nhow it's giving us the confidence about refactoring our implementation\nhow to avoid implementation details while creating tests\nThis course is purely built on practice. Each code piece we write, will be for our actual application implementation.\nIn each section we will gradually build our application. We will not jump ahead and add functionality not needed for that moment. We will implement one requirement at a time. Each implementation will bring the next requirement to us.\nAnd following this practice, will help you to get a solid foundation about overall web application requirements and how to implement one of them with Svelte by following test driven development methodology.\nAfter completing the course, you will be able to use Svelte in your next project and you will experience the benefits of test driven development.",
      "target_audience": [
        "Developers who want to learn Svelte",
        "Developers who want to see Test Driven Development in action"
      ]
    },
    {
      "title": "Full Stack Web Development with React,React Native,Bootstrap",
      "url": "https://www.udemy.com/course/full-web-development-course-html-css-boostrap-and-react/",
      "bio": "Full Stack Developer skills. HTML CSS Javascript, Bootstrap, React JS, React Native to Learn Full Stack Web Development",
      "objectives": [
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "You will be able to prepare lists in different formats",
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap",
        "Learn Bootstrap 4 and UIs from scratch",
        "Set up our virtual environment for javascript, react, bootstrap, html and css",
        "Install React-Native dependencies for MAC and Windows",
        "How to include JS File in HTML",
        "What is conditional statements (if else, switch case, ternary operator), how to use",
        "What is loops (for loops, while loops, continue and break statements), how to use them",
        "How to write Functions, what are the differences between Function Decleration and Function Expression",
        "How to create Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Learn to compile Sass in the easiest way possible using a GUI",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "Create a beautiful, responsive landing page for any one",
        "CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field.",
        "Some web developers will obtain a degree or certification in the field.",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting making it very important language for web developer",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Choosing the best JavaScript framework for your web project depends on what you are looking for.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "HTML is not considered a programming language but rather a markup or formatting language.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a front-end library in Javascript that was developed by Facebook.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web.",
        "There are many reasons why React is popular. One reason is that Facebook developed it."
      ],
      "course_content": {
        "Introduction to Full Stack web development with react, react native, bootstrap": [
          "What is Internet and HTML ?",
          "Project Files and Course Documents",
          "Basic Tags",
          "Images and Attributes",
          "Lists",
          "List Example",
          "Block Level - Inline Elements",
          "FAQ about full stack web development, HTML, CSS, Bootstrap and React",
          "HTML Quiz"
        ],
        "Let's Learn More Complex Topics in HTML": [
          "Tables",
          "Table Example",
          "Forms",
          "Forms Example",
          "HTML Quiz"
        ],
        "CSS": [
          "CSS Basics",
          "CSS Colors",
          "Background and Border",
          "Selectors",
          "CSS Quiz"
        ],
        "Intermadiate CSS": [
          "Text and Fonts",
          "Debugging in CSS",
          "Box Model",
          "CSS Position",
          "CSS Float",
          "Display Property",
          "Box-Model Practice",
          "Float-Layout Practice",
          "Box-Sizing",
          "Media Queries",
          "CSS Quiz"
        ],
        "Flexbox and Grid For CSS": [
          "Flexbox Introduction",
          "Flexbox Properties 1",
          "Flexbox Properties 2",
          "Flexbox Properties 3",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2",
          "Grid CSS - 3",
          "Grid CSS - 4",
          "Grid CSS - 5",
          "Grid and Flexbox Project",
          "Grid and Flexbox Project - 2",
          "Grid and Flexbox Project - 3",
          "Grid and Flexbox Project - 4",
          "CSS Quiz"
        ],
        "Bootstrap": [
          "What is Bootstrap?",
          "Including Bootstrap in the Project",
          "Web Design",
          "Bootstrap Quiz"
        ],
        "Introduction To Bootstrap": [
          "Nav Bar",
          "Grid System",
          "Header Section",
          "Our CSS File-1",
          "Our CSS File-2",
          "Font Awesome and Features Section",
          "Font Awesome and Features Section-2",
          "Quiz Full stack web development",
          "Full stack web development Quiz",
          "Bootstrap Quiz"
        ],
        "Intermediate Bootstrap": [
          "Bootstrap Modals",
          "Modals-2",
          "Bootstrap Cards",
          "Bootsrap Cards Part 2",
          "Carousel 1",
          "Carousel 2",
          "CSS Z-Index",
          "Z-Index Our Project",
          "Image Gallery",
          "Forms",
          "General Changes",
          "General Changes - Part 2",
          "Bootstrap Quiz"
        ],
        "Let's Start to Learn React JS": [
          "Your First React App Overview",
          "Frequently Asked Questions in React Js, React native, Angular",
          "Let, Const and Var in 3 minutes",
          "Install Node JS",
          "Create Your React App",
          "Why You Will Need To Create a React App?",
          "Start Creating React App",
          "Do You Want to Learn How To Stop React App?",
          "quiz"
        ],
        "What Is This JSX?": [
          "Converting HTML JSX",
          "Inline Styling with JSX in React JS",
          "JavaScript Variable in JSX",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge needed about javascript, html, css, bootstrap, react, react js, react native",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Desire to learn javascript",
        "Desire to learn HTML & CSS",
        "Desire to learn React Js",
        "Desire to learn react or react js with redux, hooks and context",
        "Desire to learn react native",
        "Desire to learn web development with react, react native, html, css, bootstrap",
        "Desire to learn bootstrap",
        "Desire to learn grid css",
        "Desire to learn html, css, bootstrap",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Full Stack Web Development with React, React Native, Bootstrap.\nFull Stack Developer skills. HTML CSS Javascript, Bootstrap, React JS, React Native to Learn Full Stack Web Development\nThis course will be your gateway to learn web design with a step-by-step approach.  We can assure you that only this course will enough for you to learn web development from scratch to intermediate.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nThis course will take you from a complete beginner to a  master in hours! By the way, you do not need to know anything for this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state.\nJavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications. On top of that, JavaScript is a great language for beginners because it gives them a chance to write code that does something visual, which is exciting and helpful when you're just getting started as a programmer. Dynamic content is the hot topic in web development right now. Dynamic content refers to content that constantly changes and adapts to specific users whenever possible. For example, JavaScript can be used to determine if a website visitor is using a computer or a mobile device before deciding whether or not to render the mobile version of the website. It's these small things behind the scenes that create genuine value in using JavaScript to create dynamic web pages.\nWith this course, you will improve your Bootstrap experience with HTML5 and CSS3 codes\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Udemy has a top-rated course to help you achieve your goals.\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, Bootstrap 4 and React JS step by step with hands-on examples. And then you will be confident in using ReactJS, and if you ever get stuck, we will be there to help.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nJavaScript is the number one programming language for internet applications. During our course, you will be informed about the basics of JavaScript in detail and how to solve problems. Here's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize.  In this course, we will be teaching all of web development subjects by creating various projects.\nIn this course you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nWe will start with local installation and react basics. After that, we will create 5 projects.\nProject 1 – Learn, create react app and Jsx with ‘first-app’\nProject 2 – Learn React props system with ‘blog-posts’ app\nProject 3 – Learn react components, state, lifecycle methods, async operations, and much more... with the ‘hemisphere’ app\nProject 4 – Handling event handlers, fetching data from an outside API, and showing list of records with ‘image-list’ app\nProject 5 - Routing with React Router and using React Portals to render children outside the DOM hierarchy with the ‘react-router’ app\nBasics of React and React-Native libraries,\nHow to send an HTTP request from a mobile application,\nHow to use the flex-box system,\nHow to create reusable components,\nTo reach another app on the device from our app and\nCreating your own mobile app is going to be clear for you.\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nFull stack web development\nWeb development\nFront end web development\nFull stack web development\nFull stack developer\nfull web development\nHtml css javascript\nWeb developer\nFull stack\nFull stack web development\nWeb development\nFront end web development\nFull stack web development\nFull stack developer\nPhp\nHtml css javascript\nWeb developer\nFull stack\nBootstrap\nBootstrap 4\nBootstrap 3\nBootstrap 5\nHtml csss bootstrap\nBootstrap wordpress\nBootstrap studio\nreact native js\njs react\nreact next js\nreact bootstrap\nreact native\nreact\nbootstrap\nreact js\nreactnative\nreact css\n\nNo prior knowledge is needed!\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nFull Stack Web Development with React, React Native, Bootstrap course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5, CSS 3, Bootstrap 4 and React JS the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Programmers who want to learn React and React-Native",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "People who want to become web development with html, css, javascript, react, react native",
        "Poeple who want to learn front end web development",
        "People who want to learn backend web development",
        "People who want to learn full stack web development",
        "People who want to learn website development"
      ]
    },
    {
      "title": "Spring Boot 3 Thymeleaf Full Course for Beginners [2025]",
      "url": "https://www.udemy.com/course/learn-thymeleaf-with-spring-boot/",
      "bio": "Learn Thymeleaf Fundamentals and Build Spring Boot MVC Web Applications using Latest Spring Boot 3 and Thymeleaf 3",
      "objectives": [
        "Learn Thymeleaf Fundamentals",
        "Learn Thymeleaf Standard Expressions",
        "Learn Iteration or Looping in Thymeleaf",
        "Learn Conditionals in Thymeleaf",
        "Form Handling in Thymeleaf",
        "Learn Spring MVC Concepts",
        "Learn to Create Spring Boot Project and Integrate Thymeleaf",
        "Spring Boot Auto Configuration for Thymeleaf",
        "Learn to Build Student Management System Project using Spring Boot and Thymeleaf",
        "Learn to Validate Forms in Thymeleaf Templates",
        "Learn How to Use Bootstrap CSS 5 Framework for Styling Web Pages."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download Class Notes in PDF"
        ],
        "Thymeleaf Overview": [
          "What is Thymeleaf?",
          "How Thymeleaf Engine Works?",
          "Quiz Time"
        ],
        "Spring MVC Introduction": [
          "What is Spring MVC?",
          "What is DispatcherServlet?",
          "Spring MVC Components",
          "How Spring MVC Works Internally",
          "Spring Boot Web MVC Architecture (Three - Layer Architecture)",
          "Quiz Time"
        ],
        "Getting Started with Thymeleaf and Spring Boot": [
          "Create Spring Boot Project and Integrate Thymeleaf",
          "Spring Boot Auto Configuration for Thymeleaf",
          "Thymeleaf Hello World Example",
          "Thymeleaf Attribute - th:text",
          "Quiz Time"
        ],
        "Thymeleaf Standard Expressions": [
          "Thymeleaf Variable Expressions",
          "Thymeleaf Selection Expressions",
          "Thymeleaf Message Expressions",
          "Thymeleaf Link (URL) Expressions",
          "Thymeleaf Fragment Expressions",
          "Quiz Time"
        ],
        "Iteration or Looping in Thymeleaf": [
          "Thymeleaf Looping or Iteration - th:each Attribute",
          "Thymeleaf Looping or Iteration - th:each Attribute Status Variable",
          "Quiz Time"
        ],
        "Conditionals in Thymeleaf - If, Unless and Switch Case Conditions": [
          "Thymeleaf Attribute - th:if and th:unless",
          "Thymeleaf Attribute - th:switch and th:case"
        ],
        "Form Handling in Thymeleaf": [
          "Form Handling in Thymeleaf Overview",
          "Form Handling in Thymeleaf - Create Handler Method to Return Register Page",
          "Form Handling in Thymeleaf - Design User Registration Form",
          "Form Handling in Thymeleaf Template - Display User Registration Form Data",
          "Quiz Time"
        ],
        "Project: Student Management System": [
          "Create and Setup Spring Boot Project in IntelliJ",
          "Understanding spring-boot-starter-thymeleaf Dependency",
          "Configure MySQL Database in Spring Boot App",
          "Create Student JPA Entity",
          "Create StudentRepository Interface",
          "Create StudentDto and StudentMapper",
          "List Students Feature Backend",
          "List Students Feature Frontend",
          "Create Student Feature - Create Handler Method for Student Form",
          "Create Student Feature - Create Student Form Handling",
          "Create Student Feature - Create Handler Method for Save Student",
          "Create Student Feature - Create Student Form Validation",
          "Update Student Feature Backend",
          "Update Student Feature Frontend",
          "Delete Student Feature Implementation",
          "View Student Feature Backend",
          "View Student Feature Frontend",
          "Download Source Code of this Section"
        ]
      },
      "requirements": [
        "Java",
        "Spring Boot Basics",
        "IntelliJ IDEA Basics"
      ],
      "description": "In this course, you will learn Thymeleaf fundamentals and build Spring boot MVC web applications using the latest version of Spring boot and Thymeleaf.\n\n\nIn this course, we will be using Spring Boot 3, Spring Framework 6, and Thymeleaf 3 - The latest versions.\n\n\nWhat you will learn:\nLearn Thymeleaf Fundamentals\nLearn Thymeleaf Standard Expressions\nLearn Iteration or Looping in Thymeleaf\nLearn Conditionals in Thymeleaf\nForm Handling in Thymeleaf\nLearn Spring MVC Concepts\nLearn to Create Spring Boot Project and Integrate Thymeleaf\nSpring Boot Auto Configuration for Thymeleaf\nLearn to Build Student Management System Project using Spring Boot and Thymeleaf\nLearn to Validate Forms in Thymeleaf Templates\nLearn How to Use Bootstrap CSS 5 Framework for Styling Web Pages.\n\n\nWhat is Thymeleaf?\nThymeleaf is a modern server-side Java template engine for both web and standalone environments, capable of processing HTML, XML, JavaScript, CSS, and even plain text.\nThe main goal of Thymeleaf is to provide an elegant and highly-maintainable way of creating templates.\nIt's commonly used to generate HTML views for web applications.\nThymeleaf is a very popular choice for building UI so we will be using Thymeleaf to build the view layer in the Spring MVC web application (Student Management System).\n\n\nWhat is Spring Boot?\nSpring Boot is basically an extension of the Spring framework which eliminated the boilerplate configurations required for setting up a Spring application.\nSpring Boot is an opinionated framework that helps developers build Spring-based applications quickly and easily. The main goal of Spring Boot is to quickly create Spring-based applications without requiring developers to write the same boilerplate configuration again and again.\n\n\nTechnologies and Tools Used:\n- Java 17\n- Spring Boot 3\n- Spring Framework 6\n- Spring MVC 6\n- Thymeleaf 3+\n- Bootstrap CSS 5 Framework\n- Spring Data JPA\n- Hibernate Framework 6\n- MySQL Database\n- Maven\n- IntelliJ IDEA",
      "target_audience": [
        "This course is beginners who to learn Thymeleaf and build Spring Boot MVC Web applications."
      ]
    },
    {
      "title": "Cloud Computing BOOTCAMP- AWS and IBM Cloud",
      "url": "https://www.udemy.com/course/cloud-computing-bootcamp-aws-and-ibm-bluemix/",
      "bio": "Build Hybrid Cloud solutions on AWS and IBM Cloud by learning services on both of these platforms",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over Amazon Cloud- Amazon Web Services.",
        "Having command over all the options, services and tools available.",
        "You could develop Mobile, Web, IoT, AI, and other applications.",
        "Learn to create an Object Storage, Alexa ChatBOT, DevOps Toolchain, etc",
        "On completion of this course you would be able to develop and deploy your applications over IBM Cloud- Bluemix.",
        "Learn to create an Object Storage, Watson ChatBOT, DevOps Toolchain."
      ],
      "course_content": {
        "IBM Bluemix Cloud Services": [
          "Introduction",
          "IBM Cloud",
          "Intro to IBM Bluemix- PaaS",
          "Compute",
          "Storage, Containers",
          "Network, Security",
          "Mobile",
          "DevOps",
          "Watson Services",
          "FaaS (Function as a Service)",
          "Web development",
          "Cloudfoundry",
          "Blockchain",
          "Object Storage",
          "Create a Chatbot",
          "Analytics Engine",
          "Apache Spark",
          "Container Registry",
          "DB2",
          "Devops toolchain- continuous delivery",
          "Dynamic Dashboard",
          "IoT Starter",
          "Node.js Cloudant",
          "Python Flask"
        ],
        "Amazon Web Services": [
          "AWS Introduction",
          "Create an account",
          "AWS EC2",
          "EC2",
          "AWS VPC",
          "AWS EC2 container",
          "AWS Beanstalk",
          "AWS Lambda",
          "AWS Lightsail",
          "Analytics EMR",
          "Analytics Kinesis",
          "Database DynamoDB",
          "Database Elasticache"
        ],
        "AWS- Build a Solution": [
          "Launch a VM",
          "Register a Domain",
          "Create Backend for Mobile App",
          "Connect an IoT device",
          "Build using Virtual Server",
          "Start Development Project",
          "Deploy Serverless Microservice",
          "Build a Web app"
        ],
        "VPC and Cost Management": [
          "VPC",
          "Network- VPC dashboard",
          "Create a VPC",
          "Create a Subnet",
          "Create and Attach Internet Gateway",
          "Cost Management"
        ]
      },
      "requirements": [
        "No prerequisites at all. But if u are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "Cloud Computing has become a hot topic in the Information Technology industry. Developers, Testers, Managers, Creators, Entrepreneurs, and others, are rushing to harness the power of Cloud platforms- Scalability, Elasticity, Fault Tolerance, Cost Effective, Remotely managed, Easy to Integrate, and much more. You could have any of these profiles or you could still be a college student planning to build a career in IT sector, this course can help you learn some key cloud computing skills on AWS and IBM Cloud with hands-on practical exercises. If you just explore, top 5 cloud computing platforms, you will find that AWS (Amazon Web Services) is most popular among all other cloud computing platforms. Followed by Microsoft Azure, GCP (Google Cloud Platform) and IBM Bluemix.\nIn this course you will be learning a wide range of tools and services available on AWS and IBM Bluemix cloud platforms. Although IBM Bluemix is not among top 3 cloud platforms in terms of popularity. But when you explore a bit more, you will find, that some of its services such as IBM Watson is unmatchable. When it comes to building and running Cognitive applications, IBM Watson is the far more feature-rich and advanced then all of the competitors. A lot of Cloud professionals have some exposure to AWS and Microsoft Azure, but it is rare in the industry for a person to be comfortable on both AWS and IBM Bluemix. As companies are focused on building hybrid cloud solutions, they tend to integrate the services of different cloud vendors. This way their solutions are not limited to just any single cloud platforms. Say for example, If a company tries to build a project that involves some services from AWS like Elastic Beanstalk, S3, Kinesis, and combine it with IBM Watson Knowledge Studio, they would be expecting some IT professionals who are skilled on both of these platforms. When you have skills of both of these platforms, your chances of landing a dream job in some advanced cloud projects increases dramatically.\nMost inventions in the history had been done by various Polymaths, who are skilled in two different subjects, or you can call platforms in this digital age. In this course you will be learning a lot of cloud services on both AWS and IBM Cloud with lots of practical demonstrations. Can't wait to grow your career? Just Start learning. Will see you in the class.",
      "target_audience": [
        "Anyone who just wants to learn and test Amazon Web Services Platform or any developer willing to develop his/her application over Amazon Cloud- Amazon Web Services.",
        "Anyone who just wants to learn and test IBM Cloud Platform or any developer willing to develop his/her application over IBM Cloud- Bluemix."
      ]
    },
    {
      "title": "Build 8 Python Web and Application Python From Zero to Hero",
      "url": "https://www.udemy.com/course/build-8-python-web-and-application-python-from-zero-to-hero/",
      "bio": "A Comprehensive Guide to Python Web Development, From Zero to Hero, Using Django, Flask, and Real-World Tools",
      "objectives": [
        "Discover 8 hand-picked websites specifically designed to cater to Python learners of all levels.",
        "Explore a diverse range of resources, including interactive coding environments, comprehensive tutorials, challenging exercises, engaging projects, and vibrant",
        "Learn from expert instructors and fellow learners, fostering a supportive and collaborative learning environment.",
        "Gain access to free and paid resources to suit your budget and learning style.",
        "Develop a personalized learning plan by leveraging the strengths of each platform to maximize your learning efficiency."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction & Installation",
          "Basic Website Structure Development Syntax",
          "Basic Math Website",
          "Graph Plotting Website",
          "Creating Cryptography Website",
          "Creating Madlibs Game Website",
          "Creating Fun & Entertaining Website Part-1",
          "Creating Fun & Entertaining Website Part-2",
          "Creating Text on Photo Application Website",
          "Creating Basic Data Upload Website",
          "Creating Business Website",
          "Creating Real-Time Chat Website",
          "Creating Rock, Paper & Scissor Game Website",
          "Class Project-1",
          "Class Project-2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Are you eager to dive into the world of Python programming? Whether you're a complete beginner or an experienced developer looking to expand your skills, this course is your ultimate guide to the top 8 online resources that will accelerate your Python journey.\nIn this comprehensive course, you will:\nDiscover 8 hand-picked websites specifically designed to cater to Python learners of all levels.\nExplore a diverse range of resources, including interactive coding environments, comprehensive tutorials, challenging exercises, engaging projects, and vibrant communities.\nLearn from expert instructors and fellow learners, fostering a supportive and collaborative learning environment.\nGain access to free and paid resources to suit your budget and learning style.\nDevelop a personalized learning plan by leveraging the strengths of each platform to maximize your learning efficiency.\nBuild a strong foundation in core Python concepts and gradually progress to advanced topics like data science, web development, and machine learning.\nBy the end of this course, you will:\nHave a clear understanding of the best online platforms for Python learning.\nBe equipped with the knowledge and resources to effectively learn Python at your own pace.\nBe able to navigate the Python learning landscape with confidence and ease.\nHave a roadmap for continuous learning and skill improvement in the ever-evolving world of Python.\nThis course is for:\nAnyone interested in learning Python for personal or professional development.\nEnroll now and embark on an exciting journey of Python learning with the best online resources at your fingertips!",
      "target_audience": [
        "Experienced Python developers looking to enhance their skills and discover new learning resources.",
        "Anyone interested in learning Python for personal or professional development."
      ]
    },
    {
      "title": "Master Scalable WordPress Deployment On AWS Cloud",
      "url": "https://www.udemy.com/course/master-scalable-wordpress-deployment-on-aws-cloud/",
      "bio": "Learn to install High Availability Cloud Architecture for WordPress on AWS LightSail using AWS best practices.",
      "objectives": [
        "Deploy Scalable WordPress on AWS Cloud",
        "Create High-Availability and Fault Tolerant WordPress Architecture",
        "Setup And Configure RDS DB, Clone and Migrate Databases",
        "Use AWS S3 Storage for storing WordPress Media",
        "Setup AWS Load Balancer",
        "AWS User roles and access management",
        "Scalability Types and Concepts",
        "WordPress and AWS best practices and much more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What You will learn in this Course"
        ],
        "Important AWS Cloud Terminologies And Why you need a Scalable WordPress?": [
          "Important Cloud Architecture Terminologies",
          "Types Of Scalability",
          "Why you need a Scalable WordPress?",
          "Why AWS Lightsail is the best option to deploy Scalable WordPres?"
        ],
        "High Availability Architecture For WordPress": [
          "Overview Of High-Availability WordPress Architecture",
          "Challenges in deploying multi-server WordPress Application"
        ],
        "Installing WordPress On LightSail": [
          "AWS Account Introduction",
          "Install your first WordPress on Lightsail",
          "Intro to Lightsail terminal and Some useful commands"
        ],
        "RDS Database Configuration": [
          "Taking Backup of WordPress Database",
          "Setup and configure AWS RDS Cloud DB Part 1",
          "Setup and configure AWS RDS Cloud DB Part 2",
          "Migrating WordPress Database to RDS",
          "Attaching RDS DB with our WordPress"
        ],
        "External Storage AWS S3 Configuration": [
          "Create S3 Bucket to store WP media files & Add WordPress plugin to use S3 bucket",
          "Configure S3 Plugin: Create an IAM user for S3 to provide S3 Access",
          "Configure S3 Plugin: AWS S3 final Configuration and settings for Plugin"
        ],
        "Load Balancers Configuration": [
          "Improve WordPress Availability by adding Load Balancer to the cloud architecture",
          "Creating WordPress instance Replicas for scalability using LightSail SnapShot"
        ],
        "Testing + Domain and SSL Mapping to Load Balancer": [
          "Testing the Architecture + Mapping Domain & SSL with Lightsail Load Balancer"
        ]
      },
      "requirements": [
        "Basic Knowledge of WordPress is useful but not necessary",
        "Knowledge of AWS is Optional"
      ],
      "description": "(If you're a WP user then, Scalable Cloud Deployment of the WordPress is the only skill which you need to master this Year 2019!!!)\nUPDATE: Domain Mapping and SSL Configuration Guide is Added at the end of the course.\nEver wondered how you can start winning high-value enterprise WordPress projects? Most of the enterprise projects need scalable WordPress Cloud Architecture to support high level traffics and a large number of users.\nThis course is designed to show you a step by step process to deploy a scalable WordPress on AWS Lightsail Cloud.\nForget the decade old technology and learn how to leverage cloud computing for your WordPress projects. In many cases, it is fast, more secure and cheaper to host WordPress on cloud than the traditional servers.\n\n\nWordPress is a truly amazing CMS, which can be used to make so many types of websites from blogs to social networks.\nScalable WordPress is needed for high traffic websites as well as it can be used for advanced enterprise applications with large number of users. For example, Online Learning platform, Real Estate portals, community or matrimonial portals or any other advanced WordPress application.\n\n\nThe course will guide you through high-availability and multi-server cloud architecture for the WordPress. And by the end of this course, I promise that you will be able deploy a scalable WordPress on AWS cloud servers.\n\n\nWe have designed this course to suit all level users. And it will help you understand the cloud architecture and its concepts easily with step-by-step explanation.\nAdditionally, the learning is supported with extra resources at each stage to help users clearly understand the process.\n\n\nFurther, if any student still face any challenges in learning the deployment process, we also promise to provide a prompt support through the Q And A section and emails.\n\n\nThis course is suitable for WordPress users, enthusiasts, developers, agency owners, freelancers and anyone who is interested in learning scalable WordPress deployment for advanced applications.\nIt will also help you learn more about several AWS Services and the best practices for deploying the Wordpress on AWS.\n\n\nFor much less than the price of one dinner out with the family, you're going to get over 1 hour of video guides, access to our student discussion forum, and the ability to ask us any questions you may have as you progress through the course.\nOn top of all that, you get lifetime access and a 30 day, 100% money back guarantee!\nZERO AWS Experience Required\nIn this course you will learn:\nDeployment of Scalable WordPress Cloud Architecture from scratch\nUsing AWS LightSail for hosting WordPress\nUsing AWS S3 for WordPress media storage\nHosting WordPress Database using AWS Aurora DB\nUsing AWS Load Balancer\n.... and much much more!\nUnless you master advanced WordPress deployment, you are going to continue to lose high-value enterprise customers.\nOnce you complete this course, you will be able to develop a scalable and fault tolerant WordPress application which can support enterprise solutions with high traffic.\nI walk you through the most important aspects of Scalable WordPress Deployment with a clear, step-by-step approach. By following along with me, you will see how simple, fun and effective WordPress on the Cloud can be.\nThank you so much for taking the time to check out our course. I know you're going to absolutely love it.\nWhy wait any longer?\nClick on \"Take This Course\" button, and Start Your Advanced WordPress Journey now to deliver high-value WordPress project!",
      "target_audience": [
        "WordPress users who want to learn advance WordPress cloud installation",
        "Agency Owners and Freelancers who want to increase their WordPress skills required to get enterprise projects",
        "Employees who want to advance their WordPress skills required for career growth",
        "Anyone who wants to master the world's most powerful and popular CMS platform",
        "Entrepreneurs who want to leverage the power of the Scalable WordPress for their Business Applications",
        "Students who want to develop a set of professional WordPress skills.",
        "WordPress Beginners and more advanced WordPress users who want a closer look at how to set up Scalable WordPress the right way",
        "If you have ANY WordPress blog or Website with high level of traffics, this course will give you the best tools and skills to successfully deploying it on cloud and managing it with low costs."
      ]
    },
    {
      "title": "Master AngularJS : Learn Angular JS From Scratch",
      "url": "https://www.udemy.com/course/master-angularjs/",
      "bio": "Master AngularJS and learn how to develop web applications including Single Page Applications (SPAs) using AngularJS",
      "objectives": [
        "Learn key concepts of AngularJS",
        "learn how to develop single page applications using AngularJS",
        "Access to 40 HD quality videos",
        "Access to Exercise files used during the course"
      ],
      "course_content": {
        "Introduction to AngularJS": [
          "What is AngularJS",
          "Why one should use AngularJS",
          "Basics of AngularJS",
          "AngularJS Architecture Pattern"
        ],
        "Understanding Views,Directives & Filters": [
          "Introduction",
          "One way Data Binding",
          "Two Way Data Binding",
          "Directives & Expressions",
          "Built-in Directives",
          "Iterating over data",
          "Sorting & Formatting Data",
          "Making use of ng-include"
        ],
        "Modules,Controllers & Scope": [
          "Understanding Modules",
          "Defining & Adding a Controller to a Module",
          "Hooking Views to Controller",
          "Module,Controller and Views in action - Code Demo",
          "Dealing with minification & Parameter Injection techniques"
        ],
        "Forms,Models & Validatons": [
          "Preparing our Form",
          "Posting our reviews back to our review collection",
          "Form Validation in action"
        ],
        "Templates - Custom Directives": [
          "Custom Directives & their types",
          "Custom Directives with Controllers"
        ],
        "Routing": [
          "Introduction to Routing",
          "Making use of ngRoute",
          "Configuring routes using $routeProvider & ng-view Directive",
          "Configuring Additional routes with parameters"
        ],
        "Factories & Services": [
          "Introduction",
          "Factory & Service Outline",
          "Creating a Factory & Injecting it in a Controller",
          "Wiring the Business Logic into a Factory",
          "Creating a Service - An Overview",
          "Creating a Service - Code Demo",
          "Using built-in AngularJS services",
          "Understanding Dependency Injection"
        ],
        "CSS & AngularJs": [
          "Playing with CSS",
          "Working with Bootstrap",
          "Using ng-animate"
        ],
        "Miscellaneous": [
          "Getting the Tabs ready",
          "Handling css classes with ng-class"
        ],
        "Conclusion": [
          "Conclusion & Code Download"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "Basic understanding of CSS",
        "Basic knowledge of JavaScript"
      ],
      "description": "This course teaches all about AngularJS. The course is designed for people having basic understanding of HTML,CSS & JavaScript. Learning AngularJS will surely be an added advantage for you as a web-developer\n\nThe course covers all the basic and advanced topics.\n\nWe will be also developing a Single Page Course Based Website during this course.\nSection wise code samples are also provided\n\nSo let's start learning...",
      "target_audience": [
        "Web developers with experience in working with HTML, CSS, and JavaScript"
      ]
    },
    {
      "title": "Beginners To Advance Laravel 10 APIs Development Tutorials",
      "url": "https://www.udemy.com/course/laravel-10-restful-apis-development-tutorials/",
      "bio": "Step-by-Step REST APIs Development in Laravel Using Sanctum, JWT, Passport Authentications.",
      "objectives": [
        "Basics of Laravel Application",
        "REST API Development without Authentication",
        "How To Use Sanctum To Create REST APIs in Laravel",
        "Laravel REST API Development Using JWT Authentication",
        "Step-by-Step APIs Development in Laravel Using Passport Authentication",
        "Process of APIs Development with Standard libraries in Laravel"
      ],
      "course_content": {
        "Course Objectives": [
          "What we'll learn?",
          "Laravel Installation Using Composer"
        ],
        "Laravel Basics": [
          "Create My First Program",
          "What is Migration & How To Use it?",
          "Understand About Application Models",
          "What is Seeder & How To Use it?",
          "What are Middlewares, Types & How To Use?",
          "How To Work with Route Group & Route Prefix?"
        ],
        "Phase #1: APIs Development without Authentication": [
          "Project Setup & Database Connectivity",
          "Create Table Migration",
          "Setup API Controller & Methods Settings",
          "API Model Settings",
          "API Routes Setup",
          "Add Employee API",
          "List Employee API",
          "Single Employee Data API",
          "Update Employee API",
          "Delete Employee API"
        ],
        "Phase #2: APIs Development Using Sanctum Authentication": [
          "Development Plans & Project Setup",
          "Create Table Migration",
          "API Controller Settings",
          "API Model Settings",
          "About Sanctum Auth Package",
          "API Routes Settings",
          "Student Register API",
          "Student Login API",
          "Student Profile API",
          "Student Logout API",
          "Add Project API",
          "Project List API",
          "Get Single Project API",
          "Delete Project API"
        ],
        "Phase #3: APIs Development Using JWT (JSON Web Token) Authentication": [
          "APIs Discussion & Project Setup",
          "Create Table Migrations",
          "APIs Controller Setup",
          "APIs Models Setup",
          "Installation of JWT Package",
          "APIs Routes Setup",
          "User Register API",
          "User Login API",
          "User Profile API",
          "Refresh Token & User Logout API",
          "Save User Course API",
          "List User's Course API",
          "Delete User Course API"
        ],
        "Phase #4: APIs Development Using Passport Authentication": [
          "Development Plans & Project Setup",
          "Create Table Migrations",
          "Setup API Controller Class",
          "Create API Model",
          "Installation of Passport Package",
          "API Routes Setup",
          "Author Register API",
          "Author Login API",
          "Author Profile API",
          "Author Logout API",
          "Add Author Book API",
          "List Author Books API",
          "Delete Author Book API"
        ]
      },
      "requirements": [
        "Basics of Laravel MVC",
        "MySQL Basic Understanding"
      ],
      "description": "It is very amazing to work with Laravel framework.\nREST stands for Representational State Transfer. A RESTful API uses a set of guidelines that define how the API should be constructed and how it should handle requests and responses.\nYou will learn the complete idea of Beginners To Advance Laravel 10 APIs Development Tutorials. Basic Experience in Laravel MVC & MySQL required.\nBegin your journey of Laravel 10 REST APIs Development with MySQL database driver here.\nIf you have just decided to learn Laravel concepts to create REST APIs then you have made the right choice, so take a breath. Beginners To Advance Laravel 10 APIs Development Tutorials is very easy to learn which means that you will be through the basics and on to writing standard in a very short time.\nInside this course “Laravel REST APIs Development” you will learn the complete details of Basics of Laravel framework to create web application apis. We will cover the whole basic concept from stage of beginners to creating web apis with authentication in application development.\nYou’ll get the concept of all building blocks of API Development in Laravel framework via it’s basic sessions of this class.\nOverall, inside this well structured of Laravel API Development course you will learn:\n– Basics of API Development Using Laravel framework\n– Learn about all Database Queries like Insert, Update, Delete, and Select\n– Learn about Request and Response flow with calls of APIs\n– How To work with CRUD APIs in Laravel\n– Queries Handling using Laravel eloquent class\n– How To Create RESTful APIs using Sanctum, JWT, Passport Authentication in Laravel framework\n– Process of Registration, Login, get Profile data, etc.\n– API Development standards of Laravel framework\nThis course is for every development level. For beginners, it is perfect to enroll and learn development in a detailed way.",
      "target_audience": [
        "Laravel Developers / Students / PHP Framework Lover"
      ]
    },
    {
      "title": "Build 20 Hands On Projects in React and Javascript",
      "url": "https://www.udemy.com/course/build-20-hands-on-projects-in-react-and-javascript/",
      "bio": "Learn React JS and JavaScript by doing same projects with hands on experience",
      "objectives": [
        "React",
        "Javascript",
        "ES6",
        "React Hooks"
      ],
      "course_content": {
        "Introduction / Source Code": [
          "Introduction / Source Code"
        ],
        "Counter JS": [
          "DEMO",
          "HTML",
          "CSS",
          "JS"
        ],
        "Counter React": [
          "Demo",
          "HTML",
          "CSS",
          "JS"
        ],
        "Calci JS": [
          "Calci DEMO",
          "Calci HTML",
          "Calci CSS",
          "Calci JS"
        ],
        "Calci React": [
          "DEMO",
          "HTML",
          "CSS",
          "JS"
        ],
        "Form-Validation JS": [
          "Form Validation - DEMO",
          "Form Validation - HTML",
          "Form Validation - CSS",
          "Form Validation - JS - 1",
          "Form Validation - JS - 2"
        ],
        "Form Validation - React": [
          "DEMO",
          "HTML",
          "CSS",
          "JS - Part - 1",
          "JS Part- 2"
        ],
        "Navigation - JS": [
          "DEMO",
          "HTML",
          "CSS",
          "JS"
        ],
        "Navigation - React": [
          "DEMO",
          "HTML",
          "CSS",
          "JS"
        ],
        "Todo List JS": [
          "DEMO",
          "HTML",
          "CSS",
          "JS - part1",
          "JS - part2"
        ]
      },
      "requirements": [
        "Javascript Basics"
      ],
      "description": "JavaScript, often abbreviated as JS, is a programming language that conforms to the ECMAScript specification. JavaScript is high-level, often just-in-time compiled, and multi-paradigm. It has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.\nReact is an open-source, front end, JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\nJavaScript vs React\nReact is a framework for building applications using JavaScript. React Native is an entire platform allowing you to build native, cross-platform mobile apps, and React. js is a JavaScript library you use for constructing a high performing UI layer\nReact components have reusable codes that make it simple to use and learn.\nReact library has JSX (JavaScript XML), which is HTML like syntax, which is processed into JavaScript calls.\nReact components are reusable which helps while working on larger scale projects and has their own logic and controls.\nOne-way data binding provides better control throughout the application.\nThe virtual DOM uses the ReactDOM library which ideally/virtually, represents UI and keeps in the memory and syncs with the real DOM.\nDOM has a smoother and faster performance due to virtual components.",
      "target_audience": [
        "Front End Developers"
      ]
    },
    {
      "title": "Advanced iOS Development with Swift 4.x",
      "url": "https://www.udemy.com/course/advanced-ios-development-with-swift-4x/",
      "bio": "Build effective and easy-to-maintain iOS apps using Swift",
      "objectives": [
        "Implement advanced aspects of the Swift 4 language.",
        "Build classes and small modules using current best practices.",
        "Incorporate concurrent patterns into your projects.",
        "Compare MVC, MVVM, and Viper and how they can help you layout code.",
        "Construct a reusable and generic networking layer.",
        "Create more robust and crash-free code with better error handling.",
        "Master less frequently used operators and apply them in your projects."
      ],
      "course_content": {
        "Protocol Extensions and Protocol-Oriented Programming Techniques": [
          "The Course Overview",
          "Retroactive Modeling",
          "Multiple Inheritance",
          "Extensions for Organizing Code"
        ],
        "Error-Handling, Write Crash Resistant Code": [
          "Representing Errors",
          "Handling Errors",
          "Unit Testing",
          "Writing Testable Code"
        ],
        "How to Enhance Your Code with Generics": [
          "Type Constraints",
          "Associated Types",
          "The Where Clause",
          "A Generic Networking Example"
        ],
        "Advanced Operators: When? Where? and Why?": [
          "Bitwise Operators",
          "Overflow Operators",
          "Option Sets"
        ],
        "Functions, Beyond the Basics": [
          "Inout Parameters",
          "Closures",
          "Variadic Parameters",
          "Subscripts"
        ],
        "Concurrency, Explore More Complex Concurrent Code": [
          "Queueing with Grand Central Dispatch",
          "Quality-of-Service",
          "Dispatch Semaphore and Locks"
        ],
        "Design Patterns, Make an Informed Decision on What's Best": [
          "Model-View-Controller (MVC)",
          "Model–View–Viewmodel (MVVM)",
          "View-Interactor-Presenter-Entity-Router (VIPER)"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift development is assumed."
      ],
      "description": "Swift is a secure, fast, and interactive programming language. It combines powerful type inference and pattern matching with a modern, lightweight syntax, allowing complex ideas to be expressed in a clear and concise manner. You can start using the new Swift compiler and migrate at your own pace, taking advantage of its new features\nThis course will provide you with an in-depth knowledge of some of the most sophisticated elements of Swift development, including protocol extensions, error-handling, design patterns, and concurrency, and guide you on how to use and apply them in your own projects. You'll see how even the most challenging design patterns and programming techniques can be used to write cleaner code and build more performant iOS and OS X applications.\nBy the end of this course, you'll have got the hang of effective design patterns and techniques, which means you'll soon be writing better iOS and OS X applications with a new level of composure and control.\nAbout the Author\nJonathan Wilson is a full-time iOS software developer based in Belfast, Northern Ireland. He acquired his love of code in university, where he also competed in international programming competitions. After leaving with a First Class Masters in CS, he worked in Fortune 500 companies and startups.\nHe currently works for a New York company with an application that has a large codebase using modern design patterns. In his spare time, he makes his own apps to explore new techniques and programming styles.",
      "target_audience": [
        "This video course is for developers who want to delve into advanced Swift concepts. If you are a developer who learns best by looking at and working with, code, then this course is for you."
      ]
    },
    {
      "title": "Building Applications with React 19 and ASP.NET Core 9",
      "url": "https://www.udemy.com/course/building-applications-with-react-and-aspnet-core-v2/",
      "bio": "Use React, ASP.NET Core, Entity Framework Core, Material Design, JWT, Leaflet, to build a full application!",
      "objectives": [
        "Build Web APIs with .NET Core",
        "Develop Single-Page Apps with React",
        "Using Entity Framework Core to work with databases",
        "Create register and login functionality",
        "Deploy .NET Core and React apps"
      ],
      "course_content": {
        "Introduction to React and ASP.NET Core": [
          "Introduction",
          "What is React?",
          "What is ASP.NET Core?",
          "Front-End vs Back-End",
          "What is TypeScript?",
          "Installing NVM and Node",
          "What is Vite?",
          "Installing Visual Studio",
          "Installing Visual Studio Code",
          "Installing SQL Server",
          "Creating the React App",
          "Creating the Web API using Visual Studio",
          "Creating the Web API using Visual Studio Code",
          "Summary",
          "Github repository"
        ],
        "Modern JavaScript Review": [
          "Introduction",
          "Creating the Project",
          "Modules",
          "Let and Const",
          "Arrow Functions",
          "Template Strings",
          "Ternary Operator",
          "Enhanced Object Literals",
          "Destructuring",
          "Spread Operator",
          "Classes",
          "Array Map",
          "Promises and Async-Await",
          "Debugger",
          "Summary"
        ],
        "First Steps with React": [
          "Introduction",
          "Exploring the React Project",
          "React vs HTML",
          "Exploring the Structure of a Basic Component",
          "Functional and Class Components",
          "Introduction to JSX",
          "React.Fragment",
          "Expressions in JSX",
          "CSS in React",
          "Events in React",
          "React Hooks",
          "useState",
          "Child Components: Props",
          "Passing Content as a Parameter",
          "Displaying Content Dynamically",
          "Repeting Content with Map",
          "Communication from Child to Parent",
          "Introduction to useEffect",
          "Example of useEffect",
          "React Hook: useContext",
          "React Hook: useMemo",
          "Another Example of Memo",
          "React Hook: useCallback",
          "Error Boundaries",
          "Summary"
        ],
        "Applying What We Have Learrned So Far in Our Project": [
          "Introduction",
          "Clean Up",
          "Displaying a Movie",
          "List of Movies",
          "Waiting to the Movies to Load",
          "Generic List",
          "Loading Component",
          "Installing Bootstrap",
          "Summary"
        ],
        "Routing": [
          "Introduction",
          "Creating the Menu Component",
          "Using React Router",
          "Storing the Routes in a Different File",
          "Creating the Pages of the Project",
          "Navigating with JavaScript",
          "URL Parameters",
          "Handling Not-Found Routes",
          "Summary"
        ],
        "Forms": [
          "Introduction",
          "Creating our First Form",
          "Validating our Form",
          "Disabling the Send Button While Posting the Form",
          "Custom Validations",
          "Updating Genres",
          "Filter Movies Components",
          "Actors Form",
          "Validations in Actors Form",
          "Select Image Component",
          "Movie's Form Component",
          "Introduction to Leaflet",
          "Leaflet and forms",
          "Movie's Form Component",
          "Multiple-Selector Component for Genres",
          "Multiple-Selector Component for Theaters",
          "Creating the Typeahead",
          "Selecting Multiple Actors",
          "Dragging Elements in a List",
          "Summary"
        ],
        "Fundamentals of ASP.NET Core": [
          "Introduction",
          "Preparing a Testing Repository",
          "Controllers and Actions",
          "Post, Put and Delete HTTP Methods",
          "Receiving a Parameter in an Action",
          "Routing Rules",
          "Data Types That an Action Can Return",
          "Asynchronous Programming",
          "Making Our App Faster with Cache",
          "Middlewares",
          "Introduction to Model Binding",
          "Validating Models",
          "Other Built-In Validations Rules",
          "Custom Validation Rules - By Attribute",
          "Custom Validation Rules - In Actions",
          "Dependency Injection",
          "The Dependency Inversion Principle",
          "Lifetime of the Services",
          "Using a Singleton for Our Repository",
          "Cleaning Up Cache",
          "Configuration Providers",
          "Summary"
        ],
        "HTTP and Databases": [
          "Introduction",
          "Cleaning-Up the Back-End",
          "Installing Axios - Making HTTP Requests From React",
          "Dealing with CORS",
          "Avoid Hardcoding URLs in React",
          "Installing Entity Framework Core",
          "Creating the Database",
          "Creating Genres - Back-End",
          "Creating Genres - Front-End",
          "Displaying Errors from the Web API in React",
          "Data-Transfer Objects",
          "Index Genres - Back-End",
          "Index Genres - Front-End",
          "Pagination - Back-End",
          "Ordering Records",
          "Pagination - Front-End",
          "Custom React Hooks",
          "Editing Genres - Back-End",
          "Editing Genres - Front-End",
          "Deleting Genres - Back-End",
          "Deleting Genres - Front-End",
          "Actor Entity",
          "Creating Actors - Front-End",
          "Preparing the App to Store Images",
          "Storing Images in Azure Storage",
          "Storing Images Locally",
          "Index Actors - Back-End",
          "Index Actors - Front-End",
          "Edit Actors - Back-End",
          "Edit Actors - Front-End",
          "Delete Actors - Back-End",
          "Delete Actors - Front-End",
          "Index Entity Component",
          "Base Controller - Getting the Paginated Entities",
          "Base Controller - Getting an Entity by its Id",
          "Base Controller - Create, Update, and Delete",
          "Theater Entity",
          "Theaters CRUD - Back-End",
          "Theaters CRUD - Front-End",
          "Movie Entity",
          "Creating Movies - Back-End",
          "Custom Model Binding",
          "Creating Movies - Front-End",
          "Finishing the Actors Typeahead Component",
          "Getting Movies - Back-End",
          "Landing Page - Front-End",
          "Editing Movies - Back-End",
          "Editing Movies - React",
          "Deleting Movies",
          "Movie Details Page",
          "Finishing the Movie Filtering Functionality - Back-End",
          "Finishing the Movie Filtering Functionality - Front-End",
          "Simplifying the Movie Filter Component",
          "Summary"
        ],
        "Security": [
          "Introduction",
          "Authentication and Authorization",
          "Hiding Content From Unauthorized Users",
          "Using Our Authorized Component",
          "Protecting Routes",
          "Configuring Identity",
          "Building the Login and Register Functionality",
          "Saving the JWT Locally",
          "Building the Login and Register Components",
          "Building the Rating Functionality",
          "Building the Rating Component",
          "Interceptors - Sending the JWT to the Web API",
          "Claim-Based Authorization",
          "Index Users - Back-End",
          "Index Users - Front-End",
          "Custom Caching Policy",
          "Summary"
        ],
        "Deployments": [
          "Introduction",
          "Deploying the Web API to Azure",
          "Deploying the React App",
          "Summary"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and C#"
      ],
      "description": "With ASP.NET Core, we can build Web APIs using C#.\nWith React, we can create modern, flexible web applications.\nIn this course, we’ll use both tools to build a complete project. We’ll create an application with a database, user system, back end, and UI, putting into practice all the concepts covered throughout the course.\nWe’ll go step by step through both the front-end development with React and the back-end with ASP.NET Core. You don’t need to have much experience with either technology to take this course. In fact, I’ll teach you the basics as we go.\nBy the end, we’ll deploy both our React app and ASP.NET Core app to production.\nHere are some of the topics we’ll cover:\nBuilding Web APIs with ASP.NET Core\nWorking with SQL Server databases using Entity Framework Core\nImplementing a user system with JSON Web Tokens (JWT)\nDeveloping a single-page application (SPA) with React\nCreating forms in React\nUsing React Hooks and building custom Hooks\nMaking HTTP requests from React to ASP.NET Core using Axios\nUsing third-party components\nDisplaying maps with Leaflet\nStoring spatial data in the database with NetTopologySuite\nAllowing users to upload images and saving them either in Azure Storage or locally\nBy the end of this course, you’ll have the knowledge and skills to tackle real-world development challenges using ASP.NET Core and React.",
      "target_audience": [
        "Developers who want to be full-stack",
        ".NET Developers who want to learn React (and vice versa)"
      ]
    },
    {
      "title": "Car Racer JavaScript Game Exercise Vanilla JavaScript",
      "url": "https://www.udemy.com/course/javascript-exercise/",
      "bio": "Explore how to create a custom JavaScript Car racer game from scratch using only JavaScript - Practice Exercise",
      "objectives": [
        "Create a car racing game from scratch",
        "Apply JavaScript and move elements within a page using JavaScript",
        "Detect overlapping collision between two elements",
        "Run animations within JavaScript"
      ],
      "course_content": {
        "Introduction to JavaScript Car Racer Exercise": [
          "Car Racer Introduction.",
          "New JavaScript Racer Game Exercise",
          "HTML setup container",
          "Car images Download",
          "Gameplay CSS setup styling",
          "JavaScript Element Selection",
          "JavaScript Event Listeners",
          "Setup Player Car and Start Functions",
          "Source Code Index and CSS",
          "JavaScript Road Building",
          "Interaction with Keyboard",
          "JavaScript Source Code",
          "Update Dashboard Values",
          "Moving Road JavaScript",
          "Tweak moving road Side move",
          "Source Code",
          "Keep player on the road",
          "Source Code",
          "JavaScript Game Adding other Cars",
          "Making other cars move",
          "JavaScript Element Collision detection Element Overlap Detection",
          "Crash Checker JavaScript Collide",
          "Source Code",
          "JavaScript Game Over end Game planning",
          "Enemy collision detection Car hit Car Check",
          "Source Code",
          "Final Game Over Play JavaScript",
          "Next level Restart Game",
          "JavaScript Exercise Code Review and Overview",
          "Final Source Code"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Extended Information Hub"
        ]
      },
      "requirements": [
        "Fundamental JavaScript concepts",
        "Access to computer",
        "Use of editor to write code",
        "HTML and CSS knowledge"
      ],
      "description": "Practice and learn more about JavaScript DOM while building a fun interactive car racing game from scratch.\nNo libraries, no shortcuts just learning JavaScript!\nSource code is included to get you started quickly.\nPrefect course for beginners to learn more about JavaScript!!! Step by step learning with all steps included\n\nFun and exciting way to learn and practice JavaScript.\nBeginner JavaScript knowledge is required as the course covers only JavaScript relevant to the building of the game.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nLearn how to setup your gameplay area using HTML and CSS\nAdd JavaScript setting event listeners\nAdd Keyboard actions to move an html div using keyboard arrow keys\nRun animationframe to change element position and respond to the users commands\nSetup start game functionality\nCreate a dynamic JavaScript road\nCreate elements within JavaScript\nAccess the JavaScript Document Object Model to manipulate element properties\nSetup and add values within an object to track location and move\nSetup a dashboard to output variables for the user like score and speed\nAdd road movement\nTrack speed dynamically with braking and accelerating\nAdd other cars and have them move within the gameplay area\nCheck for element overlap and detect collisions\nScore and extend gameplay\nAll this is included and a whole lot more.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the game today!!!!",
      "target_audience": [
        "Beginners to JavaScript",
        "Anyone who wants to practice writing JavaScript",
        "Anyone who wants to learn to make a JavaScript game without any libraries",
        "Web developers",
        "Webmasters"
      ]
    },
    {
      "title": "Branded Moodle MasterClass 4.0. Edwiser RemUI Theme",
      "url": "https://www.udemy.com/course/moodle-masterclass-with-edwiser-remui-theme/",
      "bio": "Learn to build a Branded Online School with Moodle + Edwiser RemUI with no Programming Experience",
      "objectives": [
        "Learn how to install Moodle on CPanel",
        "Learn how to install RemUI Premium Theme",
        "Learn how to customize front-end using CSS",
        "Learn how to customize your site's colors",
        "Learn how to create and add your logo",
        "Learn how to customize Moodle frontpage settings",
        "Learn how to register your Moodle site",
        "Learn how to install Edwiser plugins",
        "Learn how to install third party plugins",
        "Learn how to customize the homepage and the dashboard",
        "Learn how to create the homepage",
        "Learn how to create and add a loader",
        "Learn how to customize the signup page",
        "Learn how to login and signup",
        "Learn how to add background to the login and signup page",
        "Learn how to setup outgoing mail configuration",
        "Learn how to customize your course format settings",
        "Learn how to create a course",
        "Learn how to create course welcome message",
        "Learn how to add activities to the course"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Message to our students"
        ],
        "Installing Moodle and Customizing the Look and Feel for a Professional Look": [
          "Lecture 2: Bonus - Introduction to Moodle",
          "Installing Moodle",
          "Lecture 2: Bonus - Upgrading Moodle to version 4.0.2",
          "Lecture 3: Bonus - How to get Edwiser RemUI theme for free",
          "Lecture 3: Bonus - Introduction to Edwiser RemUI Theme",
          "Installing RemUI Theme",
          "Customizing Moodle using CSS"
        ],
        "Customizing Moodle Site Colors, Logo and Front Page Settings": [
          "Customizing Moodle site colors",
          "Customizing Moodle site logo",
          "Customizing Moodle front page settings"
        ],
        "Registering Moodle Site and Installing Site Plugins": [
          "Registering Moodle site",
          "Installing Edwiser plugins",
          "Installing third party plugins"
        ],
        "Customizing the Homepage, Dashboard and the Page Loader": [
          "Customizing the homepage and the dashboard",
          "Creating a robust homepage",
          "Creating a page loader"
        ],
        "Configure the Login and Signup Features on Moodle": [
          "Enabling the signup feature on Moodle",
          "Configuring the login and signup features on Moodle",
          "Add background image on the login and signup pages"
        ],
        "Configure the Outgoing Mail Configuration Settings and Create Moodle Courses": [
          "Configure the outgoing mail configuration on Moodle",
          "Configure course format settings on Moodle",
          "Creating a Course on Moodle",
          "Creating a course welcome message",
          "Creating course topic activities on Moodle"
        ]
      },
      "requirements": [
        "No programming or coding experience needed"
      ],
      "description": "Do you want to learn how to build a professional Learning Management System for your school or business based on a Powerful, Secure, and Open-Source platform, in a WEEK? Do you want to achieve this with no programming or coding experience at all? If the answers to these questions are YES, then this course is meant for you.\n\n\nWe have put together a course that is meant to equip you with the skills to begin your journey of becoming an experienced Moodle developer, administrator, manager, or instructor. This course is also Elementary for educators who work with Moodle in their institutions of learning as the Learning Management System.\n\n\nMoodle is a community-driven, globally supported platform that boasts +100 million users worldwide. Moodle is more than just an LMS platform – we are a global community of educators, trainers, developers, system administrators, and learners who are dedicated to building the world’s most effective platforms for learning. From sharing educational resources and debating new ideas to fixing bugs and updating documentation, our community is here to support you throughout your online learning journey.\n\n\nThis course will adopt a practical approach where we will slowly but surely build together while at the same time explaining all relevant concepts within each of the 21 stages we have created so far.\n\n\nThis is a growing course so expect more sections and lectures to be added in the near future. Check the description to keep track of any changes that our team may make. This course is offered to students speaking English, French, German, Italian, Portuguese, Spanish, and Turkish.\n\n\nMake the first step. Let's begin.",
      "target_audience": [
        "Beginner Moodle developers, administrators, managers and instructors",
        "Intermediate Moodle developers, administrators, managers and instructors",
        "Expert Moodle developers, administrators, managers and instructors",
        "Educators (teachers, lecturers, tutors...)"
      ]
    },
    {
      "title": "Django E-commerce | Advanced web App",
      "url": "https://www.udemy.com/course/django-e-commerce-advanced-web-app/",
      "bio": "Build a django e-commerce web app with core functionalities from add to cart to payment",
      "objectives": [
        "Real world E-commerce web app with Python/Django",
        "Understand database model",
        "Class-based & function-based views",
        "Pagination",
        "Sign in & Sign up",
        "Add to cart",
        "Remove from cart",
        "Payment processing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Important"
        ],
        "Django e-commerce": [
          "Understand the database model",
          "Django setup",
          "The item model",
          "Adding & display item",
          "Setup bootstrap theme",
          "Get image url",
          "Products & styles",
          "class-based view & product details",
          "Navigate to pages",
          "Sign in intro",
          "Page restriction & redirect to next"
        ],
        "Creating account app for sign in & sign up": [
          "Section intro",
          "Sign in & sign up",
          "Add a form to template",
          "Sign up new user",
          "Get logged in username"
        ],
        "Continue with the e-commerce": [
          "Completing the database model",
          "Migrations",
          "Add to cart - View",
          "Add to cart - order",
          "Summary view",
          "Message alert",
          "Creating own templatetags",
          "Summary page",
          "Finishing summary page",
          "Remove from cart",
          "Remove from cart exercice",
          "Shipping address form - get method",
          "Shipping address code",
          "Adding address - post method",
          "Displaying form just if needed",
          "Creating coupon form",
          "Let users use coupons",
          "Payment view",
          "Payment page with Stripe",
          "Payment page code",
          "Completing payment with credit/debit card with Stripe",
          "Add actions to admin dashboard",
          "Pagination"
        ]
      },
      "requirements": [
        "Basic web development knowledge",
        "Basic Python & django"
      ],
      "description": "A complete practical Python/Django e-commerce course in which you will learn to create your own web app with real world database that can be handle all functionalities from add to cart to payment. The course covers everything that is needed to:\nDisplay the items on the website\nLet the user sign in / sign up - of course log out as well\nView single item with its description, price, etc\nAdd items to cart\nRemove item from cart\nAdd coupon code\nAdd shipping/billing address\nPay with credit/debit card for the order using stripe\nUse Django frameworks with other great libraries to create very quickly real-world web application. Learn how to use Urls, Views, Models, Templates, and Forms. Learn how to upload file to your server.\nUse either SQLite or MySQL to store your data and manipulate them, either with simple Python, or with Django, or with PyQt5. (CRUD) Create, Read, Update, Delete.\nIn the course, very very less theoretical things are used. Learning with exemples and exercices is the most effective way!!!! However, during typing the codes, we explain everything from start to finish so you understand the theory while coding.\nNote that: this course is the answer to questions of some people for us, so it might be very basic and simple for you, or it does not have to be the answer for your own questions, but you might also find your own answer.\nIn case you missed the big sale, please visit our website or our facebook/instagram.",
      "target_audience": [
        "Web developers who wants to create e-commerce",
        "Anyone who wants to know how e-commerce works",
        "Database manager"
      ]
    },
    {
      "title": "Fullstack React & GoLang: Design to Reality Volume 1",
      "url": "https://www.udemy.com/course/react-golang-design-to-reality-volume-1/",
      "bio": "React Hooks Golang Websocket Styled Components Visually Appealing Beast",
      "objectives": [
        "React with Pro Designs and Golang Backend Web Sockets / REST"
      ],
      "course_content": {
        "System Setup and Provisioning": [
          "What were building.",
          "RESOURCES",
          "PLEASE READ:",
          "Domain Names and Servers",
          "Initial Ubuntu Setup & Install Nginx and Lets Encrypt",
          "Install Mysql Mongo PHPMyAdmin",
          "Install Node and Go",
          "Install Redis Server",
          "First React App & Nodejs Fun Stuff",
          "Recap Full Server Provision Part I",
          "Recap Full Server Provision Part II",
          "USING THE DOCKER IMAGE!!!"
        ],
        "Main Project Build": [
          "The Construct",
          "Asssets and Menu Components / Router LInks",
          "Media Reading Profile / Router Links",
          "The rest of The Master Compoents & Displays"
        ],
        "Go Websocket Server": [
          "Go Websocket Server I",
          "Go Websocket Server II",
          "GoLang Procon Data Package & Wireup Context With Websocket",
          "Setup Go Websocket Server Read Loop",
          "Go Utils Package and Base64 Decode test",
          "Mongo Fs & Config Packages Part I",
          "Mongo Connection Package Part II Test Connection",
          "Setup Mongo User and Test Retrieval / Validation",
          "Generate Private Public Key Pair",
          "Finish Config File Read In Public Private Keys",
          "JWT Generation & Send User Object"
        ],
        "The UI Displays": [
          "Wireup Keyboard Listener Start Login Panel",
          "Build LoginSignup Form #15 add Functionality",
          "Add Users and Profile Data Mongo Upload Images",
          "Profile Display Part I",
          "Profile Image Request (Part II)",
          "Polish Off Profile (Finish Request Set Context Data",
          "Add Message Data Request and Save to Context",
          "Messages and Chat Part I",
          "Polish Off Chat and Messages",
          "Polish Off Menu Display #3",
          "Date FNS and Calendar Prep",
          "Polish Off Calendar Display #09",
          "Polish Off NumPad Display #3"
        ],
        "PART II :: Project Rebuild": [
          "About:",
          "The Resource Link: Proj 2 Frontend",
          "The Resource Link2: Proj2 Node Backend",
          "Part Two Promo",
          "Begin Part II",
          "Hello World 2",
          "Hello World 2 React App",
          "The Setup - Styled Components - css Transitions",
          "Transitions 002",
          "Transitions 003",
          "Transitions 004",
          "Transitions 005",
          "Transitions 006",
          "Transitions 007",
          "Transitions 008",
          "Exercise Two Setup (skew, scale, translate, rotate, transform)",
          "Css Animations 010",
          "Css Animations 011",
          "Css Animations 012",
          "Css Animations 013",
          "Css Animations 014",
          "Css Animations 015",
          "Css Animations 016",
          "Dev 001",
          "Dev 002",
          "Dev 003",
          "Dev 004",
          "Dev 005",
          "Dev 006",
          "Dev 007",
          "Dev 008",
          "Dev 009",
          "Dev 010",
          "Dev 011",
          "Dev 012",
          "Dev 013",
          "Dev 014",
          "Dev 015",
          "Dev 016",
          "Detour 001",
          "Detour 002",
          "Detour 003",
          "Detour 004",
          "Detour 005",
          "Detour 006",
          "Detour 007",
          "Detour 008",
          "Detour 009",
          "Detour 010",
          "Detour 011",
          "Detour 012",
          "Detour 013",
          "Detour 014",
          "Detour 015",
          "Detour 016",
          "Flex 001",
          "Flex 002",
          "Flex 003",
          "Flex 004",
          "Flex 005",
          "Flex 006",
          "Flex 007",
          "Flex 008",
          "Flex 009",
          "Flex 010",
          "Flex 011",
          "Charts 001",
          "Charts 002",
          "Charts 003",
          "Charts 004",
          "Charts 005",
          "Charts 006",
          "Charts 007",
          "Charts 008",
          "Charts 009",
          "Charts 010",
          "Charts 011",
          "Charts 012",
          "Charts 013",
          "Charts 014",
          "Charts 015",
          "Charts #2 001",
          "Sentinel 001",
          "Sentinel 002",
          "Sentinel 003",
          "Sentinel 004",
          "Sentinel 005",
          "Sentinel 006",
          "Sentinel 007",
          "Sentinel 008",
          "Sentinel 009",
          "Sentinel 010",
          "Sentinel 011",
          "Sentinel 012",
          "Sentinel 013",
          "Sentinel 014",
          "Sentinel 015",
          "Sentinel 016",
          "Sentinel 017",
          "Sentinel 018",
          "Sentinel 019"
        ],
        "Project II Continued:: React D3": [
          "D3 React 001",
          "D3 React 002",
          "D3 React 003",
          "D3 React 004",
          "D3 React 005"
        ],
        "Mini GraphQL Apollo Server Course": [
          "About",
          "Up and Running",
          "Add Systems and Services",
          "Type Relationships",
          "Type Relationship with arrays",
          "Mutations add to data array set",
          "Mutations, remove from array set",
          "Refactor and Modularize Part I",
          "Refactor and Modularize Part II",
          "Refactor Modularize Part III",
          "Refactor and Modularize Part IV",
          "Integrate MySql Part I",
          "Integrate MySql Part II",
          "Integrate MySql Part III",
          "Wireup GraphQl with React Part I",
          "Wireup GraphQl with React Part II",
          "Wireup GraphQl with React Part III",
          "Integrating Users Part I",
          "Integrating Users Part II",
          "Integrating Users Part III",
          "Integrating Users Part IV",
          "Integrating Jwts Part I",
          "React GQL Login Form",
          "Protect Routes with JWT & start add user form",
          "Quck Update N Recap",
          "Minor Fixes then Unward",
          "Add Multer and Ant",
          "Update User Model for Profile Image",
          "Secure Create User Route",
          "Patch Create User with Profile Image",
          "Setup Server with Multer Add Upload Route",
          "Add Client Side Axios and Uploader Component",
          "Polish Off Set Profile Image Path in MySql",
          "Resources:"
        ]
      },
      "requirements": [
        "Internet"
      ],
      "description": "Using Go Lang as our back end system and Mongo DB for Data strorage we will build a fluent React Hooks and Context front end with Styled Components and React Router. Asynchronous Web-Socket handling is a big focus on the back end with BCrypt user authentication and JWT Generation and Validation.  There is a huge dynamic touch with css flex and grid utilization as well for the front end. This course is Volume one of many to come after. Its is setup to be built / appended / added to.",
      "target_audience": [
        "React and GoLang Lovers"
      ]
    },
    {
      "title": "Introduction to JavaScript Animation with Anime.js",
      "url": "https://www.udemy.com/course/introduction-to-javascript-animation-with-animejs/",
      "bio": "Learn the fundamentals of Anime.js to create awesome animations with JavaScript",
      "objectives": [
        "You'll learn the fundamentals of JavaScript animation",
        "You'll be able to use Animejs to create awesome animations",
        "You'll learn what micro-interactions are and how you can implement a simple one using JavaScript and Animejs"
      ],
      "course_content": {
        "Intro to JavaScript Animation": [
          "Course Outline",
          "Using the Project Files",
          "Plain JavaScript Animation",
          "JavaScript Animation with RAF"
        ],
        "Anime.js Fundamentals": [
          "Introducing Anime.js",
          "Targets",
          "Units and Values",
          "Objects as Value",
          "Functions as Value",
          "Easing Curves",
          "Animating CSS Transforms",
          "Animating Other CSS Properties",
          "Animating Color Values",
          "Animating SVG Properties",
          "Animating DOM Attributes",
          "Animation Parameters",
          "Animation Callbacks",
          "Animation Playback Controls"
        ],
        "Keyframes and Timelines": [
          "Anime Keyframes",
          "Anime Timelines"
        ],
        "Practical Animation Examples": [
          "Create a nice loading spinner",
          "Create a Login Form Micro-interaction"
        ],
        "Conclusion": [
          "Great Job!"
        ]
      },
      "requirements": [
        "Computer and a code editor like Submit Text.",
        "Familiar with the fundamentals of web design",
        "Familiar with CSS and JavaScript basics."
      ],
      "description": "The goal of this course is to teach you the fundamentals of JavaScript animation with Anime.js. And I'm hoping that by the end of the course you'll have all the necessary knowledge to create beautiful and engaging animations.\nIf you are new to JavaScript and CSS, I would recommend learning the basics first, because this course only focuses on the topics related to Anime.js and animation design . We'll first start by creating a simple animation with plain JavaScript and then we'll dive into learning Anime.js. We'll cover all Anime's animation APIs and at the end we'll work on two practical animations. The first will be a loading spinner and the other will be a micro-interaction animation for a login form.",
      "target_audience": [
        "This course is great for designers and developers who want to learn how to implement animations in JavaScript"
      ]
    },
    {
      "title": "Create Web Apps with Meteor & React",
      "url": "https://www.udemy.com/course/create-web-apps-with-meteor-react/",
      "bio": "Learn how to create real-time applications using only JavaScript by creating a full polling app",
      "objectives": [
        "Develop real-time state of the art web and mobile apps",
        "Choose the right packages to simplify the development efforts",
        "Learn how to integrate Meteor with React"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Meteor - Conceptual Overview"
        ],
        "ES6 Primer": [
          "Introduction",
          "Codepen code for ES6 Primer",
          "Variable Declarations",
          "Arrow Functions",
          "ES6 Destructuring Assignment"
        ],
        "React Primer": [
          "General Concepts",
          "Codepen code for React Primer",
          "JSX",
          "Components and Props",
          "Specs, Lifecycle and State"
        ],
        "Creating a complete poll application": [
          "Description of the Application",
          "Project structure and the imports directory",
          "Install Meteor, npm and React and Project Setup",
          "Data Flow and Parent-Child Relationships in React",
          "Creating the Polls Component",
          "Creating the Poll Component",
          "Creating the Option Component",
          "Using SVGs to render bar charts for the options",
          "Code - github - Using SVGs to render bar charts for the options",
          "Intro to Stylus",
          "Code GitHub - Intro to Stylus",
          "Routing: Introduction to FlowRouter",
          "Code GitHub - Routing: Introduction to FlowRouter",
          "Collections - Creating Fake Data and saving it into a collection",
          "Publish and Subscribe",
          "Code GitHub - Publish and Subscribe",
          "Organizing the polls with a masonry layout",
          "Code GitHub - Organizing the polls with a masonry layout",
          "Removing autopublish and insecure",
          "Display when the poll was created using Moment",
          "Code GitHub - Display when the poll was created using Moment",
          "Add icons to poll for Viewing, Editing and Deleting",
          "Code GitHub - Add icons to poll for Viewing, Editing and Deleting",
          "Click Events - add event to delete a poll",
          "Code GitHub - Click Events - add event to delete a poll",
          "Pagination",
          "Code GitHub - Pagination",
          "Alternative Layout - No Masonry",
          "Code GitHub - Alternative Layout - No Masonry",
          "Creating a NavBar",
          "Code GitHub - Creating a NavBar",
          "Making the NavBar responsive - Part 1",
          "Code GitHub - Making the NavBar responsive - Part 1",
          "Making the NavBar responsive - Part 2",
          "Code GitHub - Making the NavBar responsive - Part 2",
          "Improving the UI to show the active route in the NavBar",
          "Code GitHub - show the active route on the NavBar",
          "Managing Users Accounts",
          "Code GitHub - Managing Users Accounts",
          "Registration - fixes for Meteor 1.4+",
          "Editing the navbar to include login / register",
          "Code GitHub - Editing the navbar to include login / register",
          "Showing nav items for login users - part 2 Fixing some issues",
          "Code GitHub - Showing nav items for login users - part 2 Fixing some issues",
          "Control that non-logged in users cannot save or modify data using Meteor Methods",
          "Code GitHub - Control that non-logged in users cannot save or modify data using",
          "Adding Facebook Login",
          "Creating a sticky footer",
          "Code GitHub - Creating a sticky footer",
          "Creating some fake (user) accounts",
          "Code GitHub - Creating some fake (user) accounts",
          "Local collections",
          "Code GitHub - Local Collections",
          "Save New Poll - Part 1",
          "Code GitHub - Save New Poll - Part 1",
          "Add and remove options",
          "Code GitHub - Add and remove options",
          "Setting a minimum and maximum number of options per poll",
          "Code GitHub - Setting a minimum and maximum number of options per poll",
          "Adding alert messages",
          "Code GitHub - Adding alert messages",
          "Save New Poll - Part 2",
          "Code GitHub - Save New Poll - Part 2",
          "Defining schemas",
          "Code GitHub - Defining schemas",
          "Simple form validation",
          "Viewing a poll & using containers to manage data",
          "Code GitHub - Viewing a poll & using containers to manage data",
          "Editing a poll",
          "Code GitHub - Editing a poll",
          "Adding onClick events to navigate to certain views (edit and view poll)",
          "Code GitHub - Adding onClick events to navigate to certain views (edit and view",
          "Generating URL and iFrame code to share poll on other websites",
          "Code GitHub - Generating URL and iFrame code to share poll on other websites",
          "Copy to clipboard",
          "Enable voting on a poll",
          "Code GitHub - Enable voting on a poll",
          "Using local storage to control that users can vote only once per poll",
          "Code GitHub - Using local storage to control that users can vote only once per p",
          "Sorting poll results by number of votes",
          "Code GitHub - Sorting poll results by number of votes",
          "Fixing styling issues with the widths of the bars",
          "Code GitHub - Fixing styling issues with the widths of the bars",
          "Creating a new layout for a posted poll",
          "Code GitHub - Creating a new layout for a posted poll",
          "Show only the polls created by the current user",
          "Code GitHub - Show only the polls created by the current user"
        ]
      },
      "requirements": [
        "A basic understanding of JavaScript",
        "Any computer: OSX, Linux or Windows"
      ],
      "description": "Course Description\nYou are here because you want to develop your own web apps, aren’t you?\nGreat. Well, thanks to a full stack JavaScript framework, called Meteor, that is easier than ever.\nDeveloping real-time web apps, such as chat or messaging apps, synchronous collaborative apps, or others was hard and time consuming until now. Furthermore, you needed to master many different frameworks and technologies.\nWith Meteor.js you can build sophisticated real-time web apps faster than you can imagine. Meteor is a new framework that makes building web apps easier, simpler, and faster. It uses JavaScript on both the client and the server, so you won’t have to learn and shuffle with multiple languages and environments.\nSo much power at your disposal… imagine what you could do.\nWith this course you will learn all that you need to start creating your own cutting-edge web apps with Meteor and React. The course is project based.Thus, you will learn how to create a full functional app, a polling app, from start to finish.\nThis is what you will learn:\nEasy to follow and hands on web application development with Meteor and React\nHow to use Meteor.js to create the back-end and frontend for your application\nHow to build your user interfaces with React\nHow to create customized views to manage user accounts (register, login, logout, etc)\nHow to save, edit and get data from your MongoDB.\nHow to pass data from your database to your React components\nHow to install and use Meteor specific packages (via Atmosphere.js) and npm\nHow to create routes with FlowRouter\nHow to handle pagination\nHow to create a responsive navbar from scratch\nHow to generate fake data to test your application and setup your design\nHow to create alerts and and notifications\nHow to create collections and local collections\nHow to filter data\nHow to create responsive designs with Stylus and Flexbox\nAnd much more\nAt the end of the course, you will have a complete, ready-to-launch polling web app that looks great on any computer, tablet and smartphone.\nThe course includes a ES6 Primer and a React Primer as well, in case you are new to both of them.\nDon't forget: if you don't get value from this course, you get 100% of your money back within 30 days. There is absolutely no risk for you.\nWhat are the requirements?\nBasic JavaScript knowledge (variables, loops, and basic functions)\nSome knowledge of React, although the React Primer provided should be enough to understand and follow the course.\nA browser and text editor. You don’t need to buy any software\nAny computer will do — Windows, OSX or Linux\nWhat else will you get?\nA friendly informal community to support you along the way\nPersonal contact with me, the course instructor,\nLifetime access to course materials with free updates. No monthly subscription. Learn at your own pace, whenever you want.\nAccess to the course code on GitHub\nWhat is the target audience?\nAnyone wanting to learn how to build web apps\nAnyone wanting to make a living (or side-income) from web app development\nPeople that want to take their idea for a (real-time) web app and make it a reality\nEntrepreneurs that want to launch their web app ideas",
      "target_audience": [
        "Anyone wanting to learn how to build web and mobile apps",
        "Anyone wanting to create from prototypes to full feature web apps, to make their ideas a reality",
        "People wanting to be able to be full stack JavaScript developers",
        "People wanting to make a living or a side-income from developing web apps"
      ]
    },
    {
      "title": "Richard Stibbard's \"Practical MySQL\"",
      "url": "https://www.udemy.com/course/richard-stibbard-practical-mysql/",
      "bio": "All the MySQL you need to get you going with working with the database behind a dynamic website.",
      "objectives": [
        "Most MySQL queries and built-in functions",
        "MySQL on the command line in Windows",
        "Relational database design - what it is and why we need it",
        "Customisation with user-defined functions and views",
        "Automation with stored procedures and triggers",
        "Connecting to MySQL using PHP/PDO",
        "MySQL queries in PHP with prepared statements and named parameters",
        "Building PHP CRUD (Create-Read-Update-Delete) interfaces to run in the browser"
      ],
      "course_content": {
        "Preliminaries": [
          "Download the Working Files",
          "00-01 System requirements",
          "00-02 Introduction"
        ],
        "MySQL Queries and Built-in Functions": [
          "01-01 Create database, create table",
          "01-02 Insert data",
          "01-03 Coding style and convention",
          "01-04 Import data from SQL file",
          "01-05 Select all records from a table, order and limit results",
          "01-06 Select records matching search criteria",
          "01-07 Revision - Create new table and insert data with SQL query",
          "01-08 Numerical comparison operators",
          "01-09 MySQL aggregate functions",
          "01-10 MySQL ROUND function",
          "01-11 MySQL string functions",
          "01-12 MySQL aliases",
          "01-13 Functions within functions",
          "01-14 Update existing records",
          "01-15 Update part of existing records",
          "01-16 Alter table structure - Add columns",
          "01-17 Alter table structure - Change datatype",
          "01-18 Export data to SQL file",
          "01-19 Delete selected records",
          "01-20 Delete (drop) columns",
          "01-21 Delete all records from a table",
          "01-22 Delete (drop) table and database"
        ],
        "Users and Privileges": [
          "02-01 Create new MySQL user and assign privileges - localhost",
          "02-02 Create new MySQL user and assign privileges - cPanel"
        ],
        "MySQL on the Command Line": [
          "03-01 Connecting to MySQL at the Windows Command Prompt",
          "03-02 Revision - MySQL queries on the command line",
          "03-03 Import and Export Data on the MySQL Command Line",
          "03-04 Automation of database maintenance tasks in cPanel"
        ],
        "Relational Database Design": [
          "04-01 The problem with flat files",
          "04-02 The solution - linking tables",
          "04-03 Assignment 1 - Create linking sales table",
          "04-04 Solution to Assignment 1 - Linking sales table",
          "04-05 Assignment 2 - Insert data into sales table",
          "04-06 Solution to Assignment 2 - Insert sales data",
          "04-07 Selecting matching records from multiple tables with WHERE ... AND ,..",
          "04-08 Selecting matching records from multiple tables with INNER JOIN",
          "04-09 JOIN query syntax with table aliases",
          "04-10 Selecting matching records with IN",
          "04-11 Creating relationships between tables Primary Key/Foreign Key Constraints",
          "04-12 Assignment 3 - Create constraint between sales and items tables",
          "04-13 Solution to Assignment 3 - Sales items item_id constraint",
          "04-14 Constraint action SET NULL",
          "04-15 Constraint action RESTRICT or NO ACTION",
          "04-16 Set constraint when creating table"
        ],
        "Stored Procedures": [
          "05-01 Introduction to MySQL stored procedures",
          "05-02 Create MySQL stored procedure in SQL input box",
          "05-03 Security settings for stored procedures",
          "05-04 IN parameters in stored procedures",
          "05-05 SQL wildcards in stored procedures",
          "05-06 OUT parameters in stored procedures",
          "05-07 INOUT parameters in stored procedures",
          "05-08 Assignment 4 - Insert, update and delete records in stored procedures",
          "05-09 Solutions to Assignment 4 - Insert",
          "05-10 Solutions to assignment 4 - Update",
          "05-11 Solutions to Assignment 4 - Delete"
        ],
        "Automation with MySQL Triggers": [
          "06-01 Introduction to MySQL triggers",
          "06-02 Trigger after insert",
          "06-03 Assignment 5 - Trigger after delete",
          "06-04 Solution to Assignment 5"
        ],
        "User-defined Functions": [
          "07-01 Introduction to user-defined functions",
          "07-02 Assignment 6 - Create a User-Defined Function",
          "07-03 Solution to Assignment 6 - Create a user-defined function"
        ],
        "MySQL Views": [
          "08-01-Introduction to MySQL Views",
          "08-02 Assignment 7 - Create view to display price with tax",
          "08-03 Solution to Assignment 7 – Create view to display price with tax",
          "08-04 Create view in dialog box"
        ],
        "Automation with MySQL Events": [
          "09-01 Introduction to events",
          "09-02 Events on the command line",
          "09-03 Assignment 8 - Create an event on the command line",
          "09-04 Solution to Assignment 8 - Create an event on the command line"
        ]
      },
      "requirements": [
        "No previous knowledge of MySQL required",
        "You will need reasonable knowledge of how to work on a PC running Windows",
        "A browser and an internet connection",
        "You will need to have permission/the ability to download software onto your PC",
        "Some prior experience of web development will be an asset but is not required"
      ],
      "description": "ONLY 12 HOURS TO GO BEFORE THIS COURSE IS MADE PRIVATE - SO ENROL NOW TO LEARN MySQL AT THIS INCREDIBLE PRICE!\n\nMySQL is the most widely used open source database system in the world, making a thorough knowledge of MySQL a vital skill for every web developer.\nThis is a highly practical course, which concentrates on teaching you exactly what you need to know, first to get up and running and then to master MySQL in action. The course moves from simple queries to much more advanced topics.\nTopics include:\nMySQL in phpMyAdmin, on the command line, and in PHP scripts\nMySQL queries\nbuilt-in MySQL functions\nusers and privileges\nrelational database design\npreserving data integrity with constraints\nautomation with stored procedures, triggers and scheduled events\ncustomisation with user-defined functions (UDFs) and views\nMySQL in PHP with PDO and named parameters\na variety of create-read-update-delete (CRUD) projects in PHP\nThe course is flexibly designed, with Working Files which make it suitable for learners with a range of existing knowledge or for complete beginners – if you do not need to start at the beginning of the course then it is easy to look through the code and dive straight in at any point to speed things up.\nONLY 12 HOURS TO GO BEFORE THIS COURSE IS MADE PRIVATE - SO ENROL NOW TO LEARN MySQL AT THIS INCREDIBLE PRICE!",
      "target_audience": [
        "Anyone who wants to learn to code dynamic websites using MySQL",
        "Back-end web developers wishing to deepen an existing knowledge of MySQL",
        "Anyone interested in starting out in a new career in web development"
      ]
    },
    {
      "title": "Vue 3, Nuxt.js and Django: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/vue-django-advanced/",
      "bio": "VueJS with Typescript, Nuxt.js, Vuetify, Composition API, DRF 3.1, Docker, Redis, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "Use Docker",
        "Login with HttpOnly Cookies and Multiple user Scopes",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "VueJS with Typescript",
        "NuxtJS with Typescript",
        "Use Vuetify",
        "Use Composition API and Options API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django Admin": [
          "Setup",
          "Docker",
          "Models",
          "Database",
          "Wait for db",
          "User Manager",
          "Admin Authentication Endpoints",
          "Common App",
          "Register",
          "Login",
          "Jwt",
          "Static Method",
          "Authenticated User",
          "Logout",
          "Profile",
          "Admin Endpoints",
          "Ambassadors",
          "Faker",
          "Products",
          "Links",
          "Orders"
        ],
        "Django Ambassadors": [
          "Ambassador Authentication Endpoints",
          "Setup",
          "Scopes",
          "Revenue",
          "Ambassador Endpoints",
          "Products",
          "Redis",
          "Searching Products",
          "Sorting Products",
          "Paginating Products",
          "Clearing the cache",
          "Creating Links",
          "Stats",
          "Rankings",
          "Redis Sorted Sets"
        ],
        "Django Checkout": [
          "Endpoints",
          "Getting Link Data",
          "Creating Orders",
          "Atomic Transactions",
          "Stripe",
          "Sending Emails"
        ],
        "Vuetify Admin": [
          "Setup",
          "Template",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Users",
          "Vuetify",
          "Pagination",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Orders",
          "Profile",
          "Vuex"
        ],
        "Vue Ambassador": [
          "Setup",
          "Template",
          "Navigation",
          "Header",
          "Watchers",
          "Route",
          "Reactive",
          "Stats",
          "Rankings",
          "Products",
          "Backend Searching",
          "Frontend Searching",
          "Backend Sorting",
          "Frontend Sorting",
          "Backend Lazy Loading",
          "Frontend Lazy Loading",
          "Selecting Products",
          "Generating Links"
        ],
        "Nuxt Checkout": [
          "Setup",
          "Template",
          "Routing",
          "Server-Side Rendering",
          "Products",
          "Submitting the Form",
          "Stripe"
        ]
      },
      "requirements": [
        "Good understanding of VueJS",
        "Good understanding of Python and Django"
      ],
      "description": "Learn how to create an Ambassador App using VueJS, Nuxt.js and Django Rest Framework. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Django API.\nIn Django you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nLogin with Scopes\nUse Redis\nUse Stripe\nSending Emails\nFilter Cached products\nIn this Vue you will learn:\nUse Vue with Typescript\nUse Nuxt.js with Typescript\nUse Vuex\nHow to use Composition API and Options API\nUse Vuetify\nCreate public and private routes\nPay with Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "ChatGPT for Java Developers: Boost Your Productivity with AI",
      "url": "https://www.udemy.com/course/chatgpt-for-java-developers/",
      "bio": "Use ChatGPT as a Java developer to code faster, debug smarter, save time, boost productivity, & master AI-powered coding",
      "objectives": [
        "What is ChatGPT and How it Works",
        "ChatGPT Free vs Paid",
        "ChatGPT Best Practices",
        "ChatGPT Common Mistakes to Avoid",
        "ChatGPT Use Cases and Advanced Features",
        "Generating Code with ChatGPT",
        "Automate Your Daily Tasks with ChatGPT",
        "Code Refactoring with ChatGPT",
        "Writing Unit Tests with ChatGPT",
        "Explaining Complex Code with ChatGPT",
        "Generating Documentation with ChatGPT",
        "Debugging Code with ChatGPT",
        "Creating Regex Patterns with ChatGPT",
        "How to use ChatGPT in Real-Time Java Spring Boot Projects",
        "How to Use ChatGPT to Build REST APIs",
        "How to Use ChatGPT to Write JUnit Tests (Unit testing and Integration Testing)",
        "Build Chatbot Using Spring Boot, React JS, and OpenAI ChatGPT API"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "AI Fundamentals - Good to know": [
          "What is artificial intelligence?",
          "What is Generative AI?",
          "Artificial Intelligence vs Generative AI?",
          "AI vs Machine Learning",
          "AI in Software Development",
          "How to Make Money Using AI",
          "Team Meeting: AI Fundamentals for Java Developers"
        ],
        "ChatGPT Fundamentals": [
          "What is ChatGPT?",
          "Setting Up Your ChatGPT Account",
          "How ChatGPT Works?",
          "How Was ChatGPT Trained",
          "Understanding ChatGPT’s Strengths and Limitations",
          "Understanding User, Assistant, and System Roles in ChatGPT",
          "ChatGPT Free vs Paid, Worth to Upgrade?",
          "Tips or Best Practices for Writing Prompts",
          "Team Meeting: ChatGPT Fundamentals for Java Developers"
        ],
        "ChatGPT for Java Developers": [
          "Generating Code with ChatGPT",
          "Code Refactoring with ChatGPT",
          "Writing Unit Tests with ChatGPT",
          "Explaining Complex Code with ChatGPT",
          "Debugging Code with ChatGPT",
          "Automate Your Daily Tasks with ChatGPT",
          "Creating Regex Patterns with ChatGPT",
          "Team Meeting: Using ChatGPT in Java Development"
        ],
        "Use ChatGPT to Quickly Generate Code for Real-Time Project Development": [
          "Use ChatGPT to Build CRUD REST APIs using Spring Boot, Spring Data JPA & MySQL",
          "Use ChatGPT to Create Rest Client using WebClient class to Test CRUD REST APIs",
          "Use ChatGPT to Implement Exception Handling in Spring Boot Application",
          "Use ChatGPT to Generate Swagger-Style REST API Documentation in Spring Boot App",
          "Team Meeting: Using ChatGPT for Real-Time Spring Boot Project Development",
          "Download Source Code of this Section"
        ],
        "Use ChatGPT to Quickly Generate Code for JUnit Test Cases in Real-Time Project": [
          "Write a JUnit Test Cases for Service Layer in Spring Boot Application",
          "Writing JUnit Tests for Controller Layer in Spring Boot Application",
          "Writing Integration JUnit Tests for Spring Boot REST APIs",
          "Team Meeting: Using ChatGPT to Generate JUnit Test Cases in Real-Time Projects",
          "Download Source Code of this Section"
        ],
        "Build Chatbot Using Spring Boot, React JS, and OpenAI ChatGPT API": [
          "Build Chatbot - Overview",
          "Build Chatbot - PART 1",
          "Build Chatbot - PART 2",
          "Build Chatbot - PART 3",
          "Build Chatbot - PART 4",
          "Download Source Code of this Section"
        ],
        "ChatGPT Advanced Features": [
          "10 Mistakes You Should Avoid in ChatGPT",
          "How to Create Custom GPTs and Build Your Own ChatGPT",
          "Scheduled Tasks in ChatGPT"
        ],
        "Other ChatGPT Use Cases": [
          "How ChatGPT Acts as a Linux Terminal",
          "How ChatGPT Can Act as a JavaScript Console",
          "How ChatGPT Can Act as a Language Translator",
          "How ChatGPT Can Act as a Content Writer",
          "How ChatGPT Can Act as a Math Teacher",
          "How to Make Money using ChatGPT - 5 Smart Ways",
          "How to Use ChatGPT to Write an Essay in Minutes",
          "How to Use ChatGPT to Create a Flowchart",
          "How to Generate Ghibli Art in ChatGPT – Step-by-Step Tutorial"
        ],
        "Quizzes - Test Yourself": [
          "ChatGPT Quiz",
          "ChatGPT Quiz for Java Developers - 10 Multiple Choice Questions"
        ]
      },
      "requirements": [
        "No ChatGPT experience is need. I will teach how to ChatGPT from the scratch",
        "Java, Spring Boot, React JS and Full-Stack Development Experience"
      ],
      "description": "This course, \"ChatGPT for Java Developers: Boost Your Productivity with AI,\" is designed specifically for experienced Java developers and full-stack Java professionals who want to save time and work more efficiently by leveraging ChatGPT. Whether you are coding, debugging, writing tests, or building REST APIs, ChatGPT can simplify your work and improve productivity.\n\n\nWhat is ChatGPT?\nChatGPT is an advanced AI tool created by OpenAI that generates responses in a conversational, human-like manner. It can help developers, students, and professionals by simplifying tasks such as answering questions, generating ideas, and solving problems. For Java developers, ChatGPT becomes a smart coding assistant capable of generating code, debugging, and explaining complex programming concepts in simple terms. By providing clear and well-structured prompts, you can use ChatGPT to solve complex problems and significantly reduce your workload.\n\n\nHow ChatGPT Can Help Java Developers?\nChatGPT can assist Java developers in many ways, including:\nCode Generation: Quickly generate Java code for various use cases, from simple functions to advanced algorithms.\nDebugging: Identify and fix issues in your code with ChatGPT’s step-by-step explanations.\nUnit Test Writing: Automate the creation of unit tests to ensure your code’s functionality.\nDocumentation: Generate clear and concise documentation for your projects.\nTask Automation: Automate common coding tasks like creating regex patterns or boilerplate code.\nExplaining Code: Get ChatGPT to explain complex Java code in simple terms, making it easier to share with your team.\nLearning new programming languages: ChatGPT can help you learn new programming languages or concepts in a simple way.\n\n\nWhat You Will Learn\nThis course covers everything you need to know to use ChatGPT effectively as a Java developer, including:\nUnderstanding ChatGPT: Learn what ChatGPT is and how it can enhance your development process.\nFree vs. Paid Plans: Understand the differences between ChatGPT’s free and paid versions to choose the right one for your needs.\nBest Practices: Master the art of crafting effective prompts to get the best results from ChatGPT.\nCommon Mistakes to Avoid: Learn what not to do when using ChatGPT to avoid errors and inefficiencies.\nDifferent use cases: How ChatGPT can act as a Linux Terminal, JavaScript Console, Math Teacher, Language Translator, Content Writer, and more.\n\n\nPractical Applications\nThis course focuses on real-world use cases that experienced Java developers will find valuable:\nCode Generation: Learn how to use ChatGPT to quickly generate reusable and efficient Java code.\nCode Refactoring: Use ChatGPT to improve the structure and readability of your existing code.\nWriting Unit Tests: Automate unit test creation for your Java applications.\nDebugging: Solve coding issues with ChatGPT’s intelligent debugging suggestions.\nDocumentation: Create professional project documentation in seconds.\nRegex Patterns: Generate complex regex patterns effortlessly.\nHow to Use ChatGPT in Real-Time Project Development\nBuilding REST APIs: Use ChatGPT to create Spring Boot REST APIs with minimal effort.\nException Handling: Use ChatGPT for Implementing Exception Handling in the Spring Boot Application.\nSwagger-Style REST API Documentation: Use ChatGPT to generate Swagger-Style REST API Documentation in Spring Boot Application\nUnit Testing and Integration Testing: Automate the generation of test cases for Spring Boot REST APIs - Unit testing for the Service Layer and Controller Layer. Integration testing REST APIs.\nReal-Time Project Assistance: Learn how ChatGPT can assist in real time while working on Spring Boot projects.\nFixing Issues: Use ChatGPT to fix the Java Spring Boot Application issues.\n\n\nBuild a Chatbot Using Spring Boot, React JS, and OpenAI ChatGPT API\nHow to set up a Spring Boot backend to interact with OpenAI’s API.\nHow to build a REST API using RestClient to connect with OpenAI.\nHow to create a React JS frontend using Bootstrap and Axios.\nHow to connect React JS with the Spring Boot API to send and receive messages.\nLearn how to integrate OpenAI’s ChatGPT API with a Spring Boot backend and React JS frontend to build a fully functional AI-powered chatbot.\n\n\nTools and Technologies Used\nChatGPT Plus (Paid version)\nJava 23\nSpring Boot 3.4+\nSpring Data JPA\nMySQL Database\nSwagger\nPostman\nMaven\nIntelliJ IDEA",
      "target_audience": [
        "This course is for experienced Java Developer and Full-Stack Java Developer who want to use ChatGPT to boost productivity and save time."
      ]
    },
    {
      "title": "Learn JavaScript Dynamic Interactive Projects for Beginners",
      "url": "https://www.udemy.com/course/learn-javascript-dynamic-interactive-projects-for-beginners/",
      "bio": "Bring HTML code to life with JavaScript. Access and update your web code with JavaScript through the DOM",
      "objectives": [
        "access the DOM Document Object Model with JavaScript",
        "create Dynamic Content",
        "create user interaction with your HTML code",
        "Create dynamic lists",
        "use JavaScript to add effects, update HTML and more",
        "create custom applications"
      ],
      "course_content": {
        "Dynamic Interactive JavaScript Course overview": [
          "JavaScript DOM course intro",
          "Course Web Dev Resources",
          "JavaScript simple code dialogs",
          "JavaScript DOM events"
        ],
        "Functions": [
          "JavaScript Introduction to Functions",
          "JavaScript function declarations vs function expressions",
          "JavaScript function return values",
          "JavaScript variables Global values",
          "Learn more about Functions",
          "Functions",
          "JavaScript User input data this to code"
        ],
        "DOM Document Object Model": [
          "JavaScript Introduction to the DOM",
          "JavaScript DOM",
          "JavaScript getElementById",
          "JavaScript values addEventListener",
          "JavaScript getElementsByTagName",
          "JavaScript Arrays",
          "JavaScript Objects",
          "JavaScript Loops",
          "JavaScript get text content output to other part of HTML",
          "Source code for current projects",
          "JavaScript Math",
          "JavaScript Dynamic Styling using the DOM",
          "JavaScript Random color on hover project code snippet",
          "Project 1 Source Code Random color on Hover"
        ],
        "DOM Document Object Model working with the DOM": [
          "JavaScript DOM Upcoming project",
          "JavaScript DOM working with Attributes",
          "JavaScript Attributes of Images",
          "JavaScript Create and Append",
          "JavaScript Add text to new element",
          "JavaScript DOM project Shopping List part 1",
          "JavaScript DOM project Shopping List part 2",
          "DOM shopping List source code",
          "JavaScript DOM project create dynamic page updater",
          "JavaScript DOM project dynamic updates part 2",
          "JavaScript Dynamic Style Object Properties",
          "Style Object Properties Source Code"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "basic understanding of HTML CSS",
        "desire to learn"
      ],
      "description": "Bring your web pages to life with user Interaction. Create Dynamic responses using JavaScript. Web visitors are expecting more, and that's interaction with the content.\nJavaScript opens the doors to being able to create amazing effects and being able to deliver that expected experience.\nI'm a JavaScript developer, having worked on and created hundreds of websites. I'm going to show you how to use JavaScript to access your web page content and make it dynamic.\nThis course is designed for beginners who want to see real world examples. I show you how you can use JavaScript and your imagination to make amazing things online. All of the source code is included. I also share resources that are used in the course. Tips, and coding methods are also included.\nIn this course you will learn to make three projects from scratch, using JavaScript to create useful code snippets that can be reused in the real world.\nTopics that are covered include Functions. Introduction to functions, how JavaScript compiles your code and the difference between declaration functions and expressions. Functions are so important to understand when it comes to creating interaction. They save time and can accelerate your development process. Using user input and accessing it in JavaScript. Once you get content into JavaScript you can then apply your logic to output endless possibilities.\nThe DOM, document object model is available and accessible using JavaScript. The DOM opens up full access to anything that the browser is able to present. Learning how to use the DOM brings your JavaScript to the next level. Accessing the DOM makes it easy to do. Learn how to access various elements, any piece of content within your webpage. Event listeners are exactly what you need to add that user interaction. There are many options with event listeners, and when used with the values you get from the web content you can really bring your content to life.\nWe cover how to list out objects, arrays and loops. How to update HTML and Text on your webpage dynamically. Using Math in JavaScript allows you to make calculations and even create random values.\nNext we show you how to access your HTML styling and manipulate it. Bring CSS styling together with JavaScript, changing the look of your web content customized for each user. Add cool effects for your users.\nDOM and accessing HTML element attributes. In this project understanding how to dynamically use JavaScript to create elements in HTML, update attribute content, and .append new elements into your HTML code. We teach you how to create a dynamic shopping list, where you can add items and even click to remove those newly created elements.",
      "target_audience": [
        "anyone who wants to learn more about JavaScript",
        "coding beginners learning JavaScript",
        "web developers who want to learn about the DOM",
        "Anyone who wants to learn about creating web pages",
        "New web experience developers"
      ]
    },
    {
      "title": "Advance CSS Shapes: Next Generation Websites (2022 Edition)",
      "url": "https://www.udemy.com/course/mastering-native-css-shapes/",
      "bio": "Learn to harness the power of Native CSS Shapes to create beautiful modern web pages. it's future of web page design",
      "objectives": [
        "Build modern stunning web pages using Native CSS Shapes",
        "Follow the future of web design landscape in present"
      ],
      "course_content": {
        "Getting Started with CSS Shapes": [
          "Understanding native CSS Shapes",
          "The Reference box in CSS Shapes",
          "Understanding shape-outside property",
          "Understanding clip-path/masking property"
        ],
        "Understanding Reference Box Settings or keywords": [
          "Understanding margin box settings",
          "Understanding border box settings",
          "Understanding padding box settings",
          "Understanding content box settings"
        ],
        "Understanding CSS Shape-Outside Functions in Depth": [
          "Working with circle() function",
          "Working reference box coordinates, farthest-side & radius",
          "Fast forwarded daily life use of circle() function",
          "Working with ellipse() function",
          "Working with inset() function",
          "Working with polygon() function",
          "Working with beautiful url() function"
        ],
        "Building Responsive Juicy grapes website with CSS Shapes": [
          "Introduction: What you will learn & build",
          "Creating beautiful & clean website layout",
          "Improving styling of our Juicy grapes website",
          "Making content flow around our shapes",
          "Making our webpage responsive"
        ],
        "CSS Shapes Tools & Resources": [
          "Using CSS shape editing tool",
          "Using clippy polygon generator tool",
          "Using poly draw tool",
          "Browser supports & polyfills"
        ],
        "Building more complex shapes & Animating it.": [
          "Animating your basic shapes",
          "Animating your polygons shapes",
          "Animating your shapes created by url() function"
        ],
        "Let Your imagination fly : Build Awesome page design with CSS Sahpes": [
          "Creating Awesome webpage for girl with umbrella",
          "Blue Parrot in love web page using CSS Shapes"
        ],
        "Final Words": [
          "Wrap Up"
        ]
      },
      "requirements": [
        "You need a modern web browser (Chrome or Safari) and a code editor.",
        "You should be able to learn even if you are beginner to front web design."
      ],
      "description": "---------------------Top Reviews ★★★★★----------------------\nThe content is fantastic...ABSOLUTELY FANTASTIC!!!!! AWESOME!!!!! Had no idea this was possible in CSS. Has changed how I think about CSS. Would love to see some of his other websites--no doubt he is implementing his creativeness to leverage CSS shapes on those as well. THANK YOU RAHUL! - By Tami S.\nA very clear and well-explained course on CSS Shapes covers everything that can be covered with excellent knowledge. Well done Rahul on a very enjoyable course. - By Neil B.\nThis is an excellent course. The instructor is very optimistic, and he provides informative resources for the course. -By Andres V.\nand more...\n--------------------------------------------------------------------\nHi there,\nThis course is the only course on Native CSS Shapes on udemy at the time of this launch. In this course, you will learn to build the most awesome delightful and clean web page layouts with amazing CSS Shapes. which is the future of web design.\nYou will learn all the shape-outside property functions.\ncircle()\nellipse()\ninset()\npolygon()\nurl()\nIn order to create stunning, most beautiful web pages with real-world examples. you will learn all the possible css shapes keywords and settings in this course. this course packed with lots and lots of code examples.\nExercise files are included in this course.\nAfter completing this course you will be fully confident to work with CSS Shapes and build modern web pages.\nso let's get started!",
      "target_audience": [
        "Anyone who wants to learn the future of web design.",
        "Anyone who anyhow related to web programming or wants to be a web developer"
      ]
    },
    {
      "title": "Learn HTML & CSS By Building a Facebook Clone",
      "url": "https://www.udemy.com/course/learn-html-css-by-building-a-facebook-clone/",
      "bio": "Web Development For Those That Want To Learn Quick",
      "objectives": [
        "How to build a website from a given design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requirements"
        ],
        "HTML": [
          "what is html?",
          "what is an html tag?",
          "what do you need to get started?",
          "quick introduction to visual studio",
          "HTML Boilerplate",
          "text tags",
          "list tags",
          "image tags",
          "container tags",
          "anchor tags",
          "table tags",
          "html forms",
          "link and script tags",
          "branding elements"
        ],
        "CSS": [
          "what is css?",
          "3 ways to write css",
          "understand the syntax",
          "css properties",
          "unit sizes",
          "css selectors",
          "style text",
          "box model",
          "box sizing",
          "display",
          "position elements",
          "mid advice"
        ],
        "Design to HTML & CSS": [
          "Breakdown the design",
          "lets build the header",
          "getting icons",
          "setup the css files",
          "styling the header part 1",
          "styling the header part 2",
          "lets build the top area",
          "styling the top area",
          "content area",
          "styling the side column",
          "build the submenu",
          "coding the post box",
          "finalizing the post box"
        ]
      },
      "requirements": [
        "A computer Mac OS X, Windows, or Linux",
        "A Text Editor like Visual Studio Code, Atom, Brackets, or Notepad++"
      ],
      "description": "Welcome to the number one course to learn HTML and CSS.\nI go over the skills that you need to be ready to start applying for a position as a front end developer\nIn this course you will learn the following:\nHTML\nCSS\nConvert PSD or any design to HTML and CSS",
      "target_audience": [
        "Anyone who wants to get hired as Front End Developer"
      ]
    },
    {
      "title": "Create your Own Cryptocurrency POW/POS | Scrypt, X11",
      "url": "https://www.udemy.com/course/create-your-own-cryptocurrency-pow-pos/",
      "bio": "Learn about blockchain and how to create your own cryptocurrency in just 1 hour",
      "objectives": [
        "Build a complete blockchain-powered POW/POS cryptocurrency",
        "Define coin Supply and Premine %",
        "Changing consensus and network parameters",
        "Compiling Daemon and Windows wallets",
        "Learn how to setup Node and your own network",
        "Learn how to install and configure blockchain explorer"
      ],
      "course_content": {
        "Creating your own cryptocurrency": [
          "Intoduction",
          "Preparation - Setting up servers and installing all prerequisite",
          "Change coins parameters, network and create new cryptocurrency",
          "Setup Node for new Cryptocurrency",
          "Compile Windows wallet",
          "Cryptocurrency Mining",
          "Install and Configure Blockchain Explorer"
        ]
      },
      "requirements": [
        "Just some high school mathematics level",
        "To take and complete practical part of the course basic UNIX knowledge is required"
      ],
      "description": "The course will let you create your own cryptocurrency.\nIf you have already started learning about blockchain development and cryptocurrencies, or are simply familiar with the subject and want to practice, this course is exactly what you need.\nThis guide will help you step by step on how to create your own cryptocurrency and this course have all topics covered you need to run a cryptocurrency like cryptocurrency creation, node setup,blockchain explorer.\nWhy this course specifically?\nThis course will teach you how to build your own blockchain and cryptocurrency with step by step guide. It’s no denying that blockchain based systems have taken the tech and financial worlds by storm. A single bitcoin was worth $20,000 at one point in December 2017.And yet the blockchain industry is still so young.\nSo it’s time to create your own unique blockchain project. Take this course to gain the foundation to do so. Other courses may teach how the blockchain works, its main concepts, or how to invest in a cryptocurrency. But this is the best resource for you to learn how to make a cryptocurrency, and apply your own unique ideas on top of that.\nIn this course, you will:\nBuild a POW/POS Cryptocurrency. Create your own POW/POS cryptocurrency on scrypt or X11 based algorithms.\nCompile Daemon and setup node. Compile daemon for you own cryptocurrency and setup node to run it fully functional.\nInstall and configure blockchain explorer. Install and configure iquidus explorer for your cryptocurrency to view transaction.\n\n\nQuestion(s) you may have:\n\n\nAfter taking this course you will have a complete knowledge of how cryptocurrency work and how to create them. You will be able to create your own cryptocurrency. This course include almost everything you need to run a cryptocurrency.\nUltimately, this course is a learning experience like no other. It’s an opportunity to become a pioneer in such a young and promising field!\nSo, are you going to let this golden chance pass you by? Heck no! Join the course, and let’s get starting coding a full-on blockchain and cryptocurrency!",
      "target_audience": [
        "Any Blockchain, Bitcoin & Cryptos enthusiast",
        "Anyone interested in building their own Blockchain or Cryptocurrency",
        "Anyone who is interested in starting their career in Blockchain",
        "Anyone interested in Blockchain and its applications"
      ]
    },
    {
      "title": "100+ WordPress Code Snippets for Themes & Plugins for 2024",
      "url": "https://www.udemy.com/course/wordpress-developer-cookbook/",
      "bio": "Save time & effort coding WordPress themes & plugins with these already typed code snippets with explanations.",
      "objectives": [
        "save time by adding existing WordPress code and API snippets into your plugins and themes",
        "manipulate content from posts and pages",
        "create your own custom post types complete with their own taxonomies and custom fields",
        "displaying random posts on the fly",
        "white label WordPress and replace the WP logo and replace it with your own",
        "change the popular plugin Contact Form 7 and make it do amazing things that are not available out of the box"
      ],
      "course_content": {
        "Introduction and Green Screen Videos From The Instructor": [
          "Welcome. Find out the best way to use this course.",
          "Green Screen Video: How to Add All The Code From This Course."
        ],
        "General WP Code Snippets": [
          "WordPress Code Snippet: Get a Flex Date",
          "WordPress Code Snippet: Convert Any WordPress Site to a WP Multisite",
          "WordPress Code Snippet: Create 10 New Menu Locations When Building A Website",
          "WordPress Code Snippet: Convert Any Theme To Be WooCommerce Compatible",
          "WordPress Code Snippet: Automatically Send Email Notification When Post Is Saved",
          "WordPress Code Snippet: Woocommerce - Change the Short Description for Products"
        ],
        "Code Snippets For User management, User Interactions and More": [
          "Fun WordPress Code Snippet: Rename All Of The User Roles",
          "WordPress Code Snippet: Automatically Log In Any User",
          "WordPress Code Snippet: Show a list of all users by name or email addresses",
          "WordPress Code Snippet: Display Gravatars of All Users",
          "WordPress Code Snippet: Greet Users On Any Post or Page with a Simple Shortcode",
          "WordPress Code Snippet: Customize the Default \"Enter Title Here\" Placeholder"
        ],
        "Code Snippets For Admin / Administrative Features": [
          "WordPress Code Snippet: Quickly See The Status of a Post By Changing Its Color",
          "WordPress Code Snippet: Change the WordPress Logo on the Admin Login Form",
          "WordPress Code Snippet: Make people log in or hide the content for one post",
          "WordPress Code Snippet: Add Social Media Links To Admin Bar",
          "WordPress Code Snippet: Greet Administrative Users As Soon As They Log In",
          "WordPress Code Snippet: Remove Blogging Rights From One Or More Bloggers",
          "WordPress Code Snippet: Remove WordPress Logo From Admin Bar For White Labeling",
          "WordPress Code Snippet: Hide The Admin Bar On The Front End",
          "WordPress Code Snippet: Replace Admin Logo for White Labeling",
          "WordPress Code Snippet: Make the Admin Log Page Stop SHAKING!",
          "WordPress Code Snippet: Add Javascript and CSS to Any WordPress Theme or Plugin"
        ],
        "Code Snippets To Create and Enhance Custom Post Types": [
          "Why Do We Need Our Own Code For Custom Post Types?",
          "Contact Form 7 WordPress Code Snippet: Simple Custom Post Type",
          "WordPress Code Snippet: More Complex Locations Custom Post Type with Custom Tax.",
          "WordPress Code Snippet: Even More Complex Custom Post Type With Its Own Fields",
          "WordPress Code Snippet: Automatically Insert A Post From Any Custom Post Type",
          "PROJECT: Create The Menu Items Custom Post Type"
        ],
        "Code Snippets for the Contact Form 7 Plugin": [
          "Contact Form 7 WordPress Code Snippet: Add All Fields Before Sending Email",
          "Contact Form 7 WordPress Code Snippet: Capture Sender's IP Address & In Messages",
          "Contact Form 7 WordPress Code Snippet:Prevent Form Submissions From Certain Data",
          "Contact Form 7 WordPress Code Snippet: Change Recipient w/ On Drop-Down Menus",
          "Check Out the Section Below on Contact Form 7 Recipes"
        ],
        "Code Snippets for Quick Post Content Loops": [
          "WordPress Code Snippet: Display a Random Post",
          "WordPress Code Snippet: Loop Through Custom Post Types",
          "WordPress Code Snippet: Display Random Post For Any Post, Page, Custom Post Type",
          "WordPress Code Snippet: Loop Through Posts, Pages, & Post Types by Category Name",
          "WordPress Code Snippet: Loop Through Posts By Specific Author ID"
        ],
        "New Code Snippets Tricks (Part 1)": [
          "WordPress Code Snippet: Social Media Customizer Section",
          "WordPress Code Snippet: Display Social Media Links From The Customizer Form Data",
          "WordPress Code Snippet: Change the Lyrics in the Hello Dolly Plugin",
          "WordPress Code Snippet: White Label the Hello Dolly Plugin",
          "WordPress Code Snippet: Display a Message On Popular Holidays at the Top",
          "WordPress Code Snippet: RSS Feed For Anybody Else's Blog",
          "WordPress Code Snippet: Add A Tag Cloud Anywhere",
          "WordPress Code Snippet: Tag Cloud as a Shortcode"
        ],
        "Code Snippets To Create a Very Lightweight Popup Box On Your Home Page": [
          "WordPress Code Snippet: Start with the CSS",
          "WordPress Code Snippet: Add the jQuery file",
          "WordPress Code Snippet: Add the wp_enqueue_script() hook to load the popup."
        ],
        "Code Snippets For Working with Blog Posts": [
          "WordPress Code Snippet: Quickly Delete Old Blog Posts With A Quick Menu Link",
          "WordPress Code Snippet: Import RSS Feed Items Into Blog Posts (Part 1)",
          "WordPress Code Snippet: Set The Post Category (importing Blog Posts Part 2)",
          "WordPress Code Snippet: Add a Featured Image (importing Blog Posts Part 3)"
        ]
      },
      "requirements": [
        "Some PHP",
        "Some WordPress development skills"
      ],
      "description": "This course helps any WordPress designer and developer save time by copying and pasting WordPress code into any theme or plugin. Video lectures explain how to customize the code to make them your own.\n\n\nThis course will constantly evolve with new \"code snippets\" on everything from:\nshortcodes\ncustom post types\nmanipulation of popular plugins including Contact Form 7\nthe customizer\ncreate widgets\nand more\nThis course is best for those who already know the basics of PHP, but if you are just getting into WordPress theme or plugin development, the code resources will help you add more powerful functionality to your already-existing code.\nIn this WordPress cookbook course, code recipes are already available for:\npost and page content manipulation\nautomatically creating new menu locations in themes\ncustom post types\ndisplaying random posts on the fly\nmanipulation of the contact form 7 plugin\nadding a popup to your home page\ngenerating a tag cloud from your posts or plugins\nprotecting your administrative back end\nMySQL hacks such as automatically deactivating and RE-activating plugins without manual clicks.\nand more\nPlease note: This course does not contain snippets for blocks or the Gutenberg system.  Snippets can be used for any WordPress installation version and the code snippets work in themes and plugins regardless of whether or not your WordPress site uses blocks.",
      "target_audience": [
        "PHP developers",
        "Both intermediate and advanced WordPress developers who would like to save time coding."
      ]
    },
    {
      "title": "Web Scraping with Python: Build Bots Like a Pro",
      "url": "https://www.udemy.com/course/mastering-web-scraping-using-python-the-complete-course/",
      "bio": "Master Web Scraping with Python: Beautiful Soup, Selenium, Requests, Playwright, Selectolax and More – Build Real-World",
      "objectives": [
        "Python Web Scraping and Web Development Technologies",
        "Data Finding Techniques to scrap data from the web",
        "Implementing Web Scraping in Python with BeautifulSoup",
        "Build a Python web scraper using Selectolax",
        "How to perform Python Web Scraping using Selenium",
        "How To Use Playwright For Web Scraping with Python",
        "General Best Practices To Follow When Conducting Web Scraping",
        "Advanced Web Scraping Topics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Python Web Scraping and Web Development Technologies": [
          "Python Web Scraping and Web Development Technologies"
        ],
        "Data Finding Techniques to scrap data from the web": [
          "Data Finding Techniques to scrap data from the web"
        ],
        "Implementing Web Scraping in Python with BeautifulSoup": [
          "Implementing Web Scraping in Python with BeautifulSoup"
        ],
        "Build a Python web scraper using Selectolax": [
          "Build a Python web scraper using Selectolax"
        ],
        "How to perform Python Web Scraping using Selenium": [
          "How to perform Python Web Scraping using Selenium"
        ],
        "How To Use Playwright For Web Scraping with Python": [
          "How To Use Playwright For Web Scraping with Python"
        ],
        "General Best Practices To Follow When Conducting Web Scraping": [
          "General Best Practices To Follow When Conducting Web Scraping"
        ],
        "Advanced Web Scraping Topics": [
          "Advanced Web Scraping Topics"
        ]
      },
      "requirements": [
        "Basic knowledge in Python",
        "Internet Access"
      ],
      "description": "Master Web Scraping with Python: A Complete Course with Downloadable Code Examples\nUnlock the power of web scraping and transform unstructured web data into valuable insights! This comprehensive course is your gateway to mastering web scraping with Python, combining in-depth theoretical explanations with hands-on practice through downloadable source code examples for every topic.\nWith a step-by-step approach, you'll explore powerful Python libraries and frameworks such as Beautiful Soup, Requests, Selenium, Selectolax, and Playwright. Whether you're a beginner or looking to advance your skills, this course is designed to take you from zero to hero in web scraping.\nWhy Choose This Course?\nPractical Focus: Every concept is paired with real-world, ready-to-use code examples you can download, practice, and adapt to your projects.\nComprehensive Theory: Gain a solid foundation with detailed explanations of web scraping concepts and techniques.\nHands-On Projects: Learn by doing! Each section includes practical projects that reinforce your skills.\nCutting-Edge Tools: Master modern web scraping tools and frameworks, ensuring you're up-to-date with industry standards.\nWhat You Will Learn:\nSetting Up Your Python Environment\nStep-by-step guide to install and prepare your tools.\nUnderstanding Web Development Technologies\nKey concepts of web technologies that make scraping possible.\nData Discovery and Extraction Techniques\nLearn how to locate and extract data effectively from any website.\nScraping with Beautiful Soup\nBuild your first scrapers and parse HTML data effortlessly.\nAdvanced Scraping with Selectolax\nExplore this powerful, fast-parsing library.\nDynamic Content Scraping with Selenium\nAutomate and scrape content from JavaScript-heavy websites.\nHigh-Performance Scraping with Playwright\nLearn modern methods for scraping at scale.\nBest Practices in Web Scraping\nEthical scraping, avoiding bans, and optimizing performance.\nAdvanced Topics\nTackle challenges like CAPTCHA solving, handling AJAX, and more.\nBy the end of this course, you'll have the confidence and skills to build robust web scrapers for any project, along with a portfolio of ready-made code examples to kickstart your journey.\nEnroll now and become a web scraping expert!",
      "target_audience": [
        "Developers who need to scrap data from websites or automate web-based tasks",
        "People wishing to create their own web scrapers"
      ]
    },
    {
      "title": "Javascript from Basic to Advanced",
      "url": "https://www.udemy.com/course/javascript-from-basic-to-advanced/",
      "bio": "Learn Javascript - Every module feature demonstrated with real-time examples",
      "objectives": [
        "Understand the source code of popular Javascript frameworks",
        "Build your own Javascript framework or library",
        "Avoid common pitfalls and mistakes other Javascript coders make"
      ],
      "course_content": {
        "JavaScript-Intoduction and First Program": [
          "Introduction First Program"
        ],
        "JavaScript-Language Basics": [
          "Variables and Data Types",
          "Operators and Control Statements",
          "Arrays",
          "Understanding Functions"
        ],
        "JavaScript-Built In Functions": [
          "Predefined Functions",
          "Date and Time Functions",
          "Strings and Regular Expressions",
          "Math Object"
        ],
        "JavaScript-Forms": [
          "Form Elements 1",
          "Form Elements 2",
          "Form Validation"
        ],
        "JavaScript-HTML Document Object Model": [
          "Window Object",
          "Document Object",
          "Other DOM Objects"
        ],
        "JavaScript-Cookies": [
          "Working With Cookies"
        ],
        "JavaScript-Working with Classes and Objects": [
          "Working With Classes And Objects",
          "Call Method",
          "Implementing Inheritance"
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "No coding experience is necessary to take this course! I take you from beginner to expert!",
        "All you need to get started with JavaScript is a computer, a browser and a text editor. We will set these up in the course.",
        "A basic understanding of HTML and CSS is a plus, but it's not a must! The course includes a 5-minutes HTML and CSS crash course."
      ],
      "description": "Javascript is an Interpreted language and it’s executed by the interpreter built in within the web browser on all platforms. It is Object based (doesn’t support inheritance) and is case sensitive language. It is very loosely typed. i.e it doesn’t have any datatypes. It’s a specification by initially Netscape and is acknowledge by ECMA (European Computer Manufacturers Association). Javascript language together with HTML DOM (Document Object Model) API is used to make the web page dynamic or interactive. Also we can do client side validations of data before the form is submitted to server.\njQuery is a fast, lightweight multi-browser JavaScript library. The Best part of jQuery is that Interacts with the DOM, makes ajax requests and also creates effects even after javascript is been disabled in the browser. jQuery also allows functionality for developers to build plug-ins.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\n\nUnderstand the JavaScript language & the Document Object Model.\nDetect and respond to user actions.\nAlter, show, hide and move objects on a web page.\nCheck information inputted into a form.\njQuery is an easy to learn JavaScript library which makes JavaScript programming very easy.\njQuery takes a lot of common tasks that require many lines of JavaScript code to accomplish, and wraps them into methods that you can call with a single line of code.\njQuery also simplifies complicated tasks like AJAX calls and DOM manipulation.\njQuery will run exactly the same and produce same output in all major browsers.\njQuery is free and very easy to include in your projects: just download its latest version from the jQuery website, or use an online Content Delivery Network.\njQuery is continuously upgraded, maintained and documented by a dedicated community of great developers. This ensures high quality and support on the internet.",
      "target_audience": [
        "Take this course now if you want to gain a deep understanding of the most popular programming language in the world: JavaScript.",
        "Take this course now if you have taken other JavaScript courses but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real-world apps. This course is perfect for you!"
      ]
    },
    {
      "title": "CSS for Everybody: From beginner to boss",
      "url": "https://www.udemy.com/course/css-for-everybody-the-perfect-beginner-course-with-tutorials-and-tips/",
      "bio": "Learn CSS from the ground up. Absolutely no experience required. This course will take you all the way to expert level.",
      "objectives": [
        "Beginner level CSS",
        "Intermediate level CSS",
        "Responsive web design",
        "CSS Flexbox",
        "CSS Grid"
      ],
      "course_content": {
        "CSS 101: A beginners guide to beautiful websites": [
          "Introduction",
          "What is CSS?",
          "How does CSS work?",
          "CSS syntax overview",
          "Inline CSS",
          "Internal CSS",
          "CSS selectors introduction",
          "Element selectors",
          "Class selectors",
          "ID selectors",
          "Grouped selectors",
          "Nested elements",
          "Commenting your code",
          "Text colors",
          "Different color types",
          "Link states",
          "Font sizes",
          "Measurement types",
          "Background colors",
          "Background images",
          "The inspect tool",
          "Text align",
          "Borders",
          "Border radius",
          "Display",
          "Width",
          "Height",
          "Box shadows",
          "Padding",
          "Margin",
          "Max-width",
          "Opacity",
          "External CSS",
          "Floating elements",
          "Your CSS 101 project",
          "Summary"
        ],
        "CSS 201: Intermediate CSS": [
          "Introduction",
          "The display property",
          "The box model",
          "Outlines",
          "Text shadows",
          "Minimum element width",
          "Introduction to CSS positions",
          "Relative positioning",
          "Absolute positioning",
          "Fixed positioning",
          "Sticky positioning",
          "Overflowing text",
          "Centering block elements",
          "Advanced CSS selectors",
          "Introduction to pseudo selectors",
          "Pseudo selectors",
          "Introduction to pseudo elements",
          "Before and after pseudo elements",
          "First letter and first line pseudo elements",
          "Highlighting text with selection",
          "Smooth transitions",
          "Gradient backgrounds",
          "Layering backgrounds and gradients",
          "Custom web fonts",
          "Transformations",
          "Animations",
          "Pro layouts: Flexbox",
          "Pro layouts: CSS Grid",
          "Your CSS 201 project",
          "Summary"
        ],
        "CSS 301: Responsive web design": [
          "Introduction",
          "The viewport meta element",
          "Media query syntax",
          "What is mobile-first?",
          "Responsive images",
          "Responsive embeds",
          "Multiple media queries",
          "Making a responsive layout",
          "Your CSS 301 project",
          "Summary"
        ]
      },
      "requirements": [
        "Basic HTML"
      ],
      "description": "Welcome to CSS for Everybody, with your coding teacher Kalob Taulien.\nThis course is made up of 3 mini-courses that include CSS 101, CSS 201, and CSS 301.\nIn CSS 101 we’re going to get started with making an HTML website look a little more modern using CSS. Absolutely no experience is required for this module. Together, we’ll start at the very beginning and go through all the basics so you don’t miss anything.\nIn CSS 201 we’ll dive into intermediate CSS and work with things like animations, transitions, flexbox, and CSS grid. This will give us all the skills we need to start making websites responsive so they look good on desktops, laptops, tablets, phones, and even TVs.\nIn CSS 301 we’re focused completely on responsive web design. That’s how we make a website look good on every device.\nThere are big projects at the end of all three modules. And in between several lessons are tasks to get hands-on experience.\nTo get the most out of this course, you’ll need to know basic HTML. And you’ll likely want to pause the videos every now and then and code along with me.\nWelcome to CSS for Everybody, and I’ll see you inside.\n–\nWhat is CSS?\nCSS, otherwise known as Cascading Stylesheets, is used to make websites look and feel beautiful. See all the colors, shapes, and layouts on Udemy? That is all done using CSS.\n–\nWho is this course for?\nIf you want to make websites look beautiful and work on device types such as phones, tablets, laptops, desktops, and TVs... this course is for you!\nIf you've never written any CSS or you have written some CSS but want to level up your skill from beginner to boss, this course is for you!\nIf you want to eventually get a job as a web developer, this course is for you!\n–\nWhat you'll learn in CSS 101:\nWe'll start off with getting a text editor installed, and learning about CSS syntax (the coding-style in which CSS is written). Then we're going to dive into inline vs internal vs external styling, how to style certain HTML elements using CSS selectors, changing the text on our page, using different colors, changing default link styling, adding background images, working with borders, changing heights and widths of elements, changing spacing with margins and paddings, and making parts of your page see-through.\nThere are several tasks between the lessons for immediate hands-on experience, along with a final project.\nWhat you'll learn in CSS 201:\nIn this intermediate module, we'll apply everything we learned in CSS 101, and get our hands dirty with more advanced CSS. This includes understanding the display property, the box model, outlines vs borders, specific element positioning, advanced CSS selectors, pseudo selectors and pseudo elements, transitions, animations, flexbox, and CSS grid.\nJust like in the CSS 101 module, there is a final project and a bunch of homework tasks between the lessons for immediate hands-on experience.\nWhat you'll learn in CSS 301:\nCSS 301 is all about responsive web design. This is how we make websites look great on all devices including phones, tablets, laptops, desktops, TVs, and more.\nResponsive web design is the act of making a website \"respond\" to the width of the device that's viewing your website. With this, you can write one codebase that works well on every type of device so all of your viewers and website users will be happy.\nWe'll dive right into media queries and what mobile-first means and why it's important. Then we'll make images and video embeds responsive. And we'll finish the course with a final project where you make a flexbox (or CSS grid) page layout and then transform it into a responsive website so it looks amazing on smaller devices like a phone.\n–\nCourse requirements:\nYou should know some basic HTML already. CSS is designed to work with HTML, so if you don't already know HTML then you'll want to learn HTML first. Otherwise, if you already know a little HTML (you don't need to be an expert) then this course is for you!\nYou will also need access to the internet to stream the lessons and a free text editing program like VS Code. And that's it!",
      "target_audience": [
        "Junior web developers",
        "People who want to make beautiful looking websites",
        "People who want to make interactive feeling websites",
        "People who want to make websites that work on all devices (phones, tablets and computers)"
      ]
    },
    {
      "title": "Create and Deploy a Web App in 3 Hours",
      "url": "https://www.udemy.com/course/create-and-deploy-a-web-app-in-3-hours/",
      "bio": "Deploy your app today with Ruby on Rails and harness the Power of Facebook to drive thousands of users to your website.",
      "objectives": [
        "You’ll build a real, live Ruby on Rails application.",
        "You’ll deploy an app on Heroku.",
        "You’ll study good Git Workflow.",
        "You’ll learn all about Facebook Authentication.",
        "You’ll discover the power of Facebook Graph API.",
        "You’ll learn HTML5 and CSS3 Best Practices.",
        "You’ll learn how to use Bootstrap.",
        "You’ll learn all about Flat Design with FlatUI.",
        "You’ll discover Responsive Design"
      ],
      "course_content": {
        "Introduction": [
          "Course Structure",
          "Install Ruby on Rails (Mac or Windows)"
        ],
        "Create a Micro-Blogging App": [
          "Generate a new rails application",
          "Git and Github",
          "Create a Bootstrapped Landing Page",
          "Simple Form and Posts Scaffold",
          "Making everything better"
        ],
        "Add Facebook Connect": [
          "Generate and customizing the User Model",
          "Omniauth Gem and Better Notifications",
          "Configuring Facebook",
          "Place to store your secrets",
          "Are we local or global?",
          "User Model",
          "Additional Migrations",
          "The Omniauth Controller",
          "Application Controller",
          "Routes & Callbacks",
          "Preparing the views",
          "Seeing it work!",
          "Adding Flat Design to Your App"
        ],
        "Facebook Graph API": [
          "What's Next",
          "Posts feel alone",
          "Users are important",
          "Cleanup and Debugging",
          "The Koala Gem",
          "Facebook power!",
          "Getting Information",
          "Posting Information",
          "Adding Conditionals",
          "Adding Production Mode",
          "Prepare for Deploy",
          "Deploy"
        ],
        "AsciiCast": [
          "Additional Resources",
          "Full Source Code"
        ]
      },
      "requirements": [
        "Mac or PC (Although course is taught using a Mac)",
        "Comfortable with Ruby on Rails Helps but not required"
      ],
      "description": "Are you still waiting for that perfect technical co-founder to build the product of your dreams? If that’s the case then this course is for you!\nMy name is Tiago and I welcome you to the “Create and deploy a web app in 3 hours”. At the end of lectures you will have the skill to deploy your Ruby on Rails Application and at the same time drive thousands of users to your website through Facebook Integration\n\nAfter leaving college with a Computer Science Degree I have worked in a multitude of startups gaining experience in User Interface and Experience Design Growth Hacking and my true north Ruby on Rails.\nToday I have my own web development company where with the help of my team we craft beautiful web applications for other startups and even incubators.\n\nWhy should you take this course you ask? First of all a Ruby on Rails Programmer is very hard to find these days and learning the skill through a real life web application is the best way to go.\n\nSecond of all in this course the app you’ll be building uses Facebook Connect which is today the easiest and the most popular way of funnelling more users.\n\nAlso we’ll be working with Facebook’s Graph API making the sky the limit in regards to your\ncreativity.\n\nAnd last but not least you’ll be able to deploy this app in little more than 3 hours. This is a huge confidence boost and specially important when you want to test the market fast.\n\nAs a bonus I’ll be teaching you the latest trends when it comes to design.\n\nWe’ll use Bootstrap as a foundation but also applying flat design to make your app look awesome right\nfrom the start.\n\nWith this course you’ll get:\n* 3 hours of video\n* An asciicast with all lecture notes\n* The full repository of your finished app.\n* And you’ll have my back if you get stuck on\nanything.\n\nJoin me and let’s make a fricking cool website!",
      "target_audience": [
        "Anyone with the will to create amazing products"
      ]
    },
    {
      "title": "Web Development in 1 day",
      "url": "https://www.udemy.com/course/learn-code-in-a-day/",
      "bio": "Start learning CSS and HTML today and have your website up and running tomorrow!",
      "objectives": [
        "Make a website",
        "Be confident using CSS and HTML to build any website"
      ],
      "course_content": {
        "HTML - lets get started": [
          "HTML - Setting up the folder structure",
          "HTML - Structure of a webpage",
          "HTML - Headings",
          "HTML - Paragraphs",
          "HTML - Dip your toe into CSS",
          "HTML",
          "HTML - Lists",
          "HTML - Links",
          "HTML - Images",
          "HTML - Tables",
          "HTML - iFrames",
          "HTML - Adding videos",
          "HTML - Adding Audio",
          "HTML-forms",
          "End of HTML quiz"
        ],
        "CSS - making websites beautiful!": [
          "Intro to CSS",
          "CSS - Explaining the box model",
          "CSS - Colors",
          "CSS - Using Divs to control your page layout",
          "Classes and ID's",
          "CSS - Borders, Padding and Margins",
          "CSS Quiz",
          "CSS - Position",
          "CSS - Floating Elements",
          "CSS - Styling Images and Background Images",
          "CSS - Styling fonts",
          "CSS - Styling Links"
        ],
        "Code Your Portfolio Website!!": [
          "Intro to project - what are we doing?",
          "HTML -Getting Started - Setting up the structure of the webpage",
          "HTML - Setting up the header and the navigation bar",
          "HTML-Adding background image and text over image",
          "CSS- Styling the background image and the text over the image",
          "HTML - Adding the form and footer",
          "Styling text over image",
          "Styling the footer",
          "Styling social icons",
          "Styling the header",
          "Styling the Navigation bar",
          "Styling the form and adding font",
          "Coding the HTML for the portfolio page",
          "Styling The Gallery",
          "Making and Styling the Home Button",
          "Talk through responsive CSS",
          "Normalize CSS",
          "Where now?"
        ],
        "PHP - Data collection from Forms": [
          "PHP - Data collection from Forms"
        ]
      },
      "requirements": [
        "Internet",
        "Text Editor (e.g text wrangler)",
        "Willingness to Learn"
      ],
      "description": "Course Description\n\n\nHTML and CSS are the two most essential languages you must learn if you want to become a web developer - they can also the easiest if you learn in the right way.\nWith this thorough course you will learn all the skills you need to create a beautiful portfoilio  website.\nYou will watch clear videos where  I code along side you and provide the code in a PDF that you can reference later on this course. This is a foolproof way of learning HTML and CSS fast. The quicker you learn these languages the faster you can start making money from them!\nTake this course if you want to learn HTML and CSS in a fast and efficient way. You will code a fantastic portfolio website and learn all the skills  to code any website you want !\n\n\n\nWhy take this course?\nCurrently the world is undergoing a digital revolution, companies and sectors are using their digital capabilities to innovate and transform how they operate. The rapid rate of change has meant many companies now exist purely online  - so if you haven't already started thinking about your coding skills it is time to start. Whether you want to be able to create a start-up or start a career as a web designer or even just create your own blog site then this course is for you!\n\n\nWith just 44 lectures and  just over 4 hours of your time we will get you up and running and ready to code websites with confidence and finesse!\n\n\n** You will also get several cheat sheets that I have created to make learning HTML and CSS even EASIER!",
      "target_audience": [
        "Budding Web Designers",
        "Anyone who wants to get into the Digital World"
      ]
    },
    {
      "title": "OOP C# Programming with Visual Studio",
      "url": "https://www.udemy.com/course/visual-studio-the-oop-c-programming-course/",
      "bio": "Learn OOP C# programming techniques and methods with Object Orientated Programming",
      "objectives": [
        "Use many advanced C# programming techniques and have a great understanding Object Orientated Programming. These are essential skills for every form of C# programmer."
      ],
      "course_content": {
        "OOP C# Programming": [
          "Introduction",
          "Classes Introduction",
          "Class Creation",
          "Methods Introduction",
          "Void Method Practice",
          "Typed Method Practice",
          "OOP Practice",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "You should know basic C# programming",
        "Familiar with the Visual Studio IDE"
      ],
      "description": "Welcome to my OOP course on C# Programming with Visual Studio!\nBefore discussing the course I must emphasize that this is an Advanced course, so fundamental knowledge of C# and/or Visual Studio are required. If you would like to learn these fundamentals then please take a look at my beginner course, Visual Studio | The Basic C# Programming Course.\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as tough several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the C# programming language.\nC#, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving C# over any other language. Of course, it goes without saying that C# is an excellent language, but do you know what is required of you in a programming career?\nThere are many skills in programming that are required in any form of the field, but what I plan to to teach you in this course is exactly what you will find on many job requirements as well as many advanced methods that will no doubt help you in the future. I speak of OOP, Object Orientated Programming, in addition I included data processing.\nWhat about Visual Studio? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several projects that will help you get truly comfortable with the IDE as well as more adept at program creation.\nIn short, you will learn:\nAdvanced C# Methods\nData Collection\nData Processing\nOOP, Object Orientated Programming\nand BONUS tips and tricks!\n\n\nGo no further if you're looking for the course that will take you from a novice to an expert! With my course I can guarantee that the knowledge you learn will help you in your career or further studies on C# programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Basic C# programmers",
        "I.T Students",
        "Beginner Programmers"
      ]
    },
    {
      "title": "Let's Build a Go version of Laravel: Part Two",
      "url": "https://www.udemy.com/course/lets-build-a-go-version-of-laravel-part-two/",
      "bio": "The followup to \"Let's Build a Go Version of Laravel,\" with support for remote file systems, Social Auth, and more.",
      "objectives": [
        "How to implement and use Remote Procedure Calls (RPC) in Go",
        "How to upload files safely in Go",
        "How to integrate AWS S3 Buckets in a Go application",
        "How to integrate an FTP/SFTP filesystem in Go",
        "How to implement social authentication in Go"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About me",
          "Asking for help",
          "Installing Go",
          "Installing an IDE"
        ],
        "Project Setup": [
          "Setting up our project",
          "Making sure everything works"
        ],
        "Setting up our remote file systems": [
          "What we're going to create",
          "Setting up our remote file systems using Docker",
          "Configuring Minio",
          "Configuring sFTP",
          "Setting up a type for file systems"
        ],
        "File systems: Minio": [
          "Getting started with Minio: connecting and the Put function",
          "Implementing the List function in Minio",
          "Implementing the Delete function in Minio",
          "Implementing the Get function in Minio",
          "Creating stub filesystems for the other three types",
          "Adding filesystems to Celeritas",
          "Trying out our Minio filesystem",
          "Creating a handler to list the remote file system",
          "Connecting the handler to a route and trying things out",
          "Creating handlers to display the upload form",
          "Creating the handler to process the file upload",
          "Creating the delete handler"
        ],
        "File systems: sFTP": [
          "Implementing the Put function for sFTP",
          "Implementing the List function for sFTP",
          "Implementing the Delete function for sFTP",
          "Implementing the Get function for sFTP",
          "Connecting Celeritas to our sFTP file system",
          "Updating our ListFS handler to support sFTP",
          "Updating our PostUploadToFS handler to support sFTP",
          "Updating our DeleteFromFS handler to support sFTP",
          "Cleaning up the Get function to avoid resource leaks"
        ],
        "File systems: WebDAV": [
          "Implementing the Put function for WebDAV",
          "Implementing the List function for WebDAV",
          "Implementing the Delete function for WebDAV",
          "Implementing the Get function for WebDAV",
          "Testing things out"
        ],
        "File systems: Amazon S3 Buckets": [
          "Implementing the List function for S3 file systems",
          "Implementing the Put function for S3 file systems",
          "Implementing the Delete function for S3 file systems",
          "Implementing the Get function for S3 buckets",
          "Connecting Celeritas to our S3 file system",
          "Creating an S3 compatible bucket on Linode",
          "Updating our handlers for S3 buckets",
          "Trying things out"
        ],
        "Building a File System Agnostic File Uploader": [
          "What we'll build",
          "Adding file systems to the Celeritas type",
          "Creating the file uploader",
          "Limiting upload by mime type",
          "Adding the mime type and file size limitations to the Celeritas config type",
          "Setting up handlers and routes to try things out",
          "Trying things out"
        ],
        "Improving our Migrations package": [
          "Pop vs. SQL",
          "Getting started with Pop functions for our migrations code in Celeritas",
          "Implementing the CreatePopMigration() function to create up and down migrations",
          "Implementing the RunPopMigrations() function",
          "Implementing the PopMigrateDown() function",
          "Implementing the PopMigrateReset() function",
          "Making changes in the Celeritas CLI for our pop migrations",
          "Trying out our new make migration command",
          "Ensuring the database is connected before allowing people to make migrations",
          "Creating a database.yml file and running migrations",
          "Trying out the migrate command",
          "Updating the \"make auth\" command for our Pop integration",
          "Trying out make auth"
        ],
        "Social Authentication with OAuth2": [
          "Social Authentication or Single Sign On: an Overview",
          "Getting started with Goth and Social Authentication",
          "Setting up authentication routes",
          "Initializing social sign on",
          "Implementing the SocialLogin handler",
          "Implementing the SocialCallback handler",
          "Connecting our social authentication handlers to routes",
          "Setting up GitHub for social authentication",
          "Trying out the GitHub login functionality",
          "Logging out",
          "Really logging out",
          "Trying the socialLogout function",
          "Adding support for Google login",
          "Updating the auth-handlers.go file for Google to enable login",
          "Trying out login with Google",
          "Adding the case for logging out of Google in socialLogout()",
          "Trying things out"
        ]
      },
      "requirements": [
        "A basic understanding of the Go programming language",
        "A basic understanding of HTML",
        "A basic understanding of JavaScript"
      ],
      "description": "This is the follow up to \"Let's Build a Go Version of Laravel,\" and is intended for students who have already taken that course!\nIn the first part of this series, we built a re-usable Go module that gave us a lot of functionality, including html, json, and xml response types, support for Go templates and Jet templates to render pages, multiple database support, sessions, and more. This time around, we'll improve our Celeritas package and add the following functionality:\nAdd support for remote file systems, including Amazon S3 buckets, Minio, sFTP, and WebDAV\nAdd support for Social Authentication using GitHub and Google (and you can add as many more as you like)\nAdd support for improved testing, including a Go version of Laravel's Dusk package, which takes a browser screen shot when testing functionality that renders a web page\nAdd support for \"maintenance mode\" using Remote Procedure Calls (RPC)\nImprove our database migrations to support both raw SQL and soda's Fizz file format\nImplement file upload functionality (with support for local and remote file systems)\nSeparate logic and routes for web and API\nMake it easy for users to create tests by pre-populating stub test files and the appropriate setup_test.go files for their projects\nBy the time that you have completed this course, you will not only have a solid understanding of each of the things listed above, but also a reusable code base that will help you jump start your next project.\nPlease note that this course requires you to download Docker Desktop from Docker. If you are a Udemy Business user, please check with your employer before downloading software.",
      "target_audience": [
        "This course is intended for developers who wish to further their knowledge of using Go to build web applications",
        "It's also great for PHP & Laravel developers who want to build faster, safer web applications using Go"
      ]
    },
    {
      "title": "Laravel Full Course 2023: Build a Learning Management System",
      "url": "https://www.udemy.com/course/laravel-57-and-58-complete-worldclass-developer-bootcamp/",
      "bio": "Build a full project with Laravel covering from basic to advanced topics (LMS)",
      "objectives": [
        "Basic to advanced topics about Laravel",
        "How to build full projects with Laravel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Lecture 2",
          "Lecture 3",
          "Lecture 4",
          "Add text editor"
        ],
        "New section": [
          "Courses 1",
          "courses 2",
          "has and belongs to many relationship",
          "has many relationship",
          "comments",
          "solving paystack error",
          "concluding paystack"
        ],
        "Segmentation": [
          "page segmentation",
          "items show",
          "subscriptions",
          "embedding youtube"
        ]
      },
      "requirements": [
        "Be able to build a basic website with PHP"
      ],
      "description": "This course will teach you all the essential topics of Laravel while using it to build a full project. It covers step-by-step every topic from how to install Laravel through database relations, migrations, MVC, Controllers, Models, Payment integration, API consumption, Sessions, scaffolding etc\n\n\nThis course demonstrates how to easily build a very large scale application with Laravel both by looking at the projects at the feature level and at the application level.\n\nSince its initial release, Laravel has experienced exponential growth. It became the most starred PHP framework on GitHub and rose to the go-to framework for people all over the world.\nLaravel focuses on the end-user first: which means it focus is on simplicity, clarity, and getting work done. People and companies are using it to build everything from simple hobby projects all the way to Fortune 500 companies. Laravel is a compelling model view controller (MVC) architectural pattern PHP framework, an open-source web application development intended for developers who demand an uncomplicated and rich toolkit to build full-featured web applications. Taylor Otwell created Laravel. Laravel is a PHP framework which makes it effortless for you to produce professional web application by following refined coding standards and architectural pattern. This concise tutorial illustrates the basics of the Laravel framework.\n\n\n11 Benefits Of Learning Management Systems\nStream lined training process.\nUsing a Learning Management System makes things easier for you, as it helps plan the training activities calendar which you can share with your learners, trainer, and co-administrators. By doing this you can maintain and improve your training process. An LMS also helps in getting trainer reports, which is a time consuming process when done manually.\nAbility to deliver engaging and motivating training.\nThis is a fact that each individual learns in a unique manner. If you apply different learning approaches, they increase your success rate. LMSs help in communication and balance the whole system.\nTechnology leverage.\nIn this digital world the working system has totally changed. Today every employee is engaged with a laptop or desktop, and with the help of Learning Management Systems you make the training future ready; plus it becomes interesting and exciting for your target audience.\nCentralized learning.\nIt becomes easy to offer centralized source of learning to multiple users and the training, performance, and content can be accessed from the same source.\nTracking and reporting features.\nAnother benefit of using an LMS is that you can enhance performance through tracking and reporting tools. New users’ progress can be tracked, records can be reviewed, and users can register for more than one course. Learning can be done through web based training. Management can access the records and calculate which area needs improvement. The learners also become aware of the areas that need improvement and additional efforts, as the weak performance areas, can be identified easily.\nEvaluation capabilities.\nUsers can evaluate courses before joining, and employers can keep a track of the retention levels and real time performance by periodically scheduling assignments.\nEasy upgrades.\nContent and information can be easily upgraded, as Learning Management Systems offer a centralized location for information which makes it simple to implement changes; plus, all users get the same upgraded information at the same time.\nSimplified learning process.\nAn LMS refines the learning process. The systems are easy to use and a new user can figure out everything very easily, since help is built into the system.\nReduced cost and time saved.\nThe right LMS can reduce the training costs in multiple ways as the trainer doesn’t need to travel now, so there are no boarding and lodging charges involved. The teaching cost reduces to great extent. Learning Management Systems save organizations’ and instructors’ valuable time and money through web based training.\nInteractive environment.\nThrough new online tools, the interaction and communication part improves. Learners get the answers in real time and the engagement is more geared toward being interactive.\nAnytime, anywhere learning.\nCentralized uploading and online access ensures this. You can learn whenever and wherever you want to.\n8 Learning Management System Features\nFinally, some common features found in the majority of Learning Management Systems include:\nManaging users, courses, roles, and generating reports.\nThis helps uploading courses, assigning roles, and generating various reports.\nMaking a course calendar.\nThis feature helps in managing the course activities.\nMessaging and notifications.\nUsers and trainers can send reminders and notifications, including upcoming training and events.\nAssessments that can handle pre/post testing.\nCertification and display employees’ score and transcripts.\nThis helps in maintaining training records of the learners, performance of the individual, and providing certificates to those who have completed training successfully.\nInstructor-led course management.\nAdministration.\nCompetency management.\nWith the help of this feature one can track and check the skills set of the team members and compare then against business goals.\nCorporate Learning Management Systems Learning Management System Benefits LMS Features",
      "target_audience": [
        "People who want to understand MVC",
        "People who want to learn to code laravel",
        "People who want to learn to build industrial standard applications with laravel"
      ]
    },
    {
      "title": "Master Express Framework Examples Node.Js - Zero to Advanced",
      "url": "https://www.udemy.com/course/the-bootcamp-express-framework-nodejs-zero-to-advanced/",
      "bio": "The Beginner Friendly Practical Code Along to Setting Up A Web Server with Express Framework and Node.Js - Step by Step",
      "objectives": [
        "Practice to become an advanced and confident programmer with Express JS",
        "Learn how to set up a web server from scratch with Express JS and Node JS",
        "Express JS fundamentals: CRUD operations, GET, POST, PUT, DELETE",
        "Learn Templating Engines with Handelbars step by step",
        "Build a serverless App with API requests",
        "How to problem solve and dig through documentations like a developer"
      ],
      "course_content": {
        "Introduction To Node JS": [
          "Introduction to Node JS",
          "Advantage of Node JS",
          "Quick Summary of Node JS Upcoming Section",
          "Install Node JS",
          "What is REPL Node JS",
          "Asynchronous Node JS Demonstration SetTimeout",
          "Download and Install Visual Studio Code",
          "Set Up The Node Web Server Root Directories",
          "Build and Launch A Node Web Server",
          "Request and Response Objects in Node JS",
          "Requesting Web Server Data in Node with curl",
          "Responding with Multiple Endpoints in Node JS",
          "Coding Solutions"
        ],
        "Introduction To The Node JS FS - Filing System": [
          "Reading Files with Node JS",
          "Writing and Appending Files with The File System Module",
          "Deleting Files with Node JS",
          "Exericse - Node File System HTTP Module",
          "Solution - Node File System HTTP Module",
          "Coding Solutions for this Section"
        ],
        "Introduction To Express": [
          "What is Express JS - Introduction",
          "What is NPM Node Package Manager and How To Install Express",
          "Spin Up Our First Web App with Express",
          "Set Up Routes in Express",
          "Building a Website with Form Data with Express JS",
          "Handlling Post Request in Express and Middleware",
          "Coding Solutions",
          "Ask A Coding Mentor A Question"
        ],
        "Express API Project from Scratch": [
          "What is Postman and How to Install Postman",
          "Setting Up The Express Local Environment",
          "Spin Up A Web Server with Express Js",
          "Write A Basic JSON of User Data",
          "Retrieving API Data with Express",
          "Retrieving API Data with Express with Postman",
          "Error Handling with Retrieving Data in Express",
          "Post Requests with API Data in Express",
          "Code Clean Up And File Structures with ROutes",
          "Put requests and updating API with Express",
          "Delete Request for APIS with Express",
          "Coding Solutions"
        ],
        "Templating Engines with Express JS": [
          "What are Templating Engines and what is Handlebars",
          "Setting Up A Static Directory for Website with Handlebars",
          "Configuring Views and Layouts with Express and Handlebars",
          "Building out A Static Page with Handlebars",
          "Default Layout Property With Handlebars in Express",
          "Building Partials with Handlebars in Express",
          "Dynamic Variables and Helper Functions with Handlebars",
          "Coding Solutions"
        ],
        "Authenticating Username and Password with Express and Passport": [
          "Important Note About This Section",
          "Important Download Resource for this section",
          "Templating Engines wirth EJS of Login With Express Authentication",
          "Username And Password Local Strategy Code",
          "Rerouting Application and Authentication",
          "Import Additional Styles from CSS on Github",
          "Verify Session with Passport Local Strategy",
          "Log Out Functionality For Users And Live Interaction",
          "Sign Up Form and Styling with EJS",
          "Sign Up And Database Completion with Hashing And Salt",
          "Continue Building Authentication"
        ]
      },
      "requirements": [
        "No programming experience is needed but basic Javascript and web development skills is very useful"
      ],
      "description": "Are you familiar with Express Framework and programming in general, or have seen it mentioned in other projects and courses and are looking to train, sharpen and master your Express Framework step by step with code alongs and solutions every step of the way.\nIf you understand basic Javascript conceptually, or have recently just gotten started, but find you still need a solid extra boost to really lock it in and gain confidence as a developer and during interviews, then this course is specifically designed for you!\nThis course wastes no time and goes right into setting up servers and templating engines from a practical and professional stand point to give you all the basics you need for the Express Framework and Node.Js.\nThis course will cover from the ground up some of the most essential Express Framework configurations. We will gradually introduce more and more challenging concepts to give you a complete picture until you have succeeded in building multiple working projects you can demonstrate to others from scratch.\nLearning Express Framework feeling fluent and able set up a web server that is overwhelming, especially when staring at a blank page under pressure, but there is one thing that can break through the barriers for you and take you to the next level - practice.\nThis course offers an efficient model of all the professional. That way you can move through the course freely at your pace and start at very beginning of programming in Express Framework learning about datatypes or jump right in to leet code examples, matrices, Fibbonaci sequences and much more.\nWalking into a coding interview and having the confidence from fresh practice examples is what makes the difference between landing your dream job at a 150K+ versus feeling frustrated and uncertain.\nI have worked for some of the biggest Unicorn companies in the valley, as well as have built successful applications with large dev team force and overseen popular interview questions from Google, Amazon, Uber and beyond. This course specifically focuses and encourages a disciplined approach to improving your ability to break down and problem solve data structures and algorithms with Javascript and help lift you up.\nWhy is this the right Express Framework course for you?\nThis is the most practice friendly for complete beginners  Express Framework practice and Node.JsCourse on Udemy. It's an all-in-one topic by topic focused approach that will take you from the very fundamentals of Express Framework and web servers all the way to building your own servers.\nYou will learn Express Framework from the very beginning, step-by-step. I will guide you through the console with many code alongs and examples, important theory about how Express Framework works behind the scenes and more.\nYou will also learn how to problem solve like a developer, how to build out formulas from scratch, the proper conventions for your code, how to debug code, and many other real-world skills that you will need in order to confidently write programs from scratch.\nAnd unlike other courses, this one actually contains beginner, intermediate, and advanced topics.\nBut... You don't have to go into all these topics. This is a focused course that focuses on Express Framework and it is designed to bring you a combination of courses all in one! But you can improve your skills by focusing only on specific parts of this course. You can use this course as the lifetime reference guide for certain topics as you continue to build projects, do interviews, land new jobs and learn more that you can always come back to anytime you wish to advance in a particular topic.\nBy the end of the course, you will have the knowledge and confidence that you need in order to take on Express Framework questions and build your own.\nWhy am I the right Express Framework teacher for you?\nMy name is Clarian, I've worked as a head engineer with top tech and entertainment companies around the world for over 15 years, tech developer, CEO, consultant in the space, and I am fully passionate and dedicated to what I teach.\nI have recently been spending my time building comprehensive training models with clear explanations to help others evolve and grow by demystifying common misconceptions and problems.\nWhat do we learn exactly in this course?\nCareful and practical definitions, followed by clear examples, and exercises for you to try hands on in which we go over multiple solutions every time.\nEssential breakdowns of Express Framework questions and solutions for Node.Js that show you how to do it on your own.\nMultiple projects that we code along step by step including exercises and challenges\nOptimization and refactoring techniques to not just write code, but write code that works according to its appropriate context.\nIndustry level experience and advice including key tricks and tips to look out for.\nQ&A and a live online free active school with over 10,000 of my students including graduates and mentors working at Google, AWS, and deep in the startup life.\nLessons include: Templating Engines, CRUD, CLI, REPL, Asynchronous actions, Node.Js, Moment JS, Nodemon, Request and Response object, creating servers, server optimization. Rest API, Serverless Application and much more\nCheck out the course curriculum for an even more detailed overview of the content :)\nThis is what's also included in the package:\nClear explanations which come with exercises, solutions, and discussions\nAn online community of active developers and students is available for support and discussion.\nFree support in the course Q&A\n\n\nThis course is for you if...\n... you want to gain a clear and advanced understanding of Express Framework and coding interview challenges\n... you have been trying to learn Express Framework but: 1) still don't really understand programming completely, or 2) still don't feel confident to code out problems\n... you are interested in working as a programmer in the future\n... you already know Express Framework and Node.Js and are looking for a course to clearly go over advanced topics.\n... you want to get started with programming: Express Framework is an awesome and very interesting first language!\nDoes any of the above sound good to you? If so, then whenever you're ready, start this new adventure today, and join me and thousands of other developers in one of the most code along oriented Express Framework course that you will ever need!",
      "target_audience": [
        "Take this course if want to gain a clear and advanced understanding of Express JS",
        "Take this course if want to gain a clear and advanced understanding of Node JS",
        "Take this course if are interested in working as a programmer in the future",
        "Take this course if you want to advance with web server development"
      ]
    },
    {
      "title": "Angular Nest Web Application Architect - Master Class 2020",
      "url": "https://www.udemy.com/course/angularnest/",
      "bio": "Design, Develop and Deploy your own product from scratch as per current industrial practices working with monrepos",
      "objectives": [
        "Create a Web Application / Product from scratch. (i.e,.) Design phase to CI/CD deployment",
        "Ability to comprehend why and how to design a product along with it's architecture.",
        "Learn Best practices in Angular and NestJS and working with monorepos",
        "Work with CI/CD pipelines and docker containers",
        "Implement Dev tools that leverage documentation, linting and Automation Testing",
        "Identify similarities between AWS and GCP with Hands-on experience by deploying the Application"
      ],
      "course_content": {
        "Introduction": [
          "About this course",
          "What we are going to build",
          "Course outline",
          "How to get most out of this course",
          "Prerequisites"
        ],
        "Product Design and Architecture": [
          "About this section",
          "Gather info before stepping into project",
          "Architect your Application",
          "Design your wireframe - Figma / Adobe XD",
          "Review and redesign before it's too late"
        ],
        "Tech Stack Overview": [
          "About this section",
          "Version Control and Project Management",
          "What is a Monorepo?",
          "Angular and NestJS - How is it better?",
          "Tools and Documentation",
          "Automation Testing",
          "Dockerize your Application",
          "CI/CD Pipelines",
          "AWS or GCP - Where do we deploy?",
          "Customize your VS Code",
          "Come up with your Own Architectural Design"
        ],
        "Setup your Repository": [
          "About this section",
          "Initialize Angular frontend",
          "Initialize NestJS backend",
          "Monorepo Config - Linting and Serving",
          "Initialize MongoDB",
          "Monorepo Config - Shared Resources",
          "Materialize your frontend",
          "Modularize your backend",
          "Monorepo Config - Jest and Documentation",
          "Monorepo Tweaks"
        ],
        "Implementing CI/CD Pipelines": [
          "About this section",
          "GitLab Pipeline stages - Basics",
          "Getting started with GCP",
          "GitLab Pipeline stages - Advanced",
          "Angular Nest - Dockerize and Deploy"
        ],
        "NestJS Best Practices": [
          "About this section",
          "Working with mongoDB in nestJS",
          "JWT Authentication",
          "Working with Guards",
          "Implementing Validation",
          "Custom Validators",
          "Error Handling through exceptions",
          "Logging with Interceptors",
          "Middleware and Security",
          "NestJS Tweaks and Rechecks"
        ],
        "Angular Best Practices": [
          "About this section",
          "Progressive Web App",
          "State Management with NgRx",
          "Adding Control Components",
          "Including Theme Engine",
          "Creating a Slider Control",
          "Angular Routing - Basics",
          "Angular Routing - Lazy Loading",
          "Angular Authentication and Auth Guard",
          "Role Guard"
        ],
        "Creating API End Points": [
          "About this section",
          "Basic CRUD Functionality",
          "Learning Tips and Tricks in Postman",
          "Advanced concepts in mongoDB",
          "Overview on student module APIs"
        ],
        "Angular Titbits": [
          "About this section",
          "Angular Map Component",
          "Angular Styling",
          "Creating Micro in-built Application",
          "Angular Animations"
        ],
        "You have completed Successfully !": [
          "Congrats Web Architect"
        ]
      },
      "requirements": [
        "Be able to understand the basics of html, CSS and JavaScript",
        "A hands-on experience on Angular Basics",
        "A basic understanding of Typescript"
      ],
      "description": "How does it differ from other courses?\nIt is not going to be just about creating a project, rather understanding the concepts involved in it.\nIt is going to be constantly updated when I come across new techniques.\nIt will be one pitstop when it comes to advanced concepts in web development .\n\n\nWhy should you enroll?\nYou would benefit a lot by enrolling if you find yourself in one of the below scenarios,\nYou are already familiar with basics, but lack the understanding on the big picture.\nYou are a self-learner and wanna evaluate your current standpoint.\nYou wanna know end to end about product development lifecycle.\nYou are unfamiliar with Object Oriented Concepts with regard to web development.\nYou wanna familiarize with design patterns in Angular.\nYou feel state management is complex.\nYou are baffled by the term CI/CD.\nYou feel like GCP and AWS  are out of your scope.\nWith that being said, Feel free to try this course and trust me you are gonna benefit a lot from it. It will entirely change your coding perspective  to new whole new level.\nLooking forward to assist you.",
      "target_audience": [
        "Intermediate developers with basic understanding on web development",
        "Project managers looking for complete product flow life-cycle of a web application",
        "Beginners with aspiration to become Full stack developers/Architects"
      ]
    },
    {
      "title": "Flutter Web Development Bootcamp:Build 2 Real-World Web Apps",
      "url": "https://www.udemy.com/course/flutter-web-development-bootcampbuild-3-real-world-web-apps/",
      "bio": "Learn Flutter web development, including Flutter routing, making API requests in Flutter web apps, Build real web apps",
      "objectives": [
        "Flutter Web Development: Build a Complete Real-World Web App",
        "How to Use REST API in a Flutter Web App and Make Different Types of HTTP Requests",
        "Flutter Responsive Design: Making Your Web App Adapt to Any Device",
        "Deploy Your Flutter Web App to a Cloud Server and Make It Accessible Worldwide",
        "How to Handle Routing for a Flutter Web App",
        "How to Build a Real-World Movie App Using the Public Movie Database",
        "How to Search for Movies and Display Them in a Web App"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Flutter Web Movie App : Project-1": [
          "Movie App Project Source Code",
          "Movie App Project - Live Overview",
          "Project Setup Part-1",
          "Routing in Flutter Part-2",
          "Building Navigation Drawer Part-3",
          "TMDB Movie Icon Part-4",
          "Completing Navbar UI Part-5",
          "Top Rated Movies Skeleton Loading Part-6",
          "Now Playing Skeleton Loading Part-7",
          "Adding Text Widgets Part-8",
          "Home Page Skeleton Loading Complete Part-9",
          "Minor Bug Fix and Footer Part-10",
          "Footer UI Part-11",
          "Generating TMDB API Key Part-12",
          "Movie Model Part-13",
          "Making Http Request Top Rated Movies Part-14",
          "Making Http Request Parsing Movies Data Part-15",
          "Top Rated Movies Carousel Slider Part-16",
          "Now Playing Movies List Part-17",
          "Now Playing Section UI Issues Part-18",
          "Movies Grid View Part-19",
          "Home Page UI Completed Part-20",
          "Home Page Code Overview Part-21",
          "Routing Movies Page Part-22",
          "Movies Filter Page Part-23",
          "Changing State of Movies Filter Part-24",
          "Movies Page UI Callback Function Part-25",
          "Search Page Routing Part-26",
          "Search Page Part-27",
          "Search Page Error Complete UI Part-28",
          "Routing to Movie Details Page Part-29",
          "Movie Details Service Part-30",
          "Movie Details UI Part-31",
          "Stacking Up Widgets Part-32",
          "Movie Details Wrap Up Part-33",
          "Redirecting Issue Fix Part-34",
          "Responsive Web App Part-35",
          "Deploy Movie App on Firebase Part-36",
          "Course Wrap Up"
        ],
        "Photo Gallery Web App: Project-2": [
          "Photo Gallery Web App Project - Source Code",
          "Photo Gallery Web App Project - Live Overview",
          "Creating a New Flutter Project Part-1",
          "Main Page UI Part-2",
          "Building App Bar Part-3",
          "Skeleton Loader Widget Part-4",
          "Skeleton Loading Implementation Part-5",
          "Photo Gallery Footer Part-6",
          "Understanding Pixabay API Part-7",
          "Image Model Part-8",
          "Image Services HTTP Call Pixabay API Part-9",
          "Building Image Card Part-10",
          "Viewing Image Data in Grid View Part-11",
          "Implementing Search Functionality Part-12",
          "Pagination Part-13",
          "Setting Theme Data Part-14",
          "Toggle Theme Part-15",
          "Display Images in Dialog Box Part-16",
          "Image Dialog Box Part-17",
          "Responsive for Mobile and Tab Views Part-18",
          "Deploying Photo Gallery to Vercel Part-19",
          "Deploying Photo Gallery to Firebase Part-20",
          "Course Wrap Up"
        ]
      },
      "requirements": [
        "Students don't need to have any prior skills to take this course. They will learn everything from the beginning."
      ],
      "description": "With our in-depth \"Flutter Web Development Bootcamp: Build 2 Real-World Web Apps\" course, discover the world of web development with Flutter. This bootcamp is intended for developers of all skill levels, from novices to seasoned Flutter fans, and provides an extensive learning experience.\n\n\nFoundations of Flutter for Web Development: Learn the fundamentals of Flutter specifically designed for web development, including its responsive design principles and widget system.\nConstructing Responsive User Interfaces: Acquire the skills necessary to design dynamic, flexible user interfaces that work flawlessly across a range of screens and devices.\nRESTful API Integration: Learn how to work with RESTful APIs to retrieve and manipulate data for your web-based apps.\nHTTP Requests and Asynchronous Operations: To improve the responsiveness of your web applications, investigate various HTTP request strategies and asynchronous programming approaches.\nReal-World Application Development: Put your skills to use by creating a single, comprehensive web application that includes features like effective routing and search capabilities.\nDeployment to Cloud Servers: Learn how to put your Flutter web apps on cloud servers so that they are available to users anywhere.\nYou will have the skills and knowledge necessary to create, implement, and manage real-world Flutter web applications at the end of this boot-camp.",
      "target_audience": [
        "Flutter developers who want to learn web development with Flutter",
        "If you want to learn web development with Flutter",
        "If you want to build a real-world web app using Flutter",
        "Beginner to advanced learners",
        "If you want to learn Flutter web from basics to advanced levels while gaining real-world web app experience."
      ]
    },
    {
      "title": "Getting Started with Python Web Scraping",
      "url": "https://www.udemy.com/course/getting-started-with-python-web-scraping/",
      "bio": "See the in-depth capabilities of Python’s web scraping tools",
      "objectives": [
        "Use the Selenium module and scrape with Selenium",
        "Find out how to set up a web driver",
        "Perform debugging with the console and download files",
        "Learn to work with Nested selectors and regular expression basics",
        "Discover how to perform parsing with BeautifulSoup",
        "Understand authentication with Wireshark.",
        "Master the use of URL Query Strings and HTTP Requests (GET and POST)",
        "Implement streamlining with headless browser"
      ],
      "course_content": {
        "Scraping with Selenium": [
          "The Course Overview",
          "When to Web Scrape",
          "What Makes up a Website",
          "How to Interact with a Website",
          "Using the Selenium Module",
          "Ethical Web Scraping"
        ],
        "Parsing with BeautifulSoup": [
          "Requesting HTML",
          "Using the BeautifulSoup Module",
          "Example: Parsing Wikipedia"
        ],
        "Fetching the urlib2 and API’s": [
          "Bypassing the Browser",
          "Introduction to APIs",
          "Working with APIs"
        ]
      },
      "requirements": [
        "Pre-requistes - • Basic foundation in Python programming • Basic Python + pip knowledge suggested • Web development experience beneficial, but not mandatory",
        "Softwares used: - • Python (3.3+) • Pip package manager • Windows 10 • PhantomJS • Selenium"
      ],
      "description": "Python is a high-level programming language used for general-purpose programming. It has a design philosophy which emphasizes code readability and a syntax which allows programmers to express concepts in fewer lines of code than possible in languages such as C++ or Java.\nThis video course is a rich collection of recipes that will come in handy when you are scraping a website using Python, addressing your usual and unusual problems while scraping websites by diving deep into the capabilities of Python’sweb scraping tools such as Selenium, BeautifulSoup, and urllib2. The video will start with showing how to use selenium module for scraping by setting up a web driver, debugging with the Console and downloading files and streamlining with a Headless Browser (PhantomJS). The video will then move on to demonstrate how to do parsing with Beautifulsoup which would include introduction to the BeautifulSoupObjects, Nested Selectors and Regular Expressions Basics and how to do UTF-8 Encoding. The video will finally end by showing how to do fetching with urlib2 by using the developer tools Network tab, how to bypass the browser and retrieve files.\nBy The end of this video, you will be successfully able to understand the in-depth capabilities of python web scraping tools.\nAbout the Author\nCharles Clayton is a sole proprietor of crclayton technologies co and an independent web developer. He is an experienced developer and Python specialist in Python web scraping solutions and tools such asSelenium, BeautifulSoup,and urllib2. He has 2 years of experience as a Reliability Engineer with West frazweer.",
      "target_audience": [
        "This video is for Python developers and web analysts who want to improve their web scraping skills in Python. It is ideal for those who are looking for reference guide they can use to solve any challenges encountered while web scraping in Python."
      ]
    },
    {
      "title": "Starting with REST API's",
      "url": "https://www.udemy.com/course/starting-with-rest-apis/",
      "bio": "Representational State Transfer (It is sometimes spelled \"ReST\")",
      "objectives": [
        "Learn the world's standard data delivery protocol: REST!",
        "Learn REST design guidelines and practices",
        "Understand REST API evaluation & integration",
        "Use public REST API's to populate application clients",
        "Learn how REST & HTTP are tightly coupled",
        "Understand the parallel of REST and database CRUD operations",
        "Learn to use the Cloud 9 online IDE for REST development",
        "Design your own RESTful API",
        "Develop a RESTful application server with nodeJS",
        "Learn to code, test, and serve a custom REST API",
        "Discover Postman for testing RESTful API endpoints ... and much, much more!"
      ],
      "course_content": {
        "Welcome to Starting With REST API's": [
          "Introduction",
          "Learning REST",
          "REST Defined",
          "REST & HTTP",
          "REST & CRUD ops",
          "Designing for REST"
        ],
        "Developing REST API's": [
          "Developing REST API's",
          "a nodeJS Environment",
          "nodeJS & REST",
          "REST Routes",
          "A REST controller",
          "Completing the REST Server",
          "Testing our REST API",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have:",
        "A at least a modest knowledge of HTML, web server use and configuration, and JavaScript. Ideally, the student should be familiar with creating servers with nodeJS. If the student has only some, or even none of these skills, he/she will still benefit from this course greatly, but may need to pause a video in progress to perform some additional background research. This is encouraged, as it'll only make for a better overall experience and net benefit.",
        "NO REST EXPERIENCE IS REQUIRED!!!"
      ],
      "description": "REST works in open-sourced and private application development projects needs to go through this course and absorb all of its content. Anyone desiring to learn how REST is implemented in clients and servers needs the knowldege, demonstrations, and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how to effectively participate in a project leveraging REST API's both as consumers and providers.\nNO REST EXPERIENCE IS REQUIRED!!!",
      "target_audience": [
        "This course was built for software developers who need to understand how to work with REST API's and services in any type of development effort, regardless of language, framework, or library used.",
        "This course is designed for those developers who need to learn REST's protocol to be able to effectively participate in projects implementing the technology. Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how REST API's are structured, delivered, and consumed in a software development effort."
      ]
    },
    {
      "title": "Building web APIs with Symfony",
      "url": "https://www.udemy.com/course/building-web-apis-with-symfony/",
      "bio": "Back-end web development for web symphonists",
      "objectives": [
        "Building Rest APIs with Symfony and PHP",
        "Managing database entities with Doctrine",
        "User authentication and management with different access levels",
        "Using Redis as a cache backend and session storage",
        "Providing up to date API docs generated from Controllers and OpenApi attributes",
        "Writing Symfony commands that complement your API"
      ],
      "course_content": {},
      "requirements": [
        "PHP 8 knowledge (classes traits attributes etc)",
        "Familiarity with docker and docker-compose for local dev"
      ],
      "description": "PHP is the preferred server-side programming language for over three-quarters of global sites. PHP powers a whopping 77.6 percent of all the websites monitored by W3Techs.\nSymfony is a full-featured modularized PHP framework which is used for building all kinds of applications, from traditional web applications to the small Microservice components.\nSymfony aims to speed up the creation and maintenance of web applications and to replace repetitive coding tasks. It's also aimed at building robust applications in an enterprise context, and aims to give developers full control over the configuration: from the directory structure to the foreign libraries, almost everything can be customized.\nYou are a web developer who is evaluating the next framework to build your REST API with. The arrival of PHP 8 with attributes  has you thinking of Doctrine annotations and you want to give it a go.\nWell, look no further! This course is the only thing you need to not only explore Symfony 6 development but also to teach you some of the best practices when it comes to API development.\nWe will build Rest APIs with\n- Authentication built-in (users and passwords)\n- Access management with roles\n- CLI commands\n- Automated API testing\n- Auto-generated API docs from the source code",
      "target_audience": [
        "Web developers evaluating Symfony for their next API",
        "Symfony developers interested in best practices when building a REST API"
      ]
    },
    {
      "title": "Build A TodoList with Python, FastAPI and React",
      "url": "https://www.udemy.com/course/build-a-todolist-with-python-fastapi-and-react/",
      "bio": "Learn to build a Full Stack FastAPI and React Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with FastAPI",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Tortoise ORM",
        "Learn to consume JSON with React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Disclaimer"
        ],
        "Create FastAPI Todo Rest API": [
          "Create FastAPI Project",
          "Run FastAPI Project",
          "Create Tortoise ORM Models FasatAPI",
          "Register Tortoise ORM with FastAPI",
          "Create Todos API Request in FastAPI",
          "Get Todo API Request with FastAPI",
          "Update Todos API Request with FastAPI",
          "Delete Todo API Request with FastAPI"
        ],
        "Create React Todo Front End": [
          "Create React Todo Front End",
          "Build Project Structure",
          "Build Todo Service Part 1",
          "Build Todo Service Part 2",
          "Create Todo Form Part 1",
          "Create Todo Form Part 2",
          "Create Todo Form Part 3",
          "Build Todo Component Part 1",
          "Build Todo Component Part 2",
          "Build TodoTab",
          "Create TodoList State",
          "Create React Hooks to Refresh App",
          "Finish TodoList",
          "Bonus!"
        ]
      },
      "requirements": [
        "Understand Basic Python",
        "Understand Basic Database Design"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use FastAPI, Python, and React. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Python, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact Hooks\nReact Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nFastAPI\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React and FastAPI.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "ReactJS Course: Learn JavaScript Library Used by Facebook&IG",
      "url": "https://www.udemy.com/course/react-js/",
      "bio": "The Astonishing Power of High Performance JS (Without The Headache). Brought to You By Facebook and Instagram as React",
      "objectives": [
        "Build front-end apps with React.js as a view layer",
        "Utilize JSX",
        "Render React.js on the Node.js server (isomorphism)"
      ],
      "course_content": {
        "Don't Watch Me!": [
          "Don't Watch Me!",
          "Node.js and npm (Recommended)"
        ],
        "Module 1: React.js Basics": [
          "Quick Intro",
          "Hello World",
          "Hello World Demo",
          "JSX",
          "JSX Demo",
          "Babel",
          "Babel Demo",
          "Components"
        ],
        "Module 1 (Cont)": [
          "Nesting Elements",
          "Variables",
          "State",
          "Methods and Events",
          "Props",
          "Summary",
          "React.js Basics",
          "Project: Timer"
        ],
        "Module 2: Developing with React.js": [
          "Congrats",
          "Lists",
          "Project: Menu",
          "Refs and Default Props",
          "Default Props Demo",
          "Prop Types",
          "Required Props",
          "Mixins"
        ],
        "Module 2 (Cont)": [
          "Rendering Children Elements",
          "Forms, Events and Uncontrolled Components",
          "Controlled Components and Default Values",
          "Rendering Children Demo",
          "Uncontrolled Components Demo",
          "Controlled Components Demo",
          "Style Attribute Demo",
          "Summary"
        ],
        "Module 3: Getting Reactive with Message Board (Express+MongoDB+React+Gulp+JSX)": [
          "Board Part 1: Package.json and Gulpfile.js",
          "Board Part 2: Express.js+MongoDB REST API Server POST and GET Endpoints",
          "Board Part 3: Testing REST API Server POST and GET Endpoints with Postman",
          "Board Part 4: HTML Page with Twitter Bootstrap",
          "Board Part 5: Header and Footer React JSX Components",
          "Board Part 6: Getting JSON from REST API Server and Saving Data with AJAX/XHR",
          "Board Part 7: JSX List Table with Map"
        ],
        "Module 4: Isomorphic JavaScript or How to Render React on the Express Server": [
          "Refactoring Message Board to Render React on the Server and Browser"
        ]
      },
      "requirements": [
        "JavaScript"
      ],
      "description": "Stop struggling to code front-end the hard way. React is performing fast DOM manipulations and is easy to learn. No more events attached to the DOM elements. Just declare in React and it will do the necessary manipulations for you (declarative style).\nThis course is designed for web developers who are familiar with JavaScript and interested in using React as a view layer for their front-end web apps.\nWarning: React by Facebook is Taking Over The World\nI stumbled upon some guy from Zurich, Switzerland who was arguing that you don't need MVC (model, view, controller) with Reactjs.\nWhat?\nI love controversial topics! How refreshing to hear such a brave opinion after almost a decade of MVC-domitaion.\nAnyway, I really suck at Angular.\nIt's just weird to me to use directives in HTML.\nIt's almost like using HTML to code JavaScript.\nI never got used to it. At the same time, I keep hearing good things about React.\nThat's why I had this idea of learning myself and teaching you Reactjs (with this course).\nI used the same approach 4 years ago when I wrote my first book on Nodejs.\nIt became Amazon #1 Best Seller in the Client-Server category and helped a few thousand engineers.\n7 Ways To ROCK With Reactjs\nReactjs is a JavaScript library.\nIt's used for creating user interfaces (UIs).\nIt's created and used by giants such as Facebook and Instagram.\nMillions of people use apps built on Reactjs.\nThink of Reactjs as the View in Model, View, Controller.\nThe difference between Backbonejs, Angularjs and Reactjs is that Reactjs creates its own virtual DOM (Document Object Model) for pages' components.\nYou work with them, not the DOM.\nThis provides tremendous flexibility and awesome performance,\nbecause Reactjs knows the needed changes beforehand and updates the DOM tree accordingly.\nThis allows to avoid unnecessary DOM operations and makes updates more effective.\nHere are some of other advantages of Reactjs:\nDecoupling\nIncreased cohesion using a component model\nAbstraction,\nComposition\nExpressivity\nVirtual DOM & Synthetic events (which basically means they completely re-implemented the DOM and its event system)\nEnables modern HTML5 event stuff on IE 8 Server-side rendering Testability Bindings to SVG, VML, and <canvas>\nOnly Wise People Can Qualify\nSmart people learn on their mistakes while wise learn on mistakes of others. Save time with this course...\nI published nine books on JavaScript and Nodejs that have been downloaded or bought by over 10,000 developers.\nIn addition to that, I have experience in online courses.\nThree of my courses have over 2,000 students enrolled.\nI'm not bragging.\nI'm only making a point that I am capable of delivery once the demand is proven by the campaign. :-)\nI worked with Backbonejs before. I'm not an expert on Reactjs. I haven't build anything production-ready with it (yet).\nThis will give me the advantage of a beginner's mind.\nThat is I won't have the knowledge curse and will be able to explain everything in the layman's terms.\nJoin me on this journey and learn Reactjs by backing this campaign with $50.\nHigh Performance JavaScript Without The Headache—Limited Time Offer\nThe course will have at least 1 hour of HD video, and examples on the following topics:\nReact custom components\nCommunication between React components\nIntegration of React with jQuery UI / Bootstrap components\nReact Router and routing in React\nRendering React on the server\nReact and server / mBaaS\nPS: Reactjs is hot, hot, hot. Learn it with me. Take this course and get the confidence in Reactjs that everyone will envy.",
      "target_audience": [
        "Web developers who want to learn React.js"
      ]
    },
    {
      "title": "Full Stack Web Development: Complete Web Development Course",
      "url": "https://www.udemy.com/course/full-stack-web-development-complete-web-development-course-o/",
      "bio": "Complete full stack web development going from zero to the most advanced: Html, CSS, Javascript, React, Node and Sql.",
      "objectives": [
        "===== PAY 9.99: Enter the code WEBFULL and pay the lowest training price. ======",
        "Build Complete Web Applications: Learn to create projects from scratch, covering both front-end and back-end.",
        "Master Essential Languages: Work with HTML, CSS, JavaScript, Node js, React, and more.",
        "Manage Databases Effectively: Build and handle data using MongoDB, MySQL, and other popular tools.",
        "Implement Authentication and Security: Protect your applications with modern authentication techniques.",
        "Create Responsive Interfaces: Make your applications accessible on both mobile and desktop devices.",
        "Dive into RESTful APIs: Develop and integrate APIs following industry best practices.",
        "Work with Version Control: Use Git and GitHub to collaborate and manage projects efficiently.",
        "Get Job-Ready: Apply your skills in real-world projects and impress potential employers."
      ],
      "course_content": {
        "Introduction": [
          "What you are going to learn"
        ],
        "Basic Module - Introduction to HTML and SEO": [
          "Basic module - Introduction",
          "Introduction to HTTP and HTTPS",
          "Basic module - http method",
          "What is WWW - The W3C",
          "What is an API and REST architecture",
          "HTTP response status codes",
          "Different ways to program and practice",
          "Where to send the exercises",
          "Semantic Tags",
          "What is HTML",
          "How to open HTML",
          "HTML Structure - Head Body",
          "HTML Title Tags",
          "HTML Text Tags",
          "Navigation to another HTML",
          "HTML Classes",
          "HTML ID's",
          "HTML form",
          "HTML Input",
          "Form input with button submit",
          "Audio inside HTML",
          "How to embed things inside you",
          "Image and Video inside HTML",
          "More HTML Tags and Codes",
          "Learning basic seo part. 1",
          "Learning basic seo part 2",
          "Practice - creating a navigation",
          "Practice - creating a landing page part 1",
          "Practice - creating landing page part 2",
          "Practice - creating landing page part 3",
          "Practice - creating landing page part 4",
          "FIRST MODULE EXERCISE"
        ],
        "Intermediate Module - CSS and Styles": [
          "Introduction to css",
          "Css Fonts",
          "Css Colors",
          "CSS Border Radius",
          "CSS outside Font Family",
          "CSS border property",
          "CSS height property",
          "CSS width",
          "Display Flex",
          "Flex properties",
          "Padding and margin",
          "Using Grid",
          "Reusing css",
          "CSS transition",
          "CSS Flex",
          "CSS Transform",
          "CSS Key Frame",
          "CSS Hover",
          "CSS style types",
          "CSS Class Style",
          "Tailwindcss",
          "Getting started with tailwindcss",
          "Tailwind UI",
          "CSS MEDIA QUERY",
          "SECOND MODULE EXERCISE"
        ],
        "Advanced Module - DOM and Javascript": [
          "Method to localeString",
          "How many object can we have",
          "Fetch method",
          "Async await method",
          "Javascript onClick",
          "Using onBlur",
          "Parameters inside of Functions",
          "Function with math operators",
          "Getting HTML properties in Javascript",
          "Changing properties a button",
          "Changing a input properties",
          "Applying classes manipulating the DOM",
          "Changing DOM Properties with onclick Function",
          "Adding URL to a property",
          "Consuming another API",
          "Creating a basic calculato",
          "Basic javascript calculator part 2",
          "Basic javascript calculator part 3",
          "Cleaning Function Code",
          "Javascript more complex ob",
          "OnChange with HTML",
          "The problem with Synchronous programming",
          "Async Await",
          "Blur event listener",
          "Break and Continue statement",
          "Calling a functions inside of event listener",
          "Chaining callbacks",
          "Closures in Javascript",
          "Data types and data struct",
          "Loops in Javascript - FOR",
          "FOR Loop in a practice",
          "For in and For of",
          "Event listener Change",
          "Javascript DblClick event",
          "Javascript Operators",
          "Introduction to REGEX",
          "REGEX to test email",
          "Regex atoms and Assertions",
          "Promises in Javascript",
          "Promise all in Javascript",
          "While and Do While",
          "Types of event listener",
          "Ternary and other operators",
          "Strict Mode",
          "Scope of Variables",
          "Classes in Javascript",
          "What is a arrow function",
          "Body of arrow functions",
          "Arrow functions with line break",
          "Javascript Event listener",
          "Classes inheritance",
          "Classes private properties",
          "Ending the content about classes",
          "Field declarations",
          "Collecting contact informations from client",
          "Collecting contact info part 2",
          "Collecting contact info part 3",
          "Little project with event and Fetch API",
          "Improving the zipCode Project",
          "Introduction to Node Js",
          "Difference between Node Js and Browser",
          "NODE JS using app.route",
          "NodeJS Express Router",
          "NodeJS Introduction to routes",
          "NODEJS Route params",
          "Nodejs Route Handler and Middleware",
          "Creating a Node Js project",
          "NODEJS consuming data from express in frontend",
          "NVM and Node Versions",
          "Javascript",
          "What is DOM",
          "Diference between HTML, CSS and Javascript",
          "Variables at Javascript",
          "Const and Variables",
          "Importing Javascript",
          "Javascript basic system",
          "Javascript alert",
          "Window prompt",
          "What is JSON",
          "Template string",
          "Camel Case",
          "Acessing the DOM in different ways",
          "Comparions in Javascript",
          "Global Variables and other Ways to do part 1",
          "Global Variables and other Ways to do part 2",
          "Javascript window prompt",
          "Javascript functions",
          "Javascript different types of data",
          "Filter method Javascript",
          "If Else conditions",
          "Javascript Map method",
          "ForEach method",
          "FindIndex method",
          "Extracting infos from a Object",
          "FindIndex and IndexOf",
          "Javascript reverse method",
          "Javascript unshift method",
          "Javascript Pop Method",
          "Shift array method",
          "Switch statement",
          "If statement in mdn",
          "If statement inside of a Function",
          "Operators",
          "Another way to acess object",
          "Array Push method",
          "Functions with more params",
          "THIRD MODULE EXERCISE"
        ],
        "Super Advanced Module - Project Version Control": [
          "Introduction to Gith",
          "Git and Github version control",
          "Initializing a Git repository part 1",
          "Initializing a Git repository part 2",
          "Initializing a Git repository part 3",
          "Initializing a Git repository part 4",
          "Initializing a Git Repository part 5",
          "What you can do in a github repo part 1",
          "What you can do in a github repo part 2",
          "Difference between git and github",
          "Creating a new branch with Git",
          "Git branch structure",
          "Git commit without command line",
          "Merging a branch",
          "Merge using terminal",
          "Github challenge",
          "Github challenge 2",
          "Introduction to react",
          "Learning React",
          "Quick Start React",
          "REACT USE STATE",
          "REACT USE STATE part2",
          "HTML and Variables inside of React",
          "React Components",
          "React components with state",
          "React Props",
          "React Props (childrens and more)",
          "React use State with Inputs",
          "React Use Effect",
          "React use Effect with Fetch Request part1",
          "React use effect with Fetch Request part2",
          "React Stateless and Statefull components",
          "Introduction to React Router Dom",
          "React Router Dom",
          "React hook Use Ref",
          "React showing fetch state in HTML",
          "React Context API",
          "Principles of Global Context",
          "Showing in practice a global state",
          "React hot Toast",
          "Conclusion and Github challenge",
          "SUPER ADVANCED MODULE EXERCISE"
        ],
        "Mastery Module - Databases and Servers": [
          "Introduction to SQL",
          "Installing MySQL part1",
          "Installing MySQL part2",
          "Installing MySQL part3",
          "Relational DATABASE",
          "SQL and noSQL databases",
          "SQL and noSQL",
          "Comments inside my SQL",
          "Create table",
          "Drop Table",
          "Delete Statement",
          "SQL insert into",
          "SQL insert into part2",
          "SQL Data Types",
          "SQL Select command",
          "Showing Select Statement",
          "SELECT with Where",
          "SELECT WHERE with operators and Clauses",
          "UPDATE STATEMENT",
          "SELECT with AND OR",
          "Select Distinct",
          "Limiting the results LIMIT",
          "SQL Where Not Statement",
          "SELECT with ORDER BY",
          "SQL STATEMENT IS NOT NULL IS NULL",
          "Understanding JOINS",
          "Different types of JOINS",
          "Aliases in SQL",
          "SQL CASE",
          "SQL BACKUP",
          "SQL END CONTENT",
          "Primary Key",
          "Foreign Key",
          "FULL JOIN",
          "LEFT JOIN",
          "RIGHT JOIN",
          "Stored Procedures",
          "Consuming Data using MySQL",
          "NODE JS project with mysql part1",
          "NODE JS project with mysql part2",
          "NODE JS project with mysql part3",
          "NODE JS project with mysql part4",
          "NODE JS project with mysql part5",
          "NODE JS project with mysql part6",
          "NODE JS project with mysql part7",
          "NODE JS project with mysql part8",
          "NODE JS project with mysql part9",
          "NODE JS project with mysql part10",
          "Starting with Typescript",
          "Typescript in Visual Studio Code",
          "Interfaces as params",
          "Interfaces with Typescript",
          "Generic Types",
          "Structural Type System",
          "If you are facing database connection problems, see this",
          "Chakra UI for React",
          "Kanban Tool Trello",
          "Agile Tool Jira",
          "MASTERY MODULE EXERCISE",
          "FIFTH MODULE EXERCISE"
        ]
      },
      "requirements": [
        "No prior experience is required; just a computer with internet access."
      ],
      "description": "Are you ready to become a full-stack web developer and enter the tech job market?\nThis course is your ultimate guide to mastering the key technologies and tools for web development. With a comprehensive curriculum divided into 6 sections, 267 lessons, and over 27 hours of detailed content, this course will equip you with everything you need.\n\n\nWhat will you learn?\nWeb Fundamentals: Understand HTTP, HTTPS, HTTP methods, REST APIs, and W3C standards.\nHTML and CSS: Learn everything from basic HTML structure to advanced CSS techniques, including Flexbox, Grid, TailwindCSS, and SEO optimizations.\nModern JavaScript: Master DOM manipulation, events, operators, functions, ES6+, asynchronous programming (async/await), APIs, and more.\nReact: Build modern interfaces using React, including hooks, Context API, React Router, and Chakra UI.\nNode.js and SQL: Create robust backends with Node.js and work with relational databases using SQL.\nVersion Control and Agile Methodologies: Learn Git, GitHub, Trello, Jira, and Agile methodologies to manage and collaborate on real-world projects.\nPractical Projects: Each module includes hands-on exercises and projects to solidify your learning, such as landing pages, calculators, API consumption, and fully integrated systems with databases.\n\nWho is this course for?\nBeginners looking to start a career in web development.\nDevelopers transitioning careers and aiming to expand their skill set.\nProfessionals who want to master the most in-demand technologies.\n\n\nBenefits:\nLifetime access to all course content.\nCertificate of completion.\nDirect instructor support for questions.\nThis course is perfect for anyone seeking a complete journey in web development, starting from scratch and advancing to mastering the most modern technologies. Enroll now and start building amazing projects!",
      "target_audience": [
        "Beginners who want to learn web development from scratch.",
        "Professionals looking to enhance their skills and knowledge in web development.",
        "Individuals interested in creating complete projects and pursuing a tech career.",
        "Developers aiming to master modern tools like React and Node js"
      ]
    },
    {
      "title": "Python for Beginners | Learn the Fundamentals",
      "url": "https://www.udemy.com/course/python-for-beginners-learn-the-fundamentals/",
      "bio": "Discover Python fundamentals, including variables, control flow, functions, and lists.",
      "objectives": [
        "Python Basics",
        "Detail understanding of fundamentals",
        "Practical Examples, Quizes and Assignments",
        "Google Colab Programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Google Colab?"
        ],
        "Building Basics": [
          "Variables",
          "Commenting your code",
          "Lists",
          "Sets",
          "Tuples",
          "Dictionaries"
        ],
        "Logic Building": [
          "Flow Control Statements",
          "For Loop",
          "While Loop"
        ],
        "Functions": [
          "Functions in Python"
        ]
      },
      "requirements": [
        "No previous programming experience needed"
      ],
      "description": "Hello! Have you ever wondered why Python has become one of the most popular programming languages today? Many students dive into Python but struggle with concepts and practical applications due to gaps in their understanding. You're in the right place to master the complete Python programming language!\nWhy Python?\nPython is in high demand in the job market. Companies like Google, Facebook, NASA, and IBM offer attractive salaries to skilled Python developers. Choosing Python means you’re stepping into a powerful and versatile programming world!\nWhy This Course?\nThis course is designed by an instructor with over five years of experience in Python programming and freelancing. The curriculum is structured to cover every essential aspect of Python thoroughly, ensuring you grasp the language completely. By the end of this course, you'll be well on your way to becoming a professional Python programmer!\nWhat Can You Achieve After Learning Python?\nBecome an AI Expert\nExplore Ethical Hacking\nWork as a Data Scientist\nDevelop Software\nCreate Mobile Apps\nBuild Web Applications\nFreelance in Tech Industry\nWhat Will You Learn in This Course?\nMaster Python 3\nGain professional skills necessary for jobs and freelance opportunities\nUnderstand how to create your own programs and software\nWrite Python programs that take user input, process it, and provide output\nUtilize loops, conditionals, and functions effectively\nDevelop a solid understanding of Python code\nSo, what are you waiting for? Let’s start your Python journey together! Join our coding community, and I can’t wait to see you in the first video lecture!\nHappy Coding!",
      "target_audience": [
        "Everyone"
      ]
    },
    {
      "title": "The CSS Flexbox Guide: Build 5 Real Flexible Projects!",
      "url": "https://www.udemy.com/course/css3-flexbox-course-build-5-real-flexible-layouts/",
      "bio": "Learn CSS Flexbox & Build 5 real world responsvie layouts using CSS3 Flexbox!",
      "objectives": [
        "CSS3 Flexbox & How it works",
        "All the possible Flexbox properties",
        "Flexbox with coding exercise",
        "Build real world flexible layouts using Flexbox"
      ],
      "course_content": {
        "Getting Started!": [
          "Welcome! & Know what's inside this course",
          "Important Notes Before You Start!",
          "First Download Exercise Files",
          "Setting Up Tools"
        ],
        "Let’s Get Started with Flexbox": [
          "Introduction - CSS3 Flexbox",
          "What is Flexbox?",
          "Browser Support for Flexbox",
          "Let's Setup Exercise Files",
          "Your First Flexbox Layout!",
          "Flexbox Properties Overview"
        ],
        "Working on Flex Container": [
          "Introduction - Flex Container",
          "display: flex; VS display: inline-flex;",
          "Main-axis & Cross-axis",
          "Flex Direction",
          "Reverse Flex Direction",
          "Flex wrap",
          "Reverse Flex wrap",
          "The shorthand 'flex-flow' Property",
          "Justify Content",
          "Align Items",
          "Align Content"
        ],
        "Working on Flex Items": [
          "Introduction - Flex Items",
          "Order",
          "Align Self",
          "Flex Grow",
          "Flex Shrink",
          "Flex Basis",
          "The Shorthand 'flex' Property"
        ],
        "Building Flexible Layouts Using Flexbox": [
          "Introduction - Flexible Layouts",
          "Vertical & Horizontal Centering",
          "Responsive Image Grid",
          "Equal Height Pricing Tables",
          "Responsive Header",
          "Flexible Cards"
        ],
        "Conclusion": [
          "Great You Did It!"
        ]
      },
      "requirements": [
        "Basic knowledge in HTML and CSS",
        "Any code editor of your choice"
      ],
      "description": "CSS Flexbox is a new layout module in CSS3 which is designed for laying out more complex site layouts easily and rapidly!\nIn this course, you will learn the CSS3 Flexbox from scratch and you will learn how to build real world flexible layouts with less and the easiest code using Flexbox.\nIn this course, we will start with the very basics of CSS3 Flexbox and then we will gradually learn more and more about CSS3 Flexbox. You will learn what is exactly Flexbox, why do you need it, what are the main components of Flexbox, we will discuss current browser support for Flexbox.\nThen we will start working on flex container and we will take a detailed look at all the possible properties which can be used directly on flex container. You will also learn about the two axes of flexbox, the main axis and cross axis. We will also discuss the difference between display flex and display inline flex. And you will be learning all that with practical coding examples so you can understand flexbox module the right way.\nWe cover working on flex items.  We will take a detailed look at all the possible properties which can be used directly on an individual flex item. Actually, you will learn about the sizing and flexibility of flex items. And of course, you will learn all that along with coding examples.\nSo once you learn the CSS3 Flexbox module then we will start building some real-world flexible layouts using flexbox.\nYou will learn about css centering using Flexbox.\nI will show you how to build a simple flexible image grid with the help of flexbox. The image grid, we will build in course will look great on large screens as well as on small screens.\nWe will be building simple pricing tables with the help of flexbox. You will see, how with little CSS flexbox we design & align pricing tables.\nWe will be building a responsive header for a web page with the help of flexbox.\nYou will learn to build flexible cards using flexbox. We will be building these cards which will have equal height and they will look great on smaller screens; they will easily wrap on smaller screen if there is not enough space available.\nBy the end of this course, you will feel comfortable using Flexbox in your projects. By the end of this course, you will be a fully-fledged Flexbox developer. Thanks",
      "target_audience": [
        "Web developers eager about CSS3 Flexbox"
      ]
    },
    {
      "title": "MERN Stack Library Management App",
      "url": "https://www.udemy.com/course/mern-stack-library-management-app/",
      "bio": "Build a real time mern stack library management applications",
      "objectives": [
        "Learning and Building a Real Time MERN Stack Application scratch.",
        "Working with different user roles . Every logged in user will be having different user interface.",
        "Librarian and Admin roles for managing the entire application",
        "Normal user / patron role for checking the borrowed books and books availability status.",
        "Issue a book to patron , Renewal the issued book , Process the return operation"
      ],
      "course_content": {
        "Promo & Resourses": [
          "Promo"
        ],
        "Front End Setup": [
          "React App",
          "Antd Setup",
          "Custom Stylesheets"
        ],
        "Login Register UI": [
          "Routes",
          "Register",
          "Login"
        ],
        "Backend Setup": [
          "Node Setup",
          "Node Mongo Connection"
        ],
        "Login & Register Backend": [
          "User Model",
          "Register API",
          "Login API",
          "API's Integration with UI"
        ],
        "Authorization": [
          "Authorization part - 1",
          "Authorization part - 1"
        ],
        "Redux Setup": [
          "Redux Toolkit",
          "Show , Hide Loaders With Redux"
        ],
        "Layout": [
          "Layout"
        ],
        "Books API's Backend": [
          "Book Model",
          "Books API's"
        ],
        "Add Book": [
          "Add Book Form - 1",
          "Add Book Form - 2",
          "Books List"
        ]
      },
      "requirements": [
        "MERN Basics"
      ],
      "description": "Hi Guys, Welcome to the course 'MERN Stack Library Management Application 2023\nIn this course, you will learn the following topics\n\n\nWorking with different user roles like Patron, Librarian, Admin\nSeparate User Interface for all the user roles\nWorking with complex MongoDB, queries, schemas, models\nRedux Toolkit For State management\nJWT Authentication and Password Encryption\nAnt Design Library for UI Components,\nAdmin can create librarians and users\nLibrarians can do crud operations on books, issue a book to patron, renewal the issued book status based on patron request, process the book returns , collect rents and fines\nAccess management functionality.\nAll the functionalities / pages will be displayed to the logged in user based on the role.\nAdmin can see the complete reports of the library.\nLike total books issued , total amount collected , total amount pending etc.\nPushing Code to GitHub,\nHosting application in Heroku\n24/7 Q/A Support.\nMERN stands for MongoDB, Express, React, and Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework and Node.js is the famous and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser designed to build scalable network applications.",
      "target_audience": [
        "Full Stack Developers",
        "MERN Stack Developers"
      ]
    },
    {
      "title": "Build A Weather App With Ruby On Rails",
      "url": "https://www.udemy.com/course/build-an-ozone-weather-app-with-ruby-on-rails/",
      "bio": "How To Use An API To Get Air Quality Ozone Weather Data With Ruby On Rails",
      "objectives": [
        "Build Web Apps With Ruby On Rails",
        "Build Your Own Air Quality Monitoring Website",
        "Download and Install Ruby on Rails",
        "Download and Install Git Bash Terminal",
        "Understand Basic Terminal Commands",
        "Push Code To Github",
        "Host Web Apps On Heroku",
        "Understand the Bootstrap CSS Framework",
        "Connect To a 3rd Party API",
        "Understand Basic Ruby Code"
      ],
      "course_content": {
        "Install Ruby On Rails": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Installation Overview",
          "Install Node",
          "Install Sublime Text and Git Bash",
          "Create an SSH Key",
          "Install Heroku Toolbelt",
          "Install Ruby On Rails",
          "Update!",
          "Create Test Project and Error Handling"
        ],
        "Ruby On Rails Project Basics": [
          "Create Project and Homepage",
          "Install Bootstrap CSS Framework",
          "Create Bootstrap Navbar and Partial",
          "Create Bootstrap Jumbotron"
        ],
        "Weather Data API": [
          "Weather API Overview",
          "Connect To Weather API",
          "Output API Results To Screen",
          "API Error Handling",
          "Jumbotron Background Colors",
          "Color Logic with Ruby",
          "Change Ozone Description"
        ],
        "Zipcode Search Functionality": [
          "Navbar Search Form",
          "Search Functionality",
          "Search Form Error Handling",
          "Search Form API Connection"
        ],
        "Version Control and Webhosting": [
          "Version Control With Git",
          "Push Code To Github",
          "Intro To Heroku For Free Webhosting",
          "Using Custom Domain Names With Heroku",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "Ruby on Rails can seem overwhelming at first, but it doesn’t have to be! In this course I’ll walk you through it step by step and you’ll be building your first web app in MINUTES. You’ll be amazed how quick and easy it is to create very professional looking websites, even if you have no programming or web design experience at all.\nWatch over my shoulder as I build a cool Ozone Air Quality Monitoring Weather app step by step right in front of you. You’ll follow along and build your own copy. By the time we’re finished, you’ll have a solid understanding of Ruby on Rails and how to use it to build awesome web apps.\nThis course is aimed at the absolute beginner, you don't need any coding experience at all!\n\nThe course contains 28 videos – and is just over 2 hours long. Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or software to take this course, though any experience with HTML or CSS is a plus. You don’t even need to know the Ruby programming language. I’ll walk you through EVERYTHING.\nRuby on Rails is a great web development tool and learning it has never been this easy.\nWhat We'll Build...\nWe'll build a cool Ozone Air Quality Monitoring Weather app that pulls Ozone Air Quality weather data from a third party government API.\nYou'll learn how to use the free API in your app throughout the course.\nWe'll style the website using the popular Bootstrap CSS framework (I'll show you how to use it!)\nThis is a great course for someone starting out. You'll learn all kinds of skills that will help you build just about any kind of website or web app that you like.\n\n\nSign up today and I'll see you on the inside!\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn Ruby On Rails for Web Development",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "Build a Design System from scratch (Full HD)",
      "url": "https://www.udemy.com/course/design-system-from-scratch/",
      "bio": "Learn the advance technique to setup a design system in Figma. Implement the same in ReactJS and Styled Components.",
      "objectives": [
        "Define the essentials of design system as per your need",
        "Learn to setup a Design System in Figma",
        "Implement a Design System driven application from scratch using Web technologies",
        "Learn the advance techniques to implement Design System in React JS",
        "Enable dark mode for your application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Learn the fundamentals of Design System",
          "Setting up Design System in Figma",
          "Setting up the development environment"
        ],
        "Design": [
          "Designing the body of Calendar Popup",
          "Designing the header & footer section",
          "Designing the trigger component"
        ],
        "Implementation": [
          "Setting up component structure",
          "Importing assets from design",
          "Setting up a centralised theme",
          "Importing fonts",
          "Writing a pixel perfect CSS style",
          "Adding the calendar trigger component",
          "Making calendar popup respond to the user events",
          "Adding hooks",
          "Adding functionality to change month and year",
          "Rendering dates dynamically",
          "Highlighting selected date",
          "Selecting today's date"
        ],
        "Extras: Add dark mode": [
          "Setting up theme for dark mode",
          "Implementing dark mode & Summary"
        ]
      },
      "requirements": [
        "Basic skills to use Figma and React JS"
      ],
      "description": "Who is this course meant for?\nThis course is meant for Senior Designers or Web Developers who are starting to build a Design System (DS) for their existing product. You are required to have a basic understanding of Figma and React JS.\nWhat will be the outcome?\nAfter taking this course, as a UX Designer, you'll be equipped with the knowledge of structuring a DS and creating a library of UI components that can scale. As a developer, you'll be able to ship your very first DS-driven application. For those, who already have a DS in place, which follows old methodologies, here you'll learn some sophisticated techniques to restructure your UI elements and scale them with ease.\nStructure of this course -\nIn the first section, we'll learn the fundamentals of the Design System. And set up an environment for design and development.\nThen we will move on to creating an example component based on a design system in Figma. Here you will insights to maintain UI at scale.\nNext, we will take the design and implement the same using web technologies from scratch.\nAs an additional lesson, I'll show you how to add dark mode, or in that aspect any theme to your application.",
      "target_audience": [
        "User Experience Designer",
        "Frontend Developer",
        "Web Developer",
        "Application Developer",
        "UI Designer",
        "Product Designer"
      ]
    },
    {
      "title": "Web Development with Asp.Net Using C# MS SQL Database Basic",
      "url": "https://www.udemy.com/course/learn-web-development-create-dynamic-website-complete-guide/",
      "bio": "Asp.Net Using C#, Learn SQL Server, Make Yourself Web Developer, beginners to advance Tutorial, make own Dynamic website",
      "objectives": [
        "Creating yourself Dynamic Website",
        "able to Create yourself CMS & E-commerce Website",
        "Back End Web Development",
        "Aspdotnet Using C# Web Development",
        "SQL Basic Tutorial",
        "Visual Studio and SQL Server Software"
      ],
      "course_content": {
        "Basic of Asp.net Using C#": [
          "Introduction",
          "Visual Studio Overview",
          "First web “Hello World”",
          "Hello By Your Name (Add two String)",
          "Response.Redirect",
          "Simple Calculator"
        ],
        "Standard Tools": [
          "Hidden Field",
          "Text box",
          "Button",
          "Check box",
          "Checkbox list",
          "Radio Button",
          "Radio Button list",
          "Master Pages."
        ],
        "Validation": [
          "RequiredField Validator",
          "Compare Validator",
          "Range Validator",
          "RegularExpression Validator"
        ],
        "State Management": [
          "Query string",
          "Session",
          "Cookies"
        ],
        "Loops And Conditions": [
          "If else conditions",
          "For each loop",
          "For loop"
        ],
        "Sql Tutorial": [
          "Sql Introduction",
          "Create a new database",
          "Create a new table",
          "Primary key",
          "How to get backup of database",
          "How to generate script of database"
        ],
        "Database Command": [
          "Connect database",
          "Insert command",
          "Select command",
          "Update command",
          "Delete command"
        ],
        "Data Management": [
          "Bind data in Gridview",
          "Edit data in Gridview",
          "Update data in gridview",
          "Delete data in Gridview",
          "Bind data in Dropdown"
        ],
        "Asp.net Advance Tutorial": [
          "Sign Up / Register page",
          "Login page"
        ]
      },
      "requirements": [
        "Visual Studio 2010 or upper Version",
        "SQL Server 2008 or any Version"
      ],
      "description": "In this class You will learn  Web Development.\nWeb Development for beginners to advance\n\nIf you want  to make own Dynamic website or you make yourself  as a Web Developer then You can join  this course.\n\n\nif you want to make yourself Web developer\nAsp dot net using c# with sql\nHere are some topics that will be taught in this course.\nBasic of Asp dot net C#\nIntro\nVisual Studio Overview\nFirst web “Hello World”\nHello By Your Name\nResponse.Redirect\nSimple Calculator\nStandard Tools\nHidden Field\nText box\nButton\nCheck box\nCheckbox list\nRadio Button\nRadio Button list\nMaster Pages.\nValidation\nRequiredField Validator\nCompare Validator\nRange Validator\nRegularExpression Validator\nState Management\nQuery string\nSession\nCookies\nSql Tutorial\nSql Introduction\nCreate a new database\nCreate a new table\nPrimary key\nHow  to get backup of database\nHow  to generate script of database\nDatabase Sql  Command\nConnect database\nInsert command\nSelect command\nUpdate command\nDelete command\nData Management\nBind data in Gridview\nEdit data in gridview\nUpdate data in gridview\nDelete data in Gridview\nBind data in Dropdown\nLoops And Conditions\nIf else conditions\nFor loop\nForeach loop\nAsp dot net C# Advance Tutorial\nSign Up / Register page\nLogin page",
      "target_audience": [
        "Web designer want to make yourself Back End web Developer",
        "If you want to make yourself as Back End Web developer"
      ]
    },
    {
      "title": "Learn To Build A Google Map App Using Angular 2",
      "url": "https://www.udemy.com/course/learn-to-build-a-google-map-app-using-angular-2/",
      "bio": "Create a complete Map Application using Google MAP API and Angular 2",
      "objectives": [
        "Build a Complete Map App using Google APIs and Angular 2"
      ],
      "course_content": {
        "Course Intro": [
          "Introduction"
        ],
        "Google MAP API": [
          "Google Maps Setup",
          "Marker Display"
        ],
        "Front End Coding": [
          "Map Functions & Events",
          "Add Marker Form"
        ],
        "Moving & Deleting Markers": [
          "Marker Service & Local Storage",
          "Updating and Deleting Markers",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of Angular 2 is assumed"
      ],
      "description": "Google Maps have simplified navigation and almost all websites these days include Google Maps for contacting, or directions – helping users find them. Do you want to learn how to add Google Maps to your own website? Well, in this course you can!\nIn this short MapIt project based course, you will learn how to use the Google Maps components for Angular 2 and incorporate a MapIt feature. In this project, you will be able to search and pin locations using Latitude and Longitude or simply by clicking on the location on the Map. These pins will parse to Local Storage, so they will stay even if you restart your applications.\nSo, what are you waiting for? Let's SAY MAP!",
      "target_audience": [
        "Student familiar with Angular but are looking for creating full application using it"
      ]
    },
    {
      "title": "Clean and Scalable CSS Architecture (2023)",
      "url": "https://www.udemy.com/course/clean-and-scalable-css-architecture/",
      "bio": "Write Clean CSS code, create modular CSS and scalable CSS. OOP principles, SOLID, OOCSS, BEM will improve your CSS code.",
      "objectives": [
        "Understand common CSS issues",
        "How to write clean CSS code",
        "How to implement Object Oriented principles in CSS (SOLID, DRY, immutability...)",
        "What is a good and a bad Specificity graph",
        "Understand the concepts of OOCSS and how it can help you improve the code",
        "Understand the concepts of BEM",
        "How to manage Specificity graph with Inverted Triangle"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Stylesheet order issues",
          "Prerequisites"
        ],
        "OOP Principles in CSS": [
          "Introduction",
          "Specificity",
          "Single responsibility principle",
          "Open-closed principle",
          "Liskov Substitution",
          "Interface Segregation",
          "Dependency Inversion",
          "Decouple CSS from HTML",
          "DRY",
          "Immutability",
          "The Separation of concerns",
          "Summary"
        ],
        "OOCSS": [
          "OOCSS introduction",
          "The Media Object",
          "OOCSS concepts",
          "OOCSS standards"
        ],
        "BEM": [
          "BEM",
          "Benefits of using BEM",
          "BEM specificity",
          "BEM vs OOCSS"
        ],
        "Overmodulize": [
          "Overmodulize",
          "Overmodulize is (not) good"
        ],
        "The missing piece - ITCSS": [
          "ITCSS",
          "Layers and Specificity Graph",
          "Inverted Triangle",
          "Folder structure and naming convention",
          "Summary"
        ]
      },
      "requirements": [
        "good CSS knowledge",
        "it would be easier to follow the course if you are familiar with basics of OOP"
      ],
      "description": "CSS is easy, it’s easy to learn, it’s easy to write.\nBut actually, it’s hard to write scalable and maintainable code especially with large projects that require constant scaling…\nThere are many reasons why this is the case:\n- In CSS everything is in a global scope. Any change in one file can cause an (un)expected result in another element, or page.\n- CSS is a highly mutable language, because of it's cascade nature. Each mutation leads to confusion and unexpected results.\n- CSS highly depends on the source order.\n- On the other hand, specificity can undo everything. It doesn't matter how you structure your code, specificity can break everything. Specificity is one of the biggest problems of CSS.\n- CSS is not (easily) scalable\n\n\nWe end up in a cycle of writing more CSS just to fix the old CSS! At some point our whole CSS code becomes too messy and too large. We need a better approach, we need a modular and predictable CSS. CSS language has not evolved since 1998. There are preprocessors, but they are not solving the main CSS issues. After all, SASS and Less are compiling to CSS.\n\n\nIn this course, we will talk about the CSS architecture, and how to write clean and maintainable code. Our goal is to write CSS that should be:\n- Predictable: CSS rules behave as we expect them to.\n- Reusable: When adding new components, we shouldn't need to recode patterns or problems we've already solved.\n- Maintainable: New features, components, or updates shouldn't require refactoring our CSS and should NOT break existing components.\n\n\nThe idea is taking the OO philosophy you already learned in Java, PHP, C# and finding a way to translate that into CSS as well. All that you learned in OOP languages, all the DRY principles, SOLID, SRP, immutability we can apply to CSS in some way. Simple is the best.\nThere are many advanced courses about CSS, about flexbox, CSS animations, CSS grid… However, in this course, we will be focusing on the architecture of CSS. If you are interested in learning how to write clean and scalable CSS code, this course is the right thing for you!\nThis is a course I wish I had when I started working on more complex projects.",
      "target_audience": [
        "Medior/Senior Front End developers",
        "Anyone who wants to write clean and scalable CSS code",
        "Anyone who knows CSS but wants to dive deeper"
      ]
    },
    {
      "title": "The Typescript you need for ReactJS With Projects",
      "url": "https://www.udemy.com/course/the-typescript-you-need-for-reactjs-with-projects/",
      "bio": "A beginners Typescript essentials guide in order to fully understand ReactTS",
      "objectives": [
        "Write and Compile Typescript Code",
        "Use Typescript to Build Javascript Applications",
        "Use TypeScript Types and Interfaces to Improve Code Quality, Readability, and Maintainability",
        "Set up React Projects with TypeScript",
        "Use TypeScript with React components",
        "Build React Applications with TypeScript",
        "Convert existing React Apps to Typescript Apps",
        "Catch Errors with Typescript",
        "Write Code Logic with Typescript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Typescript and why use it",
          "The Javascript you need for React (or Vue, Angular, Node)",
          "Setup"
        ],
        "Core Typescript Features + Projects: WHAT YOU NEED": [
          "MUST READ: HOW TO SETUP PROJECTS",
          "Hello World",
          "Types - Counter App",
          "Arrays - Autocars App",
          "Tuples",
          "Objects, Types and Interfaces",
          "Enums",
          "Functions and Union Types"
        ],
        "Typescript with React + Project": [
          "MUST READ: HOW TO SETUP PROJECT",
          "Typescript - React: HelloWorld",
          "JSX and Components",
          "Header UI",
          "Hooks and Props",
          "Product UI",
          "Searching Functionality",
          "Product Popup"
        ],
        "Convert React Project to Typescript": [
          "Convert React to Typescript"
        ],
        "What Next?": [
          "Do this"
        ]
      },
      "requirements": [
        "Little experience in Javascript",
        "Little experience in HTML",
        "Little experience in CSS",
        "Little or No experience with React"
      ],
      "description": "WHAT YOU'LL LEARN\n\nWrite and compile Typescript code\nUse Typescript to Build Javascript Applications\nUse TypeScript Types and Interfaces to Improve Code Quality, Readability, and Maintainability\nSet up React Projects with TypeScript\nUse TypeScript with React components\nBuild React Applications with TypeScript\nConvert existing React Apps to Typescript Apps\nCatch Errors with Typescript\nWrite Code Logic with Typescript\n\n\nWHAT IS THIS COURSE?\nTypeScript is a typed superset of JavaScript that compiles to plain JavaScript. TypeScript adds optional static typing to JavaScript, providing better tooling support at any scale. TypeScript is a free and open-source language developed and maintained by Microsoft.\nTypeScript is a great choice for building large applications with JavaScript. It can help you catch errors early, improve code readability, and make your code more maintainable. TypeScript is also a good choice for projects that need to be shared with developers who are not familiar with JavaScript.\nHere are some specific examples of how TypeScript can benefit your projects:\nCatch errors early: TypeScript's type system can help you catch errors early before they cause problems at runtime. For example, if you try to call a method on an object that doesn't have that method, TypeScript will give you an error. This can help you avoid bugs and headaches down the road.\nImprove code readability: TypeScript's type system can help you improve the readability of your code by making it clear what types of data are being used. For example, if you have a variable that is declared as a string, TypeScript will know that you can only assign strings to that variable. This can help you avoid errors and make your code easier to understand.\nIncrease code maintainability: TypeScript's type system can help you increase the maintainability of your code by making it easier to understand and update. For example, if you need to change the type of a variable, TypeScript will automatically update all of the code that uses that variable. This can save you a lot of time and headaches.\nCreate shared codebases: TypeScript can be used to create shared codebases with developers who are not familiar with JavaScript. This is because TypeScript compiles to plain JavaScript, so developers who don't know TypeScript can still run and debug TypeScript code.\nOverall, TypeScript is a powerful language that can help you build better JavaScript applications. If you're looking for a way to improve the quality, readability, and maintainability of your JavaScript code, then TypeScript is a great option, very good, see you in our next lesson.",
      "target_audience": [
        "Beginner Javascript Developer who wants to get into Typescript",
        "Beginner React developers willing to start learning React Typescript",
        "Experienced React developers willing to start learning Typescript",
        "Beginner Typescript developers",
        "Experienced Typescript developers can take it as a refresher"
      ]
    },
    {
      "title": "Python Fullstack Mastery: Build Modern Web Apps with Django",
      "url": "https://www.udemy.com/course/python-fullstack-mastery-build-modern-web-apps-with-django/",
      "bio": "Master Fullstack Development with Python, Django, PostgreSQL, and Flet – Build Scalable & Dynamic Web Apps",
      "objectives": [
        "Develop end-to-end web applications using Django for the backend, PostgreSQL for database management, and Flet for the frontend",
        "Learn to create dynamic web applications, implement authentication systems, develop RESTful APIs, and leverage Django’s ORM, middleware, and security features",
        "Understand relational database design, write complex queries, and integrate PostgreSQL seamlessly with Django applications for efficient data management",
        "Secure applications with user authentication, role-based access control",
        "Create fully interactive, visually appealing, and responsive UIs using Flet, without the complexity of traditional web technologies.",
        "Implement API communication between Django and Flet, manage data efficiently, and handle user interactions smoothly.",
        "Gain hands-on experience with version control , debugging techniques, API integration, and software development methodologies used in professional environment",
        "Work on Real-World Fullstack Projects",
        "Gain the Confidence to Build & Maintain Fullstack Applications"
      ],
      "course_content": {
        "Introduction to Fullstack Development with Python": [
          "Welcome !!!",
          "Downloading course resources & materials",
          "Frontend Development Overview, Tools & Technologies",
          "How does the frontend communicate with backend ?",
          "The server-side",
          "Why Python for Fullstack?",
          "Introduction to Django, PostgreSQL & Flet",
          "Setting Up Your Development Environment"
        ],
        "Introduction to Databases": [
          "Introduction to Relational Databases",
          "What is PostgreSQL?",
          "Downloading and installing PostgreSQL (Windows, Mac, Linux)",
          "Working with pgAdmin",
          "Inserting Data",
          "Querying Data",
          "Updating and Deleting Records",
          "Relationships"
        ],
        "Introducing Django framework": [
          "Introduction to Django & MVC Architecture",
          "Writing your first Django App",
          "Writing your first view",
          "Database setup",
          "Running the migrate command",
          "Creating & Activating models",
          "Playing with the API",
          "Introducing the Django Admin",
          "Writing more views",
          "Write views that actually do something part 1",
          "Write views that actually do something part 2",
          "Raising a 404 error",
          "Use the template system",
          "Removing hardcoded URLs in templates",
          "Namespacing URL names"
        ],
        "Working with forms & Static files": [
          "Write a minimal form",
          "The results page",
          "Use generic views: Less code is better",
          "Django MVC mastery free guide"
        ],
        "Psychology of Programming": [
          "The Developer’s Mindset",
          "Programming is Not Memorization",
          "Becoming a Confident Developer"
        ],
        "Building APIs with Django REST Framework - Views & Serializers": [
          "Section goals!",
          "Designing e-examination system entity-relationship diagram",
          "Introduction to Django REST Framework",
          "Getting started with DRF!",
          "Creating serializers - Course & Exam serializers",
          "Json Response",
          "Serializers - GET Request",
          "Serializers - POST, PUT, DELETE Request",
          "Status Codes",
          "APIView class",
          "Field & class level validation",
          "Custom Validation",
          "Serializer Fields and core Arguments",
          "Creating exams views & route",
          "Model Serializer",
          "ExamQuestion View",
          "SerializerMethod Field",
          "Serializers relations",
          "Nested Serializers",
          "HyperLinked Model Serializer",
          "GenericAPIView and Mixins",
          "Concrete View Classes",
          "Overwrite Queryset",
          "Viewsets, ModelViewSets and Routers"
        ],
        "Building APIs with Django REST Framework - Authentication & Authorization": [
          "Introduction to Authentication",
          "Authentication in Django rest framework",
          "Creating the Accounts App",
          "Creating Admins and Students models",
          "Fixing migration issues",
          "Creating accounts app serializers",
          "Refactoring & Testing project",
          "Authentication VS Authorization",
          "Basic Authentication",
          "Creating accounts app Views",
          "Token Authentication",
          "Account app walkthrough & restructing plans",
          "Improving the signup process",
          "Testing API with Postman",
          "JWT Authentication",
          "Permissions in Django rest framework",
          "Custom Permissions",
          "What is Throttling ?",
          "Throttling in Django rest framework"
        ],
        "Building APIs with Django REST Framework - Filtering, Searching, Ordering": [
          "Creating ExamAttempt, StudentAnswer & results Models",
          "Creating ExamAttempt, StudentAnswer & results Views/Serializers",
          "Filtering Introduction",
          "DjangoFilterBackend & SearchFilter",
          "OrderingFilter",
          "Pagination",
          "PageNumber, LimitOffset Pagination"
        ],
        "Building APIs with Django REST Framework - API Documentation": [
          "Why is API Documentation important ?",
          "Using postman for documentation",
          "Using drf-spectacular for documentation"
        ],
        "Frontend Development with Flet - Layout": [
          "What is Flet? Why Use It Over HTML/CSS/JavaScript?",
          "Building your first flet app",
          "Page",
          "Pagelet",
          "View",
          "Card",
          "Row",
          "Column",
          "Responsiveness",
          "Responsive Row",
          "Container & Stack",
          "Tabs",
          "ListView",
          "ListTile",
          "GridView",
          "Installing flet stable release",
          "DataTable",
          "Dismissable",
          "ExpansionPanelList",
          "PlaceHolder",
          "ReorderableListView"
        ]
      },
      "requirements": [
        "Basic Python Programming Skills",
        "A Willingness to Learn and Build Projects",
        "A personal computer & stable internet connection"
      ],
      "description": "This course is designed for developers who want to build fullstack web applications using only Python, without the complexity of JavaScript, HTML, or CSS. By leveraging Django for backend development, PostgreSQL for database management, and Flet for frontend design, you will learn how to create modern, scalable applications efficiently.\nThe course begins with Django, where you will learn to build dynamic web applications, implement authentication systems, and develop RESTful APIs. You will gain hands-on experience with Django's ORM, middleware, and security features. The database section covers PostgreSQL, teaching you how to design and optimize relational databases, write complex queries, and integrate them seamlessly with Django applications.\nOne of the most exciting aspects of this course is Flet, a powerful framework that allows you to build frontend applications directly in Python. Unlike traditional web development frameworks, Flet eliminates the need for JavaScript, HTML, or CSS while providing a fully interactive and visually appealing user interface. You will learn how to design responsive UIs, handle user interactions, and connect your frontend to a Django-powered backend.\nThroughout the course, you will build real-world projects to reinforce your skills. You will learn best practices for API integration, user authentication, security, and deployment to cloud platforms. The course also covers software development methodologies, version control, and debugging techniques to prepare you for professional development environments.\nBy the end of this course, you will have the knowledge and confidence to build, deploy, and maintain fullstack web applications using Python. Whether you are a beginner looking to start a career in web development or an experienced developer seeking to expand your skill set, this course provides a comprehensive and practical approach to modern fullstack development.",
      "target_audience": [
        "Python developer interested in web & mobile development",
        "Python developer interested in backend development",
        "Python developer who wants to build his/her confidence in development"
      ]
    },
    {
      "title": "WordPress Mastery 2024 : Turn Your Blog into Income",
      "url": "https://www.udemy.com/course/wordpress-mastery-turning-your-blog-into-a-revenue-machine/",
      "bio": "Learn How To Earn Money Running Blog | Use AI Tools To Blog | SEO Tips | Best Plugins | Social Media Strategies",
      "objectives": [
        "How To Install Wordpress on Domain",
        "How To Get URL",
        "How To SetUp Blog For Most Success",
        "How To Add Website Domain To Google, Bing, and Yahoo",
        "How To Setup Blog For Passive income Strategies",
        "How To Monetize Online Blogs and Websites",
        "How To Use ChatGPT TO IMPROVE BLOG",
        "How To Use Strategies For Online Marketing Using ChatGPT"
      ],
      "course_content": {},
      "requirements": [
        "Students should have PC/Mac",
        "Students will need WiFi Connection",
        "Students will need to download WordPress"
      ],
      "description": "I am a Teacher for 20 Years and have been blogging for over 15 years.  Need help feel free to reach out to me\n\"WordPress Mastery: Turning Your Blog into a Revenue Machine\" is a dynamic course structured to empower bloggers and digital entrepreneurs with the skills to monetize their WordPress sites effectively. Here's what the course offers in a concise, list format:\nWordPress Fundamentals: Understanding the basics of WordPress, including theme selection, customization, and setting up a user-friendly, professional-looking blog.\nAdvanced Features and Plugins: Delving into the more sophisticated aspects of WordPress to enhance functionality and user experience, crucial for monetization.\nE-commerce Integration: Learning how to incorporate e-commerce elements into your blog, enabling direct sales and revenue generation.\nAdvertising and Monetization Techniques: Exploring various methods of blog monetization, such as integrating advertising platforms and understanding their optimization.\nSEO Strategies: Implementing Search Engine Optimization to increase site visibility, attract more traffic, and boost potential earnings.\nContent Creation and Management: Developing effective content strategies that engage readers and encourage repeat visits, a key factor in driving revenue.\nAffiliate Marketing: Mastering the art of affiliate marketing within the WordPress environment to create additional income streams.\nAnalytics and Performance Tracking: Utilizing analytics tools to track blog performance, understand audience behavior, and refine monetization strategies accordingly.\nSocial Media Integration: Learning how to effectively link your blog with social media platforms for wider reach and increased traffic.\nSustainable Revenue Growth: Focusing on long-term strategies for maintaining and growing blog revenue sustainably.\nThis course is designed to be hands-on and practical, ensuring that by the end, participants will have a fully optimized, revenue-generating WordPress blog.",
      "target_audience": [
        "Anyone Trying To Setup Blog",
        "Anyone Who Wants To Earn Money From Home",
        "Anyone Who Wants To Learn WordPress",
        "Anyone Trying To Learn To Build Website using ChatGPT for the code"
      ]
    },
    {
      "title": "OpenAI APIs with Node.js: Building Next-Generation Web Apps",
      "url": "https://www.udemy.com/course/openai-apis-with-nodejs-building-next-generation-web-apps/",
      "bio": "Exploring GPT, DALL-E, Whisper in Node.js: Crafting REST APIs and Building Webpages with ChatGPT (Updated May 2024).",
      "objectives": [
        "Understanding of OpenAI API Interaction with Node JS",
        "Development of AI-Enhanced Web Applications",
        "Efficient Web Development Using AI",
        "Adapting to Evolving AI Technologies"
      ],
      "course_content": {},
      "requirements": [
        "Good Command of JavaScript: Particularly, a strong understanding of Objects and Promises is essential as we'll be working extensively with JavaScript to create our application.",
        "Basic Nodejs Knowledge: Familiarity with Nodejs basics is expected, as we'll be building a Nodejs application to integrate with the OpenAI API.",
        "Basic Knowledge of Express Framework: Having a basic understanding of the Express framework will be beneficial as we'll convert our Nodejs app into an Express server for creating JSON APIs.",
        "Knowledge of REST APIs and HTTP: Understanding RESTful APIs and HTTP request/response concepts is necessary as we will expose our applications as REST APIs."
      ],
      "description": "Course Overview:\nWelcome to \"OpenAI APIs with Node.js,\" a comprehensive course that teaches you how to combine the powerful capabilities of OpenAI with the versatility of Node.js. While many courses emphasize AI integration with Python, we are pioneers in highlighting the union of OpenAI's advanced models with Node.js, bringing AI's potential to robust and scalable web applications.\n\n\nUPDATED MAY 2024\n\n\nWhy Node.js for OpenAI Integration?\nOver the past 30 years, AI research has advanced rapidly, with Python becoming the dominant language for experiments and demos.\nAs AI innovations transition to production-grade applications, the limitations of Python in areas like concurrency, security, performance, and user-friendliness become evident.\nLegacy systems, many of which use other tech stacks, need to harness new AI advancements.\nOpenAI's provision of a Node.js SDK demonstrates a recognition of this gap, and our course fills the educational void with an emphasis on using Node.js for AI-driven applications.\nCourse Structure:\nGetting Started:\nAI, ML & OpenAI models overview.\nIntroduction to the OpenAI platform.\nSetting up the prerequisites.\nOpenAI API Fundamentals:\nSetting up your OpenAI account.\nInstalling and authenticating with the OpenAI Node.js library.\nUnderstanding OpenAI models and their utilities.\nCreating APIs with Express and integrating with the frontend.\nDiving deep into the capabilities of OpenAI models like ChatGPT, DALL-E, and Whisper.\nPROJECTS:\nEmotion Analyzer: Your personal AI assistant to understand sentiments behind texts.\nChatGPT Clone: Harness the power of gpt-3.5-turbo for natural, human-like interactions.\nFridge Chef: Your AI chef that recommends meals based on your available ingredients.\nYouTube Insights: Extract valuable insights from YouTube videos using transcription, translation, and keyword generation.\nSemantic Search: Upgrade your search capabilities with context-aware, precise results.\nRequired Skills:\nTo excel in this course, ensure you're equipped with:\nProficiency in JavaScript, especially Objects and Promises.\nBasic familiarity with Node.js and Express framework.\nUnderstanding of RESTful APIs and HTTP concepts.\nDevelopment Approach:\nExperimenting with Node.js: Kickstart by interacting with OpenAI APIs directly via command-line executions to grasp the basics.\nCreating REST APIs with Express: Transition your applications into web solutions, exposing their features as REST APIs, tested using Postman.\nGenerating Web Pages with ChatGPT: Innovate by letting ChatGPT assist in web page development, showcasing AI's potential in revolutionizing traditional development practices.\n\n\nWhy This Course?\nThis course is more than just a tutorial—it's an invitation to the future of web development, where AI plays an integral role. With a thorough breakdown of both OpenAI's capabilities and Node.js's robustness, we're offering you the tools to build next-generation web applications. As with all emerging technologies, the state of OpenAI APIs is continuously evolving. Recognizing this, we pledge to keep this course updated, aligning with the latest advancements and best practices in OpenAI APIs. So, rest assured that by enrolling, you're securing a resource that will remain relevant, making this the only course you'll ever need on OpenAI APIs with Node.js.",
      "target_audience": [
        "Web Developers: Those with a foundation in web development, particularly in the JavaScript/Node js realm, looking to expand their skill set by integrating AI functionalities into their applications.",
        "AI Enthusiasts: Individuals passionate about artificial intelligence, desiring to understand its practical applications in the real-world web environment.",
        "Tech Entrepreneurs: Those aspiring to create next-gen applications or services can benefit from understanding how AI can be harnessed in web platforms to offer novel and competitive solutions.",
        "Students & Educators: Anyone in academia wanting a comprehensive overview of AI's role in web development, offering both theory and hands-on experience."
      ]
    },
    {
      "title": "Create a business website with WordPress",
      "url": "https://www.udemy.com/course/create-a-business-website-with-wordpress/",
      "bio": "Complete guide on creating a Business Website in WordPress. A premium theme is included!",
      "objectives": [
        "Create a business website in WordPress",
        "Know how to work with themes in WordPress",
        "Know all options the Divi Theme has to offer",
        "Create a complete website in a few hours",
        "Save tons of money spending on webdesigners"
      ],
      "course_content": {},
      "requirements": [
        "Basic WordPress knowledge is required",
        "Basic computer skills",
        "A place where you can install wordpress (A hosting package or a local server)"
      ],
      "description": "Ever wondering how those beautiful website out there are created? Do all your competitors or fellow business owners use fancy and expensive agency to do that? The answer is no.\nWordPress provides you with all you need to create a stunning business website. Themes are around for many years now but every day more people use these themes. With a theme you get a professional, well supported and fully functional website design with lots of extras. With these theme you can create a professional looking website on your own.\nThis course includes a premium $69 dollar theme for free. With this theme you can get started right away. So no need for extra expenses. Just sign-up for this course, learn how to create a stunning website and build that website for you business right away.\n\nThe course will teach you how to do this in just two and a half hours.\nWordPress is a classical CMS (Content Management System) that has been around for ages. With WordPress you can create a lot more that just a Blog. We can create business pages, online applications and online stores. The big companies in the world start using WordPress. Due to its opensource character and its many extension possibilities you can do almost everything in WordPress.\n\nThemes expand the possibilities of WordPress on the look&feel axis. With a theme you cane customize the look and feel, and most themes offer extra functionality as well. For example contact forms, banners, sliders or other cool looking features for your website.\nGet enrolled today and take advantage of this unique deal. Udemy offers you a 30 day money back guarantee, no questions asked.",
      "target_audience": [
        "This Course is created for business owners and starting webdesigners. With this course you will be able to create a beautiful website for your own business or for somebody else."
      ]
    },
    {
      "title": "PHP Web Design Bootcamp with MySQL and PostgreSQL Database",
      "url": "https://www.udemy.com/course/php-web-development-for-beginners-master-essentials-of-php/",
      "bio": "Master the Essentials of PHP Programming. You also get Complete MySQL and PostgreSQL Bootcamp to Master Database Design",
      "objectives": [
        "Master fundamental concepts in Web Development",
        "Introduction to PHP: Learn the basics of PHP and set up your environment.",
        "Building PHP Code: Write your first PHP code and embed HTML seamlessly.",
        "Mastering PHP Fundamentals: Understand variables, data types, strings, math operators, arrays, and associative arrays",
        "User Interaction: Accept and process user inputs, calculate results, and use GET/POST methods effectively.",
        "Control Structures: Leverage if-else statements, switch cases, loops, and comments for dynamic programming.",
        "Advanced PHP Concepts: Work with classes, objects, constructors, inheritance, functions, and return statements to create modular and reusable code."
      ],
      "course_content": {
        "Introduction to PHP Web Development Fundamentals": [
          "Setup of PHP",
          "Setup of Text Editor",
          "First PHP Code",
          "Write HTML inside PHP code"
        ],
        "Basic PHP Syntax": [
          "Variables",
          "Data Types",
          "Strings",
          "Math Operators",
          "Comments in php"
        ],
        "User Inputs in PHP": [
          "How to accept User Input in PHP",
          "Calculate User Inputs"
        ],
        "URL and Method in PHP": [
          "URL Parameter",
          "GET and POST"
        ],
        "Arrays in PHP": [
          "Introduction to Arrays",
          "Checkboxes",
          "Associative Arrays"
        ],
        "Functions in PHP": [
          "Introduction to Functions",
          "Return Statement"
        ],
        "Decision Making Statements in PHP": [
          "If Else Statement",
          "If Else Statement Continue",
          "Calculator with User Input",
          "Switch Statement"
        ],
        "Loop Systems in PHP": [
          "While Loop",
          "do while loop",
          "For Loop"
        ],
        "Introduction to include functions in PHP": [
          "include HTML",
          "include php"
        ],
        "Object Oriented Programming in PHP (OOP)": [
          "Introduction to Class and Objects",
          "Constructors",
          "Object Functions",
          "Getters and Setters",
          "Inheritance",
          "Congratulations! Never Stop Learning..."
        ]
      },
      "requirements": [
        "A computer (Windows/Mac/Linux) with internet only",
        "HTML coding experience is needed"
      ],
      "description": "Welcome to \"PHP Web Development for Beginners\"! This course is designed to guide you step by step through the fundamentals of PHP, helping you master the essential skills required for creating dynamic, data-driven websites. Whether you're completely new to web development or have some basic knowledge, this course will provide you with the necessary tools and knowledge to develop PHP-based websites from the ground up. You'll learn how to write PHP code, work with user inputs, create interactive features, and dive into more advanced concepts such as object-oriented programming.\nCourse Outline:\nModule 1: Introduction to PHP\nWhat is PHP?\nOverview of PHP as a server-side scripting language.\nWhy PHP is popular for web development.\nExploring PHP's role in building dynamic websites.\nSetting Up Your PHP Environment\nSetting up a text editor (Atom, VSCode, Sublime Text, etc.).\nUnderstanding the basic folder structure for PHP projects.\nCreating Your First PHP Script\nWriting your first \"Hello, World!\" script.\nUnderstanding the structure of a PHP file and how to run it in the browser.\nModule 2: Building PHP Code\nEmbedding PHP within HTML\nWriting PHP inside an HTML document.\nUnderstanding how PHP and HTML work together.\nCreating Dynamic Content with PHP\nOutputting data using echo and print statements.\nDisplaying content dynamically based on conditions or user input.\nPHP Tags and Syntax\nUsing <?php ?> tags to write PHP code.\nPHP closing tag ?> and omitting it.\nModule 3: Mastering PHP Fundamentals\nVariables and Data Types\nDefining and using variables in PHP.\nUnderstanding PHP's data types: strings, integers, floats, booleans.\nWorking with Strings and String Functions\nConcatenating strings.\nString manipulation functions like strlen(), substr(), and str_replace().\nMath Operators\nPerforming mathematical operations in PHP.\nUsing +, -, *, /, and modulus operator %.\nArrays and Associative Arrays\nDefining and working with indexed arrays.\nAssociative arrays: defining key-value pairs.\nIterating over arrays with loops.\nModule 4: User Interaction\nHandling User Input\nAccepting user input from forms using GET and POST methods.\nValidating and sanitizing user input.\nDisplaying feedback to the user based on their input.\nWorking with Forms\nCreating HTML forms to collect data.\nUsing PHP to process form data and output results dynamically.\nPractical Example:\nBuilding a simple calculator or form-based application.\nModule 5: Control Structures\nIf-Else Statements\nWriting conditional statements to control the flow of your PHP code.\nUsing else, elseif, and else if for multiple conditions.\nSwitch Case Statements\nUsing switch for handling multiple conditions more efficiently.\nLoops\nfor, while, and foreach loops to repeat code and iterate through arrays.\nComments\nWriting single-line and multi-line comments for better code readability.\nDocumenting your code effectively for future reference.\nModule 6: Advanced PHP Concepts\nObject-Oriented Programming (OOP) Basics\nIntroduction to classes and objects.\nCreating a simple class and instantiating objects.\nConstructors and Destructors\nWhat are constructors and destructors in PHP?\nUsing them to initialize and clean up object data.\nInheritance and Polymorphism\nUnderstanding how inheritance allows classes to share methods and properties.\nUsing parent and child classes effectively.\nPHP Functions\nDefining and calling functions in PHP.\nUnderstanding function parameters and return statements.\nUsing built-in PHP functions.\nCreating Modular and Reusable Code\nStructuring your PHP code to be modular.\nReusing code with functions and classes.\nIntended Audience:\nBeginner Web Developers: If you're looking to kickstart your career in web development and want to learn how to use PHP to build dynamic websites and applications, this course is for you!\nAspiring PHP Developers: Whether you’re familiar with other programming languages or completely new to coding, this course will provide the foundational skills you need to begin developing with PHP.\nStudents & Professionals: This course is ideal for students, professionals, or anyone looking to upgrade their web development skills and add PHP to their toolset.\nSelf-learners: If you’re someone who prefers to learn at your own pace, this course will guide you through the essentials of PHP and make you comfortable with its most commonly used features.\nCourse Benefits:\nMaster PHP Fundamentals: Gain a deep understanding of PHP’s core concepts, from basic syntax to advanced object-oriented programming (OOP).\nReal-World Web Development Skills: Learn to create dynamic, interactive websites by handling user input, processing data, and displaying it seamlessly.\nHands-On Experience: Work on practical exercises that reinforce your understanding, including building a simple web form, a calculator app, and PHP-based applications.\nStructured Learning Path: Follow a step-by-step approach that guides you through the essentials without overwhelming you with unnecessary complexity.\nConfidence to Build Projects: By the end of the course, you'll be able to build basic web applications using PHP and confidently implement features like forms, loops, conditionals, and object-oriented techniques.\nCareer Ready: Gain the skills needed to apply for junior PHP developer roles, build your own projects, or further enhance your development toolkit.\nEnroll now to start your journey into PHP web development and unlock the full potential of dynamic web applications!",
      "target_audience": [
        "Developers who want to learn REAL industry skills to get hired as a web developer and earn a higher salary",
        "This course is for anyone who wants to learn about web development, regardless of previous experience",
        "Anyone who wants to learn backend development"
      ]
    },
    {
      "title": "Sentiment analysis for chatbots - DialogFlow, IBM Watson",
      "url": "https://www.udemy.com/course/sentiment-analysis-for-chatbots/",
      "bio": "Sentiment analysis for a chatbot with Google DialogFlow, IBM Watson, AFINN. Sensitive chatbot with sentiment analysis",
      "objectives": [
        "How sentiment analysis can benefit a chatbot",
        "Common implementations scenarios for a chatbot",
        "Use DialogFlow's sentiment analysis to make chatbot emotionally sensitive. You'll have a chatbot that can read the sentiment of the user's message and act on it",
        "Learn how to use IBM Watson for sentiment analysis",
        "Learn how to use AFINN sentiment analysis"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of nodejs programming language",
        "Knowledge of GIT"
      ],
      "description": "In this course, you'll learn how to implement a sentiment analysis to a chatbot. You will teach your bot how to be emotionally sensitive. And most urgently how to spot a frustrated user and save the day.\n\n\nIn the course, we'll be working with my code from the messenger chatbot course. Even if you did not take that course, you'd be able to take the code and work with it.\n\n\nWe'll use Node.js for programming and GIT for deploying and version control. The bot will is hosted on Heroku, but you can simply host it anywhere else where they support Node.js. We'll use DialogFlow to process natural language. DialogFlow will help us understand what users want.\n\n\nIn the process, you'll learn how sentiment analysis works behind the scenes and how to implement sentiment analysis to a chatbot.\n\n\nIn the first section, we'll take an overview of the app infrastructure and get familiar with the tech stack, which is the technology used in this course.\n\n\nThe second section will introduce you to Sentiment analysis, what is it and how it can benefit a chatbot. We'll look at common implementation scenarios in a chatbot.\nDo you want to know the difference between the rule-based approach and automatic approach with machine learning? We'll go through examples of both and make a little demo for each. You'll get familiar with dictionary-based solution AFFIN and Google's natural language API and IBM Watson natural language solution. I will gently introduce you to the algorithms they use and how they work. So you know how things work inside that black box.\n\n\nThen in the third section, we start implementing a dictionary-based sentiment analysis. We'll use my chatbot as a sample. First, I'll give you an overview of the code and show you where and how to get a sentiment result for the user message. Then we'll create a sentiment analysis module and teach a bot how to route to live agent upon identifying a super frustrated user. We'll also teach a chatbot to be sensitive to sentiment change and intervene when it detects user's experience satisfaction is decreasing. And then I'll give you another candy. I'll show you how to send a notification to Slack when a frustrated user comes along.\n\n\n\n\nWhen you know how to implement a dictionary-based solution, we'll move to a machine learning solution. And that is what we'll do in section 4. One of the best is Google's natural language solution. We will do the full implementation into a chatbot.\nAnd in this demo, we'll use a chatbot from my previous course. You'll get the source code and will be able to work with it even if you did not take that course.\n\n\n\n\nAfter the course, you'll have a demo bot with built-in sentiment analysis and knowledge of how to implement it into your chatbot.\n\n\n\n\nTo make it easier for you I've added git commits with changes to every video that has a change in the code. This way, you can compare your code to mine. And you won't lose time debugging. And remember for any questions I'm available in the Questions and answers. You are not alone.\nAnd remember, I'LL BE THERE FOR YOU.\n\n\n\n\nMy name is Jana, and I'll be your instructor in this course. I'm a web engineer with 20 years of programming experience. I'm also an IT instructor teaching people new tech skills. Over 17000 people are already taking my course.\nI help all my students at every step of development. And I'll be here for you!\n\n\n\n\nAt the end of the course, you'll have a chatbot that can read the sentiment of the user's message and act on it. Wait no longer. Take the course and make your chatbot even better.\nSee you in the course!\nJana",
      "target_audience": [
        "chatbot owners that want to improve chatbot performance"
      ]
    },
    {
      "title": "Vue JS 3, React JS & Angular - Guide to Popular Frameworks",
      "url": "https://www.udemy.com/course/vue-js-3-react-js-angular-guide-to-popular-frameworks/",
      "bio": "Understand basics and difficult parts of the 3 most popular frameworks - React JS, Angular and Vue. All in one course!",
      "objectives": [
        "Most popular web frameworks -> React, Angular & Vue JS",
        "Features explained on practical examples",
        "Base and core concepts of the three most popular frameworks"
      ],
      "course_content": {
        "Introduction": [
          "Course Preview",
          "How to get help",
          "Environment setup",
          "Setting up folders"
        ],
        "[React] - Basics": [
          "React setup",
          "Hello world app",
          "JSX Introduction",
          "Functional component",
          "Class component",
          "State in class component",
          "State debugging in the class",
          "Arrow function",
          "State in functional component",
          "Props",
          "Lifecycle functions",
          "Clean and recap"
        ],
        "[React] - Under the hood": [
          "Append child",
          "How application is loaded"
        ],
        "[React] - Application getting shape": [
          "Initial layout + Bootstrap",
          "Moving layout to components",
          "Initial resource list",
          "Add new resource",
          "Toggle detail view",
          "Toggle refactoring",
          "Select resource",
          "Active item",
          "Active item improvements"
        ],
        "[React] - Working with real data": [
          "Api server",
          "Api request",
          "Proxy request",
          "Get resources from API",
          "Provide resource to update",
          "Change value of input",
          "Select input",
          "Resource form component",
          "Update resource API request",
          "Update resource list",
          "Set resource when changing update view",
          "Starting with alert",
          "Display error - function",
          "Reset alert",
          "Clear timeout",
          "Small alert issues",
          "withAlert HOC",
          "Alert is done",
          "Delete resource API",
          "Delete resource from state",
          "Delete improvements"
        ],
        "[React] - Routing + Search": [
          "Routing",
          "Links",
          "Resource detail page",
          "Create new resource",
          "Create resource - more uses cases",
          "Get resources - hook function",
          "Hook function fixes",
          "Resource detail page, get data",
          "Resource detail fixes",
          "Search resources",
          "Refetch resources",
          "Debounce",
          "Resource Form Fix"
        ],
        "[React] - Prod changes & Deploy": [
          "Modal",
          "Settings form",
          "Context part 1",
          "Context part 2",
          "Settings provider",
          "Theme styles",
          "Heroku CLI",
          "Prod Server",
          "Server merge",
          "Testing + End"
        ],
        "[Vue] - Basics": [
          "Vue init",
          "Folder structure",
          "Vue component",
          "Counter",
          "Counter view",
          "Props",
          "Custom events",
          "Event warning + Scss"
        ],
        "[Vue] - Under the hood": [
          "Insert before",
          "How Vue JS is loaded"
        ],
        "[Vue] - Application getting shape": [
          "Init layout + Bootstrap",
          "Moving to components",
          "Resource data",
          "V-for iteration",
          "Computed vs method",
          "Toggle the view",
          "Add resource",
          "UX Improvements",
          "Select resource",
          "Active item"
        ]
      },
      "requirements": [
        "Basic JS or any programming language knowledge"
      ],
      "description": "Understand basics and difficult parts of the 3 most popular frameworks - React, Angular and Vue.\nWhat is Vue JS, React JS, Angular ?\nThey are javascript frameworks. React is a library.\nWhat is Framework(FW)/ Library ?\nEnvironment, set of tools and guide lines build on top of the programming language(JS in case of this course). FW exposes functionalities, handles lifecycle of the application and defines set of rules how application should be written in order to follow best FW practices.\nEvery framework is different, but there is one thing they have in common. They are builded on top of JS so if you are familiar with JS you can learn any fro-tend(FE) FW very fast!\nAngular -> Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps.\nReact -> A JavaScript library for building user interfaces\nVue -> (pronounced /vjuː/, like view) is a progressive framework for building user interfaces.\n\n\nWhat are you going to build ?\nIn this course you are going to create application for keeping track of the resources. Resource can be anything on the internet(blog, video, book etc.).\nYou are going to build one application in 3 Frameworks so you will understand and memorize the differences in web application development.\nThis application will have functionalities to create, update and delete the resource. Through the process of creating these features you will learn core concepts of each framework.\nIn first section we will work on most basics concepts by creating simple counter application.\nLater I will explain you how FW works under the hood and how the application is rendered in your browser. You will learn it on wireframes and real examples from FW code it self.\nNext, you are going to integrate very simple layout backed by Bootstrap. You will learn how to manipulate data, how to keep track of them and how to reflect data changes in your application. Every handles data in different fashion.\nIn next sections you will learn how to make an API request to remote server. We will explain what is a proxy and why we need to use a proxy. You will fetch a data from a remote database and use them in your application.\nIn last sections we will talk about the routing. You will create multiple pages and navigation between them. Every framework has a different routing system. I will be explaining more advanced and newest concepts of each FW.\nIn the end you will implement search functionality and I will be explaining patterns how to propagate data to entire application. It will be explained on a feature that can change the application settings.\nAs the last thing we will deploy each application on Heroku platform so you can share your application on internet.",
      "target_audience": [
        "Beginner developers not sure which framework to start working in",
        "More experienced developers looking for a practical guide",
        "Developers wanting to have one guide for every framework"
      ]
    },
    {
      "title": "Basic C# Programming with Visual Studio",
      "url": "https://www.udemy.com/course/visual-studio-the-basic-c-programming-course/",
      "bio": "Take your first step into the world of programming with this beginner course on C#. Become a programmer today!",
      "objectives": [
        "You will have the basic knowledge of C#",
        "Learn how to create basic C# programs",
        "Learn the fundamentals of C# that you will need in any programming career",
        "Acquire useful C# tools that make programming easier"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Visual Studio Download and Install",
          "The IDE Tour and Hello World",
          "String and Char Variables",
          "Number Variables and Math Functions",
          "Real Number Variable Types",
          "Variable and Data Converting",
          "If Statements and Operators",
          "Nested If Statements and Additional Operators",
          "The While Loop",
          "The For Loop",
          "Receiving User Input",
          "Project Discussion",
          "Project Answer",
          "Conclusion"
        ]
      },
      "requirements": [
        "This is a beginner level course. No experience needed. Tools will be attained through course."
      ],
      "description": "Welcome to my Basic course on C# Programming with Visual Studio!\nMy name is Matthew Dewey. I am an experienced programmer, having received several accommodations on programming in my formal education as well as tough several programming languages to thousands of students. My goal is to provide you, the budding programmer, the the knowledge you need on programming in an easy and fun manner. In this course I do just that and with one of the most useful IDEs coupled with the C# programming language.\nC#, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving C# over any other language. Of course, it goes without saying that C# is an excellent language, but do you know what is required of you to start programming C#?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course.\nI help you:\nInstall your IDE\nEstablish fundamental code\nCreate and use variables\nRetrieve user input\nProcess simple data\nas well as BONUS methods and code!\nWhat about Visual Studio? A popular, widely used IDE that many large applications have been created in over the years. Do you know how to use it to its full potential? Well, in this course we will go through several lessons that will help you get comfortable with the IDE as well as more adept at program creation.\nGo no further if you're looking for the course that will guide you into the world of programming! With my course I can guarantee that the knowledge you learn will help you get a head-start in C# programming. I hope you enjoy the course and it helps you on your way into the world of programming!\n\"Programming is a form of art. It is logical creativity!\"",
      "target_audience": [
        "Students wanting to learn Java programming from the beginning"
      ]
    },
    {
      "title": "Unit testing for Vue.js components",
      "url": "https://www.udemy.com/course/unit-testing-for-vuejs-components/",
      "bio": "TDD, unit testing, Vue.js, vitest",
      "objectives": [
        "Vue unit test",
        "Vue component testing",
        "Unit testing with Vue",
        "Different inputs and outputs of a Vue component",
        "Improve your developer skills",
        "Pinia",
        "Vitest",
        "Create Robust app"
      ],
      "course_content": {
        "Create your first test": [
          "Introduction",
          "Setup a new Vue project with Vite",
          "Our first test",
          "@vue/unit-test VS testing-library/vue",
          "shallowMount VS mount"
        ],
        "Different Component Inputs and Outputs": [
          "Differents inputs/ouputs",
          "Prop to external call (native js function call)",
          "Prop to external call (method library call)",
          "Prop to dispatch",
          "Prop binding with child",
          "Prop to rendering",
          "Child event to event",
          "Child event to external call",
          "Child event to dispatch",
          "Child event to binding with child",
          "Child event to rendering",
          "Getter from store to event emission",
          "Getter from store to external call",
          "Getter from store to dispatch",
          "Getter from store to prop binding",
          "Getter from store to rendering",
          "Slots to rendering"
        ],
        "Setup Github workflow with unit test": [
          "The code coverage",
          "Create Github workflow to comment on Pull Request with coverage report",
          "Add threshold for coverage"
        ]
      },
      "requirements": [
        "Knowledge on Vue"
      ],
      "description": "Welcome, everybody! My name is Adrien Haik Martos, and I've been a software engineer for the last 5 years. I mainly work in the front-end using Vue.js as JS framework. In this course, you will learn how to thoroughly test your Vue.js components using Vitest, ensuring coverage for your application, and subsequently deploying it with serenity into production. All the features in the course are implemented using Test-Driven Development (TDD), allowing us to maintain control over our processes. If a bug appears, you can identify and catch it directly within your tests. Only when your tests are green should you begin the development mode to verify that everything is functioning correctly.\nThroughout the course, you will gain insights into the potential inputs and outputs of a Vue.js component. Additionally, we will explore the distinctions between black-box testing and white-box testing. We will delve into setting up Vitest and even create a wrapper factory to establish a global configuration for our wrappers.\nJoin this course to master Vue.js component testing with Vitest, ensuring your app is solid before deploying it smoothly. Learn through Test-Driven Development (TDD) and squash bugs early on. Understand inputs, outputs, and testing types for better coding. Ready to level up? Let's begin! With diligence and practice, you'll become a Vue.js testing expert.",
      "target_audience": [
        "This course is for Vue developer that want to know how to test their components",
        "This course is for Vue developer that want to build more robuts softwares",
        "This course is for Vue developer that want to improve their skills",
        "This course is for Vue developer that want to increase their salary"
      ]
    },
    {
      "title": "Master Meteor - Meteor JS From the Ground up",
      "url": "https://www.udemy.com/course/master-meteor-js/",
      "bio": "Meteor JS from scratch",
      "objectives": [
        "Know about JavaScript Basics, Meteor Basics",
        "Learn How to install Meteor on Windows, Mac OSX and Linux",
        "Build cool new web applications like Dynamic Websites",
        "How to implement Authentication using Meteor Packages",
        "Learn about Routing in Meteor",
        "Learn how to Deploy meteor web applications on Meteor and Amazon EC2 Instance",
        "Learn how to reset database in Development environment"
      ],
      "course_content": {
        "Introduction": [
          "What is Meteor",
          "What this course will cover",
          "Who this course is for",
          "Why use Meteor",
          "Key Technologies in Meteor"
        ],
        "JavaScript Basics": [
          "Introduction",
          "Javascript Variables & Data Types",
          "Operators in JavaScript",
          "Conditional Statements in JavaScript",
          "Loops in JavaScript",
          "Functions & Scope of Variables in JavaScript",
          "Closures in JavaScript",
          "Understanding Objects in JavaScript",
          "Object.Prototype",
          "Code Download"
        ],
        "Understanding Meteor": [
          "How Meteor Works",
          "Understanding Pub/Sub Model",
          "Standard Meteor App Structure",
          "Page updates in Meteor",
          "Installing Meteor",
          "Creating your first Meteor Application",
          "Meteor Package",
          "Using Meteor Packages",
          "Installing Meteor Examples",
          "Code Demo Todos Application",
          "Introduction to Distributed Data Protocol"
        ],
        "Meteor Basics": [
          "Template Inclusion Helpers",
          "#if Helper",
          "#with Helper",
          "#each Helper"
        ],
        "Templates, Collections and Event Handlers": [
          "Introduction",
          "Fitness Tracker",
          "Creating the Fitness Tracker Application",
          "Introducing Templates",
          "Making our Templates Functional",
          "Introducing Collections",
          "Creating Collections",
          "Introducing Event Handlers",
          "Sorting and Limiting a Collection",
          "Managing Auto Publishing of Collections",
          "Code Download"
        ],
        "Authentication, Session & Server Side of Meteor": [
          "Introduction",
          "Implementing Authentication using Meteor Packages",
          "Implementing Google Sign-in",
          "Exploring {{> loginButtons }} and {{ currentUser }}",
          "Associating Users and Data",
          "Multi User Support",
          "Understanding Sessions",
          "Computations",
          "Server Methods",
          "Performing CRUD Operations",
          "Code Download"
        ],
        "Bootstrap, Favicon and Exploring Shadow DOM": [
          "Bootstrap, Favicon and Exploring Shadow DOM",
          "Code Download"
        ],
        "Refactoring Our Application": [
          "Refactoring our Fitness Tracker",
          "Code Download"
        ],
        "Routing": [
          "Introduction",
          "Creating Routes",
          "Code Download"
        ],
        "Deployment": [
          "Introduction",
          "Deploying on Meteor",
          "Deploying on AWS"
        ]
      },
      "requirements": [
        "You should be aware of basic programming concepts",
        "You should know basics of HTML and CSS",
        "A bit of JavaScript experience will do no harm in understanding the course"
      ],
      "description": "Now covering the latest Meteor version 1.4\nThis course provides you with a practical approach to Meteor.\n\nThe main focus of this course is to get you familiar with Meteor and ensure that you are ready to build cool new web applications using Meteor in no time.\n\nIn this course we will be covering fundamentals of JavaScript first so that it becomes easier to understand the different concepts and syntax that one uses in Meteor\n\nIn this course we will be covering following topics\nBasics of JavaScript\nSpacebar Basics [if,with,each,template helpers]\nMeteor Basics\nTemplates, Collections, Publishing\nEvent Handling\nPublisher Subscriber Functionality\nRefarctoring our code\nUsing BootStrap and Exploring Shadow DOM\nAuthentication\nSession\nServer Methods\nRouting\nDeployment on Meteor and AWS\nHow to Reset Meteor Database\nSo what are you waiting for let's get started with Meteor",
      "target_audience": [
        "Those who want to learn Meteor",
        "Those who are into web development",
        "Those who would love to learn web development by learning just one language",
        "Those who have a bit of experience of JavaScript",
        "Aspiring Web Developers"
      ]
    },
    {
      "title": "Hands-On Beginner FastAPI and SQLModel",
      "url": "https://www.udemy.com/course/hands-on-beginner-fastapi-and-sqlmodel/",
      "bio": "Develop fast, modern APIs with Python, FastAPI, and SQLModel",
      "objectives": [
        "Use FastAPI and SQLModel to create modern Python APIs",
        "Create routes and functions for high-performance JSON database interactions",
        "Develop a library of code for working with multiple related tables",
        "Use FastAPI templating to use HTML forms for data entry and editing"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started"
        ],
        "Developing APIs": [
          "Create your Virtual Environment",
          "Creating Data Models",
          "Create your Database",
          "Get a Database Browser",
          "Design your API",
          "Defining API Functions",
          "Returning HTML Code",
          "Posting Data through the API",
          "Debugging with Breakpoints",
          "Improving API Responses",
          "Get Data from a Database",
          "Update a Row",
          "Delete a Row",
          "Better Request Schemas",
          "Server-Side Validations",
          "Sorting and Searching"
        ],
        "Working with Multiple Related Tables": [
          "Booleans, Dates and Defaults",
          "Using Regex Validation",
          "Post Videos",
          "Delete and Undelete Videos",
          "Get Active Videos",
          "Update Videos",
          "Joining Tables",
          "Custom Column Names",
          "Counting Rows"
        ],
        "FastAPI Templating and HTML": [
          "Static Files",
          "FastAPI Templating",
          "Create an HTML Layout Page",
          "HTML Form for Creating New Rows",
          "Post from HTML Form to Database",
          "A Minor Facelift",
          "From Table to Dropdown Lists",
          "From Database Table to HTML Table",
          "Click-to-Edit Updating",
          "FastAPI Redirects",
          "Deletes and Page Titles"
        ]
      },
      "requirements": [
        "Students should already be familiar with basic Python coding, the course uses Python 3.10. Students who want to learn to use FastAPI templating should already have some experience with HTML, CSS, and JavaScript."
      ],
      "description": "FastAPI and SQLModel are two of the hottest new Python technologies for developing asynchronous APIs with modern Python. If you're struggling with wrapping your head around how it all works, this course is for you. Here you'll learn all the most important fundamentals for creating APIs that support all database CRUD operations for adding, editing, and deleting database tables and rows.\nThe course takes a very hands-on approach. That’s because most of us learn by doing. All of the code generated in the course is also available for download, so you can use it for future reference when trying to remember how to accomplish some goal. Topics and techniques covered include:\n· Creating SQLModel databases and tables\n· Creating FastAPI routes and functions for posting, retrieving, updating, and deleting data\n· Customizing API Request and Response Schemas\n· Using RegEx validation in SQLModel\n· Designing re-usable server-side validators\n· Sorting and Searching with SQLModel\n· Working with virtual deletes and undeletes\n· Joining tables\n· Customizing column names in responses\n· Using HTML forms for database interactions\n· Debug FastAPI and SQLModel with VS Code Breakpoints\nIn short, the course is all about learning how to do all the common day-to-day operations found in apps that allow users to interact with databases. All the code in the course is also available for download, and organized in a way to help students look up the code they need, on-the-fly, as-needed with minimum fuss.\nStudents need not already be familiar with FastAPI or SQLModel. However, students should already be familiar with basic Python programming. Some familiarity with SQL and databases also helpful.",
      "target_audience": [
        "Python developers looking to create modern asynchronous APIs using FastAPI and SQLModel"
      ]
    },
    {
      "title": "Universal React with Next.js. Complete guide - Updated 2020",
      "url": "https://www.udemy.com/course/nextjs-the-complete-guide-beginner-to-advance/",
      "bio": "Including React, ES6, Firebase/firestore, Firebase/auth and many new ideas",
      "objectives": [
        "Next js",
        "React",
        "ES6",
        "JavaScript",
        "Web development",
        "Firebase",
        "Firebase/Firestore",
        "Firebase/Auth"
      ],
      "course_content": {
        "Intro": [
          "Introduction to course",
          "What are we going to build?",
          "What do you need to know before we start the course?",
          "Server Side Rendering vs Client Side Rendering"
        ],
        "Next.js introduction": [
          "Whats is Next.js",
          "Hello Next.js",
          "eslint and prettier",
          "Static files",
          "Built-in CSS",
          "Shared component - The navbar",
          "SASS and Bulma",
          "Bulma continue"
        ],
        "Blog project": [
          "_app.js component",
          "Page component",
          "Populate Head",
          "Working on the navigation",
          "Footer and header with style",
          "Dynamic title",
          "Sticky footer"
        ],
        "Firebase": [
          "What is Firebase?",
          "Add Firebase to project",
          "Dotenv",
          "Optimise Firebase/Firestore",
          "Read data from Firestore",
          "Subscribe to Firestore for realtime changes",
          "Refactor Firestore",
          "Read a document from Firestore collection"
        ],
        "Blog project continue": [
          "Blog list and blog item components",
          "Format date with moment.js",
          "Show a blog",
          "SSR with express",
          "Read a blog from Firestore",
          "NProgress",
          "Next.js configuration",
          "Show a blog continue",
          "Subscribe to blog content for realtime changes",
          "Extracting blog to separate component",
          "Firebase users collection",
          "User Avatar",
          "Create a new blog component",
          "Create a new blog to Firestore",
          "Toggle edit and view blog",
          "Fix the memory leak issue",
          "Edit a blog",
          "Edit blog with re-base",
          "Blog edit confirmation",
          "More refactoring",
          "Use re-base in home page",
          "Title and meta tags"
        ],
        "Authentication": [
          "Authenticate with Google",
          "Authenticate with Facebook, Twitter and Github",
          "Auth Handler",
          "Sign in and Sing out from the navigation bar",
          "Protect routes"
        ],
        "Validation": [
          "Add user dynamically when create blog",
          "Validate Local storage user",
          "Validate blog slug",
          "Update userinfo component",
          "Show message if user is not valid",
          "Update Firebase setting to prevent console errors",
          "Form validation"
        ],
        "Finalising": [
          "Related blogs",
          "Better way of fetching a blog",
          "Update Firebase security rules and .env.example file",
          "What else needs to be done?"
        ],
        "Update 2020 - First reviwe": [
          "Update - Intro",
          "Update packages",
          "Update Linting config",
          "Fix linting issues",
          "Update Next.js",
          "More fixes"
        ]
      },
      "requirements": [
        "Basic Javascript",
        "Basic react is a plus but not required"
      ],
      "description": "Next.js is a react framework which is very popular and a lot of big companies are using it. You can use Next.js to build universal JavaScript application. Think of react code which works for Server Side Rendering as well as Client Side Rendering and no pain when it comes to SEO.\nIn this course you will learn a lot of new features about this framework.\n\n\nThe course has been updated on Feb 2020 with Next.js v9",
      "target_audience": [
        "JavaScript developers who would like to meet the next level of programming",
        "web developers who likes to update their knowledge about new way of writing code",
        "Backend developers who would like to experience new way of Server Side Rendering",
        "Frontend developers who would like to take a very easy step to produce Server side rendering code",
        "React developers who are interested to see what is coming in their way soon"
      ]
    },
    {
      "title": "Learn HTML Canvas: Advanced Text Effects",
      "url": "https://www.udemy.com/course/learn-html-canvas-advanced-text-effects/",
      "bio": "Take animated text to the next level",
      "objectives": [
        "Draw and style multiline text on HTML canvas",
        "Convert text into animated particle system",
        "Practice vanilla JavaScript and front-end web development techniques",
        "Apply physics and advanced animation techniques"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project": [
          "Project setup",
          "CSS & JavaScript positioning tricks",
          "Drawing, styling and positioning text",
          "Wrapping and centering multiline text",
          "How to center a block of text vertically",
          "HTML canvas gradients",
          "Refactoring into object oriented JavaScript",
          "Scanning canvas for pixel data",
          "Converting text into particles",
          "Interactions and physics",
          "Custom fonts",
          "Resizing and responsive design",
          "Particle constellations effect",
          "Dynamic line opacity formula"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and JavaScript needed"
      ],
      "description": "Become a master of web animation.\nFrom drawing a single letter to multiline animated particle text. In this HTML canvas crash course we will go from basics to advanced in a single class. We will cover everything you need to know about using fonts and drawing text on HTML canvas. Let's explore what's possible in modern front-end web development and turn text into complex animated particle systems.\n\n\nPractice vanilla JavaScript with no frameworks and no libraries\nLearn how to write creative coding prototypes and experiments in a simple procedural (line by line) codebase. Convert those experiments into a more modular object oriented JavaScript syntax.\n\n\nExperiment with code\nLearn  how to create the base version of the effect with me step by step. Apply constellations algorithm for a completely different visual effect. Learn how to use canvas gradients, custom web fonts and how to change particle shapes and physics to get different visuals and movement.\nThis technique will also work with company LOGOS, even if the logo is a combination of text, symbols and images.\n\n\nSource code included\nWith the final lesson you can download the complete source code, as well as some of my experimental variations of the codebase.\n\n\nFrom basics to advanced\nBasic knowledge of HTML, CSS and JavaScript is required. The first part of the course will be very beginner friendly, we will learn how to set up an HTML canvas, how to draw text using fillText and strokeText built-in methods and we will cover all available tools and techniques to style it.\nThe second part will cover more advanced algorithms. We will learn how to draw multiline centered text on HTML canvas, how to turn it into particles, how to make those particle systems interactive and much more.\n\n\nHave fun! :)",
      "target_audience": [
        "Creative coders curious about advanced web animation",
        "Front end web developers who want to practice vanilla JavaScript and animation algorithms"
      ]
    },
    {
      "title": "PHP Programming For Everyone",
      "url": "https://www.udemy.com/course/php-programming-for-everyone/",
      "bio": "Learn PHP Programming For Web Development The Fast And Easy Way!",
      "objectives": [
        "How To Download and Use WAMP Server",
        "How To Run PHP Locally on your Computer",
        "Basic PHP Programming Concepts Like Variables, Data Types",
        "Math Operators, Assignment Operators, Comparison Operators",
        "How To Do If/Else Statements and Why They're Important",
        "How To Loop Using While Loops, For Loops, and Foreach Loops",
        "Understanding Indexed Arrays and Why They Are So Great",
        "Understanding Associative Arrays (called Hashes or Dictionaries in other Languages)",
        "All About Functions - Mini Programs Inside Your Program",
        "We'll Build a FizzBuzz app!",
        "PHP For Web Development",
        "Including PHP on a web page",
        "Requiring Things on a Web Page With PHP",
        "Using Web Forms With PHP",
        "Processing Form Data With PHP",
        "And More!"
      ],
      "course_content": {
        "Setup Your PHP Development Environment": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Install the WAMP Development Environment",
          "Start The WAMP Server"
        ],
        "Beginner PHP Programming": [
          "Your First Hello World Program!",
          "Variables",
          "Data Types",
          "Math Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Increment and Decrement Operators"
        ],
        "Intermediate PHP Programming": [
          "If Else Statements",
          "While Loops",
          "For Loops",
          "Indexed Arrays",
          "Looping Through Arrays",
          "Associative Arrays",
          "Looping Through Associative Arrays",
          "Functions",
          "Build a FizzBuzz Program"
        ],
        "PHP For Web Development": [
          "Include Functions",
          "Require_Once Functions",
          "Build a BootStrap Navbar",
          "HTML Forms",
          "Submit an HTML Form with PHP",
          "Processing Form Data",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser",
        "We'll Download a Free Coding Text Editor",
        "We'll Download the free WAMP PHP Development Environment"
      ],
      "description": "The PHP Programming Language is one of the most POPULAR Web Development Programming Languages for a reason. In this course I'll show you why!\nBuilt For The Absolute Beginner\nYou don't need any prior knowledge of coding or web development to take this course. We'll download all the tools you'll need for free, and I'll walk you through setting them up.  Then we'll dive right in and start learning the PHP language.\nYou'll Be Amazed How Quickly You Can Pick Up PHP!\nWe'll start out with basic programming concepts, things like:\nPHP Syntax\nVariables\nData Types\nMath Operators\nAssignment Operators\nComparison Operators\nIncrement/Decrement Operators\nThen we'll ease into more Intermediate topics, things like:\nIf Else Statements\nWhile Loops\nFor Loops\nForEach Loops\nIndexed Arrays\nAssociative Arrays\nLooping Through Arrays\nWe'll Build A Quick FizzBuzz App\nFunctions\nAfter that we'll learn about basic web development concepts, things like:\nIncluding PHP On a Web Page\nAdding Things To A Web Page Using Require_Once\nUnderstanding Web Forms\nProcessing Form Data With PHP\nForm Security\nBuilding a Bootstrap Navbar With PHP\nAnd More!\n\n\nQUICK AND TO THE POINT!\nWhy take a course with 37 hours of lectures?  In just 2 hours you can learn the basics all the way through Intermediate PHP. Technically Functions are considered an advanced topic, so we even touch on some advanced stuff in this course (but just a little bit).\nThis is the course for you if you're interested in becoming a web developer and maybe don't know where to start. It's also great if you're already a front end developer, but want to add some serious skills to your tool belt.  Since PHP powers Wordpress, this course is also great if you'd like to really customize your Wordpress sites (we don't discuss wordpress in this course, but if you understand PHP, you can understand what's going on behind the scenes in Wordpress just by diving into the code and checking it out on your own).\nMONEY BACK GUARANTEE!\nI have over 32 courses on Udemy with overwhelmingly high reviews and over 42,000 students with over 100,000 enrollments (that means on average most of my students sign up for more than one of my courses), but if you aren't satisfied for any reason at all, we offer a 30-day unconditional money back guarantee. So you have nothing to lose!\nSign up now and I'll see you on the inside!\n\n\n-John Elder\nCEO Codemy. com",
      "target_audience": [
        "This course is built for absolute beginners who want to learn to build websites with PHP",
        "Anyone Who Wants To Become A PHP Web Developer",
        "Front End Developers Who Want To Learn Some Real Coding Skills",
        "Anyone Who Wants To Become A Full Stack Web Developer",
        "Anyone Who Uses Wordpress and Wants To Understand The Language Wordpress Uses",
        "Anyone Who Might Know another Language But Wants To Transition to PHP"
      ]
    },
    {
      "title": "Hadoop Developer Course with MapReduce and Java",
      "url": "https://www.udemy.com/course/big-data-and-hadoop-developer-course-with-mapreduce-and-java/",
      "bio": "Learn Basics of Hadoop and MapReduce with Java",
      "objectives": [
        "Introduction to Hadoop",
        "Basics of MapReduce",
        "MapReduce with YARN"
      ],
      "course_content": {
        "Module-1 Introduction to Course": [
          "1.1 Introduction",
          "1.2 Prerequisites",
          "1.3 what you will learn",
          "1.4 Need of MapReduce"
        ],
        "Module-2 A Look at Hadoop": [
          "2.1 What is Hadoop",
          "2.2 Hadoop History",
          "2.3 Comparison of HDFS with RDBMS",
          "2.4 Hadoop Cluster",
          "2.5 Hadoop Features",
          "2.6 Cluster Modes in Hadoop",
          "2.7 Hadoop Core Components",
          "2.8 What is HDFS",
          "2.9 Block Replication in HDFS",
          "2.10 HDFS and MapReduce",
          "2.11 HDFS Daemons"
        ],
        "Module-3 MapReduce Basics": [
          "3.1 What is MapReduce",
          "3.2 Why MapReduce",
          "3.3 History of MapReduce",
          "3.4 Use Cases to Illustrate Advantages of MapReduce",
          "3.5 MapReduce Applications",
          "3.6 Anatomy of MapReduce Program",
          "3.7 Map and Reduce Function",
          "3.8 Hands-On Session"
        ],
        "Module-4 Understanding MapReduce": [
          "4.1 Dataflow in MapReduce",
          "4.2 Job Submission Flow of MapReduce",
          "4.3 MapReduce Example",
          "4.4 MapReduce Daemons",
          "4.5 Job Tracker",
          "4.6 Task Tracker",
          "4.7 Task Assignment by JobTracker",
          "4.8 Submission of MapReduce Job",
          "4.9 Hands-On",
          "4.10 Combiner and partitioner",
          "4.11 Dataflow with a Single, Multiple and No Reduce Task"
        ],
        "Module-5 MapReduce with YARN": [
          "5.1 Hadoop 1.x Architecture",
          "5.2 Hadoop 1.x Problems",
          "5.3 NameNode-No Horizontal Scalability",
          "5.4 No High Availability in NameNode",
          "5.5 JobTracker-Overburdened",
          "5.6 MRv1",
          "5.7 Hadoop 2.x New Features",
          "5.8 Hadoop 2.x Architecture",
          "5.9 HDFS High Availability in Hadoop 2.x Architecture",
          "5.10 YARN-Moving Beyond MapReduce",
          "5.11 Different Processing Applications in YARN",
          "5.12 MRv2 (YARN)",
          "5.13 YARN MR Application Execution Flow",
          "5.14 YARN Workflow",
          "5.15 MapReduce 2.x Cluster Architecture",
          "5.16 Hands-On"
        ],
        "Module-6 Advanced MapReduce Concepts - I": [
          "6.1 InputSplit and RecordReader",
          "6.2 Mapper, Reducer and Driver Class",
          "6.3 New vs Old API",
          "6.4 Generic Option Parser, Tool and ToolRunner",
          "6.5 GenericOptionsParser and ToolRunner Options",
          "6.6 Writables in Hadoop",
          "6.7 Serialization and Deserialization",
          "6.9 Chaining of Jobs",
          "6.10 Listing and Killing Jobs",
          "6.11 Distributed Cache",
          "6.12 Counters",
          "6.13 Test cases in Hadoop"
        ],
        "Module-7 Advance Mapreduce Concepts-II": [
          "7.1 Schedulers",
          "7.2 Implement Fair Scheduler in CDH",
          "7.3 Data Compression in Hadoop",
          "7.4 Different Compression Techniques in Hadoop",
          "7.5 Hands-On",
          "7.6 Multiple Inputs",
          "7.7 Tuning",
          "7.8 Profiling Map and Reduce Task",
          "7.9 Filtering and Projection in Map Phase",
          "7.10 Use Combiner Class",
          "7.11 Analyze XML data using Map Reduce Framework",
          "7.12 Custom Partitioner in Map Reduce"
        ],
        "Module-8 Advance Mapreduce Concepts-III": [
          "8.1 Joining in MapReduce",
          "8.2 Different Input and Output Formats in MapReduce"
        ],
        "Program & Projects for full Course": [
          "Link for all Projects"
        ]
      },
      "requirements": [
        "Basics of JAVA",
        "Knowledge of programming would be beneficial."
      ],
      "description": "This course will help you to comprehend MapReduce Programming, how to set up an environment for the same, how to submit and execute MapReduce applications. We will begin from the top and after that peel profound into the Advanced concepts of MapReduce. Towards the finish of the MapReduce course, you will hold skill on:\nProcessing unstructured data.\nAnalyse complex and large data sets in Hadoop framework.\nYARN - NextGen MapReduce.\nDesigning and Implementing complex queries using MapReduce approach.\nWill be able to break Big Data into meaningful information, process data in parallel on Hadoop cluster and make available for users.\nLearn how to extract patterns and business trends.",
      "target_audience": [
        "Hadoop Beginners",
        "Professionals who want to learn Hadoop",
        "Graduates looking to build a career in Big Data Analytics",
        "Aspiring Data Scientists"
      ]
    },
    {
      "title": "How To Install Ruby On Rails On Windows",
      "url": "https://www.udemy.com/course/how-to-install-ruby-on-rails-on-windows/",
      "bio": "Learn To Install Rails on a Windows Computer the Right Way And Push Your Code To Heroku For Professional Web Hosting!",
      "objectives": [
        "How to Install Ruby on Rails on a Windows Computer",
        "How to Install Node the right way, and why you need to!",
        "How to Install the really cool Git Bash terminal for Windows",
        "How To Set up Version Control Using Git for Windows",
        "How To Connect and Push Your Code to Github For Safe Keeping",
        "How to Install the Heroku Toolbelt for Windows for Web Hosting",
        "How to Push Your App to Heroku Hosting Using Their Free Tier",
        "How To Create basic Rails Apps on a Windows Computer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Installing Node",
          "Git Bash Terminal",
          "Creating an SSH Key",
          "Download Ruby on Rails",
          "Update!",
          "Create A Rails Project",
          "Set Up Git",
          "Github",
          "Heroku Toolbelt",
          "Create Your First Webpage",
          "Root Route",
          "Install Bootstrap CSS Framework",
          "Bootstrap Jumbotron",
          "Bootstrap Navbar",
          "Create a Second Webpage",
          "Use Ruby Links",
          "Intro To Heroku Web Hosting",
          "Tweaking the Gemfile for Heroku",
          "Pushing Code To Heroku",
          "Using A Custom Domain with Heroku",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "Have you ever tried to install Ruby on Rails on a Windows computer?  Tough, isn't it!!\nMost Ruby on Rails courses assume you already have Rails installed.  Chances are, that's not the case!  And Rails is one of the harder web frameworks to install; it's easy to get messed up!\nIn this course I'll walk you through it step by step.\nWe'll install all the software you need such as Node.js, Git, Git Bash, and the Heroku Toolbelt.\nI'll also show you how to set up version control, and how to push your version control up to Github.\nFinally, I'll walk you through deploying your app on Heroku, a professional web hosting service (we'll use the free version).\nIf you've ever tried to install Rails and failed, this is the course for you!\n\nSee you on the inside!\n\n\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn to install Ruby on Rails on a Windows computer",
        "Anyone who wants to learn to build web apps with Rails 5",
        "Anyone who's struggled to install Ruby on Rails in the Past",
        "Anyone looking to install Ruby on Rails faster and more efficiently",
        "Mac users looking to transition to Windows for Ruby on Rails Development",
        "Newbies and advanced users alike!",
        "Anyone transitioning from a cloud IDE"
      ]
    },
    {
      "title": "Create your own React!",
      "url": "https://www.udemy.com/course/create-your-own-react/",
      "bio": "Become JS software engineer in no time!",
      "objectives": [
        "Code own libraries"
      ],
      "course_content": {
        "Intro": [
          "Introduction"
        ],
        "Intro to React and JSX": [
          "React: Hello world!",
          "React: Clock app"
        ],
        "Deep dive into Virtual DOM": [
          "Classical DOM",
          "What is Virtual DOM",
          "Virtual DOM - 2",
          "Virtual DOM - Diagram 1",
          "Virtual DOM - Diagram 2",
          "Download the diagram"
        ],
        "Writing our library": [
          "Module pattern",
          "\"h\" method",
          "Setting properties - 1",
          "Setting properties - 2",
          "addEventListeners method",
          "createElement method",
          "Change method",
          "Update method",
          "Lets use our library, JSX",
          "Download the code",
          "See VD in action!",
          "Quick quiz"
        ],
        "Where to go from here?": [
          "Final word"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript and HTML"
      ],
      "description": "Hi, maybe you know how to use React, but have you ever thought about what happens behind the scenes everytime you render new element? Do you want to actually \"understand\" what exactly is virtual DOM, how it works and what happens inside popular virtual DOM manipulation libraries? If so, then this course is for you!\nMy name is Filip and I am a passionate JavaScript developer, who likes to create his own libraries. In this course we'll start by creating simple React app, then we will take a deep dive into virtual DOM, and finally, I'll show you how to create your very own lightweight version of React and how to use JSX. At the end of this course you are going to understand principles, people who wrote React, understand.\nSo if you ready to transform from a JavaScript developer to JS software engineer in no time, just click this button and I am happy to see you on the inside!",
      "target_audience": [
        "Intermediatte JS programmer who wants to become JS Software engineer"
      ]
    },
    {
      "title": "Do-It-Yourself Website Development",
      "url": "https://www.udemy.com/course/do-it-yourself-website-development/",
      "bio": "Build Simple Custom Websites From Scratch with Completely Free Tools",
      "objectives": [
        "Develop simple custom websites from scratch, using completely free tools.",
        "Upload and take custom sites live on the Web.",
        "Write and understand basic HTML and CSS, the languages of content and design on the Web.",
        "Make custom tweaks to template-based sites that allow users to write and modify raw HTML and CSS. (e.g. Squarespace,, Wordpress.)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "You Really Can Build a Website Yourself",
          "The Languages of Web Development: HTML, CSS, and JavaScript",
          "Rush Job: A Complete Website in 35 Minutes -- Part One, HTML for Content",
          "Rush Job: A Complete Website in 35 Minutes -- Part Two, CSS and Taking It Live",
          "Choosing Your Text Editor",
          "Setting Up Your Text Editor: Mac OS X",
          "Setting Up Your Text Editor: Windows",
          "Pointing Your Browser at Local Files",
          "Basic Concepts"
        ],
        "Content (HTML)": [
          "Failing Gracefully",
          "Doctype, HTML, and Body",
          "Paragraphs, Divisions, and Spans",
          "Head",
          "Attributes",
          "HTML Fundamental Elements",
          "Now You Try It! (Create your own template for a minimally compliant webpage.)",
          "Adding Spaces",
          "Images: Finding and Saving",
          "Images: Adding to HTML",
          "Images",
          "Now You Try It! (Find images and add them to a simple webpage.)",
          "Linking: Basic External Links",
          "Linking: Basic Internal Links",
          "Linking: Advanced Links",
          "Links",
          "Now You Try It! (Write a block of links to both external and internal pages.)",
          "iframes",
          "Now You Try It! (Embed a Google Map in an iframe.)",
          "Quick and Dirty Styling",
          "<!-- Comments -->",
          "Common HTML Errors",
          "You Could Stop Right Here",
          "Extra Credit: Lists",
          "Extra Credit: Tables"
        ],
        "Style (CSS)": [
          "CSS for Style",
          "CSS Three Ways: Inline Style",
          "CSS Three Ways: Internal Style Sheets",
          "CSS Three Ways: External Style Sheets",
          "Cascading In Action",
          "CSS Three Ways, and Cascading in Action",
          "Basic Selectors",
          "Now You Try It! (Style using an external stylesheet and basic selectors.)",
          "Selecting with Element Classes",
          "Selecting with Element IDs",
          "CSS Selectors",
          "Now You Try It! (Style using element classes and IDs.)",
          "Font Properties: Font-Family",
          "Font Properties: Font-Size",
          "Font Properties: Font-Weight",
          "Font Properties: Font-Style",
          "Font Properties: Text-Decoration and Color",
          "Alignment",
          "Font and Text Styling",
          "Now You Try It! (Styling font properties.)",
          "Color",
          "Height and Width",
          "Margins",
          "Borders",
          "Padding",
          "Clean-Up: Homepage",
          "Clean-Up: About Page",
          "Clean-Up: Just In Page",
          "Clean-Up: Tweaking and Polishing",
          "Styling Block Elements",
          "Now You Try It! (Styling blocks for visual structure.)",
          "Common CSS Errors",
          "You Could Stop Right Here",
          "Extra Credit: Float"
        ],
        "Taking It Live": [
          "Time to Go Live",
          "Domain Name Registration, DNS, and Web Hosting All-in-One!",
          "Domain Name Registration",
          "Domain Name Service (DNS)",
          "Web Hosting Service",
          "DNR, DNS, or Web Hosting?",
          "Uploading: Web-Based (Web Host Specific)",
          "Uploading: FTP (FileZilla)",
          "Alternatives to Domains and Web Hosting"
        ],
        "Closing Thoughts": [
          "Keeping It Simple",
          "Developing Your Skills",
          "Good Luck!"
        ]
      },
      "requirements": [
        "No prior experience is necessary, other than basic comfort using your Mac or Windows computer.",
        "You do not need to know any HTML or CSS. This course will teach you both from the ground up."
      ],
      "description": "In this course, you'll learn how to build a simple, custom website from scratch. Not a template-based site that will look like everyone else's. You'll build your website from nothing… in raw code, the way you want, then take it live on the Web.\nYou're going to learn a lot about HTML and CSS, the languages of content and design in web development. You won't be a professional web developer at the end of this course. You will have built a rock solid foundation in HTML and CSS. And, if you decide you want to learn more, you'll be well prepared to tackle more advanced web development courses.\nIf developing some simple websites for yourself and your friends is all you want, you'll learn all you need from this course. You'll also learn about some resources that will help you further develop your skills on your own.\nYou won't need to buy any special software. You'll use free tools that I'll guide you through setting up. The only cost will be an affordable web hosting service to take your site live on the Web. I'll help you with that too, when the time comes.\nAnd when you're done, you'll have a custom website that you built yourself, live on the Web, sharing what you have to say with the world.\nLet's get started.\nTopics Include:\nSetting up a plain text editor for web development.\nThe structure of HTML.\nStructuring written content.\nAdding images.\nEmbedding videos, maps, and other third-party content.\nLinking to internal and external pages.\nCreating lists and tables.\nStyling content with CSS.\nDesigning pages for readability and visual appeal.\nCustomizing fonts and text.\nRegistering your website domain name.\nSetting up a web hosting service.\nUploading your site and taking it live on the Web.",
      "target_audience": [
        "This course is intended for students with little or no prior experience with Web development using HTML and CSS. This course is probably not for you if you already understand basic HTML and CSS, and are looking to further advance your skills.",
        "For students who want to develop their own custom websites from scratch, rather than fit their design ideas into template-based platforms such as Wordpress, Squarespace, Wix, and Weebly.",
        "For students who want a solid introduction to basic HTML and CSS before tackling more advanced Web development courses.",
        "For students who have existing sites on template-based platforms, and who want to customize their sites by writing or modifying raw HTML and CSS.",
        "For students who want to develop websites but can't justify the cost of commercial Web development software such as Dreamweaver.",
        "For students with a DIY aesthetic, who enjoy building things from scratch, even when they don't have to, and modifying what others have already built."
      ]
    },
    {
      "title": "Start to Finish Unity® Games and Python Coding",
      "url": "https://www.udemy.com/course/unitygamespythoncoding/",
      "bio": "*Includes 6 FREE webinars! Code in C# & make games from zero to hero in Unity®. PLUS learn the Python coding language!",
      "objectives": [
        "Build games in Unity®",
        "Learn the fundamentals of game design.",
        "Code in C#.",
        "Program in Python.",
        "Use lists, loops, sets, and dictionaries in Python.",
        "Create a Blackjack game."
      ],
      "course_content": {
        "Getting Started with Unity": [
          "Getting Started with Unity 1",
          "Important Note About Void Methods",
          "Getting Started with Unity 2",
          "Getting Started with Unity 3"
        ],
        "Make an awesome Space Shooter | Unity Project": [
          "Make an awesome Space Shooter 1",
          "Make an awesome Space Shooter 2",
          "Make an awesome Space Shooter 3"
        ],
        "Making A Side Scrolling Shooter | Unity Project": [
          "Making A Side Scrolling Shooter 1",
          "Making A Side Scrolling Shooter 2",
          "Making A Side Scrolling Shooter 3"
        ],
        "Mouse Collision Game | Unity Project": [
          "Mouse Collision Game 1",
          "Mouse Collision Game 2"
        ],
        "Rotational Shooter | Unity Project": [
          "Rotational Shooter 1",
          "Rotational Shooter 2",
          "Rotational Shooter 3"
        ],
        "Cross Shooter | Unity Project": [
          "Cross Shooter 1",
          "Cross Shooter 2",
          "Cross Shooter 3"
        ],
        "Space Invaders | Unity Project": [
          "Space Invaders 1",
          "Space Invaders 2",
          "Space Invaders 3"
        ],
        "2D Platformer | Unity Project": [
          "2D Platformer 1",
          "2D Platformer 2"
        ],
        "Making a gravity platformer | Unity Project": [
          "Making a gravity platformer 1",
          "Making a gravity platformer 2"
        ],
        "2D Platform Shooter | Unity Project": [
          "2D Platform Shooter 1",
          "2D Platform Shooter 2",
          "2D Platform Shooter 3"
        ]
      },
      "requirements": [
        "You will need to install Unity® and Python. Both are compatible with Mac and PC."
      ],
      "description": "Do you want an introduction to game development and web app development? This is the course for you!\nIn Part 1, you learn how to make 35 games in Unity®! Other tutorials only show you how to make the functionality or design of a game. We at Mammoth Interactive show you how to do both.\nThis course is project-based, so you will not be learning a bunch of useless coding practices. At the end of this course, you will have real-world apps to use in your portfolio.\nOur practical training content is the best way to get from A to B. Taking this course means you learn employable skills immediately.\n\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation.\nLearn to code today and get a head start for tomorrow. People who can master technology will rule the future.\nIn Part 2, you learn how to code in the Python 3.5 programming language. Whether you have or have not coded before, you can learn how to use Python.\nPython is a popular programming language that is useful to know because of its versatility. Python is easy to understand and can be used for many different environments. Cross-platform apps and 3D environments are often made in Python.\nIncluded in this course is material for beginners to get comfortable with the interfaces. Please note that we reuse this content in similar courses because it is introductory material. You can find some material in this course in the following related courses:\nHands-On Python & Xcode Image Processing: Build Games & Apps\nBuild 25 Games in Python and GameMaker (and Learn to Code)\nBuild 23 Games in Python and Construct 2 (and Learn to Code)\nUltimate Python Beginner Course. Learn to code today!\nStart to Finish Unity Games and Python Coding\nEverything You Need To Make Your Own Games\nDesign 3 Mobile Apps in SpriteKit & 35 Games in Unity\nLearn to make 2D and 3D games in Unity\nMake 34 Games in Unity® & Code for Android Development\nStart to Finish Unity Games and Python Coding\nMaster Unity and Blender: Make 40 Games and Low Poly Art\nWe cover basic programming concepts for people who have never programmed before. This course covers key topics in Python and coding in general, including variables, loops, and classes. Moreover, you learn how to handle input, output, and errors.\nTo learn how to use Python, we create our own functioning Blackjack game! In this game, you receive cards, submit bets, and keep track of your score. By the end of this course, you are able to use the coding knowledge you gained to make your own apps and environments in Python.\nAs a gift from us to you, we will give you 6 webinars recorded by us at Mammoth Interactive (normally $64): Intro to Kotlin: Java’s Replacement for Android App Development, Intro to Android Studio and Java, Core Data: Learn to Use Xcode’s Database, Google Maps and Xcode: Build a Maps-Focused Project, Parse JSON Data: Build a Weather App and Intro to SpriteKit Games: Build a Simple Pong Clone.\n\nGet started today!",
      "target_audience": [
        "No prior coding or digital art skills necessary.",
        "People who want to make games.",
        "Complete beginners who want to learn to code in Python."
      ]
    },
    {
      "title": "Desktop apps with Angular, Firestore and Electron",
      "url": "https://www.udemy.com/course/desktop-apps-with-angular-firestore-and-electron/",
      "bio": "Learn to build a complete app from scratch",
      "objectives": [
        "Problem solving ability",
        "Ways to store, retrieve data using NoSQL databases (Firestore)",
        "Write large applications from scratch"
      ],
      "course_content": {
        "Introduction": [
          "What are we building",
          "Why should I buy this ?"
        ],
        "Let's begin": [
          "Kick off",
          "Adding Firebase to our app",
          "Adding components to our app",
          "Routing"
        ],
        "Login & Authentication": [
          "Let's talk about login",
          "Login Screen",
          "Signing up new users",
          "Authentication Guards",
          "Logging in a user",
          "NavBar"
        ],
        "Sidebar": [
          "The Sidebar",
          "Handling errors",
          "Updating your nick name",
          "Update your profile picture"
        ],
        "Friends": [
          "Adding Friends",
          "Friend requests",
          "Accepting requests",
          "The Friends Panel",
          "Showing received requests",
          "Preventing multiple requests",
          "Instant search",
          "Showing status of a user"
        ],
        "The Chat Feed": [
          "Chat Feed",
          "A footer ?",
          "This is how it works",
          "Sending a message",
          "Showing a message",
          "Adding bubbles",
          "The Smart Date pipe",
          "Scrolling automatically to the bottom",
          "Infinite scroll",
          "Chat user info",
          "Calling",
          "Sending images",
          "Refining our image filter"
        ],
        "Group Chat": [
          "Groups",
          "Create a group",
          "Adding some options",
          "Adding a member",
          "Really adding a member",
          "Group info",
          "Removing a member",
          "Changing group pic",
          "Showing all groups",
          "Chatting in a group",
          "Group chat feed",
          "Fixing bugs",
          "Notifications",
          "Tweaks",
          "Firestore rules"
        ],
        "Bundling with electron": [
          "Introducing electron",
          "Frameless windows",
          "Fixing drag",
          "Packaging it with electron"
        ],
        "Next ?": [
          "Code",
          "Thanks"
        ]
      },
      "requirements": [
        "Basics of Angular",
        "Patience",
        "Coffee"
      ],
      "description": "This course takes you on a developer journey where you'll be building a complete desktop application that runs on any platform (Windows, Mac, Linux) using your favorite Web Technologies.\nIngredients\nAngular (By the time you read this, version 7 is probably out !!)\nElectron framework for building desktop Apps.\nFirebase (Firestore)\nRxJS (Not that much)\nMaterial 2\nWhat you'll get\n\n50 + videos on building the app step-by-step.\nGreat insight on problem-solving and applying thought into app building.\nIdeas on No-SQL data modelling.\nLink to the repo of the code. (Note that, this will be updated over time)\nLink to download the actual app itself. (This again will improve as the codebase improves, and this would serve as a wonderful MVP, POC, college/school project)\nPrerequisites\n\nBasic knowledge about Angular (Know what's a component, service etc.,)\nImagination (Lots of it)\nPatience (Lots of it)\nCoffee.",
      "target_audience": [
        "Beginner Angular developers who want to take the plunge into writing real apps",
        "Developers who are looking forward to learning how to model their data in a NoSQL database"
      ]
    },
    {
      "title": "Gatsby JS Developer's Guide - Important Parts & Blog App",
      "url": "https://www.udemy.com/course/gatsby-js-developers-guide-important-parts-blog-app/",
      "bio": "Learn popular Gatsby JS(Gatsby v3) framework. Use React/GraphQL to build your own blog page with JAMStack architecture.",
      "objectives": [
        "Build Gatsby JS apps on your own",
        "Build static page apps with modern technologies",
        "Understand meaning and benefits of JAMStack",
        "Use GraphQL to your advantage"
      ],
      "course_content": {
        "Introduction": [
          "Course Preview",
          "How to watch the course"
        ],
        "Project Initialization": [
          "Section Introduction",
          "Init Gatsby",
          "Pages",
          "Header Component",
          "Gatsby links",
          "Layout",
          "Error Page and Links"
        ],
        "Styles & Templates": [
          "Section Introduction",
          "Gatsby Build",
          "About stylings",
          "Module stylings",
          "Page from template",
          "Pass data to page",
          "Iterate posts",
          "Post detail page"
        ],
        "GraphQL & Gatsby": [
          "Section Introduction",
          "GraphQL",
          "Custom types",
          "More types",
          "Non nullable and array",
          "Nested fields",
          "Args and filter",
          "Complex filter",
          "Fetch posts in resolve",
          "Get posts through GraphQL",
          "Create node",
          "Get node to page"
        ],
        "Data sources": [
          "Section Introduction",
          "Source plugin",
          "Source data to blogs page",
          "Transformer plugin",
          "Markdown page",
          "Construct slug",
          "Create blog pages",
          "Single Query",
          "Display html in blog detail",
          "Changes Slug",
          "Removes obsolete files"
        ],
        "Application revamp": [
          "Section Introduction",
          "Adding bulma",
          "Header and Footer",
          "Featured Blog",
          "Blog Listing",
          "Sorting parameters",
          "Markdown stylings",
          "Blog styling fix"
        ],
        "Filesystem route API": [
          "Fillesystem route api",
          "Filesystem additional explanations"
        ],
        "Pagination": [
          "Section Introduction",
          "Pagination Start",
          "Get paginated data",
          "Pagination buttons",
          "Buttons conditions",
          "Buttons Disabled fix"
        ],
        "Search Feature": [
          "Search Introduction",
          "Search Implementation",
          "Search index",
          "Search Engine",
          "Search engine additional info",
          "Get value from input",
          "Search Improvements",
          "Performing Search",
          "Navigate to searched page",
          "Search Finished",
          "Add search index dep"
        ],
        "Search engine optimization": [
          "Section Introduction",
          "What is SEO",
          "Server side SEO",
          "Title and description",
          "Pass props to seo",
          "Open graph",
          "Detailed seo"
        ]
      },
      "requirements": [
        "Minimal Javascript or other programming language knowledge",
        "React JS Basics"
      ],
      "description": "What is Gatsby JS?\nGatsbyJS is a React-based, GraphQL powered static site generator. It uses powerful preconfiguration to build a website that uses only static files for incredibly fast page loads, service workers, code splitting, server-side rendering, intelligent image loading, asset optimization, and data prefetching.\nAre there any requirements?\nBasic React JS knowledge.\nWhat this course cover?\nThis course is covering all you need to start working on your own Gatsby JS projects. Students of this course will be learning everything by working on real features building their own Blogging application.\nGatsby JS has a rich ecosystem and requires an initial time investment. That’s why I created this guide where you can find everything in one place.\nShort Curriculum\nBasics of Gatsby JS and initialization of the project. Explanation of folder structure and instruction on how to create new pages.\nTemplating system, Different types of stylings, and ways how to pass data to the pages.\nBasics of GraphQL, construction of custom queries, resolvers, arguments, and custom types.\nNode architecture and creation of new nodes.\nPlugin system. Explanation of source and transformer plugins. Sourcing data from a local filesystem and rendering markdown files into actual HTML pages.\nFilesystem route API\nPagination feature. Construction of queries to get pagination data to render static pagination pages.\nSearch feature. Explanation on why do you need a search index and what is a search engine?\nSEO search engine optimization improvements. Use of different meta tags and data to get the best search results. Usage of Open graph tags.\nRSS feature. Explanation of really simple syndication and creation of XML file. Subscribing to the blog page through RSS aggregators.\nDeployment to Gatsby cloud. Pushing the code to Github repo. Previewing the application on the internet.\nPWA features. Explanation of progressive web application, offline support, and installation of the app like a native one.\nContext theme provider. How to use context providers and what is the best spot to implement them.",
      "target_audience": [
        "People looking for the practical Gatsby development guide",
        "Beginner developers eager to start working on web apps",
        "Experienced developers discovering new development opportunities"
      ]
    },
    {
      "title": "Next.js Crash Course: Build a Full-Stack App in a Weekend",
      "url": "https://www.udemy.com/course/nextjs-crash-course-build-a-full-stack-app-in-a-weekend/",
      "bio": "Learn to build Web Apps with Next.js. You will cover Routing, Navigation, Pages, Layouts, SSR, Data Fetching and more",
      "objectives": [
        "Building a beautiful Server-side App for Viewing Contacts List step by step while learning Next.js Fundamentals.",
        "Learn how to set up your environment, create a Next.js project, explore its structure, style and organize components.",
        "Understand how to build Pages and Layouts, add Navigation, create Nested Routes, work with Dynamic Segments, and handle Search Params.",
        "Practice fetching data in both Server and Client Components, add Loading states, use Suspense, and debug data fetching in your app.",
        "And much more to enhance your skills as a Next.js developer."
      ],
      "course_content": {
        "Introduction": [
          "Course Requirements",
          "Application Overview",
          "How to Study on Udemy",
          "How to Use Code Examples from Github"
        ],
        "NEXTJS BASIC: Getting Started": [
          "What is Next.js",
          "Your Journey in Next.js",
          "Environment Setup",
          "Creating Next.js Application",
          "Project Structure",
          "Understand of Next.js Component Hierarchy",
          "Several Ways to Style Next.js App",
          "Cleaning Up Application"
        ],
        "NEXTJS BASIC: Pages and Layouts": [
          "Understand of Pages and Layout",
          "Creating Pages and Root Layout",
          "Linking Between Pages and Showing Active Links",
          "Creating Nested Pages and Nested Layouts"
        ],
        "NEXTJS BASIC: Dynamic Segments and Search Params": [
          "Displaying a List of Contact Links in the Sidebar",
          "Making Menu and Menu Link More Reusable",
          "Creating a Dynamic Segment",
          "Rendering Page with Search Params"
        ],
        "NEXTJS BASIC: Fetching Data": [
          "Understanding of Server and Client Components",
          "Setting Up a Fake API Server",
          "Fetching Data in Server Components",
          "Adding a Loading State in Server Components",
          "Fetching Data in Client Components with Suspense"
        ],
        "GITHUB COPILOT: Introduction to Github Copilot": [
          "Introduction: Why You Should Use Github Copilot",
          "Overview of GitHub Copilot",
          "Popular Use Cases of GitHub Copilot for Developers",
          "Github Copilot Payment Plans & Limitations",
          "Understand Github Copilot Data Privacy"
        ],
        "GITHUB COPILOT: Getting Started with GitHub Copilot": [
          "Setting Up Github Copilot and VS Code",
          "Quick Start with GitHub Copilot in VS Code",
          "Learn more about Code Completions",
          "Use Inline Chat for Editor and Terminal",
          "Github Copilot Smart Actions",
          "Use of Github Copilot Chat Interface"
        ],
        "GITHUB COPILOT: Understand Copilot Chat Modes and Context": [
          "Using Copilot Chat – Ask Mode",
          "Editing Code with Copilot – Edit Mode",
          "Automate Tasks with Copilot – Agent Mode",
          "Using Chat Context for Better Responses"
        ],
        "CURSOR AI: Introduction to Cursor AI": [
          "Introduction: Why You Should Use Cursor",
          "Overview of Cursor AI",
          "Popular Use Cases of Cursor AI for Developers",
          "Cursor AI Payment Plans & Limitations",
          "Understand Cursor AI Data Privacy"
        ],
        "CURSOR AI: Getting Started with Cursor AI": [
          "Setting Up Cursor AI Code Editor",
          "Quick start with Cursor AI",
          "Learn more about Tab Completions",
          "Use Inline Chat for Editor and Terminal",
          "Use of Cursor AI Chat Interface"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML/CSS",
        "Basic knowledge of JavaScript (we provide reading materials for those who are not familiar with JavaScript)",
        "Basic understanding of React (components, props, state, etc.)"
      ],
      "description": "Next.js is one of the most popular Full-Stack frameworks because it makes building fast, scalable, and SEO-friendly Web Apps simple.\nStart your journey with Next.js—the leading Full-Stack framework for React developers. This course covers the basics: Pages, Layouts, Navigation, SSR, Data Fetching, Dynamic Routes, and Search Params.\nStep by step, you will build a complete project and understand how to combine Server and Client Components to create production-ready apps. If you plan to start your career as a developer or want to improve your programming skills, this course is right for you.\nWhat's in this course?\nLearn what Next.js is, why it’s popular, and how to set up your first project.\nExplore project structure, clean up starter code, and style your application.\nBuild Pages, Layouts, add Navigation, including Nested Pages and Layouts.\nWork with Dynamic Routes and Search Params to create flexible web apps.\nUnderstand how Server and Client Components work together in Full-Stack apps.\nFetch data in Server Components with Loading states and in Client Components with Suspense.\nBuild a beautiful Server-side App for Viewing Contacts List step by step.\nThis Course includes\nTheory and Practice: Lectures with many practical examples (3-10 min lessons duration).\nSource Code Examples: Full access to source code for all projects and exercises (practice on your own).\nUdemy Certificate: which you will receive after completing the course.\nSupport: If you have any questions, we will always be willing to answer them.\nMeet your instructor!\nDmytro Vasyliev - Senior Front-end Engineer with more than 10 years of professional experience in developing complex Web Applications. I have extensive experience with React and other frameworks, having used it in various projects to build dynamic and efficient user interfaces.\nDo you need to be concerned?\nThis course comes with a 30-day money-back guarantee.\nJoin our course today to learn how to build your first application in React!",
      "target_audience": [
        "Students who want to learn modern web development with Next.js.",
        "Beginners who know React and want to move into Full Stack development",
        "Developers familiar with other frameworks (like Nuxt.js or Node.js) and curious about Next.js"
      ]
    },
    {
      "title": "Develop and Deploy MEAN Stack Project on Azure Cloud",
      "url": "https://www.udemy.com/course/develop-and-deploy-mean-stack-project-on-azure-cloud/",
      "bio": "Learn to build a complete mean stack project using MongoDB, Angular, Express, NodeJS & Bootstrap5 & Deploy using Azure",
      "objectives": [
        "You will learn about every component of MEAN stack",
        "You will learn everything in practical hands-on approach including debugging skills",
        "You will learn to create RESTful API using NodeJS with Express and MongoDB",
        "You will build Angular & Bootstrap based application and integrate it with RESTful API's",
        "You will learn everything about public cloud services",
        "You will create and use most popular Azure cloud services",
        "You will learn the industry standard way of building and deploying software using CICD pipelines on Azure DevOps",
        "You will learn the end to end cycle of software development to deployment to shipping it for production in a controlled automated process"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Introduction to nodejs, npm, expressjs, mongodb"
        ],
        "Introduction to nodejs, npm, expressjs, mongodb": [
          "Installing tools vsc nodejs mongodb",
          "Verify-installation-node-npm-mongodb"
        ],
        "All about MongoDB and NoSQL": [
          "Playing around with MongoDB and NoSQL queries"
        ],
        "Github repo and other setup for API development": [
          "Github-Repo-Branch-Create-Checkout",
          "Setting up-Express-Mongoose-DB-Pull-Request-Process"
        ],
        "Developing RESTful API's": [
          "Mongoose-Model-Schema-Get-Tasklists",
          "Create-TaskList",
          "Tasklist-Get-Update",
          "Tasklist-Delete-By-Id",
          "Create-GetAll-GetOne-Task-PostmanCollection",
          "Update-Delete-One-Task-Pullrequest",
          "Delete-All-Tasks-If-TaskList-Is-Deleted"
        ],
        "Setting up Angular Application": [
          "Angular-overview",
          "Angular-setup-ng-serve",
          "Angular-app-style-create-1st-component",
          "Angular-routing"
        ],
        "Implementing functionality and Integrating with API's": [
          "Building-frontend-with-bootstrap",
          "Enriching-frontend",
          "Implementing-services-for-API-call",
          "Creating-model-classes",
          "Get-and-CreateTaskList-Get-and-CreateTask",
          "deleteTaskList-deleteTask-updatedStatus",
          "showing-all-tasklists-on-page",
          "get-all-tasks-for-a-taskList-onload",
          "mark-task-as-complete",
          "get-tasks-for-a-tasklist",
          "delete-a-task",
          "delete-a-tasklist",
          "new-component-for-adding-task-and-tasklist",
          "dynamic-routing-for-add-new-task",
          "implementing-add-new-tasklist",
          "implementing-add-new-task",
          "making-ui-mobile-responsive",
          "Source code frontend",
          "Source code backend",
          "What-Why-Cloud-OnPremise-Infrastructure",
          "Public-Cloud-And-Cloud-Providers",
          "Cloud-Models-IaaS-PaaS-SaaS",
          "Azure-Cloud-Services-Overview",
          "Azure-DevOps-Overview",
          "Azure-Free-Account-Registration",
          "Azure-Portal-Walkthrough",
          "Azure-DevOps-Walkthrough",
          "Process-to-enable-Azure-Pipeline-Agents in free account",
          "Overview",
          "Create-CosmosDB",
          "Connecting-DB-From-Local-Code",
          "Setup-Azure-Repos-Git-For-NodeExpress-API",
          "CI-Pipeline-For-NodeExpress-API",
          "Create-Azure-AppService",
          "Create-CD-Pipeline-For-NodeExpress-API",
          "Connect-AppService-API-From-Local-AngularApp",
          "Logging-Monitoring-with-AppInsights",
          "Pushing-Angular-Code-to-Azure-Repos-Git",
          "Creating-CI-Pipeline-For-AngularApp-Part-1",
          "Creating-CI-Pipeline-For-AngularApp-Part-2",
          "Create-StorageAccount-Container",
          "Deploy-AngularApp-with-CD-pipeline-Part-1",
          "Deploy-AngularApp-with-CD-pipeline-Part-2",
          "Deploy-AngularApp-with-CD-pipeline-Part-3",
          "Deploy-AngularApp-with-CD-pipeline-Part-4",
          "Testing-End2End-on-Azure",
          "Pull-Request-DTAP-process",
          "Cleanup-Delete-All-Services",
          "Source code"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, JavaScript",
        "Basics of MEAN stack application development"
      ],
      "description": "This is a practical hands-on based fullsatck course. It covers all the concepts that one needs to start building end to end application using MEAN stack technology. The course is structured in such a way that you will learn everything by implementing the concepts through project based approach.\nFollowing are the topics that is covered in this course:\nWhat is mongoDB, how to install mongoDB\nDifferent concepts of NoSQL\nHands-on implementation of various query on mongoDB client\nSetting up git bash\nCreating github repositories and setting them up in local\nInstalling and setting up the code editor\nInstalling nodejs\nLearning everything about nodejs and npm package manager\nInstalling various npm packages\nWhat is ExpressJS\nHow to start writting RESTful API's using Express JS\nHow to connect your Express API's to MongoDB\nHow to create MongoDB schemas with mongoose\nCreating a CRUD operation through handson project\nWhat is Angular framework\nHow to create Angular project\nHow to create components in Angular project\nHow to create services in Angular project\nInstalling and using Bootstrap in Angular application\nConsuming RESTful API's from Angular application\nDynamic Routing in Angular application\nSubmitting form in Angular application\nForm validation in Angular application\nParsing JSON data in Angular application\nYou will learn to use POSTMAN for testing your RESTful API's\nCommitting and pushing code to github repository both for frontend and backend project\nYou will learn many more concepts and techniques that will help you in building any MEAN stack application but also it will help you in your MEAN stack interview.\nYou will get complete source code for frontend and backend project",
      "target_audience": [
        "Anyone who wants to become fullstack developer using MEAN stack",
        "Anyone who wants to learn the industry way of building and deploying software to production in a controlled automated way.",
        "Anyone who wants to learn the CICD, DevOps way of working using the most popular cloud service i.e Azure"
      ]
    },
    {
      "title": "Build WordPress Plugin to extend Beaver Builder",
      "url": "https://www.udemy.com/course/build-wordpress-plugin-to-extend-beaver-builder/",
      "bio": "Learn how to build your own WordPress plugins that allow you to extend Beaver Builder with your own custom modules",
      "objectives": [
        "Create WordPress Plugin",
        "Create custom modules for Beaver Builder",
        "Know how to read Beaver Builder documentation",
        "Know how to read the WordPress Codex"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up a base plugin": [
          "Folder Structure",
          "File Structure",
          "WordPress Plugin Header",
          "Beaver Builder Module",
          "Using Base Plugin"
        ],
        "Pushy Menu": [
          "What is Pushy menu",
          "Enqueue Scripts and Styles",
          "Error Fix",
          "Initial Test",
          "Menu Select Field",
          "Menu Button Content",
          "Left or Right Menu",
          "Menu Align",
          "Style the Button",
          "Styling the Menu",
          "Styling the Overlay"
        ]
      },
      "requirements": [
        "How to setup a local hosting environment",
        "HTML",
        "CSS",
        "jQuery/JS",
        "PHP",
        "Whilst this course will build working modules, understanding the code behind it will go a long way and we do not focus on teaching any code",
        "Access to a Text Editor, preferably with syntax highlighting (Notepad++, Sublime, Brackets, PHP Storm)"
      ],
      "description": "Beaver Builder is a powerful and flexible drag and drop design system. Whether you're a beginner or a seasoned professional, you're going to love taking control of your website with Beaver Builder.\n\nPositioning text and images with the WordPress editor is a pain! Beaver Builder's front end drag and drop interface gives you total control over the layout of your pages.\nBeaver Builder comes ready to go with a range of modules, but there is a lot of creative ideas yet to be explored with custom modules.\nSo if you are looking to extend your own experience with Beaver Builder, are an agency looking to build custom modules for you clients, or looking to generate your own income with plugins, then this course is for you!",
      "target_audience": [
        "Web developers whom use Beaver Builder",
        "Theme developers looking to extend their themes for Beaver Builder",
        "Plugin developers looking to support Beaver Builder"
      ]
    },
    {
      "title": "Extension Development with TYPO3 CMS V8.7.x",
      "url": "https://www.udemy.com/course/extension-development-with-typo3-cms-v87x/",
      "bio": "Become a Junior TYPO3 Developer in 24 hours",
      "objectives": [
        "How to create TYPO3 extension with the Extension Builder",
        "How to createFrontend Plugins and Backend Modules",
        "How to create multilanguage extensions",
        "How to fetch entries from the database and saving entries into it",
        "Know what Extbase and Fluid are",
        "How to create Validators",
        "How to include AJAX in TYPO3 extensions",
        "How to create Scheduler Tasks",
        "How to send emails in TYPO3"
      ],
      "course_content": {
        "Learning overview and preview of the final product": [
          "Introduction"
        ],
        "Crashkurs Object-Oriented Programming and Namespaces": [
          "What does Object Orientied Programming mean?",
          "What are Namespaces?",
          "PHP classes",
          "MVC"
        ],
        "Coding Guidelines": [
          "What are Coding Guidelines?"
        ],
        "Practical test: Theory": [
          "Object-Oriented Pogramming, Namespaces and Coding Guidelines",
          "Visibilities of properties"
        ],
        "Create and Configuration of an extension": [
          "Extension modelling with Extension Builder",
          "Installation of an extension",
          "Creating of records",
          "Preparing the Controller and the View"
        ],
        "Programming the Memory Minigame": [
          "Structure Overview",
          "Creating FlexForms",
          "Register FlexForm and create the plugin",
          "Creating the Controller",
          "Get to know the View (Fluid)",
          "Including CSS and JS files",
          "Creating Partials",
          "Saving the highscore form",
          "Form validation"
        ],
        "AJAX": [
          "What is AJAX?",
          "AJAX via typeNum",
          "AJAX via eID: Introduction and eID base class",
          "AJAX via eID: saveHighscore",
          "AJAX via eID: Testing the highscore form"
        ],
        "Scheduler": [
          "What is the Scheduler?",
          "Creating Tasks",
          "Programming the mail dispatcher",
          "Reading the highscore data with the repository"
        ],
        "Backend module": [
          "What is a backend module?",
          "Register a backend module and create the controller",
          "Creating the view"
        ],
        "Further topics": [
          "Useful sources",
          "Behind the scenes",
          "Ackowledgments"
        ]
      },
      "requirements": [
        "First experience in TYPO3",
        "First experience in PHP",
        "IDE of your choice (i.e.: Eclipse, Zend Studio or PhpStorm)"
      ],
      "description": "I accelerate your time to get into TYPO3 as a Developer by a mutlitple. In this course of 4.5 hours video footage you will learn everything you need to create TYPO3 V8.7 extensions. After this course you can create your own extensions and start your projects in TYPO3.\nThis course gives you a big advantage in understanding extension development for higher TYPO3 version. Because most of the techniques remains the same for later versions.\nThis course is also perfect for TYPO3 newcomer as it shows how the development with TYPO3 works and how you can solve unexpected exceptions.\nYou learn all most important aspects of Extbase and Fluid, like:\nExtension structure\nCreating frontend plugins\nCreating backend modules\nCreating Scheduler tasks\nWorking with the datbase (Model & Repository)\nCreating custom validators for forms\nAJAX - Requests via eID and typeNum\nInclude TypoScript (Setup & Constants)\nand much more\nTo make this course more fun, you will develope with me a small Memory game.\nYou will have the opportunity to compare your code with mine. You will always find my files attached to the corresponding lessons. And at the end I will give you the complete extension source code as well.\nI recommend that you have some experience in PHP programming and TYPO3 CMS as an editor as well to follow along.",
      "target_audience": [
        "Everyone that wants to learn how to create TYPO3 extensions",
        "Extbase and Fluid Beginner",
        "Beginner in Object Oriented Programming, Namespaces, MVC"
      ]
    },
    {
      "title": "Run Multiple Sites on a Cloud Server: AWS & Digital Ocean",
      "url": "https://www.udemy.com/course/run-multiple-sites-on-a-cloud-server-aws-digital-ocean/",
      "bio": "Server Deployment | Apache Configuration | MySQL | PHP | Virtual Hosts | NS Records | DNS | AWS Foundations | EC2",
      "objectives": [
        "A solid understanding of the fundamentals of remote server deployment and configuration, including network configuration and security.",
        "The ability to install and configure the LAMP stack, including the Apache web server, MySQL database server, and PHP scripting language.",
        "Expertise in hosting multiple domains on one virtual server, including setting up virtual hosts and managing domain names.",
        "Proficiency in virtual host file configuration, including creating and configuring virtual host files and understanding various directives and parameters.",
        "Mastery in DNS zone file configuration, including creating and managing DNS zone files and understanding various record types and their uses.",
        "A thorough understanding of AWS foundations, including the AWS global infrastructure, key AWS services, and features.",
        "A deep understanding of Amazon Elastic Compute Cloud (EC2) foundations, including creating and managing instances, configuring security groups, and networking.",
        "The ability to troubleshoot common issues related to remote server deployment, LAMP stack installation and configuration, virtual host file configuration, and D",
        "An understanding of best practices for remote server deployment and configuration, including security considerations and optimization for performance.",
        "Practical experience in working with remote servers and cloud-based solutions through hands-on labs and exercises.",
        "The ability to apply the knowledge gained from the course to real-world scenarios and challenges faced in the field of web hosting and cloud computing.",
        "A competitive edge in the job market, with the ability to pursue career opportunities in web hosting and cloud computing."
      ],
      "course_content": {
        "Introduction": [
          "Course Objectives"
        ],
        "Server Basics": [
          "Deploying a Virtual Server on Digital Ocean",
          "Creating and Attaching a Floating IP",
          "Intro to Terminal and Root user Authentication"
        ],
        "Setup LAMP Stack on Ubuntu": [
          "Apache Installation and Testing",
          "Installing MySQL Database Management System",
          "Installing & Testing PHP",
          "Installing PhpMyAdmin for Database Administration"
        ],
        "Hosting Multiple Domains": [
          "Introduction to Virtual Hosts",
          "Directory Structure, Permissions and Test Files",
          "Configuring Virtual Host Files and Directives",
          "Name Server Configuration",
          "DNS Zone File Configuration & Testing",
          "Installing SSL for each Domain using Let's Encrypt"
        ],
        "Getting Started with AWS": [
          "Introduction",
          "AWS Pricing Foundations",
          "AWS Free Tier Overview",
          "AWS Acceptable Use Policy",
          "AWS Account Registration",
          "AWS Cloud Practitioner Exam - Key Topics",
          "AWS Global vs. Regional Services",
          "Global vs. Regional Services Example",
          "Creating Billing Alerts",
          "AWS Multi-Factor Authentication (MFA)",
          "Activate MFA for the Root User Account",
          "Creating IAM Users and Groups",
          "IAM User Custom Sign-In Link",
          "Configure a Custom Password Policy"
        ],
        "Amazon Elastic Compute Cloud (EC2)": [
          "Introduction to EC2",
          "EC2 Instance Core Features",
          "EC2 Instance Types",
          "Amazon Machine Images (AMI)",
          "Creating an IAM User for EC2",
          "The EC2 Dashboard",
          "Deploying an EC2 Instance",
          "Deploying an EC2 Instance (Continued)",
          "EC2 Instances Console",
          "Elastic IP (Theory)",
          "Elastic IP (Guide)",
          "EC2 Instance Administration (Guide)",
          "EC2 Instance Launch Templates",
          "Creating an Amazon Machine Image (AMI)",
          "IAM Roles for EC2 (Guide)",
          "Introduction to Security Groups",
          "Security Groups (Guide)",
          "Secure Socket Shell (SSH) Overview",
          "PuTTY (SSH) Client for Windows",
          "EC2 Instance Connect (Guide)"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course is designed to provide a comprehensive overview of the fundamentals of remote server deployment and configuration. We explore LAMP stack installation, virtual host file configuration, DNS zone file configuration, and AWS foundations. By the end you will easily be able to deploy remote servers for the purpose of hosting multiple domains and websites.\n\nThe course begins with an overview of remote server deployment and configuration, including the basics of server deployment, network configuration, and security. Students learn about different server deployment methods, such as cloud-based solutions and virtualization, and how to configure their servers for optimal performance.\n\nNext, the course delves into LAMP stack installation and configuration. Students gain a thorough understanding of the components of LAMP stack, including the Apache web server, MySQL database server, and PHP scripting language. Students learn how to install and configure each component, as well as how to troubleshoot common issues.\n\nHosting multiple domains on one virtual server is a common practice in web hosting, and this course covers the topic extensively. Students learn how to set up virtual hosts, configure DNS records, and manage domain names. They also learn how to troubleshoot common issues and optimize their server for performance.\n\nVirtual host file configuration is an essential part of hosting multiple domains on one virtual server, and this course provides a comprehensive overview of the topic. Students learn to create and configure virtual host files, including the various directives and parameters that are used in the configuration.\n\nDNS zone file configuration is another critical aspect of web hosting, and we provide an in-depth walk-through of the topic. Students learn to create and manage DNS zone files, including the various record types and their uses.\n\nThe course then shifts focus to AWS foundations, providing students with a thorough understanding of the core concepts and principles of AWS. Students learn about the AWS global infrastructure, including regions and availability zones, as well as key AWS services and features.\n\nFinally, the course covers Amazon Elastic Compute Cloud (EC2) foundations. EC2 is a central component of AWS, and this course provides students with a comprehensive understanding of EC2 instances, including how to create and manage instances, as well as how to configure security groups and networking.\n\nThroughout the course, students have ample opportunity to apply their knowledge through hands-on labs and exercises. We provide access to a variety of resources, including online documentation and support forums, to help them deepen their understanding of the course material.",
      "target_audience": [
        "Web Developers: Web developers who want to enhance their skills in remote server deployment, LAMP stack installation, and virtual host configuration can greatly benefit from this course.",
        "System Administrators: System administrators who want to expand their knowledge in server deployment, domain management, and DNS zone file configuration can take advantage of this course.",
        "IT Professionals: IT professionals who want to advance their careers in cloud computing and AWS can benefit from this course, as it covers AWS foundations and Amazon Elastic Compute Cloud (EC2) foundations.",
        "Freelancers: Freelancers who provide web hosting services to their clients can benefit from this course, as it provides a comprehensive understanding of web hosting and cloud computing.",
        "Entrepreneurs: Entrepreneurs who plan to launch their online businesses can benefit from this course, as it provides a solid foundation in web hosting and cloud computing, enabling them to effectively manage their web presence."
      ]
    },
    {
      "title": "Building Amazon Style Full Stack Microservices",
      "url": "https://www.udemy.com/course/building-amazon-style-full-stack-microservices/",
      "bio": "Using .Net 9, Rabbit MQ, Saga Pattern, Outbox, Angular 20, Docker, Kubernetes, Azure, Service Mesh and many more...",
      "objectives": [
        "Learn how to create Microservices using .Net Core",
        "Learn how to implement message queues",
        "Learn how to implement Mediator Pattern",
        "Learn how to implement CQRS Pattern",
        "Lear how how to Containerize entire solution",
        "Lear how how to use Application Gateway",
        "Learn how to use Saga Pattern",
        "Learn how to use Outbox Pattern",
        "Learn how to implement structured Logging",
        "Lear how to handle cross cutting concerns like ELK Stack, Observability etc",
        "Learn how to put all the workloads on the K8s cluster",
        "Learn how to apply Service Mesh using Istio",
        "Learn how to implement Side Car pattern"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Application Flow",
          "Solution Overview",
          "Github Strategy",
          "Microservices Demo",
          "End to End Application Demo"
        ],
        "2. Creating Catalog Microservices": [
          "Introduction",
          "Creating Solution",
          "Creating Catalog Microservices",
          "Installing Nuget Packages",
          "Creating Base Entity",
          "Creating Product Entity",
          "Creating Product Brand and Product Type",
          "Creating Brand and Type Repository",
          "Creating Catalog Specification",
          "Creating Product Repository",
          "Creating Pagination Class and Extending Product Repository",
          "Implementing Brand Repository",
          "Implementing Type Repository",
          "Implementing Product Repository",
          "Implementing Product Repository - 2nd Part",
          "Creating Seed Data",
          "Creating Database Seeder",
          "Creating Product DTO",
          "Creating Get All Brands Query and Response",
          "Creating Get All Brands Handler",
          "Creating Get All Types Query and Handler",
          "Get All Products Query and Handler",
          "Get Product By Brand Query And Handler",
          "Get Product By Id Query and Handler",
          "Get Product By Name Query and Handler",
          "Create Product Command and Handler",
          "Update Product Command and Handler",
          "Delete product Command and Handler",
          "29. Creating Controller - Part 1",
          "30. Creating Catalog Controller - 2nd Part",
          "31. Creating Catalog Controller - 3rd Part",
          "32. Configuring Program.CS File",
          "Configuring Launch Properties",
          "Setting up Mongo Db using Docker Command",
          "Fixing the Docker Issue",
          "Fixing the Pagination Logic and Swagger Demo",
          "Testing other APIs say Post, Put and Delete",
          "Fixing Created Date Issue"
        ],
        "Creating Basket Microservice": [
          "Introduction",
          "Creating Basket Microservice",
          "Creating Folder Structures",
          "Installing Nuget Packages",
          "Creating Basket Checkout Entity",
          "Creating Shopping Cart and Shopping Cart Items",
          "Creating IBasket Repository",
          "Implementing Basket Repository",
          "Creating Get basket By UserName Query",
          "Creating Shopping Cart and Item Response",
          "Creating Get Basket By User Name Handler",
          "Creating Basket Mapper",
          "Fixing the Mapper Issue",
          "Implementing Delete Basket Command and Handler",
          "Creating Shopping Cart Command and DTO",
          "Creating Shopping Cart Command Handler",
          "Creating Basket Controller - 1st Part",
          "Creating Shopping Cart and Item DTO",
          "Creating Basket Controller - 2nd Part",
          "Wiring up Program.CS File",
          "Setting up Launch Settings and Docker for Redis",
          "Swagger Demo",
          "Fixing Delete Basket Issue"
        ],
        "Creating Discount Microservice": [
          "Introduction",
          "Creating Discount Microservices",
          "Creating Folder Structures",
          "Installing Nuget Packages",
          "Creating Coupon Entity",
          "Creating Discount Repository",
          "Implementing Discount Repository - 1st Part",
          "Implementing Discount Repository - 2nd Part",
          "Creating Discount Query",
          "Creating Get Discount Query Handler",
          "Creating Get Discount Handler",
          "Adding Custom Exception",
          "Using Custom Exception",
          "Creating Discount Command and Handler",
          "Extending Mapper with To Entity Method",
          "Creating Update Discount Command and Handler",
          "Creating Delete Command and Handler",
          "Refactoring the Solution Folder Structure",
          "Creating Db Migration Script",
          "Creating the Discount Protobuf file",
          "Creating Discount Service",
          "Creating Discount Service - 2nd Part",
          "Wiring up Components in Program file",
          "Setting Up App Settings"
        ],
        "Consuming Discount into Basket Microservice": [
          "Introduction",
          "Creating Protobuf client file",
          "Installing Required Nuget Packages",
          "Creating Discount Grpc Service",
          "Making the AppSettings Changes",
          "Making Handler Changes to Apply Discount",
          "Registering Discount Service",
          "Running PostGreSql using Docker",
          "Fixing the Dependency Injection Issue",
          "Verifying the Coupon Table",
          "Swagger Demo"
        ],
        "Creating Ordering Microservice": [
          "Introduction",
          "Creating Ordering Microservice",
          "Creating Folder Structures",
          "Installing Required Nuget Packages",
          "Creating Entities",
          "Creating IAsync Repository",
          "Creating Order Context Class",
          "Implementing IAsync Repository",
          "Overriding Save Changes Async Method",
          "Implementing Order Repository",
          "Creating Order Dto",
          "Creating Get Order List Query and Handler",
          "Creating Order Mapper",
          "Creating Checkout Order Command and Handler",
          "Creating Update Order Command and Handler",
          "Creating Mapping Function for Update Method",
          "Creating Order Not Found Exception",
          "Implementing Delete Order Command and Handler",
          "Creating Fluent Validation for Checkout Order Command",
          "Creating Fluent Validation for Update Order Command",
          "Creating Validation Behavior Middleware",
          "Creating Middleware to handle the Unhandled Exception Behavior",
          "Creating Order Context Factory",
          "Creating Seed Db Method",
          "Creating Db Migration Extension Method",
          "Registering Application Services",
          "Adding Infra Services",
          "Wiring up Program File",
          "Creating Orders Controller - 1st Part",
          "Creating Order Controller - 2nd Part",
          "Creating Order Controller - 3rd Part",
          "Applying SQL Migration",
          "Swagger Demo of Ordering"
        ],
        "Setting Up Async Communication Between Basket and Ordering Microservice": [
          "Introduction",
          "Creating Infrastructure Project",
          "Creating Base Integration Event",
          "Creating Basket Checkout Event",
          "Installing Nuget Packages",
          "Creating Basket Checkout Command",
          "Creating Checkout Basket Command Handler",
          "Creating Basket Checkout Event Mapper",
          "Extending Basket Controller",
          "Wiring up Program File in Basket API",
          "Installing Nuget Packages in Ordering Microservice",
          "Creating Basket Ordering Consumer",
          "Creating Checkout Order Command Mapper",
          "Wiring up Mass Transit in Ordering Microservice",
          "Issue with Basket API",
          "Rabbit MQ Demo"
        ],
        "Implementing Saga Pattern": [
          "Introduction",
          "Saga Pattern Overview",
          "Creating OutBox Message Entity",
          "Creating Order Status Entity",
          "Extending Order Context",
          "Extending Order Repository",
          "Extending Checkout Handler with Mapper",
          "Creating Outbox Message Dispatcher Service",
          "Creating Order Created Event",
          "Wiring Up Program file with Outbox Dispatcher",
          "Applying EF Migrations",
          "OutBox Pattern Demo"
        ],
        "Creating Payment Microservice": [
          "Introduction",
          "Creating Payment Microservices",
          "Installing Nuget Packages",
          "Creating Order Created Consumer",
          "Wiring up Consumer in Program file",
          "App Settings Changes",
          "Creating Payment Completed Consumer",
          "Creating Payment Failed Consumer",
          "Wiring up Program file with new Consumers",
          "Saga Outbox Pattern Demo"
        ],
        "Creating Identity Microservice": [
          "Introduction",
          "Creating Identity Microservice",
          "Installing Nuget Packages",
          "Creating Model and DbContext",
          "Setting up App Settings",
          "Wiring up Program File",
          "Understanding the Program File Change",
          "Creating Register and Login DTO",
          "Creating Authentication Controller - 1st Part",
          "Creating Authentication Controller - 2nd Part",
          "Updating the Launch Settings",
          "Setting Up Docker Container for Sql Server",
          "Setting up the Sql Server for Identity Db",
          "Identity Module Demo"
        ]
      },
      "requirements": [
        "Basics of C#, .Net Core, Docker, Angular"
      ],
      "description": "Disclaimer:- This course requires you to download \"Docker Desktop\" from Docker website. If you are a Udemy Business user, please check with your employer before downloading software.\n\nWelcome to \"Building Amazon Style Full Stack Microservices\"\nHave you ever wondered how Amazon’s massive e-commerce platform runs millions of transactions daily with seamless performance? This course is designed to help you build an Amazon-style system using .NET Core Microservices step by step.\nIn this 30+ hours course with 300+ videos, you’ll not just learn the theory—you’ll build, run, and scale microservices like a pro. From creating a strong backend foundation to designing a modern UI and finally deploying with cloud infrastructure, this course is your roadmap to mastering real-world, production-grade systems.\n\n\nCourse Phases\nPhase 1 – Backend Microservices Development\nBuild Amazon-style backend services using .NET Core and Clean Architecture.\nImplement patterns like CQRS, Pub-Sub, and Event-Driven Communication.\nAlso for reliability and resiliency patterns like Saga Pattern and Outbox Pattern.\nApart from the Repository,  Specification and Factory Pattern.\nUse SQL Server, MongoDB, PostgreSQL, and Redis for persistence.\nEnable messaging and inter-service communication with RabbitMQ & GRPC.\nRun your entire microservices ecosystem locally on Docker containers.\nPhase 2 – Frontend Development (UI Layer)\nBuild a fully functional E-commerce Web App inspired by Amazon.\nDevelop with Angular, consuming APIs from the backend.\nAdd modern UI features like product listing, filtering, cart management, and checkout.\nImplement error handling, pagination, and responsive design to deliver a production-grade storefront.\nPhase 3 – Infrastructure & Deployment\nCloud Native Deployment on Azure\nComplete CI-CD setup.\nDeploy microservices on Kubernetes (AKS) with confidence.\nManage traffic and observability using Istio Service Mesh.\nAutomate deployments with Helm charts.\nIntegrate monitoring and logging tools like Grafana & Prometheus.\nTake your system from local containers to cloud-scale, Amazon-style infrastructure.\nWho Is This Course For?\nFreshers wanting to break into backend and frontend development with Microservices.\nJunior Developers eager to move beyond CRUD apps into scalable system design.\nMid-Level Developers who want to master frontend + backend + infra in one course.\nSenior Developers / Architects building distributed systems with modern tooling.\nCourse Stats\n30+ Hours of in-depth, hands-on content.\n300+ Videos covering microservices, frontend, and cloud deployment.\nStep-by-Step Guidance – build from scratch, like an Amazon-style platform.\nLifetime Access & Updates – stay current with evolving tech.\nWhy This Course?\nThis isn’t just another coding tutorial. By the end of this course, you’ll have:\nBuilt production-ready microservices with .NET Core.\nDesigned a dynamic UI inspired by Amazon.\nDeployed your system with cloud-native infrastructure tools.\nGained the skills to architect, develop, and scale enterprise-level systems.\nYour Amazon-Style Microservices Journey Starts Here.\n\n\nJoin today and begin building scalable, secure, and efficient applications from the ground up.",
      "target_audience": [
        "Intermediate to Senior .NET Developers who want to move beyond CRUD apps.",
        "Software Architects looking to design scalable, event-driven systems.",
        "Backend Engineers exploring Saga, Outbox, and message-driven architectures.",
        "Full-Stack Developers aiming to build real-world e-commerce applications.",
        "Cloud & DevOps Enthusiasts eager to work with Docker, RabbitMQ, and distributed systems.",
        "Professionals preparing for advanced roles in microservices, system design, or solution architecture.",
        "Tech leads and senior engineers who want to mentor teams on enterprise-grade microservices.",
        "Educators & trainers seeking a solid reference project for teaching microservices patterns."
      ]
    },
    {
      "title": "Generative AI for Dynamic Java Web Applications with ChatGPT",
      "url": "https://www.udemy.com/course/generative-ai-for-dynamic-java-web-applications-with-chatgpt/",
      "bio": "AI-Assisted Java Web Development: Build Smarter Applications with ChatGPT Guidance",
      "objectives": [
        "Generate Java web application source code using ChatGPT for streamlined development",
        "Build dynamic web applications with Java, Servlet, and JSP technologies",
        "Deploy and manage Java web applications on Apache Tomcat",
        "Design and connect databases with MySQL and JDBC for efficient data handling",
        "Utilize Eclipse EE code editor for optimized coding and project management",
        "Implement AI-driven features with step-by-step guidance from ChatGPT",
        "Optimize web applications for performance, security, and scalability",
        "Manage databases effectively using MySQL Workbench tools",
        "Automate complex tasks in web development using AI-generated code",
        "Integrate best practices in Java web development for real-world applications",
        "Learn to apply Generative AI skills for your future learning"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Java programming and object-oriented concepts",
        "Basic on web technologies like HTML, CSS, and JavaScript"
      ],
      "description": "Embark on a transformative journey into the world of Generative AI with our specialized course, \"Generative AI for Dynamic Java Web Applications with ChatGPT AI.\" Designed for developers eager to explore the intersection of AI and web development, this course provides a comprehensive guide to building intelligent, dynamic, and user-friendly Java web applications.\n\n\nLearn to apply Generative AI skills for your future learning and projects to transforming your thoughts to real-world apps\n\n\nYou’ll start by mastering the web fundamentals of Java and its powerful ecosystem, using the Eclipse EE code editor to streamline your development process. Learn to create responsive web applications with Servlets and JSP, and efficiently deploy them using Apache Tomcat. Dive into the intricacies of database management with JDBC, connecting your applications seamlessly to MySQL databases, and leveraging the MySQL Workbench for optimal database design and maintenance.\n\n\nThe course takes a step further by leveraging ChatGPT, OpenAI's cutting-edge language model, to assist in generating source code and guiding you through the steps of implementation. Discover how to use ChatGPT to create AI-driven features that enhance user interaction, automate complex tasks, and add a new level of intelligence to your applications. You'll gain hands-on experience in using ChatGPT to craft code for your Java-based web projects, helping you build applications that are not just functional but also adaptive and smart.\n\n\nBy the end of this course, you'll have the skills and knowledge to build and deploy AI-powered Java web applications that are both innovative and efficient. Whether you're a budding developer or a seasoned professional, this course will equip you with the tools and techniques to stay ahead in the rapidly evolving field of web development. Join us and start building the future of web applications today!",
      "target_audience": [
        "Aspiring Java developers seeking to enhance their web development skills with AI",
        "Experienced programmers looking to integrate AI-driven features in web applications",
        "Web developers eager to streamline coding processes using ChatGPT",
        "Professionals aiming to build intelligent, dynamic Java web applications",
        "Students interested in mastering Java web development with a focus on AI assistance"
      ]
    },
    {
      "title": "Learn JavaScript Fundamentals Phase 1",
      "url": "https://www.udemy.com/course/learn-javascript-fundamentals-first/",
      "bio": "We created Byte Sized learning modules to help you learn the FUNDAMENTALS of JavaScript. You will be ready for Phase 2!",
      "objectives": [
        "Learn the Fundamentals of JavaScript",
        "Learn How to Think Like A Programmer",
        "Be able to problem solve better",
        "You'll be able to complete 3 Javascript Major Projects to solidify your learning"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required",
        "Windows or Mac computer is recommended"
      ],
      "description": "Hello, my name is Rob. I've been teaching at Coding Boot Camp for the past four years and I decided to create this coursework to help people that are going to be going through a Boot Camp. you'll notice that the course material is not as robust as other courses that you might find on Udemy, however, the goal of this course is to give you the basic fundamentals of JavaScript, to help you continue your learning experience. We did want to make this course small and bite-size so that way you're not getting overwhelmed with a bunch of other learning material aids. Of course we could've put react and node JS in here, but we wanted to focus on the basics.\n\n\nWhat makes this course different than others is we work off of the cycle of LEARN a new javascript topic, we give you a CHALLENGE to test your learning with  walk-through solution. We repeat this process to ensure you are ready for the 3 final projects that you will be creating in this course. Learn - Challenge - Repeat is going to be your friend and learning this material.\n\n\nOther video courses just show you the introduction of the material but fail to give you a challenge prompt to test you on that knowledge. This course is meant for you too, go through the modules in chronological order the way that they are presented to you. Again, each module builds upon itself so you need to go through it in that order.\n\n\nThis course goes through the very basics from learning how to comment your code. You're going to learn about variables. You're going to learn about data types. After data types, we introduce conditional logic and then we follow that up with functions. The last thing that you're going to learn, in this course is arrays and objects.\n\n\nWe have three major challenges that are spread throughout this course for you to test yourself on what you have learned. Those challenges are creating a roll of dice game, printing, a laundromat receipt, based on what was ordered, and a game of pick-up sticks. All of these are done in the consul so we don't really have to worry about any HTML or CSS.\n\n\nWho is this course for? It's for those who want to learn the fundamentals of JavaScript in a structured format going over the baby steps first.\n\n\nIf you're thinking about going through a Boot Camp, then I would highly recommend that you go through this course first to give you an idea on what you're about to go through.\nGet Exposure to Code Early\nBe ahead of your peers\nStart thinking like a programmer\nAnd if you're not currently enrolled in a Boot Camp, then this would be a great course for you to test the waters to see if it is something that you are interested in.",
      "target_audience": [
        "Beginner HTML Developer wanting to learn Javascript",
        "Someone looking to get exposed to code prior to going through a coding bootcamp"
      ]
    },
    {
      "title": "Web Development by Doing: Javascript",
      "url": "https://www.udemy.com/course/webdevbydoing-javascript-complete-and-practical/",
      "bio": "Javascript from Scratch. Discover Real And Practical Examples Of How And When To Use JavaScript",
      "objectives": [
        "Learn Javascript From Scratch",
        "Discover Practical Uses For Javascript"
      ],
      "course_content": {
        "Basics of Javascript": [
          "Introduction",
          "Getting Started",
          "Getting Started With Functions",
          "Working With Events - And - Cross Browser Differences",
          "Multiple Types of Events",
          "Variables and Getting Information From The Document"
        ],
        "Conditions": [
          "Conditional Statements",
          "More on Conditional Statements",
          "Switch Case Statements"
        ],
        "Intro to Affecting The Document": [
          "Getting The Time",
          "Working With The Time",
          "Custom Dependent Text"
        ],
        "Styling": [
          "Javascript Styling",
          "Arrays",
          "More on Styling"
        ],
        "Projects": [
          "Responsive Absolute Positioning",
          "Making Better Forms",
          "Making a Lightbox",
          "Creating a Mask",
          "Getting Element Attributes - And - Working With Arrays",
          "Setting Attributes - AND - Substrings",
          "Continuing To Manipulate The Document - AND - Training Your Customers",
          "Putting it together",
          "Loops",
          "Finishing The Gallery",
          "Adding Captions",
          "External Javascripts",
          "Considering Site Speed"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML / CSS"
      ],
      "description": "If you've learned a little bit about HTML and CSS than you're ready to take the next step in front end development with Javascript. Some people find javascript to be a little confusing, but I take you step by step through real world examples so that you can learn the easy way... By doing!\nWhat is Javascript? Javascript is what brings your website to life! Its what allows users to interact with things on your website. The page you're looking at right now uses it all over the place. See those little arrows below this description that give additional details about this course? Well when you click on that to reveal the additional text, THATS JAVASCRIPT! Look off to the left where theres the description about me, when you click on the \"more\" button, thats JavaScript too!\nWhy learn Javascript? If you're serious about being able to build a website, then knowing Javascript is essential. Without it you can't really consider yourself a front end developer. You can already see how its used on this one page alone, just imagine where else its used, and the possibilities of what YOU can do with it. This course will take you from knowing nothing to being a javascript pro. You wont just learn some boring code syntax, you'll learn how to use it in real life examples.",
      "target_audience": [
        "Aspiring Web Developers / Designers",
        "Front End Developers"
      ]
    },
    {
      "title": "SocketIo React Node Public and Private Chat App",
      "url": "https://www.udemy.com/course/react-node-socketio-public-and-private-chat-app/",
      "bio": "Master realtime apps building extensive chat app (public and private) using socket io react and node.",
      "objectives": [
        "Learn socket io for realtime communication",
        "Learn to build full stack app using react node and socket io",
        "Implement public and private chat system",
        "Learn to implement essentials features of a typical chat app"
      ],
      "course_content": {
        "Client and Server Setup": [
          "Are you new to JavaScript React and NodeJs?",
          "Websockets",
          "Download source code",
          "Client setup",
          "Server setup",
          "Connection debugging",
          "How it works?"
        ],
        "Socket IO Basics and Public Chat": [
          "User form",
          "Socket events emit and on",
          "Emit messages",
          "Live messages",
          "Live users"
        ],
        "Essentials of chat app": [
          "Preparing for private chat",
          "Socket middleware",
          "Users with additional props",
          "Users list and yourself",
          "Sorting users",
          "Connected true or false",
          "Connected disconnected status",
          "Refactoring layout",
          "Message object",
          "Uppercase names",
          "User joined notification",
          "Username taken and user left alert",
          "Typing alert",
          "Scroll to bottom",
          "On username click"
        ],
        "Private chat": [
          "How private message works?",
          "Emit private message",
          "On private message",
          "Render private message",
          "Has new messages alert",
          "Current user and message count"
        ],
        "Deployment": [
          "Preparing to deploy",
          "Final improvements before deploy",
          "Digital ocean and github repos",
          "Nodejs and NGINX setup",
          "Running client",
          "Running server"
        ],
        "Bonus": [
          "Other courses you may like"
        ]
      },
      "requirements": [
        "Basic understanding of react and node js"
      ],
      "description": "Do you want to master socket io to build realtime applications using MERN stack? Then this course is all you need.\nI have put many months of hard work into this course to cover almost everything you need to know about socket io to build real time apps.\nYou will code the app from scratch and understand how to build your app along the way by adding many essentials features that make up a very solid realtime chat app.\nEven though it is a chat app, the concepts you will learn in this course will help you to add realtime features in any MERN stack app.\nI have gone into very details on building this chat app to cover almost all the possible scenarios such as user public and private chat, user joined and left notification, user online and offline status, duplicate usernames, error messages, unread messages notification, private chat with multiple users at the same time and much more.\nThis course is packed with so much knowledge that by the end of this course, you will feel super comfortable to use socket io in your next project to add realtime features nice and easy!\nEnroll into this course and take your skill set to a whole new level.",
      "target_audience": [
        "Any JavaScript developer looking to build realtime app using react node and socket io"
      ]
    },
    {
      "title": "Mastering Bun - The Modern Fullstack Development",
      "url": "https://www.udemy.com/course/mastering-bun-the-modern-fullstack-development/",
      "bio": "Master the Lightning-Fast JavaScript Runtime with Speed, Elegant APIs, and a Cohesive Toolkit for Ultimate Productivity",
      "objectives": [
        "Bun Fundamentals: Dive deep into the core principles of Bun and unlock its full potential.",
        "Server-Side Mastery: Build robust APIs with Express & Elysia and conquer server-side development with confidence.",
        "Frontend Fusion: Integrate Bun with cutting-edge frontend technologies like Elysia and Vite.",
        "Data Dynamics: Store and manage your data efficiently with SQLite, the perfect database for modern web apps.",
        "Testing and Security: Ensure your code's reliability and protect your applications from vulnerabilities.",
        "Real-time Power: Master socket programming and build dynamic, interactive features.",
        "Package Management: Become a pro at managing dependencies with Bun's built-in tool...and much more!",
        "Explore advanced Bun features, deployment strategies, and best practices."
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML, CSS & JavaScript/TypeScript knowledge, but it isn't mandatory!",
        "Time, attention and dedication to learn & practice."
      ],
      "description": "Known for its exceptional speed and elegant APIs, Bun has become the go-to choice for developers seeking a seamless and optimized JavaScript experience.\nIn this comprehensive course, you'll dive deep into its minimal yet powerful APIs, designed for tasks like HTTP server management and streamlined file operations. Seamlessly transitioning from Node.js as Bun natively implements an multitude of core APIs, ensuring a smooth shift for developers.\n\nWhy Bun?\n\nTurbocharged Speed: Bun boasts significantly faster startup times and lower memory usage compared to traditional tools like Node.js, thanks to its custom runtime and lightweight JavaScript Core engine. Build lightning-fast websites and applications that leave users in awe.\n\nEffortless Simplicity: Ditch the juggling act of multiple tools! Bun integrates a built-in package manager, bundler, and test runner, streamlining your development process and making coding an absolute breeze.\n\nModern Fullstack Masterclass: This course doesn't just teach you Bun; it equips you with the skills to build complete, modern web applications. Master everything from server-side development with Express.js to frontend magic with Elysia and Vite.\n\nFuture-Proof Your Career: Bun is rapidly gaining traction in the industry. By mastering this cutting-edge technology, you'll distinguish yourself from the crowd and set your career on the fast track to success.\nBy enrolling in this course you will learn-\n\nFundamentals of Bun and server-side technologies,\nBuffers and file-handling,\nExpress.js,\nElysia,\nSQLite,\nVite,\nTesting,\nSocket\nPackage management\nAnd much more…\nBenefits for You:\n\nBuild faster, more efficient applications that leave users impressed.\nSimplify your development workflow and boost your productivity.\nLand your dream job with in-demand fullstack skills.\nFuture-proof your career by mastering the hottest tech in web development.\nSo are you ready to join the Bun revolution?\nEnroll today and embark on your journey to becoming a fullstack master with Bun!\nClick the \"Enroll Now\" button below and start building your future today!",
      "target_audience": [
        "Aspirants who want to become full-stack Bun developers.",
        "Junior & mid-level developers who want to enhance their skills to the max!",
        "Expert developers who want to upgrade their existing development skills."
      ]
    },
    {
      "title": "Build 6 Types of WordPress Development Websites in 1 Course",
      "url": "https://www.udemy.com/course/build-6-types-of-wordpress-development-websites-in-1-course/",
      "bio": "Build Blogging, ChatGPT, pharmacy, fitness, job search portal, etc with WordPress websites in this one Course.",
      "objectives": [
        "Build 6 Types of WordPress Development Websites in 1 Course",
        "Setting Up WordPress For Websites Creation",
        "Build Your Own ChatGPT With WordPress & Elementor",
        "WordPress Web Design Masterclass Using Elementor For Free",
        "Build Money Making Blogging Website with ChatGPT & WordPress",
        "Build Pharmacy Ecommerce Website with WordPress",
        "Build Gym, Fitness or Yoga Website with WordPress",
        "Build Job Search Portal Website with WordPress"
      ],
      "course_content": {
        "Build 6 Types of WordPress Development Websites in 1 Course": [
          "Build 6 Types of WordPress Development Websites in 1 Course (Promo)",
          "Elementor Settings (Important)"
        ],
        "Setting Up WordPress For Websites": [
          "Setting Up Web Hosting",
          "Setting Up Domain Name",
          "Setting Up SSL Certificate",
          "Setting Up WordPress Website",
          "Setting Up Subdomain & WordPress",
          "Setting Up Business Email"
        ],
        "WordPress Web Design Masterclass Using Elementor For Free": [
          "WordPress Web Design (Promo)",
          "Create Subdomain/ Domain",
          "Download Resources",
          "Installing Themes",
          "Installing Plugins",
          "Creating Pages",
          "Connecting Pages",
          "Setting Up Blogs",
          "Home Design 1",
          "Home Design 2",
          "Home Design 3",
          "Importing Pages",
          "Customize Pages",
          "Creating Menus & Footer",
          "Website Customization"
        ],
        "Start Free Money Making Blogging Website with ChatGPT & WordPress": [
          "Build Blogging Website (Promo)",
          "Create Subdomain/ Domain",
          "Download Resources",
          "Installing Themes",
          "Installing Plugins",
          "Creating Pages",
          "Connecting Pages",
          "Plugin Configuration",
          "Creating SEO optimized Blog",
          "Home Page",
          "Contact Page",
          "Setting Menus",
          "Website Customization",
          "Make Money with Blog"
        ],
        "Build Pharmacy Ecommerce Website with WordPress": [
          "Build Pharmacy Website (Promo)",
          "Create Subdomain/ Domain",
          "Download Resources",
          "Installing Theme",
          "Installing Plugins",
          "WooCommerce Settings",
          "WooCommerce Payments",
          "Creating Single Products",
          "Creating Variable Products",
          "Creating Affiliate Products",
          "Creating Pages",
          "Connecting Pages",
          "Design 1",
          "Design 2",
          "Create Tracking Page",
          "Create Contact Page",
          "Writing SEO Optimized Blogs",
          "Setting Up Sidebars for Shop",
          "Setting Up Sidebars for Blogs",
          "Menus Setup For Website",
          "Footers Setup For Website",
          "Website Customization",
          "Website Testing"
        ],
        "Build Gym, Fitness or Yoga Website with WordPress": [
          "Build Gym, Fitness or Yoga Website (Promo)",
          "Create Subdomain/ Domain",
          "Download The Resources",
          "Installing Themes",
          "Installing Plugins",
          "WooCommerce Settings",
          "WooCommerce Payments",
          "Creating Pages",
          "Connecting Pages",
          "Home Design 1",
          "Home Design 2",
          "Setting Up Blogs & Menus",
          "Setting Up Website Customization"
        ],
        "Build Job Search Portal Website with WordPress": [
          "Job Search Portal Website (Promo)",
          "Create Subdomain/ Domain",
          "Download The Resources",
          "Installing Themes",
          "Installing Plugins",
          "Login & Register Page",
          "Submit Job Page",
          "Creating Other Important Pages",
          "Job Setting Field",
          "Candidate Employer Field",
          "Setting Up Categories",
          "Payments Gateway Setup",
          "Pricing Setup",
          "Importing Templates",
          "Customizing Pages",
          "Customize Menus & Footer",
          "Customize Sidebars & Design",
          "Theme Job Settings",
          "Testing Website"
        ],
        "Build Your Own ChatGPT With WordPress & Elementor": [
          "Build ChatGPT Website With WordPress & Elementor (Promo)",
          "Create Subdomain/ Domain",
          "Download Resources",
          "Installing Theme",
          "Installing General Plugin",
          "Install Main Plugin",
          "Creating ChatGPT Api",
          "API Plugin Configuration",
          "Stripe Configuration",
          "Creating Plans",
          "Creating Pages",
          "Pages Settings",
          "Creating Menus",
          "Designing Menus",
          "Pages Design",
          "Website Design"
        ],
        "End of the Course": [
          "Thanks for taking this course",
          "Watch Free Courses",
          "Bonus"
        ]
      },
      "requirements": [
        "No experience required (Everything taught from scratch)",
        "Positive mind to learn",
        "Must have PC with Internet Connection"
      ],
      "description": "Welcome to the ultimate Udemy course, where you'll learn to build multiple websites using WordPress, covering diverse niches like blogging, ChatGPT integration, pharmacy, fitness, and job search portals. Whether you're a beginner or an experienced developer, this comprehensive course is designed to equip you with the skills to create professional and functional websites.\nIn this course, we'll start by covering the fundamentals of WordPress, guiding you through the installation and setup process. From there, we'll dive into each niche, providing step-by-step tutorials on designing and customizing your websites to cater to specific industry requirements.\nFirst, we'll explore the world of blogging, where you'll learn to create captivating blog layouts, optimize for SEO, and implement monetization strategies. Next, we'll venture into the realm of ChatGPT integration, where you'll discover how to seamlessly integrate AI chatbots into your websites, enhancing user engagement and interaction.\nThen, we'll dive into the pharmacy niche, teaching you how to create an e-commerce store that showcases products, implements secure payment gateways, and ensures a seamless shopping experience. We'll also explore the fitness niche, where you'll build a dynamic website with workout plans, nutrition guides, and progress tracking features.\nLastly, we'll tackle the job search portal niche, empowering you to create a platform where job seekers can find relevant opportunities and employers can post listings. You'll learn to implement advanced search and filtering functionality, as well as user registration and profile management systems.\nThroughout the course, we'll emphasize best practices in website design, user experience, and performance optimization. You'll also gain insights into leveraging social media integration, implementing responsive design principles, and utilizing plugins to enhance functionality.\nWhat sets this course apart is its hands-on approach. You'll actively build and customize each website alongside the instructor, ensuring practical learning and real-world application. Additionally, you'll receive valuable resources, including downloadable templates and code snippets, to aid in your website creation journey.\nBy the end of this course, you'll have the skills to build and launch a variety of professional websites using WordPress, spanning multiple industries. Whether you're an aspiring web developer, entrepreneur, or digital marketer, this course will empower you to bring your ideas to life and achieve your online goals.\nEnroll now and embark on this comprehensive journey to create blogging, ChatGPT, pharmacy, fitness, job search portals, and more with WordPress websites. Let's unlock the power of WordPress and transform your vision into a reality!",
      "target_audience": [
        "I will teach how to do WordPress Web Design",
        "I will teach how to build Money Making Blogging Website",
        "I will teach how to Build Pharmacy Ecommerce Website",
        "I will teach how to Build Gym, Fitness or Yoga Website",
        "I will teach how to Build Job Search Portal Website",
        "I will teach how to Build Your Own ChatGPT With WordPress & Elementor"
      ]
    },
    {
      "title": "Learn Python Django & Angular 10 by creating a FullStack App",
      "url": "https://www.udemy.com/course/learn-python-django-angular-10-by-creating-a-fullstack-app/",
      "bio": "Learn to build a simple full-stack web app from scratch using Python Django and Angular 10",
      "objectives": [
        "Learn to build a simple full-stack web app from scratch using Python Django and Angular 10"
      ],
      "course_content": {},
      "requirements": [
        "Basics of programming",
        "Basic html css and javascript"
      ],
      "description": "Hello Everyone, and welcome to this course on Python Django and Angular 10 for full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* SQLite for database.\n* Python Django for back-end web development.\n* And the latest Angular 10 for fron-tend web development.\n\n\n-We will first start with installing and setting up the environment needed for development.\n-Then start creating models and tables needed for our app.\n-Then develop API end points using Django rest framework.\n-Finally we will be using Angular 10 to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing to our Angular App, add modal pop up windows with drop downs and date pickers, and also add upload profile picture functionality and store it in our app. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer. Welcome to the course, and happy learning.",
      "target_audience": [
        "python developers",
        "backend developers",
        "frontend developers"
      ]
    },
    {
      "title": "Productionize Azure AI Foundry Agents with API Management",
      "url": "https://www.udemy.com/course/productionize-azure-ai-foundry-agents-with-api-management/",
      "bio": "Azure API Management with Prompt Flows, and AI Agents in Azure Foundry & OpenAI - Secure, Scale and Productionize",
      "objectives": [
        "Design and deploy GenAI workflows using Azure OpenAI and Azure AI Foundry with production-grade reliability.",
        "Secure and expose GenAI services via REST APIs using Azure API Management, with proper authentication and rate limiting.",
        "Implement real-world API management techniques such as semantic caching, load balancing, and circuit breaker patterns.",
        "Build scalable, versioned, and monetizable GenAI APIs with zero-downtime deployments and monitoring dashboards."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Special Udemy Course Bundle: Scaling AI in Production",
          "My Udemy Course Collection Guide"
        ],
        "Join the Discord Community": [
          "Join the Discord Community"
        ],
        "GenAI With APIM - Introduction to AI Specific APIM Use-Cases": [
          "Introduction to API Management with Azure AI: APIM Loves Azure AI"
        ],
        "Azure API Management Basics": [
          "Introduction to Azure API Management and API Lifecycle",
          "API Lifecycle with Azure APIM : Understanding the \"Design\" Part",
          "Note: GitHub Repo For the Labs in the Course",
          "Lab 1: Deploying Azure API Management Instance",
          "API Lifecycle with Azure APIM : Understanding the \"Develop\" Part",
          "Lab 2: Building an HTTP API from Scratch in Azure APIM (Hands-On Lab)",
          "Lab 3: Building an API From OpenAPI Spec (Hands-On Lab)",
          "API Lifecycle with Azure APIM : Understanding the \"Secure\" Part",
          "API Lifecycle with Azure APIM : Understanding the \"Publish\" Part",
          "Lab 4: Accessing Azure APIM Dev Portal for Testing APIs (Hands-On Lab)",
          "Lab 5: Creating Rate Limiting and Caching Policies for our APIs (Hands-On Lab)",
          "API Lifecycle with Azure APIM : Understanding the \"Scale\" Part",
          "API Lifecycle with Azure APIM : Understanding the \"Monitor and Analyze\" Part",
          "Lab 6: Analyzing usage Metrics with App Insights and Log Analytics Workspace"
        ],
        "GenAI With APIM - Azure OpenAI with APIM": [
          "Lab 1: Deploying an Azure OpenAI Resource with a GPT-4o LLM (Hands-On Lab)",
          "Lab 2: Creating an OpenAI API With Azure APIM (Hands-On Lab)",
          "Lab 3: Calling our OpenAI API from Python Notebooks (Hands-On Lab)"
        ],
        "GenAI with APIM - Building an OpenAI API from Scratch (For Better Understanding)": [
          "Lab 1: Building an OpenAI API as an APIM HTTP API (Hands-On Lab)",
          "Lab 2: Doubling Down on Security & API Keys with \"Named Values\" (Hands-On Lab)",
          "Lab 3: Doubling Down on Security with \"Managed Identity Auth\" (Hands-On Lab)"
        ],
        "GenAI with APIM - AI Foundry with APIM": [
          "Introduction to Azure AI Foundry",
          "Lab 1: Deploying an Azure AI Foundry Resource (Hands-On Lab)",
          "Lab 2: Creating an Azure AI Foundry API with Azure APIM (Hands-On Lab)",
          "Lab 3: Calling our AI Foundry API from Python Notebooks (Hands-On Lab)"
        ],
        "GenAI with APIM - Semantic Cache with Azure Redis Cache": [
          "Introduction to Azure Managed Redis and Semantic Search",
          "Introduction to Vector Embeddings",
          "Lab 1: Making Use of Vector Embeddings from Azure OpenAI Resource (Hands-On Lab)",
          "Lab 2: Setting Up and Seeing Semantic Cache in Action (Hands-On Lab)"
        ],
        "GenAI with APIM - Content Safety Filters": [
          "Introduction to Azure Content Safety with Azure APIM",
          "Lab 1: Deploying an Azure Content Safety Studio and Walkthrough (Hands-On Lab)",
          "Lab 2: Calling Azure Content Safety Studio with API Calls (Hands-On Lab)",
          "Lab 3: Configuring Content Safety APIM Policy (Hands-On Lab)",
          "Lab 4: Content Safety Filters in Action with Python Notebook (Hands-On Lab)"
        ],
        "GenAI with APIM - Multi-Region Load Balanced Deployments": [
          "Introduction to Azure APIM Multi-Region Load Balanced Deployments",
          "Lab 1: Deploying Multi-Region Azure OpenAI Deployments (Hands-On Lab)",
          "Lab 2: Creating Circuit Breakers and Load Balancer backend Pools (Hands-On Lab)",
          "Lab 3: Seeing Load Balancing in Action with Python Notebook (Hands-On Lab)"
        ]
      },
      "requirements": [
        "Knowledge about how the Web Works required",
        "Knowledge about Restful APIs required",
        "Knowledge about Generative AI required"
      ],
      "description": "Welcome to Productionize Azure AI Foundry Agents with API Management — the ultimate hands-on course for deploying enterprise-ready GenAI services using Azure OpenAI, Azure AI Foundry, and Azure API Management (APIM).\nWhether you're working with prompt flows, custom fine-tuned models, or building full-fledged AI agents, this course teaches you how to go from prototype to production-grade APIs — complete with authentication, rate limiting, caching, logging, and blue-green deployments.\nYou'll learn to:\nDesign scalable AI workflows using Azure AI Studio and Foundry\nUse Azure API Management to securely expose LLM endpoints\nImplement load balancing, versioning, and quota enforcement\nAdd semantic caching for faster and cheaper inferencing\nMonitor usage with Azure Monitor and APIM analytics\nSafely release updates using blue-green deployment strategies\nBy the end, you'll not only understand how to build intelligent solutions — you'll be able to serve them at scale across teams or customers using Azure-native best practices.\nThis course is ideal for cloud developers, AI engineers, DevOps professionals, and solution architects who want to productize AI with real-world infrastructure patterns.\nIf you're looking to level up from a working GenAI prototype to a highly available, secure, and monetizable AI service, this course is for you.\n\nIf you love the cloud, if you love GenAI, and if you love making things that actually work at scale — you're in the right place.\nSo gear up... we’re just getting started. See you inside!",
      "target_audience": [
        "Cloud developers and solution architects looking to productionize GenAI workflows with enterprise-grade security and scalability.",
        "AI/ML engineers who want to turn their prompt flows and fine-tuned models into secure, monitored APIs using Azure.",
        "Tech consultants and pre-sales engineers working with clients to build GenAI-powered solutions that meet governance and compliance needs.",
        "DevOps and platform engineers interested in managing LLM-based services across regions with throttling, caching, and zero-downtime deployments."
      ]
    },
    {
      "title": "Web Building Starter Pack. Html Css and JQuery Animations",
      "url": "https://www.udemy.com/course/web-building-starter-pack-html-css-and-jquery-animations/",
      "bio": "New generation of web building courses.",
      "objectives": [
        "build a modern website",
        "will learn basics of jquery",
        "will learn jquery animation basics"
      ],
      "course_content": {
        "Preparation": [
          "A website working flow. HTML, CSS and JQuery work like depatments of a company",
          "What we will need during the course. Web browsers and text editors made easy",
          "Text editor and a useful shortcut that we will use"
        ],
        "HTML": [
          "HTML structure. All those ugly-looking tags have a meaning",
          "Obey to the rules of HTML",
          "Let's go with some more feautures. HTML will be more familiar to our eyes",
          "List and list element",
          "How to add an image to your website? A BuzzFeed-like website made easy",
          "Media elements. Videos, GIFs, music",
          "Add YouTube and Vimeo videos, SounCloud tracks to your website by IFrame",
          "Links-1. External links",
          "Links-2. Internal links (A breaking news prototype exercise)",
          "How to change style of fonts and size of images. A simple exercise"
        ],
        "CSS - Style elements": [
          "What is CSS and How we are going to use it",
          "ID - We will give IDs to the elements we want to use individually",
          "Revolution in web design! - DIVs",
          "Color - Forget about everything what you know about colors",
          "Padding",
          "Border",
          "Margin",
          "Fonts",
          "Typography",
          "Display elements. We will change how elements are displayed",
          "Header exercise - I can't even imagine a website without a good-looking header",
          "Class name. Let's group the elements for saving time while building the website",
          "Position. The best way to describe position of any element. You will love it!",
          "Position exercise. Let's learn position attributes on the screen",
          "Quotes sharing photo Exercise. We will upgrade our CSS skill to the top level",
          "Quotes sharing photo Exercise part-2"
        ],
        "Website Building - A real life website": [
          "Website's structure. How to build well-organised websites",
          "Landing page - First impression of website is important",
          "Portfolio Page",
          "Customers, Crew and Our Motto Pages",
          "Contact Page - Our company's location shown on google map",
          "Footer and Social media links are done!"
        ],
        "JQUERY makes our website alive": [
          "Meet JQuery",
          "One Click is able to change who page. Discover this power",
          "Two Jquery Scroll Effects - Websites are more professional",
          "JQuery Hover effects. Hover on a picture and let it be animated",
          "Jquery Hover Effects continues",
          "Responsive web design with Jquery",
          "Write your own function on Jquery. Take full control of every single pixel"
        ]
      },
      "requirements": [
        "simple computer knowledge"
      ],
      "description": "Hi Guys! Welcome to Web Building Starter Pack. In this course we are going to learn how to build a website with html, css and jquery animations. This course is for absolute beginners and also the ones who want to make practice because;\n\nWe are going to start from simple steps with real life examples, animations, video lectures and exercises we are going to complete essential training of html and css. Once we are done with that, We are going to make some practice and after that build a modern web site. In the last section we are going to learn Jquery and make practice on real life projects. More over, you will be able to write your own functions on Jquery.\n\nWhen you complete this web building starter pack, you are going to be able to make not only one web site, but also different types of web sites.\nBeside this course, to learn how to code  it self, is going to change the way how you are thinking. It will help you to solve problems more efficiently. Do not waste your time and do something today that 1 year later you, will be thankful.",
      "target_audience": [
        "absolute beginners",
        "the ones those who want to make practice on web building"
      ]
    },
    {
      "title": "Build Instagram clone - React TailwindCSS Firebase",
      "url": "https://www.udemy.com/course/build-full-stack-instagram-clone-using-react-tailwindcss-and-firebase/",
      "bio": "Building an Mini full-stack Instagram clone using React, Tailwindcss and Firebase",
      "objectives": [
        "Firebase Setup",
        "Tailwind CSS",
        "Firebase Authentication",
        "Firestore",
        "ReactJS",
        "Context API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Create React App and Installing Dependencies",
          "Refactoring unnecessary files, refactoring code",
          "Extensions required for this project",
          "Create folder structure for our application"
        ],
        "Firebase Setup": [
          "Creating seed file",
          "Firebase Setup: Firestore database",
          "Firebase Authentication",
          "createContext in firebase.js",
          "Creating App in Firebase (SDK in config), Initialize, Add Seed)"
        ],
        "Getting started with FrontEnd": [
          "Installing React Router Dom",
          "Create Routes",
          "Installing Tailwind CSS",
          "Start working on Login Page",
          "Continue working on Login Page (Part 2)",
          "Continue working on Login Page (Part 3)",
          "Tailwind.config - theme (Set colours)",
          "Login Functionality (with Firebase) (Part 4)",
          "Custom error message in login page",
          "Signup Page",
          "Check for user created is a duplicate(if username already exist in firebase)",
          "Not Found Page"
        ],
        "Dashboard Page": [
          "Creating Dashboard Page",
          "Creating use-auth-listener.js Hook",
          "Creating users.js UserContext",
          "Header Component",
          "Working on Dashboard Page",
          "Working on Sidebar Component",
          "Creating sidebar folder",
          "Working on User Component",
          "Created Timeline.js"
        ],
        "Suggestions Component": [
          "Working on suggestion.js",
          "Get suggested profiles",
          "Show suggested profiles",
          "Functionality: Remove followed user from suggestion",
          "Functionality: Update user’s following & followers"
        ],
        "Timeline": [
          "Creating Post Component and custom hook usePhotos",
          "Creating getPhotos function",
          "Rendering out the photos (using React skeleton)"
        ],
        "Post": [
          "Start Working on Post Component",
          "Components within Post - Header Component",
          "Image Component",
          "Actions (Service call in Firebase)",
          "Likes",
          "Show Comments",
          "Add Comments",
          "Add Protected Routes"
        ],
        "Profile": [
          "Profile",
          "Continue working on Profile Page",
          "Header Component in Profile Page",
          "Profile Specific Header",
          "Photos Component in Profile Page"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and Reactjs"
      ],
      "description": "The stack you will use: React (custom hooks, useContext, useState, useEffect, useRef), Firebase (Firestore/auth), Tailwind CSS.\nIn this React Tutorial, we will build an Instagram clone! This React project has multiple pages: login, sign up, dashboard (to view/like/comment on photos), and user profiles.\nThe sign-in page will connect to Firebase when a user tries to sign in, and when a user signs up, we will use Firebase auth to store the user in the Firebase auth database. I built this application using React, JavaScript, Firebase and for styling I used Tailwind CSS (which is amazing).\nYou will need knowledge of React to not struggle on this tutorial (useState, useEffect, useContext) and you will need some knowledge of JavaScript to get you by.\nYou need to have basic knowledge of HTML, CSS and Javascript.\nEveryone who wants to advance their full stack developer skills with work experience of building real applications in a developer environment should enroll in this program.\nDuring the course we are going to use latest version of React - React 18.\nAs far as concepts we are going to cover\nFirebase Authentication\nFunctional React components\nReact hooks like useState() and useEffect()\nHandling user events\nJSX and Rendering templates\nProps and State\nCreating and organising components\nBuilding real-world React applications",
      "target_audience": [
        "Developers who are familiar with HTML CSS and React and want to learn Fullstack development"
      ]
    },
    {
      "title": "MERN Stack Music Player App 2022",
      "url": "https://www.udemy.com/course/mern-stack-music-player/",
      "bio": "Build a fullstack dynamic music/audio player using React , Redux , Node , Mongo , Multer , Cloudinary",
      "objectives": [
        "Building Real Time Project From Scratch",
        "Building our custom audio player which will have all the controls like play , pause , next song , previous song , shuffle songs , forward song , volume controls",
        "Handling file uploads with Multer and Cloudinary",
        "Working with Tailwind CSS",
        "Building everything from scratch by avoiding external libraries",
        "We will also work on playlists concept , Creating playlist , add songs to playlist , removing songs from playlist etc.",
        "Working with admin panel where the admin can control the entire application.",
        "Adding song , uploading files , edit song etc.",
        "Two rounds of unit testing , Fixing issues after unit testing",
        "By the end of this course you can able to build your own music player with all controls and functionalities.",
        "Deployment to Heroku."
      ],
      "course_content": {
        "Introduction / Project Setup": [
          "PROMO / Source Code",
          "Project Preview",
          "Front End Setup",
          "Tailwind Setup",
          "Node/Express setup",
          "Node Mongo Connection"
        ],
        "User Registration": [
          "Register Page",
          "User Model",
          "Register API"
        ],
        "User Login": [
          "Login API",
          "Authorization / Middlewares",
          "Protected Routes"
        ],
        "Alerts / Toast Messages": [
          "Redux Setup",
          "Alerts - Toasts"
        ],
        "Layout": [
          "Default Layout"
        ],
        "Get Songs List to Home Page": [
          "Song Model",
          "Gel all songs - API",
          "Display Songs in UI"
        ],
        "Designing Audio Player": [
          "Audio Player-1",
          "Audio Player-2",
          "Audio Player-3",
          "Audio Player-4",
          "Audio Player-5",
          "Audio Player-6"
        ],
        "Playlists": [
          "Default Playlists",
          "Add Playlist-1",
          "Add Playlist-2",
          "Add Playlist-3"
        ],
        "Edit & Delete Playlists": [
          "Edit Playlists",
          "Delete Playlists"
        ],
        "First Round Testing": [
          "Testing / Fixing"
        ]
      },
      "requirements": [
        "React",
        "Node"
      ],
      "description": "Hi Guys ,\nWelcome to the course MERN Stack Music Player\nBy listening the word music player you may be wondering that why we need a separate course for music player app.\nBecause already we lot of tutorials available to build music player. So to the student who are having this question...my answer is very simple You might have seen music player web apps which were build using plain Html/CSS or React or Plain Java script.\nBut in this course we will build the music player using MERN STACK.\nWhat will students learn in this course ?\nBuilding Real Time Project From Scratch\nHandling file uploads with Multer and Cloudinary\nWorking with Tailwind CSS.\nBuilding components from scratch without using any external libraries and frameworks.\nBuilding our custom audio player which will have all the controls like play , pause , next song , previous song , shuffle songs , forward song , volume controls etc.\nWe will also work on playlists concept.\nCreating playlist , add songs to playlist , removing songs from playlist etc.\nWorking with admin panel where the admin can control the entire application.\nAdding song , uploading files , edit song etc.\nTwo rounds of unit testing.\nFixing issues after unit testing\nBy the end of this course you can able to build your own music player with all controls and functionalities.\n24/7 Q/A Support\nDeployment to Heroku.\n--------------------------------------------------------------------------------------------------------------\nMERN stands for MongoDB, Express, React, Node, after the four key technologies that make up the stack.\nMongoDB - document database\nExpress(.js) - Node.js web framework\nReact(.js) - a client-side JavaScript framework\nNode(.js) - the premier JavaScript web server\nExpress and Node make up the middle (application) tier. Express.js is a server-side web framework, and Node.js the popular and powerful JavaScript server platform. Regardless of which variant you choose, ME(RVA)N is the ideal approach to working with JavaScript and JSON, all the way through.\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\nRedux is an open-source JavaScript library for managing and centralizing application state. It is most commonly used with libraries such as React or Angular for building user interfaces. Similar to Facebook's Flux architecture, it was created by Dan Abramov and Andrew Clark.\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser, which was designed to build scalable network applications.\nMongoDB is an open source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License which is deemed non-free by several distributions",
      "target_audience": [
        "MERN Stack Developers",
        "Fullstack Developers"
      ]
    },
    {
      "title": "WordPress | From Zero to Expert Level",
      "url": "https://www.udemy.com/course/wordpress-for-beginners-create-your-first-website-in-2022/",
      "bio": "Create from Simple Blog website to E-Commerce websites with Tips & Tricks",
      "objectives": [
        "About WordPress & what is it really?",
        "What is Domain Name?",
        "How to choose the best Domain Name?",
        "What is Web Hosting?",
        "How to Chose the best Web Hosting?",
        "Installing WordPress Locally as well as On a Web",
        "Free WordPress Doman name and Web Hosting",
        "How to buy a Professional Domain name and Web Hosting?",
        "Differences Between Pages and Posts in WordPress",
        "Creating and Managing Posts and Pages",
        "How to use Elementor Website Builder?",
        "How to approve, edit, delete and make as spam Comments?",
        "How to Enable/Disable Comments on Posts and Pages?",
        "How to create a Responsive Mobile Menu for Your site?",
        "What are widgets and how to use them?",
        "How to create a slider for Website's Pages?",
        "How to add Social Media Icons in Your Website?",
        "Create a custom Menu with Categories for you website",
        "How to add Video, Audio, & image files on Posts and Pages?",
        "How to Organizing Media Content?",
        "What is an E-Commerce Website",
        "What is Elementor",
        "What is Woo-Commerce",
        "Creating and Designing E-Commerce Website",
        "Functions in E-Commerce Webiste",
        "Creating Post's content Using AI | No need to write Longs Blog Posts",
        "How to Speedup your Website?"
      ],
      "course_content": {
        "Introduction": [
          "WordPress.com OR WordPress.org",
          "What is Domain name?",
          "Choosing the Best Domain Name",
          "What is Web Hosting?",
          "Choosing the Best Web Hosting",
          "Quiz of Section No. 1"
        ],
        "How to Install WordPress?": [
          "Installing WordPress Locally by Xampp",
          "Installing WordPress for Free on a Web Host",
          "How to Buy Domain & Web Hosting",
          "Quiz of Section No. 2"
        ],
        "Taking Tour of WordPress Dashboard": [
          "A first look around WordPress",
          "Changing Appearance by Using Themes",
          "WordPress site Customizaton",
          "What are Plugins in WordPress?",
          "How to Install Plugins?",
          "Quiz of Section No. 3",
          "Assignment No. 1"
        ],
        "Posts & Pages in WordPress": [
          "Posts VS Pages",
          "Creating and managing Pages",
          "Creating and Managing Posts",
          "Using the Text editor",
          "Adding images to Posts and Pages",
          "Editing Pictures in WordPress",
          "Categories in WordPress",
          "Tags in WordPress",
          "Converting Block Editor to Classic Editor",
          "How to Create a Professional Post?",
          "Elementor Website Builder for WordPress",
          "Quiz of Section No. 4",
          "Assignment No. 2"
        ],
        "Users Settings and Comments in WordPress": [
          "How to Approve, Edit or Delete Comments",
          "How to Enable and Disable Comments in WordPress",
          "How to add new User in WordPress",
          "Quiz of Section #5",
          "Assignment No.3"
        ],
        "Appearance of Your WordPress Website": [
          "How to add WordPress Mobile Menu",
          "How to use Widgets in WordPress",
          "Create Sliders for your Website Part-I",
          "Create Sliders for your Website Part-II",
          "How to add Social Media Icons on your WordPress Site",
          "Creating Custom Menu in WordPress"
        ],
        "The E-Commerce Website's Section": [
          "Introduction to E-Commerce Website",
          "All about Elementor",
          "All about Woo-Commerce",
          "Designing a complete E-commerce website",
          "Adding Sale Prices",
          "Managing Product Inventory",
          "Units and Dimensions of the Product",
          "Adding Image/Multiple Images of the Product"
        ],
        "Media Library in WordPress": [
          "How to add Videos in WordPress",
          "How to add Audio files in WordPress",
          "Organization of Content in Media Library"
        ],
        "Essential Tools for Your WordPress Website": [
          "How to Create Post Using Artificial Intelligence (AI)?",
          "Speed Up your WordPress Website"
        ]
      },
      "requirements": [
        "No skills or experience required, you will learn everything in this WordPress course"
      ],
      "description": "Whether you want to create websites without coding, or you need to learn WordPress so you can update existing websites at your job, I've got you covered.\nIn this brisk but thorough course we build a website together step-by-step and along the way you organically absorb and master WordPress. I'm all about having you follow along with me and I always encourage experimentation over memorization. My ultimate goal is to give you the \"vocabulary of WordPress\" so you can continue learning independently long after this course completes. There is no prerequisite knowledge required!\nHere's a summary of what we cover:\nAsking and answering \"What is WordPress?\"\nComplete E-Commerce Functionality.\nWoo-Commerce\nElementor\nSetting up a new WordPress site/project\nCreating pages\nCreating Professional blog posts\nCustomizing the colors & theme of your website\nEmbedding YouTube videos into your website\nSetting up custom navigation menus\nCreating photo galleries\nInviting friends / family / coworkers into your WordPress (multiple authors, editors)\nAsking and answering \"What is a plugin?\" & \"What is a widget?\"\nConnecting your WordPress website with social media Platforms\nGuarding ourselves from comment and contact-form SPAM\nCreating beautiful sliders for Website's pages\nSpeedup your website for users & a lot more!\nThis course includes:\n4+ hours of video tutorials and will be Updated\n40+ individual video lectures and will be updated.\nAssignments\nQuizzes\nHelpful source files\nCertificate of completion\nINSTRUCTOR SUPPORT\nI understand that students will have questions related to the course and its necessary also for a healthy learning process hence I encourage students to ask their questions related to the course in the Q&A section of the course.\nFinally, if you are still thinking weather you should enroll or not then I encourage you to watch some of the preview videos and test the waters before you actually enroll in the course and even after enrolling if you feel that this course failed to meet your expectations then you can always ask for a refund within 30 days of purchase.",
      "target_audience": [
        "Web Development",
        "WordPress",
        "Web Design",
        "Blogging Beginner",
        "WordPress developers"
      ]
    },
    {
      "title": "Vite for developers - 2025",
      "url": "https://www.udemy.com/course/vite-for-devs/",
      "bio": "Build and bundle web apps the modern way with Vite! Go beyond the basics and use Vite like a pro!",
      "objectives": [
        "Leverage Vite for professional use, not just the basics",
        "Main Vite features: app building, enhanced development process, code scaffolding",
        "Create powerfull apps with Vite - supporting multiple routes and multiple bundles",
        "Write a library using Vite's library mode",
        "Deeply understand Vite's plugin system by building a plugin",
        "Optimize build bundles and add strong types with Vite"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome to the course",
          "Udemy tips",
          "Tools we will need",
          "All the course code"
        ],
        "Vite introduction": [
          "Section intro",
          "What is Vite?",
          "First contact with Vite",
          "Optional: ES and Common JS modules",
          "Optional: Module bundling",
          "Optional: Tree shaking"
        ],
        "Working with Vite": [
          "Section intro",
          "Hot module reloading",
          "Handling assets",
          "Configuring Vite",
          "Environment variables",
          "Handling multiple routes",
          "Creating multiple bundles",
          "Vite plugins"
        ],
        "Project: building a library with Vite": [
          "Section intro",
          "Using library mode",
          "Optimizing for npm export",
          "Adding types (TypeScript)",
          "Bundle optimization"
        ],
        "Other Vite features": [
          "Section intro",
          "Linting",
          "Vite bundle visualizer",
          "Vite Host option",
          "Glob imports",
          "Handling css with Vite",
          "Optional: Vitest - first contact",
          "Optional: Vitest and React"
        ],
        "Project: creating a Vite plugin": [
          "Section intro",
          "Initial plugin code",
          "Working with Images",
          "Adding plugin arguments",
          "Vite plugin analyzer"
        ],
        "Future of Vite": [
          "Future of Vite"
        ],
        "End": [
          "Thank you!",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic JavaScript, HTML and CSS skills",
        "Recommended but not required: basic TypeScript",
        "Basic node and npm usage",
        "Basic knowledge of React/Vue/Svelte/Other web framework"
      ],
      "description": "Welcome to Vite for developers - 2025 - your intro into Vite. Build fast, scalable and powerful web apps with Vite - the fastest growing and best build tool of the moment.\nThis course is designed for developers eager to harness the speed and simplicity of Vite, the next-generation build tool that’s transforming how modern web apps are built.\nWhether you’re new to Vite or looking to deepen your expertise, you’ll learn how to set up lightning-fast development environments, optimize builds, and integrate popular frameworks like React, Vue, and Svelte.\nThrough hands-on projects and real-world examples, you’ll discover how Vite streamlines hot module replacement, code splitting, and more—empowering you to build scalable, high-performance web applications with ease.\n\n\nKey Highlights:\nExtensive intro: Learn about important topics related to Vite: JS modules, Module bundling and Tree-shaking. Learn not just how to use Vite, but how it works under the hood.\nAdvanced Applications: After learning the basics of Vite, use it to build apps like a library of a Vite plugin\nVite Mastery: Learn at a deep level how Vite works.\nWhy Choose This Course?\nExpert Guidance: Learn from an industry expert with years of experience in Vite, React, Vitest and web apps\nPractical Approach: Gain hands-on experience with guided exercises and real-world case studies.\nAdvanced exercises: build complex apps and get ready for complicated tasks\nCourse advantages:\nBeyond the basics - after finish, you can directly use this knowledge into production code\nPractical knowledge - presentations are kept to a minimum, we focus on what is really important\nLogical and flexible structure - take the course at your own pace\nFast paced, concise, most typing cut out - focus on explanations - respect for your time\nBig font, dark background, full HD content, this way it is readable even on a small screen or even tablet.\nLifetime access\nCertificate of completion to present to your current or prospective employer\nQ&A active instructor\nGo beyond the theory and learn from an active instructor, aligned with today's programming demands!\n\n\nBy the end of this course, you'll have a thorough understanding of Vite and how to use it to its full potential. Whether you're a seasoned developer looking to speed up your workflow, or a beginner seeking to learn more about the latest tools in software development, this course has something  for you.\n\n\nJoin me on this journey and start coding smarter, not harder, with Vite!",
      "target_audience": [
        "Any web developer who wants to learn Vite"
      ]
    },
    {
      "title": "Build a Real-Time Online Game with Laravel",
      "url": "https://www.udemy.com/course/online-game-with-laravel/",
      "bio": "Learn how to build an online game that reacts to real time events using the latest version of the Laravel framework",
      "objectives": [
        "Use your newly acquired skills and apply them in you next big PHP application",
        "Develop powerful, scalable and good looking applications that are no only secure but also user friendly"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The LAMP stack"
        ],
        "Show me the code!": [
          "Demo",
          "Create a project scaffold using Laravel 5.4"
        ],
        "Setting up our database and models": [
          "Creating our database and tables",
          "Laravel migrations",
          "Creating the model classes"
        ],
        "User Registration and Authentication": [
          "Building an Authentication system",
          "Views, Controllers and Routes",
          "Sending Emails"
        ],
        "The Lobby": [
          "User Profile",
          "User List with Pagination and Search (Part 1)",
          "User List with Pagination and Search (Part 2)",
          "Events"
        ],
        "The Game Board": [
          "Building the Game Board",
          "Taking Turns",
          "Win, Lose or Tie",
          "Excercise: Update score and end the Game"
        ]
      },
      "requirements": [
        "You should have a basic PHP skills and Object Oriented Programming.",
        "You should also basic basic HTML and CSS skills"
      ],
      "description": "Learn advanced programming techniques, and take advantage of the latest tools on the web to create a fully functional online game using PHP and MySQL\nCreate a web application using the latest Laravel Framework with live notifications and events in real time.\nBy the end of this course, you will acquire advance techniques on:\nLaravel 5.4\nMySQL\nBootstrap CSS 3\nJQuery and AJAX\nTake Your PHP knowledge To The Next Level\nWe are going beyond the regular To-Do List, or Blog project. We are making an online game. Not only that, our web application will respond to events in real time without having to reload the page! The knowledge acquired at the end of this course will serve you to create great looking applications that can display information live, without user interaction. Like customer service chats or company dashboards with real time sales, just to name a few examples.",
      "target_audience": [
        "This course is for PHP developers who want to take their knowledge to the next level, while building a real life application using the Laravel 5.4 Framework"
      ]
    },
    {
      "title": "Mastering Modern Web Development Using React",
      "url": "https://www.udemy.com/course/mastering-modern-web-development-using-react/",
      "bio": "Build Applications for the Future!",
      "objectives": [
        "Students will be able to develop applications using React",
        "Students will be able to create reusable components using React",
        "Students will be able to understand all the modern tools of web development",
        "Students will be able to apply for React job postings and earn higher salary"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Current Problems with Web Development",
          "React to the Rescue",
          "Hello React"
        ],
        "Creating Reusable Code Using React Components": [
          "Introduction to Components",
          "Introduction to Properties",
          "Styling Components",
          "Components with Children"
        ],
        "Intermediate Components": [
          "Creating Complex Components",
          "Displaying Collections",
          "Working with Events",
          "Understanding Component Lifecycle"
        ],
        "Understanding Properties and State Management in React": [
          "Transferring Properties Among Components",
          "State Management in Components",
          "Accessing DOM Elements"
        ],
        "Creating Single-Page App Using React Router": [
          "Setting Up React Router and App Frame",
          "Configuring Routes Using React Router",
          "Creating Navigation Links",
          "Highlighting Active Links and Removing ReactRouter Prefix"
        ],
        "Creating a TODO List App Using React": [
          "Setting the Base Architecture of the App",
          "Creating the User Interface",
          "Populating State with TODO List Items",
          "Displaying Tasks in a List",
          "Styling TODO List App"
        ],
        "Setting Up Your React Development Environment": [
          "Why Set Up React Development Environment?",
          "Installing Tools",
          "Building and Testing Our App"
        ],
        "Conclusion": [
          "Download All Sample Code"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CS and Javascript",
        "You should be able to use a PC at a beginner level"
      ],
      "description": "Are you interested in learning how to write a modern web applications using React?\n\nReact by Facebook is the future of web development. And now you can learn it from the comfort of your home.. in your own time.. without having to attend class.\nMy name is Mohammad Azam, creator of many popular online courses including Mastering MapKit in iOS Using Swift, Mastering Server Side Development Using Vapor and Creating Stickers and iMessages Applications in iOS 10 Using Swift 3.\nI have been developing web applications since 2002 and have been awarded the prestigious Microsoft MVP award 5 years in a row. I have worked with fortune 500 companies as a lead web developer and helped them grow their business ten folds. At present I am a full time Instructor at The Iron Yard where I teach users how to create amazing applications.\nWhat’s stopping you from signing up to today?\nYou don't have enough time: Not a problem at all. We have designed the course so you can learn everything you need to know in less than 4 hours. In fact if you think that the course fell short on delivering topics then we will give you your MONEY BACK.\nHere are some of the reviews from our previous courses:\n\"His course is AWESOME very detail instructions.\"\n\"Mohammad Azam has an excellent teaching style which makes it easy & fun to comprehend these Swift features in such a short course & he explains the concepts in more detail & clarity than most instructors. Plus, his videos are well prepared & he's very articulate. I hope he will create more courses.\"\n\"Excellent teaching. Just perfect!!!\"\nThe lessons are concise and to the point. The instructor is great. I'm enjoying the topics. I hope that this program is extended and added to as Vapor continues to gain functionality and popularity.\nVery important topic that is rarely discussed in other tutorials, and training videos.\nThe instructors style is very clear, concise and engaging. I'm already beginning to use the concepts in demo apps!\nVery valuable, a lot of good stuff in this course. Recommend ++++++\nBuy this course today and this is what you’ll get.\nI will show you how to build real web applications using React framework. You will also learn how to setup a development environment when working with React applications.\nThe course is accompanied with all the code sample files.\nYou will also receive a UNLIMITED support on Udemy forums. I am very active on forums and make sure that every questions is answered.\nCan you believe you get all this (and more) for just $195?\n\"Awesome class for really learning how to setup and implement MapKit in your iOS apps using swift. Def. one of the best classes I've taken on Udemy. Looking forward to more classes offered by Mohammad Azam. A++ class\"\nThis course explains everything I wanted to know about Server Swift Development. It is really a benefit to my skills, that are now improved. Thank you very much.\nIt's a great course, especially if you are an beginner and don't know where to start from. It gives you the start to build your own backend in Swift rather than learning a new language just to save some data in DB. Many thanks to the author and hope many others will start using Vapor and Swift on server :D It's amazing!!!\nWhy learn React?\nReact has taken the world of web development by storm. It is one of the most fastest growing UI frameworks available. React enables you to write highly optimized component oriented code which can be easily reused at multiple places.\nWho is this for?\nThis course is for anyone who wants to take their web development skills to the next level. This course teaches you how to use React to build modern web applications which are easy to maintain. This course is for developers who wants to learn the modern way of developing web applications.\nReact has been embraced by the community and React developers usually get a salary offer of over $95K dollars. Don't miss this opportunity to learn React and take your career to the next level.\nIs this course right for me?\nLook: if you are still not convinced then I urge you to check out my 5 star reviews in other courses. I am a well known developer in the web development and iOS community with a large following. I do a lot of speaking engagements in which I spread knowledge and education. I received the Microsoft most prestigious award ASP.NET MVP 5 times in a row.\nIf you are not satisfied with the course then I offer a 100% REFUND. I am confident that you will enjoy the course and you will utilize the knowledge you learned in this course in your future web applications.\nWhat are the requirements?\nA Mac Computer or a PC\nAny code editor\nBasic understanding of the HTML, CSS and Javascript - I'll teach you everything you need to know about developing modern web applications using React.\nWhat am I going to get from this course?\nCreate modern web applications using React\nLearn to separate your code into reusable components\nImplement a build engine to convert JSX to Javascript\nIncrease web application performance by using virtual DOM and synthetic events in React\nBored with the same old, same old? Apply for a new job in a software company as a React developer\nMake over $95K annual salary as a React developer\nWho is the target audience?\nAnyone who wants to be a web developer: This is a complete course, just like my Complete MapKit, iMessages, Server Side Swift and Swift 2.0 courses.\nAnyone who wants to learn to code: React is the future and the future is right NOW.\nAnyone who wants to understand how computers work: Learning to code is so much more than being able to make apps - knowing how computers work is your key to a hugely powerful world.",
      "target_audience": [
        "This course is for developers who wants to learn how to create modern apps using React",
        "Developers interested in taking their web development skills to the next level",
        "Web developers interested in learning how to make single page applications"
      ]
    },
    {
      "title": "Advanced Spring Boot",
      "url": "https://www.udemy.com/course/advanced-spring-boot/",
      "bio": "Create advanced real-world projects with Spring Boot efficiently",
      "objectives": [
        "Spring WebMVC customizations",
        "Distributed spring security sessions",
        "Advanced Spring WebMVC testing",
        "Business related metrics and monitoring"
      ],
      "course_content": {
        "Customizing Spring Web MVC": [
          "The Course Overview",
          "Default Configuration",
          "Exploring the WebConfigurerAdapter",
          "Advanced JSON Mapping",
          "Debugging",
          "Model Attributes",
          "Test Your Knowledge"
        ],
        "Enhanced Security": [
          "Cleanup",
          "Storing Users in the DB",
          "Distributed Sessions",
          "Custom User Classes",
          "Test Your Knowledge"
        ],
        "A Deeper Dive into Testing": [
          "Custom User Classes in Tests",
          "UI Testing with MockMvc",
          "UI Testing with HtmlUnit",
          "UI Testing with Selenium",
          "Test Your Knowledge"
        ],
        "Spring Data": [
          "Spring Data Projects",
          "Spring Data JPA",
          "Spring Data REST",
          "Spring Data for NoSQL DB",
          "Test Your Knowledge"
        ],
        "Spring AOP": [
          "AOP Introduction",
          "Spring AOP Versus Spring Aspect",
          "Springs Internal Usage of AOP",
          "Spring AOP in Action"
        ],
        "Spring Boot Actuator in Depth": [
          "Actuator Configuration",
          "Available Information",
          "Provided Metrics",
          "Custom Metrics",
          "Provided Health Checks",
          "Custom Health Checks",
          "Custom InfoContributor",
          "Custom Actuator Endpoints",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Basics of Spring Boot"
      ],
      "description": "In this course, you are going to learn more about WebMVCs configuration, Jackson Views, and other advanced features. In the course, Spring Boot – Getting Started, you have learned the basic knowledge to create an application with spring boot. This course will build on that and extend it even further. We are also going to dive deeper into Spring security and store users in the database, use distributed sessions, and our own user classes. You’ll learn how to test Spring WebMVC applications and how to include your Spring security configuration in your tests.\n\n\nWe are also having a look at Spring Data which we have only covered briefly in the database section before. AOP allows you to effectively tackle the famous cross-cutting concerns, so we are having a look at Spring support for AOP. As last section we are adopting Spring boot Actuator to our needs by adding our own metrics and health checks and revisit the Actuator configuration.\n\n\nAfter completing this course you will be able to use the advanced Spring Boot features to deliver more complex, feature rich, and operations-friendly applications.\nAbout the Author\nPatrick Cornelissen is a software developer at heart and the founder and CEO of the Orchit GmbH. He has written a number of applications in various languages and platforms and is specialized in microservice-based applications and the transition of monolithic applications into microservices. He is using the Spring Framework since 2009 and is a big fan ever since. After his family, Software craftsmanship is one of his passions that he is pursuing whenever he has spare time. For this, he has organized for example code retreats and open space conferences in the past. He likes to learn as much as to teach new things in the filed of (agile) software development.",
      "target_audience": [
        "This course can be beneficial for intermediate spring developers, web developers, and Spring enthusiast. This will help them dive-in and understand the advanced concepts of Spring Boot."
      ]
    },
    {
      "title": "Laravel RESTful APIs Advanced: A Rapid Guide",
      "url": "https://www.udemy.com/course/laravel-influencer/",
      "bio": "Laravel 8, Docker, Redis, Stripe, Laravel Sanctum, Authentication and Authorisation, Events and Listeners",
      "objectives": [
        "Use Docker",
        "Authenticate using Laravel Sanctum",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Admin": [
          "Setup",
          "Docker",
          "Migrations",
          "Authentication Endpoints",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Scopes",
          "Profile",
          "Query Scopes",
          "Database Diagram",
          "Products",
          "Links",
          "Orders",
          "Json Resources"
        ],
        "Ambassador": [
          "Ambassador Authentication Endpoints",
          "Common Routes",
          "User Revenue",
          "Ambassador Endpoints",
          "Products",
          "Redis",
          "Pagination",
          "Searching Products",
          "Sorting Products",
          "Stats",
          "Rankings",
          "Redis Sorted Sets",
          "Events",
          "Creating Links"
        ],
        "Checkout": [
          "Checkout Endpoints",
          "Getting Links",
          "Creating Orders",
          "Transactions",
          "Stripe",
          "Confirm Orders",
          "Sending Emails",
          "Frontend"
        ]
      },
      "requirements": [
        "Good understanding of Laravel"
      ],
      "description": "Learn how to create an Ambassador App using Laravel RESTful APIs. This app will have 3 parts, the Admin Endpoints, Ambassador Endpoints and Checkout Endpoints. In this course, you will focus only on Laravel and you won't build the frontend because it will be prebuilt.\nIn Laravel you will learn:\nHow to create API's with Laravel\nAuthenticate using Laravel Sanctum\nLaravel JSON Resources\nInstall and use Docker\nUse Redis\nUse Stripe\nLaravel Events & Listeners\nSending Emails\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Starting with JavaScript Unit Testing",
      "url": "https://www.udemy.com/course/starting-with-javascript-unit-testing/",
      "bio": "Discover JavaScript functions",
      "objectives": [
        "Learn the world's leading JavaScript unit testing tool: Jasmine!",
        "Learn Jasmine design guidelines and best practices",
        "Understand Jasmine's evolution & intended purpose",
        "Use Jasmine to create efficient, well-structured unit tests",
        "Learn how unit testing enables development time efficiencies",
        "Understand Jasmine expectation assertions work",
        "Learn to install and configure Jasmine for everyday use",
        "Discover how Jasmine tests are structured with JavaScript functions",
        "Use Jasmine to create comprehensive, configurable test suites",
        "Learn various Jasmine validation functions for testing any types of JavaScript functions",
        "Use an online IDE to manage a JavaScript project integrated with Jasmine testing ... and much, much more!"
      ],
      "course_content": {
        "Welcome to Starting with JavaScript Unit Testing": [
          "Starting with JavaScript Unit Testing",
          "Learning JavaScript Unit Testing",
          "The Jasmine Testing Framework",
          "Development in this Course",
          "A New Cloud 9 Workspace",
          "A New Node Project"
        ],
        "Installing and Configuring Jasmine": [
          "Installing and Configuring Jasmine",
          "Installing Jasmine",
          "An Initial Test",
          "A Functional Spec File",
          "Expanding the Spec File"
        ],
        "Testing Source Code": [
          "Testing Source Code",
          "Testable Code",
          "Jasmine Expectations",
          "Higher Expectations",
          "Different Expectations"
        ],
        "Jasmine Hooks": [
          "Jasmine Hooks",
          "*All Hooks",
          "*Each Hooks",
          "A Practical Example",
          "Practical Code",
          "Practical Testing",
          "Wrap Up"
        ]
      },
      "requirements": [
        "At least a modest knowledge of JavaScript and common design patterns used in modern development. Ideally, the student should be familiar with creating web applications on npm enabled platforms, frameworks, and libraries.",
        "If the student has only some, or even none of these skills, he/she will still benefit from this course greatly, but may need to pause a video in progress to perform some additional background research. This is encouraged, as it'll only make for a better overall experience and net benefit.",
        "NO PRIOR TESTING EXPERIENCE IS REQUIRED!!!"
      ],
      "description": "Any IT professional or casual developer anticipating a solid understanding of how unit testing is implemented in modern JavaScript application development projects needs to go through this course and absorb all of its content. Anyone desiring to learn how the Jasmine framework is integrated with web application projects needs the knowldege, demonstrations, and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how to effectively participate in a project leveraging Jasmine Unit Testing solutions and the testing artifacts it produces.\nLearn the world's leading JavaScript unit testing tool: Jasmine!\nLearn Jasmine design guidelines and best practices\nUnderstand Jasmine's evolution & intended purpose\nUse Jasmine to create efficient, well-structured unit tests\nLearn how unit testing enables development time efficiencies\nUnderstand Jasmine expectation assertions work\nLearn to install and configure Jasmine for everyday use\nDiscover how Jasmine tests are structured with JavaScript functions\nUse Jasmine to create comprehensive, configurable test suites\nLearn various Jasmine validation functions for testing any types of JavaScript functions\nUse an online IDE to manage a JavaScript project integrated with Jasmine testing... and much, much more!",
      "target_audience": [
        "This course is built for web developers who need to understand how to implement unit testing in JavaScript projects based on modern architectures and libraries.",
        "This course is designed for those developers who need to learn to use unit testing strategies to be able to deliver fully tested code when required. Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how unit testing is implemented and delivered in a progressive software development effort."
      ]
    },
    {
      "title": "Webpack for React Applications",
      "url": "https://www.udemy.com/course/webpack-for-react-applications/",
      "bio": "Learn everything needed to build your own modern stateful web applications",
      "objectives": [
        "Create a message board website",
        "Build your own modern stateful web applications",
        "Track your application state in real-time with Firebase",
        "Use components as a unit of styling",
        "Spread props to wrap components",
        "Set up a Firebase project",
        "Master deploying with Babel, code splitting, and ES2015",
        "Understand how to add posts and styling"
      ],
      "course_content": {
        "Introduction to the Project": [
          "The Course Overview",
          "A React Application",
          "Deliverables with Webpack",
          "Deliverables with Webpack (Continued)"
        ],
        "Configuration of the Project": [
          "Setting Up Babel",
          "Setting Up Babel (Continued)",
          "Webpack Configuration – Loading Assests",
          "Webpack Configuration – File Loader",
          "Webpack Configuration – SCSS",
          "Performance Increase",
          "Cache Busting",
          "Project Files Cleanup"
        ],
        "React Specific Topics": [
          "Using Dev Server in Your Application",
          "Best Practices with Webpack Dev Server",
          "React Router and Code Splitting"
        ],
        "Webpack Based Deployments": [
          "Getting an App Production Ready",
          "Deployments with GitHub Pages",
          "Deployments with AWS S3",
          "Dynamic Sites – Node and Webpack Integration",
          "Deployments to AWS EBS"
        ]
      },
      "requirements": [
        "A basic knowledge of React is desirable."
      ],
      "description": "Whether you are optimizing build times to decreasing bundle sizes or strategies of serving large applications, performance is always one of the main traits of web applications. Having a slow Webpack build with a ton of libraries is always a challenge. No matter if it's perceived by the end user, server, or developers.\nIn this course, we will learn how to use Webpack with a real project. You will be provided with a dynamic responsive photo gallery application written in react, along with minimal to basic Webpack configuration and will be shown how to apply advanced features such as deploying with Babel, code splitting, and ES2015.\nBy the end of this tutorial, you will be able to deploy your application to dynamic cloud hosting sites such as AWS in order to improve the existing application.\nThis course uses Webpack 2.6.1, and React 15.5.4, while not the latest version available, it provides relevant and informative content for legacy users of Webpack and React.\nAbout the Author\nColibri is a technology consultancy company founded in 2015 by James Cross and Ingrid Funie. The company works to help their clients navigate the rapidly changing and complex world of emerging technologies, with deep expertise in areas such as big data, data science, machine learning, and cloud computing. Over the past few years they have worked with some of the world's largest and most prestigious companies, including a tier-1 investment bank, a leading management consultancy group, and one of the world's most popular soft drinks companies, helping each of them to better make sense of its data and process it in more intelligent ways. The company lives by its motto: Data -> Intelligence -> Action.\nAlexandru Toea is a Senior Frontend developer. He is currently working with various startups specializing in building complex React applications for both public and internal use. Alexandru started his frontend developer career by building his school's websites around 10 years ago and has constantly advanced his knowledge of web technologies ever since. He is currently working with a technology startup to provide it with the tools required for quick expansion.\nAlexandru has spent the past four years working with React and Redux as well as building efficient real-time applications for both startups and corporate clients. He has a passion for efficient and clean code, while also staying on top of all the new developments in the front-end world. On the site he is also an Authorized Google Trainer, teaching for companies such as Solvay and Lucas Films.",
      "target_audience": [
        "The target audience for this module is developers who want to use Webpack in an existing application, particularly those with an interest in applying the principles of Webpack to large existing React applications."
      ]
    },
    {
      "title": "JavaScript for Beginners: Build real-time Projects",
      "url": "https://www.udemy.com/course/javascript-for-dummies/",
      "bio": "Javascript Programming For Beginners: Your Step-By-Step Guide to Learning JavaScript Programming",
      "objectives": [
        "They will be able to build application using javaScript,HTML and Css"
      ],
      "course_content": {
        "JavaScript Basic": [
          "JavaScript Hello World: How to Write Your First Program in JavaScript",
          "Javascript Advantages And Disadvantages",
          "Setting up a good Javascript IDE — Sublime Text Editor for JavaScript",
          "JavaScript Debugging : How can I debug my JavaScript code?",
          "What is a Script?",
          "How HTML,CSS and JavaScript work together?",
          "HTML + Javascript + CSS with example",
          "JavaScript Statements and Comments",
          "Quiz 1"
        ],
        "JavaScript DataTypes and Variables": [
          "JavaScript - Data Types and Variable",
          "JavaScript Data Types with Examples",
          "String variable with example",
          "How to escape a single quote (' ) in JavaScript?",
          "Escaping Strings in JavaScript",
          "Naming Variables: Rules and Best Practices",
          "JavaScript Array with example",
          "Declare an Array in JavaScript",
          "JavaScript array constructor vs literal",
          "Quiz 4: Arrays"
        ],
        "JavaScript Operators": [
          "JavaScript Operators",
          "JavaScript arithmetic operators and Precedence",
          "JavaScript arithmetic operators with example",
          "String concatenation in JavaScript",
          "JavaScript project for beginners: Overview of all topics we covered so far"
        ],
        "JavaScript Functions": [
          "JavaScript Functions",
          "JavaScript function with parameters",
          "JavaScript passing parameters to function",
          "JavaScript returning multiple values from function",
          "Function Declarations vs. Function Expressions",
          "Function Expression",
          "Quiz 3 :Functions",
          "Local and Global Variables",
          "Local and Global Variables with example",
          "Objects in JavaScript",
          "Object Literal with Example",
          "Object Constructor",
          "Multiple Objects",
          "Constructor Function for Multiple Objects",
          "Adding and Removing properties",
          "Recap of Arrays and Objects",
          "Object Model : Document and Built-In Objects",
          "Window Object: Properties and methods",
          "Window Object with example",
          "Document Object Properties and Methods",
          "Document Object with Example",
          "Quiz 2 :DOM",
          "String Built-in Object and its methods",
          "String Object with Example",
          "Quiz 4:String",
          "Number Object and its Methods",
          "Number object with Example",
          "Math Object and its Methods",
          "Math Object with Example",
          "Date Object and its Methods",
          "Date Object with Example"
        ]
      },
      "requirements": [
        "The only equipment you need to use this course are a computer with a modern web browser installed, and your favorite code editor, (e.g., Notepad, TextEdit. Sublime Text. or Coda)."
      ],
      "description": "Learn the Language of the Web and Start Building Interactive, User-Friendly Websites\nEvery modern website you use — from social media platforms to eCommerce stores — relies on JavaScript to bring it to life. It’s what makes pages interactive, dynamic, and user-friendly. If you want to take your web development skills to the next level and create websites that truly engage users, learning JavaScript is the key.\nThis course is your beginner-friendly gateway into JavaScript and jQuery, guiding you step by step through the fundamentals of programming and showing you how to build real-world, interactive projects you can be proud of.\nNo programming background? No problem. If you know the basics of HTML and CSS, you already have the foundation to start your JavaScript journey.\nWhy Learn JavaScript?\nIt is the most widely used programming language in the world\nEvery major website and application uses it\nIt’s essential for anyone serious about web development\nJavaScript developers are in high demand and enjoy excellent career opportunities\nLearning JavaScript gives you the power to transform static pages into engaging, professional websites that stand out.\nWhat You’ll Learn in This Course\nWe’ll start from the very beginning and build your knowledge step by step:\nStep 1: Programming Foundations\nUnderstand key concepts like variables, loops, and functions\nLearn the essential terms every JavaScript programmer uses\nStep 2: Learning JavaScript Syntax\nBuild sentences with JavaScript’s vocabulary\nWrite code that’s clean, logical, and effective\nStep 3: Applying JavaScript to Real Websites\nDiscover how JavaScript is used in real projects today\nBuild interactive features step by step\nEnhance your skills with jQuery, which makes JavaScript easier and faster to use\nBy the end, you’ll not only understand how JavaScript works but also build real-time projects that you can showcase in your portfolio.\nWho This Course Is For\nBeginners with basic knowledge of HTML and CSS\nStudents who want to learn programming for the first time\nAspiring web developers eager to add interactivity to their sites\nAnyone looking to move beyond static websites and build engaging, modern applications\nWhy Take This Course?\nThis is not just a theory-heavy course. It’s hands-on, practical, and project-driven. You’ll learn by writing code and building projects right alongside me.\nClear, beginner-friendly explanations\nReal-world examples that show you how JavaScript is applied today\nPractice-driven approach so you retain what you learn\nConfidence to move from beginner to building professional projects\nYour Next Step\nIf you’re serious about becoming a web developer, JavaScript is a skill you cannot skip. This course makes it simple, clear, and practical, giving you the tools to start coding with confidence and see immediate results.\nEnroll now in JavaScript for Beginners: Build Real-Time Projects and take your first step into the world of interactive web development.",
      "target_audience": [
        "Student who wants to learn javaScript",
        "Student who want to become a webDeveloper"
      ]
    },
    {
      "title": "Full Stack Web Development using JavaScript",
      "url": "https://www.udemy.com/course/full-stack-web-development-using-javascript/",
      "bio": "Project-based learning approach on Full Stack Web Application Development using React, Node, Express and MongoDB (MERN)",
      "objectives": [
        "Master Full Stack Web Development skills using JavaScript with - React, Node, Express and Mongo Database (MERN).",
        "Best practices in Code design for reusability, performance and maintenance",
        "Front-end / Client-side programming using ReactJS",
        "ReactJS components, props, states, Hooks, Context API, Forms, JWT security etc",
        "Back-end / Server-side programming using NodeJS, ExpressJS, MongoDB",
        "Complete 7 practical projects using ReactJS and MERN"
      ],
      "course_content": {
        "Overview of Full Stack Web Development Using JavaScript": [
          "Full Stack Web Development - Overview",
          "Overview of MERN technological stacks and Motivation for Learning ReactJS",
          "Live Demo of Project Show Cases (Project 1 to 6)",
          "Overview of Server-side Programming"
        ],
        "Front-end / Client-side Programming using ReactJS": [
          "Introduction to ReactJS",
          "Live Demo: React Demo 1: Setup, JSX, Components, Props",
          "Live Demo: React Demo 2: Component States, Form Controls, Dev Tools",
          "Live Demo: React Project 1 – Movie Search - Part 1",
          "Live Demo: React Project 1 – Movie Search - Part 2",
          "ReactJS Project 1 Deployment on Firebase Tutorial",
          "Live Demo of Firebase Deployment",
          "ReactJS Hooks: useState, useEffect",
          "Live Demo: ReactJS Project 2 - Fun Cat House - Part 1",
          "Live Demo: ReactJS Project 2 - Fun Cat House - Part 2",
          "Live Demo React Project 3: Dog Fun House - Re-using components",
          "Live Demo of React Project 3: Dog Fun House - Part 2",
          "ReactJS Hooks: Context API, useReducer, useContext",
          "Live Demo ReactJS Project 4: To-Do-List Part 1",
          "Live Demo ReactJS Project 4: To-Do-List Part 2",
          "Live Demo ReactJS Project 4: To-Do-List Part 3",
          "Live Demo ReactJS Project 4: To-Do-List Part 4 Summary",
          "ReactJS Routing and Single-Page Application (SPA)",
          "Live Demo: ReactJS Routing and Single-Page Application (SPA)",
          "ReactJS Project 6: Pet Shop SPA Introduction",
          "Live Demo of React Project 6: Pet Shop SPA Part 1 of 7",
          "Live Demo of React Project 6: Pet Shop SPA Part 2 of 7",
          "Live Demo of React Project 6: Pet Shop SPA Part 3 of 7",
          "Live Demo of React Project 6: Pet Shop SPA Part 4 of 7",
          "Live Demo of React Project 6: Pet Shop SPA Part 5 of 7",
          "Live Demo of React Project 6: Pet Shop SPA Part 6 of 7",
          "Live Demo of React Project 6: Pet Shop SPA Part 7 of 7",
          "ReactJS: Web Programming Summary"
        ],
        "Server-side Programming: Node.js, Express, Mongoose with MongoDB": [
          "Introduction to Server-side Programming",
          "Live Demo of Node.js JavaScript Run-time Environment",
          "Express – Web Application Framework",
          "Express Middleware Coding and Error Handling",
          "Live Demo of Express Programming Part 2",
          "Live Demo of Express Programming Part 3",
          "Express, Mongoose ODM (Object Data Model) and MongoDB",
          "Live Demo: Server Programming with Express, Mongoose for MongoDB Part 2",
          "Live Demo of Server Programming using Express, Mongoose ODM Part 3",
          "Live demo of coding using Express, Mongoose ODM. Part 4",
          "Live demo of coding using Express, Mongoose ODM. Part 5",
          "Live demo of coding using Express, Mongoose ODM. Part 6",
          "Live demo of coding using Express, Mongoose ODM. Part 7 Summary",
          "Project 7: Server-side Program for Single-Page Application (SPA)",
          "Live Demo: Project 7: Server-side Program for Single-Page Application Part 2",
          "Live Demo: Project 7: Server-side Program for Single-Page Application (SPA) Par",
          "Live Demo: Project 7: Server-side Program for Single-Page Application Part 4",
          "Live Demo: Project 7: Server-side Program for Single-Page Application Part 5",
          "Summary: Full Stack Web Development"
        ]
      },
      "requirements": [
        "Basic HTML/CSS knowledge and some programming experience in JavaScript."
      ],
      "description": "Learning outcomes:\nAt the completion of this course, you will:\nMaster Full Stack Web Development skills using JavaScript with the most popular technological stacks - React, Node, Express and Mongo Database (MERN).\nGo from a total beginner to an advanced Full Stack Web Developer.\nCode React programs using advanced React-Hooks features with back-end server programming through 7 practical projects.\nGain practical Web programming experience by doing the assigned projects\nLearn best practices of designing and structuring program architecture through live coding tutorials.",
      "target_audience": [
        "Anyone who wants to learn React, Node, Express and Mongo database to develop full-stack web applications.",
        "Beginner / Starter in Web application development,",
        "Career advancement to become a Web Developer"
      ]
    },
    {
      "title": "ChatGPT with MERN Stack Build SAAS Project with Stripe",
      "url": "https://www.udemy.com/course/chatgpt-mastery-build-saas-project-using-mern-with-stripe/",
      "bio": "Utilize ChatGPT Create Subscription-based SAAS with MERN and Stripe - AI Mastery, SAAS Development, Content Generation",
      "objectives": [
        "Master ChatGPT Integration: Leverage ChatGPT for dynamic content",
        "Build SAAS with Subscription: Develop using MERN, Stripe.",
        "Implement Advanced Authentication: Ensure secure user interactions.",
        "Track Payment and Content History: Analyze user data for insights.",
        "Efficient Content Generation History: Enable precise content generation history"
      ],
      "course_content": {
        "CHATGPT MERN AI CONTENT GENERATOR || BACKEND": [
          "Project Demo",
          "Creating Express Server",
          "Data Modelling",
          "User Registration Controller",
          "MongoDB Connect Function",
          "Error Handling Middleware",
          "Login User Controller",
          "Generating Token Using JWT",
          "Logout controller",
          "User Profile Controller",
          "IsAuthenticated Middleware",
          "Getting OPenAI Key (ChatGPT)",
          "OpenAI Controller for Generating Content (ChatGPT)",
          "Implementing 3 Days Trial",
          "API Request Limit Middleware",
          "Integrate Stripe Payment for Subscription",
          "Handle Free Subscription",
          "Stripe Payment Verification",
          "Node-Cron Functions to expire subscription",
          "Checking User authenticated Controller"
        ],
        "JOIN OUR COMMUNITY": [
          "Join our Community"
        ],
        "CHATGPT MERN AI CONTENT GENERATOR || FRONTEND": [
          "React App and Tailwindcss installations",
          "React Query Installation",
          "Installation of React Router Dom",
          "User Registration",
          "Login User",
          "Render Home-Dashboard Components",
          "Authentication Context",
          "Logout User",
          "Protecting Component",
          "User Dashboard",
          "Generating Content using ChatGPT",
          "Handling Free Subscriptions",
          "Stripe Payment Subscription Part 1",
          "Stripe Payment Subscription Part 2",
          "Payment Verification",
          "Display Content Generation History"
        ]
      },
      "requirements": [
        "MERN Stack Foundation: Prior exposure to MongoDB, Express, and Nodejs is beneficial. Familiarity with the MERN stack will enhance your ability to navigate and implement course projects.",
        "Understanding of RESTful APIs: Knowledge of RESTful API concepts will aid in comprehending the integration of ChatGPT, Stripe, and other functionalities in a SAAS environment.",
        "Web Development Fundamentals: A foundational understanding of web development concepts, including HTML, CSS, and basic frontend/backend interactions, is recommended."
      ],
      "description": "Welcome to the immersive world of ChatGPT Mastery, where you'll embark on a journey to unlock the full potential of AI-driven SAAS projects. This comprehensive course is designed to empower you with the skills needed to build a robust SAAS platform using the dynamic MERN stack and seamless Stripe integration.\n\n\nDiscover the art of crafting intelligent solutions as you delve into the intricacies of ChatGPT, a cutting-edge language model that forms the core of your AI-driven content generation engine. Learn to harness the power of MERN (MongoDB, Express.js, React, Node.js) to create a scalable and feature-rich web application. Seamlessly integrate Stripe, the industry-standard payment gateway, to enable secure and efficient subscription-based services.\n\n\nThroughout this mastery course, you will not only gain hands-on experience in building a SAAS project but also develop a deep understanding of key concepts such as authentication, subscription management, payment history, and content generation tracking. Each module is meticulously crafted to provide you with practical insights, real-world applications, and the expertise to confidently navigate the complex landscape of AI development.\n\n\nJoin us on this transformative learning journey and emerge with ChatGPT Mastery, ready to build your own AI-powered SAAS projects with MERN and Stripe. Let's turn your vision into reality, one line of code at a time!",
      "target_audience": [
        "Web Developers: Those wanting to expand their skill set by integrating advanced AI features, subscription models, and payment systems into their web applications.",
        "Reactjs Enthusiasts: Individuals with a keen interest in Reactjs seeking practical experience in building sophisticated web applications with powerful AI capabilities.",
        "MERN Stack Developers: Those familiar with MongoDB, Expressjs, React, and Nodejs, eager to enhance their MERN stack proficiency and delve into AI-powered content generation.",
        "Entrepreneurs & Innovators: Visionaries aiming to create subscription-based SAAS platforms with intelligent content generation, ready to disrupt industries with cutting-edge technology.",
        "AI Enthusiasts: Individuals intrigued by the potential of AI in web development, eager to learn how to leverage models like ChatGPT for content creation within a SAAS context.",
        "Tech Professionals in Transition: Professionals transitioning into web development or exploring the AI landscape, seeking a comprehensive course that bridges these domains."
      ]
    },
    {
      "title": "Guide to Install or Migrate WordPress to AWS Lightsail 2019",
      "url": "https://www.udemy.com/course/quick-install-or-migrate-wordpress-to-aws-lightsail-2018/",
      "bio": "The Complete guide to install, migrate, troubleshoot and add Free SSL to your WordPress Websites on AWS Lightsail.",
      "objectives": [
        "Install Wordpress on AWS Lightsail",
        "Migrate Wordpress from current host to AWS Lightsail",
        "Create and configure your first Lightsail WordPress Instance",
        "Install SSL for Free and Provide secure HTTPS access to your WordPress blog or website",
        "Troubleshoot Email and other common issues in hosting WordPress on Lightsail",
        "Create a Backup of your Instance with one click",
        "Restore a Backup of your Instance with one click",
        "Learn to assign Static IP",
        "WordPress Migration Process Method 1: Using Plugin",
        "WordPress Migration Process Method 2: Using WordPress Import/Export Tools",
        "WordPress Migration Process Method 3: Full Backup and restore method using WordPress File and Database"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Why WordPress ?": [
          "Why WordPress ?"
        ],
        "Why Amazon Lightsail ?": [
          "Why Amazon Lightsail ?"
        ],
        "Why WordPress And Amazon Lightsail ?": [
          "Why WordPress And Amazon Lightsail ?"
        ],
        "Getting Started with Amazon Lightsail": [
          "Getting Started with Amazon Lightsail"
        ],
        "Set up and Configure AWS LightSail": [
          "Create a Lightsail Instance for WordPress",
          "Configure Lightsail's WordPress instance"
        ],
        "Troubleshooting WordPress Email issues on AWS": [
          "Troubleshooting WordPress common Email issues on AWS"
        ],
        "Add SSL Certificate to your WordPress Site": [
          "Secure your WordPress Site with FREE SSL/HTTPS"
        ],
        "Backup Using Lightsail Snapshot": [
          "Create a Snapshot for your Instance",
          "Create a new Instance using your Snapshot"
        ],
        "Migrate Existing WordPress Blog to Aws LightSail": [
          "Method 1: Using All-in-one WP Migration Plugin",
          "Method 2: Using WordPress tools",
          "Method 3: Using full Backup and restore method",
          "After Migration"
        ]
      },
      "requirements": [
        "You do not need to have any prior knowledge about WordPress or Amazon Lightsail",
        "All you need is laptop, internet connection and Amazon AWS Account."
      ],
      "description": "** Updated Aug 2019 – This course covers  WordPress Installation and Migration to Amazon Lightsail. Also learn to make your website more secured using free SSL/HTTPS in few simple steps !! It will also help you setup automatic SSL renewal for LetsEncrypt**\nGuaranteed this course will teach you the easiest way to install and migrate WordPress on Amazon Cloud Lightsail Platform with low Predictable Cloud Pricing and install SSL certificate on your WordPress for Free.\nAdditionally, this course will also cover troubleshooting of the common problems (For ex. Email Server Troubleshooting, Plugin installation permission issues, etc.) which occur while running a WordPress on AWS Lightsail.\nAlso, download the complete Step by Step guide to install and migrate Wordpress to Amazon Lightsail.\nAmazon launched its Lightsail Service in late 2016 for small and medium scaled business websites/applications, it is so amazing that if you are not yet using it then your are really missing something amazing for your WordPress Blog or Site.\nNow you are thinking How and Why Amazon Lightsail? So, it's because\nIt uses Amazon's world-class Cloud Infrastructure\nAmazing Lightsail is one of the most secured and fast Web hosting Platform for your Wordpress Blog or Site compared to traditional servers.\nYou can jumpstart your WordPress on servers available all around the world in just few clicks.\nYou can scale up your WordPress blog or site in minutes\nProvide seamless experience to your visitors with load balancing and great performance\nCloud hosting Prices are low and Predictable, and the basic plan offers  first month for Free*\nGet insights about your Server Performance and health Matrices\nOne click backup and restore\nIncrease your WordPress Capabilities by using other Amazon Services with your Lightsail\nIt also enhances your WordPress Performance and boost SEO with better server response times\n...and many more.\nAfter the completion of this course you will have all required skills and knowledge to\nQuick start building your own WordPress blog/Site on cloud platform like Amazon.\nGet started with your Amazon AWS account to take advantage of various Amazon Services\nCreate one or more Lightsail instance.\nConfigure these instances to suite your WordPress website\nAdd static IP to your Instance\nTroubleshooting WordPress common Email issues on AWS\nProvide secure access (https) to your WordPress Blog/Site with free SSL Certificate\nRenew this SSL Certificate when needed\nSSL Auto Renewal\nBackup your WordPress instance using Snapshot\nCreate a new WordPress Instance from this backed up snapshot\nMigrate your WordPress Website to any web serve with Non-technical Approach using Plugins\nMigrate your WordPress to any web server using WordPress tools\nLearn the to migrate using full manual Backup and Restore method for your Database as well as WordPress contain\nI appreciate that you took a moment to check out my course.\n\nI am sure you are interested to learn the latest Platform to host your WordPress blog or Site. So why wait any longer to take advantage of the world class Amazon Cloud Infrastructure?\nForget the old school Hosting, Click on \"Take This Course\" button to join this course and get ready to learn amazing, quick, hustle free installation as well as migration steps for your WordPress Blog or Site on Amazon Cloud platform.\nThis course will also help developers and agency owners learn advance cloud deployment of the WordPress so you can undertake high-value enterprise WordPress projects.",
      "target_audience": [
        "Anyone who wants to install WordPress on Amazon Lightsail",
        "Anyone who wants to migrate WordPress Blog or Site to AWS Lightsail",
        "Anyone who wants to learn the latest AWS Lightsail Platform to host their WordPress Blog or Site",
        "Anyone who wants to learn how to add a valid SSL Certificate to their WordPress for Free",
        "Anyone who wants to Troubleshoot the common WordPress and AWS Lightsail issues including Email Server and Plugin installation Problems",
        "Anyone who wants to Learn all the different WordPress Migration Options available"
      ]
    },
    {
      "title": "Create a Responsive Author Website with NO Prior Experience",
      "url": "https://www.udemy.com/course/create-an-author-website/",
      "bio": "A comprehensive beginner's course to building your own author website with no experience and at VERY little cost.",
      "objectives": [
        "Create a stunning & professional website as the basis of your author platform",
        "Build and manage the back-end framework for the site",
        "Set up your webserver",
        "Obtain a domain name",
        "Install Wordpress on your server",
        "identify which elements you need on your website"
      ],
      "course_content": {
        "Introduction": [
          "The Benefits of Having an Author Website"
        ],
        "Technical Setup": [
          "Creating a Webserver Account and Installing Wordpress"
        ],
        "Building Your Website": [
          "Setting up Suggested Pages for an Author Website",
          "General Website Options & Settings",
          "Finding, Previewing and Installing Themes",
          "Sample Theme Construction",
          "Deconstructing a Completed Website"
        ],
        "Send Off and Good Luck!": [
          "Send Off and Good Luck!"
        ],
        "Additional References": [
          "Email List Building Reference Text"
        ]
      },
      "requirements": [
        "A computer with internet access",
        "A head shot of yourself to use on the site (optional)",
        "$5 per month for associated hosting fees",
        "Basic understanding of computers"
      ],
      "description": "New to self publishing and need an author website?\nThis course will walk you step-by-step, through the details of creating a complete, professional, responsive website and it's a LOT easier than you might think.\nYou will learn how to:\nSet up your webserver / hosting site\nSet up your Wordpress installation\nOperate the \"backend\" of your new website\nCreate the page framework necessary for your site\nSetup basic options for a professional installation\nInstall new responsive website themes to change the look and feel of the site\nCustomize themes to suit your needs\nCreate your site content and post blog entries\nBuild a beautiful sliding home page banner to showcase your book(s)\nUpload your own graphics\nCreate a secure contact form\nCreate an email signup form\nYou can create a really nice site with very little effort and even less money! I have created dozens of websites on many platforms and have created this course to teach to independent authors, like myself, the most effective method of creating a great author website.\nIn over ten years of web development I have found WordPress to be the most powerful and easy-to-use platform out there and it is continually getting better with each update.\nWhether you want a blog that you can post articles to directly from your iPhone or Android, or if you want just a static informational website, this course will cover it. We'll discuss what kind of content you should provide, as an author and how best to provide it. I'll give you a simple way to collect email addresses of your fans so that you can contact them with future news.\nI hope you enjoy the course - please contact me with any questions!\nTim Johnson\nP.S. - I've also included a great electronic text book to help you leverage your list of email subscribers most effectively.",
      "target_audience": [
        "Self published authors",
        "Authorpreneurs",
        "Independent authors",
        "Complete beginners with little to no technical knowledge"
      ]
    },
    {
      "title": "HTML For SEO and Web Crawlers (2022 Edition)",
      "url": "https://www.udemy.com/course/html-structured-data/",
      "bio": "Learn HTML Structured Data, Semantic Tags, Rich Snippets, Microdata, RDFa Lite, JSON-LD, Video & Carousel Schema.",
      "objectives": [
        "Create search engine friendly website.",
        "HTML semantic tags, structured data, rich snippets",
        "How to markup your content that have carousel in google.",
        "How to markup your videos, video clip and how to get LIVE badge on your video"
      ],
      "course_content": {
        "Introducing Structured Data": [
          "HTML Semantics Tags and Structured Data",
          "Structured Data Vocabularies - Schema.org and Goodrelation",
          "Core Syntaxes - Microdata, RDFa Lite and JSON-LD"
        ],
        "Recipe Schema with Microdata for HTML Engineers": [
          "Introducing Microdata",
          "Understanding Recipe HTML structure",
          "Google required recipe schema",
          "Adding recipe information schema",
          "Adding recipe ingredients schema",
          "Adding recipe instructions schema",
          "Adding recipe nutrition and keywords schema",
          "Adding recipe aggregate rating schema",
          "User review schema",
          "Project - FAQ Schema Using Microdata",
          "Solution- FAQ Schema Using Microdata"
        ],
        "Product Schema With RDFa Lite for Web Designers": [
          "Introducing RDFa Lite",
          "Understanding HTML markup",
          "Adding Schema To Product Header",
          "Adding Schema To Product Detail - Part 1",
          "Adding Schema To Product Detail - Part 2",
          "Adding Aggregate Rating Schema",
          "Adding User review schema using RDFa Lite",
          "Challenge - Add Schema To Recipe Using RDFa Lite",
          "Solution- Adding Schema To Recipe Using RDFa Lite"
        ],
        "Event Schema with JSON-LD for Javascript Nerds": [
          "Introducing JSON-LD",
          "HTML Structure Of The Event",
          "Using JSON-LD To Define Event Scope",
          "Adding JSON-LD Schema To Event Header",
          "Adding Event Location Schema",
          "Event Offer Schemas",
          "Event Performer Schema",
          "Challenge - Add Schema To Recipe Using JSON-LD",
          "Solution - Adding Schema To Recipe Using JSON-LD"
        ],
        "Google's Video Markup Schema": [
          "Introducing Video Object Schema",
          "Google Required Video Schema",
          "Video Views And Likes Schema",
          "Adding Video Clip(or Segment) Schema",
          "Adding Schema to LIVE videos Using JDON-LD",
          "Challenge 1 - Add Video Object Schema To Recipe Using Microdata",
          "Solution 1- Add Video Object Schema To Recipe Using Microdata",
          "Challenge 2- Add Video Object Schema To Recipe Using JSON-LD",
          "Solution 2 - Add Video Object Schema To Recipe Using JSON-LD"
        ],
        "Google's Carousel Data Structure": [
          "Introducing Carousel Schema",
          "Summary page + multiple full details pages",
          "Single, all-in-one-page list"
        ],
        "(BONUS) Schema Plugins For Wordpress Users": [
          "My Ultimate Favourite Plugin (FREE)",
          "My Second Favourite Plugin (FREE)",
          "BONUS Plugins + Comparison"
        ],
        "Final Thought": [
          "Wrap Up"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "Need a computer with active internet connection."
      ],
      "description": "So in this course, you will learn to create SEO friendly websites using structured data that helps search engines, web crawlers, and browsers extract and process data from a webpage and use it to provide a richer browsing experience for users.\nJoin the Rahul Giri for this course, as he explains structured data, its benefits, and the various syntaxes you can choose for markup, including RDFa, microdata, and JSON-LD.\nThe course also covers five practical projects on structuring different types of content data:\nAdding Schema to...\nRecipe\nEvent\nProduct\nFAQ\nQ&A\nBy the end of this course, you'll be able to create more structured, meaningful webpages and know where to find additional resources for learning more.\n\n\nTopics include:\nStructured data vocabularies and syntaxes\nHTML Semantic Tags\nSchema dot org\nGoogle structured data guideline\nMicrodata\nMarking up a recipe page using microdata\nMarking up FAQ schema\nRDFa Lite\nMarking up the product using RDFa Lite\nMarking up recipe page using RDFa Lite\nJSON-LD\nMarking up event schema using JSON-LD\nMarking up recipe schema using JSON-LD\nMarking up Q&A schema using JSON-LD\nGoogle Video Schema\nHow to get the live badge on the video\nMarking up video clip\nMarking up google carousel object\n\n\nAS BONUS -\n2 Wordpress plugins to add schema to your existing Wordpress website.\nAnd all exercise files are included to download.\nSo if you're ready to build your next SEO friendly website while exploring structured data then.\nLet's get started!",
      "target_audience": [
        "Frontend Developers",
        "SEO learners"
      ]
    },
    {
      "title": "React and Golang: A Practical Guide",
      "url": "https://www.udemy.com/course/react-go-admin/",
      "bio": "Go APIs, React Hooks, Typescript, Redux, MySQL, Upload Images, Export CSV",
      "objectives": [
        "Use Go with Fiber Framework",
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Go with MySQL",
        "React with Typescript",
        "Use Redux",
        "Upload Images",
        "Export CSV files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Go": [
          "Installation",
          "Fiber Framework",
          "Pointers",
          "Database",
          "Packages",
          "Structs",
          "Realize",
          "Migrations",
          "Request Data",
          "Register",
          "Login",
          "Jwt",
          "Cookies",
          "Authenticated User",
          "Logout",
          "Json Output",
          "Middlewares",
          "Users",
          "Methods",
          "Users CRUD",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Pagination",
          "Profile",
          "Products",
          "Interfaces",
          "Uploading Images",
          "Orders",
          "Ignore Columns",
          "Export CSV",
          "Raw SQL",
          "Permission Middleware"
        ],
        "React": [
          "Installation",
          "Template",
          "Components",
          "Router",
          "Wrapper",
          "Register",
          "Http Requests",
          "State",
          "useState",
          "Login",
          "useEffect",
          "Axios Defaults",
          "Logout",
          "Models",
          "NavLink",
          "Users",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "useRef",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Redux",
          "Using Redux"
        ]
      },
      "requirements": [
        "Some knowledge of Go and Javascript is preferred but not required"
      ],
      "description": "Welcome, in this course you will learn how to authenticate using React and Go (Golang) with Fiber Framework.\nIn Go you will learn:\nUse the Fiber framework inspired by express.js\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV files\nIn React you will learn:\nCreate a React project with Typescript\nUse Redux\nCreate public and private routes\nReact Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner Javascript and Go Developers"
      ]
    },
    {
      "title": "ChatGPT & Wordpress: Create a News Blogging Website",
      "url": "https://www.udemy.com/course/chatgpt-masterclass-build-profitable-wordpress-blog-in-2023/",
      "bio": "Unlock the Power of ChatGPT and WordPress: Learn SEO Strategies to Build a Profitable AI Powered Blog",
      "objectives": [
        "Learn to leverage ChatGPT for quick and efficient SEO blog posts. Optimize for clicks, traffic, and revenue.",
        "Boost engagement with AI-generated content. Discover best practices and turn heads with headlines and meta descriptions.",
        "Master ChatGPT to craft engaging headlines and meta descriptions that drive traffic to your site.",
        "Master ChatGPT to craft engaging headlines and meta descriptions that drive traffic to your WordPress site.",
        "Use ChatGPT for SEO optimization and research to rank high in search engine results.",
        "Monetize your WordPress blog with affiliate marketing, sponsored content, and advertising. Discover what works best for you.",
        "Stay organized and produce quality content consistently with a content marketing plan and editorial calendar.",
        "Stay up-to-date on WordPress and blogging trends, emerging technologies, and industry developments for success in 2023."
      ],
      "course_content": {
        "Introduction": [
          "Overview of the website",
          "What you need to build a Wordpress Blog"
        ],
        "Installing Wordpress & Getting the Free Domain": [
          "Getting the Hosting",
          "Claiming the Free Domain"
        ],
        "Gutenberg Editor Tutorial": [
          "Gutenberg tutorial part 1",
          "Gutenberg tutorial part 2"
        ],
        "Wordpress Tutorial": [
          "Wordpress tutorial part 1",
          "Wordpress tutorial part 2"
        ],
        "Installing the Website Theme & Free Plugins": [
          "Installing Plugins - Connecting the website to Google Analytics & Search Console",
          "Installing the ASTRA Theme",
          "Importing the Demo Website"
        ],
        "Building the Blog Hero Page": [
          "Modifying the Menu",
          "Editing the Fonts and typography and website colors",
          "Modifying the Header",
          "Editing the Website Footer",
          "Using Chatgpt to create a Privacy Policy Page",
          "Editing the Hero section of the Blog",
          "Using DALL-E to add a hero character to our hero section",
          "Adding a contact form to encourage subscribers"
        ],
        "Installing Grammarly and Chatgpt Extensions": [
          "Installing Grammarly and Chatgpt Extensions"
        ],
        "Using chatGPT, Buzzsumo, Grammarly, Rank Math SEO to Write SEO Blog Posts": [
          "Using Buzzsumo to find Trends & Using chatgpt to Write the Blog Post",
          "LSI keywords and Using chatgpt to Optimize the post for Focus keyword"
        ],
        "Advanced SEO Blog Post Optimization": [
          "AI Content Copyright (Do Not Skip)",
          "Advanced SEO keyword optimization using chatgpt & Rank math part 1",
          "External linking and Adding a table of contents",
          "Using chatgpt to create and add an FAQ schema code",
          "Improving content readability and checking for plagiarism",
          "Ultimate Prompt to Build a High-Converting Blog Post with SEO Focus"
        ],
        "Practise Time - Writing an SEO Optimized Blog Post": [
          "Practise time - Writing an SEO optimized Blog post Example"
        ]
      },
      "requirements": [
        "The only requirement for this course is access to a computer and the internet, as all necessary plugins and themes are available for free"
      ],
      "description": "Are you ready to establish a thriving blog ? Eager to master the art of content optimization for SEO and attract visitors to your website? Look no further than the ChatGPT Masterclass, your key to unlocking success in the world of blogging.\n\n\nIn this all-encompassing course, you will discover how to harness the potential of ChatGPT and WordPress to generate SEO-rich content that fuels traffic, engagement, and revenue. Delve into the latest trends and proven strategies for blogging, content enhancement, and monetization techniques. Catering to both novice bloggers and seasoned content creators, this course equips you with the essential tools and insights to excel in your blogging endeavors.\n\n\nMaster the skill of crafting captivating headlines, compelling meta descriptions, and AI-driven content to boost click-through rates and channel traffic to your WordPress site. Learn how to effectively utilize social media for blog promotion and audience engagement, as well as monetize your blog through affiliate marketing, sponsored content, and advertising to generate lucrative commissions.\n\n\nUpon completing this course, you'll be proficient in setting up a WordPress blog from the ground up, encompassing hosting, domain name registration, and installation. Grasp the fundamentals of SEO and leverage ChatGPT for optimization and research to secure top positions in search engine results. Create a robust content marketing strategy and maintain an organized editorial calendar for consistent production of high-caliber content.\n\n\nKeep your finger on the pulse of emerging technologies and industry advancements to ensure your blogging success and beyond. The ChatGPT Masterclass is the quintessential course for anyone aspiring to build a prosperous, profitable blog. Enroll now and embark on the journey towards accomplishing your blogging aspirations.",
      "target_audience": [
        "Beginner bloggers who want to learn how to create a WordPress blog and generate SEO optimized content.",
        "Bloggers who want to increase engagement and drive traffic to their website with AI-generated content.",
        "Bloggers who want to monetize their WordPress blog with affiliate marketing, sponsored content, and advertising.",
        "Aspiring bloggers who want to learn the basics of SEO and how to use ChatGPT for optimization and research.",
        "Social media marketers who want to learn how to use social media to promote their WordPress blog and increase audience engagement.",
        "Freelance writers who want to learn how to use ChatGPT to craft high-quality, engaging content quickly and efficiently.",
        "Small business owners who want to learn how to set up a WordPress blog and drive traffic to their website with SEO and social media marketing.",
        "Anyone who wants to stay up-to-date on the latest blogging trends, emerging technologies, and industry developments in 2023."
      ]
    },
    {
      "title": "Mendix Basics From Certified Trainer (Beginner->Int)",
      "url": "https://www.udemy.com/course/mendix-basics-from-certified-trainer-beginner-int/",
      "bio": "Mendix : Learn Mendix From Certified Trainer",
      "objectives": [
        "Students will learn basics of Mendix and how to develop application in Mendix from a certified teacher",
        "Students will learn both theory and practice",
        "Students will learn how create an application from scratch",
        "While we are are creating our use case \"Shopping App\", Students will understand every deep detail in Mendix"
      ],
      "course_content": {
        "Introduction": [
          "General Introduction",
          "Studio Pro Download And Create First App",
          "Developer Portal"
        ],
        "Studio Pro Tour": [
          "Studio Pro tour (Menu & Usages, Layout, Modules)",
          "Use Case Shopping App - Sprint Backlog",
          "Page Basics - Columns & Rows",
          "Page Basics - Buttons",
          "Page Basics - Templates & Navigation"
        ],
        "Domain Model Basics": [
          "Entities & Attributes",
          "Adding First Data",
          "Edit & Delete Functionality",
          "Associations",
          "Validation Rules",
          "Product Picture Image Entity",
          "Display Product Pictures"
        ],
        "Microflow Basics": [
          "Logic in Mendix",
          "Create First Logic",
          "Microflow Elements",
          "Submicroflow",
          "Retrieve From Database & Retrieve By Association",
          "List Operations"
        ],
        "Shopping Page": [
          "Commit & Clean Up & Foldering",
          "Create Shopping Page For Users",
          "Cart page",
          "Add to Cart Function",
          "Remove From Cart Function - Refresh in client",
          "Calculate Total Cost of Cart - Difference between stored & calculated attributes"
        ],
        "Security": [
          "Security Options",
          "User Roles & Module Roles",
          "Access Rules - Differences Between Page, Microflow and Entity Security",
          "Set Up Page Access",
          "Set Up Microflow Access",
          "Set Up Entity Access",
          "Set Up Role Based Home Pages",
          "Demo Users & Test the App"
        ],
        "Account Management": [
          "Account Overview Page & Create Users & Logout",
          "Create Person Entity for Profile Picture - Cross Module Associations",
          "Create Custom Layout",
          "User Settings Page"
        ],
        "Developing Shopping App": [
          "Create Budget Entity For Users",
          "Show Budget In Cart",
          "Buy The Cart Functionality",
          "How To Find & Fix The Bug",
          "Create Shopping Cart List Part 1",
          "Create Shopping Cart List Part 2",
          "Branding & Styling",
          "Css & Styling",
          "Custom Login Page With Styling",
          "Filtering Products",
          "Budget Increase Functionality"
        ],
        "Xpath Basics": [
          "Xpath In Microflow",
          "Xpath In Security",
          "Xpath In Page - Categories Tab"
        ],
        "Validation": [
          "Cascading Delete & Prevention On Delete",
          "Validation On Page",
          "Validation On Microflow"
        ]
      },
      "requirements": [
        "You will learn everything you need to know"
      ],
      "description": "Mendix is the leader low code platform. Mendix is the fastest & easiest one. Low code is increasingly becoming an area that every student or software developer should be interested in. The Mendix Platform is designed to accelerate enterprise app delivery across your entire application development lifecycle, from ideation to deployment and operations.\nIf you want to learn Mendix or if you increase your existent knowledge, you are on the right place.\nLearning Mendix from professional certified Mendix trainer and expert is highly necessary at your Mendix journey. You need to understand everything basically and underlying reasons. And this course is exactly what you need. You don't have to have basic knowledge about Mendix or low code. You will find everything you need in the course.\nIn this course, you will learn Mendix from scratch and we develop a shopping application together.  At the end of the course you will have good understanding and knowledge about Mendix.\nIn this course you both theory and practice together.\nIn this course you will learn;\n- Studio Pro\n- Developer Portal\n- Domain Model\n- Microflows\n- Pages\n- Security\n- Account Management\n- Xpath\n- Validations\n- Styling Css Branding\n- Custom logics and pages\n- Validations\n- Event handlers\n- Rest Calls\n- Javascript actions\n- Java actions\n\n\nI hope you enjoy with me on this journey :)",
      "target_audience": [
        "Beginner Mendix developers or anyone who wants to improve Mendix skills and understanding"
      ]
    },
    {
      "title": "Build A Complete Authentication Authorization Web App [2025]",
      "url": "https://www.udemy.com/course/authentication-authorization-security-the-complete-guide/",
      "bio": "Secure User Authentication Using Firebase and JavaScript - Signup, Signin/Signout, Social Logins, Manage User Data/Image",
      "objectives": [
        "Learn the fundamental aspect of web app development that enhances security, personalization, and overall user experience.",
        "Be able to add user authentication functionality to any web app you want.",
        "Build a full-fledged secure, faster and cost effective authentication web app for your startup or business.",
        "Learn the modern way of building authentication without back-end development expertise.",
        "Craft a portfolio of web apps that includes user authentication features to apply for junior developer jobs.",
        "Master user authorization including managing user data and assets with Firebase Authentication & Cloud Firestore."
      ],
      "course_content": {
        "User Authentication With Email/Password": [
          "Create A Firebase Project",
          "Setting Up The Authentication Web App JavaScript Project",
          "Create & Design A Sign Up Form",
          "Create A Brand New User Account Using createUserWithEmailAndPassword()",
          "Handle User Registration Validation Errors",
          "Show Profile View Upon User Account Creation",
          "Handle User Authentication State Changes Using onAuthStateChanged()",
          "Implement Log out Functionality",
          "Show Log in Form When App launches or user logs out",
          "Logging In to a User Account",
          "Toggle Between Log In & Sign Up Forms"
        ],
        "Email Verification & Reset Password": [
          "Send Email Verification",
          "Forgot Password"
        ],
        "Social Media Authentication": [
          "Log In With Google",
          "Log In With Facebook"
        ],
        "Manage Authenticated User Data (Authorization)": [
          "Getting Started With Cloud Firestore Database",
          "Add Logged In User Data",
          "Get Logged In User Data",
          "Update Logged In User Data"
        ],
        "Manage Authenticated User Profile Image (Authorization)": [
          "Upload Profile Picture Upon User Account Creation",
          "Download Logged In User Profile PIcture",
          "Change Logged In User Profile Picture",
          "Download The Completed Project Code"
        ],
        "Bonus": [
          "5 Must-Know Security Rules",
          "Firebase JavaScript Cheatsheet PDF",
          "Role Based Authentication & Authorization"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS.",
        "No Firebase / Authentication experience needed - I'll teach you everything you need to know.",
        "No JavaScript experience required.",
        "Time and commitment.",
        "I'll walk you through with easy to follow step-by-step instructions from scratch."
      ],
      "description": "Welcome to Build A Complete Authentication & Authorization System 2025, the only course you need to learn and code to build a complete secure, and faster user authentication system using Firebase & JavaScript.\n\nWith almost 4 hours of HD video content, this authentication course is the most up-to-date course available online. Even if you've less or no experience with Firebase/JavaScript, this course will take you from beginner to pro!\n\n\nWhy take this course?\n\nThe course is taught by the instructor at SoftAuthor, a Canadian-based software training & development company.\n\nIn this 2024 course, you'll be learning the fundamental aspects of web app development that enhances security, personalization, and overall user experience. (MUST HAVE SKILL).\n\n\nWhen did you last see any web app that doesn't have an authentication system in place?  I know...In this modern era, building a web app without authentication will become obsolete.\n\nFor any company that has a web app, whether it's a Fortune 500 company such as Google, Facebook, or Amazon, or any small or medium-sized companies, Authentication is a must-have feature in their platform.\n\nThis course is thoughtfully structured with a beginner-friendly approach in all aspects to make it simple and easy to follow by building a professional-looking real-world secure and fast authentication & authorization web app.\n\nThe curriculum was carefully developed over 1 year, with comprehensive student feedback.\n\n\nThe course is constantly updated with new content, projects, and modules determined by you, the students!\n\n\nI'll take you step-by-step through engaging and fun video tutorials that are rich in content!\n\n\nThroughout this fully practical course, we cover a massive amount of tools and technologies, including:\n\n\nAuthentication\n\n\nSign up a user (Email/Password)\nSign in a user\nSign out a user\nForm Validation and Handle Errors\nHandle User Authentication State\nEmail Verification\nForgot/Reset Password\nGoogle Sign in\nFacebook Sign in\nAdd, Get & Update Logged In User Data\nUpload, Get & Update Logged In User Profile Picture, and more.\n\n\n\n\nBy the end of this course, you will be fluently coding in JavaScript and utilizing Firebase as a back-end server to build your secure authentication & authorization featured web app faster, like a pro!\n\nYou'll also build a portfolio of a complete authentication web app that you can show off to any potential employer.\n\n\nREMEMBER… I'm so confident that you'll love this course that's why all eligible courses purchased on Udemy can be refunded within 30 days, provided the request meets the guidelines in their refund policy. (please refer to the Udemy Refund Policy for more)\n\nSo it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\n\n\nI will be here to support you throughout this journey, so if you ever have any questions, suggestions, or feedback, please do not hesitate to contact me!\n\n\nSo what are you waiting for? Click the BUY NOW button and join one of the best authentication courses now!",
      "target_audience": [
        "If you want to learn Firebase & JavaScript through building a secure and faster authentication system, then take this course.",
        "Junior developers who want to learn how user authentication and authorization works.",
        "If you're a front-end developer, take this course to build an authentication web app without back-end development expertise.",
        "Students who want learn the fundamental aspect of web app development to enhance their portfolio and skills to attract more job opportunities.",
        "If you want to take ONE COURSE and learn everything you need to know about user authentication & authorization using Firebase/JavaScript, take this course."
      ]
    },
    {
      "title": "Learning Path: Web Development with PHP 7 and Laravel 5",
      "url": "https://www.udemy.com/course/learning-path-web-development-with-php-7-and-laravel-5/",
      "bio": "Apply your knowledge to build amazing web applications with PHP 7 and Laravel",
      "objectives": [
        "Explore new and advanced PHP techniques like anonymous and recursive function.",
        "Understand the Object-oriented SOLID principles with PHP 7.",
        "Learn and get accustomed with the advanced Object-oriented programming techniques such as Inheritance, Traits, Namespaces, and Autoloading.",
        "Understand the PHP design patterns such as Singleton, Factory, Repository, and the MVC design pattern.",
        "Work with Laravel directory structure and various artisan commands.",
        "Learn about Laravel routes and the Laravel MVC structure.",
        "Understand the basics of validations in controllers.",
        "Build a web application using CRUD operations."
      ],
      "course_content": {
        "Getting Started with PHP 7": [
          "The Course Overview",
          "Installing Web Server Apache, MySQL, and PHP7",
          "Why PHP 7?",
          "Scalar Type Declaration",
          "Return Type Declaration",
          "The Null Coalesce Operator",
          "The Spaceship Operator",
          "Session Start Options",
          "Anonymous Classes",
          "Filtered Unserialization",
          "Grouping Use Statements",
          "Anonymous Function",
          "Recursive Function",
          "Internationalization (i18n)",
          "Regular Expression",
          "Heredoc",
          "Date and Time",
          "Dependency Management",
          "PSR Standard",
          "Why Database?",
          "PDO",
          "Doctrine",
          "SQL Versus NoSQL",
          "Redis",
          "Why OOP?",
          "Object Versus Class",
          "Class Construct",
          "Class Variables",
          "Class Methods",
          "Class Constant",
          "Why SOLID?",
          "Single Responsibility Principle",
          "Open Closed Principle",
          "Liskov Substitution Principle",
          "Interface Segregation Principle",
          "Dependency Inversion Principle",
          "Inheritance",
          "Abstract Class",
          "Interface",
          "Static Variables and Methods",
          "Magic Methods",
          "Traits",
          "Namespaces",
          "Autoloading",
          "Singleton Design Pattern",
          "Factory Method Design Pattern",
          "Repository Design Pattern",
          "Model View Controller Design Pattern"
        ],
        "Beginning Laravel": [
          "The Course Overview",
          "What Is Laravel and a Quick Starter to Laravel 5.4",
          "Understanding the Composer",
          "Setting Up System Requirements for Laravel",
          "Installation of Laravel in OSX",
          "Creating and Configuring Your Laravel Application",
          "Exploring the Laravel Directory Structure",
          "Working with Dependencies and Packages and Installing with Composer",
          "Exploring Laravel Artisan Commands",
          "Working with Laravel Routes",
          "Introduction to the Laravel MVC Structure",
          "Working with Laravel Controllers",
          "Working with Laravel Models",
          "Working with Laravel Views and Blade Templates",
          "Working with Database and Understanding Database Migrations",
          "Working with Laravel Resource Controller and Implementing CRUD Operations",
          "Understanding Requests and Response",
          "Basic Validations in Controllers",
          "Adding Pagination",
          "Understanding Sessions",
          "Authentication in Laravel"
        ]
      },
      "requirements": [
        "Basic knowledge of PHP",
        "Basic knowledge of Laravel"
      ],
      "description": "Are you a PHP developer who wants to learn the best PHP framework, Laravel? Do you want to migrate to PHP 7 for developing robust feature-rich web applications? If yes, this Learning Path is for you.\nLaravel is a web application framework with expressive and elegant syntax. Laravel attempts to take the pain out of development by easing tasks that are most commonly used in web projects. PHP 7 is based on the PHPNG, so the performance gains realized from PHP 7 are huge.\nAlthough Laravel 5 works well with the previous versions of PHP, the combination of PHP 7 and Laravel 5 can be used to create faster websites.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that video builds on the skills learned in the video before it.\nThis Learning Path starts with an introduction to PHP 7 and then moves on to exploring its new and advanced features. You will also get acquainted with the basic and advanced object-oriented programming concepts and techniques. Next, you will learn how to install Laravel on Windows, Mac, and Linux systems. You will then be introduced to the directory structure of a Laravel application, as well as the third-party dependencies, packages, and installation with Composer. Moving ahead, you will learn about the Laravel MVC structure: routes, controllers, models, views, and templates. Finally, you will build a simple web application using the CRUD operations and basic validations.\nBy the end of this Learning Path, you will be able to build your own applications using PHP 7 and Laravel.\nAbout the Authors:\nFor this course, we have combined the best works of these esteemed authors:\nBudi Irawan is a software engineer, lecturer, and open source contributor. He has experience in PHP for more than 7 years in building small and enterprise web applications. Besides PHP, he also plays with JavaScript and Ruby. He loves to teach, contribute, and meet new people. In his leisure time, he usually plays sports and at times travelling too.\nHiren Dave is a software engineer, blogger, and consultant with over 9 years of professional experience. He writes code in number of languages. He has a passion for developing web apps, mobile apps, writing books, and blog articles about programming. He has a solid experience of startups, as he manages products for few startups. He is also passionate about researching and learning new technologies and trends. He has also authored a book Instant Sencha Touch, published by Packt.",
      "target_audience": [
        "This Learning Path is for PHP developers who wish to learn the Laravel framework to develop robust and feature-rich web applications.",
        "Also, people who are working on older PHP versions and want to migrate to PHP 7 will find this Learning Path useful."
      ]
    },
    {
      "title": "Spring Design Patterns and Best Practices",
      "url": "https://www.udemy.com/course/spring-design-patterns-and-best-practices/",
      "bio": "Manage the Spring framework effectively to create your own system",
      "objectives": [
        "How to create a Spring project from the ground up",
        "Why design patterns are important",
        "Never call a constructor again! How to use the Factory pattern and Spring auto-wiring to create objects",
        "Leverage the command pattern to future-proof software",
        "Take advantage of Spring's minimal-configuration deployment",
        "Add behavior to existing compiled classes with Aspect Oriented Programming",
        "Use Model-View-Controller to separate user interface, business logic, and data access logic",
        "Consider how to leverage existing business and data logic with a different user interface"
      ],
      "course_content": {
        "Spring Fundamentals": [
          "The Course Overview",
          "The Overview",
          "Why Spring? Why Design Patterns?",
          "Polymorphism: Variable Type Versus Object Type",
          "Creating Objects",
          "Spring Configuration"
        ],
        "Starting Our Project": [
          "Project Overview and Scrum Board",
          "What Is Maven?",
          "Example — Create a Maven Project in Eclipse",
          "Simple Interface with Model View Controller",
          "Starting Our Look and Feel"
        ],
        "The Different Types of Design Patterns": [
          "Categories of Design Pattern",
          "Behavioral Patterns",
          "Creational Pattern Explained — Factory Method",
          "Factory Method Example",
          "Interceptor Pattern"
        ],
        "Decorator Pattern": [
          "What Is the Decorator Pattern?",
          "Overview of Forms in Spring MVC/Thymeleaf",
          "Creating a Screen for Native, Woody, and Herbaceous",
          "Creating a Responsive Screen Based on Selections",
          "Store Selections in Objects"
        ],
        "Spring Integrations and the Value of Patterns": [
          "Spring Configuration and the Singleton Pattern",
          "Spring Annotations",
          "Adding Decorators",
          "Scope Types, Factories, and Prototypes",
          "Example: Abstract Factory Pattern"
        ],
        "Template Patterns and Visitor Patterns to Generate JSON": [
          "JSON Fundamentals",
          "What Is an Abstract Class?",
          "Visitor Design Pattern",
          "Creating JSON with Template and Visitor",
          "Course Summary"
        ]
      },
      "requirements": [
        "A basic knowledge of the Spring Framework and Java is assumed."
      ],
      "description": "This video will take you through Design Patterns and considerations required with the Spring framework. You will learn to use these design patterns to solve common problems when designing an application or system using the Spring Framework. This video will not only take you through ten of the essential GoF Design Patterns but also categories of patterns, considerations, and best practices required at different stages of Application Development.\nDesign Patterns help us write software that is flexible and future-proof. If you’re overusing if tests, you are probably not writing a well-designed object-oriented program. You will see how to use several design patterns, instead of if tests, to write a program where logic resides in an optimal location. The examples in this course use the command pattern, decorator pattern, visitor pattern, and several others.\nYou will understand the Dependency Injection pattern that is the main principle behind the decoupling process that Spring does, thus making it easier to manage your code. With practical examples, you will understand how patterns listed under the GoF patterns can be used in your Application Design. You will be introduced to the MVC pattern and how it treats controllers as Plain Old Java Objects, thus making it easier for testing the controllers. You will then learn about the Factory Method, and how it relates to one of the core components of object-oriented design: polymorphism.\nAbout the Author\nBrandan Jones has been an Adjunct Assistant Professor for the University of Cincinnati since the 2000-2001 school year. He has taught many courses in programming, from introductory programming to full stack development.\nBrandan proposed and created the first Android programming course at the University of Cincinnati, and has been teaching it ever since. He reapplied this course and taught it at Northwestern University’s School of Continuing Studies as well.\nBrandan is the creator of the Android app PlantPlacee Mobile, which allows users to search for plants by color, and GPS plants. He wrote this app in 2012, using TDD principles. He used selected JSON feeds from that app in the examples in this video course.\nBrandan’s mix of both academic and professional experience means that he brings real-world concepts to the classroom. Most of his high level classes include hands on experience with unit testing, scrum, and distributed version control systems.\nBrandan holds a BS in Accounting and Management Information Systems from Miami University in Oxford, Ohio. He also earned a BS in Horticulture from the University of Cincinnati’s College of Design, Art, Architecture and Planning, and a Masters of Business Administration from the University of Cincinnati, Lindner College of Business, with concentrations in Operations Management and Real Estate Finance.",
      "target_audience": [
        "This video course is for developers who would like to use design patterns to solve common problems when designing an application using the Spring Framework."
      ]
    },
    {
      "title": "Python Concurrency Simplified",
      "url": "https://www.udemy.com/course/python-concurrency-simplified/",
      "bio": "Practically understand concurrency in Python to write efficient programs",
      "objectives": [
        "This course is for Python developers who want to learn concurrency techniques to build high-performance applications with Python."
      ],
      "course_content": {
        "Learning Concurrency in Python": [
          "The Course Overview",
          "Threads and Multithreading",
          "Processes and Event-Driven Programming",
          "Concurrent Image Download",
          "Improving Number Crunching with Multiprocessing",
          "Concurrency and I/O Bottlenecks",
          "Understanding Parallelism",
          "Computer Memory Architecture Styles",
          "Threads in Python",
          "Starting a Thread",
          "Handling Threads in Python",
          "How Does the Operating System Handle Threads?",
          "Deadlocks and Race Condition",
          "Shared Resources and Data Races",
          "Conditions and Semaphores",
          "Events and Barriers",
          "Sets and Decorator",
          "Queues",
          "Queue and Deque Objects",
          "Appending, Popping, and Inserting Elements",
          "Defining Your Own Thread-Safe Communication Structures",
          "Testing Strategies",
          "Debugging",
          "Benchmarking",
          "Profiling",
          "Concurrent Futures",
          "Future Objects",
          "Setting Callbacks and Exception Classes",
          "ProcessPoolExecutor",
          "Improving Our Crawler",
          "Working Around the GIL and Daemon Processes",
          "Identifying and Terminating Processes",
          "Multiprocessing Pools",
          "Communication Between Processes",
          "Multiprocessing Manager",
          "Communicating Sequential Processes",
          "Event-Driven Programming",
          "Getting Started with Asyncio",
          "Debugging Asyncio Programs",
          "Twisted",
          "Gevent",
          "Test Your Knowledge"
        ],
        "Concurrent Programming in Python": [
          "The Course Overview",
          "Advanced OSes and Programming Environments",
          "Concurrency Versus Parallelism with Examples",
          "Operating System’s Building Blocks of Parallel Execution",
          "Libraries in Python Used to Achieve Concurrency and Parallelism",
          "Python’s Global Interpreter Lock (GIL)",
          "Overview of Threading Module",
          "Creating Threads",
          "Managing Threads",
          "Synchronization in Python",
          "Using Synchronization Primitives",
          "Producer–Consumer Pattern",
          "Using Python Queue Module",
          "Multithreading in GUI Programming",
          "Limitations Imposed by GIL",
          "Multiprocessing",
          "Similarities Between Thread and Process Management",
          "Difference Between Thread and Process Management",
          "Libraries for Practice",
          "Process Synchronization",
          "Inter-Process Communication",
          "Best Practices and Anti-Patterns",
          "Pool of Workers for Maximizing Usage of the Hardware",
          "When and How to Use a Pool of Workers",
          "Best Practices and Anti-Patterns",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Prior knowledge of Python language is assumed."
      ],
      "description": "Python is a very high level, general purpose language that is utilized heavily in fields such as data science and research, as well as being one of the top choices for general purpose programming for programmers around the world. It features a wide number of powerful, high and low-level libraries and frameworks that complement its delightful syntax and enable Python programmers to create.\nThis course introduces some of the most popular libraries and frameworks and goes in-depth into how you can leverage these libraries for your own high-concurrent, highly-performant Python programs. You will learn the fundamental concepts of concurrency needed to be able to write your own concurrent and parallel software systems in Python. You will also learn the concepts such as debugging and exception handling as well as the libraries and frameworks that allow you to create event-driven and reactive systems.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Learning Concurrency in Python, introduces some of the most popular libraries and frameworks and goes in-depth into how you can leverage these libraries for your own high-concurrent, highly-performant Python programs. You will learn the fundamental concepts of concurrency needed to be able to write your own concurrent and parallel software systems in Python.\nIn the second course, Concurrent Programming in Python, you will skill-up with techniques related to various aspects of concurrent programming in Python, including common thread programming techniques and approaches to parallel processing.Filled with examples, this course will show you all you need to know to start using concurrency in Python. You will learn about the principal approaches to concurrency that Python has to offer, including libraries and tools needed to exploit the performance of your processor. Learn the basic theory and history of parallelism and choose the best approach when it comes to parallel processing.\nBy the end of this course, you will have learned the techniques to write incredibly efficient concurrent systems that follow best practices.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\n●        Elliot Forbes has worked as a full-time software engineer at a leading financial firm for the last two years. He graduated from the University of Strathclyde in Scotland in the spring of 2015 and worked as a freelancer developing web solutions while studying there. He has worked on numerous different technologies such as Golang, Node.js, and plain old Java, and he has spent years working on concurrent enterprise systems.Elliot has even worked at Barclays Investment Bank for a summer internship in London and has maintained a couple of software development websites for the last three years.\nBignumWorks Software LLP is an India-based software consultancy that provides consultancy services in the area of software development and technical training. Our domain expertise includes web, mobile, cloud app development, data science projects, in-house software training services, and up-skilling services.",
      "target_audience": [
        "Increase your awareness of concurrency in Python",
        "Distinguish between parallel programming and concurrent programming",
        "Explore Python's threading module",
        "Familiarize yourself with Python's Global Interpreter Lock (GIL)",
        "Learn the similarities between thread and process management",
        "Practice with open source libraries",
        "Learn process synchronization and inter-process communication",
        "Work with best practices and caveats",
        "Know how to handle the hardest part in a concurrent system: shared resources",
        "Build concurrent systems with Communicating Sequential Processes (CSPs)",
        "Maintain all concurrent systems and master them"
      ]
    },
    {
      "title": "From Beginner to Pro: AdonisJS 5 for Web Development (2023)",
      "url": "https://www.udemy.com/course/from-beginner-to-pro-adonisjs-5-for-web-development-2023/",
      "bio": "Master AdonisJS 5: Build robust web applications from scratch with hands-on projects and expert tips in this course",
      "objectives": [
        "Note: This course exclusively covers AdonisJS 5.0. No updates for AdonisJS 6.0. Course maintenance paused for a year due to breaking changes.",
        "Learn to build scalable web apps with AdonisJS 5, a robust NodeJS framework. Covers route handling and effective HTTP request management using controllers.",
        "Learn AdonisJS's Edge template engine for dynamic web pages & MySQL database management. Also covers ORM's importance in modern web development.",
        "After covering fundamentals, learn by building TodoHut, a practical todo app & Perest App, a semi-clone of a social media platform using AdonisJS's features.",
        "Learn AdonisJS 5 & MySQL to develop sophisticated web apps. Gain skills in ORM, Edge template engine & full-stack web development. Perfect for modern web dev.",
        "Master AdonisJS API development: secure authentication, CRUD operations, and seamless integration with React for a powerful full-stack web experience."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is adonisjs framework?",
          "Course outline",
          "Welcome to the course",
          "How can you get the best out of this course?",
          "What is MVC",
          "Workspace setup",
          "Installation",
          "Creating our first AdonisJS application",
          "Understand folder structure"
        ],
        "Routing": [
          "Routing introduction",
          "Making POST, PUT AND DELETE request",
          "Download postman",
          "HTTP context and route parameters",
          "Validations, inbuilt matchers and query strings",
          "Route groups, prefix route groups"
        ],
        "Controllers": [
          "Introduction to controllers",
          "Create a method to handle requests"
        ],
        "View": [
          "Introduction to edge template engine",
          "Creating our first view",
          "Adding edge extension and formatters for edge template",
          "Passing data to the view and conditionals",
          "Loops for data rendering",
          "Layouts",
          "Partials",
          "Components"
        ],
        "Database": [
          "Introduction to database",
          "Installing xampp",
          "Creating and understanding a migration",
          "Adding fields and running the migrations",
          "SQL Query",
          "Understanding different migration commands",
          "CRUD operation part 1: read operation",
          "CRUD operation part 2: create operation",
          "CRUD operation part 3: update operation",
          "CRUD operation part 4: delete operation",
          "Database seeders",
          "Raw query builder",
          "SQL Injection"
        ],
        "ORM": [
          "What is the ORM? And overview of features of ORM, creating first model",
          "Learn more about active record pattern",
          "Defining columns",
          "Column names",
          "Create operation using user model",
          "Basics of hooks and hashing the password"
        ],
        "Todohut App": [
          "Introduction to the project",
          "Project outcome",
          "Add bootstrap for styling",
          "Using layout",
          "Using partials",
          "GET signup route with view",
          "Add markup of signup page",
          "POST sign up route creation and form validation",
          "Defining custom error messages",
          "Create user business logic",
          "Adding toasts",
          "Making use of toasts",
          "GET login route with view",
          "Add form validation on login post request",
          "Introduction to auth module",
          "Install and configure auth package",
          "Introduction to auth middleware",
          "Apply silent auth middleware",
          "GET Logout route handler",
          "Route optimization",
          "Task overview",
          "Explain entity of whole project",
          "Creating tasks migration with model",
          "Handling relationships",
          "Create tasks resource full route and controller",
          "Create route handler for index route",
          "Create route handler for create route",
          "Create class based validator for handling task store request",
          "Create tasks store route handler",
          "Find all the tasks created by the user",
          "Update task index page",
          "Create show route handler",
          "Add mark up in tasks show view",
          "Creating tasks edit route with view",
          "Edit markup of edit view form",
          "Add update task route with form validation",
          "Add method to update task",
          "Add delete task route handler",
          "Adding auth middleware",
          "Introduction to bouncer",
          "Bouncer package installation and configuration",
          "CSRF protection"
        ],
        "Perest App(Semi clone of Pinterest)": [
          "Introduction to the project",
          "Project outcome",
          "Project setup",
          "GitHub repository link",
          "Creating layout and navbar partial",
          "GET signup route with view",
          "Add markup of signup page",
          "POST sign up route creation and form validation",
          "POST signup UI error fixing",
          "Explaining entity of whole project",
          "Creating user migration with model",
          "Creating profile migration with model",
          "Column names",
          "Define relationships on the models",
          "Transactions",
          "Create user creation model method part-1",
          "Create user creation model method part-2",
          "Session flash messages and usage of back-tics",
          "Add toast messages",
          "GET login route with view",
          "Add form validation on login POST request",
          "Update view based on auth state",
          "GET logout route handler",
          "Social auth introduction",
          "Generating OAuth2.0 keys for google",
          "Add routes for google OAuth",
          "OAuth google callback route part-1",
          "OAuth google callback route part-2",
          "Minor Fixes",
          "Generating OAuth2.0 keys for Github and adding routes",
          "OAuth Github callback route",
          "Adding Facebook OAuth2.0",
          "Testing",
          "Add guest middleware",
          "Profile overview",
          "Create profile resource full route, controller and view",
          "Adding business logic to fetch profile",
          "Adding markup for profile show view",
          "Adding profile edit route handler and view",
          "Updating edit view",
          "Adding form validation",
          "What is the Drive package?",
          "Adding business logic to update profile data part-1",
          "Adding business logic to update profile data part-2",
          "Organizing objects in folders on AWS S3",
          "Spread syntax",
          "Making update request",
          "Minor corrections",
          "Summary till now",
          "Explaining posts, tags and tag_post entities",
          "Add posts migration with model",
          "Add tags migration with model",
          "Add tag_post migration with model",
          "Add resourceful route for posts",
          "Create create route handler with view",
          "Add markup to create post part-1",
          "Add markup to create post part-2",
          "Add markup to create post part-3",
          "Add markup to create post part-4",
          "Add form validation for storing the post",
          "Creating the route and checking form validation",
          "Store post part-1",
          "Store post part-2",
          "Adding masonry layout",
          "Update post index page",
          "Add show page route",
          "Business logic for fetching post details",
          "Business logic for finding related posts",
          "Add markup in show view",
          "Show related posts",
          "Add route for edit",
          "Add markup for edit view part-1",
          "Add markup for edit view part-2",
          "Adding update post class validator",
          "Update route part-1",
          "Update route part-2",
          "Add post delete route",
          "Delete cascade",
          "Add post download route",
          "Add search functionality",
          "Sending form data using GET and POST explanation",
          "Showing unsecured content",
          "Add auth middleware in posts",
          "Adding bouncer",
          "Add profile bouncer",
          "Add post bouncer",
          "Reading urls instead of image buffers",
          "Adding masonry layout support",
          "Updating profile view"
        ],
        "API Development [NEW]": [
          "Introduction to the project",
          "Project outcome",
          "Setting up the project",
          "Getting ready with Postman",
          "How to setup mysql and phpmyadmin on ubuntu",
          "Setting Up API Routes",
          "Implementing a signup class based validator",
          "Creating a route handler for user sign-up",
          "Testing signup route",
          "Implementing a login class based validator",
          "Understanding login flow",
          "Adding business logic of login",
          "Testing authentication",
          "Setting up redis and testing api auth",
          "Creating and testing a route handler for user",
          "Implementing auth middleware",
          "Creating a route handler for user logout and testing",
          "Implementing tasks index route handler",
          "Implementing tasks store route handler",
          "Implementing tasks show route handler",
          "Implementing tasks update route handler",
          "Implementing tasks destroy route handler",
          "What is CORS and why to enable it",
          "Why to update cookie configuration",
          "Testing with react client application"
        ],
        "Course completion": [
          "Course completion"
        ]
      },
      "requirements": [
        "The specific requirements for taking the course \"From Beginner to Pro: AdonisJS 5 for Web Development\" may vary depending on the platform or institution offering it. However, generally speaking, some basic knowledge of JavaScript, NodeJS, and web development concepts would be helpful. Familiarity with database management, specifically MySQL, would also be beneficial. Access to a computer and a reliable internet connection would be required to follow along with the course content and complete any assignments or projects. It is recommended to check the course description or contact the course instructor for more specific requirements.",
        "If you are looking to enhance your knowledge of TypeScript, I highly recommend my latest course titled \"TypeScript Basics: Beginner's Guide - 2023 Edition\" exclusively available on Udemy. In this comprehensive course, I will delve into the fundamental concepts required to kickstart your journey with TypeScript programming. With a focus on providing essential knowledge, this course is designed to equip beginners with the skills needed to confidently navigate the TypeScript language. Don't miss out on this opportunity to enhance your TypeScript expertise with the latest 2023 edition of my course, available only on Udemy."
      ],
      "description": "The first section of the course will cover the fundamental concepts of handling routes in AdonisJS. AdonisJS is a robust Node.js web framework, and understanding how to handle routes is essential to building web applications using this framework.\nThe second section of the course will explore a more effective approach to managing HTTP requests using controllers. This section will build upon the first section, and students will learn how to manage HTTP requests in a more organized and efficient way.\nThe third section of the course will dive into the Edge template engine, which is a built-in feature of AdonisJS. Students will learn how to create and manage templates using this engine, which is a crucial aspect of modern web development.\nThe fourth section of the course will focus on database management, and throughout the course, students will be exclusively working with MySQL databases. This section will also discuss ORM, which stands for Object Relational Mapper, and its significance in modern web development.\nAfter covering the fundamental modules of AdonisJS, the course will embark on two projects. The first project, TodoHut, is a simple yet practical todo application. Students will develop a full-stack web application that covers simple CRUD operations.\nThe second project, Perest App, is a semi-clone web-application of a popular social media platform \"Pinterest\". This project will allow students to explore the full range of features offered by AdonisJS, including authentication, authorization, and more.\nBy the end of the course, students will have gained an in-depth understanding of AdonisJS and be equipped with the skills to develop sophisticated web applications using this framework.",
      "target_audience": [
        "Note: This course exclusively covers AdonisJS 5.0. No updates for AdonisJS 6.0. Course maintenance paused for a year due to breaking changes.",
        "The course \"From Beginner to Pro: AdonisJS 5 for Web Development\" is suitable for anyone interested in learning AdonisJS for web development, regardless of their previous experience in programming or web development. It is designed to take learners from a beginner level to a pro level, covering fundamental concepts as well as practical applications through building real-world projects. It is ideal for beginners who want to gain a comprehensive understanding of AdonisJS and its features, as well as for experienced developers who want to expand their skills in modern web development with AdonisJS."
      ]
    },
    {
      "title": "Hospital Management System Using Django",
      "url": "https://www.udemy.com/course/hospital-management-system-using-django/",
      "bio": "Build and optimize a robust hospital management system using Django. Ideal for developers and healthcare tech enthusiast",
      "objectives": [
        "Django Basics: Master Django’s core features for web development.",
        "Secure Authentication: Implement secure login systems for doctors and patients.",
        "Account Management: Create and manage user accounts with role-based access.",
        "Service Listings: Manage and display health services effectively.",
        "Appointment Scheduling: Build a system for booking and managing appointments.",
        "Payment Integration: Handle payments using Stripe and PayPal.",
        "Dynamic Dashboards: Develop interactive dashboards for users.",
        "Admin Panel: Customize Django admin for multi-level system management.",
        "Email Integrations: We'll learn how to send email using Django; I'll show you how to get API keys, send domains, and much more."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project Setup": [
          "Project Setup",
          "Custom Django Admin",
          "Django Models Creation"
        ],
        "Authentication using Django": [
          "Register, Login and Logout using Django"
        ],
        "Core Functionalities": [
          "Services Listing and Details",
          "Booking Appointments",
          "Environment Variable in Django"
        ],
        "Payment Integrations": [
          "Stripe payment and verify API using Django.",
          "PayPal Payment and Payment Verification API Using Django"
        ],
        "Doctor Section": [
          "Doctor Dashboard",
          "Appointments List and Detail",
          "Cancel, Activate and Complete Appointments",
          "Medical Reports - Create and Update",
          "Lab Tests - Create and Update",
          "Medications Prescription - Create and Update",
          "Payments & Billing Details",
          "Notifications and mark notifications as seen",
          "Doctor Profile Update"
        ],
        "Patient Section": [
          "Patient Dashboard",
          "Patient Appointment Detail",
          "Payment and Notification List",
          "Patient Profile Update"
        ],
        "Email Integration": [
          "Email Integrations In Django"
        ],
        "Course Materials": [
          "Course Materials"
        ]
      },
      "requirements": [
        "Basic Python Skills: Familiarity with Python programming basics.",
        "Intro to Django: Basic understanding of Django concepts is useful.",
        "Development Tools: Access to a computer for installing Django and related tools.",
        "Enthusiasm: Eagerness to learn and apply new web development skills."
      ],
      "description": "Welcome to \"Hospital Management System Using Django,\" a comprehensive course designed to empower you with the skills to build a fully functional and efficient hospital management system.\nLeveraging Django's powerful framework, this course guides you through developing a robust application that streamlines healthcare operations, enhances user experiences, and integrates essential features for a modern healthcare environment.\n\n\nWhat We'll Be Building:\nIn this course, you will create a dynamic hospital management system with features that cater to both healthcare providers and patients. Your project will include:\nAuthentication Systems: Implement secure authentication for doctors and patients, ensuring that only authorized users can access their respective functionalities.\nUser Account Management: Create and manage user accounts with different roles and permissions.\nHealth Services Management: List, manage, and update available health services, making it easy for users to find and book the services they need.\nAppointment Scheduling: Develop a user-friendly interface for booking and scheduling appointments, with automated reminders and updates.\nBilling and Payments: Integrate payment gateways like Stripe and PayPal to handle checkout and billing processes, including payment verification.\nDynamic Dashboards: Build customized dashboards for both doctors and patients, providing access to relevant data and functionalities.\nEmail Integrations: We'll learn how to send email using Django; I'll show you how to get API keys, send domains, and much more.\nCustom Admin Panel: Develop a tailored Django admin panel for managing multi-level administrative tasks and overseeing system operations.\n\n\nGoal and Course Objectives:\nThe primary goal of this course is to equip you with practical experience in building a sophisticated hospital management system using Django. By the end of the course, you will:\nUnderstand the core principles of Django and how to apply them in a real-world healthcare context.\nGain hands-on experience with implementing authentication and user management systems.\nLearn how to handle appointments, billing, and payments efficiently.\nDevelop the ability to create dynamic and user-friendly interfaces for different user roles.\nMaster the integration of payment gateways and verification APIs for secure transactions.\nBuild a comprehensive admin panel for effective system management and oversight.\n\n\nWho This Course Is For:\nThis course is ideal for:\nAspiring Developers: Those looking to expand their Django expertise and work on complex, real-world projects.\nHealthcare IT Enthusiasts: Individuals interested in leveraging technology to improve healthcare management systems.\nTech Professionals: Developers seeking to add hospital management system experience to their portfolios.\nStudents and Learners: Those pursuing education in web development, software engineering, or healthcare technology.\n\n\nRequirements:\nTo get the most out of this course, you should have:\nBasic Knowledge of Python: Familiarity with Python programming will help you grasp Django concepts more easily.\nIntroduction to Django: A basic understanding of Django fundamentals is recommended, although not mandatory.\nDevelopment Tools: A computer with internet access and the ability to install Django and related tools.\nCuriosity and Enthusiasm: A willingness to learn and tackle real-world development challenges.\n\n\nJoin us in this exciting course to build a state-of-the-art hospital management system that integrates cutting-edge features and practical solutions for modern healthcare needs.",
      "target_audience": [
        "Aspiring Developers: Those wanting to enhance their Django and web development skills.",
        "Healthcare IT Enthusiasts: People interested in improving healthcare systems with technology.",
        "Tech Professionals: Developers looking to specialize in hospital management systems.",
        "Computer Science Students: Students seeking practical experience in web development.",
        "Software Engineers: Professionals wanting to build and integrate complex systems.",
        "Freelancers: Those offering customized solutions to healthcare clients.",
        "Project Managers: Individuals managing tech projects in the healthcare sector.",
        "Tech Savvy Individuals: Anyone curious about how tech can enhance healthcare management."
      ]
    },
    {
      "title": "Create a Twitter Clone with PHP, MYSQL and Js FROM SCRATCH",
      "url": "https://www.udemy.com/course/create-a-twitter-clone-with-php-mysql-and-js-from-scratch/",
      "bio": "Learn PHP, MYSQL and more by making the ultimate Twitter clone website completely from scratch!",
      "objectives": [
        "How to create a social network just like Twitter",
        "Learn good quality of object oriented programming (OOP)",
        "Learn to rewrite clean URLs like Twitter",
        "Learn to setup SMTP ('Simple Mail Transfer Protocol') account to send Emails",
        "Learn to generate verification link",
        "Learn to create secure password hash",
        "Know how to easily use PDO with MySQL databases",
        "Learn to create MySQL Database Relationships",
        "HTML",
        "CSS"
      ],
      "course_content": {
        "Course Intro:Info & Setup": [
          "Course promo video (from course landing page)",
          "Download and install XAMPP",
          "Create necessary folder"
        ],
        "Creating Twitter main page": [
          "Creating the structure of the main page",
          "Creating the Left Section",
          "Creating the Right Section",
          "Creating the Footer Section"
        ],
        "Creating Register / Login page": [
          "Creating the structure of the signUp Page",
          "Creating the signup nav",
          "Completing the signup page",
          "Creating the login page"
        ],
        "Creating Database Class": [
          "Creating our Database",
          "Setting timezone",
          "Testing connection to mysql database",
          "Creating the config file",
          "Creating Database Connection",
          "Creating a method to make Database Class Accessible",
          "Creating a Proxy Way to Native Pdo Method"
        ],
        "ShowPassword Functionalities": [
          "Creating showPassword functionalities"
        ],
        "Form Submission": [
          "Client Side Validation",
          "Testing for Form Submission",
          "Introduction to sanitizing form data",
          "Form Sanitizer Class",
          "Creating Account Class",
          "Starting our validation function",
          "Outputting error messages",
          "Validating last name",
          "Creating User table",
          "Generating Unique Username",
          "Creating the length method",
          "Validating the email address",
          "Validating the password",
          "What to do when data is valid",
          "Remembering last entered values",
          "Password hashing",
          "Giving the User a Random Profile Picture",
          "Inserting the user's data into the database table",
          "Setting the session variable"
        ],
        "Email Validation": [
          "Setting up our verification page",
          "Creating our User Class & User Data method",
          "Testing for PHPMailer",
          "Setting up PHPMailer",
          "Creating a method to generate verification link",
          "Creating a method to send Verification email",
          "Creating verification table",
          "Creating the insert method",
          "Inserting verification code into our verification table",
          "Creating verifyCode method",
          "Creating verify account functionalities",
          "Completing verify account",
          "Creating the token table",
          "creating token functionalities",
          "Redirecting Unverified Users to verification page",
          "creating cookie functionalities to make user stay logIn"
        ],
        "Login": [
          "Completing the login functionalities"
        ],
        "Creating Twitter News Feed Page": [
          "Creating the structure of the news feed page",
          "Creating news feed left section",
          "Styling the left section",
          "Where are you",
          "Change Icon base on page the user is on",
          "Creating the logout layout",
          "Styling the logout modal",
          "Creating a functionalities to display logout modal",
          "Creating the delete method",
          "How to debug SQL query in PHP",
          "Creating functionalities to logout our user",
          "Refactoring our code",
          "Creating newsFeed main page",
          "Styling newsFeed main page",
          "Creating tweets table",
          "Creating functionalities to enable and disabled button",
          "Creating a method to post tweets",
          "CSS SOLVE",
          "Creating the postContainer",
          "Styling postContainer",
          "Complete styling post",
          "Creating Tweet Class",
          "Displaying our Tweet",
          "Creating Infinite Scrolling"
        ],
        "Hashtag & Mention Functionalities": [
          "Creating Hashtag UI",
          "Creating Mention UI",
          "Creating functionalities to hide Mention",
          "Creating functionalities to display hashtag in tweet form",
          "Creating the trends table",
          "Displaying hashtag from database",
          "Creating a method to display mention user",
          "Creating a method to insert hashtag",
          "Making tweet link clickable"
        ]
      },
      "requirements": [
        "Need to have a basic knowledge on HTML, CSS, PHP and JAVASCRIPT"
      ],
      "description": "Do you want to be pro web developer or want to create social network engine just like twitter?\nDo you want level up your coding skill in php, mysql and javascript?\nIf so, you’re in the right place! This course will guide you step by step in creating your own Twitter clone COMPLETELY from scratch.\nWe’re talking the kind of website that will amaze anybody that sees it. The kind of website that will get you hired in no time!\nOkay so what’s the course about?\nI will personally guide you, step by step, in creating your own social network site just like Twitter complete with:\nTweets\nLikes, comments and retweets\nProfile pages\nFollowing and followers support\nNotification System\nClean Friendly URLs\nProfile pictures\nCover photos\nHashtags & Mention Users\nand much more!\nWhether you are a beginner* or an experienced programmer, this course will be massively beneficial to you.\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials: HTML, CSS, PHP, JQuery, JavaScript and MySQL.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSupport:\nBy enrolling in this course, you will have the COMPLETE support from Christopher Glikpo. I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far.\nProject portfolio:\nThe site you create in this course will be the highlight of your project portfolio! Any potential employer who see's this project on your resume will want to hear all about it. The reason? They know that a project like this means you're familiar with the wide range of technical skills they need their employees to know.\n\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?\n\n\n* Although this course is suitable for beginners, it is not an introduction to development course. I won't go into much detail when explaining the basic programming concepts but I'm here to help if you want more of an explanation - just let me know!",
      "target_audience": [
        "Beginner or Intermediate level Web developer who wants to level up his skill on full stack web development and the enthusiastic who wants to create a social site engine just like twitter"
      ]
    },
    {
      "title": "Django x Vue.js: Learn how to integrate Django with Vue.js",
      "url": "https://www.udemy.com/course/django-x-vuejs/",
      "bio": "Learn to create a foundation for robust projects using Django and Vue.js",
      "objectives": [
        "How to Develop Django & VueJS simultaneously",
        "Limit third-party package usage (no Python-based JavaScript compilers here)",
        "Leverage Django Templates with VueJS",
        "Implement Cross Site Request Forgery (csrf) safely",
        "Dynamically load file paths with Pathlib",
        "Use custom Django Template Context Processors",
        "CRUD from VueJS to Django without additional API frameworks (such as Django Rest Framework)",
        "Use Vite to build and compile our VueJS application"
      ],
      "course_content": {},
      "requirements": [
        "Basic Django Experience (such as my Try Django courses)",
        "Python fundamentals (writing classes, functions, string formatting)",
        "JavaScript fundamentals (writing classes, functions, string formatting)"
      ],
      "description": "Django is one of the most popular backend web application frameworks that exists and it's written in Python. Vue.js is one of the most popular JavaScript tools for adding dynamic features to a web application.\n\n\nDjango doesn't need Vue to run. Vue doesn't need Django to run. The combination gives developers an incredibly flexible and dynamic paradigm while also leveraging a number of the built-in benefits that each tool has.\n\n\nDjango is excellent because it's open source, has built-in user management, built-in database integrations, and built-in security measures. There's features make it not only the best Python-based web framework but the best framework across all programming languages.  I love tools like Flask, FastAPI, Express.js, Adonis.js, but none of them have the ease of implementation and the built-in features like Django.\n\n\nVue.js has quickly become my go-to for JavaScript frameworks. This is for two reasons: (1) The <template> / <script> syntax is very intuitive and reminds me a lot of a 100x better version of jQuery. (2) You can make incredibly small components really quickly and simply.\n\n\nThis course is not meant to be comprehensive in using Vue or Django but rather show you the best and most modern approach to integrating the two tools. Here's exactly what we're going to cover:\n\n\nDevelop Django & Vue.js simultaneously\nLimit third-party package usage (no Python-based JavaScript compilers here)\nLeverage Django Templates with Vue.js\nImplement Cross Site Request Forgery (csrf) safely\nDynamically load file paths with Pathlib\nUse custom Django Template Context Processors\nCRUD from Vue.js to Django without additional API frameworks (such as Django Rest Framework)\nUse Vite to build and compile our Vue.js application\nAnd more\nThe goal of this course is to build a practical and forward-thinking approach to integrate nearly any JavaScript library with your Django project. While you can take Vue.js and Django many places, having this type of integration will help you get there.\n\n\nRecommended Experience\nOne of my Try Django courses or my Your First Django project course or similar\nPython fundamentals (classes, functions, string formatting, etc)\nJavaScript fundamentals (classes, functions, string formatting, etc)\nHTML / CSS Basics (divs, inputs, styles, etc)",
      "target_audience": [
        "Django Developers looking to use VueJS in their projects",
        "Django Developers looking to upgrade add dynamic capabilities to their projects",
        "Django Developers tired of Python-based third-party JavaScript compilers"
      ]
    },
    {
      "title": "Restful API With Spring Boot And React (Redux, Router,Hooks)",
      "url": "https://www.udemy.com/course/restfull-api-web-services-with-spring-boot-and-react-js/",
      "bio": "Spring Boot, React JS, MySQL, Restful API Web Services, Lombok, Gradle, Class vs Functional Component, Spring Security",
      "objectives": [
        "Full Stack Development With Spring Boot And React JS",
        "Restfull Api Services With Get, Post, Put, Delete Mapping...",
        "Spring Boot, Mysql, ReactJS",
        "Redux vs Observable",
        "Class Component vs Functional Component"
      ],
      "course_content": {},
      "requirements": [
        "Basic Java and Javascript Knowledge"
      ],
      "description": "We will create a new project in this course.\nAnd we will implement this project with using Spring Boot, React, and MYSQL.\n\n\nIn our project, we will implement CRUD operations. And these CRUD operations will be requested from React.\nThen This requests will be handled from Spring Boot.\n\n\nOur project goes on User operations.\nOur main operations will be user login, register, profile and user list.\nAlso, we will go on with role based application.\nAnd this all things will be provided with secure way in both React and Spring Boot side.\n\n\nWe will have two main components to implement our project.\nThese are server side and client side.\n\n\nIn Server Side:\n\n\nSpring Boot will be main thing.\n\n\nModel View Controller structure will be implemented with using Spring Boot.\n\n\nOur MVC structure will work like that:\n\n\nFirst of all, the entity classes will be created under model package.\n\n\nLater, if model class is permanent, we will create a repository for it.\n\n\nThen we will call repository from services.\n\n\nFinally, we will call services from from controllers.\n\n\nIn Spring Boot, Data will be presented to client as API call so Spring Rest Controller will be used to handle it.\n\n\nWe will use MySQL as Database.\n\n\nWe will also use Object Relational Mapping with Java Persistence API and Hibernate.\n\n\nYou know, We can map our database tables to objects with hibernate.\n\n\nWe will use JPA Repository and Crud Repository in Spring Boot.\nSo these repository templates will handle common database operations like save, update, find, delete.\n\n\nWith Spring Boot, we will also use Lombok library to clear code.\nYou know that we don't want to implement getter, setter, equals and hash code. So we can escape it using Lombok @Data or @Value annotation.\n\n\nWe will use Gradle To handle all dependencies on server side.\n\n\nThat's all about Server side.\n\n\nLet's talk about Client Side.\n\n\nReact will be the main client controller.\n\n\nReact works on nodeJS.\n\n\nIn react, we will consume server side data with api calls.\nTo do it, we will create service classes.\nIn service:  We can connect to server side and we can send requests or we can get responses from server side with http.\nThen, we will call service data from components and we will render them.\nOur User interface panel is contructed from admin operations and user operations.\nIn user operations:,\nFirst of all, we will display test product data on home page. And these products can be purchased by users.\nSecondly, we will implement login, register and profile pages for users.\nIn admin operations:,\nWe will implement user CRUD operations.\nAnd of course, we will implement authentication and authorization for admin operations.",
      "target_audience": [
        "All developers curious about restfull services"
      ]
    },
    {
      "title": "Spring Boot Quartz Scheduler Tutorial",
      "url": "https://www.udemy.com/course/spring-boot-quartz-scheduler-tutorial/",
      "bio": "Learn How to Build an Email Scheduling app | Spring Boot Quartz Scheduler Example",
      "objectives": [
        "How to Build an Email Scheduling app",
        "Spring Boot Quartz Scheduler Example",
        "Configuring Quartz, MySQL and Mail Properties",
        "Testing application using Postman"
      ],
      "course_content": {
        "Introduction": [
          "Getting started with Quartz and Spring Boot",
          "Configuring Quartz, MySQL and Mail Properties",
          "Connecting MySQL Database and Creating Quartz Tables",
          "Implementing EmailRequest and EmailResponse",
          "Implementing JobDetail and Trigger",
          "Implementing Email Scheduler Controller",
          "Implementing Email Job",
          "Implementing sendMail() functionality",
          "Testing application using Postman (Final Part)"
        ]
      },
      "requirements": [
        "Java",
        "Basic Knowledge of Spring Framework"
      ],
      "description": "In this video course, we'll learn how to use Quartz Scheduler to schedule jobs in Spring Boot by creating a simple Email Scheduling application. Quartz is a feature-rich, open source job scheduling library that can be integrated into virtually any Java application, from the smallest stand-alone application to the most complex e-commerce system. Quartz can be used to create simple or complex schedules for hundreds of jobs to be executed.\n\n\nWhen it comes to building an enterprise-based application, Spring 5 is a popular web framework for back-end development among Java developers.\nIt is incredibly large because it is made up of several modules and projects.\n\n\nThe Spring Framework and Spring Boot enable developers to construct corporate Java applications that are high-performing, reusable, easily testable, and loosely coupled. Spring Boot is a tool for getting started very quickly with Spring applications. Spring Boot Focuses attention at a single point and Control a large collection of spring-* projects. Spring Boot allows a user to create stand-alone, production-grade Spring Applications and Exposes a lot of useful features by default.\n\n\nIt may be used to create any Java program.\n\n\nSpring framework knowledge is in high demand in the enterprise market, and Spring framework developers are well compensated.\nThe fact that you have Spring Framework on your CV will set you apart from other Java developers.",
      "target_audience": [
        "Student with java background",
        "Spring Developers who want to master Spring Boot Fundamentals",
        "New backend developers"
      ]
    },
    {
      "title": "URL Shortener: TypeScript, PostgreSQL, Koa.Js, REST and MVC",
      "url": "https://www.udemy.com/course/url-shortener-typescript-koa-postgresql/",
      "bio": "Master Modern Web Development by Building a Robust URL Shortening Service with Cutting-Edge Technologies",
      "objectives": [
        "Understand URL shortener services and their benefits",
        "Get familiar with key technologies: Knex, TypeScript, and Koa, JWT, Hashing",
        "Set up the development environment and configure project tools",
        "Establish a database connection and configure Knex instance",
        "Create and manage database migrations",
        "Implement a services layer in your project",
        "Validate objects and handle exceptions with custom libraries",
        "Understand HTTP status codes and operational vs non-operational errors",
        "Create an authentication service",
        "Hash passwords and store them securly",
        "Learn about JWT tokens and implement token issuance and validation",
        "Set up Koa server, middlewares, and routers for API handling",
        "Protect your Koa router with authentication middlewares",
        "Test API endpoints with Postman"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment Setup": [
          "Environment Setup Part 1",
          "Environment Setup Part 2"
        ],
        "Database and Migrations (Model Layer)": [
          "Database Configuration",
          "Environment Variables",
          "Migrations Overview",
          "Users Migration",
          "URLs and Visits Migrations",
          "Testing Knex",
          "TypeScript Models"
        ],
        "Building the Application Logic (Controller Layer)": [
          "URL Service Part 1",
          "URL Service Part 2",
          "Validation Part 1",
          "Validation Part 2",
          "Validation Part 3",
          "Exceptions Throwing",
          "Visits Service"
        ],
        "User Authentication and Authorization": [
          "User Registration",
          "Password Hashing",
          "User Login",
          "JWT (JSON Web Tokens)"
        ],
        "Building the API with Koa (View Layer)": [
          "Koa Introduction",
          "Koa Router",
          "Authentication Router",
          "Authentication Middleware",
          "URLs Router",
          "Visits and Redirect",
          "Koa V.S Express"
        ],
        "Course Wrap-up": [
          "Finale"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts and JavaScript language.",
        "Familiarity with Nodejs and npm (Node Package Manager) for managing packages.",
        "Some experience with databases, particularly relational databases, and SQL.",
        "A basic understanding of RESTful API concepts and JSON data format.",
        "An understanding of MVC (Model-View-Controller) design pattern is helpful but not required."
      ],
      "description": "Dive into modern web development as you build a feature-rich URL Shortening Service from the ground up. This comprehensive course is designed to provide you with a thorough understanding of TypeScript, PostgreSQL, Koa.js , REST, Knex.Js, and the MVC design pattern, as well as practical experience in applying these technologies and concepts to a real-world project.\nIn this course, you will start by setting up your development environment and configuring the required tools for an optimal workflow. You will then dive into database configuration and management using PostgreSQL, learning how to create and execute migrations to set up your database schema. The course also covers the use of TypeScript to create efficient and scalable models that interact with the database, as well as the implementation of services to handle URL-related operations and other application logic.\nAs you progress through the course, you'll explore user authentication and authorization, covering topics such as user registration, password hashing, and JWT-based authentication for secure access to protected resources. You will also learn how to develop a RESTful API using the Koa web framework and Koa Router, creating routes and middleware for various application functionalities.\nThroughout the course, you will be guided by hands-on examples and practical exercises that will reinforce your understanding of the topics covered. By the end of this course, you'll have developed a solid foundation in modern web development technologies, enabling you to create efficient and robust applications using TypeScript, PostgreSQL, Koa, and the MVC design pattern. With a completed URL Shortening Service project to showcase, you'll be well-prepared to tackle future web development challenges with confidence and expertise",
      "target_audience": [
        "Aspiring web developers who want to learn about building RESTful APIs using modern technologies and best practices.",
        "JavaScript developers interested in expanding their skill set to include TypeScript, Koa, and Knex.",
        "Developers who want to build scalable and efficient URL shortener services or similar applications.",
        "Individuals interested in learning about MVC design patterns and how to apply them in real-world projects.",
        "Developers looking to deepen their understanding of authentication, JWT tokens, and secure API implementation.",
        "Web development enthusiasts who want to enhance their knowledge of database management, migrations, and object validation.",
        "Professionals aiming to build a portfolio project demonstrating their proficiency in full-stack web development."
      ]
    },
    {
      "title": "React JS Best Practices - Beginner To Advanced",
      "url": "https://www.udemy.com/course/react-best-practices/",
      "bio": "Improve your skills in React and Typescript with concise and to the point lessons.",
      "objectives": [
        "Prevent wasted renders.",
        "Understand the main difference and use cases for hooks, such as useEffect and useLayoutEffect.",
        "How to avoid mistakes most of React developers make, like listening for ref changes in useEffect.",
        "Learn advanced concepts, like Error Boundaries and async routes."
      ],
      "course_content": {
        "Introduction": [
          "Good to know"
        ],
        "Common Mistakes to Avoid": [
          "useState is Async",
          "Default state",
          "Unnecessary useEffect",
          "Mutating state objects",
          "Prop drilling",
          "Provider wrapping hell",
          "Rushing into React.memo",
          "Syncing states via useEffect",
          "Conditional rendering",
          "Another unnecessary useEffect"
        ],
        "Common Best Practices": [
          "Introducing impossible state",
          "Encapsulating components",
          "Optimizing another wasted re-render",
          "Introducing impossible state #2",
          "a ref tip",
          "Grouping states",
          "State reset",
          "Redundant state",
          "Caching",
          "Conditional rendering",
          "Improving conditional rendering",
          "Currying handler",
          "Enums",
          "Factory pattern in React",
          "Clean if statements",
          "Normalizing states",
          "a Form tip",
          "React Portals",
          "Forwarding Refs",
          "Error Boundaries",
          "Keys Explained",
          "Capture Event Listeners",
          "Optimized Context API"
        ],
        "React Hooks Tips": [
          "Fetching inside useEffect",
          "Race conditions in useEffect",
          "Another wasted re-render",
          "Creating custom hooks",
          "Making useCallback act like useRef",
          "useEffect and infinite loops",
          "Using useCallback properly",
          "a Useful custom hook",
          "Increasing readability with custom hooks",
          "Labeled functions with useEffect",
          "Separating business logic from UI",
          "a useEffect mistake",
          "Unnecessary useEffect",
          "Centralized state updates",
          "useReducer pattern",
          "useLayoutEffect",
          "useId",
          "useImperativeHandle",
          "useDeferredValue",
          "useTransition",
          "Async React Router"
        ],
        "Typescript Tips": [
          "Partial",
          "Exhaustiveness checking",
          "keyof",
          "Record",
          "Conditionals",
          "Satisfies",
          "let vs const",
          "Mapping",
          "Renaming Keys",
          "Unions vs Intersections",
          "Intersecting with string literals",
          "typeof",
          "Generics",
          "Generics cheat sheet",
          "a Case-study",
          "any vs unknown",
          "Omit",
          "Nullish operator",
          "Pick",
          "ReturnType",
          "Index Access types",
          "Mapped union types",
          "Required",
          "Discriminated Unions",
          "as const",
          "tsconfig settings",
          "Another tsconfig tip",
          "NonNullable"
        ],
        "Some Tips on React with Typescript": [
          "Readonly props",
          "Children.toArray",
          "usePrevious",
          "Preloading Images",
          "Render Props",
          "Typing Props",
          "Types vs interfaces",
          "Function overloads",
          "Higher Order components Part 1",
          "Higher Order components Part 2",
          "Render Props",
          "Custom Hooks",
          "Limiting Prop Composition",
          "Requiring prop Composition",
          "Concise typings",
          "PropsWithChildren",
          "ReactNode"
        ],
        "Styling Tips": [
          "Calculating classnames",
          "Explicit props vs classnames",
          "Extensible components"
        ],
        "Scalable Project Structure": [
          "General Architecture",
          "Route Components",
          "Encapsulating Components and Logics"
        ]
      },
      "requirements": [
        "Basic knowledge in React.",
        "Basic knowledge in Typescript."
      ],
      "description": "Hi, welcome to another course from Codelicks Academy!\nAs the title of the course suggests, this course is all about React best practices for anyone who want to write React components the React way and also tech interview candidates who have little time to review the most common React topics.\nIt consists of a series of independent lectures. In each lecture, I demonstrate a common best practice that will help you write clean, maintainable, and performant React components.\nThis course is beginner friendly. If you have finished a course or two about React, have at least +1 year of experience developing React projects, and want to quickly learn about common mistakes and best practices in React, you may find this course useful.\nAdditionally, if you are preparing for a technical interview that involves React concepts, you will find this course a valuable resource for reviewing the most common tips and tricks in React in a very short time.\nThis course is not about building a large project from scratch to deployment. Instead, it is meant to be a quick review of the most common best practices in React at a beginner level.\nIt starts immediately with some common mistakes that React developers often make and solutions for avoiding them.\nThen we discuss numerous best practices, each demonstrated with simple yet informative code examples.\nWe also cover many tips and tricks about hooks.\nThe final section discusses a scalable project structure that can be used for production-ready projects.\nWe even touch on some advanced Typescript features and Typescript in React by developing some cool components in Typescript.\nYou can take a look at the course outline and see if the course fits you. If it does, then let's go!",
      "target_audience": [
        "Beginner to intermediate developers looking to level-up their react skills.",
        "Technical interviews candidates that are preparing for tech interviews."
      ]
    },
    {
      "title": "Animating with the JavaScript Web Animations API",
      "url": "https://www.udemy.com/course/animating-with-the-javascript-web-animations-api/",
      "bio": "Give your web animations super-powers by with the JavaScript Web Animations API",
      "objectives": [
        "Animating with JavaScript using the Web Animations API",
        "How to convert CSS animations to JavaScript",
        "How to create animation based interaction with JavaScript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What even is an API?",
          "Why not just use CSS?",
          "The Project we will be building",
          "A Simple Web Animation Example",
          "Project Refresh",
          "Basic Setup",
          "Creating the Stage and Controls",
          "Web Animation theory: Keyframes",
          "Timing Options",
          "The same animation made with CSS and JavaScript",
          "Adding Animations together",
          "Separating Keyframes and Timings",
          "Animation File Overview",
          "Writing the Animations",
          "Sequencing Animations",
          "Callbacks and Promises basic explainer",
          "Pausing and Restarting Animations",
          "Refactoring our code",
          "No More Matrix",
          "New Animations mid-transform",
          "Committing Styles into the DOM",
          "Conclusion"
        ]
      },
      "requirements": [
        "You should understand HTML and CSS and have some familiarity with JavaScript",
        "A text editor like Sublime Text or VSCode and a web browser"
      ],
      "description": "This course teaches you how to animate on the Web using the JavaScript Web Animations API W3C standard.\nYou'll learn how to transfer what you already know how to do in CSS, into JavaScript and then add extra capabilities like pausing and playing animations, starting one animation half way through another. Combining different animations together and synchronising a number of animations. All things you just can't do presently with CSS alone.\nWe will start by re-making some basic CSS animations with the JavaScript Web Animations API, then once we get through the fundamentals, we will start making our project together — a interactive set of sequenced animations.\n\nBy the end of the course you should have a solid understanding of how to animate on the Web with the JavaScript Web Animations API.\n\n\nWhat we will build\nWe will be building, from scratch, a multi-scene piece of interaction with just HTML, CSS and JavaScript and no external libraries. Instead of CSS we will use the JavaScript Web Animations API to handle our animations and learn about all the extra capabilities it provides over CSS alone.\nAlong the way, we will also look at how to setup a very simple local server that will live reload changes to our code as we work.\nThe code is free to download on GitHub and split into folders for each video; each one providing the code as it's left at the end of each video.\nWhat you need\nAll you need to get started with this class is a text editor like Sublime Text or VS Code, a modern web browser and a tolerance for mediocre jokes.",
      "target_audience": [
        "Front-end Developers looking to create animations with JavaScript",
        "JavaScript developers looking to animate elements"
      ]
    },
    {
      "title": "Complete jQuery Masterclass: From Beginner to Expert",
      "url": "https://www.udemy.com/course/complete-jquery-masterclass-from-beginner-to-expert/",
      "bio": "Build Professional, Responsive, and Dynamic Websites Using jQuery",
      "objectives": [
        "Understand the purpose of jQuery and its advantages in simplifying JavaScript for web development.",
        "Learn how to include jQuery in web projects, set it up using a CDN, and write basic jQuery syntax.",
        "Master event handling with jQuery, including mouse, keyboard, form, and window events to create interactive user experiences.",
        "Learn to retrieve and modify content using text(), html(), val(), and attr() methods for dynamic content management.",
        "Manipulate and control CSS properties dynamically by adding, removing, or toggling classes and modifying inline styles.",
        "Utilize on() and off() methods to manage event listeners efficiently and improve interactivity on your web pages.",
        "Master DOM manipulation techniques such as appending, prepending, removing, and replacing elements for dynamic content control.",
        "Understand how to measure and modify the size and position of elements using width, height, and offset methods.",
        "Learn how to create animations and effects like showing, hiding, fading, and sliding elements to enhance user engagement.",
        "Explore DOM traversal methods like finding ancestors, descendants, and siblings to efficiently manipulate specific elements.",
        "Gain insight into event object properties such as pageX, target, and methods like preventDefault() for advanced event handling.",
        "Discover how to extend jQuery functionality using plugins to create more advanced and customized web interactions."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Section-1 Quiz"
        ],
        "Getting Started": [
          "Setup jQuery",
          "Setup jQuery with CDN",
          "Basic Syntax",
          "Selectors",
          "Section-2 Quiz"
        ],
        "Events": [
          "Mouse Event",
          "Keyboard Event",
          "Form Event",
          "Window Event",
          "Section-3 Quiz"
        ],
        "Get & Set Methods": [
          "Get Methods",
          "Set Methods",
          "Section-4 Quiz"
        ],
        "CSS Manipulation": [
          "Add Remove & Toggle Class",
          "CSS Method",
          "hasClass Method",
          "Section-5 Quiz"
        ],
        "Event Handling": [
          "On Method",
          "Off Method",
          "Section-6 Quiz"
        ],
        "DOM Manipulation": [
          "Append & Prepend",
          "After & Before",
          "Empty & Remove",
          "Appendto & PrependTo",
          "Clone",
          "ReplaceWith & ReplaceAll",
          "Wrap & Unwrap",
          "WrapAll & Innerwrap",
          "Section-7 Quiz"
        ],
        "Dimension & Position": [
          "Width & Height Methods",
          "Position & Offset Methods",
          "ScrollTop & ScrollLeft Methods",
          "Section-8 Quiz"
        ],
        "Effects": [
          "Show Hide & Toggle",
          "Fading Methods",
          "Sliding Methods",
          "Animate Method",
          "Stop Method",
          "Method Chaining",
          "Section-9 Quiz"
        ],
        "Traversing the DOM": [
          "Ancestors Methods",
          "Descendant Methods",
          "Sibling Methods",
          "Filter Methods",
          "Has & Is Methods",
          "Each Method",
          "Section-10 Quiz"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CSS, and JavaScript",
        "No prior experience with jQuery is required"
      ],
      "description": "ake your web development skills to the next level with Complete jQuery Masterclass: From Beginner to Expert. Whether you're new to jQuery or want to enhance your expertise, this course covers everything you need to build professional, responsive, and dynamic websites.\nStarting from the basics, you’ll learn how to include jQuery in your projects, use selectors, and implement essential syntax. Dive into event handling, DOM manipulation, CSS manipulation, and advanced features to create interactive and visually appealing web experiences. You’ll explore powerful effects, animations, and methods to optimize performance and improve user interaction.\n\nWhat you will learn?\nUnderstand the purpose of jQuery and its advantages in simplifying JavaScript for web development.\nLearn how to include jQuery in web projects, set it up using a CDN, and write basic jQuery syntax.\nMaster event handling with jQuery, including mouse, keyboard, form, and window events to create interactive user experiences.\nLearn to retrieve and modify content using text(), html(), val(), and attr() methods for dynamic content management.\nManipulate and control CSS properties dynamically by adding, removing, or toggling classes and modifying inline styles.\nUtilize on() and off() methods to manage event listeners efficiently and improve interactivity on your web pages.\nMaster DOM manipulation techniques such as appending, prepending, removing, and replacing elements for dynamic content control.\nUnderstand how to measure and modify the size and position of elements using width, height, and offset methods.\nLearn how to create animations and effects like showing, hiding, fading, and sliding elements to enhance user engagement.\nExplore DOM traversal methods like finding ancestors, descendants, and siblings to efficiently manipulate specific elements.\nGain insight into event object properties such as pageX, target, and methods like preventDefault() for advanced event handling.\nDiscover how to extend jQuery functionality using plugins to create more advanced and customized web interactions.\n\n\nThroughout the course, you'll work on real-world projects that demonstrate practical applications of jQuery, helping you develop the skills needed to confidently apply what you’ve learned in professional environments.\nBy the end, you’ll be well-equipped to implement jQuery in any web project, delivering dynamic and engaging websites.",
      "target_audience": [
        "Aspiring Web Developers looking to build dynamic, interactive websites.",
        "Front-End Developers wanting to master jQuery for efficient DOM manipulation and event handling.",
        "Students and Beginners with basic HTML, CSS, and JavaScript knowledge.",
        "Freelancers and Web Designers aiming to create more responsive, interactive websites."
      ]
    },
    {
      "title": "React Essentials with Typescript: A Practical Guide",
      "url": "https://www.udemy.com/course/react-admin/",
      "bio": "React Typescript, React Hooks, Redux, React Animations, Upload Images, Export CSV files",
      "objectives": [
        "Use React with Typescript",
        "Redux",
        "Docker",
        "c3 charts",
        "Upload Images",
        "Export CSV files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "React": [
          "Installation",
          "Docker",
          "Template",
          "Components",
          "Router",
          "Wrapper",
          "Register",
          "Http Requests",
          "State",
          "useState",
          "Login",
          "useEffect",
          "Axios Defaults",
          "Logout",
          "Models",
          "NavLink",
          "Users",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "useRef",
          "Orders",
          "Animations",
          "Export CSV",
          "Chart",
          "Profile",
          "Redux",
          "Using Redux"
        ],
        "React Class Components - LEGACY": [
          "Installation",
          "Docker",
          "Template",
          "Components",
          "Router",
          "Child Props",
          "Register Form",
          "Async Await Calls",
          "Redirecting",
          "Login",
          "Logout",
          "Users",
          "Role",
          "Link and NavLink",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Prefilling User Data",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Deleter Component",
          "Creating Products",
          "Uploading Images",
          "Image Component",
          "Updating Products",
          "Orders",
          "Order Items",
          "Export CSV",
          "Chart",
          "Profile",
          "Updating Profile",
          "Redux",
          "Connect Redux with Components",
          "Typescript Getters",
          "Permissions",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge"
      ],
      "description": "Hello and welcome to this course, in this course you will learn how to create an Admin App using React with Typescript.\nIn this tutorial you will learn:\nCreate a React project with Typescript\nUse Docker\nUse React Hooks\nUse Redux\nCreate public and private routes\nReact Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner React Developers"
      ]
    },
    {
      "title": "Learn Full Stack Web Development with PHP MySQL in 10 Days",
      "url": "https://www.udemy.com/course/fastest-full-stack-web-development-course-beginners/",
      "bio": "PHP MySQL Bootstrap jQuery Responsive Domain Web Hosting FTP Transfer Freelancer and Much More!",
      "objectives": [
        "Build a CMS + Admin Dashboard from scratch (with PHP, MySQL & Bootstrap 5)",
        "Create a secure user login & authentication system",
        "Manage content dynamically with a database-driven backend",
        "Deploy your project live on the web (from localhost to hosting)",
        "Understand full stack web development (frontend + backend integration)",
        "Gain freelancing strategies to earn with your new skills",
        "Show a portfolio project to impress your friends"
      ],
      "course_content": {
        "Full Stack Web Development - Before You Begin!": [
          "Don't Try to Learn A Language When You Enroll in A Course and Here is Why?"
        ],
        "Full Stack Web Development - Day 1: HTML Website Development": [
          "Install and Setup Basic Tools",
          "HTML Quick Start with a Simple Page",
          "Create a Blueprint Template with Basic Formatting",
          "Create Website Pages",
          "Create Blog Page",
          "Create Gallery Page with Images and Position",
          "Create Students Data Report Page with Tables",
          "Create Resources Page with List and iFrame",
          "Create Application Form with Various Techniques",
          "Create Contact Form + Enhance Application Form",
          "Add Google Map on Your Contact Page",
          "Download Source Files (Static HTML Website)"
        ],
        "Full Stack Web Development - Day 2: Convert HTML Website into PHP Website": [
          "Install and Setup Local Web Server",
          "Convert HTML Pages into PHP",
          "Separate Repeated Sections in Global Files"
        ],
        "Full Stack Web Development - Day 3: CSS Basics and Practical Usage": [
          "Play with CSS Rules using Internal and External Styles",
          "Block Level Element and Inline Element by Easy Practical Example",
          "Hands-on Practical with Box, Border, Padding and Margin",
          "Apply CSS Styles to Website Pages with Single and Multiple Selectors",
          "Download Source Files (PHP and CSS Website)"
        ],
        "Full Stack Web Development - Day 4: Convert PHP Website into Responsive Website": [
          "Why Use Bootstrap and its Benefits",
          "Integrate Bootstrap in Website in a Minute",
          "Websites Pages Review and Bootstrap Framework CSS",
          "Bootstrap Responsive Grid with Examples (Mobile, Tablet, Desktop)",
          "Transform Simple Gallery HTML Page into Responsive Gallery",
          "Website Review on Mobile View and Desktop View",
          "Convert Simple Navigation into Responsive Mobile/Desktop Compatible",
          "Upgrade and Enhance Application Form and Contact Form",
          "Upgrade Table into Responsive, Improve and Solve Problem",
          "Improve Website Pages for Mobile/Desktop",
          "Add Image Slider to Homepage",
          "Create a Responsive Footer with Text Alignment Techniques"
        ],
        "Full Stack Web Development - Day 5: jQuery Basics and Practical Usage": [
          "Why jQuery instead of JavaScript",
          "jQuery Syntax, Understanding Concept and Basic Demonstration",
          "Hide and Show Form Fields based on User Selection",
          "Animate Gallery Images with Mouse Events"
        ],
        "Full Stack Web Development - Day 6: PHP, SQL and MySQL Database": [
          "Create Your MySQL Database",
          "Create and Understand Contact Table",
          "Understand and Set Table Field Types",
          "Create Contact Thanks Page and Apply Form Action",
          "Update Form and Display Data on Thanks Page",
          "Examples and Explanation on GET vs POST and Changing Form Type",
          "Database with PHP and SQL Language – Learn like Plain English",
          "SQL Language in Action with PHP and Save Contact Form in Database",
          "Dealing with Date and Solve a Serious Problem of Contact Form Submission",
          "Conclusion + Setup Global Configuration PHP File"
        ],
        "Full Stack Web Development -Day 7: PHP with Admin Panel and Practical Techniques": [
          "Admin Panel Preparation",
          "Create Admin Login Page with Good Looking Form",
          "Login Script with Conditions, Operators and Redirection",
          "Logout Page",
          "Session for Login and Logout with Example Scenarios",
          "Security File for Admin Panel",
          "Regenerate a New Session on Every Login Attempt",
          "Create Students Management Page with Add Form and Script",
          "Centralized Script for Admin Operations",
          "Setup Students Report Page with Database",
          "Delete a Student in Action",
          "Edit Database Records with a Form Page and Script",
          "Finalization of Students Management + Admin Panel",
          "Download Source Files (Complete Dynamic Website)"
        ],
        "Full Stack Web Development - Day 8: Domain Name with Practical Examples": [
          "How Really Domain and Hosting Works?",
          "How Do We Find and Register Domain?",
          "How a Domain Works with Hosting?"
        ],
        "Full Stack Web Development - Day 9: FREE Web Hosting with FTP and Live Database": [
          "Introduction to Free Domain and Web Hosting with Unlimited Bandwidth",
          "Install FTP Software",
          "Hosting, FTP and Database Activation Crash Course"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "A computer with access to the internet",
        "No paid software required",
        "I'll walk you through, step-by-step how to get all the software installed and set up",
        "I'll show you everything that I'm doing so you can replicate the process and end up having same result."
      ],
      "description": "Learn practical full stack web development with PHP MySQL starting from scratch using plain text file to mind blowing custom CMS and admin panel development to web hosting live and check it along with understanding of freelancing for your career and further growth with advanced technologies in the light of given resources and video answers from me.\nForget about lots of theory, jump into the practical development now and understand it all better than wasting time understanding the text of books.\nLearn from an experienced top 1% rated freelancer who worked with international clients for over 20 years and shared his extensive experience through a simple to digest approach using step-by-step process and practical demonstration.\nHere is what previous customers said:\n\"It was so practical and hands on, even if it was sometimes a bit to fast it make you understand all the connections of the different elements and languages in such a short time. So it was better than expected. Thank you for this course.\" – Phillip (★★★★★)\n\"before joining this course i have no knowledge of web page development.. i just started with html.. but after completing i learned what it takes and required to develop web pages .. i am feeling very confident to take further steps.\" – Ramya (★★★★★)\n\"Zeeshan Arshad had done a good job with the course. The course brought me back quickly on building website/portal with PHP/MySQL nineteen years after leaving the university. I also appreciate the freelance part he included in the course.\" – Yusuf  (★★★★⯪)\nThis crash course comes with:\n\nWeb Development Cheat Sheets\nVideo Answers to Common Questions\nCareer & Freelancing Guidance\nFREE Lifetime Access\nCourse Certificate on Completion (good to impress your friends and colleagues)\nAfter finishing this course, you will be able to create a full practical website from scratch using Bootstrap, PHP and MySQL. Create a database, perform edit/update/delete operations, do live transfer and practically implement domain and hosting together.\nSo what are you waiting for?\nPurchase it now!",
      "target_audience": [
        "Beginners who want to start coding with PHP & MySQL",
        "Freelancers looking to expand into PHP/MySQL projects",
        "Entrepreneurs who want a custom CMS for their business",
        "Job seekers who need a project to showcase in interviews"
      ]
    },
    {
      "title": "Mastering Nuxt: Build a Full-Stack CRUD App with Server-Side",
      "url": "https://www.udemy.com/course/mastering-nuxt-build-a-full-stack-crud-app-with-server-side/",
      "bio": "Build Dynamic and SEO-Optimized Web Apps: Mastering CRUD, SSR, API Integration & Deployment with Nuxt.js",
      "objectives": [
        "Develop a complete CRUD application using Nuxt, honing the skills to create, read, update, and delete data dynamically.",
        "Master server-side rendering in Nuxt to improve SEO and ensure faster page loads for a better user experience.",
        "Integrate and manage APIs in Nuxt applications, allowing for real-time data exchange and backend communication.",
        "Explore advanced Nuxt concepts, such as dynamic routing, middleware, and modules to build robust applications."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript and Vue concepts.",
        "Familiarity with Node and npm (Node Package Manager) for package installation.",
        "Basic knowledge of HTML and CSS for frontend development.",
        "No prior experience with Nuxt is necessary; this course will cover all fundamental concepts from the ground up.",
        "A text editor (like VSCode) and a stable internet connection for development and learning."
      ],
      "description": "Embark on a journey to master modern web development with our comprehensive Nuxt.js course, tailored for those ready to elevate their skills in building dynamic, SEO-optimized web applications. This course is a perfect fit for frontend developers, full-stack engineers, and tech enthusiasts who already have a basic understanding of Vue.js and wish to delve deeper into sophisticated web development techniques.\nOver this course, you'll learn the intricacies of creating a robust CRUD (Create, Read, Update, Delete) application using Nuxt.js. We’ll guide you through the nuances of server-side rendering (SSR), which not only improves your application’s load times but significantly enhances its search engine visibility — a critical aspect for any modern web application.\nAPI integration is a pivotal skill you will acquire, enabling you to deftly manage external services and facilitate real-time data exchange. Furthermore, we will explore the power of state management with Vuex, empowering you to maintain a reactive and consistent application state.\nBy the conclusion of this course, you will have built a full-fledged Nuxt.js application, equipped with the knowledge to construct scalable, maintainable, and high-performance web applications. This course is your gateway to becoming a proficient developer who can harness the capabilities of Nuxt.js to create front-end solutions that stand out in the digital landscape. Join us to transform your web development expertise and step confidently into the future of interactive web applications.",
      "target_audience": [
        "This comprehensive Nuxt. course is designed for:",
        "Frontend Developers: who are looking to expand their Vue knowledge by learning Nuxt to build more powerful and complex applications.",
        "Full-Stack Developers: interested in leveraging server-side rendering for their Vue applications to enhance performance and SEO.",
        "JavaScript Enthusiasts: eager to dive into modern web development practices and who want to master full-stack development using a single language.",
        "Beginners with a Grasp on Fundamentals: who understand the basics of web development with HTML, CSS, and JavaScript and want to step into the world of advanced frameworks.",
        "Web Developers: looking to streamline their development process with a framework that provides a standardized way to build web apps.",
        "Vue Developers: who are looking to take their single-page applications to the next level with Nuxt's static generation feature and routing mechanisms.",
        "Career Switchers: with basic programming knowledge looking to enter the web development field with knowledge of the latest technologies.",
        "The course is crafted to cater to learners who are passionate about web development and are motivated to enhance their skill set to include the creation of performant, scalable, and SEO-friendly web applications. Whether you're aiming to upgrade your existing projects with Nuxt features or seeking to build a solid foundation for new ventures, this course will set you on the right path."
      ]
    },
    {
      "title": "NextJS - Build a Full-Stack Authentication with NextAuth",
      "url": "https://www.udemy.com/course/nextjs-13-build-a-full-stack-authentication-with-nextauth/",
      "bio": "Build a modern authentication system in NextJS from scratch using NextAuth, JWT, PostgreSQL, Prisma and NodeJS",
      "objectives": [
        "Setup Full-Stack Authentication by using the latest technologies",
        "Implement NextAuth with JWT from scratch or add it to an existing project",
        "Setup Prisma ORM with NextJS",
        "Connect to a Postgresql database and create User models",
        "Create Login and Register API endpoints in NextJS",
        "Create custom Login and Register pages for NextAuth",
        "Protect pages from unauthorized access",
        "Protect API endpoints and data from unauthorized access",
        "Create an email verification code system",
        "Send verification emails to newly registered users"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Branching strategy",
          "Everyting you need"
        ],
        "Getting started: Project setup": [
          "Setting up the Next.js 13 project",
          "Installing Prisma ORM",
          "Connecting to a Postgresql database",
          "Creating the User model in the database",
          "Installing the Prisma client",
          "Setting up NextAuth"
        ],
        "Creating the authentication system": [
          "Creating a custom login page",
          "Creating a custom registration page",
          "Creating the registration API endpoint",
          "Creating the login API endpoint",
          "Connecting the registration form",
          "Connecting the login form",
          "Protecting the home page",
          "Protecting API endpoints"
        ],
        "Bonus: Email verification": [
          "Prerequisites and introduction to email verification",
          "Buying a domain",
          "Database schema modifications",
          "Creating the verification page",
          "Setting up Mailjet"
        ]
      },
      "requirements": [
        "Basic understanding of React",
        "Basic understanding of JavaScript"
      ],
      "description": "In this concise yet comprehensive course, you will be guided through the process of creating a modern authentication solution using NextJS, NextAuth, JWT, Postgresql, Prisma, and NodeJS.\nDesigned for developers seeking a practical approach, this course is your gateway to mastering secure user management in NextJS projects. Perfect for newcomers to the NextAuth library (which is rapidly becoming the go-to authentication tool in modern web development) or those starting fresh, you'll unlock the secrets to building robust user experiences when it comes to login and registration.\nImmerse yourself in hands-on learning as you learn setting up Full-Stack Authentication using cutting-edge technologies. Learn to implement NextAuth with JWT, create API endpoints using NodeJS inside NextJS, and design personalized pages for seamless user journeys. Discover how to safeguard pages and secure API endpoints and data, ensuring your application is rock-solid.\nA basic understanding of React and JavaScript is all you need to jump in. By enrolling in this course, you'll have direct access to me as your instructor, allowing you to receive personalized feedback and guidance on your journey to mastering authentication in NextJS. I'll be there to support you every step of the way, ensuring you have the tools and knowledge needed to succeed.",
      "target_audience": [
        "Anyone who needs to implement authentication properly in their NextJS project",
        "Developers who are new to the NextAuth library",
        "Developers who are starting a new project (Authentication is a great starting point)"
      ]
    },
    {
      "title": "Build an app with React, .Net Core, GraphQL and HotChocolate",
      "url": "https://www.udemy.com/course/build-an-app-with-react-net-core-graphql-and-hotchocolate/",
      "bio": ".Net Core and React with GraphQL and HotChocolate. Entity Framework, Apollo CodeGen, Docker, Material UI, Relational DB",
      "objectives": [
        "Build a complete fullstack app end to end using React and .Net 7",
        "Learn how to work with GraphQL and HotChocolate to combine the frontend app with the backend database",
        "Gain insight on how to structure a software project which adheres to industry standards and allows expandability",
        "Learn how to deploy a project into a docker container"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Structure",
          "Setting up the environment",
          "Creating the project and setting up GIT",
          "Structuring the backend project"
        ],
        "Building the Backend": [
          "Creating the Entities",
          "Setting up Entity Framework and the Database context",
          "Integrating GraphQL using HotChocolate",
          "Adding Voyager and CORS",
          "Creating the Customer and Order Service"
        ],
        "Building the Frontend": [
          "Getting started on the Frontend",
          "Creating the Codegen config",
          "Connecting the frontend with the backend",
          "Structuring the Layout",
          "Creating the Customers Grid",
          "Creating the Orders page"
        ],
        "Creating reusable components": [
          "Creating a reusable Ag Grid",
          "Creating reusable Loading and Error boxes",
          "Creating a reusable TextField",
          "Creating a reusable Submit Button",
          "Creating a reusable CheckBox",
          "Creating a reusable Select Field",
          "Creating a reusable Date Picker"
        ],
        "Working with Forms": [
          "Creating the Customer and Order queries by their Ids",
          "Creating the Customer Form",
          "Creating the Customer Page",
          "Creating the Order Form",
          "Creating the Order Page",
          "Little bit of Cleaning up"
        ],
        "Working with CRUD Operations": [
          "Back to the Backend - Creating a SQLite Database and setup Migrations",
          "AddOrUpdateCustomer Mutation",
          "AddOrUpdateOrder Mutation",
          "Update Customer in the Customer Form",
          "Update Order in the Order Form",
          "Add new Customer page",
          "Add new Order page",
          "Creating the Delete Mutations in the Backend",
          "Deleting a Customer in the App",
          "Deleting an Order in the App",
          "Optional: Creating the Stats grid in the Home page"
        ],
        "Deploying the App": [
          "Publishing the App",
          "Dockerising the App",
          "Working with different database types",
          "Managing user secrets"
        ]
      },
      "requirements": [
        "Basic knowledge in C# and JavaScript along with Entity framework and GraphQL will help understand the concepts quicker"
      ],
      "description": "Build a FullStack Web Application with a .Net Core Backend and React frontend. The backend consists of GraphQL endpoints with HotChocolate as the framework for working with Queries and Mutations. The backend database will be accessed via Entity Framework.\nThe Frontend web app will access the GraphQL queries via GraphQL Code Generator. Material UI will be used to style the app.\nThe Web App will be a fully functioning app that stores Customer data and Customer Orders. CRUD operations will be implemented in the App such as Inserting, Updating, Deleting and Retrieving Customers / Orders.\nThis course was designed to be a Follow along coding course. Theory discussions are kept to a minimum to ensure time constraints are met and the course time becomes manageable when learning.\nFundamental programming knowledge is required to understand and follow this course. This includes basic experience in C#.Net, Javascript and Working with IDEs (Ex: Visual Studio Code). If you are a Complete beginner to programming with no prior knowledge, this course might not be for you. If you are a Beginner to Intermediate Level programmer with a good programming foundation, this is an excellent course to update your knowledge and learn new skills\nAt the end of the Lecture series, you will be able to design and build a functioning Web application with the mentioned technologies",
      "target_audience": [
        "For intermediate developers looking to bridge some knowledge gaps.",
        "This course is not a foundation course and will require basic programming knowledge to understand the concepts"
      ]
    },
    {
      "title": "Make a professional website - 30 Day Guarantee. Discounted!",
      "url": "https://www.udemy.com/course/make-your-own-business-website-beginner-and-intermediate/",
      "bio": "Harness the power necessary for making a business WordPress website. No programming knowledge or experience required.",
      "objectives": [
        "Installing WordPress",
        "Theme Selection",
        "Customize Options",
        "Integrating Facebook",
        "Adding Contact Form",
        "Adding Twitter",
        "Change Favicon",
        "Pages and Posts",
        "Adding Maps and Comments",
        "Implementing Video",
        "Dashboard overview"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Wordpress"
        ],
        "Installing Wordpress": [
          "Installing WordPress",
          "Before we begin"
        ],
        "Theme Selection": [
          "Theme Selection",
          "Theme Selection"
        ],
        "Customize Options": [
          "Customize Options",
          "Customize Options"
        ],
        "Integrating Facebook": [
          "Integrating Facebook",
          "Integrating Facebook"
        ],
        "Adding Contact Form": [
          "Adding Contact Form",
          "Adding Contact Form"
        ],
        "Adding Twitter": [
          "Adding Twitter",
          "Adding Twitter"
        ],
        "Change Favicon": [
          "Change Favicon",
          "Change Favicon"
        ],
        "Pages and Posts": [
          "Pages and Posts",
          "Pages and Posts"
        ],
        "Adding Maps and Comments": [
          "Adding Maps and Comments",
          "Adding Maps and Comments"
        ]
      },
      "requirements": [
        "This is an all levels class. No programming knowledge or experience required."
      ],
      "description": "There are no words to explain how important this class is. If you are ever going to only take 1 class in web development then this is the class you want to take. Wordpress is revolutionary, its a trend setter, its the future, its the stuff that all those developers are using that you are paying to work for you. This is your opportunity to understand this phenomenal technology. You will never see the internet the same way.\nTake advantage of this opportunity to change your perspective for life. The internet is the gift of this generation; take advantage of it and don’t let this opportunity go to waste. Knowing Wordpress will give you access to one of the strongest tools of our times. Don’t let this opportunity go to waste. What you learn in this class will change your perspective of the internet for ever.\nDon’t you want to have better control over your internet experience? Don’t you want to be the master of your own internet destiny? Have you ever found yourself wanting to make a website but not knowing what you need to do?\nIn 100 years from now Wordpress will be remembered as one of the most significant achievements of mankind right next to the Moon Landing. Wordpress has empowered the individual to have a real presence and a voice on the internet.\nWith Wordpress you make your own website.\nWordpress is currently used by The New York Times, CNN, Forbes, Reuters, GM, UPS, Ebay, Sony, Best Buy, The Rolling Stones, Jay-Z, Katy Perry, MP3.com, IZOD, Kineda, StyleWatch, Mashable and Time Magazine just to name a few notable users.\nIf you have ever felt the slightest bit of impairment as a result of not knowing how to make a website then this right here is your opportunity to shine on and get the skinny on how to make your own website. Take this class and stop paying other programmers to make your websites for you. This class is the equivalent of the Red pill from the Matrix.\nNo prior programming experience or knowledge required. This class is outstanding! Its the best class you can ever take. Learn how to make a website with WordPress. WordPress has revolutionized business and this class offers the opportunity to learn Wordpress.",
      "target_audience": [
        "Anyone interested in making their own website",
        "Anyone interested in becoming a WordPress developer",
        "Anyone interested in taking control of their web experience"
      ]
    },
    {
      "title": "Python for mobile apps backend & APIs (Flask framework)",
      "url": "https://www.udemy.com/course/python-for-mobile-apps-backend-and-api-flask-framework/",
      "bio": "Build a backend API server for your mobile app with the Flask Framework (databases, security, production, ...)",
      "objectives": [
        "Building a backend server from scratch to production",
        "Creating an API that can receive and send information",
        "Connecting a mobile app to an API backend",
        "Connecting a mobile app to databases",
        "Setting up a server to host a Python application",
        "Securing an API for production"
      ],
      "course_content": {
        "Introduction & context": [
          "Introduction",
          "Mobile apps structure",
          "Python refresher course"
        ],
        "Building your first backend server": [
          "Introduction to the Flask framework",
          "Introduction to Flask Restful & APIs",
          "Sending information to your mobile application (GET request)",
          "How JSON code is used in the front-end",
          "Getting on the same page",
          "Receiving information from your application (POST method)",
          "Deleting information on your back-end (DELETE request)",
          "Modifying information on your back-end (PUT request)",
          "Bringing all methods under the same route"
        ],
        "Scaling your backend server": [
          "App structure & blueprints",
          "Connecting to databases with Python (SQLAlchemy)",
          "Sending information to your database",
          "Retrieving information from your database",
          "Changing & deleting information in your database",
          "Connecting to a database without the app context (outside Flask)"
        ],
        "Creating a complex & secure back-end API server": [
          "Adding user accounts & securing their passwords",
          "Adding likes & dislikes",
          "Front-end point of view for likes & dislikes",
          "Adding comments",
          "Securing your API (very important)",
          "What securing your API changes for your front-end",
          "Optimizing the loading speed for the user"
        ],
        "Additional tools": [
          "Sending emails with Python (within & outside the app context)",
          "Sending text messages with Twilio",
          "Adding a simple recommender model (using a deep learning model)",
          "Git, GitHub & Collaboration"
        ],
        "Putting your app to production": [
          "Theory of production",
          "Production on Python Anywhere (the easiest)",
          "Production on Planet Hoster (if you need a mail server)",
          "Production on Digital Ocean (from scratch)",
          "Production on AWS"
        ],
        "Wrapping up": [
          "Wrapping up",
          "Course book & code"
        ]
      },
      "requirements": [
        "Python language or familiar with other programming languages"
      ],
      "description": "Ambitious mobile apps that want to host thousands of users every second will need a backend. This course focuses on building such ambitious projects by giving you the tools that you need to create secure and powerful backend servers for bringing your mobile app to the next level.\nThis course offers practical solutions to the most challenging problems that you will meet while building a mobile application. With this course, you will understand how applications like Snapchat, Instagram or TikTok can host so much content while providing a wonderful user experience.\nYou will understand how you can build a complete API, that receives and send information to your mobile app, that connects to a database and you will put this API to production. I have gathered in this course everything that I learnt in the last 3 years, wandering around thousands of forums and YouTube videos and debugging during thousands of hours. This course is broken into chapters that address all the subjects that you need to understand to build a complete backend Python server to sustain thousands of users every second. You will learn:\n- How to launch an \"hello world\" application\n- How to connect your mobile app to the backend server API\n- The best practices of programming within a team\n- How to connect your server to databases (MySQL, PostgreSQL, MongoDB) so that you can store the information\n- How to secure your API so that no one else can access it\n- How to scale your application\n- How to put to production a simple deep learning model for recommending content (like Facebook feeds)\n- How to put your application to production with different providers\nI have intentionally designed this course so that you can come back any time and find what you need in separate videos and course chapters. This course is part on an ongoing Python’s series including:\n- Python for web development\n- Python for web scrapping & advanced automation\n- Python for mobile app backends & APIs (this course)",
      "target_audience": [
        "Python and full-stack developers, engineering students, self-taught developers"
      ]
    },
    {
      "title": "Finest Laravel Course - Learn from 0 to ninja with ReactJS",
      "url": "https://www.udemy.com/course/finest-laravel-course/",
      "bio": "Master the latest features in laravel by building Projects, API, ReactJS and many more.",
      "objectives": [
        "Laravel PHP Framework",
        "AJAX",
        "ReactJS",
        "Setup for Linux, Mac OS and Windows",
        "Database Migration",
        "Database Seeding",
        "Tinker",
        "Database Relationship",
        "Validation and Request",
        "Authentication and Spatie",
        "RestAPI with Passport",
        "Version Control System",
        "Repository Pattern"
      ],
      "course_content": {
        "Introdution of this course": [
          "Introduction of this course",
          "What is Laravel?"
        ],
        "Environment Setup in Linux": [
          "Working Environment Xampp",
          "Install Text Editor",
          "Install Version Control System(GIT)",
          "Download and Install Composer",
          "Setup before install Laravel Project",
          "Download and run Laravel Project",
          "Virtual Hosting"
        ],
        "Environment Setup in Mac OS": [
          "Working Environment Xampp",
          "Install Text Editor",
          "Download and install Composer",
          "Download and run laravel Project"
        ],
        "Environment Setup in Windows": [
          "Working Environment (XAMPP)",
          "Install Text Editor",
          "Install Version Control System (GIT)",
          "Install Composer",
          "Download and run Laravel Project",
          "Virtual Hosting",
          "Laravel Project folder introduction"
        ],
        "Laravel Essentials": [
          "Basic Routes",
          "Basic Resources Controller with routes",
          "Views(Display variable by handlebar)",
          "Views with blade templating",
          "If statement with blade templating",
          "Getting css and javascript files to views"
        ],
        "Database with migration": [
          "Basic Database setup and env introduction",
          "Creating migration",
          "Add column in existing table migration",
          "Renaming a table",
          "Drop column in a table",
          "Check if database has already a table",
          "Check if database has already has a column"
        ],
        "Database Model (CRUD without Form)": [
          "Creating Model",
          "Insert Data to the Database",
          "Display data to views from database",
          "Updata data from database",
          "Delete data from database"
        ],
        "Database Seeding": [
          "Introduction of Seeding",
          "Insert data to database using Seeder",
          "Insert multiple seeder at once"
        ],
        "Database Factory": [
          "Introduction of Factory",
          "Insert 200 Fake Data to database"
        ],
        "Laravel Essentials - Tinker (REPL)": [
          "Introduction of Tinker",
          "Creating data using Tinker",
          "Display Data to GIT",
          "Update data using TInker",
          "Delete data using Tinker",
          "Hashing Tinker"
        ]
      },
      "requirements": [
        "Basic PHP",
        "Basic CSS3",
        "Basic Javascript",
        "Basic MySql"
      ],
      "description": "Welcome to the Finest Laravel Course - Learn from Zero to Ninja with ReactJS\nThis is the best course to fulfill your dream of becoming a Laravel PHP Developer. I will teach you hands-on to enhance your programming skills faster. I'll guarantee that you will learn more in an advanced mode, and I teach at a fast pace so that you will learn what you really need.\nWith this course, you can go from beginner to professional in just 4 weeks.\nWhat will you get in this course?\nEnvironment Setup for Windows, MacOS, and Ubuntu\nLaravel Essentials\nDatabase with Migration\nDatabase Model (CRUD without Form)\nDatabase Seeding\nDatabase Factory\nLaravel Essentials - Tinker (REPL)\nLaravel Artisan\nDatabase Relationship\nLaravel Essentials - Validation and Request\nLaravel Projects - CRUD with AJAX, Yajra, and Datatables\nLaravel Essentials - Uploading Files\nLaravel Advance - Authentication and Spatie\nLaravel Essentials - Email\nLaravel Database Queries\nLaravel Advance\nLaravel API - REST API with Passport\nLaravel Projects - Library System with React.js\nLaravel Advance - Tips\nGIT - Version Control System and GITHUB\nRepository Pattern\nAdvanced Laravel 11 Topics\nGet this course today and change your career completely.\nThe quicker you get this course, the quicker you will gain the finest Laravel skills.\nThank You",
      "target_audience": [
        "Anyone who want to learn Laravel from scratch",
        "Anyone who wants to start a career as Laravel Developer",
        "Anyone who wants to build Fast and Secure Systems"
      ]
    },
    {
      "title": "Build and Publish a Car Rental Website",
      "url": "https://www.udemy.com/course/build-a-rental-car-website-and-display-location-on-the-map/",
      "bio": "Online Car Rental Service Crash Course",
      "objectives": [
        "How to build a car rental website",
        "Showing car location on the map",
        "Start online car rental service",
        "Charging clients to use a service"
      ],
      "course_content": {
        "Getting started": [
          "Setup Terminal",
          "Setup Code Editor",
          "Nodejs"
        ],
        "Create a project": [
          "Initialize application",
          "Server (back-end)"
        ],
        "View Engine": [
          "Express handlebars",
          "Static files"
        ],
        "Nodemon module": [
          "Auto Start Server"
        ],
        "Bootstrap": [
          "Install bootstrap",
          "Navbar Component",
          "Website logo",
          "About and Contact page",
          "Login buttons",
          "Signup form"
        ],
        "Deployment": [
          "Heroku CLI",
          "Deployment",
          "Production mode",
          "Import keys"
        ],
        "Model method": [
          "create user collection",
          "MongoDB atlas",
          "Mongo connection url"
        ],
        "Save data into MongoDB": [
          "Form submit",
          "Save data",
          "Contact Collection",
          "Import Contact collection"
        ],
        "Login with Email": [
          "Passport Module",
          "Bcryptjs Module",
          "Local Strategy",
          "Auth Config",
          "Register new user",
          "Error messages",
          "Input value",
          "Login form",
          "Success Message",
          "Submit Login Form"
        ],
        "Profile": [
          "Display profile",
          "Login errors",
          "Card Component"
        ]
      },
      "requirements": [
        "Laptop or computer",
        "Internet connection and wifi"
      ],
      "description": "In this tutorial, I will teach you how to build and start your own online car rental service from scratch till deployment with domain name. We will start complete web development process from A to Z. Students will learn how to build website from scratch using Node, Express and JavaScript at home in their spare time. We will authenticate users to login with facebook account or email address, and we charge clients for each car they list for users who want to rent a car. We will use Google Places API to fetch a car location and display them on the map on the website.\nIn this tutorial, I will teach you how to build and start your own online car rental service from scratch till deployment with domain name. We will start complete web development process from A to Z. Students will learn how to build website from scratch using Node, Express and JavaScript at home in their spare time. We will authenticate users to login with facebook account or email address, and we charge clients for each car they list for users who want to rent a car. We will use Google Places API to fetch a car location and display them on the map on the website.",
      "target_audience": [
        "Beginner who wants to learn a complete website development",
        "Anyone who is interested to start online rental car service",
        "Beginner who is interested in learning Nodejs and JavaScript"
      ]
    },
    {
      "title": "Learn to code - HTML, CSS, and JavaScript",
      "url": "https://www.udemy.com/course/start-coding-learn-html-css-and-javascript/",
      "bio": "Build a one page website |Todolist App | Calculator |Quiz app",
      "objectives": [
        "Coding Tools",
        "Installing web browsers",
        "Planning a website",
        "Designing a website",
        "Choosing assets",
        "Create HTML Document",
        "HTML Attributes",
        "MarkUp HTML Text",
        "Create Links",
        "Ways to apply CSS",
        "CSS Selectors",
        "CSS BOX Model",
        "CSS Margin and Padding",
        "CSS Background color",
        "CSS Font Property",
        "Where to add JavaScript",
        "Variables and Arrays",
        "Conditional statements",
        "Functions",
        "Data Types",
        "Operators and Events",
        "Create a calculator",
        "Create an interactive quiz",
        "Create a Todo List App"
      ],
      "course_content": {
        "Introduction and required coding tools": [
          "Introduction",
          "What is HTML",
          "What is CSS",
          "What is JavaScript",
          "Required Tools",
          "Install text editors",
          "Install web browsers"
        ],
        "Planning and designing a website": [
          "Planning your website",
          "Sketch the design",
          "Choosing your assets",
          "Creating project directory"
        ],
        "Coding with HTML": [
          "Anatomy of an HTML Element",
          "Basic structure of an HTML document - Part 1",
          "Creating a basic structure of an HTML document - Part 1",
          "Creating a basic HTML document structure -Part 3",
          "Creating a basic structure of an HTML document - Part 2",
          "The Source Code",
          "HTML Attributes",
          "Marking UP Text",
          "Creating Links",
          "HTML Comments"
        ],
        "Coding with CSS": [
          "Ways to apply CSS",
          "Styling multiple properties",
          "Styling multiple elements",
          "Modifying CSS",
          "Basic CSS Selectors",
          "CSS Comments",
          "CSS BOX Model",
          "CSS Margin and Padding Property",
          "Changing background color",
          "CSS border property",
          "Styling page title",
          "CSS Display property",
          "CSS font property",
          "Using Google Fonts"
        ],
        "Coding with JavaScript": [
          "Where to Place JavaScript",
          "JavaScript Variables",
          "Variable Naming Convention",
          "JavaScript Arrays",
          "Data Types",
          "Mixing Data Types",
          "What are Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Operator Precedence",
          "String Operators",
          "Comparison Operators",
          "Logical Operators",
          "Typeof Operator",
          "Conditional statements",
          "What are Functions",
          "JavaScript Comments",
          "Linting tools",
          "JavaScript Events",
          "Adding an Image Changer",
          "Fixing JSLINT Warnings -Part 1",
          "Fixing JSLINT Warnings -Part 2",
          "Add a welcome greeting message"
        ],
        "Create a Todo App": [
          "Overview",
          "What we will create",
          "Creating directory and files",
          "Create HTML structure for the app",
          "Add styling with CSS",
          "Add functionality with JavaScript - Part 1",
          "Add functionality with JavaScript - Part 2"
        ],
        "Create a Calculator": [
          "Overview",
          "What we will create",
          "Creating directory and files",
          "Creating HTML structure",
          "Add styling with CSS",
          "Add functionality with JavaScript"
        ],
        "Create interactive Quiz App": [
          "Overview",
          "What we will create",
          "Creating directory and files",
          "Creating HTML structure",
          "Add styling with CSS",
          "Add functionality with JavaScript - Part 1",
          "Add functionality with JavaScript - Part 2",
          "Thank You"
        ]
      },
      "requirements": [
        "Access to a computer",
        "Access to internet"
      ],
      "description": "Learning to code can be both fun and rewarding. It is exciting to be able to write some code that gives the computer a bunch of tasks to perform.\nI  always advise beginners to start with coding for the web to build their coding skills. The three technologies every web developer must know are :\nHTML : Used to create  content\nCSS: Used to present the content\nJavaScript : Used to create interaction\n\n\nThey are the building blocks of all websites and web based projects.\nThis course will teach you the basics of these three technologies by creating\nA basic one page website project.\nA calculator\nA Todo list app\nAn interactive quiz app.\n\n\nWhat You will learn :\nCoding Tools\nInstalling web browsers\nPlanning a website\nDesigning a website\nChoosing assets\nCreate HTML Document\nHTML Attributes\nMarkUp HTML Text\nCreate Links\nWays to apply CSS\nCSS Selectors\nCSS BOX Model\nCSS Margin and Padding\nCSS Background color\nCSS Font Property\nWhere to add JavaScript\nVariables and Arrays\nConditional statements\nFunctions\nData Types\nOperators\nEvents\nCreate a calculator\nCreate an interactive quiz\nCreate a Todo List App\n\n\n\n\nJavaScript is an object-oriented programming language employed by most websites along with HTML and CSS to create robust, dynamic and interactive user experiences.\nThe JavaScript programming language was introduced in 1995 and has since become one of the most popular with support by all major web browsers. JavaScript programs are used both client-side and server-side to add functionality to web pages. Stack Overflow developer survey listed JavaScript as the most popular front end developer and back end development technology.\nJavascript is one of the main programming languages used in web development.\nNot only is javascript easy to use and very versatile,\nbut those who have the skills to use it are in very high demand.\nCompanies are always looking for people with Javascript proficiency.\nIt is a great language to learn if you are interested in web development\nbecause the skills you learn from Javascript online courses are very transferable.",
      "target_audience": [
        "Absolute beginners to coding",
        "Absolutely beginners to programming",
        "Absolute beginners to web development."
      ]
    },
    {
      "title": "Node.js REST API: Express, MySQL, Basic Auth, OAuth2, JWT",
      "url": "https://www.udemy.com/course/noderestapi/",
      "bio": "Develop Professional Node.js REST APIs with Express and MySQL. Build secure REST APIs with Basic Auth, OAuth2, JWT Token",
      "objectives": [
        "Develop basic NodeJS RESTful API application with Express",
        "Build a simple RESTful API project for calculator",
        "Integrate database MySQL with Nodejs and Express for REST API applications",
        "Develop NodeJS RESTful API with MySQL CRUD (Create, Read, Update, Delete) operations",
        "Apply NodeJS RESTful API security with basic authentication",
        "Apply NodeJS RESTful API security with OAuth2",
        "Apply NodeJS RESTful API security with JWT Token"
      ],
      "course_content": {
        "Introduction": [
          "Bootcamp Overview",
          "Preparation"
        ],
        "Basic Node.js Programming": [
          "Setting up Node.js Development Environment",
          "Declaring Variables",
          "Node.js Operators",
          "Control Statements",
          "Looping",
          "Array and Collections",
          "Functions"
        ],
        "Hello World RESTful API": [
          "Setting up Express - Web Framework",
          "Develop My First RESTful API with Node.js",
          "Testing RESTful API Application"
        ],
        "Develop Calculator API": [
          "Project Overview",
          "Creating and Setting up A Project",
          "Developing A Calculator API with Node.js",
          "Testing A Calculator API Application"
        ],
        "Develop A Product Management API": [
          "Project Overview",
          "Preparing Database",
          "Creating and Setting up A Project",
          "Building Product CRUD API",
          "Testing REST API Application"
        ],
        "Node.js RESTful API Security with Basic Authentication": [
          "Introduction to Basic Authentication",
          "Preparing Database",
          "Creating and Setting up A Project",
          "Writing Codes for Managing Basic Authentication Database",
          "Implementing User Registration API",
          "Applying Basic Authentication on Node.js RESTful API",
          "Testing REST API Application"
        ],
        "Node.js RESTful API Security with OAuth2": [
          "Introduction to OAuth2",
          "Preparing Database",
          "Creating and Setting up A Project",
          "Writing Codes for Managing OAuth2 Database",
          "Applying OAuth2 on Node.js RESTful API",
          "Testing REST API Application"
        ],
        "Node.js RESTful API Security with JWT Token": [
          "Introduction to JWT Token",
          "Preparing Database",
          "Creating and Setting up A Project",
          "Writing Codes for Managing JWT Database",
          "Applying JWT Token on Node.js RESTful API",
          "Testing REST API Application",
          "JWT Token with RSA Private Key"
        ]
      },
      "requirements": [
        "No NodeJS programming experiences",
        "Computer with installed Windows, Linux or macOS",
        "Internet access"
      ],
      "description": "This bootcamp is designed for everyone who wants to learn and upgrade REST API development using Node.js. Various Node.js REST API projects are provided to increase your skills and experiences. All projects are delivered with step-by-step approaches.\nYou will develop the following REST API projects:\nHello world REST API\nCalculator API\nMySQL CRUD (Create, Read, Update, Delete) API\nApplying basic authentication for Node.js REST API\nApplying OAuth2 for Node.js REST API\nApplying JWT token for Node.js REST API\nFor students without Node.js programming skill, this bootcamp delivers a brief Node.js programming so you can follow this bootcamp easily.\nIn this bootcamp, you will learn how to build REST API using Node.js and Express from the scratch . Starting to create a project, writing codes, and testing REST APIs.",
      "target_audience": [
        "Web developers",
        "Student developers",
        "Professional developers",
        "Anyone who wants to upgrade skills in RESTful API development with NodeJS"
      ]
    },
    {
      "title": "HTML AND CSS KICK-START TO BECOME A RICH WEB DEVELOPER",
      "url": "https://www.udemy.com/course/html-css-website/",
      "bio": "Extreme HTML & CSS beyond the basics from the very scratch. HTML and CSS is the backbone of all the websites.",
      "objectives": [
        "FREE GIFT OF 14$ HTML CSS Template.",
        "Making a website responsive for tablets & mobile phones.",
        "Core HTML Tags and how to use them.",
        "Separating Style from Content",
        "Using CSS Selectors",
        "Working with Links, Positioning, & forms.",
        "Core HTML Tags and how to use them.",
        "Apply CSS Styling",
        "Separating Style from Content",
        "Building Multi Level Menus",
        "Advanced CSS features."
      ],
      "course_content": {
        "For extreme beginners": [
          "Introduction to HTML + CSS & about the man behind it's invention.",
          "Installation & quick review of Brackets (A web development IDE)",
          "Getting Started with pre HTML tags",
          "Basic dive with tags",
          "Exercise File for section 1",
          "Basic Tags part 2 with mailing feature",
          "Link Building",
          "Listings"
        ],
        "Forms in HTML": [
          "Forms in HTML",
          "Forms part 2 with quick php",
          "Exercise File for Forms"
        ],
        "Basic HTML & CSS combination": [
          "HTML CSS Combo with Alert script & domain redirection",
          "Exercise File2 (Script Alert & domain redirection)",
          "Div, span, class & id - The backbone HTML tags mostly used for CSS.",
          "Exercise File 3_Part 1 (Division & Span)",
          "Exercise File 3_Part 2 (Classes & ID)",
          "Background, font & color with CSS in HTML document",
          "Exercise File 4 (Bg, Font & colour with CSS in HTML Document)"
        ],
        "Working with project development": [
          "Header,navigation,section & footer layout",
          "Exercise File 9 (Header & footer layout code)",
          "Drop-down menu & importing CSS in HTML Document.",
          "Exercise File for drop down menu (HTML DOCUMENT)",
          "stylesheet.css",
          "Importing 3rd party fonts in your HTML document",
          "HTML CSS Template gift walk through",
          "Exercise file of gifted template : index.html",
          "Exercise file gifted template : default.css"
        ],
        "Deep HTML & CSS Dive": [
          "2D to 3D image conversion",
          "Exercise File 5 (2D to 3D Image conversion)",
          "Image size, shape & texture transformation",
          "Exercise file 6 (Image size, shape & texture transformation)",
          "Slider with core html & css",
          "Exercise File 7 (Image slider from core html css",
          "Rocket launching in Orbital motion",
          "Exercise File 8 (Rocket launching code + png images in download resource column)"
        ],
        "Features proposed by HTML 5": [
          "iFrame",
          "iFrame Exercise File",
          "GeoLocation",
          "GeoLocation Exercise File",
          "Video Player in HTML 5",
          "Video Player in HTML 5 Exercise File"
        ],
        "Make your website responsive for mobile & tablets": [
          "Responsive website building trick for Tablets & mobile phones.",
          "Exercise file for making elements responsive.",
          "Responsive image, column & container part 1",
          "Responsive image, column & container part 2"
        ],
        "It's time to give your desired website an existence in the world of internet!": [
          "From where to buy a domain, hosting and how to make it live?",
          "Bonus Lecture",
          "Wrap up with money making tip, read it once. Thank you!"
        ]
      },
      "requirements": [
        "Nothing because pre requisites are covered in section 1."
      ],
      "description": "HTML and CSS are the core languages any Web Developer needs.\nAll Website and an increasing number of Mobile apps are built using these fundamental but easy to use languages.\nWeb Development Essential Skills - Complete HTML and CSS - teaches you everything you need to know to master HTML and CSS and start building Web Apps and Mobiles today!\nAssuming no prior knowledge because pre requisites are covered in section 1, we will show you how to get the tools and apply pro techniques to make your code clean, easy to maintain and robust.\nAll you need is a Windows PC or Apple Mac running OSX and an internet connection - This course will show you how to get all the other tools you need - FOR FREE!\nI'll take you step by step through the most important skills including\nCore HTML Tags and how to use them.\nSeparating Style from Content\nUsing CSS Selectors\nWorking with Links, Positioning, & forms.\nCore HTML Tags and how to use them.\nApply CSS Styling\nSeparating Style from Content\nBuilding Multi Level Menus\nAdvanced CSS features.\nMaking a website responsive for tablets & mobile phones.\nFREE GIFT OF 14$ HTML CSS Template.\nIn this course, you'll go through each element HTML in turn, and walkthrough all the options for styling elements using CSS Selectors and Style Sheets to create clean and easy to maintain HTML Apps.\nBy the end of the course you'll be fully confident and know everything you need to get started on your way to being a top class, professional web developer!\n\nAnd of course, being part of Udemy you get:\n\nFREE lifetime access to this course\nALL future lectures and upgrades (of which there will be many!) included for free\nUdemy's Unconditional 30 day money back guarantee - so there's NO risk\nCourse completion certification after completing it 100%\nI believe this is the best way to learn, you will be able to apply what you are learning to a real project and instantly see the results.",
      "target_audience": [
        "Anyone who is having a wish to give a rise to his career with web development skill.",
        "Anyone who want to find a way how you can make money with web development.",
        "Web developers",
        "Bloggers"
      ]
    },
    {
      "title": "Create Online Course Website Like Udemy (Unofficial)",
      "url": "https://www.udemy.com/course/create-online-course-website-like-udemy-unofficial/",
      "bio": "How to create online course Professional website with Wordpress for FREE - No Coding, Just Drag & Drop",
      "objectives": [
        "Create a Professional online course website like Udemy",
        "You will learn how to add payment gateways (Like PayPal, Stripe & Instamojo)",
        "How to create course lesson for videos & Articles",
        "How to add quizzes inside your course",
        "Other Instructors can make course on Your Website",
        "How you can earn commission on other's Instructor course",
        "How to design website like professional without coding (Just drag & drop)"
      ],
      "course_content": {
        "Introduction To Create Online Course": [
          "Introduction To Create Online Course Like Udemy",
          "Watch This Important (Don't Skip)",
          "How Course is Structured?"
        ],
        "Hosting & Wordpress Guide": [
          "Setup Web Hosting",
          "Domain, SSL & WordPress Setup"
        ],
        "Build Online Course Structure": [
          "Installing Plugins",
          "Elementor Setting (Important)",
          "Theme Installation",
          "Creating First Course",
          "Quiz, Announcement and Q&A"
        ],
        "Paid Course & WooCommerce Settings": [
          "Connecting Course With Products",
          "Setting Payment Gateway"
        ],
        "Website Designning Customisation": [
          "Website Customization 1",
          "Website Customization 2",
          "Website Customization 3",
          "Website Customization 4",
          "Favicon Customization"
        ],
        "Additional Tips For Website": [
          "Adding Thank You Page",
          "Remove Unwanted Details in Checkout",
          "Auto Complete WooCommerce Order",
          "Multi-Currency Feature"
        ],
        "Free Features v.s Paid Features": [
          "Alternatives For YouTube Storage",
          "JetPack Video Self Hosting Option",
          "Lms Tutor Free & PRO"
        ],
        "Final Outcome": [
          "Testing Website",
          "Thanks you to be with me :)",
          "Watch Free Courses",
          "Bonus"
        ]
      },
      "requirements": [
        "You should have basic computer knowledge",
        "Access to Internet Connection",
        "Eagerness to learn"
      ],
      "description": "In this course how to create online course websites like Udemy & Skillshare or any other online course website. You will learn how you can create online course website for FREE. You do not require any coding to build a website. You just need to do Drag & Drop.\nAll plugins & theme used for making this website is completely Free. We will use the page builders to design and customize our website to make it look more professional.\nYou can create unlimited courses. Inside the course, you can add lessons (both video & article) and quizzes. Other instructors can also join your website and make courses in return you can take a commission from them like Udemy.\nThis website will be completely user-friendly on both mobile and desktop this will conform your visitors. The interface of this website will be very smooth and lead to more easily sales of any paid course.\nWe will add different payment gateway where people can pay you (like PayPal, Stripe & Instamojo). Also, we will tell you the best ways to host your website. We will tell you about the best video hosting platform for your online video hosting. Plus we will tell you about a self-hosted plugin that will help you to host a website inside your hosting even you will have less webspace.\nAlso, don't worry I am here to help you if you will have any doubt. Plus point is that you have 30 days money-back guarantee as well by Udemy. So just chill I will see you inside this course :)",
      "target_audience": [
        "This course is for beginners who would like to learn Wordpress and make website",
        "Course Instructors who need a professional beautiful website and wants to grow business faster",
        "WordPress Beginners for making best website fast and easy way",
        "Anyone who wants to learn more about wordpress and other business plugins for growing business faster"
      ]
    },
    {
      "title": "Javascript, Nodejs, MongoDB for Full Stack Web Development",
      "url": "https://www.udemy.com/course/javascript-with-hands-on-examples/",
      "bio": "JavaScript libraries such as React, Angular, Nodejs, MongoDB for Full Stack Developer with JavaScript hands on examples.",
      "objectives": [
        "How to include JS File in HTML, Javascript, NodeJS, MongoDB",
        "What are Javascript variables, why are they used",
        "What is Javascript Boolean Logic",
        "What is Javascript conditional statements (if else, switch case, ternary operator), how to use",
        "What is Javascript loops (for loops, while loops, continue and break statements), how to use them",
        "How to Javascript write Functions, what are the differences between Function Decleration and Function Expression",
        "How to create Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create objects, how to update them, object methods",
        "What is DOM, how to manipulate DOM",
        "You will test what you have learned with code quizzes",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "Full Stack Web Development with javascript, nodejs, mongodb",
        "Backend web development with javascript, nodejs, mongodb"
      ],
      "course_content": {
        "Introduction to Javascript, Nodejs and Mongo course with hands on examples": [
          "Introduction to JavaScript",
          "Javascript Project Files and Course Documents",
          "Javascript Setup Visual Studio Code",
          "Adding js file",
          "FAQ about Javascript, Nodejs, Mongodb and Javascript Projects",
          "quiz"
        ],
        "Javascript Language Basics": [
          "Javascript Variables and Data Types",
          "Javascript Type Coercion",
          "Javascript Variable Mutation",
          "Javascript Basic Operators",
          "Javascript Boolean Logic",
          "Javascript Logical Operators",
          "quiz"
        ],
        "Javascript Conditional Statements": [
          "Javascript Conditional Statements",
          "Javascript Code Quiz 1 Solution",
          "Javascript Ternary Operator",
          "Javascript Switch, case statements",
          "Javascript Code Quiz 2",
          "Code Quiz 2 Solution",
          "quiz"
        ],
        "Javascript Loops": [
          "Introduction to Javascript Loops",
          "Javascript While Loops",
          "While Loops Quiz",
          "While Loops Quiz Solution",
          "for Loops in Javascript",
          "for Loops Quiz Solution",
          "Javascript Continue and Break Statements",
          "quiz"
        ],
        "Javascript Functions": [
          "Introduction to Javascript Functions",
          "Javascript Function Decleration",
          "Javascript Function with Arguments",
          "Javascript Function return",
          "Javascript Function Expression",
          "Function Quiz",
          "Javascript Function Quiz Solution",
          "Function Scope",
          "quiz"
        ],
        "Javascript Arrays": [
          "Introduction to Javascript arrays",
          "Javascript Array Features",
          "Javascript Array Methods",
          "Javascript Array Quiz",
          "Array Quiz Solution",
          "Array Iteration",
          "Array Iteration Quiz",
          "Array Iteration Quiz Solution",
          "quiz"
        ],
        "Javascript Objects": [
          "Introduction to Javascript objects",
          "Javascript Object update",
          "Complex Data Structures",
          "Object Quiz",
          "Object Quiz Solution",
          "Javascript Object Methods",
          "Javascript this Keyword",
          "quiz"
        ],
        "Javascript DOM": [
          "Introduction to DOM",
          "What is DOM",
          "Javascript Select and Change",
          "Javascript Select Methods",
          "Javascript Manipulation Methods",
          "Javascript innerHTML and textContext",
          "Javascript Attribute Manipulation",
          "quiz"
        ],
        "Javascript Event Handlers": [
          "Introduction to Javascript Event Handlers",
          "Javascript Event Handler Codequiz",
          "Javascript Codequiz Solution",
          "Javascript callback Function",
          "Javascript Different Event Types",
          "Todolist Quiz Solution",
          "quiz"
        ],
        "Node JS": [
          "What is Node JS",
          "Installing Node JS",
          "NodeJS Project Files",
          "NodeJS V8 Engine",
          "Node JS Globals",
          "NodeJS Functions",
          "NodeJS Module and Require",
          "NodeJS Module exports patterns",
          "NodeJS Event Emitter",
          "More about Event Emitters",
          "Reading and Writing Files",
          "NodeJS Creating and Removing Directories",
          "Quiz NodeJS, Node, Node.JS, Nodejs for beginners"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS for Javascript and Javascript libraries, Nodejs and MongoDB",
        "Willingness and Motivation to successfully complete the Javascript training",
        "Computer with access to the internet",
        "Desire to learn Javascript, and Javascrit libraries",
        "Desire ro learn NodeJS",
        "Desire to learn MongoDB",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the \"Javascript, Nodejs, MongoDB for Full Stack Web Development\" course.\nJavaScript libraries such as React, Angular, Nodejs, MongoDB for Full Stack Developer with JavaScript hands on examples.\nJavaScript is the number one programming language for internet applications.\nThis course is for beginners. Before taking this course, you only need to have a basic knowledge of HTML and CSS. In our course, the basics of JavaScript are dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject. Javascript, react, angular, javascript libraries, javascript examples, javascript library, mocha, angular react, node, javascript angular, javascript react angular, javascript with hand-on, v8 engine, angular javascript, javascript hands-on, javascript with examples, javascript react node, js library\nDuring our course, you will be informed about the basics of JavaScript, Node.js and Mongo DB in detail and how to solve problems.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nIn our course, you can test what you have learned on both MAC and Windows computers. You do not need to purchase any tools or applications as free tools and platforms are used.\nDuring the course, I made sure to explain all the topics that may seem complicated to you in as simple and detailed as possible. I have used some diagrams to help you understand better.\n\n\nWhen you complete the course, you will learn;\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nFull stack web development with javascript, nodejs, mongodb\nJavascript libraries\nNodejs MongoDB\nStep-by-Step Way, Simple and Easy With Exercises\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhat is microservices architecture and how can Node.Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate. Each has a very well-defined operation and interface and can deploy on its own. In essence, it’s a way of developing modules that you can repurpose from one program or application to another. When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained. The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program. You can use Node.Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules). The beauty of microservices is that you can use the best language for the specific microservice. But where highly scalable, fast programs are needed, Node.Js would be a top contender.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our Javascript, Nodejs, MongoDB for Full Stack Web Development course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "If you want to get started with programming: JavaScript is a great first language!",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who want to learn Javascript and Javascript libraries like Nodejs and Mongodb",
        "People who want to learn Nodejs Mongodb"
      ]
    },
    {
      "title": "Mastering GSAP and CSS Animation with SVG",
      "url": "https://www.udemy.com/course/mastering-css-animation-with-svg/",
      "bio": "learn complete CSS and Complete SVG animation from the beginning",
      "objectives": [
        "Complete svg from beginner to advanced",
        "Svg Elements",
        "svg animated logo and icon",
        "Svg Filters",
        "master CSS animations, transitions and transforms",
        "CSS 3d animation",
        "CSS Keyframe Animation Effects Tutorial",
        "transition css , css animation , hover css , hover css animation , css hover transition effects , css image effects , css3 effects , css animation examples",
        "Gsap animation"
      ],
      "course_content": {},
      "requirements": [
        "If you have a knowledge of any vector graphics software like Illustrator, Then you would have benefited a lot but it is not required.",
        "You should have little experience with HTML and CSS",
        "Any text editor (Visual Studio code editor recommended)",
        "An Internet Connection"
      ],
      "description": "Join us in an immersive journey through the world of CSS animation with SVG (Scalable Vector Graphics). In this comprehensive course, you will learn how to leverage the power of CSS and SVG to create captivating, interactive, and dynamic web experiences.\nThe CSS and SVG Animation Fundamentals course is designed to provide students with a comprehensive understanding of creating dynamic and visually engaging web animations using CSS (Cascading Style Sheets) and SVG (Scalable Vector Graphics). This course is suitable for both beginners and intermediate-level web developers who want to enhance their skills in creating captivating animations for websites and web applications.\nThroughout the 8-week duration, students will learn the essential principles, techniques, and best practices of CSS and SVG animation. They will explore the various CSS properties and SVG elements necessary to bring static web content to life, adding interactivity and enhancing user experience. The course will also cover the latest industry trends and standards, ensuring students are equipped with up-to-date knowledge.\nKey Topics Covered:\nIntroduction to CSS and SVG Animation: Understanding the fundamentals of animation and the role of CSS and SVG in creating dynamic web content.\nCSS Animation Basics: Exploring CSS keyframes, transitions, and transforms to create simple animations.\nAdvanced CSS Animation: Delving deeper into advanced techniques such as animation timing functions, animation properties, and animation performance optimization.\nSVG Animation Essentials: Learning SVG basics, including shapes, paths, gradients, and filters.\nAdvanced SVG Animation: Harnessing the power of SVG to create complex and interactive animations, including morphing, masking, and responsive animations.\nIntegrating CSS and SVG Animation: Combining CSS and SVG animation techniques to create seamless and visually stunning web animations.\nResponsive Animations and Browser Compatibility: Understanding the importance of responsive design and ensuring animations work smoothly across different devices and browsers.\n\n\nCourse Benefits:\nBy the end of the course, students will have gained a solid foundation in CSS and SVG animation, enabling them to:\nCreate visually appealing and interactive web animations using CSS and SVG.\nUnderstand the principles and techniques behind effective animation design.\nOptimize animations for performance and browser compatibility.\nIncorporate animation libraries and frameworks into their projects.\nEnhance user experience by adding engaging animations to websites and web applications.\nPrerequisites:\nThis course assumes a basic understanding of HTML, CSS, and JavaScript. Familiarity with web development concepts and some experience in building web pages will be beneficial but not mandatory.\nJoin the CSS and SVG Animation Fundamentals course and take your web development skills to the next level. Unleash your creativity and captivate your audience with stunning animations.",
      "target_audience": [
        "frontend developers",
        "website designer",
        "CSS Developers",
        "UX/UI Designer"
      ]
    },
    {
      "title": "MERN Stack Portfolio Application",
      "url": "https://www.udemy.com/course/mern-stack-portfolio-application/",
      "bio": "Build a Dynamic Portfolio application using MERN Stack",
      "objectives": [
        "Colors, Heights, Widths , Flexboxes and Alignments",
        "Custom Animations using CSS , Positions (Fixed , Absolute , Relative)",
        "Responsiveness and Grid system in Tailwind CSS",
        "Tailwind CSS",
        "Components , States , Props",
        "Redux Toolkit for State management",
        "Working with the combination of Antd and Tailwind CSS",
        "Working with Node JS , Mongo DB",
        "Building multiple schemas and models to make the portfolio dynamic",
        "Complete Projects Resourses and Q/A support"
      ],
      "course_content": {
        "Introduction": [
          "Promo / Code",
          "React Setup",
          "Tailwind Setup"
        ],
        "Intro Section": [
          "Header",
          "Intro"
        ],
        "About": [
          "About Developer",
          "Skills",
          "Making Responsive"
        ],
        "Experience": [
          "Experience Part - 1",
          "Experience Part - 2"
        ],
        "Projects and Courses": [
          "Projects",
          "Courses"
        ],
        "Contact and Footer": [
          "Contact",
          "Footer"
        ],
        "Left Sidebar and Loader": [
          "Left Sidebar",
          "Full screen loader"
        ],
        "Backend Setup": [
          "Node Express Server Setup",
          "Mongo Db Node connection"
        ],
        "Adding existing data": [
          "Creating Models",
          "Adding data to mongo db"
        ],
        "Get Portfolio data to UI": [
          "Get data API",
          "Get Data UI",
          "Populate dynamic data in all sections"
        ]
      },
      "requirements": [
        "React JS",
        "Tailwind CSS Basics"
      ],
      "description": "Hi , Welcome to MERN Stack Portfolio Application\nIn this course you will be having two different parts -\nPart 1\nIn this first part we will build a static portfolio using React and Tailwind CSS. We will use following concepts from react and tailwind css to build the first part .\nColors, Heights, Widths\nFlexboxes and Alignments\nCustom Animations using CSS\nPositions (Fixed , Absolute , Relative)\nResponsiveness and Grid system in Tailwind CSS\nComponents in React\nProps states and props\nRouting\nPart 2\nIn the second we will convert the static portfolio into the dynamic portfolio. Compared to the durartion of first part , the second part duration is very high. We will complete the first part of the course in almost 2 hours. Then we will work on making the first part dynamic. We will use following concepts in second Part.\nNode Express Server Setup\nNode - Mongo Connection\nWorking with mongo db models and schemas\nBuilding Api's to make the portfolio dynamic.\nWorking with Antd UI components to build the portfolio admin panel\n\n\nWhy Portfolio\nThe importance of having a professional online presence is more important than ever, and an online portfolio will certainly increase your visibility and presence. Creating your portfolio website allows you to share and showcase your work easily with the employers you'd like to work for.\nIf an employer sees your website link in your signature or on your resume, they’ll likely click on it to see what you’ve built. Seeing you’ve taken the time to build a website featuring work samples, recommendations, previous presentations and more will be a killer first impression.\nTech Stack\nMERN is one of several variations of the MEAN stack (MongoDB Express Angular Node), where the traditional Angular.js front-end framework is replaced with React.js. Other variants include MEVN (MongoDB, Express, Vue, Node), and really any front-end JavaScript framework can work.\nTailwind CSS is basically a utility-first CSS framework for rapidly building custom user interfaces. It is a highly customizable, low-level CSS framework that gives you all of the building blocks you need to build bespoke designs without any annoying opinionated styles you have to fight to override.\nWhy Portfolio",
      "target_audience": [
        "Fullstack Developers",
        "Front End Developers",
        "Students who want to build their own dynamic portfolio"
      ]
    },
    {
      "title": "AngularJS Fundamentals and Practice",
      "url": "https://www.udemy.com/course/angularjstut/",
      "bio": "An in-depth project-based introduction to AngularJS concepts with lots of code, examples and a complete application",
      "objectives": [
        "Enable you to write professional AngularJS applications",
        "Enable you to think in AngularJS and design a modern web-app (SPA)"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course",
          "Review of Web Architecture, Web-dev History and Single Page Apps",
          "Hello, AngularJS"
        ],
        "AngularJS: Basic Concepts": [
          "Introducing Models, Views, Scopes and Controllers",
          "Scope Hierarchies,Multiple Controllers,Controller communication: Cost Calculator",
          "How does AngularJS play with the Browser: Bootstrapping, $digest, $compile, DI",
          "Introduction to Directives: Reusability, Code a directive, Passing data"
        ],
        "Understanding Scopes and different kinds of scopes": [
          "Understanding Scopes - I",
          "Understanding Scopes - II",
          "Child Scopes, scopes automatically created by directives (e.g. ng-repeat)",
          "Isolated scopes, Transclusion, binding in different scopes"
        ],
        "Programming Directives": [
          "compile, link, template properties",
          "Nested directives, @scope: Programming nested radio button directive"
        ],
        "Final Project Kick-off: Setup, Design, Directory Structure": [
          "Project Description and Directory Structure",
          "Project Setup, Third party libraries, directory structure, ng-app",
          "Setup for an SPA: Routes with ng-route and ng-view"
        ],
        "Landing Page and Dashboard: Directive/Controller communication": [
          "Bootstrap CSS and Introduction to AngularJS Services",
          "Writing an authentication service, Using LocalStorage with AngularJS",
          "Using templates with ng-include: Logging out",
          "Controller-Directive Communication: Projects Pane Directive"
        ],
        "Decoupling Directive/Controller, Callbacks: Writing the Projects Pane Directive": [
          "Separation of Responsibilities in AngularJS, '&' scope",
          "Projects Pane Directive: Adding new projects",
          "AngularJS Checkboxes, $index, $watch: Deleting and Refreshing projects",
          "Communicating between directives, ng-click, ng-if: Project Details Directive"
        ],
        "Remote calls with $http Service, Searching with AngularJS Filters, Applying CSS": [
          "$http: Writing the Weather Service, promises",
          "CSS using ng-class and Searching with AngularJS ‘filter’"
        ],
        "Unit Testing and Third Party Libraries: Karma, Jasmine, Angular UI Bootstrap": [
          "Angular UI Bootstrap Library",
          "Unit Testing using Karma, Jasmine, angular-mock.js",
          "Conclusion: 3rd Party Plugins, ng-grid, Best Practices and Helpful Resources"
        ]
      },
      "requirements": [
        "Some knowledge of JavaScript",
        "Some knowledge of web development (nice to have)"
      ],
      "description": "AngularJS is a JavaScript framework developed by Google. Front end development is now officially revolutionized with the advent of SPAs (Single Page Applications) and it is increasingly looking like AngularJS is going to be the de-facto framework of the future for building SPAs.\nThis course will not only teach you to program using AngularJS but also how to think in AngularJS and how to architect, design and test a modern web application.\nThis course is divided into 2 parts.\nThe first part focuses on getting a solid understanding of AngularJS concepts with plenty of working code examples using Plunkr.\n\nThe second half creates a comprehensive Web Application (SPA) using these concepts with special focus on Design, Architecture and testing a modern web app.\nThis is a project based course with 2 parts spanning 29 videos and over 300 minutes of content.\n- An approach of understanding AngularJS concepts\n- Follow-up with many live coding examples\n- A project that covers various components and aspects of AngularJS\n- A video dedicated to unit testing using Karma and Jasmine libraries\n- Examples using third part libraries including\n- Angular UI Bootstrap\n- Bootstrap CSS\n- Angular Local Storage library\n- Karma\n- Jasmine",
      "target_audience": [
        "Front-end developers who want to learn AngularJS",
        "Back-end developers who want to learn Front End programming with a promising framework (AngularJS)",
        "Technology enthusiasts",
        "Hobbyists with some JavaScript experience"
      ]
    },
    {
      "title": "PHP Hospital System Using CodeIgniter Framework(2025) Part 2",
      "url": "https://www.udemy.com/course/php-hospital-system-using-codeigniter-framework2020-part-2/",
      "bio": "This is the only course where complete erp software is fully developed using the most simpliest approach for very secure",
      "objectives": [
        "Be able to build any web app you want using codeigniter 2025",
        "Build fully-fledged web apps for your startup or business",
        "Build complete hospital management in codeigniter",
        "Work as a freelance codeigniter developer",
        "Craft a portfolio of web apps to apply for seniour developer jobs",
        "Learn to use PHP effectively",
        "Have a new PHP Skill that would increase income"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "1.2 How to download complete source codes and database.",
          "1.3. Welcome video and fix edit assign bed phrase"
        ],
        "2. Build Hospital Appointment": [
          "2.1. Create appointment table",
          "2.2. Create appointment Controller and Model",
          "2.3. Insert, update and delete codes for appointment",
          "2.4. Create appointment form part one",
          "2.5. Create appointment form part two",
          "2.6. Load dortor and patient with department",
          "2.7. Fix bug on select multiple with ajax",
          "2.8. Select doctor shedule with ajax",
          "2.9. Add new doctor and shedule to test ajax",
          "2.10. Fix bug and insert into appointment table",
          "2.11. List all appointment from appointment table",
          "2.12. Finetune the list appointment table",
          "2.13. Working with the edit appointment",
          "2.14. Select from appointment table",
          "2.15. Select shedule based on the id",
          "2.16. Working with department and appointment",
          "2.17. Select doctor and patient with single department id",
          "2.18. Complete appointment and test codes"
        ],
        "3. Build Hospital Prescription": [
          "3.1. Create prescription table",
          "3.2. Create prescription Controller and Model",
          "3.3. Insert, update and delete method for prescription",
          "3.4. Create prescription form part one",
          "3.5. Create prescription form part two",
          "3.6. Load more forms with javascript codes",
          "3.7. Working on the forms for perfection",
          "3.8. Declaring varriable for form input",
          "3.9. Working with the prescription array",
          "3.10. Complete the prescription insert codes",
          "3.11. Fix bugs and test insert codes",
          "3.12. Create and display all prescription page",
          "3.13. Working with the print prescription",
          "3.14. Display prescription information",
          "3.15. Display prescription information part two",
          "3.16. Complete print prescription",
          "3.17. Working with the edit prescription form",
          "3.18. Display information to the prescription form",
          "3.19. Complete editing prescription and test code"
        ],
        "4. Build Hospital Payment": [
          "4.0. Create invoice table",
          "4.1. Create payment table",
          "4.3. Preparing the invoice form part one",
          "4.4. Preparing the invoice form part two",
          "4.5. Working with the payment model",
          "4.6. Quick fix bracket bugs",
          "4.7. Select from invoice table",
          "4.8. Working with edit invoice form",
          "4.9. completing the edit invoice form",
          "4.10. Test code and working with the view invoice",
          "4.11. Function to calculate invoice amount",
          "4.12. Preparing print invoice page",
          "4.13. Diaplay invoice data part one",
          "4.14. Diaplay invoice data and test print button"
        ],
        "5. Build Hospital Medicine": [
          "5.1. create medicine table, model and controller",
          "5.2. Working witht the category form",
          "5.3. Complete medicine category",
          "5.4. Create medicine table in phpmyadmin",
          "5.5. Code to add,update and delete medicine",
          "5.6. Prepare medicine form page",
          "5.7. Insert into medicine table",
          "5.8. Prepare update medicine form part one",
          "5.9. Round up medicine page and test code"
        ],
        "6. Working With System Language": [
          "6.1. Create language method in setting controller",
          "6.2. Create method in model for language",
          "6.3. prepare the form for managing language",
          "6.4. Create column with php code in database",
          "6.5. Insert into language table and test the translation",
          "6.6. Select language from language table",
          "6.7. Select language in general setting page part one",
          "6.8. complete the display language in general setting page",
          "6.9. Working with editing language phrase",
          "6.10. Workiing with editing language phrase part two",
          "6.11. Working with editing language phrase part three",
          "6.12. Working with editing language phrase part four",
          "6.13. Working with the textfield to edit phrase",
          "6.14. Complete the edit phrase form",
          "6.15. Complete the ajax that update phrase",
          "16. Fix bugs, complete section and translate"
        ],
        "7. Working With Database Backup": [
          "7.1. Create backup database method",
          "7.2. Loading database utilities class in model",
          "7.3. Delete database table codes and round up section"
        ],
        "8. Working the dashboard data, footer, header and others": [
          "8.1. Working with footer and page information",
          "8.2. Working with the dashboard part one",
          "8.3. Working with the dashboard part two",
          "8.4. Working with the dashboard part three",
          "8.5. Working with the dashboard part four",
          "8.6. Select recently added patient",
          "8.7. Select recently added donor",
          "8.8. Working with the header language part one",
          "8.9. Working with the header language part two",
          "8.10. Working with the header language part three",
          "8.11. Select the active language on the list ones",
          "8.12. Change language with ajax and session part one",
          "8.13. Change language with ajax and session part two",
          "8.14. Complete language selection with ajax",
          "8.15. Advance language selection with session and ajax"
        ],
        "9. Working with Hospital Expenditure": [
          "9.1. Add expense and notification to sidebar",
          "9.2. Working with expense category part one",
          "9.3. Complete expense category",
          "9.4. Add more columns in payment table",
          "9.5. Working with the expense payment",
          "9.6. Prepare expense html form",
          "9.7. Prepare insert expense data in payment model",
          "9.8. Insert expense to the payment table",
          "9.9. Selecting from payment where payment type is expense",
          "9.10. Complete and round expense"
        ],
        "10. Working with Dashboard Chart Using Amcharts": [
          "10.1. selecting charts from amcharts website",
          "10.2. Arranging the charts in our app",
          "10.3. Selecting from payment table to charts",
          "10.4. Trying to fix date issue on the chart",
          "10.5. Switching to another chart with image",
          "10.6. Complete and round chart dashboard"
        ]
      },
      "requirements": [
        "Student should have enrolled for the part one of this course.",
        "PHP version 7+ is a must",
        "Little knowledge of PHP, though not neccessary becase I'll teach you everything you need to know",
        "Little knowledge of CSS will be an advantage",
        "Zeal to learn PHP Framework",
        "Computer system - windows/mac",
        "I'll walk you through, step-by-step how to setup codeigniter"
      ],
      "description": "Building dynamic websites is not an easy challenge and requires time and effort dedicated to coding every bit and piece of the website, which is why anytime there is a new tool that promises to ease the woes of coding, developers always jump at the chance to try it.\nCodeIgniter is a simple open-source framework that makes it the coding tasks easier by providing a faster way to set up a PHP website from the ground-up. This tool with a small framework ensures that developers can design websites that are light, fast and dynamic.\nSo, for any developer that wants to become a server-side master, this is a tool that they should definitely have in their toolkit. But, it’s not always easy to find a course that is clear and concise and targets exactly what you are looking for!\nThis is why we have designed this course with an aim teach you everything you need know about CodeIgniter with real world project (Building Standard and Most School Management System) using a no-fluff and clear approach at the topic at hand, this tutorial will breakdown CodeIgniter into simple and easy to learn videos so as to be able to build any real world application on CodeIgniter.\nAt the end of this course, you will have not only learnt the CodeIgniter framework, but you will actually be able to start building your own projects from scratch. In addition to knowledge, this course will also give you the practical hands-on experience and the confidence to start coding your own websites by building school system.\nThe course will start at the very beginning with a detailed introduction into the CodeIgniter framework, from there moving on to installing the framework. From there you will become familiar with the framework, and start building your own school system.\nJoin us today as we learn CodeIgniter together by building real world software and be free from some authors who claim to teach you a particular programming language but only teach you basis and some copy and paste projects which at the end cannot take you to anywhere.\nFrom Beginner to Expert CodeIgniter Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. The course is practical oriented and it is a not waste time course as we learn by practical.\nSo by the end of the course, you’ll completely understand:\nCodeIgniter framework to level of building your own software especially hospital system.\nHow to use Ajax, jQuery effectively\nBuild complete hospital management system software\nHow to create secure Login for Code\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nBuild meaningful software quickly\nDon’t waste your time\nDon’t waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can’t understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it.\nWho is this course for:\nIf you have never programmed before, then take this course to learn CodeIgniter\nIf you know how to code, but are new to CodeIgniter, then take this course to build web Apps.\nIf you are a CodeIgniter developer, then take this course to see how much time you can save building real world software – Hospital Management System.\nIf you’ve tried CodeIgniter before, then take this course to get a comprehensive curriculum that covers all the important aspects of CodeIgniter development\nEntrepreneurs Who Want to Build Web Apps with Single Codebase\nManagers and Program Managers Who Want to Learn How to Build Complete Hospital Management System.\nAnyone wanting to learn to code in a practical way\nAnyone who wants to kick start a career or hobby developing apps\nThis is the only course on Udemy where students can drop their desired features and both the students and the instructor will develop it together. This is also a course where more features will be added by the instructor and each section will be released everyday.\nJoin us NOW as we build this complete hospital software together using one of the best frameworks - CodeIgniter!!!",
      "target_audience": [
        "Beginner developer want to learn more about codeigniter",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build complete hospital management system",
        "Developers who want to be codeigniter expert.",
        "Beginner Codeigniter developers curious about how to hospital school system",
        "If you need hospital software to run your clinic"
      ]
    },
    {
      "title": "Using MODX CMS to Build Websites: Intermediate Course",
      "url": "https://www.udemy.com/course/using-modx-cms-to-build-websites-intermediate-course/",
      "bio": "Discover the creative power of MODX, a free open source CMS, and smash the shackles of Wordpress, Joomla and Drupal.",
      "objectives": [
        "Build a blog",
        "Learn more about input and output filters for MODX tags",
        "Get the low-down on data collections from online forms",
        "Create membership pages",
        "Harness the power of MODX"
      ],
      "course_content": {
        "Introduction To The Course": [
          "Course Goals",
          "Getting Setup"
        ],
        "MODX Tags": [
          "Understanding MODX Tags",
          "Input and Output Filters (Output Modifiers)",
          "Tags And Filters"
        ],
        "Setting Up A Blog On Your Website Using MODX Articles": [
          "The Blog Front Page: Article Summaries",
          "Exercise: Create The Site Menu Using Wayfinder",
          "Structuring The Blog Front Page",
          "Dynamic Images With Template Variables",
          "Categorising Blog Posts",
          "Archiving Blog Posts",
          "Creating A Latest Posts List",
          "Setting Up Pagination",
          "A Page For The Indivudual Blog Post",
          "Troubleshooting",
          "Enabling Comments For Your Blog Posts",
          "Managing Comments And Associated Emails",
          "Adding Recaptcha For Your Blog Comments"
        ],
        "Extending Forms To Collect More Data": [
          "Custom Forms: Checkboxes, Dropdowns And Radio Buttons."
        ],
        "User Registration": [
          "User Registration",
          "Creating A Membership Page 1",
          "Creating A Membership Page 2"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Students should know how to download MODX, host and install it (all covered in \"Using MODX CMS to Build Websites: A Beginner's Guide\")",
        "Students should know how to use MODX resources, templates, chunks and tags (all covered in \"Using MODX CMS to Build Websites: A Beginner's Guide\")"
      ],
      "description": "Extend your knowledge of MODX, build on the lessons of the beginner's course to further your understanding and create another responsive website. This time you will build a fully functional blog, based on a free template, and add user management functionality.\nDiscover the power of MODX and add another website for your portfolio.\nDiscover the power of MODX tags\nCreate a fully functional blog\nLearn front end and back end user management\nExtend user input forms to accept radio buttons, check-boxes and drop-downs\nStep-by-step instructions to use the capabilities of MODX to unleash your creative potential.\nEverybody wants a blog, it's the best way to help your website get links and hence rise in the search engine rankings. The course guides you through the process of setting up a custom blog using MODX.\nMODX tags are explained in more detail so you can unlock their potential.\nMaybe you need to create a membership site? We look closely at setting up functions for user to log in to personalised pages.\nWhat feedback do you need from the website users? The course shows you how to capture data in all the possible form input types.\nEvery business needs a website. With MODX you can build brilliant bespoke websites for clients. I have made a living, working from home, doing this for the last five years. With MODX skills you could too.",
      "target_audience": [
        "Those who have completed \"Using MODX CMS to Build Websites: A Beginner's Guide\"",
        "Those already familiar with MODX but who need some more practical step by step tutorials"
      ]
    },
    {
      "title": "Create a document search system in Laravel",
      "url": "https://www.udemy.com/course/laravel-document-search/",
      "bio": "A document upload and search engine in Laravel.",
      "objectives": [
        "How to create a document search engine in Laravel",
        "Laravel Scout",
        "Meilisearch",
        "Refactoring code to Actions",
        "The Design Strategy Pattern",
        "Laravel Livewire"
      ],
      "course_content": {
        "Project setup": [
          "Project scaffolding and set-up",
          "Migrations",
          "Building the UI"
        ],
        "Document Uploading": [
          "Creating the upload process",
          "Refactoring to actions",
          "Displaying the documents to the users"
        ],
        "The strategy pattern": [
          "Refactoring to the strategy pattern"
        ],
        "Setting up the search engine": [
          "Installing Meilisearch",
          "Hooking our front-end up to our search engine"
        ],
        "Refactoring to blade components": [
          "Refactor our documents table to a blade component"
        ],
        "Finishing the rest of the functionality": [
          "Downloading and deleting files",
          "Adding PDF upload support using the strategy pattern"
        ],
        "Refactoring to Laravel Livewire": [
          "Laravel Livewire Pagination",
          "Live search using Livewire",
          "Confirm on delete modal using Livewire"
        ],
        "Adding gates to prevent unauthorised deleting": [
          "Creating a gate and applying it to our delete method"
        ]
      },
      "requirements": [
        "A basic understanding of Laravel",
        "A working Laravel development stack",
        "A working search engine compatible with Laravel Scout such as Meilisearch, Elasticsearch, TNTSearch or Algolia"
      ],
      "description": "This is a slightly more advanced course for Laravel, you should already know the basics of Laravel before starting this course. Source code is provided, simply click the 15th video and view the 'Resources' dropdown to download the project.\nThe system we are going to create is common in corporate workplaces. It allows users to upload documents to be made searchable and sharable with other users of the system.\nThis is a perfect project to try out some more in-depth techniques such as using Meilisearch with Laravel Scout, refactoring to actions, using the strategy pattern and Laravel livewire.\nI will guide you from the very start using Laravel Breeze as a starter template and I will cover every step of the process in detail.\nYou will learn the following techniques in this course:\nLaravel Breeze\nLaravel Sail\nLaravel Scout\nMeilisearch\nBlade Components\nUsing Actions\nThe Strategy Pattern\nLaravel Livewire\nTailwind\nI will guide you through the basics such as routing, controllers and pagination but won't be going in-depth on those topics. You can check out my YouTube channel if you would like to learn the basics first for free. The primary focus of this course is to teach you advanced techniques that entry-level courses usually don't cover.\nThis course uses free code snippets from TailwindUI. You can build your frontend in any technology you like this course isn't dependent on any imparticular. However, I recommend you first follow along using tailwind and the free TailwindUI components first before trying it with another frontend framework.",
      "target_audience": [
        "Someone who already knows the basics of Laravel and would like to create a fully working application using some advanced techniques"
      ]
    },
    {
      "title": "jQuery API Exercise Youtube Data WebSite",
      "url": "https://www.udemy.com/course/learn-jquery-ajax/",
      "bio": "AJAX connect to YouTube API get JSON data use it within your applications",
      "objectives": [
        "Build a web application that uses AJAX",
        "Connect and use data from YouTube API"
      ],
      "course_content": {
        "Introduction to jQuery AJAX": [
          "Introduction to using AJAX and getting JSON data",
          "Developer Setup and Environment",
          "web application setup",
          "Updated V3 Key URL",
          "YouTube Developer Key",
          "Bring in jQuery AJAX",
          "Source Code 3",
          "Loop each Returned Video",
          "Use JSON feed data",
          "Source Code 5",
          "Output Results from API",
          "Customize Results for API",
          "Source Code 7",
          "Tweaks and Updates",
          "Source Code 8",
          "Customize Code jQuery",
          "Source Code 9",
          "Course Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Supplementary Resource Collection: Access to Downloads"
        ]
      },
      "requirements": [
        "CSS, HTML and some basic JavaScript",
        "Basic understanding of APIs",
        "JavaScript Object Experience"
      ],
      "description": "Get DATA from YouTube and use it in your own web applications\nPerfect course to practice and learn more about jQuery AJAX and JSON.\nBecome more familiar with jQuery and working with what AJAX is and how you can use it to get JSON data.  In this project we show you how to connect to the YouTube Developer API and pull in video data and information.  This API is perfect to practice and get more comfortable with APIs.  There is so much data and its fun to work with.\nSource Code is included to get you started quickly.\nPlease note this course is focused on an EXERCISE building an application from scratch using jQuery.  Prerequisites for this course include HTML, CSS, JavaScript DOM and jQuery.\nThe objective is to allow students to practice and explore what can be done\nCourse is taught by an instructor who is passionate about jQuery and ready to help you learn more about using jQuery.\nJoin now and see the amazing applications you can build with jQuery.\nBy the end of the course you will have the knowledge to build your own version of the application and make even better ones ;)",
      "target_audience": [
        "Anyone who wants to learn more about jQuery",
        "Anyone who wants to practice connecting to APIs",
        "Web developer",
        "Anyone who wants to learn how to use JSON data from YouTube"
      ]
    },
    {
      "title": "Master React JS with 10 Hands-On Projects",
      "url": "https://www.udemy.com/course/master-react-js-with-10-hands-on-projects/",
      "bio": "Master in React JS by building 10 projects with React Basics and Intermediate Concepts",
      "objectives": [
        "React JS",
        "JavaScript",
        "React Hooks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction / Source Code"
        ],
        "Counter": [
          "Part - 1",
          "Part - 2",
          "Part - 3",
          "Part - 4"
        ],
        "Calculator": [
          "Part - 1",
          "Part - 2",
          "Part - 3",
          "Part - 4"
        ],
        "Form Validation": [
          "Part - 1",
          "Part - 2",
          "Part - 3",
          "Part - 4",
          "Part - 5"
        ],
        "Authentication": [
          "Part - 1",
          "Part - 2",
          "Part - 3"
        ],
        "Navigation Bar": [
          "Part - 1",
          "Part - 2",
          "Part - 3",
          "Part - 4"
        ],
        "Todo List": [
          "Part - 1",
          "Part - 2",
          "Part - 3",
          "Part - 4"
        ],
        "Face Book": [
          "Part - 1",
          "Part - 2",
          "Part - 3",
          "Part - 4"
        ],
        "Covid Stats": [
          "Part - 1",
          "Part - 2",
          "Part - 3"
        ],
        "Meals App": [
          "Part - 1",
          "Part - 2"
        ]
      },
      "requirements": [
        "React Basics"
      ],
      "description": "React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.\nDeclarative views make your code more predictable and easier to debug.\nReact is a frontend library, which runs in the browser. Since React and Angular are purely client-side libraries made up of JavaScript files, any old HTTP server can send them to users – PHP inside Apache, PHP inside Nginx, plain Apache/Nginx, Java Tomcat, Rails inside Passenger, and yes, Node. js.\nReact JS is an open-source, component-based Javascript library, which is used to build UI specifically for single-page applications. Javascript is a programming language used to create dynamic elements on the website or web app. ... Almost all modern browsers support Javascript.\nToday, there are over 220,000 live websites using React. Not only that, but industry giants like Apple, Netflix, Paypal, and many others have also already started using React JS in their software productions.\nWith so many companies using React JS including some of the top brands in the whole world, React must be offering some extraordinary benefits, right?\nOf course, it does.\nThe better question is…\nWhat are the key benefits of React JS that encouraged so many businesses and popular brands to use it?",
      "target_audience": [
        "React Developers"
      ]
    },
    {
      "title": "How to create responsive HTML and CSS in Moodle content",
      "url": "https://www.udemy.com/course/the-ultimate-guide-for-content-creation-in-moodle/",
      "bio": "How to make your Moodle content stand out from the crowd. Make clean and responsive content for your HTML Moodle course.",
      "objectives": [
        "How to create responsive content for the Moodle Learning Management system",
        "How to import content from Word or Google Docs",
        "How to use Bootstrap to create responsive content",
        "How to install and use a plugin called Generico to create templates",
        "How to add responsive template driven videos",
        "How to install the REMUI theme to Moodle"
      ],
      "course_content": {
        "Introduction": [
          "About the course",
          "Prerequisites for this course"
        ],
        "Pre flight checks and installs": [
          "Font Awesome and Bootstrap test",
          "Installing the Generico plugin",
          "Test the Generico plugin",
          "Installing the Generico templates"
        ],
        "Course creation": [
          "Creating a course",
          "Preparing your content for Moodle",
          "Creating the course structure",
          "Adding the course structure to Moodle"
        ],
        "Content extraction": [
          "Preparing the text content for Moodle",
          "Adding text content to your Moodle pages",
          "Bulk image extraction from the document",
          "Adding images to your Moodle pages"
        ],
        "Generico plugin": [
          "Using the Generico template plugin",
          "Generico activity template test",
          "Generico activity template in your course",
          "Generico click to view template",
          "Generico click to view template in your course",
          "Embed YouTube using the Generico template",
          "Embed YouTube using the Generico template in your course"
        ],
        "Font Awesome": [
          "Introduction to Font Awesome",
          "Font Awesome in your course"
        ],
        "Bootstrap responsive design": [
          "Responsive design",
          "Introduction to Bootstrap",
          "Responsive alert using Bootstrap",
          "Adding a card using Bootstrap",
          "Combining a card with Bootstrap responsive columns"
        ],
        "Inline CSS": [
          "Tables using Bootstrap",
          "Inline CSS",
          "HTML CSS Arrow Table using Inline CSS",
          "HTML CSS Arrow Table variation using Inline CSS"
        ],
        "Theme": [
          "How to install the RemUI theme"
        ],
        "Thank you": [
          "Thank you from Chris Richter"
        ]
      },
      "requirements": [
        "Access to the Moodle Learning Management system as a content creator or administrator",
        "Access to Moodle 3.5.x, 3.6.x, 3.7.x,"
      ],
      "description": "In this course you will learn how to add various content components to the Moodle Learning Management System. You will learn how to make the content more responsive so that it is viewable on mobile devices, tablets and desktop devices.\nYou will learn how to import content from a Word document as clean HTML into Moodle.\nYou will also learn how to make templates and use HTML and CSS to quickly make changes to your content and make it much easier to manage and create quality looking and highly functional content.\nYou will learn quite a lot about HTML and CSS and even more about how you can use Moodle to create and manage content in a much more efficient manner.\nThis course does assume that you have administrator access to Moodle or at least access to an administrator that can install a plugin, templates and create courses for you.\nMany Moodle themes are designed to be more responsive but sometimes the content that is created inside Moodle is far from responsive and suffers mainly because content developers are not taught the different ways they can develop content for Moodle.\nDuring the course you will discover tips and hints to create better content for Moodle.",
      "target_audience": [
        "Teachers that develop training materials for the Moodle Learning Management System",
        "Moodle content developers that create training materials for the Moodle Learning Management System",
        "Moodle administrators that want to improve the look and feel of Moodle"
      ]
    },
    {
      "title": "Build a TodoList Fast with React and ASP.NET Core API",
      "url": "https://www.udemy.com/course/build-a-todolist-fast-with-react-and-aspnet-core-api/",
      "bio": "Learn to build a Full Stack ASP.NET Core and React Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with ASPNET Core",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Entity Framework Core ORM",
        "Learn to consume JSON with React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Disclaimer"
        ],
        "Create ASP.Net Core API": [
          "Install DotNet Core 6",
          "Install Visual Studio and SQL Server",
          "Create a SQL Server Database",
          "Create ASP.Net Core API",
          "Add Entity Framework Core Dependencies",
          "Add Database ConnectionString",
          "Add ASP.NET Core DB Context",
          "Run ASP.NET Core Entity Framework Core Migrations",
          "Create ASP.NET Core Todos Controller",
          "Get Todos Entity Framework Core",
          "Create Todos Entity Framework Core",
          "Update Todos Entity Framework Core",
          "Delete Todos Entity Framework Core",
          "Run ASP.NET Core Restful API"
        ],
        "Create React Todo Front End": [
          "Create React Todo Front End",
          "Build Project Structure",
          "Build Todo Service Part 1",
          "Build Todo Service Part 2",
          "Create Todo Form Part 1",
          "Create Todo Form Part 2",
          "Create Todo Form Part 3",
          "Build Todo Item Part 1",
          "Build Todo Item Part 2",
          "Build TodoTab",
          "Create TodoList State",
          "Create React Hooks to Refresh App",
          "Finish TodoList",
          "Bonus!"
        ]
      },
      "requirements": [
        "Understand basic C#",
        "Have Visual Studio Installed"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use ASPNet Core and React. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, C#, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact Hooks\nReact Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nASPNet Core\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React and ASPNet Core.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "Bootstrap 4 Crash Course: Introduction to Building Websites",
      "url": "https://www.udemy.com/course/bootstrap-4-crash-course-introduction-to-building-websites/",
      "bio": "Discover the possibilities of the new Bootstrap 4 Beta release - create and develop a responsive website from scratch!",
      "objectives": [
        "Build responsive websites from scratch using the Bootstrap 4 framework for rapid web development",
        "Code and develop responsive landing pages for any type of product",
        "Feel comfortable using Bootstrap 4 for developing websites and various web components",
        "Edit and customize Bootstrap 4 themes to meet any clients' needs",
        "Adaptive and available instructor to answer your questions 24/7",
        "You Get My E-Book \"75+ Must Use Resources for Web Designers & Developers\" for FREE!"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Getting Started: Why Bootstrap 4?",
          "The Power of Bootstrap: Demonstration",
          "Introduction: What are You Going to Learn Throughout the Course?",
          "How to Ask for Help If You're Stuck?",
          "Join the Official Facebook Group Here!"
        ],
        "Quick Environment Setup & Project Files": [
          "Setup: Installing a Code Editor of Your Choice",
          "Installing Bootstrap 4 and Setting up Our Working Environment",
          "Referencing the Files & Writing the HTML Skeleton",
          "Download the Project Files Here!",
          "Download Your Copy of the E-Book Here!"
        ],
        "Bootstrap Introduction and Hands-On Practices": [
          "Pre-Start: What is Bootstrap 4?",
          "Whats New is the Latest Beta Version of Bootstrap 4?",
          "Behind the Scenes: Columns and Rows Explained",
          "Bootstrap's Website Structure"
        ],
        "Part 1: Navbars, Dropdowns and Jumbotrons": [
          "Creating the Navigation Bar (Navbar)",
          "Dropdown Menu Creation + Searchbox w/ Button",
          "Creating the Jumbotron & Playing with Gradients",
          "Section Refresher + Wrap Up"
        ],
        "Part 2: Cards and Badges": [
          "Creating 3 Different Cards + Attaching a Badge"
        ],
        "Part 3: Carousels / Sliders and Featured Section": [
          "Creating the HTML of the Carousel and Making it Fully Functional",
          "Building the Featured Section (Card Header + Card Footer)"
        ],
        "Part 4: Progress Bars, Modals and Buttons": [
          "Creating the Trigger Button for the Modal",
          "Creating the Modal Itself (Header, Body, Footer) + Progress Bars"
        ],
        "Part 5: Forms": [
          "Building the From with HTML and Bootstrap Classes",
          "Adding Yellow Shadow to the Form with CSS3"
        ],
        "Responsive Menu Trigger + Responsiveness + Customization to Any Element or Theme": [
          "Creating the Responsive Menu Trigger",
          "Making the Website Responsive [In-Depth Analysis]",
          "Installing, Using and Customizing an Official Bootstrap 4 Theme"
        ],
        "Get Your Hands Dirty: Explore Bootstrap 4 Options and Create a Landing Page": [
          "Build a Website / Landing Page Yourself"
        ]
      },
      "requirements": [
        "Minimal HTML/CSS knowledge is suggested but not required",
        "A code editor of your choice (Brackets in my case)",
        "A desire to learn, implement and improve!"
      ],
      "description": "Hi there, I'm Filip, a top-rated and best-selling Udemy instructor and I want to thank you for showing interest in my Bootstrap 4 Crash Course. Below is a complete breakdown of what you're going to learn throughout this course. Lets start the journey.\n- GENERAL OVERVIEW: This 3-hour, intensive and extensive crash course will have you completely set up and ready to build responsive websites, landing pages and templates with the very new Bootstrap 4 Beta framework. I will demonstrate the power of the Bootstrap library, we'll set up the environment together (Installation of Bootstrap + Code Editor), we'll take a look inside the core principles of Bootstrap 4 (rows & columns) and even then, once you're familiar with the basics, we'll start building the website from scratch.\n- COMPONENT-BASED COURSE! This course combines a total of 10 creative components - each built from scratch while I'm showcasing the complete process behind building even the smallest details. Here's a list of all of the components that we'll be building throughout this crash course.\n- COMPONENTS AND PROJECTS TAUGHT: Let me introduce you to the 10 components that we'll be building throughout the course:\nNavigation Bars: A complete navigation bar built from scratch that's responsive for all screen sizes and looking slick and modern.\nDropdown Menus: Working Dropdown menus to showcase more options whenever we click on the parent list-item/link.\nJumbotrons: Hero Sections to display important information are called Jumbotrons in Bootstrap 4. We'll be using one in our course.\nCards and Badges:  Many different styles for Bootstrap 4 cards to display information in clean manner, alongside Badges to display important information about a particular span.\nSliders / Carousels: Responsive, Modern and Clean Sliders are a must nowadays. Learn how to build one in no time thanks to Bootstrap 4 awesomeness.\nProgress Bars: Progress Bars are a cool way of displaying metrics in a visually appealing way. Using divs and custom data attributes, creating colorful and fun progress bars has never been easier.\nModals and Buttons: Modals are modern way of showing additional content without interfering with the initial design. Learn how to build these in this crash course!\nForms: Forms are always the most important part of the website as it allows people to contact you. Don't miss the designing of the Bootstrap 4 awesome responsive forms!\n- FROM 10 COMPONENTS TO A FULLY FUNCTIONAL WEBSITE: We will combine these 10 components into a fully functional, responsive, modern website that can be used as a landing page for an app, firm, company or product showcase website. We're also writing custom CSS media queries (very few, Bootstrap is taking care of this for us!) to make the website responsive. Also, we're following design trends in order to make our website look modern, clean and minimalistic.\n- FINAL ASSIGNMENT:  You'll be given a final assignment that will put your skills to the test. You'll create a website by yourself with the skills gained in this course. Feel free to use Google or any of the resources I've taught you during the course. Bootstrap 4 documentation is also available at your fingertips. Create something beautiful and share it, firstly with me, then with your fellow students and the whole world!\n---------------------------\n\n5 MORE BONUSES WITH ENROLLING INTO THE COURSE:\nGET MY E-BOOK FOR FREE: \"75+ Must Use Resources for Web Developers & Designers\" is a book I've written especially for my students. Its supposed to be your ultimate guide when it comes to finding web resources like stock photos and videos, mockups, PSD templates, icon packs, fonts, typography, design inspiration and much more!\nACCESS TO A FACEBOOK GROUP: My students are granted access to a completely private Facebook group where we discuss web design and development topics, share knowledge and help eachother with bugs and issues. You can also contact me personally there, as well.\nMY PERSONAL FEEDBACK ON YOUR FINISHED WEBSITE: Once you've completed the course and the website you developed is ready, I will be very glad to take a look at it and give you some feedback and thoughts. Feel free to message me in the student chatroom and we'll discuss your website in detail!\nCOMPLETE SUPPORT WITH BUGS/ISSUES: I will be available 24/7 for your questions and queries regarding this course. If you're stuck, facing a problem or have a bug somewhere in your code, I'll be glad to personally inspect your code and fix the error in a timely manner. Just post a discussion in the Q&A section and I'll be there!\n\n\nWhat are you waiting for? Click the \"ENROLL NOW\" button and I can't wait to see you inside!",
      "target_audience": [
        "Aspiring developers who want to get introduced to the latest version of Bootstrap 4",
        "Designers and developers looking to build responsive websites from scratch",
        "Beginner developers who want to get started building websites quickly",
        "Don't take this course if you're experienced Bootstrap developer"
      ]
    },
    {
      "title": "Web Development for beginners: HTML | CSS | JavaScript",
      "url": "https://www.udemy.com/course/web-development-for-beginners-html-css-javascript/",
      "bio": "Become a web developer using: HTML | CSS | JavaScript | PHP | WordPress",
      "objectives": [
        "Create webpages with HTML",
        "Apply styling to Webpages with CSS",
        "Make web pages interactive with JavaScript",
        "Create website with PHP",
        "Create websites with Wordpress",
        "Add videos to webpages",
        "Add images to web pages"
      ],
      "course_content": {
        "Essential Web Development Tools": [
          "Introduction",
          "Text Editors",
          "Please Read ( Note on Text Editors)",
          "Installing Visual Studio Code Text Editor",
          "Installing Atom Text Editor",
          "Web Browsers",
          "The web and internet"
        ],
        "Getting Started": [
          "Planning your website",
          "Sketching your website design",
          "Choosing your assets",
          "Creating files and folders"
        ],
        "Creating content with HTML": [
          "What is HTML",
          "Anatomy of an HTML Element",
          "Basic structure of an HTML Document",
          "Creating a basic HTML document structure: Part 1",
          "Creating a basic HTML document structure: Part 2",
          "Creating a basic HTML document structure: Part 3",
          "Viewing Source Code",
          "HTML Attributes",
          "Marking up Text",
          "Creating Links",
          "HTML Comments"
        ],
        "Styling Web Page Content with CSS": [
          "What is CSS",
          "Ways to apply CSS",
          "Styling multiple properties",
          "Styling multiple elements",
          "Modifying CSS",
          "CSS Basic Selectors",
          "CSS Comments",
          "CSS Box Model",
          "CSS Margin and Padding Property",
          "Changing background color",
          "CSS Border Property",
          "CSS Positioning",
          "CSS Display Property",
          "CSS Font Property",
          "Google Fonts"
        ],
        "Creating Interaction with JavaScript": [
          "What is JavaScript",
          "Where to place JavaScript",
          "JavaScript Variables",
          "Variable Naming Convention",
          "Arrays",
          "Data Types",
          "Mixing data types",
          "Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Operator precedence",
          "String Operators",
          "Comparison Operators",
          "Logical Operators",
          "Conditional Statements",
          "Functions",
          "Comments",
          "JavaScript Events",
          "Adding Image to web page",
          "Adding Personal Welcome Message to a webpage"
        ],
        "Setting Up PHP Development Environment": [
          "What is PHP",
          "Installing PHP",
          "XAMMP Control Panel"
        ],
        "PHP Fundamentals": [
          "PHP Syntax",
          "PHP Comments",
          "PHP Data Types",
          "Examples of PHP Data Types",
          "PHP PRINT | ECHO Statements",
          "PHP Variables",
          "Creating Variables",
          "Variable Scopes",
          "PHP Local Variable Scope",
          "PHP Global Scope",
          "PHP Static Variable Scope",
          "PHP Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "incremental and decremental operator",
          "Logical operators",
          "String Operators",
          "Conditional Statements",
          "if statements",
          "if else statements",
          "if else if else statements",
          "Switch Statements",
          "PHP Loops",
          "While Loops",
          "DO While Loops",
          "FOR Loops",
          "Foreach Loops",
          "PHP Functions",
          "Function Arguments",
          "Date Functions",
          "Date Functions: Part 2",
          "STRING Functions",
          "String Functions: Part 2",
          "PHP Arrays",
          "Indexed Arrays",
          "Associative Arrays",
          "Multi dimensional Arrays"
        ],
        "Build a mini website with PHP": [
          "What we will build",
          "Using PHP Include",
          "Creating the website: Part 1",
          "Creating the website: Part 2",
          "Creating the website: Part 3"
        ],
        "Installing WordPress": [
          "What is Wordpress",
          "Installing WordPress locally",
          "Accessing WordPress locally",
          "Bitnami Manager",
          "Shared Hosting and Domain Name",
          "Getting Domain Name and Hosting",
          "Changing HostGator password",
          "Installing WordPress in shared hosting",
          "How to login | Logout of WordPress",
          "How to change WordPress Password",
          "Post Installation Emails"
        ],
        "Create a Business or Personal Website with WordPress": [
          "What we will create",
          "WordPress Themes",
          "Changing WordPress Themes",
          "WordPress Plugins",
          "Creating a Logo",
          "Adding logo to website",
          "Getting images",
          "Adding images to slider",
          "What are Widgets",
          "Exploring Widgets",
          "Adding gallery to website",
          "Adding social icons to website",
          "Adding video to webpage",
          "Editing Permalinks",
          "Creating blank web pages",
          "Creating a menu",
          "Adding content to pages: Part 1",
          "Adding content to pages: Part 2",
          "Adding contact form and google maps",
          "Changing font properties",
          "Adding Links"
        ]
      },
      "requirements": [
        "No web development experience required."
      ],
      "description": "HTML (Hypertext Markup Language) is the code that is used to structure a web page and its content. For example, content could be structured within a set of paragraphs, a list of bulleted points, or using images and data tables. As the title suggests, this article will give you a basic understanding of HTML and its functions.\nHTML is a markup language that defines the structure of your content. HTML consists of a series of elements, which you use to enclose, or wrap, different parts of the content to make it appear a certain way, or act a certain way. The enclosing tags can make a word or image hyperlink to somewhere else, can italicize words, can make the font bigger or smaller, and so on.\nCSS (Cascading Style Sheets) is the code that styles web content. CSS basics walks through what you need to get started. We'll answer questions like: How do I make text red? How do I make content display at a certain location in the (webpage) layout? How do I decorate my webpage with background images and colors?\nLike HTML, CSS is not a programming language. It's not a markup language either. CSS is a style sheet language. CSS is what you use to selectively style HTML elements. For example, this CSS selects paragraph text, setting the color to red:\nJavaScript is a programming language that adds interactivity to your website. This happens in games, in the behavior of responses when buttons are pressed or with data entry on forms; with dynamic styling; with animation, etc.\nJavaScript (\"JS\" for short) is a full-fledged dynamic programming language that can add interactivity to a website.\nJavaScript is versatile and beginner-friendly. With more experience, you'll be able to create games, animated 2D and 3D graphics, comprehensive database-driven apps, and much more!\nJavaScript itself is relatively compact, yet very flexible. Developers have written a variety of tools on top of the core JavaScript language, unlocking a vast amount of functionality with minimum effort. These include:\nBrowser Application Programming Interfaces (APIs) built into web browsers, providing functionality such as dynamically creating HTML and setting CSS styles; collecting and manipulating a video stream from a user's webcam, or generating 3D graphics and audio samples.\nThird-party APIs that allow developers to incorporate functionality in sites from other content providers, such as Twitter or Facebook.\nThird-party frameworks and libraries that you can apply to HTML to accelerate the work of building sites and applications.\nPHP is a general-purpose scripting language geared towards web development.\nWordPress is a free, open-source website creation platform",
      "target_audience": [
        "Beginner web developers"
      ]
    },
    {
      "title": "JavaScript User Authentication Login Script (JWT)",
      "url": "https://www.udemy.com/course/javascript-user-login-authentication-script/",
      "bio": "Create a fully functonal authentication system which you can add to any website using PHP, MySql and JavaScript",
      "objectives": [
        "Learn modern JavaScript using practical examples",
        "Implement modern working authentication system with the help of web tokens",
        "How concepts such as LocalStorage, JSON, Promises, Fetch, Prepared Statements and many more work in practice."
      ],
      "course_content": {},
      "requirements": [
        "You should have basic JavaScript / PHP / MySQL knowledge",
        "Mozilla Firefox / Chrome browser"
      ],
      "description": "Tired of outdated PHP sessions? This course provides a comprehensive, hands-on approach to building a robust, secure, and scalable authentication system using JavaScript, PHP, MySQL, and the power of JSON Web Tokens (JWT).\nYou'll learn to replace traditional session-based authentication with a modern, token-based system, improving security and scalability for your web applications. Through gradual, step-by-step exercises, you'll construct a complete authentication system from the ground up, gaining a deep understanding of key concepts and practical implementation techniques.\nWhat you will learn:\nSecure Data Handling: Learn best practices for sanitizing user-generated input to prevent common security vulnerabilities like SQL injection before it reaches your database.\nJWT Implementation with JavaScript: Dive into the core of JWT authentication. You'll learn how to generate, sign, and verify JWTs using JavaScript on the client-side, enabling secure communication with your server.\nToken Refresh Strategies: Implement refresh tokens to maintain a seamless user experience without constantly requiring users to re-login. Understand the importance of token expiration and how to manage refresh token lifecycles.\nLocalStorage Management: Master the use of browser LocalStorage for securely storing and managing JWTs on the client-side, considering security implications and best practices.\nAsynchronous Communication with Fetch API: Learn how to send asynchronous requests using the JavaScript fetch() API to communicate with your PHP backend, retrieving and manipulating data stored in your MySQL database.\nMySQL Database Integration: Design and implement the database schema required for user management and other application data.\nComplete Authentication Flow: Implement the entire authentication flow, from user registration and login to protected resource access and logout.\nBy the end of this course, you'll have a strong understanding of JWT authentication and the skills to implement it in your own projects, creating secure and scalable web applications. This course is perfect for web developers looking to modernize their authentication practices and enhance the security of their applications.\nThroughout the course you will have the opportunity to work along with the code and check the provided resource files for reference.",
      "target_audience": [
        "Anyone interested in applying JavaScript authenticaion into their websites"
      ]
    },
    {
      "title": "PHP with PDO and OOP for beginners",
      "url": "https://www.udemy.com/course/php-pdo-oop/",
      "bio": "Learn PHP with PDO, Object Oriented PHP programming, MySQL and Bootstrap to create powerful and secure websites and apps",
      "objectives": [
        "Create Databases",
        "Learn MySQL with PHP",
        "Learn Basics of PHP Programming",
        "Learn PDO with PHP to create secure web applications",
        "Learn Object Oriented PHP Programming",
        "Create advanced, well designed, responsive PHP and PDO based web applications",
        "Learn Bootstrap",
        "Create a powerful and secure login system",
        "Learn Object Oriented Programming with PHP",
        "Sessions and Cookies in PHP",
        "And much much more"
      ],
      "course_content": {},
      "requirements": [
        "Just a text editor"
      ],
      "description": "PHP is one of the most popular programming languages. In this series, we will learn PHP programming basics, using a local server. Then we will use a PHP layer known as PHP data object PDO, to create secure and portable web applications. As a bonus, we will learn SQL and Bootstrap basics, to design databases, and create responsive platforms. At the end, we will create Object Oriented Programming functions and classes, and this section will help students to start their next step, which is learning a PHP framework. This course is meant for total beginners in any programming language. At the end of this course, you will be able to create databases, bootstrap designs, secure and responsive web applications with a strong login system.",
      "target_audience": [
        "This course is meant for newbies in PHP",
        "This course is for developers who wants to learn PDO",
        "This course is for PHP programmer who want to learn Object Oriented Programming",
        "This course is for absolute beginners in programming"
      ]
    },
    {
      "title": "LeetCode & JavaScript Complete Course for Web Developer 2023",
      "url": "https://www.udemy.com/course/coding-interview-crash-course-for-web-developer-2020/",
      "bio": "Ace your JavaScript Interviews by learning DS and Algorithm. LeetCode + HackerRank + coderpad Binary Search Tree",
      "objectives": [
        "Ace coding interviews given by the top tech companies",
        "Skills that will allow you to apply for jobs like: Web Developer, Software Developer, Front End Developer and Javascript Developer",
        "Master beginner and advanced JavaScript Coding Interview topics",
        "Get more interviews and get hired as a professional Web Developer",
        "Learn, implement, and use different Data Structures and Algorithms",
        "Become more confident and prepared for your next JavaScript Coding Interview"
      ],
      "course_content": {},
      "requirements": [
        "No experience with data structures or algorithms needed",
        "Basic understanding of one programming language",
        "No previous computer science knowledge necessary"
      ],
      "description": "Welcome to the Complete Web Development LeetCode Coding Interview Course, the only course you need to ace LeetCode interviews and land a job at the Big Tech FAANG companies.\nThe course is taught by the Web Developer Frontend Tech Lead at Google.\nThe course has been updated to be (2023) ready and you'll be learning the latest technologies like Algorithms, Data Structures, LeetCode and more to crack the coding interviews this summer!\nThe curriculum was developed over a period of 1 Year, with comprehensive student testing and feedback.\nI have taught over 6,000 students how to solve leetcode with optimal solutions and many have gone on to change their lives by becoming professional developers at FAANG (Facebook, Amazon, Apple, Netflix, Google) companies which have many LeetCode questions during the interview process for frontend developers & web developers.\nAce Coding Interviews at companies like Google, Tesla, Amazon, Apple, JP Morgan, Facebook + other top tech companies\nYou'll save yourself $7000 USD by enrolling, but still get access to the same teaching materials provided at Top Coding Interview Bootcamps.\nThe course is constantly updated with new content and with the latest coding interview questions and also LeetCode solutions! (Updated on January 2023)\nI will take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed at a Senior Web Developer Coding Interview.\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\n\n\n\n\nContents and Overview\nIn my LeetCode course, I will walk you through, step-by-step, all the different types of questions that appear during interviews! I am a self-taught programmer so I know what it feels like to really struggle during those technical interviews which involves heavy leetcode questions. Let me put it this way: I created the course I wish I had when I was studying for my technical interviews!\n\n\nI know LeetCode questions are meant to be difficult, but do not worry! I made it a priority to present each problem in the most simplistic and direct way possible. You will benefit from my painless and easy-to-understand format, as I walk you through each problem, step-by-step. I cover everything from practical application of algorithms, to data structures, to time and space complexity.\n\n\nI do not believe in wasting your time or my time. This means that unlike most \"interview preparation courses\" out there, I will not waste time going over obscure computer science theory or elementary programming concepts. Let me let you in on a little secret: obscure theory is almost always useless in an interview setting. On the other hand, my lectures are MASSIVELY practical, as in — they are exclusively about problem solving tricks/techniques and pattern recognition. REMEMBER: Your interviewer won't know (or care) about whether you've spent WEEKS memorizing theory prior to an interview, he or she will ONLY care about whether you can solve the coding challenge or not.\n\n\nBy the time you complete this course, you will be an expert in all the tricks, techniques, and patterns needed to solve even the most challenging of interview problems and LeetCode problems / coderpad. Are you ready to supercharge your next technical interview and land that awesome dream job?!\n\n\nCourse material is regularly refreshed to include all of the newest updates and information, and since you are granted lifetime access upon registering, you can rely on this course to keep your technical interviewing skills on the cutting edge.\n\n\nThere is no need to waste your time scouring the internet, frantically trying to piece together ways to solve coding challenges the night before a big, important interview. Invest in yourself, and allow me to show you the easiest ways to ace it!\n\n\nFeel free to take a preview of this course to see if it is a good fit for you. I am so confident that you will love my course that I even offer a 100% 30-day money-back guarantee. You have absolutely nothing to lose, so come on in, and let's get started!",
      "target_audience": [
        "Any engineer, developer, programmer and college students who wants to improve their coding interviewing skills",
        "Anyone interested in improving their whiteboard coding skills",
        "Anyone who wants to become a better developer",
        "Any self taught programmer who missed out on a computer science degree"
      ]
    },
    {
      "title": "Youtube Clone Website Using Django - FULLSTACK - 2023",
      "url": "https://www.udemy.com/course/fullstack-youtube-clone-using-django/",
      "bio": "Master Django Framework by Building a Youtube Clone Web Application using Django, HTML and CSS.",
      "objectives": [
        "Create a fully functional web site using the Full-Stack with Django (Latest Version)",
        "Learn how to use HTML to create website content and page structures.",
        "Use Basic to Advanced CSS to create beautifully styled sites and animations.",
        "Learn the power of Python to code out your web applications logic and funtions",
        "Learn how to take advantage of Bootstrap to quickly style sites if needed",
        "Use Javascript to interact with sites on the Front-End and work asynchronously",
        "Implement a full Models-Views-Templates structure for your site using Function Based View",
        "Well-detailed and clear explanation of code line by line",
        "Use Django as a back end for the websites and HTML, CSS and JS as Frontend",
        "Create fantastic landing User Interfaces and Experiences"
      ],
      "course_content": {},
      "requirements": [
        "A computer with an internet connection and download privileges",
        "You don't need any programming experience, you will learn everything from scratch",
        "Pen and Book is also Recommeded if you've got any."
      ],
      "description": "Welcome to the Django, HTML and CSS Full Stack Web Developer Bootcamp! In this course we cover everything you need to know to build a website using Python, Django, and many more web technologies by Building a Fully Functional Youtube Clone.\nWhether you want to change career paths, expand your current skill set, start your own entrepreneurial business, become a consultant, or just want to learn, this is the course for you!\nWe will teach you the latest technologies for building great web applications with Django! But we don't just teach that, we also teach the Front End technologies you need to know, including HTML, CSS, and Javascript, and Also Teach how to deploy your project to the cloud using AWS, Google Cloud or Azure. This course can be your one stop shop for everything you need! It will serve as a useful reference for many of your questions as you begin your journey in becoming a web developer!\nThis course is designed so that anyone can learn how to become a web developer. We teach you how to program by using HD Video Lectures, Walkthrough Code Projects, Exercises, Concept Presentation Slides, Downloadable Code Notes, Reading Assignments, and much more!\nHere is just a small sampling of the topics included in this course:\nHTML5\nCSS3\nJavascript\nBootstrap 4/5\nDocument Object Model\nPython\nDjango Basics\nDjango Templates\nDjango Forms\nDjango Admin Customization\nORM\nFunction Based Views\nUser Authentication\nand much ,much more!\nYou will also get access to our online community of thousands of students, happy to help you out with any questions you may have! Any questions?, feel free to send me a message here on Udemy and connect with me on LinkedIn, check out my profile for other courses.\nWe also have a 30-day money back guarantee, so you can try out the course for an entire month, risk-free!\nAlways keep learning!\nDestiny Franks.",
      "target_audience": [
        "Complete Beginners",
        "Python/Django Developers looking to get into Full Stack Web Development",
        "Professionals looking to bridge gaps in their knowledge and Understanding"
      ]
    },
    {
      "title": "Chat Application In PHP With MySQL And JavaScrip ( Laravel )",
      "url": "https://www.udemy.com/course/advance-chat-system-using-php/",
      "bio": "Build Chat application in PHP, Javascript, and Laravel for both single user and group chat feature along with login",
      "objectives": [
        "Learn how to create Advanced Chat systems",
        "how to perform and manage Ajax request using JS and Jquery Both",
        "How to work with PHP Laravel",
        "Learn Advanced DOM Interactions",
        "Learn how to use Modern PHP5 and PHP7 Functions",
        "You'll be able to learn Bootstrap features",
        "You will learn how to build project using OOP",
        "Learn how to create and single and Multi user Chat",
        "How to show which user is typing in real time"
      ],
      "course_content": {
        "Introduction & Installation": [
          "Introduction",
          "Install Composer",
          "Install Laravel MVC",
          "Configure Database Connection & run Auth Scaffolding"
        ],
        "Chat Designing and Styling": [
          "Designing and Styling part 1",
          "Designing and Styling part 2",
          "Designing and Styling part 3",
          "Designing and Styling part 4"
        ],
        "Chat Functionality Implementation": [
          "Create actual users and add them in user list",
          "Create chat table in database",
          "Make create chat button enable and disable",
          "Build chat Feature",
          "Make chat list dynamic",
          "Build message feature part 1",
          "Build message feature part 2",
          "Make message area work part 1",
          "Make message area work part 2",
          "Display unseen messages count",
          "Mark message as seen",
          "Mark chat as active",
          "Build feature of showing user is typing",
          "Display Name of user typing",
          "Make chat and message appear in real time",
          "Build load more feature"
        ],
        "Profile page section": [
          "Profile Designing and Styling",
          "Work on Profile Image",
          "Work on Profile data and use profile image"
        ]
      },
      "requirements": [
        "Student should have knowledge in PHP, MySQL, CSS, HTML, Jquery, Javascript, and Ajax"
      ],
      "description": "This Course is all about taking your programming career to the next level and learn modern web development technique such as chat system using advanced web technologies in just few hours.\nWe do not want you to waste your time on watch 50+ lectures on learning it, so my call is that, \"less lectures, more knowledge\".\nWe'll gonna learn Advanced Programming in Details.\nWe'll be using PHP as a programming language for server side programming and MySqli for Database, both are pretty popular and easy to use and We'll be using Laravel as our MVC framework.\nWe'll gonna use HTML5 and CSS3 for front end development along with Bootstrap as well as Javascript, Jquery, and Ajax for client side programming.\nWe'll learn how to process and manage ajax request using both js and jquery.\nWe'll learn how to use jquery UI functions for advanced DOM interactions.\nWe'll learn new and advanced way of receiving files and how to use them.\nAfter this Course you'll understand how to create Chat System using modern technologies in web development world.\nIf you're Interested to become Worthy Programmer and grow in IT field then get into this course without hesitation and you'll gonna love it.",
      "target_audience": [
        "This course is for those who already have strong knowledge in both front and back end programming, you can increase your knowledge and take your career to next level and become more worthy in your programming field by learning these types of advanced systems which implement in real life.",
        "This is not for those who are at beginning level of programming and do not understand the process."
      ]
    },
    {
      "title": "Build Two Websites With HTML and CSS",
      "url": "https://www.udemy.com/course/build-a-resume-website-with-html-and-css/",
      "bio": "Use Frameworks and Templates to Build Cool Websites quickly! HTML and CSS are easy with these web development tools...",
      "objectives": [
        "Learn to Build Basic Websites",
        "Understand Basic HTML code",
        "Learn to Use the Bootstrap CSS Framework",
        "Learn to Build Websites Using Templates"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "C9 Development Environment Intro",
          "C9 Update Video",
          "C9 Walkthru"
        ],
        "HTML": [
          "HTML Page Structure",
          "H1 Tags",
          "Common HTML Tags",
          "Images and Links"
        ],
        "Bootstrap CSS Framework": [
          "Intro To Bootstrap",
          "Installing Bootstrap"
        ],
        "Building Resume Website 1 With Bootstrap": [
          "Creating a Navbar",
          "Panels",
          "Panel Content Part 1",
          "Panel Content Part 2",
          "Panel Content Part 3"
        ],
        "Building Resume Website 2 With Templates": [
          "Finding Paid HTML Templates",
          "Finding Free HTML Templates",
          "Installing The Free HTML Template",
          "Tweaking the Template Part 1",
          "Tweaking the Template Part 2"
        ],
        "Using Professional Webhosting": [
          "Version Control With Git",
          "Introduction to Heroku",
          "Pushing Code To Heroku and Renaming an App",
          "Using a Custom Domain Name With Heroku",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills necessary to take this course",
        "There is no special software needed for this course",
        "You just need a computer with internet access to take this course."
      ],
      "description": "In this course we'll build two resume portfolio type websites.  The first one we'll build using HTML and the Bootstrap CSS Framework. The second one we'll build using a free HTML template that we'll download from the Internet.\n\n\nWe'll start the course out by learning the basics of HTML. You'll learn about basic HTML structure, and then some common HTML tags.  We won't dive too deep into HTML because we'll be using frameworks and templates throughout the course. You'll learn just enough HTML to be dangerous!\n\n\nAfter that we'll learn all about the popular Bootstrap CSS Framework.\n\n\nArmed with this knowledge, we'll create our first Resume Website (a website where you can post your Resume).\n\n\nNext we'll learn how to find and use paid and free HTML templates. We'll download a free one and install it into our development environment. Then we'll tweak it to add our own information, text, and images.\n\n\nFinally I'll show you how to push all your code up to a professional webhost (one that doesn't cost any money!) and get a custom domain name set up.\n\n\nThis is a fun course aimed at the absolute beginner who doesn't know much or any HTML or CSS, and would like to create cool websites without much work.\n\nI'll see you inside!",
      "target_audience": [
        "Anyone Who Wants To Learn To Build Websites With HTML and CSS Frameworks"
      ]
    },
    {
      "title": "Everything About PHP Sessions",
      "url": "https://www.udemy.com/course/everything-about-php-sessions/",
      "bio": "A complete course about handling persistent PHP sessions storing them into database securely and auto login system",
      "objectives": [
        "Configure PHP sessions to make them persistent",
        "Inspect how session data is stored",
        "Implement persistent sessions",
        "Create a SQL database to store session data",
        "Implement the PHP SessionHandlerInterface",
        "Write session data",
        "Close and destroying sessions",
        "Create an auto-login system with persistent sessions",
        "Create persistent logins",
        "Checkout visitor credentials",
        "Authenticate users",
        "Log out users selectively"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Security and Sessions": [
          "Security and Sessions",
          "Session Configurations",
          "Changing Configurations",
          "Session Inspection",
          "Session Implementation"
        ],
        "Database for Sessions": [
          "Database Setup",
          "Create Database Tables",
          "Connect to Database"
        ],
        "Storing Session Data in Database": [
          "Session Handler Interface",
          "Open and Read Methods",
          "Write Method",
          "Close Method",
          "Destroy Session",
          "Using Session Handler"
        ],
        "Building an Autologin System": [
          "How Auto Login System Works?",
          "Using Trait",
          "Persistent Session Handler",
          "Auto Login Class",
          "Auto Login Helpers",
          "Logging Out"
        ],
        "Testing": [
          "User Registration",
          "PSR-4 Auto Loader",
          "User Auto Authentication",
          "Extra Files"
        ]
      },
      "requirements": [
        "This is not a beginner's course, so you need to have a solid grasp of PHP syntax, including the use of control structures, loops, and arrays.",
        "You should also be comfortable working with PHP classes and objects. Nearly all of the code in this course is object oriented.",
        "You should understand basic SQL for select, insert, update, and delete queries.",
        "A lot of the code uses PDO-prepared statements with named parameters to submit queries to the database, so you should be familiar with using PDO.",
        "You need to know HTML and a little CSS"
      ],
      "description": "PHP tireless sessions allow for communication between the server and client. This allows web applications to remember the identities of visitors as well as any variables or other data. This practical and challenging project-based course will help developers take the data that PHP normally stores in plain text files and write them into a more secure database, where the records can be read and destroyed as needed. I help you set up a SQL database, define classes to open and close sessions, read and write variables, destroy sessions, and manage out-of-date records. The lessons culminate in a short project that uses tokens to recognize returning users in an auto-login scenario.\nIn this course:\nI'll show you how to store session in data in a MySQL database\nHow to log in returning users automatically\nWe'll begin with an overview of how PHP handles Sessions and stores session data in plain text files on the web server\nWe'll set up a database to store session data more securely\nI'll show you how to define a class to open and close sessions\nRead and write session variables to the database\nDestroy sessions and garbage collect out-of-date records\nSessions expire as soon as soon as the browser is closed, but the highlight of this course is an auto-login system that uses a randomly generated single use token that recognizes returning users and preserves their data between visits, even on different computers. I hope you'll find this a useful and challenging project.\nkeeping the user's data always up to date with persistent sessions is extremely convenient. But, and I can't stress this strongly enough, persistent sessions are not 100 percent secure. When using sessions, you should always use a connection over secure sockets layer, or transport layer security whenever possible. I’m going to talk about why always re-authenticate user credentials before allowing allowing access to pages with sensitive content, such as changing user account details.",
      "target_audience": [
        "If you want to know how to store session in data in a Mysql or MariaDB database",
        "If you want to know how to log in returning users automatically",
        "If you want to know how to define a class to open and close sessions",
        "If you want to know how to read and write session variables to the database",
        "If you want tot know how to destroy sessions and garbage collect out-of-date records"
      ]
    },
    {
      "title": "JavaScript Form Validation Web application",
      "url": "https://www.udemy.com/course/javascript-form-course/",
      "bio": "Learn JavaScript and how to apply form validation features to form fields on form submission",
      "objectives": [
        "How to use JavaScript",
        "How to create elements dynamically",
        "Manipulate elements using JavaScript",
        "Explore JavaScript Document Object Model"
      ],
      "course_content": {
        "Introduction to using JavaScript for form validation": [
          "Form Validation Introduction"
        ],
        "Create Form Validation using JavaScript": [
          "Setup Email Form - HTML and JavaScript",
          "Source Code Setup",
          "JavaScript Event Listeners",
          "Source Code",
          "Get all input values from elements JavaScript",
          "Source Code",
          "Check length and Required content from form inputs",
          "Source Code",
          "Check for Valid Email regex for form input JavaScript",
          "Source Code",
          "Valid Password Checker add more validations to form inputs",
          "Source Code",
          "Final Code Updates tweaks and adjustments",
          "Source Code FINAL",
          "JavaScript Validation App Code Review"
        ],
        "Bonus Content answer to JavaScript Questions Code Examples Resources": [
          "JavaScript Auto Type Conversion Examples",
          "JavaScript Type Conversion Coding Example",
          "Extended Learning Modules: Additional Content with Downloadable Resources and Pr"
        ]
      },
      "requirements": [
        "Fundamental JavaScript concepts",
        "Access to computer",
        "Use of editor to write code",
        "HTML and CSS knowledge"
      ],
      "description": "Perfect course to learn more about form handling using JavaScript to enhance and provide checks of input content.\nCourse covers\nElement selection from HTML Content\nAdding event listeners for form submit event\nFunction to run blocks of code\nprevent Default action of form submission\nlooping Node list content forEach\ngetting element attribute values\nSetting and manipulating element style properties\nJavaScript methods to check array content\nRegex to test string values\nJavaScript utility methods to handle strings and array\nSource Code is included\nNo libraries, no shortcuts just learning JavaScript making it DYNAMIC and INTERACTIVE web application.\nStep by step learning with all steps included.\nBeginner JavaScript knowledge is required as the course covers only JavaScript relevant to the building of the game.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the of the application today!!!!",
      "target_audience": [
        "Beginners to JavaScript",
        "Anyone who wants to practice writing JavaScript",
        "Web developers",
        "Anyone who wants to learn to make a JavaScript game without any libraries",
        "Beginners to JavaScript curious about Document Object Model and JavaScript Methods"
      ]
    },
    {
      "title": "Website from Scratch using Bootstrap 4",
      "url": "https://www.udemy.com/course/course-bootstrap-4/",
      "bio": "Apply Bootstrap 4 class to build a modern website from scratch",
      "objectives": [
        "Create a multiple page website from scratch",
        "Use Bootstrap classes for rapid web development"
      ],
      "course_content": {
        "Introduction to website development with Bootstrap 4": [
          "Introduction to Bootstrap 4",
          "Project Introduction",
          "Coding Environment Setup",
          "Quick Bootstrap 4 Setup",
          "Build Bootstrap Page Structure",
          "Build Bootstrap Responsive NavBar",
          "NavBar Source Code",
          "Build Footer Structure",
          "Build Footer at Font Awesome",
          "Footer Source Code",
          "Complete WebPage Layout",
          "Design Index Page Layout",
          "Setup Bootstrap 4 Grid",
          "Home Page Carousel",
          "Source Code Carousel",
          "Add Call to Action Section",
          "Bootstrap 4 Cards",
          "Source Code Home Page",
          "Plan About Page Design",
          "Collapse Elements Build About Page",
          "Source Code About Page",
          "Plan and Design Portfolio Page",
          "Bootstrap Cards Portfolio Page",
          "Portfolio Page Source Code",
          "Plan Contact Page",
          "Build Contact Form",
          "Source Code Contact Form",
          "Webpage overview and Review",
          "Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "HTML and CSS experience",
        "Access to a computer"
      ],
      "description": "Learn to Bootstrap 4 Website Built from scratch in 1 hour\nExplore how to Create amazing Fully Responsive websites from scratch step by step how to add Bootstrap to your webpages.  Welcome to Learning Bootstrap 4 where you learn to build a modern fully responsive website using Bootstrap 4.  Using Bootstrap 4 you can easily build and create amazing websites.\nCreate your own Mobile Ready : Fully Responsive websites from Scratch!\nRapid web development with Bootstrap starting with a blank web page.  This course will show you how to take this blank file and create a website.  Best of all once you become familiar with Bootstrap you can create websites like the one in the course in under 1 hour!  Source code is included so you too can follow along with the course content and create a website upon completion of the course.\nLearn why Bootstrap is so popular, guaranteed that once you start using Bootstrap you will love it!!!!\nThis course covers\nBootstrap 4 Grid\nBuild a responsive navbar\nHow to use Bootstrap 4 Cards\nJumbotron\nand more\nSource Code is included!!!!\nWelcome to Bootstrap 4 modern website development, with HD Quality content learn the fundamentals of bootstrap and how you can apply Bootstrap to your own projects.\nJump right in and start learning to create your own Bootstrap websites today.",
      "target_audience": [
        "Web developers",
        "Web Designers",
        "Anyone who wants to build a website",
        "Bootstrap 3 users who want to learn Bootstrap 4"
      ]
    },
    {
      "title": "Learn Next.js and React to Create 2048 Game From Scratch",
      "url": "https://www.udemy.com/course/2048-in-react-and-nextjs/",
      "bio": "Master and Learn Next.js + React with Fun: How to Build a 2048 Game From Scratch to Boost Your Skills and Career!",
      "objectives": [
        "How to create your own 2048 Game with awesome animations",
        "React hooks such as useState, useRef, useCallback, useEffect, and more",
        "State management using useReducer and React Context API",
        "Leverage type safety using TypeScript",
        "Responsive Apps for Desktop & Mobile",
        "How to use NextJS – Most Popular React framework",
        "Testing React Applications"
      ],
      "course_content": {
        "Getting Started": [
          "Hello world! Let's build something cool today!",
          "Create new React + NextJS project",
          "Clean up boilerplate and define game styles"
        ],
        "Project Setup and Base Components": [
          "Game board",
          "Testing",
          "Tiles"
        ],
        "State Management, Hooks and Game Logic": [
          "Managing state with useState and useReducer hooks",
          "Rendering tiles - useEffect, useRef, React StrictMode",
          "Vertical tile moves",
          "Horizontal tile moves",
          "Tile stacking",
          "Tile merging",
          "Board clean up"
        ],
        "Context API, Advanced Hooks, and Animations": [
          "Animations",
          "Creating tiles - React Context and useCallback",
          "Virtual DOM: How React renders components?",
          "Restricting tile creation"
        ],
        "Responsive Layout and Missing Game Features": [
          "Game layout and mobile swipes",
          "Scoring",
          "Desktop layout with react-responsive"
        ],
        "Advanced React Techniques": [
          "Debounce vs throttle"
        ],
        "Wins & Losses": [
          "Detecting Winning Moves: Game Win Logic",
          "Handling Defeats: Detecting Game Loss Scenarios"
        ]
      },
      "requirements": [
        "HTML, CSS and JavaScript fundamentals are required",
        "Basic knowledge of command line. Essentials only"
      ],
      "description": "Are you a beginner React or JavaScript programmer eager to dive into the exciting world of Next.js? You’ve found your next big thing!\n\n\nAnd the best part is, IT’S NOT BORING!\n\n\nEver done a coding course and forgotten half the stuff you learned? Well, I'm glad to tell you that this is not that.\n\n\nI’m not someone who likes boring things, and that’s why I took the time to develop a course that not only teaches you super insightful stuff but also keeps you involved, captivated, and excited!\n\n\nMy comprehensive course offers a super unique learning experience by guiding you through the creation of the beloved 2048 game from start to finish.\n\n\nExciting Learning Experience\nKiss dull tutorials goodbye and welcome hands-on interactive learning! I believe programming should be fun and unleash your creativity. With my course, you’ll embark on a thrilling game development journey while mastering essential React and Next.js concepts.\n\n\nLearn by Doing\nTired of dry theory and non-functional examples? My course focuses on hands-on learning, allowing you to apply Next.js concepts in a practical and engaging manner. By building a fully functional 2048 game, you’ll solidify your understanding of Next.js while having fun along the way!\n\n\nMaster Key React Techniques\nWe give you hands-on experience with essential React hooks and state management techniques. From useState to useCallback, you’ll learn how to enhance your apps' functionality and performance while building the 2048 game of your dreams.\n\n\nOptimized for Mobile\nWhy are you still settling for mediocre games when you can create something truly extraordinary? My course will teach you how to develop a responsive and mobile-friendly 2048 game, complete with smooth animations and seamless gameplay on various devices.\n\n\nExpert Guidance\nLearn from a seasoned software engineer with over 12 years of industry experience. With practical insights and real-world examples, you’ll not only master React and Next.js but also gain invaluable practical skills that will set you apart in the job market.\n\n\nTap Into Your Potential\nAre you an aspiring developer looking to break into the industry or a seasoned programmer seeking to expand your skill set? My course is specifically designed for learners of all levels. With its thorough curriculum, you’ll advance your coding skills to new heights.\n\n\nWhat You’ll Learn\nBy the end of the course, you’ll have built a fully functional 2048 game in React and Next.js. From managing complex state to integrating TypeScript for enhanced code quality, you’ll be equipped with the tools and knowledge to tackle future projects with confidence!\n\n\nI’m so excited to invite you to join this journey and finally reach the potential that will accelerate your career as a developer.\n\n\nEnroll now and start building your own 2048 game today!",
      "target_audience": [
        "Aspiring React and NextJS Developers",
        "Those who are tired of boring examples and eager to build something exciting",
        "Developers looking to learn from real-world experience and practical insights",
        "Anyone who wants to elevate their JavaScript skills and dive into the world of React and Next JS"
      ]
    },
    {
      "title": "Web Project Workshop: 20+ HTML & CSS Websites in Action",
      "url": "https://www.udemy.com/course/web-project-workshop-html-css-in-action/",
      "bio": "Master HTML & CSS with 20+ Real Web Projects",
      "objectives": [
        "Build and style responsive web elements using HTML5 and CSS3.",
        "Understand core layout techniques using Flexbox and CSS Grid.",
        "Create interactive UI components like forms, cards, and faq accordions.",
        "Develop a portfolio of creative web projects to showcase HTML & CSS skills."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Visual Studio Code Configuration": [
          "Visual Studio Code Installation",
          "Visual Studio Code Extensions",
          "Prettier Configuration"
        ],
        "Source code": [
          "Source Code for All Projects"
        ],
        "Student Card": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ],
        "Links Page": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ],
        "Blog Post Card": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ],
        "Timeline": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ],
        "Newsletter Subscription": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ],
        "Recipe": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ],
        "Poetry layout": [
          "Introduction",
          "Coding HTML",
          "Coding CSS"
        ]
      },
      "requirements": [
        "Visual Studio Code editor installed."
      ],
      "description": "Learning HTML and CSS doesn’t have to mean sitting through hours of dry theory or building full websites from scratch. In Web Project Workshop: HTML & CSS in Action, you’ll take a hands-on, beginner-friendly journey by creating fun, focused web projects that teach you real skills - fast.\nThis is a creative, project-based course designed to make learning web development both practical and enjoyable. Rather than diving into complex tools or frameworks, you’ll stick to the essentials - HTML5 and CSS3 - while building interactive mini-projects like a digital credit card, blog post card, contact form, FAQ section, recipe layout, login/register form, and more.\nEach project focuses on a specific concept - from layout and form handling to responsive design, text styling, and animation - giving you the building blocks to create beautiful, functional interfaces. You’ll gain confidence with tools like Flexbox, Grid, custom fonts, icons, and transitions, while building a portfolio of creative, bite-sized web elements.\nBy the end of the course, you won’t just know how HTML and CSS work - you’ll have a solid set of projects to show for it, and the confidence to start creating your own web experiences from scratch.\nWhether you're an aspiring developer, designer, or just curious about front-end coding, this course will help you learn by doing - the most effective (and fun) way to master the basics.",
      "target_audience": [
        "This course is for beginner programmers who want to learn HTML & CSS by building fun, hands-on web projects."
      ]
    },
    {
      "title": "Code & Play: JavaScript Game Projects",
      "url": "https://www.udemy.com/course/code-play-javascript-game-projects/",
      "bio": "Level Up Your JavaScript Skills Through 15 Fun Game Development Projects",
      "objectives": [
        "Master Core JavaScript Concepts - Strengthen your understanding of variables, functions, loops, objects, and arrays through game logic.",
        "Create 15 Real Games – Code classic and original titles such as Snake, Pong, Tic Tac Toe, and more.",
        "Build a Playable Game Portfolio - Make original, polished games to add to your portfolio site and highlight your skills.",
        "Write Clean, Modular Code - Learn how to organize game code with reusable functions, object composition, and event handling patterns."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Visual Studio Code Configuration": [
          "Visual Studio Code Installation",
          "Visual Studio Code Extensions",
          "Prettier Configuration"
        ],
        "Source Code for All Projects": [
          "Source code"
        ],
        "Key matcher": [
          "Introduction",
          "Style.css",
          "Setup",
          "Template",
          "Game Logic"
        ],
        "Guess a number": [
          "Introduction",
          "Style.css",
          "Setup",
          "Game logic"
        ],
        "Roll Dice Game": [
          "Introduction",
          "Style.css",
          "Setup",
          "Game logic"
        ],
        "Whack a mole": [
          "Introduction",
          "Style.css",
          "Setup",
          "Game logic",
          "Finishing game"
        ],
        "Color guessing game": [
          "Introduction",
          "index.html",
          "style.css",
          "Game logic",
          "Finishing the application"
        ],
        "Rock Paper Scissors": [
          "Introduction",
          "style.css",
          "Setup",
          "Game logic"
        ],
        "Slot Machine": [
          "Introduction",
          "style.css",
          "Setup",
          "Game logic",
          "Finishing Game"
        ]
      },
      "requirements": [
        "Familiarity with programming fundamentals like variables, arrays, functions, and loops is expected.",
        "Basic knowledge of JavaScript and HTML is recommended."
      ],
      "description": "In today’s fast-paced tech world, mastering JavaScript is more than just memorizing syntax - it’s about building real, interactive experiences. And what better way to learn programming than by making games? With Code & Play, you’ll strengthen your programming skills through creativity, logic, and hands-on coding that’s actually fun.\nThis isn’t your typical tutorial-based course. In this immersive learning experience, you’ll build a collection of 15 playable games—each one crafted to teach you key JavaScript concepts while keeping you engaged. From classics like Rock-Paper-Scissors, Pong, and Snake to original projects like key matcher or memory card game, every project is a chance to sharpen your skills in a meaningful way.\nYou’ll work with real JavaScript fundamentals: variables, functions, loops, objects, arrays, and event listeners—all applied directly to build game mechanics and interactivity. You’ll also dive into slightly more advanced topics like collision detection, game state management, animations and drawing with the HTML5 Canvas API.\nBut this course is about more than just writing code. It’s about learning how to think like a developer -debugging issues, solving logic problems, and organizing your code in a clean, modular way. Every game is a challenge designed to stretch your problem-solving skills and reinforce your understanding of JavaScript through real feedback loops.\nBy the end, you won’t just know how JavaScript works—you’ll have a personal arcade of games you built yourself, and a strong portfolio of projects that demonstrate your abilities in an exciting, creative format.\nWhether you're new to programming or looking for a fun way to level up your JavaScript, this course will help you build confidence, deepen your knowledge, and unlock a whole new way to learn.\nLet’s code, play, and build something awesome - one game at a time.",
      "target_audience": [
        "Web developers seeking to improve their JavaScript skills through creative and engaging games.",
        "Students or self-taught coders wanting to apply programming fundamentals in real-world, interactive projects.",
        "Anyone who finds traditional coding tutorials boring and wants to learn through play and experimentation."
      ]
    },
    {
      "title": "Beginners JavaScript & React JS Class | Build Mini Projects",
      "url": "https://www.udemy.com/course/beginners-javascript-react-js-class-build-mini-projects/",
      "bio": "Learn JavaScript and React JS setup from scratch by building mini projects in this beginner-friendly introductory course",
      "objectives": [
        "Setting Up the Development Environment – Installing Visual Studio Code and Atom Editor",
        "Your First JavaScript Code – Writing and running JavaScript using Atom Editor",
        "JavaScript Code Structure – Understanding how JavaScript scripts are structured",
        "Working with the Console and getElementById – Accessing and manipulating web page elements",
        "Using Comments in JavaScript – Writing clean and well-documented code",
        "Variables in JavaScript – Storing and manipulating data effectively",
        "Arithmetic Operators – Performing calculations and basic operations",
        "Accepting User Input in JavaScript – Creating interactive user experiences",
        "Type Conversion in JavaScript – Understanding how to switch between data types",
        "Constants in JavaScript – Working with unchangeable values",
        "Implementing JavaScript Constants in HTML Documents – Applying constants for better web",
        "Building a Digit Counter in JavaScript – Your first interactive mini-project!",
        "Downloading and Installing Node.js – Setting up the React development environment",
        "Creating a React App – Generating your first React project",
        "Writing Your First JSX Code – Understanding how JSX makes React more powerful",
        "Understanding React Fragments – Optimizing component rendering",
        "Mastering Functional Components in React JS – Building reusable UI elements",
        "Adding CSS Styling in React – Enhancing UI with styles",
        "Creating a Card Component in React – Your first interactive UI component!"
      ],
      "course_content": {},
      "requirements": [
        "A computer (Windows, macOS, or Linux)",
        "An internet connection",
        "A willingness to learn and explore coding",
        "No prior programming knowledge required!"
      ],
      "description": "The Beginners JavaScript and React JS Introductory Class\nAre you eager to learn JavaScript and React JS but don’t know where to start? This Beginner’s JavaScript and React JS Introductory Class is the perfect gateway into the world of web development! Whether you’re an absolute beginner or someone looking to refresh your JavaScript skills before diving into React JS, this course will give you the foundational knowledge you need to start building real-world projects.\nBy the end of this course, you’ll be able to write JavaScript code with confidence, understand its core concepts, and create interactive web applications using React JS components.\n\n\nWhy Learn JavaScript and React JS?\nJavaScript is the most popular programming language for web development, powering millions of websites and web applications. React JS, developed by Facebook, is one of the most in-demand front-end frameworks, allowing developers to build fast, dynamic, and scalable web apps.\nThis course simplifies complex topics, making it ideal for beginners who want a step-by-step introduction to JavaScript and React JS.\nNo prior programming experience? No problem! This course walks you through each concept in a beginner-friendly, easy-to-understand way.\n\n\nWhy Take This Course?\nStep-by-step explanations – Learn JavaScript and React from the ground up\nHands-on mini-projects – Build real-world applications from day one\nBeginner-friendly approach – Simple explanations, practical examples, and interactive coding exercises\nBoost your career opportunities – JavaScript and React are highly in-demand in the job market\nThis is not just theory—you’ll be building real-world projects right from the start!\nAre you ready to kickstart your journey in web development?\nJoin this Beginner’s JavaScript and React JS Introductory Class today and start coding your way to a bright future!",
      "target_audience": [
        "Absolute beginners with no prior coding experience",
        "Aspiring web developers looking to learn JavaScript and React JS from scratch",
        "Students & professionals transitioning into front-end development",
        "Self-taught programmers who need structured guidance",
        "Entrepreneurs & designers wanting to add interactivity to their websites"
      ]
    },
    {
      "title": "The Complete JavaScript Course 2025: From Beginner to Pro",
      "url": "https://www.udemy.com/course/javascript-mastery/",
      "bio": "Learn JavaScript, DOM manipulation, async programming, error handling, and real-world front-end development from scratch",
      "objectives": [
        "Learn how JavaScript works, from the basics to more advanced concepts, while building practical projects",
        "Build the confidence to call yourself a JavaScript developer",
        "Understand how JavaScript works behind the scenes",
        "Use HTML, CSS, and JavaScript together to build web pages",
        "Write clean and modern JavaScript (JS) code",
        "Work with variables, functions, arrays, and loops",
        "Manipulate the DOM to build interactive UIs",
        "Handle errors and debug code like a pro",
        "Write and understand asynchronous JavaScript (callbacks, promises, async/await)",
        "Build real projects using front end web development tools"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience needed, you’ll learn JavaScript from scratch",
        "A basic understanding of HTML and CSS is a plus, but not a must."
      ],
      "description": "What the Class is About\nThis class is designed for beginners and those looking to advance their JavaScript skills. You’ll learn how JavaScript works, from the basics to more advanced concepts, while building practical projects.\nWhat You Will Learn\nThis course covers a complete range of topics, including:\nJavaScript Fundamentals: Variables, constants, data types, and control flow (if/else, switch).\nFunctions and Objects: Function declarations, arguments, this, and object creation.\nDOM Manipulation: Selecting elements, updating attributes, and handling events.\nAsynchronous JavaScript: Callbacks, Promises, Async/Await, and the Event Loop.\nDebugging and Error Handling: Common errors, try/catch, custom errors, and using developer tools.\nAdvanced Concepts: Scopes, memory management, the single-threaded model, and the JavaScript engine.\nWhy Take This Class\nWhether you’re starting from scratch or brushing up on advanced skills, this class provides a complete roadmap to track your progress step by step. You’ll understand JavaScript’s core concepts, explore its real-world applications, and learn how it works in the browser and beyond. By the end, you’ll be confident in building dynamic and interactive web applications.\nWhat You Need\nYou’ll need a computer, a text editor (like VS Code), and a browser. All code snippets, examples, and a complete roadmap will be provided to ensure you stay on track.\nJoin the class to start your JavaScript journey or take your skills to the next level!",
      "target_audience": [
        "Beginners with zero coding experience who want to learn JavaScript from scratch",
        "Aspiring web developers looking to build interactive websites using HTML, CSS, and JavaScript",
        "Self-taught developers looking to solidify their JavaScript knowledge"
      ]
    },
    {
      "title": "Practice Application Development With React And Django",
      "url": "https://www.udemy.com/course/practice-application-development-with-react-and-django/",
      "bio": "Learn real-world examples of how businesses develop and securely deploy applications into the cloud",
      "objectives": [
        "Learn practical applications of test-driven design for React and Django development.",
        "Deploy applications to Azure using Infrastructure-As-Code.",
        "Package software applications as containers and run in Azure Kubernetes Service.",
        "Deploy PostgreSQL database for a Django application in Azure.",
        "Use Azure Key Vault to manage Kubernetes secrets.",
        "Automate deployment of applications using Azure DevOps.",
        "Secure application development environments that are hosted in the cloud using Azure VPN and private DNS."
      ],
      "course_content": {},
      "requirements": [
        "Some knowledge of programming will be needed.",
        "A computer on which you have local administrator privileges."
      ],
      "description": "This course is meant to provide you with some real-world examples of building React and Django applications using test driven design.  React Context will be used for state management in the front end application.  Django will be used as an API back end application, using the Django REST framework. You will use Azure DevOps Repo to store application source code and use Azure Pipelines to automate the building and testing of the code.  You will learn to package the applications in containers and deploy them into a development Azure Kubernetes Service environment that is not accessible to the Internet.  Nginx will be used to serve the static files for the React front end and the Django administration site. You will deploy a private PostgreSQL database for the backend application, keeping the data safely off the Internet.  Using an Azure VPN to connect to the development environment, you will be able to confirm the application functionality.  PGAdmin will be used to connect to the database over the VPN.  Proper management of secret information, such as database passwords and email passwords, will be addressed by integrating Kubernetes with Azure Key Vault.  You will also learn to perform Django database migrations in cloud environments.  After performing security testing in the development environment, you will create the production environment and deploy the application to the public.",
      "target_audience": [
        "Developers looking to understand how to deploy applications into a production environment.",
        "This course is great for React and Pythong developers that want to learn more about test driven design."
      ]
    },
    {
      "title": "ASP.NET CORE ZERO TO HERO COURSE WITH PROJECT",
      "url": "https://www.udemy.com/course/aspnet-core-zero-to-hero-course-with-realtime-project/",
      "bio": "Ticket Booking Real Time Scratched project, You will learn ASP.NET CORE , MVC , Entity Framework Core , LINQ Methods",
      "objectives": [
        "Create a new mvc project using visual studio 2022",
        "Template Directory Structure",
        "Single Model CRUD Operation using Entity Framework core",
        "Layered Architecture",
        "One to Many Relationship using Entity Framework Core CRUD Operation",
        "Many to Many Relationship using EF Core CRUD operation",
        "One to Many Relationship using EF Core CRUD Operation",
        "One to One Relationship using EF Core CRUD Operation",
        "Session with Example",
        "Generic Repository",
        "Unit of Work",
        "Identity Management",
        "RESTFul API End Points",
        "CRUD Operation using RESTFul API",
        "Consume RESTful API",
        "Paging Sorting Searching"
      ],
      "course_content": {},
      "requirements": [
        "Beginner in C#"
      ],
      "description": "This Course complete the following things like Single model CRUD Operation , 3-tier architecture, Repository Pattern, one to many relationship, many to many relationship using Entity framework core, Session, Synchronous vs Async programming, concert booking project, cookies, Generic Repository Pattern, Unit of Work Pattern, Identity management, Middlewares , Filters, Logging,  caching ,  Web API Concept, End points, Default parameter binding, CRUD operation on Many to many relationship , how to consume web api in razor views, Student Management Project, Doctor precreption system, paging sorting and searching, AutoMapper, JQuery Topics like DataTable ,  CRUD operation using Dapper, Fully Project using Dapper in ASPNET CORE, one to one mapping using Dapper, One to many mapping using Dapper, Many to Many Mapping using Dapper,. ADONET Technology Based project,Fully ADONET BASED PROJECT IN ASPNET, Signal R Topics , Zero to Hero course in Signal R, CORS , CQRS pattern. Creating View Component and Partial View, Configuring Routing and Navigation, Creating Custom Helpers, Working with AutoMapper, Working with Stored Procedures in EF Core, Image Operations: Upload, Update and Delete, Database Operations Using ADONET and ASPNET Core, Creating a Custom Middleware, Clean Architecture, Repository Pattern, Dependency Injection,Authentication and Authorization,Data Passing Techniques, LINQ Query,Understanding Razor View Engine,  Razor View Engine vs. Web Form Engine. Real Time Scratch Projects\n1. Ticket Booking Sytem\n2. Quiz online application\n3. Online Restaurant Billing System\n4. Hospital Management System\n5. Car Rental System",
      "target_audience": [
        "Beginner to Intermediate Developer with some knowledge in C#"
      ]
    },
    {
      "title": "Wordpress Starting Kit: Build Your Site From Scratch",
      "url": "https://www.udemy.com/course/wordpress-sites/",
      "bio": "Wordpress Publishing: How to Build a Custom Wordpress Site from Scratch that Drives Traffic. Zero Coding.",
      "objectives": [
        "Create a stable and profitable online business from the ground up",
        "Understand and identify the keys of any successful online venture",
        "Leverage the power of Wordpress to manage an online business, add value, create customer relationships and increase exposure",
        "Get your hand on the cheapest domain names and hosting plans on the market",
        "Install and customize your own Wordpress website",
        "Select the appropriate theme to fit the business model of your venture",
        "Use plugins, integrations and extensions to create new revenue streams, promote social interactions, improve site speed and enhance overall customer experience",
        "Create and run a blog to attract new customers, boost your brand, rank higher and propell interactions",
        "Design and Publish landing and squeeze pages with a simple drag & drop editor",
        "Populate your site with essential and relevant content & pages"
      ],
      "course_content": {},
      "requirements": [
        "You need to know how to read and use a computer and you are good to go"
      ],
      "description": "Everyone needs a site. Period.\nWhether you have a business or want to build a personal brand, a website is an absolute must if you want to take things to the next level.\nThe problem with building a website is that it takes time to learn code and/or money to hire someone to do it.\nBut what if you didn't have to learn a line of code to create your own site?\nWhat if I told you you could have your own site up and running in less than 45 minutes?\nWe've all heard about Wordpress, but not many of us know how to take full advantage of it.\nIn this Wordpress course I'm going to teach you how to plan, produce and publish your own site from the ground up. It's not theory, it's action. I will build my brand's iMarket XL website in front of your eyes. Literally.\nThese are just some of the things you'll watch me do in this course:\nGet domains for $0.99 and hosting for as little as $1 a month\nCreate custom @yourdomain.com email accounts and learn how to forward them to your most used email account.\nInstall Wordpress\nMaster the dashboard and customize essential settings\nFind the perfect theme for your business and install it\nCustomize the site until you get the look you want and all elements working properly\nCreate the basic and essential pages every site needs\nWrite and publish the perfect viral blog post\nConnect the site with social media sites with sharing plugins\nCapture visitors' email accounts with built-in opt-in forms\nCreate a landing page and publish it on Wordpress\nOptimize pages with A/B testing\nStart making money online\nStart taking this course today and have your own website in 45 minutes. Guaranteed. Click Take This Course at the top right of the page and let's get started!",
      "target_audience": [
        "This course is for anyone with an online business or with the willingness to create one",
        "Anyone who wants to learn how to create a Wordpress site by WATCHING someone create one"
      ]
    },
    {
      "title": "Wrapping Your Head Around Spring Batch",
      "url": "https://www.udemy.com/course/wrapping-your-head-around-spring-batch/",
      "bio": "This course teaches you how to build distributed batch processing system using spring open-source frameworks.",
      "objectives": [
        "Set up and configure a Spring Batch project from scratch.",
        "Implement data layer operations for reading from and writing to various data sources.",
        "Utilize the repository layer to efficiently manage data storage and retrieval.",
        "Develop item processors for data transformation and validation.",
        "Configure job parameters and step settings within the Spring Batch framework.",
        "Manage job execution flow and control batch processes using controllers.",
        "Integrate Spring Batch with Spring Boot for streamlined application configuration.",
        "Apply best practices for testing and validating batch applications.",
        "Optimize batch job performance through advanced techniques such as partitioning.",
        "Design and develop scalable, high-performance batch applications."
      ],
      "course_content": {},
      "requirements": [
        "Basic Java programming knowledge is helpful"
      ],
      "description": "Unleash the Power of Enterprise-Grade Batch Processing with Spring Batch!\nStop wrestling with complex data challenges and start architecting elegant, high-performance solutions. \"Wrapping Your Head Around Spring Batch: From Novice to Pro\" is your definitive launchpad to conquering large-scale data processing and becoming an indispensable asset in any enterprise environment.\nIn today's data-driven world, the ability to efficiently manage and process vast datasets isn't just a skill—it's a superpower. Spring Batch stands as the industry-leading, lightweight, yet incredibly robust framework engineered to automate and streamline the daily critical operations of modern enterprise systems. If you're ready to elevate your Java development game and tackle mission-critical batch tasks with confidence and precision, this course is your blueprint for success.\nWhy This Spring Batch Course Will Transform Your Career:\nThis isn't just another overview. We dive deep, transforming you into a Spring Batch specialist capable of designing, building, and optimizing sophisticated batch applications. Forget theoretical fluff; you'll be immersed in practical, real-world scenarios, detailed code walkthroughs, and hands-on projects that solidify your understanding from the ground up.\nHere’s a Glimpse of What You’ll Master:\nFoundation to Flight: Seamlessly initiate Spring Batch projects, mastering environment configuration and dependency management like a seasoned pro.\nData Dominance: Command the Spring Batch data layer. Learn to expertly read, write, and manage diverse data sources, ensuring absolute data integrity and resilience.\nEfficient Data Operations: Unlock the full potential of Spring Batch’s repository layer for streamlined data storage, retrieval, and management.\nTransform & Validate with Precision: Craft powerful ItemProcessors to artfully transform, validate, and enrich data, turning raw information into valuable assets.\nConfiguration Mastery: Navigate the intricacies of Spring Batch configuration. From dynamic job parameters to sophisticated step orchestration, you'll gain granular control.\nOrchestrate Like a Conductor: Master the Spring Batch controller layer to manage job execution flows, monitor progress, and handle exceptions gracefully.\nSeamless Integration: Expertly configure your Spring Batch applications to integrate flawlessly within the Spring Boot ecosystem.\nBulletproof Your Batch Jobs: Implement comprehensive testing strategies, ensuring your applications are not only powerful but also reliable and performant under pressure.\nAre You Ready to Become a Batch Processing Powerhouse?\nUnrivaled Depth: From foundational concepts to advanced optimization and partitioning techniques for massive datasets, we leave no stone unturned.\nLearn by Doing, Not Just Watching: Engage with meticulously crafted code examples and build portfolio-worthy projects that demonstrate your expertise.\nArchitect for Scale: Acquire the techniques to design and implement batch jobs that can handle extreme volumes and deliver exceptional performance.\nLearn from the Trenches: Benefit from the distilled wisdom and practical insights of an experienced instructor who lives and breathes Spring Batch.\nThis Course Is Your Launchpad If You Are:\nA Java Developer, Software Engineer, or IT Professional determined to specialize in high-demand batch processing skills. Whether you're taking your first steps with Spring Batch or seeking to deepen your existing knowledge, this comprehensive program will provide the critical insights and practical capabilities to significantly advance your career trajectory.\nThe Future is Batch. Your Future is Bright.\nUpon completion, you won't just understand Spring Batch; you'll wield it. You'll be equipped to design, develop, and deploy robust, scalable, and efficient batch applications that solve real-world business problems. Don't let this opportunity to master a critical enterprise technology pass you by.\nEnroll Now and Forge Your Path to Spring Batch Mastery!",
      "target_audience": [
        "Programmers",
        "Software Developers",
        "Web Developers"
      ]
    },
    {
      "title": "Zoom API For Website -Integrate with PHP CodeIgniter Quickly",
      "url": "https://www.udemy.com/course/integrate-zoom-live-streaming-api-in-php-codeigniter/",
      "bio": "This is the only course on this platform where zoom live streaming API is fully integrated to the school management",
      "objectives": [
        "Be able to build any web app you want using codeigniter",
        "Build fully-fledged web apps for your startup or business",
        "Build complete school management in codeigniter",
        "Work as a freelance codeigniter developer",
        "Craft a portfolio of web apps to apply for seniour developer jobs",
        "Learn to use PHP effectively",
        "Have a new PHP Skill that would increase income",
        "Able to Integrate Zoom Live Streaming to the CodeIgniter Project"
      ],
      "course_content": {},
      "requirements": [
        "PHP version 7+ is a must",
        "School Course Part One is a must",
        "School Course Part Two is a must",
        "Little knowledge of PHP, though not neccessary becase I'll teach you everything you need to know",
        "Little knowledge of CSS will be an advantage",
        "Zeal to learn codeigniter framework",
        "Computer system - windows/mac",
        "I'll walk you through, step-by-step how to setup codeigniter"
      ],
      "description": "Live streamed video means viewers can participate and watch in real-time. Live stream is the future of video and presents a world of opportunity for school communications and distance learning. It is not only a great way to capture and share events when they occur, but a way to automatically build a video library of all your important school communications and engaging school stories.\nOnce these live stream videos are created, they can be stored and repurposed for your future content needs. With a little planning and research, live streaming can become a core element in your district communications content strategy.\nLive streaming is coming to a school near you soon.\nWith school closures come a huge need for school districts to get up to speed fast on using live streaming for school communications and remote learning. Whether it's urgent news about a pandemic, ongoing, regular opportunities to reach your school community, or a foundational element to your distance learning, live streaming video needs to be part of your communications strategy.\nWhat makes a good school live video?\nThere are endless sources of raw material for live streaming content:\nOnline classrooms\nSchool board and PTA meetings\nSuperintendents/principal messages\nIn-service and other meetings\nSporting and special events\nPep rallies/assemblies\nGraduation and other ceremonies\nPlays and concerts\n\n\nFrom Beginner to Expert CodeIgniter Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on elsewhere.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. The course is practical oriented and it is a not waste time course as we learn by practical.\nDon’t waste your time\nDon’t waste another minute of your precious life on poor quality videos. Or instructors who you can’t understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it.\nSign up today, and look forwards to:\nBuilding complete and standard school management system.\nAll the knowledge you need to start building any web app you want\nChallenges and Solutions\nFast and helpful support if you need anything or have questions\nMy great sense of humor.\nBe ready to build meaningful software quickly\nJoin us NOW as we successfully integrate zoom live streaming to our existing codeigniter projects !",
      "target_audience": [
        "Beginner and professional developers who want to learn more about codeigniter",
        "Beginner and professional developers who want to learn how to integrate Zoom API with CodeIgniter",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build complete school system",
        "Developers who want to be codeigniter expert.",
        "Beginner Codeigniter developers curious about how to build school system"
      ]
    },
    {
      "title": "JavaScript Fundamentals: Master the Document Object Model",
      "url": "https://www.udemy.com/course/learn-dom-manipulation-with-easy-modern-javascript/",
      "bio": "Learn the Document Object Model fundamentals by building an interactive game with plain HTML, DOM and modern JavaScript.",
      "objectives": [
        "Dynamic html elements",
        "Dynamic css styles",
        "Animations leveraging DOM API's.",
        "DOM events and event listeners",
        "Common DOM API's and documentation",
        "Interactive UIs development",
        "State Driven User Interfaces",
        "Have a better idea of how modern libraries work under the hood",
        "5 minute bundles",
        "Object oriented programming concepts",
        "Javascript private attributes",
        "Performance profiling",
        "Clean code practices"
      ],
      "course_content": {
        "Welcome": [
          "What is the DOM?",
          "Your first DOM update",
          "Course project: Code DOM adventure",
          "Suggested browser to take the lectures",
          "Download exercise files, all code for each module. Code along or skip anytime."
        ],
        "DOM Fundamentals": [
          "HTML and the DOM",
          "DOM standards",
          "The BOM",
          "The CSSOM",
          "The tree (Data structure)",
          "Knowledge check!",
          "The DOM tree",
          "The DOM and JavaScript"
        ],
        "Code DOM Adventure": [
          "App architecture",
          "Challenge: Add the exit screen to the application class diagram",
          "Challenge solution: The exit screen",
          "App skeleton",
          "The splash screen file",
          "Download our asset kit now!",
          "Including the assets"
        ],
        "Creating elements": [
          "Wiring the splash screen element",
          "Creating elements at runtime",
          "Appending HTML strings width append()",
          "Appending nodes with append or appendChild",
          "Script order matters"
        ],
        "Dynamic CSS": [
          "Specifying classes to elements",
          "Working with static styles",
          "Defining styles at runtime",
          "Querying the DOM to find elements"
        ],
        "Profiling the pixel pipeline": [
          "The pixel pipeline",
          "Identifying bad practices",
          "Profiling runtime performance",
          "Batching DOM updates with document fragments",
          "Too many nodes"
        ],
        "Animations using DOM changes": [
          "Removing nodes from the DOM",
          "The animation frames",
          "Our animate method",
          "Our working animation!",
          "Stopping the animation"
        ],
        "Planning DOM changes with a state model": [
          "Let's build the level!",
          "2. Our state model to control the DOM from state.",
          "Normalizing attributes",
          "Our level class",
          "Arrays, references and non-iterable empty slots",
          "Building our state with an ugly oneliner",
          "Write code for humans and normalize your code",
          "Rendering the level element",
          "hmm, things are getting messy"
        ],
        "Easy bundling": [
          "Pre-requisites",
          "Easy bundling",
          "Bundle with the start script",
          "Our dev server",
          "Let's use DOMContentLoaded and ES Modules (ESM)",
          "Dynamic style elements with CSS as ESM imports"
        ],
        "DOM updates with basic state driven development": [
          "Designing the shape of our state",
          "Initializing our state in preparation to render DOM elements",
          "DOM updates from state",
          "Updates to state are reflected in the DOM",
          "Modeling and render our chip walls"
        ]
      },
      "requirements": [
        "Basic Javascript and HTML concepts",
        "nodeJS 12+ and npm just for tooling, we don't program in nodejs in this course."
      ],
      "description": "The Document Object Model (DOM) is the data representation of the objects that comprise the structure and content of a document on the web. This is what we use when we work with Javascript and interact in any way dynamically with the document.\n\nIf you use Angular, Vue, React, or any other library or framework to create modern web applications, the DOM is what these use under the hood.\n\n\nIf you want to stand out as a JavaScript developer, you need to learn DOM fundamentals.\n\n\nBy the end of watching this course, you'll be able to:\nUnderstand what is the DOM and how to interact dynamically with an HTML document.\nUse modern and easy Javascript with classes, private attributes, and dom API's to build user interfaces.\nLearn optimization techniques.\nApply easy bundling techniques that include dynamic CSS loading.\nSearch for documentation, you don't need to memorize all the DOM interfaces.\nInteract with the DOM and user input through event listeners.\nApply clean code and best practices as we build along with our course project.\n\n\nWith this course, you'll get a downloadable source code package.\n\n\nPREREQUISITES\nJavascript concepts and basic fluency, functions, variables, running scripts.\nThis is a beginner and intermediate course.\nYou don't need previous experience with the DOM.\n---\nPromo video music license:\nAdventures by A Himitsu - Creative Commons — Attribution 3.0 Unported— CC BY 3.0   Music released by Argofox - Music provided by Audio Library",
      "target_audience": [
        "Coding bootcamp graduates",
        "Computer science graduates",
        "Beginner Javascript students",
        "Intermediate Javascript students",
        "Advanced Javascript students"
      ]
    },
    {
      "title": "Modern Frontend with Java | Jmix in Action",
      "url": "https://www.udemy.com/course/frontend-with-java-and-jmix/",
      "bio": "Practical insights to help you design modern and effective UIs for your web applications with Java and Jmix",
      "objectives": [
        "Learn advantages and challenges of building frontend with Jmix",
        "Jmix Studio frontend tooling",
        "Building views, notifications, dialogs, and outcome logic for user actions",
        "Navigating views within the application",
        "Understanding view lifecycle and handling events sequence on the view",
        "Purpose and use of facets",
        "Binding data to components, elements of components"
      ],
      "course_content": {
        "Introduction": [
          "Overview of Jmix and Course Content",
          "How to follow this course",
          "Commonly asked questions"
        ],
        "Installing Jmix Studio": [
          "Note to Current Jmix Users",
          "Installing Jmix Studio",
          "How to start a new project?",
          "How to run the application?",
          "Hot Deploy"
        ],
        "Jmix UI": [
          "UI Overview",
          "Component Types",
          "Resources for mastering components",
          "Data-aware Components"
        ],
        "Closer look at visual components": [
          "Overview",
          "Jmix PetClinic on GitHub",
          "Generic Filter",
          "Data Grid",
          "Demo Applications and Flow UI Samples",
          "Links to Jmix Demos",
          "Share your ideas!"
        ],
        "Main Menu": [
          "Studio tools for Main Menu",
          "Access to Menu",
          "Searching through Main Menu",
          "Main Menu Badges"
        ],
        "Views": [
          "Views Overview and Hierarchy",
          "List Views and Lookup Views",
          "View Annotations",
          "View Lifecycle Events",
          "View Lifecycle Events",
          "Link to project",
          "View Lifecycle Practice",
          "View Methods",
          "Section Resources"
        ],
        "Navigation and Opening Views": [
          "Overview",
          "Link to project",
          "Links and ViewNavigators bean",
          "Methods of ViewNavigators bean",
          "Opening View in a Dialog Window"
        ],
        "Facets": [
          "Facets Intro",
          "Link to Project",
          "dataLoadCoordinator",
          "timer",
          "urlQueryParameters",
          "settings"
        ],
        "Notifications": [
          "Notifications Overview",
          "Data-aware Notification",
          "Notifications add-on",
          "Links to Resources"
        ],
        "Dialogs": [
          "Dialogs Overview",
          "Creating Dialogs",
          "Practice"
        ]
      },
      "requirements": [
        "Basic Java and general web development",
        "Familiarity with HTML and CSS"
      ],
      "description": "Hello and welcome! With this course we invite you to join a guided journey on fast development of\nenterprise-grade UI with Java and Jmix.\nJmix is an open-source platform for creating full-stack web applications in Java or Kotlin. It helps developers quickly and efficiently build various types of applications: from basic CRUD applications for internal use to highly specialized systems classified as ERP, CRM, EAM, SCM, WMS, ECM, ERM, HRM.\nUnlike our introductory full-stack development course, this one is more targeted, placing a greater emphasis on UI. You will learn how to customize Jmix applications for different needs. However, due to Jmix's full-stack nature we'll also touch on its backend functionality. By observing a fully-featured web application you will gain valuable context for understanding the backend logic, which can often seem abstract when viewed through code alone.\nThe course covers a variety of frontend-related topics such as library of components, binding components to data, building custom views, setting up navigation and handling lifecycle events. Lessons are organized in a straightforward, step-by-step format. Each section in the course tackles an independent hands-on project focusing certain UI aspect. This will enhance your understanding and enable you to bring UI advancement to your own applications.\nBy the end of the course, you will have a solid understanding of frontend development with Jmix and the confidence to create more custom user interfaces for your applications.",
      "target_audience": [
        "Java developers of all levels interested in building a full-stack application",
        "Developers and teams exploring tools to boost productivity",
        "Anyone looking to create a web application based on open-source technologies"
      ]
    },
    {
      "title": "Understanding PHP Data Objects (PDO)",
      "url": "https://www.udemy.com/course/understanding-php-data-objects-pdo/",
      "bio": "Learn to use the PDO library to access databases using PHP",
      "objectives": [
        "Work with MySQL and other database software from PHP including connecting, inserting, updating records, displaying database records in lists within HTML and database security."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Understanding PHP Data Objects (PDO)": [
          "Listing Available Drivers",
          "Setting Up A Database",
          "Connecting",
          "Error Levels"
        ],
        "Fetching Results": [
          "Basic Queries",
          "Fetching Results",
          "Looping",
          "Fetch All",
          "Fetch As Object",
          "Row Count"
        ],
        "Hands On Project: User Class Dates": [
          "Project: User Class Dates"
        ],
        "Security": [
          "Escaping",
          "Prepared Statements"
        ],
        "Inserting": [
          "Inserting",
          "Last Inserted ID"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Will require a webserver (Apache or Nginx) with PHP 5.1 or greater, and MySQL installed. Students will also require database management software such as Sequel Pro (Mac), HeidiSQL (Windows) or MySQL workbench (Linux)."
      ],
      "description": "The course teaches PHP Data Objects (PDO), the preferred way to connect to databases within PHP. It covers connecting to the database, and using all the features required to build fast, scalable applications that use a database connection. It covers essential concepts like security, and best practices with using the data retrieved from the database.\nWhile a basic knowledge of PHP is recommended for this course, both beginners and experienced web developers will gain a complete understanding of how PHP Data Objects work.\nA basic knowledge of PHP is recommended for this course. You will need to be able to open and write to a basic PHP file and be able to have a server and database installed. This course will use MySQL server.\nExactly What Is PDO?\nThe PHP Data Objects (PDO) extension defines a lightweight, consistent interface for accessing databases in PHP. Each database driver that implements the PDO interface can expose database-specific features as regular extension functions. Note that you cannot perform any database functions using the PDO extension by itself; you must use a database-specific PDO driver to access a database server.\nPDO provides a data-access abstraction layer, which means that, regardless of which database you're using, you use the same functions to issue queries and fetch data. PDO does not provide a database abstraction; it doesn't rewrite SQL or emulate missing features. You should use a full-blown abstraction layer if you need that facility.",
      "target_audience": [
        "Anyone with basic knowledge of PHP, database experience not required but is helpful, as this is demonstrated."
      ]
    },
    {
      "title": "Salesforce Javascript Certification-Lightning Web Components",
      "url": "https://www.udemy.com/course/salesforce-javascript-certification/",
      "bio": "Learn the LWC framework and prepare to complete your JavaScript specialist super-badge ASAP.",
      "objectives": [
        "Learn Lightning Web Components",
        "Certification Preparation for Salesforce Javascript Certification",
        "Support through the challenging Lightning Web Components Specialist superbadge",
        "Create Custom UI for Salesforce",
        "Advanced topics such as the lightning message service, the Wire adapter etc.",
        "Learn how to communicate with child and parent components",
        "Learn a scalable modern open source component based web framework",
        "get help on the javascript superbadge if you are having a tough time"
      ],
      "course_content": {
        "Course Resources": [
          "Course Resources"
        ],
        "Lightning Web Components": [
          "Create a Developer Org",
          "Setup Development Environment",
          "Hello World LWC",
          "Data Binding",
          "Iteration",
          "Conditional Rendering",
          "Javascript Classes",
          "Component Hierarchy @api",
          "Getters",
          "Setters",
          "@track",
          "Shadow DOM",
          "SLDS",
          "Sharing CSS",
          "Style a child component across the shadow dom",
          "Call Public Methods On Child Components",
          "Dispatch Custom Event on Child Component",
          "Code-a-Long-Todo List-Part_1",
          "Code-a-Long-Todo List-Part_2",
          "Local Development",
          "The Render Method",
          "Lifecycle Methods",
          "Lightning Navigation Service",
          "Lightning Record Form",
          "lightning-record-view-form",
          "lightning-record-edit-form",
          "Wire Adapter 1",
          "Wire Adapter 2",
          "Record CRUD Operations"
        ]
      },
      "requirements": [
        "This course is designed for web developers who want to quickly complete their salesforce Javascript certification.",
        "You should already be a solid intermediate level Javascript practitioner. This course is designed to be very efficient with your time and get you up to speed on Lightning Web Components as thoroughly and rapidly as possible."
      ],
      "description": "The Salesforce JavaScript certification offers credible way to prove your ability to use the JavaScript programming language effectively.  If you are already a web developer experienced in JavaScript programming then this course helps you to learn the lightning web components library as quickly as humanly possible.  Included in these succinct lessons is everything you need to know about lightning web components not only to be effective with the use of this open source scalable component based framework, but also everything you need to know about them to be able to complete the lightning web component specialist super-badge.  This super-badge is one of two parts required to earn the Salesforce JavaScript Developer I certification, the other being their test.  The test is on JavaScript including both node and frontend JS, but is not specific to salesforce at all.  So if you are already a JavaScript expert, this course has everything you need to complete the certification and have proof of your expertise with just a few weeks of work/study.\nIf you are a new web developer or recent bootcamp grad, the JavaScript Developer I certification offered by Salesforce could be a fantastic choice for you to pursue.  Not only is Salesforce the #1 CRM on the planet, making this credential valuable because you might work with Salesforce, but it is also the most credible JavaScript certification you will find.  Salesforce has their roots deep in the computer science world, many of the same developers who created the famous and beloved programming language Java were the same people who created Salesforce.  Their position as an industry leader in the SAAS (Software as a service) industry where they predated such giants as Google, AWS, Microsoft and others, as well as their position as the #1 CRM on the planet by market share, makes this certification a great credential to strive for.  In this course, I  help you achieve it.",
      "target_audience": [
        "Web developers who want to quickly complete their salesforce javascript certification"
      ]
    },
    {
      "title": "Student Registration System in PHP With Admin Panel",
      "url": "https://www.udemy.com/course/student-registration-system-in-php/",
      "bio": "Learn Student Registration System in PHP With Admin Panel. Guys, I will teach you everything you need to know.",
      "objectives": [
        "Student Will Able to Develop Web Application using PHP and MySQLi"
      ],
      "course_content": {
        "Introduction & Startup": [
          "Introduction",
          "Download & Install Xampp & Visual Studio Code",
          "Design Navbar",
          "Design Student Login Form",
          "Design Student Registration Form"
        ],
        "Student Registration System": [
          "Design Application Database",
          "Get Image",
          "Get Input Text Fields Values",
          "Use Validations",
          "Insert Data in to Database"
        ],
        "Student Login System": [
          "Match User or Email & Password",
          "Display Logout Button",
          "Design View Page",
          "Display Database Values in View Page"
        ],
        "Admin Panel": [
          "Admin Database Table And Admin Form",
          "Admin Display Logout Button on Navigation Bar",
          "Display Student Records",
          "Display The Buttons in the Admin Panel",
          "Admin View Link to Display Each Student Record",
          "Admin Edit Display The Complete Record in the Input Text Fields",
          "Admin Update Student Record",
          "Admin Delete Student Record",
          "Admin Search Student Record",
          "How to Create PDF File in Php from Database"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge"
      ],
      "description": "Student Registration System in PHP with Admin Panel\nGuys, I hope you all of fine, in this course, you will learn How to Make Student Registration System in PHP with Admin Panel. Guys, PHP one of the best Web Based Programming language which used to develop web-based Application. I have seen newbies or beginners in this fields they are facing problems to develop applications using PHP and MySQLi Database.\nGuys, I will teach you how you can use PHP and MySQLi Database to developed the Web-Based Application.  Remember Guys, before enrolled this course, you must have PHP Basic Knowledge, Then you will able to design and Also Develop Web-Based Application Using PHP & MySQLi Database.\nGuys, First of All, We Will Design Login & Registration Form using Bootstrap. Then we will learn How to Use PHP to Store the Data in the Database. After that, we will Use PHP and MySQLi Database to Develop Login System.\nBasically, Student Will Store the Data in the Database, Then User Will Use Personal Detail such as Email, User Name & Password to Login Application. Then Student Will able to See Personal Records.\nIn this project have an Admin Panel. Admin will able to see All Student Records and Perform the Operations such as Insert, Update, Delete, View and Also Search the Record. The Whole Application developed in PHP and MySQLi, You can learn step by step with practically. I mentioned source code of this application.\nStudent Registration System in PHP Features:\n\nDesign Login & Registration Form in Bootstrap.\nUsing PHP & MySQLi to Store the Student Records\nUsing PHP & MySQLi to Student Login the Application\nUsing PHP & MySQLi to Admin Perform the Operations (CRUD) & Search.\nAbove Mentioned topics we will cover, I will teach with you step by step design and also develop the applications. Another important I will also teach with you How to assign form validation, Image validation, Email validation and much more. Finally I will teach with you how to perform the operations such as Insert, Update, Delete, View and Also Search from Admin Panel.\nStudent or User Only able to see personal record who have registered account with particular user name and also user email etc. Particular Student doesn't access another users record. I will teach with you can handle it, You will learn everything to build an web application using Php and MySQL database.\nAfter completing the course, you will able to develop the any type dynamically web applications using Php and MySQLi database. If you interested to learn it don't waste the time click to enroll now button and start to learn Student Registration System in Php and MySQLi.\nThanks For Reading :)",
      "target_audience": [
        "Anyone Who Want to Develop Web Application in PHP"
      ]
    },
    {
      "title": "Creating and Setting Up a Web Server",
      "url": "https://www.udemy.com/course/setting-up-web-serversql-injection-and-prepared-statements/",
      "bio": "Learn how to set up a web server from scratch by configuring a linux system to act as a web server",
      "objectives": [
        "how to set up a web server",
        "how to create a web site",
        "sql injection",
        "prepared statements",
        "how to create a database in mysql",
        "mysql in cli",
        "how to create a website in linux",
        "how to install mysql in linux"
      ],
      "course_content": {},
      "requirements": [
        "there is no requirement for this course"
      ],
      "description": "the initial goal of this course was to learn about database, how to use them for our web site, how to attack them using concepts like sql injection and how to patch the vulnerabilities resulting in sql injection using prepared statements, but in order for us to do that, we start by creating a website from scratch by buying a virtual private server (vps) with the linux as its operating system , which would result to teach some other concepts along the way.\n\n\nso as we along you would be familiar with almost everything you need to create website from scratch , concepts that you usually take for granted, for example we learn html,css and javascript abstracts, that what these things are , and why you need them, also we will talk about linux and some important commands.  and at last you learn about sql injection, that why such an attack exists , so that you could better understand how to exploit or patch it by yourself and not using any third party applications.\n\n\nso after this you could just set up your own web server, and even use your own computer for that purpose even though we talk about why this is not recommended, also you learn how to buy vps and create your website vulnerable to sql injection and then patch it using prepared statements.",
      "target_audience": [
        "web developers",
        "security pentesters"
      ]
    },
    {
      "title": "Learn To Build Microservices Driven Apps Using NodeJS",
      "url": "https://www.udemy.com/course/learn-to-build-microservices-driven-apps/",
      "bio": "Create real world microservices based app using NodeJs, Express and MongoDB",
      "objectives": [
        "Learn to build a real world microservice driven application",
        "Learn to use NodeJs, Express and MongoDB together",
        "Learn to think about microservice design and implementation"
      ],
      "course_content": {},
      "requirements": [
        "Basic knolwedge of NodeJS, Express and MongoDB is required to complete the course"
      ],
      "description": "Learn to build microservices driven software using NodeJS, Express and Mongo DB. A course that will teach you professional software development using microservices.\n\nMicroservices are changing the way how scalable software and applications are built globally. In this course you will learn how to think about a microservice and how to implement it to solve a real world problem. In this course We will build a Library application that will include a Book Service, a Customer Service and also an Order Service that will join the first two services to create a functional app. We will focus on technologies such as ExpressJS, MongoDB, Mongoose and mLAB. ExpressJS will be the primary framework for building the project. MongDB will be preferred database, Mongoose will help in object modeling, and lastly mLAB will host our entire project.\nOur main focus is to help not only strengthen your knowledge behind the subject, but also be comfortable enough to actually start working on the technology. Using a project-based approach, the course will take you step-by-step through the entire process of building the microservices, to ensure that you understand the fundamentals correctly. This will allow you to integrate this amazing technology in your other project\nThe course will start by helping you set up the project, after which you will learn how to install relevant software, connecting to mLAB, defining the book model, making post request to book services, saving books to the database, listing & deleting books, customers service, defining order model, creating and listing orders, talking with other services and so much more!\nAt the end of this course, you will not only have the theory of how you can build microservices, but you’ll also have confidence and the experience to actually start building your very own projects from scratch.\nThis complete beginners course will help you not only become familiar with NodeJS and building microservices in NodeJS, but also will set you up building more complex projects on NodeJS using Express and MongoDB.\nSo, enroll now and start learning how to build microservices using ExpressJS!",
      "target_audience": [
        "Students who want to build real world microservice driven software will find this course very useful"
      ]
    },
    {
      "title": "Typescript (+ React) : The beginner guide",
      "url": "https://www.udemy.com/course/typescript-the-beginner-guide/",
      "bio": "Supercharge your Javascript projects with TypeScript and learn how to build a React + Typescript web project !",
      "objectives": [
        "Use the TypeScript language to make your JavaScript typed, robust, and consistent.",
        "Setup Typescript in a new or an existing project",
        "Types and how to use them",
        "Classes",
        "Namespaces",
        "Interfaces",
        "Genericity",
        "Decorators",
        "Typescript in a vanilla HTML/CSS/JS project",
        "Typescript in a React project"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML/CSS/Javascript knowledges",
        "Knowing React without Typescript (for the React part)"
      ],
      "description": "TypeScript was developed by Microsoft and has become a reference in the JavaScript community.\n\nTypeScript is the language or rather the layer that can be added to a JavaScript project (such as React, Angular, Vue, Node.JS, Electron, and many other great technologies).\n\nIt gives you access to everything that JavaScript can do, so you don't lose anything and you can do a lot more!\n\nAny respectable JavaScript project, regardless of the framework or library used, utilizes TypeScript.\nThis is even more true, especially in the professional world.\nIn this course learn why TypeScript is very powerful when added to JavaScript, what it enables, and how to use it.\n\nYou'll also learn how to use it in a React project !\n\nThe program includes:\n\nThe Typescript language :\n\n\nPrimitives types and how to use them\nHow the TypeScript compiler works\nClasses with TypeScript\nFunctions, default and optionals parameters\nObjects\nArrays\nObject oriented programming\nNamespaces and modules\nInterfaces\nEnumerations\nAccess modifier\nTypes\nType casting\nGenerics\nDecorators\n+  A full React + Typescript project  :\n\nCreate a Vite + React + Typescript project\nBuild a full React + TS web app !\n\nThis course will explore the basics as well as more complex and advanced aspects of TypeScript in a casual and progressive manner!\n\nLearning TypeScript is a way to enhance your skills, gain essential knowledge in the web and mobile world, and truly be an asset in the professional sphere.",
      "target_audience": [
        "Any Javascript developer ( jquery dev, Angular Dev, React Dev, Vue Dev, Svelte dev...)"
      ]
    },
    {
      "title": "CodeIgniter 4: Build Real Estate Management System",
      "url": "https://www.udemy.com/course/codeigniter-4-for-2023-build-real-estate-management-system/",
      "bio": "Build Complete Real Estate Management System in PHP CodeIgniter MySQL and Bootstrap and Up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Shield package",
        "Learn how the MVC structure works in CodeIgniter",
        "Integrate your own theme easily",
        "Work with Models the professional way",
        "Work with views the professional way",
        "Work with Controllers the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn to create a working search box",
        "Learn some advanced routing ways",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Learn to create a working multi search box",
        "work with Filters"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started and Creating Authentication System": [
          "Design and Code for the Project",
          "Creating our Project with CodeIgniter pt.1",
          "Creating our Project with CodeIgniter pt.2",
          "Creating Authentication System with Shield",
          "Creating Master Template and Home Page"
        ],
        "Getting Main Features Done": [
          "Displaying Properties in Home Page pt.1",
          "Displaying Properties in Home Page pt.2",
          "Displaying Properties Based on Type",
          "Displaying Properties Based on Price",
          "Displaying Details for every Property"
        ],
        "Working with Gallery and Properties and Requests and More": [
          "Displaying Gallery for every Property",
          "Displaying Related Properties",
          "Sharing Properties Through Social Media",
          "Sending Requests",
          "Validating Sending Requests",
          "Saving Properties"
        ],
        "Searching for Properties and Users Pages": [
          "Displaying Properties Home Types",
          "Displaying Properties by Home Type",
          "Displaying Saved Properties and Requests for Users",
          "Validating and Cleaning up pt.1",
          "Validating and Cleaning up pt.2",
          "Searching for Properties"
        ],
        "Creating Authentication System for Admin Panel": [
          "Design and Code for Admin Panel",
          "Creating Authentication System pt.1",
          "Creating Authentication System pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying all Admins",
          "Creating New Admins"
        ],
        "Working with Home Types Section": [
          "Displaying Home Types",
          "Creating New Home Types",
          "Deleting Home Types",
          "Updating Home Types"
        ],
        "Working with Properties Section": [
          "Displaying all Properties",
          "Creating New Properties",
          "Creating New Galleries",
          "Deleting Properties with Image and Gallery"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of CodeIgniter would help a lot"
      ],
      "description": "Are you ready to take your web development skills to the next level? Join my comprehensive online course, \"CodeIgniter 4 for 2023: Build Real Estate Management System,\" and dive into the world of modern web application development using CodeIgniter 4, a powerful PHP framework.\n\nIn this course, we will guide you through the process of building a robust real estate management system from scratch. Whether you're a beginner or an experienced developer looking to expand your skill set, this course will provide you with the knowledge and hands-on experience needed to create dynamic and efficient web applications.\n\nThroughout the course, you will learn the ins and outs of CodeIgniter 4, the latest version of this popular framework. We will cover essential topics such as MVC architecture, routing, database integration, form validation, user authentication, and much more. With each lesson, you will gain a deeper understanding of how CodeIgniter 4 works and how to leverage its features to build professional-grade applications.\n\nBy the end of this course, you will have built a fully functional real estate management system that includes features like property listings, search functionality, user management, and administrative control. You will also learn best practices\n\nWhat sets this course apart is its focus on practical, real-world application development. You will work on hands-on features that simulate real-life scenarios, allowing you to apply your newly acquired knowledge in a meaningful way. I will provide guidance and support throughout the course, ensuring that you have the resources you need to succeed.\n\nWhether you're a freelancer, a web development enthusiast, or a professional looking to enhance your portfolio, \"CodeIgniter 4 for 2023: Build Real Estate Management System\" is the perfect course to equip you with the skills necessary to thrive in the ever-evolving world of web development. Enroll now and unlock your potential as a CodeIgniter 4 developer!",
      "target_audience": [
        "People who learned PHP CodeIgniter and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Zero to Pro Web Developer Bootcamp - Get Hired in 2022!",
      "url": "https://www.udemy.com/course/zero-to-pro-web-developer-bootcamp/",
      "bio": "Go from no Web Developer experience to creating and deploying a React JS web application. Become a Web Developer today!",
      "objectives": [
        "A strong understanding of HTML5, CSS3, and Modern JavaScript for 2021",
        "Make a world class Todo Application using tools from Google, Facebook and Atlassian",
        "Master ReactJS to create a modern single page application like Trello",
        "Learn to use Google's Cloud Firebase to manage user data and authentication",
        "Use Atlassian's open source drag and drop package to create a Todo app",
        "Create responsive, accessible, and beautiful layouts",
        "Using Nodejs to run JavaScript on the fly",
        "Make real web applications using cutting-edge technologies",
        "Deploy your applications and work with cloud databases",
        "Create static HTML and CSS sites and landing pages",
        "Thinking like a developer and becoming a pro at finding a solution to your code questions!",
        "Use CSS Frameworks such as Bootstrap and Material-UI",
        "Use JavaScript variables, conditionals, loops, functions, arrays, and objects",
        "Implement responsive navbars and design on websites",
        "Creating Javascript functions, and understanding scope",
        "Understand the strange behaviours of JavaScript",
        "Manipulate the DOM with plain JavaScript",
        "Use common JavaScript data structures like Arrays and Objects",
        "Become a Pro at using the command line interface",
        "Use NPM to leverage open source packages",
        "Lean how to make HTTP requests",
        "Implement user authentication",
        "Create Single Page Applications with AJAX and React JS",
        "Learn how to add Google's Material-UI to your web application to make it beautiful",
        "Understand React functional and class components",
        "Use React hooks to tap into extra power",
        "Using Flexbox for responsive design",
        "DOM Manipulation"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet access",
        "Ability to cope with my Australian accent",
        "A keen attitude to learn whats practically a superpower"
      ],
      "description": "Hi!\nWelcome to the Zero to Pro Web Developer Bootcamp! This course will take you from no coding experience to building and deploying a live website, with user authentication, using modern world-class technologies that Facebook and Google use including HTML, CSS, JavaScript, ReactJS, Firebase, Firestore, Vercel, Git, GitHub, Material UI, and more!\nI've cultivated this course to provide you with a strong fundamental understanding of web development without overwhelming you with all the extras. Many courses think the best path is to throw every topic of web development at you to see what sticks. This course provides you with enough to be competent than 90% of web developers without drowning you in all the extras. You've got an entire career ahead of you to pick them up so let's not scare you off!\nIt doesn't matter if you're a beginner, intermediate or advanced programmer. By the end of this course, you'll master how to create websites and, how to set up a seamless workflow to create and deploy modern web applications in a heartbeat!\nThis course will cover some of the most exciting tools in the industry and, let me tell you, you're going to feel like a superhero with these skills!\nI have come from where you are now, I learned web development online and then used it to leave a well-paying, secure job, to follow a passion. It was the best decision I ever made! For this reason, I know exactly what you need and how to coach you into becoming a hireable Web Developer!\nThroughout the course, we are going to cover a mountain of new and existing tools and technology including:\nHTML5\nCSS3\nFlexbox\nCSS Grid\nResponsive Design\nExisting and modern JavaScript - ES5, ES6\nAsynchronous JavaScript - Async Await, Promises\nSingle Page applications using AJAX\nReactJS\nBootstrap\nDOM Manipulation\nUsing the Command Line\nNode JS Basics\nNPM - To leverage open source code\nCRUD Operations\nFirebase Auth and Firestore - Document Based Database\nMaterial UI for making beautiful User Interfaces\nVercel - To deploy our websites in a heartbeat",
      "target_audience": [
        "People looking to learn how to make beautiful, modern web applications",
        "Beginner developers looking to up their skills",
        "Developers looking to learn ReactJS"
      ]
    },
    {
      "title": "NodeJS Express MongoDB Course With Real World Projects 2022",
      "url": "https://www.udemy.com/course/nodejs-express-mongodb/",
      "bio": "Learn Backend Development With NodeJS ExpressJS And MongoDB. Learn How to Create REST APIs in NodeJS. Build Powerful API",
      "objectives": [
        "Learn About NodeJS",
        "Learn How to create Backend Applications with NodeJS",
        "Create Servers With MongoDB",
        "Build More Than 5 POWERFUL & ADVANCE REST APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "All About NodeJS Express MongoDB and Application that we are building.",
          "Join Discord Server For Discussions"
        ],
        "NodeJS Basics": [
          "Installations of Softwares",
          "Create Your First NodeJS Application",
          "Modules (Core, Local, Export) In NodeJS",
          "Create API Server in NodeJS"
        ],
        "Backend ( Node Express & MongoDB ) Project - User Management System CRUD": [
          "Setting Up Develoment Environment",
          "Connecting Application To MongoDB Database",
          "Building User Model (Schema) For User Collection",
          "Creating GET API To Get All REcords From Database",
          "Creating a POST Http Request To Save a User in Database",
          "Creating UPDATE Request to Edit and Update Record in MongoDB Database",
          "Creating a DELETE Request to Delete a User From Database",
          "Assignment - Get a User By It's ID",
          "Summary"
        ],
        "Advance Project - Social Media Application's Backend": [
          "Introduction to concepts",
          "About Collections and their Relations",
          "Creating Simple Node Express Application",
          "MongoDB Collections and Folder Structure Of Application",
          "Creating User's Model and Controllers",
          "Creating POST Signup Request For User",
          "Encrypting User's Password",
          "Creating POST Login Request For User",
          "Creating BLOG's Model and Controllers",
          "Creating POST Request For Adding BLOG to Database",
          "Creating PUT Request To Update a BLOG",
          "Getting BLOG By ID",
          "Creating DELETE Request To Delete a BLOG",
          "Adding Relations - Modifying POST Request OF BLOG",
          "Adding Relations - Modifying DELETE Request of BLOG",
          "Getting Specific User's Blogs",
          "Summary"
        ],
        "Travel Diaries Application - Real World Backend Project (Advanced)": [
          "Overview of Application Structure",
          "Creating Simple NodeJS Application",
          "Connection to MongoDB",
          "User Model, Routes and Controllers",
          "User - Signup POST Request",
          "User Login Request",
          "Travel Post - Model, Controllers",
          "Travel Post - Getting Post By ID",
          "Travel Post - PUT Request To Update Post",
          "Travel Post - Deleting Post",
          "Relations - Relating Post and User - Modifying Controllers"
        ]
      },
      "requirements": [
        "No NodeJS Knowledge Required",
        "Basic JavaScript Knowledge Required"
      ],
      "description": "This is the perfect course for Backend Development With NodeJS Where you will be able to learn about REST APIs with NodeJS. At the end of this course, you won't need anyone to depend on creating Backend API on REST And With MVC Approach\nModel: Schema of Collection\nView: Frontend of Application\nControllers: Control Operations on Specific Routes\n\n\nNodeJS: Node.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on a JavaScript Engine and executes JavaScript code outside a web browser, which was designed to build scalable network applications.\n\n\nExpressJS: Express.js, or simply Express, is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs. It has been called the de facto standard server framework for Node.js.\n\n\nMongoDB: MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License which is deemed non-free by several distributions.\n\n\nNode + Express  + MongoDB = POWERFUL Backend With REST API\n\n\nUsing Express as a back-end middleware is a popular MongoDB stack design. Express is lightweight and approachable for JSON and REST API operations. MongoDB Atlas is a scalable and flexible document Database-as-a-Service and makes a perfect companion to Express in many stacks like MERN, MEAN, and MEVN.\n\n\nYou Will Learn About:\n\n\nHow to create NodeJS Application\n\n\nHow to Work With Modules in NodeJS (Local, Core and Export Modules)\n\n\nHow to Create a Powerful Backend With NODE.JS\n\n\nHow to Work With Files In NODE.JS\n\n\nHow to Create a API Http Server in NodeJS\n\n\nHow to create Node + Express Application\n\n\nCreating Express Server In NODE.JS\n\n\nNode.JS + Express + MongoDB\n\n\nLearn How to create a Backend Application With Express Node MongoDB\n\n\nLearn How to build REST API in NodeJS\n\n\nLearn How to Create API With GET Requests, POST HTTP Requests, UPDATE Requests, DELETE Requests, Router Query Params And Much More\n\n\nA Time Saving Course For Everyone Instead of Doing sily things with Basic Programming Concepts\n\n\nWITH REAL-WORLD PROJECTS\n\n\n\n\nSo let's start the journey\nAnd This course will be updated every week/month with Future Updates",
      "target_audience": [
        "Beginner JavaScript Developers Who Want to learn Backend Development With NodeJS"
      ]
    },
    {
      "title": "Build A TodoList with Go (Golang), Fiber and React",
      "url": "https://www.udemy.com/course/build-a-todolist-with-go-golang-fiber-and-react/",
      "bio": "Learn to build a Full Stack Go, Fiber and React Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with Go (Golang)",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the GORM ORM",
        "Learn to consume JSON with React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Disclaimer"
        ],
        "Create Go Fiber RESful API": [
          "Install Go",
          "Install Fiber",
          "Install Gorm",
          "Create Todo Gorm Model",
          "Setup Gorm Migrations and Fiber Routes",
          "Create Todos Request",
          "Get Todos By Id",
          "Update Todos",
          "Delete Todos",
          "Enable CORS"
        ],
        "Create React Todo Front End": [
          "Create React Todo Front End",
          "Build Project Structure",
          "Build Todo Service Part 1",
          "Build Todo Service Part 2",
          "Create Todo Form Part 1",
          "Create Todo Form Part 2",
          "Create Todo Form Part 3",
          "Build Todo Item Part 1",
          "Build Todo Item Part 2",
          "Build TodoTab",
          "Create TodoList State",
          "Create React Hooks to Refresh App",
          "Finish Todolist",
          "Bonus!"
        ]
      },
      "requirements": [
        "Understand Basic Go (Golang)"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use Go, Fiber, and React. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Go, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact\nChild Components\nHTTP Requests with Fetch\nCRUD Methods\nGo Programming Language\nFiber\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React and Go",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "JavaScript for Beginners",
      "url": "https://www.udemy.com/course/javascript-for-beginners-f/",
      "bio": "Follow these step-by-step tutorials to master JavaScript.",
      "objectives": [
        "Learn JavaScript syntax",
        "Learn to write and use JavaScript functions, loops, and conditionals",
        "Learn about the DOM and how to manipulate it",
        "Learn about functions JavaScript provides that you can utilize"
      ],
      "course_content": {
        "Introduction and syntax": [
          "Introduction",
          "Statements",
          "Variables",
          "Variables Part 2",
          "Using an external file",
          "Functions",
          "Functions Part 2",
          "Operators",
          "Conditionals Part 1",
          "Conditionals Part 2",
          "Loops",
          "Loops Part 2",
          "Function and if statement",
          "Return statement",
          "Global and local variables",
          "Pass by value",
          "Arrays"
        ],
        "Objects in JavaScript": [
          "Objects",
          "Objects Part 2",
          "Objects Part 3",
          "Objects Part 4",
          "String Object",
          "Math Object",
          "Date Object"
        ],
        "The Document Object Model (DOM)": [
          "Document Object Model",
          "getElementById method",
          "getElementsByTagName method",
          "getElementsByTagName Part 2",
          "getElementsByClassName",
          "Replace content using innerHTML",
          "Reading content using innerHTML",
          "Changing an image",
          "Intro to events",
          "The mouseover event",
          "Swap images with mouseover event",
          "Creating a new element",
          "Creating a new element Part 2",
          "Remove element",
          "Create attribute",
          "Traversing the DOM",
          "Traversing the DOM Part 2",
          "Traversing the DOM Part 3"
        ],
        "Forms and other topics": [
          "Form Validation Part 1",
          "Form Validation Part 2",
          "Form Validation Part 3",
          "Form Validation Part 4",
          "Form Validation Part 5",
          "Placement of script tag",
          "Follow up session",
          "Confirmation box",
          "More on Objects",
          "Windows Object"
        ]
      },
      "requirements": [
        "We will use Notepad++ but any text editor is fine",
        "A basic understanding of HTML and CSS helps"
      ],
      "description": "Nearly every interactive website you visit is using JavaScript. It has become the the default coding language of the internet. If you want to move beyond creating simple static web pages, it is essential to understand the basics of JavaScript. This course will teach you all the essentials of the JavaScript language. You will learn all about JavaScript variables, functions, conditionals and many more items. You will also learn about how to use the DOM or Document Object Model. When it comes to the JavaScript, nothing is more important than understanding the DOM if you want to understand how to use JavaScript effectively. So we will spend several videos examining how JavaScript works with the DOM.\nI firmly believe it is important to understand the core concepts to any language. And so, as always, I will stress concepts first and foremost.\nIn this JavaScript Beginners course, I will teach you all the main concepts of JavaScript.. Once you understand how to use JavaScript, it will be much easier for you to learn other scripting tools such as JQuery and Angular JS. That is because the basic concepts to scripting languages are all very simialr. This will put you on the road to creating highly interactive web pages that respond to users.\nWatch hours of engaging video lectures, and study all the code examples that will be provided. With this course, you will become fully competent in JavaScript!",
      "target_audience": [
        "This course is meant for absolute beginners"
      ]
    },
    {
      "title": "Vue JS 3 & Firebase - The Full Guide [2022]",
      "url": "https://www.udemy.com/course/vue-js-3-firebase-full-guide-2022/",
      "bio": "Create a real-world Vue JS 3 app with Firestore (Firebase). Learn Vuex, Composition, and the latest Vue JS 3 concepts.",
      "objectives": [
        "Develop real-world web application with Vue JS 3 and Firebase",
        "Understand Vue JS in practical and fun way",
        "Use gained knowledge to create your own applications",
        "Establish yourself in the field of the exciting mobile app development environment"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to resolve issues"
        ],
        "Project initialization": [
          "Dev Environment",
          "Note Before Coding",
          "Folder Structure",
          "First template",
          "Init styles",
          "Navbar separation",
          "Hero Section",
          "List and Pagination"
        ],
        "Data and Props": [
          "Vue Data",
          "For Loop",
          "Navbar Props",
          "Exchange data",
          "Display exchange data",
          "Exchange Tags",
          "Font Awesome",
          "Start Icon"
        ],
        "Router": [
          "Pages",
          "Router",
          "Page reusability",
          "Adjust Navbar",
          "Router link",
          "Page wrapper"
        ],
        "Vue concepts": [
          "Vue JS concepts",
          "Computed Properties",
          "Use Ref"
        ],
        "Vuex": [
          "Vuex introduction",
          "Vuex state",
          "Get exchanges with action",
          "Mutations",
          "Async Get exchanges",
          "Vuex modules",
          "Namespaced"
        ],
        "Firebase introduction": [
          "Firebase",
          "Specify data in Firestore",
          "Get data from Firestore"
        ],
        "Register": [
          "Login and Register Page",
          "Data binding",
          "Register form inputs",
          "User module",
          "Register user"
        ],
        "Auth and Composition": [
          "Error and processing",
          "Watchers",
          "Map vuex state",
          "Map State improvement",
          "Composition API",
          "useAuth",
          "More watchers",
          "Cleanup",
          "Toast Module"
        ],
        "Handle auth user": [
          "Create user Profile",
          "on auth state change",
          "Get user Profile",
          "Merge user and profile",
          "Register renaming",
          "Getters",
          "Get user in Composition",
          "Display user email"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge"
      ],
      "description": "What is Vue JS?\nVue JS is a cutting-edge JavaScript front-end framework designed to accelerate web app development. Trusted by major companies like Nintendo, Adobe, GitLab, Baidu, and Alibaba, Vue JS is rapidly gaining popularity—making it an excellent addition to your CV. Whether you're a beginner or an experienced programmer, this course equips you with the skills and confidence to effectively use Vue JS in your projects.\n\n\nWhat is Firebase?\nFirebase provides a real-time database and backend as a service.\n\n\nAbout the Course\nThis learning experience revolves around practical application, centered on a captivating project that will significantly boost your career portfolio\nMeet Exchangario—the application we'll build together, devoted to making the exchange of services and products seamless and engaging.\n\n\nHands-on Learning:\nEmphasis on practical learning through the Exchangario project.\nStrategic design to enhance skills and career portfolio.\nVue JS Fundamentals:\nDive into the basics, creating initial pages, setting up routing, and refining visual presentation.\nDatabase Integration:\nUtilize cloud Firestore from Firebase for a dynamic and standardized database.\nOrganize data on opportunities, exchanges, and user profiles within collections.\nFirebase Authentication:\nExplore Firebase authentication, covering logging in and registering intricacies.\nEnsure modifications are visible only to authenticated users.\nExchangario Project:\nFacilitate the exchange of services and products.\nImplement a dedicated page for proposing exchanges, with emphasis on comprehensive form validation using Vuelidate.\nAdvanced Functionalities:\nExplore trading exchanges between users, counter-offers, and opportunities.\nIntroduce pagination and search features for added depth.\nConclusion:\nCover essential security rules for Firestore to safeguard application integrity.\nConclude with a lesson on deploying the Exchangario application on Heroku.\nCourse Highlights:\nOffer 20 hours of on-screen instruction.\nCater to a broad audience, from beginners to experienced programmers, tailored to specific learning needs.",
      "target_audience": [
        "Beginners as well as experienced devs interested in Web development with Vue JS",
        "People looking for the practical development guide.",
        "This course is for everyone eager to understand how to build an app from scratch"
      ]
    },
    {
      "title": "Learn To Create Pure CSS3 Drop-Down Menus The Easy Way",
      "url": "https://www.udemy.com/course/learn-to-create-pure-css3-drop-down-menus/",
      "bio": "Infinite Skills shows you how to create pure CSS drop-down menus that require no JavaScript.",
      "objectives": [
        "Learn how to create pure CSS drop-down menus that require no JavaScript"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 A Quick Introduction To CSS3",
          "0102 What You Will Learn",
          "0103 How To Access Your Working Files"
        ],
        "The Basics": [
          "0201 CSS Hover",
          "0202 New CSS Selectors",
          "0203 Direct Child",
          "0204 Creating Hover Tabs - Part 1",
          "0205 Creating Hover Tabs - Part 2",
          "0206 New CSS3 Properties - Part 1",
          "0207 New CSS3 Properties - Part 2",
          "0208 New CSS3 Properties - Part 3",
          "0209 Basic CSS3 Transitions - Animations"
        ],
        "Building A Simple Menu With CSS3": [
          "0301 The HTML Markup - Simple Menu",
          "0302 Styling The Dropdown",
          "0303 Adding The Hover Functionality"
        ],
        "Building A Multi-Level Dropdown Menu": [
          "0401 The HTML Markup - Multi-Level Menu",
          "0402 Styling The First Level With CSS3 - Part 1",
          "0403 Styling The First Level With CSS3 - Part 2",
          "0404 Styling The Other Levels",
          "0405 When To Style Which Tag",
          "0406 Adding CSS3 Transitions",
          "0407 Changing The Menu Layout"
        ]
      },
      "requirements": [
        "PC or Mac"
      ],
      "description": "This CSS3 Dropdown Menus training course from Infinite Skills teaches you how to build CSS dropdown menus, without using JavaScript! This course is designed for users that already have a fundamental understanding of CSS3.\n\nYou will start by learning the basics, including the new CSS3 properties and basic CSS transitions (animations), which will give your menus a professional quality. You will then learn how to build a simple menu with CSS3. This course will teach you how to style the dropdowns and add the hover functionality. This video tutorial will also show you how to build a multi-level dropdown, teaching you how to style the other levels, add CSS3 transitions, and change the menu layout.\n\nOnce you have completed this computer based training course, you will be fully capable of creating your own CSS dropdown menus for your projects. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Users with a basic understanding of HTML and CSS"
      ]
    },
    {
      "title": "Hands-On MERN Stack Web Development",
      "url": "https://www.udemy.com/course/hands-on-mern-stack-web-development/",
      "bio": "Learn Node.js, Express, MongoDB, and React by building a web application from Scratch!",
      "objectives": [
        "Develop a project from scratch using the MERN stack",
        "Best practices for developing RESTful APIs with Node .js and Express",
        "A painless approach to writing integration tests for your backend",
        "The skills needed to configure, query, and interact with a Mongo database",
        "Work with React on the client and write declarative UI code",
        "Manage client state and asynchronous code with Redux",
        "Effectively debug client-side code with React Developer tools",
        "Pros and cons of scaffolding tools and how to get the most out of them.",
        "Deploy your application with Docker"
      ],
      "course_content": {
        "Welcome to the MERN Stack": [
          "The Course Overview",
          "Using Package Managers and the Command Line",
          "So, What’s MERN Anyway?",
          "A Brief Look at the Backend",
          "The Frontend Architecture"
        ],
        "Learn Node.js and Express": [
          "Your First Steps with Node.js",
          "Setting Up Express",
          "An Intro to REST, RESTful Service, and Domain Data Modeling",
          "Handling GET, POST, PUT, and DELETE Requests",
          "Creating and Using Express Middleware",
          "Setting Up Unit Tests with Jest",
          "Using Postman to Develop APIs Faster"
        ],
        "Using MongoDB for the Database Layer": [
          "An Introduction to MongoDB and NoSQL Databases",
          "Our New Project Structure and MongoDB Setup via Docker",
          "Connecting MongoDB to Our Node/Express Backend",
          "Reading Real Data from Our API",
          "Creating, Updating, and Deleting Data",
          "Filtering Data with MongoDB",
          "Refactoring and Improving Our Code"
        ],
        "Building the Client with React": [
          "A Gentle Primer to the World of React",
          "Hit the Ground Running with Create React App",
          "Creating Your First UI Components with JSX",
          "Data Flow with State and Props",
          "Creating a Reusable Component for Our Web Store",
          "Dynamic List Components",
          "Creating and Controlling Input Fields",
          "Controlling Buttons and Forms"
        ],
        "React App Architecture": [
          "Routing with React Router",
          "Configuring CORS in Express",
          "Requesting Data from Our API",
          "Creating the Category and Product View",
          "Building a Persistent Shopping Cart",
          "Protected Client-Side Admin User Routes"
        ],
        "Full Stack Web Development with the MERN Stack": [
          "JSON Web Tokens and the User Authentication Model",
          "Implementing Magic Links and Passwordless Login",
          "Implementing Passwordless Login on the Frontend",
          "Account Creation",
          "Designing the Orders Schema and User Flow",
          "Implementing the Orders Flow",
          "Error Handling and Loading States",
          "Building the Orders History Page"
        ],
        "Refactoring and Polishing Our Web Application": [
          "Typechecking React Components with PropTypes",
          "Testing React Components",
          "Jest Snapshot Tests",
          "React Functional Components and Making Featured Products",
          "Express Best Practices",
          "Frameworks, Boilerplates, and What to Learn Next"
        ]
      },
      "requirements": [
        "They will have knowledge of JavaScript programming and some experience with web development."
      ],
      "description": "There's a growing demand for full-stack developers, but becoming one is not an easy task. A full-stack engineer is expected to have frontend and backend skills, as well as extensive knowledge of build tools and deployment workflow.\nBuilding real-world projects and understanding the MERN stack is a great way to become a full-stack engineer. So, the journey starts by taking you through the MERN stack to explore Node.js and Express and set up the groundwork for the project. It's vital to store data safely hence we dive into the world of MongoDB and integrate it with our backend. Now, we build a client application that can consume API services. With React you'll be able to solve the two most daunting frontend problems and use JSON Web Tokens (JWTs) to integrate authentication and session management on both the client and the server. Finally, we review the skills that you've acquired throughout the course, look into the MERN boilerplate, and examine the application's architecture to build applications on it.\nBy the end of the course, you will not only have built a fully functional web application, but you'll also be well on your way to becoming a full-stack web developer. You'll be equipped with a deeper knowledge of the MERN stack, as well as general web development patterns and concepts.\nAbout the Author\nFilip Danić is a software engineer, JavaScript enthusiast, and tech speaker. He's worked on web applications—both on the frontend and the backend—for enterprise clients as well as VC-backed startups. His code and architecture decisions are deployed at several Fortune 500 companies.\nFilip is passionate about the JavaScript ecosystem and is constantly exploring new frameworks and tools. He is particularly enthusiastic about applying functional programming concepts, crafting good documentation, and providing a better development experience for others.",
      "target_audience": [
        "The target audience is JavaScript developers who want to learn the MERN stack and present themselves as full-stack developers on the job market.",
        "Usually, these are developers who have mostly focused on the frontend and wish to learn more about the backend and database layer."
      ]
    },
    {
      "title": "Wordpress Security",
      "url": "https://www.udemy.com/course/easy-wordpress-security/",
      "bio": "Secure your Wordpress websitesite quickly and with minimal effort, eliminating most security threats almost instantly.",
      "objectives": [
        "Learn the fundamentals of good Wordpress Security",
        "Understand the risk profile of their Wordpress site from a security perspective",
        "Identify weaknesses in their Wordpress site's security posture",
        "Setup their Wordpress site to minimize security threats",
        "Learn best security practices for a Wordpress site"
      ],
      "course_content": {
        "Course Overview": [
          "Welcome To Easy Wordpress Security",
          "Who is this Course for? Who is this Course not for?",
          "Connect With Me"
        ],
        "Wordpress Security Overview": [
          "The Scope of the Security Problem with Wordpress",
          "Security is Hard and Complex",
          "The Basics of Good Wordpress Security"
        ],
        "Types of Common Wordpress Security Attacks": [
          "Server Software Exploits",
          "Wordpress Code, Theme and Plugin Exploits",
          "Password Vulnerability Exploits",
          "Denial of Service Attacks",
          "Zero Day Attacks and Vulnerabilities"
        ],
        "Security Hardening on Your Wordpress Site": [
          "Wordpress Security and Webhosting",
          "Installing Wordpress With Good Security By Default",
          "The Importance of Backups",
          "Managing Wordpress Sites With an Eye on Security",
          "Using a Wordpress Security Plugin",
          "Wordpress Security Plugin Setup: Sucuri Auditing, Malware Scanner and Hardening"
        ],
        "Advanced Wordpress Security Topics": [
          "Managing Wordpress User Security Permissions",
          "Using SSL Across Your Entire Wordpress Site",
          "Two Factor Authentication to Enhance Wordpress Security"
        ],
        "Live Demos Of Blocking Security Threats": [
          "Blocking User Accounts With Wordfence",
          "Live Demo - Blocking User Accounts With Wordfence",
          "Using Cloudflare to \"Challenge\" Users From Specific Countries",
          "Live Demo - Using Cloudflare to \"Challenge\" Users From Specific Countries"
        ],
        "Conclusion": [
          "How To Get My Easy SEO For Wordpress Course For Just $10"
        ]
      },
      "requirements": [
        "Basic access to the internet",
        "You should have a basic understanding of Wordpress",
        "Willingness to learn new concepts and ideas"
      ],
      "description": "Over 2800 students staying ahead of the changes in Wordpress security!\n\nLearn the Latest Wordpress Security Strategies and Concepts From a Leading Expert with Years of Real World, Hands On Experience.\nKeep Your Wordpress Website Safe and Secure With Simple, Practical Techniques that Anyone Can Implement.\nEvery hour of every day 30,000 Wordpress sites are being attacked by people who want to either damage those sites or take control of them.\nAnd the worse part is... 99% of all Wordpress Security incidents are entirely preventable.\nHow do you keep your Wordpress site secure?\nIn this course, I'll teach you the most effective things you can do to keep out the bad guys without having to become some kind of a security guru or spend tons of money for someone to do it for you.\nIf you're like most Wordpress website owners, security is a complete mystery. You want to keep your site secure, but your primary focus is on creating great content for your visitors.\nYou probably also have seen and read reports about internet security breaches that occur, but you probably think that your site is too small to have a serious problem.\nThe truth is, you couldn't be more wrong!\nWordpress powers just over 20% of all websites on the internet today and staggeringly, 70% of those site, 140m sites, have exposures that could make it easy for an unscrupulous individual to hack their site.\nModern security attacks aren't confined to defacing websites and stealing information, sophisticated groups of professional hackers are actively building up networks of millions of compromised websites. They collect these sites to use as large scale attacks and cause serious damage.\nAnd if you're site is compromised, it could be contributing to this problem!\nHaving your site compromised could result in:\nLoss of income\nDamage to your reputation\nStolen data or information\nThat's not even considering the cost and effort required to clean up a security problem.\nWordpress Security doesn't have to be that hard. With just some simple understanding of the risks and steps that you can take to mitigate them, you can prevent over 99% of all potential attacks.\nThis course will help you put those numbers in your favour!\nI am going to share with you my 10+ years of hard earned, battle tested experience in managing Wordpress sites so that you can start making your websites more secure in minutes right away.\nBut Wordpress and security in general are a moving feast and it is very hard to keep up to date on everything that's happening.\nAnd that's something that I'm going to solve for you by regularly updating this course with new videos. As changes happen in the Wordpress landscape or something big occurs in the security world, I'll break it down for you in simple and easy to understand ways.\nThis course is backed by Udemy's 30 day guarantee and my personal promise that for just a small investment of your time, you'll be shocked at just how easy it is to rapidly improve your Wordpress site's overall security posture!\nEvery second you delay creates risk for you and helps tilt the odds in favour of your Wordpress site becoming one of the 30,000 sites that get attacked every hour, of every day.\nEnroll now and put the odds back in your favour!",
      "target_audience": [
        "Anyone that runs a Wordpress site and wants to improve their site's security",
        "Digital Marketing Agency staff that work on customer Wordpress sites",
        "Bloggers and Content Marketers that need good security, but just want to learn to lock down their site quickly and effectively",
        "This course is not designed for security experts or people looking to fix their already hacked sites"
      ]
    },
    {
      "title": "Building Applications with Blazor in .NET Core 3.1/.NET 5.0",
      "url": "https://www.udemy.com/course/building-applications-with-blazor/",
      "bio": "Getting Started",
      "objectives": [
        "At the end of this course, students will be able to build single page applications using Blazor",
        "At the end of this course, students will be able to deploy a Blazor app to Azure",
        "At the end of this course, students will be able to use authentication in a Blazor app"
      ],
      "course_content": {},
      "requirements": [
        "Students must have some working knowledge of C#, .NET Core, Entity Framework Core and WebAPI",
        "Students must have some working knowledge of HTML, CSS and JavaScript",
        "Students must have some working knowledge of GIT"
      ],
      "description": "In this course, you will learn how you can use Blazor to build single-page applications. We will cover the basic building blocks of an application: the components and forms including validation. You will also learn how you can interact with a WebAPI from Blazor and how to secure your Blazor application. Finally, you will learn how you can deploy your Blazor application to Azure.",
      "target_audience": [
        "This course is for .NET developers who want to start using Blazor in their projects."
      ]
    },
    {
      "title": "Hands-On jQuery: jQuery Examples",
      "url": "https://www.udemy.com/course/hands-on-jquery-jquery-examples/",
      "bio": "Practice jQuery with unique jQuery Examples! Useful jQuery Programs that illustrate Various jQuery Concepts!",
      "objectives": [
        "See jQuery in action",
        "Practice jQuery with unique jQuery examples",
        "Get working examples that can be used in jQuery projects",
        "Understand jQuery in depth",
        "Take your jQuery skills to the next level"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction and Structure of the Course"
        ],
        "Basic jQuery Examples": [
          "Disable Mouse Right Click",
          "Cache Selectors for Better Performance",
          "Create Blinking Text",
          "Check if an Element Exists",
          "Generate List from an Array",
          "Disable a Button Once It is Clicked",
          "Blur and Brighten an Image",
          "Check or Uncheck Checkboxes Together",
          "Confirm Password Validation",
          "Move an Element from One Location to Another"
        ],
        "Intermediate jQuery Examples": [
          "Create a Blinking Box",
          "Detect Mouse Coordinates",
          "Add New Element Dynamically",
          "Switch between Styles",
          "Loop through Checkboxes and Process the Values",
          "Slideshow",
          "Create Equal Height Columns",
          "Underline Individual Words in a Paragraph Separately"
        ],
        "Advanced jQuery Examples": [
          "Refresh Content without Reloading the Page",
          "Scroll to the Required Element",
          "Search, Find and Highlight",
          "Table with Sortable Columns",
          "Color Picker"
        ],
        "Bonus Section": [
          "Bonus Lecture: Special Offers on Other Courses!!!"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, JavaScript and jQuery"
      ],
      "description": "Many times, just knowing the syntax of a programming language might not help you while working on projects. Instead, you should be able to apply your programming language skills in real-world projects. Are you struggling to apply your basic jQuery skills while working on jQuery projects? Do you feel you need more practice to become really confident in jQuery programming? Do you think ready-made code examples could save your time and effort during code sessions?\nThis course \"Hands-On jQuery: jQuery Examples\" includes a number of unique and useful jQuery code examples of different levels that illustrate various concepts in jQuery. So, you get a chance to practice jQuery with real-world jQuery programs. Thus, it helps you become really confident in jQuery programming. In short, you will be able to take your jQuery knowledge to next level. Moreover, you get ready-made code examples and unique ideas on how to proceed while working on different jQuery projects.\n\nThis course is NOT meant for people who are new to jQuery as it does not teach you jQuery from scratch. Instead, you need to have a basic knowledge of jQuery which can be polished and improved by completing this course. This course proceeds gradually starting from basic to advanced jQuery examples.\nSo, what are you waiting for? Join this course to polish your jQuery skills and to become more confident in jQuery programming!!!",
      "target_audience": [
        "Anyone who wants to improve jQuery skills",
        "Anyone who wants to practice jQuery doing real-world examples",
        "Anyone who wants to get working examples that can be used in jQuery projects"
      ]
    },
    {
      "title": "MEVN Project - Vue and Node CMS and Shopping Cart",
      "url": "https://www.udemy.com/course/mevn-project-cms-and-shopping-cart/",
      "bio": "Build a comprehensive custom application using the MEVN stack, Vue js 2, Node js, Express and MongoDB",
      "objectives": [
        "Learn how to create custom apps using Vue 2 and Node and MongoDB"
      ],
      "course_content": {
        "Introduction and Project Overview": [
          "Introduction",
          "Tools vuenode"
        ],
        "The Project": [
          "Create new node project and database",
          "Set up node project",
          "Page model and GET pages",
          "Other models and GET requests",
          "New Vue project",
          "Header",
          "Main menu pages",
          "Pages component and routing",
          "Categories component",
          "Products 1",
          "Products 2",
          "Products 3",
          "Product Pagination 1",
          "Product Pagination 2",
          "Product Pagination 3",
          "CartSummary component",
          "Add to cart",
          "ShoppingCart 1",
          "Cart remember",
          "ShoppingCart 2",
          "Checkout 1",
          "24 Checkout 2",
          "Checkout 3",
          "Admin area",
          "Admin Pages component",
          "Add page 1",
          "Add page 2",
          "Edit page",
          "Delete page",
          "Admin products",
          "Add product 1",
          "Add product 2",
          "Add product 3",
          "Edit Product",
          "Delete product",
          "Admin orders",
          "Wysiwig and category active class",
          "Checkout validation",
          "Page and product validation",
          "Auth 1",
          "Auth 2"
        ],
        "Bonus Material": [
          "Bonus Material"
        ]
      },
      "requirements": [
        "Some Vue knowledge is expected",
        "Some Node knowledge is expected",
        "You should have MongoDB already installed"
      ],
      "description": "Build custom apps using Vue js and Node js!\nIn this hands on, practical course you will learn how to develop your own apps using Vue and Node using MongoDB as the database, all from scratch!\nPlease note that some Vue and Node knowledge is expected and also you should already have MongoDB installed (I have beginner courses on both Vue and Node).",
      "target_audience": [
        "Anyone looking to create custom apps using Vue and Node"
      ]
    },
    {
      "title": "JSP - Java Full Stack",
      "url": "https://www.udemy.com/course/jsp-by-digiflax/",
      "bio": "Full stack developer, Learn JavaServer Page the easy way!",
      "objectives": [
        "Introduction to JSP",
        "JSP Environment Setup",
        "Getting familiar with JSP",
        "First JSP",
        "Implicit objects, scripting and standard actions!",
        "Directives and sessions",
        "Database connectivity",
        "Forms Processing"
      ],
      "course_content": {
        "JSP": [
          "Introduction to JSP",
          "JSP Environment Setup - 1",
          "JSP Environment Setup - 2",
          "Getting familiar with JSP",
          "Your First JSP",
          "Implicit objects",
          "Scripting",
          "Standard Actions - 1",
          "Standard Actions - 2",
          "Standard Actions - 3",
          "Directives - 1",
          "Directives - 2",
          "Sessions - 1",
          "Sessions - 2",
          "Databae Connectivity - 1",
          "Databae Connectivity - 2",
          "Forms Processing - 1",
          "Forms Processing - 2"
        ]
      },
      "requirements": [
        "We assume you have little knowledge of how web applications work over HTTP, what is web server and what is web browsers."
      ],
      "description": "Jakarta Server Pages (JSP; formerly JavaServer Pages) is a collection of technologies that helps software developers create dynamically generated web pages based on HTML, XML, SOAP, or other document types. Released in 1999 by Sun Microsystems,[1] JSP is similar to PHP and ASP, but uses the Java programming language.\nTo deploy and run Jakarta Server Pages, a compatible web server with a servlet container, such as Apache Tomcat or Jetty, is required.\nArchitecturally, JSP may be viewed as a high-level abstraction of Java servlets. JSPs are translated into servlets at runtime, therefore JSP is a Servlet; each JSP servlet is cached and re-used until the original JSP is modified.\nJakarta Server Pages can be used independently or as the view component of a server-side model–view–controller design, normally with JavaBeans as the model and Java servlets (or a framework such as Apache Struts) as the controller. This is a type of Model 2 architecture.\nJSP allows Java code and certain predefined actions to be interleaved with static web markup content, such as HTML. The resulting page is compiled and executed on the server to deliver a document. The compiled pages, as well as any dependent Java libraries, contain Java bytecode rather than machine code. Like any other .jar or Java program, code must be executed within a Java virtual machine (JVM) that interacts with the server's host operating system to provide an abstract, platform-neutral environment.\nJSPs are usually used to deliver HTML and XML documents, but through the use of OutputStream, they can deliver other types of data as well.\nThe Web container creates JSP implicit objects like request, response, session, application, config, page, pageContext, out and exception. JSP Engine creates these objects during translation phase.",
      "target_audience": [
        "For web developers and programmers to increase their performance."
      ]
    },
    {
      "title": "Learn API development with Flask + MySQL in Python",
      "url": "https://www.udemy.com/course/learn-api-development-with-flask-mysql-in-python/",
      "bio": "Get ready to master Flask, MySQL, and Python as you build powerful and efficient APIs",
      "objectives": [
        "You will be able to build APIs using Flask and MySQL",
        "Understand Flask Syntax",
        "Understand MySQL Syntax",
        "How to Build APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Guide",
          "Basic Terminal Crash Course"
        ],
        "Backend APIs with Flask": [
          "MySQL Setup",
          "GET Request",
          "POST Request",
          "PUT Request",
          "DELETE Request"
        ],
        "Frontend Consume Flask API": [
          "Make Fetch request to consume API server"
        ],
        "Project - URL Shortener App": [
          "URL Shortener using Flask and MySQL database"
        ],
        "Python Crash Course": [
          "Learn to Generate 1 million rows server LOG file",
          "Course"
        ],
        "Versional Control with Git & Github Crash Course (optional)": [
          "git crash course - 1",
          "git crash course - 2"
        ]
      },
      "requirements": [
        "Nothing special you just need to have internet, laptop/pc/mac and basic python programming experience. thats it.",
        "if you are not familiar with programming thats fine too. I have explained in detail in course."
      ],
      "description": "Welcome to our comprehensive course on API development using Flask and MySQL in Python!\nThis course is designed to empower you with the skills and knowledge needed to create robust and efficient APIs with the popular Flask framework and MySQL database, all while harnessing the power of Python.\n\n\nThroughout this course, you'll embark on a hands-on learning journey that covers:\nIntroduction to APIs: Gain a solid understanding of what APIs are, why they are essential, and how they function in modern web development.\nPython Fundamentals: Brush up on Python basics and learn how to leverage its power to create efficient and dynamic APIs.\nFlask Framework: Dive deep into Flask, a lightweight and flexible Python web framework. Discover how to set up a Flask project, handle routes, and create RESTful APIs.\nDatabase Integration with MySQL: Explore MySQL, one of the most popular relational database management systems. Learn to connect Flask with MySQL, perform database operations, and ensure data security.\nProject - URL Shortener App\nupdate:\nBonus crash course section: Learn Version Control with git and github\nBy the end of this course, you'll be well-equipped to create, and maintain APIs using Flask and MySQL in Python. Don't miss this opportunity to unlock a world of possibilities in the field of API development. Enroll now and start building your API development expertise today!",
      "target_audience": [
        "Anyone who wants to build APIs using Flask and MySQL"
      ]
    },
    {
      "title": "Spring AI - GenAI with Telusko",
      "url": "https://www.udemy.com/course/spring-ai-genai/",
      "bio": "Build AI-powered Spring Boot app. using SpringAI with OpenAI, Ollama, RAG, vector databases, with multimodal capability.",
      "objectives": [
        "Easily Integrate Model-as-a-Service(OpenAI) and Open-Source(Ollama) AI Models",
        "Develop Context-Aware Conversational AI",
        "Create Multimodal(Text, Audio, Image) and Structured AI Applications",
        "Integrate Retrieval-Augmented Generation (RAG) to enhance prompt effectiveness",
        "Dive into vector databases and discover how they power modern AI applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Spring AI",
          "Spring AI Docs"
        ],
        "AI Model Integration (Cloud-Based), ChatClient API, and ChatModel": [
          "Creating a Spring AI Project",
          "Create OPENAI API key",
          "Asking Question to Open AI Model",
          "Working with ChatClient",
          "ChatResponse and MetaData",
          "ChatClient Builder",
          "Spring AI Memory Advisor"
        ],
        "AI Model Integration (Open Source)": [
          "Running Model Locally with Ollama",
          "Spring AI with Ollama"
        ],
        "Prompt Templates": [
          "Prompt Template",
          "Implementing Prompt Template"
        ],
        "Vector Embeddings": [
          "What are embeddings",
          "Embedding using API Client",
          "Embedding using Spring AI"
        ],
        "Vector Databases": [
          "What is Cosine Similarity",
          "Cosine Similarity implementation",
          "Vector Database Introduction",
          "Simple Vector Store",
          "Token Text Splitter",
          "PGVectorStore Introduction",
          "PGVector Setup",
          "PGVector Implementation",
          "Redis Vector Store Config",
          "Redis Vector Store"
        ],
        "Retrieval-Augmented Generation (RAG)": [
          "What is RAG",
          "RAG Implementation"
        ],
        "Multimodality (Image)": [
          "OpenAI Image Model",
          "ImagePrompt and Response",
          "Image Options",
          "Describe Image",
          "Implementing describe Image"
        ],
        "Multimodality (Audio)": [
          "Audio Models Introduction",
          "Audio Transcription Model Speech to text part 1",
          "Audio sst part 2",
          "Audio Transcription Options",
          "Audio Speech Model TTS",
          "Audio Speech Options"
        ],
        "Output Converters": [
          "Structured Output Converter",
          "List Output Converter",
          "Bean Output Converter",
          "Bean Output Converter with List"
        ]
      },
      "requirements": [
        "To enroll, you'll need basic Spring Boot knowledge and Java programming experience."
      ],
      "description": "Spring AI—Gen AI (TELUSKO)\n\nThis comprehensive course on Spring AI is your gateway to building intelligent, AI-powered Java applications. It leverages Spring AI, the official module within the Spring framework, designed to seamlessly integrate Large Language Models (LLMs) and a broad spectrum of AI capabilities into your Spring Boot projects.\n\n\nYou'll develop essential skills for integrating diverse AI models, from popular model-as-a-service provider like OpenAI (GPT-4o) to open-source LLM providers like Ollama (Mistral and Deepseek). This is achieved through Spring AI's standardized API, offering remarkable portability and minimizing vendor lock-in.\n\n\nA significant portion of the curriculum focuses on developing sophisticated conversational AI systems using the intuitive ChatClient API and ChatModel, enabling dynamic and natural interactions. Furthermore, you'll master Retrieval-Augmented Generation (RAG), a critical technique that empowers LLMs with external, up-to-date, and domain-specific knowledge. This involves deep dives into vector embeddings and practical experience with various vector databases like PgVector, Redis, and Spring AI's SimpleVectorStore, ensuring your AI responses are contextually relevant and accurate.\n\n\nBeyond conventional text-based AI, the course ventures into multimodal applications, covering capabilities like image and audio processing, including text-to-speech and speech-to-text. This expands the possibilities for creating truly immersive and interactive applications. You'll also learn the art of prompt engineering through templates and advisors for enhanced AI interactions, and crucially, how to transform raw AI outputs into neatly structured Java objects (List, Bean, Map) for seamless integration into your application's logic.\n\n\nThis course is ideally suited for Java developers eager to add cutting-edge AI functionalities to their Spring Boot applications, backend developers exploring modern AI integration patterns, and teams dedicated to building the next generation of intelligent, data-driven applications. A solid foundation in Spring Boot and Java programming is recommended to maximize your learning experience. By completing this course, you will be well-equipped to transform your Spring applications with advanced AI features, ensuring you remain at the forefront of the rapidly evolving AI-driven development landscape.",
      "target_audience": [
        "This course is for Java, Spring, and backend developers aiming to integrate AI capabilities into Spring Boot applications, as well as for teams building intelligent, next-generation applications"
      ]
    },
    {
      "title": "JavaScript project Learn to create a memory Game and more",
      "url": "https://www.udemy.com/course/javascript-project-learn-to-create-a-memory-game-and-more/",
      "bio": "Step by Step how to create your own game using JavaScript. See how JavaScript works application building project.",
      "objectives": [
        "Learn the advantages of using JavaScript",
        "Create your own JavaScript code",
        "See the functionality of JavaScript"
      ],
      "course_content": {
        "JavaScript Project Build a Memory Game": [
          "JavaScript Game Course Introduction",
          "JavaScript Setup Array",
          "JavaScript Game Functions",
          "Array Shuffle random Function",
          "JavaScript Game innerHTML",
          "JavaScript Game Concatenate arrays",
          "JavaScript Game onclick",
          "JavaScript Game Image switch pass this",
          "Setup Variables and Start Game Function",
          "JavaScript Game Flip limits",
          "Pick a Card SourceCode",
          "JavaScript Game Tile Comparison Check",
          "JavaScript Game Set id flip back",
          "JavaScript Game remove double click",
          "Hide Card Source",
          "JavaScript Game setting clearing intervals",
          "Card Picked Function",
          "JavaScript Game score end game",
          "JavaScript Game addEventListener restart",
          "JavaScript Memory Game Source Code",
          "JavaScript Game Message User",
          "JavaScript Game Adding a Timer and Score",
          "Game Final Source Code"
        ],
        "Course Bonus Resources and Extra Lectures": [
          "JavaScript Resources",
          "JavaScript Memory Game Update",
          "Working Code and Image download",
          "Learning Guides and resources PDF guides"
        ]
      },
      "requirements": [
        "Basics of JavaScript",
        "Understand basic coding principles",
        "Desire to learn about JavaScript",
        "HTML and CSS basics"
      ],
      "description": "One of the best ways to learn is to work on a project. We start with a blank page and build the application step by step. All of the source files are included.\nDo you want to learn JavaScript working on a real project?\nWe show you how to use JavaScript to create an interactive game, everything from creating the game board to messaging, text, timers, and game setup.\nWe build this game in bootstrap, show you the HTML CSS and JavaScript.\nLearn to Create your own JavaScript GAME!!!\nWithin this course we show you how to add JavaScript functionality when building out projects and use JavaScript to achieve your goals.\nWe have designed this course to optimize practicing JavaScript coding.\nCODE SAMPLES INCLUDED!!\nPRACTICE EXERCISES\nCODE EXPLANATIONS\nCODE IMPLEMENTATIONS\nTry the code after each video lesson. PDF copy and paste code that we use within the course and TRY FOR YOURSELF.\nEverything you need to learn about JavaScript is provided within this course.\n\nquick lessons get right to the point\nsource files downloadable to work along\nchallenges and lessons\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nLearn how Javascript works and it's fundamental concepts when it comes to creating games and interactive projects. Learn to build your own Javascript code to make your own JavaSCript memory game",
      "target_audience": [
        "Web Developers",
        "Web coders",
        "web content managers",
        "JavaScript developers",
        "Learn the advantages of using JavaScript",
        "Anyone with a desire to learn",
        "desire to understand more about how JavaScript works"
      ]
    },
    {
      "title": "Wordpress Theme Development for Beginners",
      "url": "https://www.udemy.com/course/wordpress-theme-development-for-beginners/",
      "bio": "Learn how to confidently develop custom & profitable Responsive WordPress Themes and Websites with no prior experience.",
      "objectives": [
        "You will be Able to Create Custom WordPress Themes from Scratch",
        "You will be hire-able as a WordPress Developer",
        "You will learn Everything from the Scratch to an Expert Level",
        "You will be able to learn Plugins Customization with PHP",
        "You will be a WordPress Ninja"
      ],
      "course_content": {
        "Introduction to wordpress": [
          "Introduction",
          "Installing Xampp",
          "Installing WordPress Dashboard",
          "Learning About the Dashboard"
        ],
        "Theme Setup & Coding": [
          "Theme Setup",
          "Setting Up Header",
          "Setting up JavaScript Files"
        ],
        "Post Types & Pages": [
          "Pulling Posts",
          "Setting up Categories",
          "Setting up Category Links",
          "CSS Styling",
          "Creating Navigation",
          "Creating Pages",
          "Posts & Pages",
          "Single Post Pages",
          "Single Categories Page",
          "Custom Post Types"
        ],
        "Creating a New Theme from Scratch": [
          "Downloading a New Theme",
          "Setting Up New Theme Folder",
          "Installing WordPress for the New Project",
          "Creating Theme Header",
          "Setting Up Footer",
          "Registering StyleSheets",
          "Register JavaScript Files",
          "Creating Custom Navigation with WordPress"
        ],
        "Custom Post Types & Fields with PHP": [
          "Installing Custom Post Types Pluigin - Part 1",
          "Coding Custom Post Types - Part 2",
          "Installing Advanced Custom Fields Plugin - Part 1",
          "Adding ACF Sections - Part 2",
          "Coding ACF Fields - Part 3",
          "Advance Custom Fields Pro ( Introduction ) Part 1",
          "Advance Custom Field Pro Download Files",
          "Advance Custom Field Pro ( Installation ) - Part 2",
          "Advance Custom Field Pro (Customizing Columns) - Part 3",
          "Advance Custom Field Pro ( Coding ) - Part 4",
          "Another Section ( Planning ) - part 1",
          "Another Section ( Customizing Columns ) - part 2",
          "Another Section ( Customizing Columns ) - part 3",
          "Another Section ( Coding ) - part 4",
          "Another Section ( Coding ) - Part 5",
          "Last Section ( Customization ) - Part 1",
          "Last Section ( Coding ) - Part 2",
          "Footer Section - Part 1",
          "Footer Section - Part 2",
          "Footer Section - Part 3",
          "Footer Section - Part 4"
        ],
        "Last Video.. What's Next?": [
          "Last Video - Congratulations !!"
        ]
      },
      "requirements": [
        "Basic Understand of PHP",
        "Basic Understanding of HTML & CSS",
        "Willing to learn WordPress"
      ],
      "description": "In this wordpress theme development course for beginners, you will learn how to create custom themes from scratch. As we move along with these series, you are going to learn more about WordPress customization and plugin development. So Enroll now in this great series of wordpress theme development for beginners!!!\nYou can still watch these videos series if you're searching for one of the following topics:\nWordpress theme development\nWordpress theme development for beginners\nwordpress theme development for absolute beginners\nlearn wordpress theme development\nwordpress theme development from scratch\nSo if you are looking for a free course on udemy and wants to learn wordpress theme development? This is the right video tutorials for you..",
      "target_audience": [
        "Anyone who wants to learn wordpress theme development",
        "Anyone who wants to become a backend web developer"
      ]
    },
    {
      "title": "Angular 12, .NET Core Web API & PostgreSQL full-stack app",
      "url": "https://www.udemy.com/course/angular-12-net-core-web-api-postgresql-full-stack-app/",
      "bio": "learn to create a full stack web application from scratch using Postgre SQL, .NET Core Web API and Angular 12",
      "objectives": [
        "Full Stack Web Development",
        "Angular 12 Frontend Web Development",
        ".NET Core Web API Backend Web Development with PostgreSQL as Database",
        "Build REST APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment set up": [
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install PG Admin",
          "Install Node JS"
        ],
        "Backend : .NET Core Web API and Postgre SQL": [
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API"
        ],
        "Frontend : Angular 12": [
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering"
        ],
        "Bonus Lecture": [
          "Bonus materials"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "Hello Everyone, and welcome to this course on Angular 12, .NET Core Web API, Postgre SQL full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* Postgre SQL for the database.\n* .NET Core Web API for the back end web development.\n* And the latest Angular 12 for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using .NET Core Web API.\n-Finally we will be using Angular 12 to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our Angular App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        ".net, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Learn CakePHP 3 Advanced Techniques",
      "url": "https://www.udemy.com/course/cakephp-3-advanced-techniques/",
      "bio": "Become a CakePHP 3 Guru. Learn Advanced Techniques.",
      "objectives": [
        "Understand CakePHP 3.X",
        "Encrease security in your CakePHP application",
        "Use CSRF Component",
        "Add a captcha image to your application",
        "Log all events in your CakePHP 3 application to a database",
        "Use Jquery DataTables",
        "Use CakePHP TimeHelper"
      ],
      "course_content": {
        "Introduction": [
          "What you will learn"
        ],
        "Captcha": [
          "CakePHP 3 Captcha"
        ],
        "Cross Site Request Forgery": [
          "Introduction",
          "Problem",
          "Solution"
        ],
        "CakePHP 3 Logging": [
          "Logging theory",
          "Logging practice"
        ],
        "Database Logger": [
          "Custom Database Logger for CakePHP 3"
        ],
        "Jquery DataTables": [
          "DataTables"
        ],
        "CakePHP 3 Associations": [
          "Introduction",
          "HasOne Associations",
          "BelongsTo Associations",
          "HasMany Associations",
          "BelongsToMany Associations",
          "Eager Loading Associations",
          "Associations in action!"
        ],
        "CakePHP 3 TimeHelper": [
          "TimeHelper"
        ],
        "MySQL BigInt Issue": [
          "CakePHP 3 BigInt"
        ],
        "CakePHP 3 Behaviors": [
          "Introduction",
          "Build your custom behavior"
        ]
      },
      "requirements": [
        "PHP (basic knowledge)",
        "HTML (basic knowledge)",
        "CakePHP (basic knowledge)"
      ],
      "description": "In this course you will learn some advanced topics about CakePHP 3. I will guide you step by step and explain you how to protect your CakePHP 3 appalication using Cross Site Request Forgery Component.\nYou will learn how to log events in your application and implement your custom database logger adapte to save all events to MySQL database.\nWe will talk about CakePHP 3 associations. You will understand how to work with the following relationships: BelongsTo, HasOne, HasMany and BelongsToMany. You will aslo try all the associations in action and learn eager loading associations.\nI will show you how to use TimeHelper and how to avoid some MySQL issues you may encounter.\nYou will also implement your own custom database behaivor.",
      "target_audience": [
        "People that want to Build as they Learn",
        "Desire to learn CakePHP 3.X",
        "Desire to Build Robust and Re-Usable Application Code"
      ]
    },
    {
      "title": "Master HTML5 and CSS3 .",
      "url": "https://www.udemy.com/course/html5-and-css3-g/",
      "bio": "HTML5 AND CSS3 FOR BEGINNERS",
      "objectives": [
        "Learn HTML and CSS from scratch",
        "Get introduction to HTML",
        "Learn about key role of frontend developer",
        "Study Evolution of HTML5",
        "Print basic webpage using HTML5",
        "Work with Visual Studio Codes",
        "Learn about CSS",
        "Cover role of CSS3 in HTML5",
        "Learn how to code with advance CSS3 techniques",
        "Complete your experience by creating a real world website"
      ],
      "course_content": {
        "INTRODUCTION": [
          "COURSE INTRODUCTION",
          "COURSE STRUCTURE"
        ],
        "ELEMENTS OF FRONTEND DESIGNING": [
          "DEVELOPERS AND DESIGNERS",
          "WEBSITES",
          "HTML AND CSS"
        ],
        "SOFTWARE REQUIREMENT": [
          "SOFTWARE REQUIRED"
        ],
        "INTRODUCTION TO HTML": [
          "HTML",
          "HTML TAGS",
          "HTML ATRIBUTES",
          "HTML STRUCTURE ELEMENT"
        ],
        "HTML FOUNDATION": [
          "HTML TEXTS",
          "DIV AND SPAN",
          "HTML LISTS",
          "HTML IMAGES",
          "HTML LINKS",
          "HTML TABLES",
          "HTML FORMS part 1",
          "HTML FORMS part 2",
          "ASSIGNMENT"
        ],
        "INTRODUCTION TO HTML5": [
          "EVOLUTION OF HTML5",
          "HTML5 STRUCTURE ELEMENTS",
          "HTML VIDEO TAG",
          "HTML AUDIO TAG",
          "ASSIGNMENT"
        ],
        "FIRST WEBPAGE": [
          "FIRST HTML WEBPAGE"
        ],
        "INTRODUCTION TO CSS": [
          "CSS",
          "CSS VERSIONS",
          "PAGE LAYOUT",
          "TERMS AND SYNTAX",
          "STYLE TAG",
          "COMMENTS"
        ],
        "ADVANCE CSS3 TECHNIQUES": [
          "CSS COLORS",
          "CSS OPACITY",
          "CSS HOVER",
          "CSS BACKGROUND IMAGES",
          "MARGIN PROPERTY",
          "PADDING PROPERTY",
          "CSS BORDER PROPERTY",
          "HEIGHT AND WIDTH PROPERTY",
          "POSITIONING PROPERTY",
          "FLOAT PROPERTY",
          "ALIGNMENT",
          "TEXT FONT",
          "ICON",
          "BOX MODEL",
          "DROPDOWN",
          "OVERFLOW",
          "CSS FORM",
          "CSS ROUND CORNERS",
          "BORDER IMAGE",
          "BACKGROUND PROPERTY",
          "GRADIENTS",
          "SHADOW",
          "2D TRANSFORMATION",
          "3D TRANSFORMATION",
          "ASSIGNMENT"
        ],
        "FLEX BOX": [
          "INTRODUCTION TO FLEX BOX",
          "IMPORTANT TERMINOLOGIES",
          "WEBPAGE WITH FLEX BOX"
        ]
      },
      "requirements": [
        "No coding experience needed . You will learn everything you need to know",
        "You will get opportunity to cover web designing's building block from scratch"
      ],
      "description": "This course is all about learning HTML5 and CSS3 from scratch.\n\n\nYour Journey in this course will start from , basic introduction of websites, introduction to frontend developers and there role while creating websites .Anyone who is interested in designing and creating frontend of a website or some one who want's to be full stack developer and looking to cover frontend part precisely and subscribe to this course , it is life time accessible.\n\n\nMain objectives of this course\n\n\nLearn HTML and CSS from scratch\nGet introduction to HTML\nLearn about key role of frontend developer\nStudy Evolution of HTML5\nPrint basic webpage using HTML5\nWork with Visual Studio Codes\nLearn about CSS\nCover  role of CSS3 in HTML5\nLearn how to code  with advance CSS3 techniques\nComplete your experience by creating a real world website.\n\n\nCoding with consistency can make you a perfect programmer hence to make this possible certain additional sources have been provided with his course . Every lecture with coding part has been covered with visual studios codes where your will see how to code in Visual Studio Codes.\nApart from this you will get Assignments to practice and to track your progress.\nAIM : After completing this course you would be able to publish real world website for yourself or for any industry and organization",
      "target_audience": [
        "Students , Employees , and everyone, who are willing to create real world , responsive frontend design by using HTML5 and CCS3."
      ]
    },
    {
      "title": "Using React, Bootstrap, and AWS Amplify to Build Apps",
      "url": "https://www.udemy.com/course/building-and-deploying-a-reactjs-web-app-from-scratch/",
      "bio": "Zero experience required. Build and deploy 4 real web apps with a modern tech stack.",
      "objectives": [
        "React basics and essential functionality.",
        "More advanced functionality like API calls using Javascript.",
        "How to use Twitter Bootstrap to make you app look great.",
        "How to deploy your app with AWS Amplify."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Class",
          "Environment Setup: Downloads / Links",
          "Introduction to GitHub"
        ],
        "Hello World App": [
          "ReactJS Setup",
          "Starting Your App & Walkthrough",
          "Hello World App",
          "Hello World Challenges",
          "Challenge Answers"
        ],
        "Stock Data App": [
          "Create Stock Data App",
          "Props",
          "State",
          "Changing State",
          "Challenges (Round 1)",
          "Conditional Rendering",
          "Working with JSON Data",
          "Challenges (Round 2)",
          "Forms",
          "Formik and Yup",
          "API Calls with Fetch",
          "Challenges (Round 3)"
        ],
        "Startup Landing Page": [
          "Create Startup Landing Page App + Initial Installs",
          "Themes, Fonts, and Icons",
          "Landing Jumbotron",
          "About Us Accordion",
          "Product Cards",
          "Subscription Form + Wrap Up"
        ],
        "Workout Generator App": [
          "Create App, Add Routing, and Add Navigation",
          "Home Page",
          "About Page",
          "Workout Generator Form",
          "Workout Generator Function",
          "Displaying the Workout",
          "Deploying Your App with AWS Amplify",
          "Closing Remarks"
        ]
      },
      "requirements": [
        "HTML understanding is helpful but not required",
        "CSS understanding is helpful but not required",
        "Javascript understanding is helpful but not required"
      ],
      "description": "Go from beginner to ReactJS Expert by building 4 real web apps. We will use ReactJS, Twitter Bootstrap, and AWS Amplify to learn how to build and deploy web apps.\n\n\nYou will not just learn how to how to build web apps, but you will also learn how to...\n1. Make them look awesome\n2. Be responsive to work well on mobile\n3. Most importantly, deploy it to the real world!",
      "target_audience": [
        "Beginner developers interesting in building a web app",
        "Web developers interested in learning about ReactJS"
      ]
    },
    {
      "title": "Launch Your Website With GitHub Pages",
      "url": "https://www.udemy.com/course/launch-your-website-with-github-pages/",
      "bio": "Deploy your static website and frontend web development projects to the web with GitHub Pages",
      "objectives": [
        "How to deploy a static website to the internet using GitHub Pages"
      ],
      "course_content": {},
      "requirements": [
        "Your should know some basic HTML and CSS"
      ],
      "description": "Are you looking for an easy way to launch your website? Or are you looking for a way to share your coding projects? In this class you will launch a new website using GitHub Pages. GitHub Pages is a free service and there are no servers, no configs, and no payments (it's totally free!) With this course you can launch your HTML, CSS and JavaScript website on the internet for free and in less than an hour!\nTo really build your skills you will learn by doing. You will create a public repository on GitHub where you can share your code. And if you set it up right, GitHub will create a website for you and make it accessible to the internet.\nYou can use Windows, Mac or Linux in this course, too. It's all covered and supported!\nTogether we'll get started with Git (beginner friendly) and we'll create a new GitHub account and repository. If you don't want to learn how to use Git, that's OK, because I'll show you how to edit files directly on GitHub as well.\nThen we'll add files to our GitHub repository and deploy it to the internet.\nAnd just like that... you have a website that friends, family, and future employers can look it.\nAs always, and with all my other courses, I am here to support you. If you get stuck or have questions I am 100% here to help you throughout this entire class.\nLet's get started right away!",
      "target_audience": [
        "Frontend web developers who want to share their work",
        "Web developers who want to create a portfolio website"
      ]
    },
    {
      "title": "Host websites for (Dev/Test/Prod) at home or small office",
      "url": "https://www.udemy.com/course/at-home-hosting/",
      "bio": "Host/Build/Test any website or business application from home or small office and save time and finance!",
      "objectives": [
        "Simple & Basic Internet Networking",
        "Basic Firewall and Security",
        "Web Hosting & Database Software",
        "How to host multiple websites with different domain names",
        "SSL Certificates",
        "WordPress examples"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Free Prerequisite Course & Practice Test": [
          "READ ME PLEASE - IMPORTANT!",
          "Connecting to the Internet",
          "What is hosting",
          "How Domain Names Work",
          "IP Addresses",
          "IP Address Assignments",
          "IP Addresses At Home",
          "Exceptions To IP Addresses",
          "Practice test to see how much you learned (this test is behind the paywall with)",
          "Solving IP Address Change Problems"
        ],
        "Prepping Your Home for Hosting": [
          "PC and Network Settings - Part 1",
          "PC and Network Settings - Part 2"
        ],
        "Domain Names": [
          "Buy a Domain Name",
          "Cloudflare Additional Option"
        ],
        "DNS": [
          "Solving the DHCP ISP Problem"
        ],
        "Building a Web & Database Server on your home PC": [
          "Web and DB Server - Part 1",
          "Web and DB Server - Part 2",
          "XAMPP - Tweaks"
        ],
        "Securing & Backing-Up": [
          "Configuring SSL Certificates",
          "Backing up your PC/Server"
        ],
        "WordPress": [
          "Installing WordPress - QuickStart Kit",
          "WordPress Best Practice - Make New Admin",
          "WordPress Best Practice - Email Issues",
          "WordPress Best Practice - Sending Email",
          "WordPress Best Practice - Securing Wordpress",
          "WordPress Best Practice - Wordfence 2FA",
          "WordPress Best Practice - Change /wp-admin",
          "WordPress Best Practice - Backup Plugin",
          "WordPress Default Account Recovery"
        ],
        "Corrections, Advanced Topics & Bonus Content": [
          "CERTBOT SSL Correction & Renew Certificates",
          "DirectUpdate - MultiSite DNS updater",
          "EspoCRM Part 1",
          "EspoCRM Part 2",
          "EspoCRM Part 3",
          "2023 - Cloudflare Tunnel - no need for Dynamic DNS or holes in your firewall"
        ],
        "Class Resources & Downloads": [
          "Free Downloads of Dave's WordPress QuickStart Kits",
          "Websites used in this Course",
          "httpd-vhosts.conf Example",
          "Wordfence Import Key",
          "SQL Statement for Default User - Recovery Access",
          "If you chose to buy your domain from Cloudflare - here is how to configure it",
          "Forcing your site to use HTTPS (SSL)"
        ]
      },
      "requirements": [
        "A strong desire to want to host your website, ability to like to learn by following along.",
        "Have an existing domain name or purchase a new domain name that costs between $8 - $12 US dollars - We will do this in class for your 1st website."
      ],
      "description": "Times have changed; people and companies are now putting everything online. Money is also of concern. Millions are out of work! What if you could learn to convert your home or small office pc into a REAL web & database server, pay no money, and only pay for just the domain name every year? Imagine how much money you could save on hosting one or more websites this way? Great for working with clients, testing new development, or just hosting the end final product, even a WordPress site. Convenience is the real benefit as everything is local, save time constantly from uploading your website again and again with each change. Everything is local!\n\nThe first half of the course is free; I want you to see if you can get comfortable with some technical terms. I even include a practice test to make sure you have what you need before proceeding to the next steps of doing the actual work. If you feel comfortable and follow along, you should pay to get the full course, test, and information, including the great downloads. If you are just curious about how the Internet works, then enjoy just the free portion as my thank you to you for taking the time to view my videos and this course.",
      "target_audience": [
        "Folks who pay for hosting now, or who want to start a business website, host a business application like a CRM system or a Document Management Platform. This course is precious when hosting is not ideal or possible."
      ]
    },
    {
      "title": "Customizing Sublime Text: Build Your Perfect Code Editor",
      "url": "https://www.udemy.com/course/customizing-sublime-text/",
      "bio": "Learn how to make Sublime Text the best code editor for you",
      "objectives": [
        "Change global Sublime settings",
        "Change settings for individual languages",
        "Install and use Package Control",
        "Change coding font options",
        "Change Sublime's color scheme",
        "Change Sublime's theme",
        "Create your own color Scheme",
        "Layout and view options",
        "Create and use snippets",
        "How to install useful plugins"
      ],
      "course_content": {
        "Customizing Sublime Text": [
          "Introduction",
          "Download It",
          "Sublime Settings",
          "Language Settings",
          "Package Control",
          "Change Your Syntax",
          "Code Complete",
          "Change Your Font",
          "Change Your Color Scheme",
          "Change Your Theme",
          "Find Selected Text",
          "Create Your Cockpit",
          "Snippets",
          "The Emmet Plugin",
          "Highlighting Color",
          "The Auto Filename Plugin",
          "Complete Reset",
          "The End"
        ]
      },
      "requirements": [
        "You should be a programmer/coder/developer",
        "You should have Sublime Text installed"
      ],
      "description": "Having a personalized coding experience makes coding easier, more fun, and even helps you write better code! And because Sublime Text a very popular code editor, this class is all about customizing Sublime Text! But even if you don’t use Sublime Text (or haven’t tried it) you can get ideas of how to customize the code editor you do use.\nWe’ll cover things like changing colors, installing themes, installing plugins, getting colours to show up, changing settings, using snippets, getting code to autocomplete, changing layouts, and more (of course).\nBy the end of the class you’ll have what you need to build your perfect code editor – which will make you happier, quicker, and more ninja-like!",
      "target_audience": [
        "Any programmer/coder/developer wanting to know more about customizing their coding environment"
      ]
    },
    {
      "title": "jQuery UI In Depth",
      "url": "https://www.udemy.com/course/jquery-ui-in-depth/",
      "bio": "Hands-on guide for learning the user interface interactions, widgets, effects, utilities and themes that make jQuery UI",
      "objectives": [
        "Introduce the audience to jQuery UI",
        "Cover all the jQuery UI widgets",
        "Discuss the jQuery UI interactions (drag, drop, sort...)",
        "Learn to apply the jQuery UI effects",
        "Discuss positioning UI widgets",
        "Present different tools for developing jQuery UI applications",
        "Introduce the tools needed to debug jQuery UI code"
      ],
      "course_content": {
        "Setting the stage": [
          "Introduction slides",
          "Introduction discussion",
          "Environment Setup",
          "Developer Toos",
          "Debugging tools",
          "An idea testing lab"
        ],
        "Widgets": [
          "Accordion slides",
          "Accordion discussion",
          "Accordion example",
          "Button slides",
          "Button discussion",
          "Button example",
          "Menu slides",
          "Menu discussion",
          "Menu example",
          "Slider slides",
          "Slider discussion",
          "Slider example",
          "Progressbar slides",
          "Progressbar discussion",
          "Progressbar example",
          "Tooltip slides",
          "Tooltip discussion",
          "Tooltip example",
          "Tabs slides",
          "Tabs discussion",
          "Tabs example",
          "Spinner slides",
          "Spinner discussion",
          "Spinner example",
          "Autocomplete slides",
          "Autocomplete discussion",
          "Autocomplete example",
          "Autocomplete example with remote data",
          "Datepicker slides",
          "Datepicker discussion",
          "Datepicker example",
          "Dialog slides",
          "Dialog discussion",
          "Dialog example"
        ],
        "Effects": [
          "Add class effect",
          "Color animation effect",
          "Animation effect",
          "Switch class effect"
        ],
        "Interactions": [
          "Draggable elements",
          "Droppable elements",
          "More on droppable elements",
          "Resizable elements",
          "Selectable elements",
          "Sortable elements"
        ],
        "Utilities": [
          "Positioning elements"
        ],
        "Conclusion": [
          "Final Notes"
        ]
      },
      "requirements": [
        "NotePad++",
        "Web Browser"
      ],
      "description": "This course will provide an in-depth coverage of all the details of jQuery UI. It follows a hands-on approach where the instructor will cover the subjects one at a time using examples. By the time a specific session is done, the student will feel comfortable using the subject covered. Along the way, different tools for developing and debugging jQuery UI code will be discussed. By taking this course, the student will feel very confident creating complex and elegant graphical user interfaces using jQuery UI.",
      "target_audience": [
        "People interested in learning a JavaScript library to create complex Graphical User Interfaces",
        "Students looking to complement their jQuery experience with UI experience",
        "Developers looking for simple ways to debug their jQuery UI code"
      ]
    },
    {
      "title": "LAMP Stack and WAMP, MAMP : Install PHP, Apache, Perl, MySQL",
      "url": "https://www.udemy.com/course/learning-installing-apache-mysql-and-php/",
      "bio": "Learn how to setup a LAMP,WAMP, MAMP (Linux Apache MySQL and PHP) web server and Install MAMP,WAMP on macOS and linux",
      "objectives": [
        "To learn how to setup platform(windows,macOS,Linux) independent development environment"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Who take this course?",
          "What’s new in this version of the course?"
        ],
        "Understanding the AMP Stack?": [
          "What is an AMP stack?",
          "Choose a software stack"
        ],
        "Install Separate Components on Windows": [
          "Install Apache on Windows",
          "Run Apache as a Windows service",
          "Install PHP with Apache on Windows",
          "Install MySQL on Windows",
          "Add MySQL bin directory to the PATH",
          "Uninstall components on Windows"
        ],
        "Install Separate Components on macOS": [
          "Start and stop Apache on macOS",
          "Configure personal site folders",
          "Activate PHP on macOS",
          "Install MySQL on macOS",
          "Uninstall MySQL on macOS"
        ],
        "Install LAMP on Ubuntu Linux": [
          "Install Apache on Linux",
          "Install PHP on Linux",
          "Install MySQL on Linux"
        ],
        "Get Started with WampServer on Windows": [
          "How to Install WampServer?",
          "Manage WampServer",
          "Install WampServer add-ons",
          "Define WampServer directory aliases"
        ],
        "Get Started with MAMP on macOS": [
          "Install MAMP on macOS",
          "Configure Apache and MySQL server ports",
          "Uninstall MAMP"
        ],
        "Common Tasks and Troubleshooting": [
          "Port conflicts on Windows with Skype",
          "Diagnose other port conflicts on Windows",
          "Diagnose port conflicts on macOS",
          "Configure the Apache web document root"
        ]
      },
      "requirements": [
        "The a basics Windows knowledge macOS and Linux for Linux"
      ],
      "description": "This course describes how to install and configure Apache HTTP Server, MySQL database server, and PHP, known collectively as the AMP stack, on a local development computer. This course will be covers different installation approaches, including installing the components separately on Windows, macOS, and Linux and installing the prepackaged WampServer and MAMP bundles. Plus, learn how to troubleshoot port conflicts and other AMP-related issues.\nThe Following topics are covered in detail,\nInstalling Apache on Windows\nWorking with PHP on Windows and macOS\nInstalling MySQL on Windows and macOS\nAdding MySQL bin directory to the PATH\nStarting and stopping Apache on macOS\nConfiguring personal site folders\nInstalling Apache, PHP, and MySQL on Linux\nInstalling and managing WampServer\nDefining WampServer directory aliases\nInstalling MAMP on macOS\nConfiguring Apache and MySQL server ports on MAMP\nHandling port conflicts on Windows and macOS\nConfiguring the Apache web document root",
      "target_audience": [
        "Web Developer including working on PHP , Apache, MySQL"
      ]
    },
    {
      "title": "Complete Wordpress Course, Learn Wordpress & Build Website",
      "url": "https://www.udemy.com/course/build-professional-business-personal-website-wordpress-create/",
      "bio": "Learn Wordpress to quickly & easily build and maintain websites with step by step instructions. Websites in under 2hrs!",
      "objectives": [
        "Build a professional and modern looking WordPress website",
        "Build a mobile responsive website with WordPress",
        "Build a fast and secure WordPress website",
        "Know how to best set up a Wordpress website",
        "Know the must have webpages for any website",
        "Know how to add content, pictures and videos to your Wordpress website",
        "Obtain a FREE domain name",
        "Build websites on a budget everytime"
      ],
      "course_content": {
        "GETTING READY": [
          "What do I need to complete this course?",
          "What to expect and how to get the most out of this course.",
          "What will I have at the end of the course?"
        ],
        "THE FUNDAMENTALS": [
          "What is a Domain Name and which one should I use?",
          "What is hosting and how much space do you really need?",
          "What exactly is Wordpress and why should I use it?",
          "What is a Wordpress theme?",
          "PRO TIP - FREE Wordpress theme vs PREMIUM Wordpress theme",
          "PRO TIP - Wordpress.com vs Wordpress.org",
          "The Fundamentals of Your Website"
        ],
        "BEFORE BUILDING YOUR WEBSITE": [
          "THE MUST HAVE webpages for your website",
          "Who is your target audience?",
          "EXERCISE - Create your target audience profile.",
          "What do you want your target audience to do on your website?",
          "PRO TIP - 60% of traffic is from MOBILE devices and growing, what should you do?",
          "Before building your website."
        ],
        "LET'S GET STARTED - PART 1": [
          "Which hosting provider should I use?",
          "Let's purchase your hosting and domain name.",
          "Setting up your hosting, domain and Wordpress is as easy as 123",
          "Wordpress walkthrough - Part 1",
          "Wordpress walkthrough - Part 2",
          "Changing the default Wordpress settings.",
          "What are Wordpress categories and how should you use them?",
          "What is a Wordpress tag and how should you use them?",
          "PRO TIP - The difference between PAGES and POSTS and what Google thinks?",
          "Overview of the Post workspace.",
          "An overview of the Page workspace.",
          "The Media Library and how to use it.",
          "Lets get Started - Part 1"
        ],
        "LETS GET STARTED - PART 2": [
          "How to use the Wordpress text editor - PART 1",
          "How to use the Wordpress text editor - PART 2",
          "How to insert an image into a post or page.",
          "How to embed a video into a post or page.",
          "How to preview a post or page without publishing it to the internet.",
          "How to add or change your website logo.",
          "How to change your website header image.",
          "How to change your website's background image.",
          "How to change your background colour on your website.",
          "EXERCISE - Create your website pages and posts.",
          "How to create a menu for your website.",
          "Keeping everything up to date.",
          "Lets get Started - Part 2"
        ],
        "PREMIUM WORDPRESS THEME": [
          "Which premium theme provider do we use and why?",
          "More information on the premium Wordpress theme provider we use.",
          "Purchasing a premium Wordpress framework and a child theme.",
          "Installing your new premium Wordpress framework and Child theme.",
          "How to setup your premium Wordpress theme.",
          "How to easily edit your PREMIUM child theme.",
          "Premium theme pages and post overview.",
          "PRO TIP - How to edit the credits at the bottom of your website and copyright.",
          "Extra support for your new premium Wordpress theme",
          "How to setup your homepage - ALTITUDE PRO",
          "Change the background images - ALTITUDE PRO",
          "A premium Wordpress theme"
        ],
        "TAKING YOUR WEBSITE TO THE NEXT LEVEL": [
          "What are widgets and where to find them?",
          "What are plugins, where to find them and how to use them.",
          "How to install the Jetpack plugin powered by wordpress.com.",
          "Social Sharing with SUMO ME - PART 1",
          "Social Sharing with SUMO ME - PART 2",
          "Setting up your sidebar on your website - PART 1",
          "Setting up your sidebar on your website - PART 2",
          "Using forms on your contact page - PART 1",
          "Using forms on your contact page - PART 2",
          "Adding Google Maps to your website.",
          "Setting up a blog roll for your website.",
          "Taking your website to the next level"
        ],
        "FINAL THOUGHTS": [
          "We take a look at the final website and what it looks like."
        ]
      },
      "requirements": [
        "You will need access to a computer",
        "You will need basic computer skills",
        "You will need access to the internet",
        "You will need to follow instructional videos",
        "You will need a willingness to complete the course and website",
        "NO coding is required",
        "NO web development experience is necessary",
        "NO prior knowledge of Wordpress is required"
      ],
      "description": "ALL 60+ VIDEOS IN HD\nGREAT AUDIO AND VIDEO QUALITY\nENGLISH CLEARLY SPOKEN\nCREATE A WORLD CLASS MODERN WEBSITE\nNO CODING REQUIRED\nNO PRIOR EXPERIENCE NECESSARY\nI ALSO SHOW YOU HOW TO GET YOUR FREE DOMAIN\nAND MUCH MUCH MORE….\n______________________________________________________________________\n***All the lectures associated with this course have detailed descriptions of what you will learn while watching each and every one of them. Particularly between sections 2 to 7 with detailed descriptions and numbered lists of all the information contained within them. The lists and descriptions together explain everything you will learn within the lectures, so please take a look at the descriptions within each lecture using the drop down arrow found next to each lecture title. There's a treasure trove of information just waiting for you to unlock in this course.***\n______________________________________________________________________\nCourse description\n\nWhether you are a business owner, an entrepreneur, a startup company, a marketing manager, a celebrity or a student looking to setup a blog, this course will show you exactly how to build a professionally designed and coded website using Wordpress.\nWith over 80 million blogs and  25% of websites worldwide running Wordpress there really is no better way to build your next website.\nYou don’t need any prior experience to join this course. We start from scratch and work our way up from there.\nWe discuss hosting and domain names. We show you how to purchase your hosting and set up Wordpress. Then we show you how to thoroughly use Wordpress, including adding images, formatting, adding backgrounds and a whole lot more. We discuss what pages every website should have and why. Then we show you how to take your website to the next level.\nGone are the days where building a simple website regularly cost $3,000-$5,000.\nYou can get started with as little as $8 for hosting paid monthly and a FREE Wordpress theme and anywhere up to $150 (approximately) which includes 12 months of hosting and a world class premium Wordpress theme...the choice is yours.\nThe course also shows you how to get your domain name for FREE.",
      "target_audience": [
        "Entrepreneurs",
        "Business owners",
        "Startup companies",
        "Celebrities",
        "Businesses",
        "Not for profits",
        "Students",
        "Anyone wanting to build a website quickly and easily",
        "Anyone wanting to save time and money building a website",
        "Anyone wanting to build with Wordpress"
      ]
    },
    {
      "title": "Build a news portal with Laravel and Bootstrap 2022",
      "url": "https://www.udemy.com/course/build-a-news-portal-with-laravel-and-bootstrap-2021/",
      "bio": "Build a news portal with Laravel HTML, CSS and Bootstrap 2021",
      "objectives": [
        "Build advanced application with Laravel",
        "Laravel Application structure",
        "Laravel MVC Architecture",
        "Laravel Models, Controllers, Routes, Views, among others"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Visual studio code plugins",
          "Course Resources and files"
        ],
        "Getting Started": [
          "01 Create a news portal with Laravel - Laravel Application Structure",
          "01 Create a news website with Laravel - Laravel Application Structure",
          "03 Create a news website with Laravel - Frontend layout and theme integration",
          "04 Create a news website with Laravel - Integrating admin dahsboard theme",
          "05 Create a news website with laravel - Creating Models and Migrations",
          "6 Create a news website with laravel - Model relationships",
          "07 Create a news website with laravel - setting up fillable properties on models"
        ],
        "Application Settings": [
          "08 Create a news website with laravel - Settings CRUD 1",
          "09 Create a news website with laravel - Settings CRUD2",
          "10 Create a news website with laravel - Update the settings on the client-side",
          "11 Create a news website with laravel - Solving a bug",
          "12 Create a news website with Laravel - Image upload functionality",
          "13 Create a news website with Laravel - Image upload method.",
          "14 Create a news website with Laravel - Testing the image upload functionality"
        ],
        "Posts Categories section": [
          "15 Create a news website with Laravel - Categories CRUD 1",
          "16 Create a news website with Laravel - Category CRUD 2",
          "17 Create news website with Laravel - Category create method",
          "18 Create a news website with Laravel - Displaying categories on admin panel.",
          "19 Create a news website with laravel and bootstrap - Update functionality",
          "20 Create a news portal with laravel and bootstrap - Categories update error sol"
        ],
        "Posts CRUD": [
          "21 Create news portal with laravel and bootstrap - Create Post CRUD1( admin view",
          "22 Create a new portal with Laravel and Bootstrap - Posts CRUD 2",
          "23 Create a news portal with Laravel and Bootstrap - Posts CRUD 3 (routes and co"
        ],
        "Integrating Data Tables In our application": [
          "24 Laravel Datables Integration - Part1",
          "24 Create a news portal with Laravel and bootstrap - Testing the Posts CRUD func",
          "25 Solving Data table integration bug",
          "26 Data tables integration- adding action buttons"
        ],
        "Updating the client side of application": [
          "27 Removing unused links from master admin layout",
          "28 Displaying dynamic data on the frontend",
          "29 Displaying latest posts and breaking news",
          "30 CK-Editor Integration Part 1",
          "31 Implementing single-post view functionality",
          "32 Single post Dynamic content",
          "33 Frontend single category setup",
          "34 Category posts dynamic data",
          "35 Setting up dynamic menu and breaking news item.",
          "36 Setting dynamic content on the client footer"
        ],
        "User Authentication": [
          "36.5 User Authentication scaffolding",
          "37 Setup authentication layouts on client-side",
          "38 Displaying the logout button when a user is logged in"
        ],
        "Pages": [
          "39 Creating new pages routes and controller methods",
          "40 Writing become a writercontroller methods",
          "41 Become writer customation and functionality",
          "42 Toastr notification integration",
          "43 Restricting the user from submitting the request twice and working on adverti",
          "44 Working on events client-side",
          "45 Events CRUD admin side",
          "47 Events CRUD admin side part 2",
          "48 Adding Events to sidebar menu",
          "49 Testing events CRUD funcionality",
          "50 Become writer and advertise section admin tables",
          "51 Fixing error and additional functionality on writer requests and advertise re",
          "52 Advertise and Writer edit and ban functionality",
          "53 Working on about us page",
          "53 Updating settings adding about settings",
          "54 Solving the about section update bug"
        ],
        "Video Posts": [
          "55 Video sections CRUD Part 1",
          "56 Videos CRUD part 2 - Routes and controller methods",
          "57 Testing the video CRUD functionality",
          "58 Solving a bug",
          "61 Adding Category column to videos table",
          "62 Client video section - Displaying dynamic data"
        ]
      },
      "requirements": [
        "MUST have a computer with PHP development environment set.",
        "A code editor your choice. Visual studio code is the instructor's recommendation"
      ],
      "description": "In this course, we are going to build a new portal application. The front/client side of the application is going to have the latest breaking news section, the news display section, the latest news section as well as other sections. The footer has the listing of the latest posts, as well as the categories display with the number of posts, count per category. The normal user won't be able to access the admin panel. The writer will be able to access the admin panel but will not be able to access some features like seeing or editing other people's posts. The admin will have full CRUD rights on all the sections of the admin panel. You will learn a lot in the course of going through this course with me. In the second video after the introduction, I show the application features in detail.\n\n\nApplication Features\nSettings - Admin Can change the client-side display features from the admin dashboard\nAdmin can create categories\nAdmin can perform CRUD(Create, Read, Update and Delete) on categories\nAdmin can perform CRUD(Create, Read, Update and Delete) on news posts\nAdmin can perform CRUD(Create, Read, Update and Delete) on video posts\nA writer can perform CRUD on His/Her own posts.\nA writer can perform CRUD(Create, Read, Update and Delete) on the video posts that they made.\nAdmin can access all the items on the admin panel.\nA writer can only access the Videos and Posts he/she posted and perform CRUD on them.\nThe normal User cannot access the admin panel.\nThe Laravel Features Covered\nLaravel application structure\nModels, Migrations, Controllers, Routes, Authentication, Middlewares, views, etc\n3RD party Packages used\nLaravel Data Tables\nToastr notification packages for flash notifications\nCK-Editor\nOthers\nHow you will benefit by purchasing this course:\nYou get the application source code.\nIf you follow the whole course by following and doing what I do, you will develop enough logic to get you started with developing advanced applications\nYou get all the front-end and backend open source themes\nSupport in case of any challenges.\nThe course will be updated after each major laravel release.",
      "target_audience": [
        "The course is for beginners to advanced Laravel students BUT not absolute beginners who have no any introduction to Laravel whatsoever",
        "The Laravel beginners who have learned Laravel basics and want to proceed to intermediate level by taking a advanced practical course."
      ]
    },
    {
      "title": "MongoDB for Developers: A Complete Guide(2025)",
      "url": "https://www.udemy.com/course/mongodb-shell-mastery-a-comprehensive-guide-to-streamlining/",
      "bio": "Mastering MongoDB Shell: Streamline Your Database Operations",
      "objectives": [
        "Mastering MongoDB Fundamentals: Gain a deep understanding of MongoDB's core concepts, including document-oriented data modeling, CRUD operations,",
        "Utilizing MongoDB Shell: Learn how to navigate and interact with MongoDB using the command line shell, mastering essential commands for querying, updating",
        "Advanced Querying Techniques: Explore advanced querying techniques, including aggregation pipelines",
        "Optimizing Database Performance: Discover strategies for optimizing MongoDB performance",
        "Navigating the MongoDB Shell: Learn how to navigate the MongoDB Shell environment, including connecting to databases, switching databases,"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to mongodb"
        ],
        "mongodb installation": [
          "latest mongodb and shell install",
          "about old version mongodb"
        ],
        "create database and collection ,delete": [
          "create database and delete",
          "create collection and delete"
        ],
        "insertOne and insertMany methods": [
          "insertOne method",
          "insertMany Method"
        ],
        "comparison oprators": [
          "Explanation of what comparison operators are",
          "Equal to,Greater than,Greater than or equal to operators",
          "In,Less than,Less than or equal to,Not equal to,Not in ,operators"
        ],
        "logical oprator": [
          "and oprator",
          "Explanation of or and not oprator"
        ],
        "coursor oprator": [
          "limit and count method",
          "example for count method"
        ],
        "element oprator": [
          "Explanation and element oprator example"
        ],
        "type Operator": [
          "type Operator and its data type, Explanation and example"
        ],
        "size Operator": [
          "Explanation size oprator and example"
        ]
      },
      "requirements": [
        "No prior experience or specific skills are required to enroll in this course. It's designed for beginners who are eager to learn MongoDB from scratch. All you need is a computer with internet access and a willingness to explore the world of MongoDB",
        "Motivation to Learn: Enthusiasm and a willingness to explore MongoDB's features and functionalities through the Shell",
        "Internet Connection,"
      ],
      "description": "Unlock the full potential of MongoDB with this comprehensive guide to mastering the MongoDB Shell. Whether you're a beginner looking to delve into the world of NoSQL databases or an experienced developer seeking to deepen your understanding, this course is designed to empower you with the essential skills needed to excel in MongoDB Shell operations.\nThroughout this course, you'll embark on a journey that will revolutionize your approach to database management. We'll start by laying a strong foundation, ensuring that even newcomers to MongoDB feel confident navigating its complexities. From there, we'll progress to more advanced topics, catering to the needs of seasoned professionals who are eager to refine their expertise.\nOne of the highlights of this course is the in-depth exploration of MongoDB's powerful query language. You'll have the opportunity to dissect a wide array of commands and functionalities, gaining a deep understanding of how to harness MongoDB's full potential to meet your specific needs.\nBut we won't stop there. Beyond basic querying, we'll delve into advanced techniques for data manipulation and aggregation. You'll learn how to wield these tools effectively, unlocking insights and uncovering patterns hidden within your data.\nEfficient database management is crucial in any MongoDB project, and this course equips you with the knowledge needed to excel in this area. From performance optimization strategies to schema design principles, you'll discover best practices that will elevate your database management skills to new heights.\nWhether you're aiming to advance your career, enhance your current projects, or simply satisfy your curiosity, this course is your gateway to MongoDB mastery. Enroll now and embark on a journey that will transform you into a MongoDB expert, ready to conquer any challenge that comes your way.",
      "target_audience": [
        "This course is ideal for aspiring developers, database administrators, and anyone interested in mastering MongoDB. Whether you're a beginner looking to dive into the world of database management or an experienced programmer seeking to expand your skill set, this course is designed to cater to learners of all levels. If you're eager to unlock the power of MongoDB and enhance your proficiency in database operations, this course is for you.",
        "Students: Individuals studying computer science, software engineering, or related fields who want to build a strong foundation in MongoDB and learn how to navigate its features using the Shell",
        "Data Engineers: Those working with big data or handling large datasets who want to leverage MongoDB as part of their data infrastructure and understand how to manipulate data using the Shell",
        "Developers: Those who work with MongoDB in their projects and want to enhance their command-line skills to interact more efficiently with the database."
      ]
    },
    {
      "title": "Master Nuxt.js - A Vuejs framework by building projects",
      "url": "https://www.udemy.com/course/master-nuxtjs-a-vuejs-framework-by-building-projects-and-deploy/",
      "bio": "Get excited with Vuejs by Building two projects with Nuxt & Deploy, including state management by vuex in nuxt, firebase",
      "objectives": [
        "How to kick start with nuxtjs",
        "Build server-side-rendered single-page-applications (SPAs) in nuxt",
        "Build a weather application using API in Nuxtjs",
        "Building Quiz app with firebase in nuxt",
        "Authentication using firebase in nuxtjs",
        "Deploying Nuxtjs on digital ocean server",
        "Making Nuxtjs an SEO friendly application",
        "Including external Library",
        "Writing effective, reusable and manageable vuejs/javascript code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to course",
          "How to get most out of this course",
          "How to get help"
        ],
        "Say Hello to Nuxt.js": [
          "Introduction",
          "2 Intro to Nuxtjs",
          "3 Nuxtjs with npx"
        ],
        "Understanding Nuxtjs Core concepts": [
          "4 Understanding express:nodejs",
          "5 Understanding Plugins in Nuxtjs",
          "6 Understanding Modules in Nuxtjs",
          "7 Understanding Nuxtjs config",
          "8 Html in nuxtjs",
          "9 Default Layout",
          "10 Custom Layout",
          "11 Custom Error Page",
          "12 Attributes of Pages",
          "13 Meta Tag Override",
          "14 Router - Nuxt Link",
          "15 Dynamic Routings",
          "16 Route Params Validation",
          "17 Middleware"
        ],
        "Project 1 - Weather Application": [
          "18 Start Weather App",
          "19 Create Weather App Page",
          "20 Understand Weather API Website",
          "21 Fetch Weather Data",
          "22 Dynamic City Weather",
          "23 Show City with Weather Icon",
          "24 Show Temperature",
          "25 Show Weather Description",
          "26 Move to Server Side Rendering (SSR) mode",
          "27 Show Wind & Pressure",
          "28 Show Max and Min Temperature",
          "29 Clean-Up V-if",
          "30 Use DotEnv Module"
        ],
        "State Management - Understand Vuex Store n Nuxtjs": [
          "31 Intro to Vuex in Nuxtjs",
          "32 Access State from Store",
          "33 Vuex Getters",
          "34 Weather app - move to Vuex store",
          "35 AsyncData to Fetch",
          "36 Vuex Actions in Nuxt.js",
          "37 Refactor and Re-use code"
        ],
        "Project 2 - Quiz Application with Firebase": [
          "38 Start with Quiz App",
          "39 Submit Button",
          "40 Create Question Page",
          "41 Intro to Firebase Test Mode",
          "42 Bind Data to Question Form",
          "43 Store Question to Firebase",
          "44 Store Answer with Question on Firebase",
          "45 Fetch Questions from Firebase",
          "46 Show Questions",
          "47 Update Question",
          "48 Query Answer by Question Id",
          "49 Update Asnwer",
          "50 Delete Answer with Question",
          "51 Refactor our Code",
          "Course Section and future plans"
        ],
        "Firebase Authentication on Admin Side": [
          "52 Create Login Form",
          "53 Make Login Work",
          "54 Use Vux nuxtServerInit",
          "55 Auth Logout and plugins",
          "56 Protect route with Guest Middleware",
          "57 Why this Permission denied",
          "58 Show Question on FrontEnd",
          "59 Extract Questions into its Component",
          "60 Get Correct Answer",
          "61 Correct Answer Color",
          "62 Notify use on Client Side Only"
        ]
      },
      "requirements": [
        "Basics of Vuejs",
        "Basics of Vuex",
        "Javascript"
      ],
      "description": "Nuxt or Nuxtjs is a framework of vuejs to build SPA and universal applications\nNuxt.js presets all the configuration needed to make your development of a Vue.js application enjoyable.\n\n\nYou will get introduced with Nuxtjs in detiails and work on two real vuejs nuxtjs projects.\nNuxt make server side rendering like a breeze and combining every pieces of vuejs ecosystem is the fuel of nuxtjs.\n\n\nIn this course, I'll teach you core concepts of Nuxt.js and how exactly it works behind the scene. We will dive into the rendered .nuxt directory to see from where nuxt serve every page and how they have configured.\n\n\nWhile this course is designed with two project and then finally deploying project on DigitalOcean, I encourage you to comment or request any specific thing you want to learn related to nuxtjs.\n\n\nThe course will teach you ...\nBuild server-side-rendered single-page-applications (SPAs)\nHow to use vuetify framework\nMaking Nuxtjs an SEO friendly application\nIncluding external Library\nWriting effective, reusable and manageable vuejs/javascript code\nDeploying Nuxtjs on digital ocean server\nAuthentication using firebase in nuxtjs\nany many more things.\n\n\nWho am I?\nMy name is Sarthak Shrivastava and I am a full stack developer.\n\n\nWhy I am best for teaching nuxtjs ?\nBecause my own bitfumes website is build over Nuxt.js.\nAlong with that, i have bestselling Laravel + Vue.js course forum course here on Udemy.",
      "target_audience": [
        "Who want to learn how to write effective manageable code",
        "Who want to create server side rendering application (SSR)",
        "Who want to build real projects with vuejs and SSR"
      ]
    },
    {
      "title": "Latest CMS Blog,Freelancing Services Template In PHP&MYSQLI.",
      "url": "https://www.udemy.com/course/learn-php-mysqli-with-a-dynamic-blog/",
      "bio": "Learn PHP From Scratch With A CMS Blog,Freelancing Services Template,Admin Panel & Voting System With Bootstrap 3 And 4.",
      "objectives": [
        "Students will be able to learn all the essential functions of php & mysqli and their proper usage.",
        "Students will be able to learn all the essential HTML 5.0 tage, CSS 3 properties and their proper usage.",
        "Students will learn the proper usage of bootstrap 3 and bootstrap 4.",
        "Students will be able to learn the usage of bootstrap framework to make any theme easily responsive.",
        "Students will be able to make any kind of advance level dynamic blog in php & mysqli.",
        "Students will be able to make any kind of voting system.",
        "Students will be able to make a freelancing services page for getting online order.",
        "Students will be able to launch their own online services providing company to earn money online.",
        "Students will be able to receive and deliver customers orders through that services page easily.",
        "Students will be able to receive money from customers in both ways online through paypal and offline through bank,western union etc etc.",
        "Paypal integration will be made for receiving payments online."
      ],
      "course_content": {
        "Introduction To Course": [
          "Introduction",
          "Update Introduction-1",
          "Update Introduction-2"
        ],
        "php Basics": [
          "Downloading xampp",
          "php syntax part-1",
          "php syntax part-2",
          "variables",
          "Global Variables",
          "Usage Of Arrays",
          "Making Function",
          "Data Types",
          "For Loop",
          "While Loop",
          "Do While Loop",
          "For each loop",
          "if and else",
          "Nested else if",
          "Arithmetic Operators",
          "Logical Operators",
          "Comparison Operators",
          "Text Methods",
          "Switch Statement",
          "Include and Require",
          "Get and Post Method",
          "Cookies",
          "Session",
          "Sending mail",
          "Uploading Images",
          "Making Text Files",
          "Validating url and email",
          "substr",
          "More Tips"
        ],
        "MYSQLI BASICS": [
          "Creating Database",
          "Making Form",
          "Inserting Data Into Table",
          "Viewing Data",
          "Deleting Data from Table",
          "Editing Data From Table",
          "Updating Data"
        ],
        "Source Files": [
          "Bootstrap3 ,php & mysqli with a dynamic blog & Voting System"
        ],
        "Creation Of A Static Responsive Blog In HTML5,CSS3 And Bootstrap 3": [
          "Lecture-1",
          "Lecture-2",
          "Lecture-3",
          "Lecture-4",
          "Lecture-5",
          "Lecture-6",
          "Lecture-7",
          "Lecture-8",
          "Lecture-9",
          "Lecture-10",
          "Lecture-11",
          "Lecture-12",
          "Lecture-13",
          "Lecture-14",
          "Lecture-15",
          "Lecture-16",
          "Lecture-17",
          "Lecture-18",
          "Lecture-19",
          "Lecture-20",
          "Lecture-21",
          "Lecture-22",
          "Lecture-23",
          "Lecture-24",
          "Lecture-25",
          "Lecture-26",
          "Lecture-27",
          "Lecture-28",
          "Lecture-29",
          "Lecture-30",
          "Lecture-31",
          "Lecture-32",
          "Lecture-33",
          "Lecture-34",
          "Lecture-35",
          "Lecture-36",
          "Lecture-37",
          "Lecture-38",
          "Lecture-39"
        ],
        "Converting The Static Blog Into Dynamic By Using PHP And MYSQLI": [
          "Lecture-40",
          "Lecture-41",
          "Lecture-42",
          "Lecture-43",
          "Lecture-44",
          "Lecture-45",
          "Lecture-46",
          "Lecture-47",
          "Lecture-48",
          "Lecture-49",
          "Lecture-50",
          "Lecture-51",
          "Lecture-52",
          "Lecture-53",
          "Lecture-54",
          "Lecture-55",
          "Lecture-56",
          "Lecture-57",
          "Lecture-58",
          "Lecture-59",
          "Lecture-60",
          "Lecture-61",
          "Lecture-62",
          "Lecture-63",
          "Lecture-64",
          "Lecture-65",
          "Lecture-66",
          "Lecture-67",
          "Lecture-68"
        ],
        "Making An Admin Panel For Dynamic Blog.": [
          "Lecture-69",
          "Lecture-70",
          "Lecture-71",
          "Lecture-72",
          "Lecture-73",
          "Lecture-74",
          "Lecture-75",
          "Lecture-76",
          "Lecture-77",
          "Lecture-78",
          "Lecture-79",
          "Lecture-80",
          "Lecture-81",
          "Lecture-82",
          "Lecture-83",
          "Lecture-84",
          "Lecture-85",
          "Lecture-86",
          "Lecture-87",
          "Lecture-88",
          "Lecture-89",
          "Lecture-90",
          "Lecture-91",
          "Lecture-92",
          "Lecture-93",
          "Lecture-94",
          "Lecture-95",
          "Lecture-96",
          "Lecture-97",
          "Lecture-98",
          "Lecture-99",
          "Lecture-100",
          "Lecture-101",
          "Lecture-102",
          "Lecture-103",
          "Lecture-104",
          "lecture-105",
          "Lecture-106",
          "Lecture-107",
          "Lecture-108",
          "Lecture-109",
          "Lecture-110",
          "Lecture-111",
          "Lecture-112",
          "Lecture-113",
          "Lecture-114",
          "Lecture-115",
          "Lecture-116",
          "Lecture-117",
          "Lecture-118",
          "Lecture-119",
          "Lecture-120",
          "Lecture-121",
          "Lecture-122",
          "Lecture-123",
          "Lecture-124",
          "Lecture-125",
          "Lecture-126",
          "Lecture-127",
          "Lecture-128",
          "Lecture-129",
          "Lecture-130",
          "Lecture-131",
          "Lecture-132",
          "Lecture-133",
          "Lecture-134",
          "Lecture-135",
          "Lecture-136",
          "Lecture-137",
          "lecture-138",
          "lecture-139",
          "lecture-140"
        ],
        "Voting System": [
          "Lecture-1",
          "lecture-2",
          "lecture-3",
          "lecture-4",
          "lecture-5",
          "lecture-6"
        ],
        "Freelancing Services Template Static Structure In Bootstrap 4": [
          "Update Lecture-1",
          "Update Lecture-2",
          "Update Lecture-3",
          "Update Lecture-4",
          "Update Lecture-5",
          "Update Lecture-6",
          "Update Lecture-7",
          "Update Lecture-8",
          "Update Lecture-9",
          "Update Lecture-10",
          "Update Lecture-11",
          "Update Lecture-12",
          "Update Lecture-13",
          "Update Lecture-14",
          "Update Lecture-15",
          "Update Lecture-16",
          "Update Lecture-17",
          "Update Lecture-18",
          "Update Lecture-19",
          "Update Lecture-20",
          "Update Lecture-21",
          "Update Lecture-22",
          "Update Lecture-23",
          "Update Lecture-24",
          "Update Lecture-25",
          "Update Lecture-26",
          "Update Lecture-27",
          "Update Lecture-28",
          "Update Lecture-29",
          "Update Lecture-30",
          "Update Lecture-31"
        ],
        "Freelancing Services Template Dynamic Structure In PHP & MYSQLI": [
          "Update Lecture-32",
          "Update Lecture-33",
          "Update Lecture-34",
          "Update Lecture-35",
          "Update Lecture-36",
          "Update Lecture-37",
          "Update Lecture-38",
          "Update Lecture-39",
          "Update Lecture-40",
          "Update Lecture-41",
          "Update Lecture-42",
          "Update Lecture-43",
          "Update Lecture-44",
          "Update Lecture-45",
          "Update Lecture-46",
          "Update Lecture-47",
          "Update Lecture-48",
          "Update Lecture-49",
          "Update Lecture-50",
          "Update Lecture-51",
          "Update Lecture-52",
          "Update Lecture-53",
          "Update Lecture-54",
          "Update Lecture-55"
        ]
      },
      "requirements": [
        "Students should have code editor, xampp application software and web browser for joining this course."
      ],
      "description": "In first section I,I have described complete PHP and MySQL  basics essential functions for you, so you could easily understand PHP & MySQL and could use it in making any kind of responsive and dynamic theme.This section is constituted on 37 videos lectures which describe everything about PHP & MySQL and in the second section I have also made a dynamic blog and a freelancing services template, its admin panels plus a voting system in PHP & MySQL for you.\n\nI have made a cms blog and a freelancing services template with its complete admin panel and a voting system as projects in the second section of this course by purely using PHP and MySQL functions with the assistance of Bootstrap 3 and 4 framework to make it complete responsive and dynamic.Often people use bootstrap for this purpose and the good thing of the usage of bootstrap kinds of framework is that students can easily make any kind of theme responsive without indulging themselves in any complicated issues. Therefore I have made this cms blog and its admin panel to make the students fully expert in all the essential PHP & MySQL functions and bootstrap framework.So I am very hopeful that after joining this course and learning it, you will get a good control over making any kind of advance level responsive plus dynamic layout with the assistance of bootstrap and PHP & MySQL. I have focused to make the students fully experts in the usage of all the essential PHP & MySQL functions and bootstrap, so you could learn their usage very well.",
      "target_audience": [
        "Everyone who takes interest in learning php and mysqli and want to make an advance blog in php&mysqli with the assistance of bootstrap can participate in this course."
      ]
    },
    {
      "title": "50 Things You've Been Doing Wrong in C# and .NET Core",
      "url": "https://www.udemy.com/course/50-things-youve-been-doing-wrong-in-c-and-net-core/",
      "bio": "Avoid common C# mistakes to improve your apps' productivity",
      "objectives": [
        "Deeply understand popular data structures (such as lists, arrays, LinkedList, HashSet, and dictionaries) and use the most efficient one depending on the problem you are trying to solve",
        "Persist your data to a database properly by learning about efficiency and concurrency aspects when using the Entity framework",
        "How to use HTTP verbs, and HttpClient properly, and classify your resources appropriately",
        "Why circular dependencies are bad and how to avoid chatty traffic, eventually leading to more robust microservices",
        "How to use SOLID principles the right way with improved code quality and readability",
        "Identify and fix common programming problems with proven design patterns",
        "Effectively debug, design, and secure your code",
        "Navigate the complicated world of microservices and deliver robust RESTful APIs that follow the best industry standards"
      ],
      "course_content": {
        "Resolving General C# Coding Errors": [
          "The Course Overview",
          "Misunderstanding Pass by Reference",
          "Misunderstanding Dispose and Garbage Collector Relation",
          "Incorrectly Implementing Equals and GetHashCode",
          "Handling Exceptions Correctly",
          "Misunderstanding Virtual and Override",
          "Ignoring Compiler Warnings",
          "Test your knowledge"
        ],
        "Misusing C# Primitives": [
          "Misusing DateTime",
          "String and Localization Mistakes",
          "Issues with int and long",
          "Issues with float, double, and decimal.",
          "Misusing Structs and Boxing Mistakes",
          "Test your knowledge"
        ],
        "Design Patterns and SOLID": [
          "Misunderstanding and Violating SOLID Principles",
          "Changing Your Core Logic",
          "Not Using Design Patterns When You Should",
          "Incorrectly Implementing Singleton",
          "Test your knowledge"
        ],
        "Data Structures and Algorithms": [
          "Using List and Array Everywhere",
          "Using OrderBy Instead of Sort",
          "Using Where Instead of Find",
          "Not Understanding How LINQ Works",
          "Test your knowledge"
        ],
        "Parallelism and Asynchronicity": [
          "Overusing Threads Instead of Tasks",
          "Not Understanding Thread Safety",
          "Not Being Aware of Fences and Memory Barriers",
          "Not Using Task in Interface Signatures with Potential I/O",
          "Using Result or Wait Inappropriately",
          "Test your knowledge"
        ],
        "Dependency Injection": [
          "Choosing the Wrong Lifetime",
          "Using the Service Locator Pattern",
          "Injecting Too Many Parameters",
          "Using Dependency Injection Only for Testing",
          "Test your knowledge"
        ],
        "Entity Framework": [
          "Making Everything Public",
          "Not Using Transactions",
          "Losing Aggregate Boundaries",
          "Ignoring Concurrency",
          "Using Auto-Incremented Primary Keys",
          "Test your knowledge"
        ],
        "Building RESTful APIs": [
          "Misunderstanding What Resources Are",
          "Using Only POST and GET",
          "Underestimating Caching and Redirection",
          "Using HttpClient Wrongly",
          "Test your knowledge"
        ],
        "What to Avoid When Building Microservices": [
          "Sharing a Database Between Microservices",
          "Having Chatty Traffic",
          "Ignoring Latency Concerns",
          "Having Cyclic Dependencies",
          "Test your knowledge"
        ],
        "Security Flaws": [
          "Not Properly Hashing Passwords",
          "Misusing Cookies",
          "Not Properly Hiding Your Secrets",
          "Relying on Client Validation",
          "SQL Injections",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Please note that this course assumes familiarity with C#, .NET Core, and ASP .NET Core, together with Visual Studio (2017 or 2019)."
      ],
      "description": "Professional software development involves many different skills. As a C# developer, you must be skilled in the C# language and the .NET Core runtime. With this course, you'll take your C# and .NET Core skills to the next level by avoiding common mistakes when coding, using design patterns, developing microservices, persisting your data, securing your application, and even debugging problems.\nLearning the basics of a language or platform can easily be done by following a course/book and with some hands-on practice. The path to becoming a software developer encounters many edge cases. During this course, you'll learn from my hard-earned experience, garnered from real-life situations, regarding the C# language and .NET platform. You can take this course as a vaccination against future coding infections!\nBy the time you finish this course, you will have developed your skills to \"sniff out\" coding issues effectively and avoid mistakes. Whatever your issues, the aim of this course is to take you to the 'Bring it on!' point when it comes to solving your .NET and C# problems.\nPlease note that this course assumes familiarity with C#, .NET Core, and ASP.NET Core, together with Visual Studio (2017 or 2019).\nAbout the Author\nOnur Gumus works as a lead software engineer in Dubai UAE. He has 15 years of experience in .NET and web development. He is a functional programming enthusiast and has completed many large projects with ASP.NET.",
      "target_audience": [
        "Beginners, experts, and anyone familiar with C#, .NET Core, and ASP .NET Core who would like to learn the best ways to do things in .NET Core and related tools will learn something new and benefit from this course."
      ]
    },
    {
      "title": "GenAI: Function Calling, Whisper, LangChain (UPDATED 2024)",
      "url": "https://www.udemy.com/course/generativeai-gpt-function-calling-whisper-langchain/",
      "bio": "Hands-on projects (JS & Python) to get started fast with Conversational AI, Speech-to-text, Function calling & LangChain",
      "objectives": [
        "OpenAI API : learn to interact with the language models and integrate AI into web projects (Javascript and Python)",
        "By the end of the course, students will be able to integrate GPT models into various applications, including chatbots and content generators.",
        "Chat Completions API : learn to set up and integrate the Chat Completions API into existing projects",
        "Function Calling : extend the Large Languages models (LLMs)'s capacities with the ability to call external APIs",
        "Speech-to-Text (Whisper Audio) : set up a simple use-case in Python to turn audio files into transcripts",
        "Langchain : to simplify the creation of applications using Large Languages models (LLMs)",
        "[PROJECT] (Python) : quickstart example to integrate an intelligence layer into a web project",
        "[PROJECT] (Nodejs) : Create a customized Chatbot with the Chat language models",
        "[PROJECT] (Python) : convert audio podcast samples to text with the Whisper Audio API",
        "[PROJECT] (LangChain Javascript) : Build a transcriber and summarizer app with the OpenAI LLMs, Whisper Audio API and the Summarization Chain"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Exercise Files (download)",
          "Download the Exercise Files"
        ],
        "GPT models : integrating AI into web projects (Python Quickstart)": [
          "Getting Started with OpenAI : First Look",
          "Download the starter project",
          "Requirements & Set up the development environment",
          "Setting up the environment (Quickstart guide)",
          "Setting up an API Key",
          "Defining environment variables",
          "Making API Requests"
        ],
        "Introduction to the ChatGPT AI and the Chat language models (NodeJS)": [
          "Conversational AI",
          "Installation & requirements",
          "Starter Project : install dependencies : express, cors, openai",
          "Defining a system message and a prompt",
          "Making API requests",
          "Final steps"
        ],
        "Build a REST API (NodeJS & ExpressJS)": [
          "Introduction & Learning Objectives",
          "Setting up a Node server with Express",
          "Express server : {source code}",
          "Defining Prompts and making requests",
          "Defining a request : { source code }",
          "Testing with Postman"
        ],
        "Build a REST API : connect a React client application": [
          "Build a Chatbot user interface",
          "Setting up the React application",
          "Defining Requests with axios",
          "Allow CORS: Access-Control-Allow-Origin - install cors",
          "Connecting the client application to the REST API"
        ],
        "Extend the GPT models capacities with Function Calling (Node.js)": [
          "Introducing Function Calling",
          "Getting started : starter project & Function Calling feature",
          "Calling External Data : introduction to OpenWeathermap.org",
          "Source code to fetch the current weather information",
          "Testing Function Calling",
          "Final steps - connect to the chatbot",
          "2024 UPDATE - Python Example (Google Colab)"
        ],
        "Speech-2-Text (Whisper Audio API): convert audio to text (Python)": [
          "Whisper Audio API : learn how to turn audio into text",
          "Set up : starter project, install libraries ...",
          "Download audio to file system",
          "Converting audio to text",
          "Listen to Podcast and read transcripts"
        ],
        "LangChain Framework : chain and combine LLM's capabilities (Javascript)": [
          "Getting started : Langchain, Audio Whisper ...",
          "Download starter Project & install dependencies",
          "Audio whisper model : install loader",
          "Building a transcription application : Summarization chain",
          "Testing with Postman",
          "Build a React client application",
          "Final steps"
        ]
      },
      "requirements": [
        "Basics of programming language and web development : HTML & CSS",
        "Javascript fundamentals + knowledge of ECMAScript 2015",
        "Basic Python programming",
        "Basic Online Editor or IDE (recommanded : Visual studio code)",
        "Basic command line operations",
        "Modern Browser (Chrome, Safari, Brave) and the React Developer Tools"
      ],
      "description": "- The OpenAI API is one of the most exciting advancements in the world of natural language and code processing.\n- Its powerful models and flexible endpoints offer a wealth of possibilities for web developers looking to take their skills to the next level.\n- In this course, you'll dive into the world of OpenAI APIs and GPT language models. Our focus will be on the completions endpoint and how it can be applied to text completion and various other language-processing tasks.\n- Students will work on an end-to-end Generative AI project incorporating the learned concepts.\nThe course includes Projects, Hands-on Labs, Case Studies and Real-world Applications.\n# 1:  Introduction to Generative AI :\nwith the OpenAI API to solve a wide range of language processing tasks, including :\ncontent generation, summarization, semantic search, and sentiment analysis\na quickstart Tutorial to gain experience and build your first AI-powered application with the APIs and the large language models (LLMs).\nYou will learn how to build a simple sample node application.\nAlong the way, you’ll learn key concepts and techniques :\nauthentication with the API key,\nprompt design, adjust settings and generate completions\n# 2: The Chat models Models:\nexplore the different language models available through the OpenAI API, including the cutting-edge GPT language model\nintegrate the Chat completion API to create an AI-agent\n# 3: Speech-to-Text\ndiscover the Audio Whisper API to turn audio files into transcriptions\nimplementing Speech-to-Text to convert podcast audio samples into text\n# 4: Function Calling in AI Systems\nextend the LLMs capacities\nand give the language models the ability to call external APIs and generate extended responses.\n# 5: Experiment with LangChain :  a framework to easily create applications with the generative models\n\n\n# Target and intended audience\nWhether you're a seasoned web developer with years of experience or just starting, this course is designed to help you take your skills to the next level.\nFor Web Developers of All Levels\nBasics of Node JS, ReactJS, and Python\nNo prior programming experience is required, and the course is suitable for developers of all levels, from beginners to advanced.\n# Requirements and prerequisites for the course :\nBasics of web development: HTML,  CSS\nSome basic programming language\nThe javascript fundamentals and Python\n\n\nIn this comprehensive course, you will gain a deep understanding of the OpenAI API and its capabilities, along with hands-on experience in building your applications using Node.js, ReactJS, and Python.\nSo why wait?  Enroll now and unleash the full potential of AI and build your first nextGen application.",
      "target_audience": [
        "Javascript developers",
        "Front and backend developers",
        "Students in Web development and software engineering",
        "Anyone interested in building apps with the OpenAI API and the AI generative models"
      ]
    },
    {
      "title": "Socket IO & Websocket For Beginners In 7 Simple Steps",
      "url": "https://www.udemy.com/course/socket-io/",
      "bio": "Socket.IO realtime communication training for complete beginners. Create apps, games & more (socket, websockets, chat)",
      "objectives": [
        "How to build a real-time chatroom web app from scratch. Everything is covered step by step.",
        "How to harness real-time communication on the web",
        "Understand the basics of websockets and how they work",
        "Create multiple channels to distribute functionalities of your app.",
        "Integrate Socket․IO in any Node․js app",
        "Understand important events of client server architecture - connect/disconnect, timeout, pong, etc.",
        "You’ll be able to develop real-time web applications using Socket․IO",
        "Much more...",
        "Everything you need to get started with Socket․IO programming is covered in a simple step by step format."
      ],
      "course_content": {
        "STEP 1: Introduction": [
          "What is Socket.IO?",
          "Difference between Websockets and Socket.IO",
          "When should you use Socket.IO?",
          "Multiple-Choice Questions - Introduction"
        ],
        "STEP 2: Learning Express": [
          "Why Express",
          "First Express App"
        ],
        "STEP 3: Installation And Hello World": [
          "Adding Socket.IO in client and server",
          "Hello World and Simple Message Broadcaster",
          "Multiple-Choice Questions - Installation and Hello World"
        ],
        "STEP 4: Socket Events": [
          "Reserved Events in Socket.IO",
          "Event Handling",
          "Code Quiz - Event Handling"
        ],
        "STEP 5: Broadcasting, Namespaces and Rooms": [
          "Broadcasting Messages",
          "Namespaces in Socket.IO",
          "Creating Rooms",
          "Code Quiz - Broadcasting, Namespaces and Rooms"
        ],
        "STEP 6: Creating Chatroom from scratch": [
          "Objective",
          "Frontend Development Part 1",
          "Frontend Development Part 2",
          "Frontend Development Part 3",
          "Frontend Development Part 4",
          "Frontend Development Part 5",
          "Frontend Development Part 6",
          "Backend Development",
          "Integration and Testing",
          "Walkthrough"
        ],
        "STEP 7: Conclusion": [
          "Conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic HTML/CSS/JS knowledge",
        "Beginner Level Node․js",
        "No paid software/service is required"
      ],
      "description": "THE MOST EFFECTIVE SOCKET.IO BEGINNERS COURSE - EVERYTHING IS COVERED!\nThe primary objective of this course is to teach beginners the fundamental Socket.IO programming skills as fast and effective as possible.\nI will start teaching you the fundamental theory about sockets, then swiftly move on to practical coding.\n\n\nYou will learn:\nThe difference between socket IO and websockets\nWhat socket events are and how to handle them\nKnow how to broadcast data\nHow to create multiple namespaces and rooms to distribute your app functionality\nAnd finally, I will teach you step by step, how to code a realtime chat app from scratch.\nMuch much more...\n\n\nI will take you by the hand and show you step by step, how Socket.IO programming works.\nWhen you are done with the course, you will have acquired the necessary skills to harness real-time communication on the web & create your very own realtime applications (and not just chat apps)\n\n\nWHAT IS SOCKET IO?\nSocket.IO is a JavaScript library for realtime web applications. It enables realtime, bi-directional communication between web clients and servers. It has two parts: a client-side library that runs in the browser, and a server-side library for Node.js. Both components have a nearly identical API. Like Node.js, it is event-driven.\nSocket.IO primarily uses the WebSocket protocol with polling as a fallback option, while providing the same interface. Although it can be used as simply a wrapper for WebSocket, it provides many more features, including broadcasting to multiple web sockets, storing data associated with each client, and asynchronous I/O.\nSocket.IO provides the ability to implement real-time analytics, binary streaming, instant messaging, and document collaboration.\nNotable users include Microsoft Office, Yammer, and Zendesk.\nSocket.IO handles the connection transparently. It will automatically upgrade to WebSocket if possible.\nThis requires the programmer to only have Socket.IO knowledge.\n\n\nTOP 3 BENEFITS OF LEARNING SOCKET.IO PROGRAMMING\n1: Increased worldwide demand\nSocket.IO is used from startups to the big 4 software enterprises such as Microsoft. Hence, it has a great community behind it, and there’s a good possibility that your future or current employer shifts to it from realtime systems. That means that developers that know Socket.IO are in great demand and the demand is only increasing.\n2: Future proof technology\nThe importance of Realtime Systems is not to be discounted. Instant data transmission is the norm today. Every critical system such as stock markets, emergency alerts, data analytics, traffic management, etc. need realtime data for decision making.\nSocket.IO is a library made for realtime communication, providing transfer of multiple types of data-structures and binary data - image, audio and video.\n3: Get your dream job\nSocket.IO development skills are a requirement for a lot of tech jobs today. A simple search on any well-known job websites will reveal the requirement for the skill\n\n\nFREQUENTLY ASKED QUESTIONS\nWill learning Socket.IO make me more employable or likely to get promoted?\nLearning more and having additional knowledge than your peers is always beneficial. Even if your current job role doesn’t require real-time communication, it gives you insight on how to approach problems differently, what is the better way to solve it. Maybe you or your organization is using Rest APIs for some application which is better realtime and Sockets IO can be of help there. Coming up with more solutions make you more valuable for everyone.\nHow is Socket.IO helpful in Game Development?\nIn online multiplayer games, the stats of players need to be shared with each other. Usually, a clone of one player is made in another player’s environment. Whatever stats and actions the actual player perform, the clone copies. Socket.IO can be used to send information from real to clone and back from clone to real. For e.g. the clone gets hit by a bullet, an event will get fired which deducts the main player’s health.\n\n\n\n\nGUARANTEE\nIf within 30 days of buying the course you decide that it's not for you, just get a refund. No risk to you.\n\n\nARE YOU READY TO LEARN SOCKET.IO DEVELOPMENT?\nPlease press the \"Take This Course\" button and start learning 2 minutes from now!",
      "target_audience": [
        "Any developer who wants to learn how to harness real-time communication on the web",
        "Any developer interested in learning how to build real time applications with Socket․IO",
        "Programmers who wants to further their career by learning Socket․IO programming"
      ]
    },
    {
      "title": "React and Serverless - Fullstack Web Development",
      "url": "https://www.udemy.com/course/react-and-serverless/",
      "bio": "Learn how to build real-world applications with React and Serverless",
      "objectives": [
        "Modern React including Hooks and the Context API",
        "CSS in JSS using Styled Components",
        "Storing data using the Airtable API",
        "Securing applications with JSON Web Tokens",
        "Building and deploying Serverless Functions with Netlify",
        "Creating a Light/Dark mode with CSS Variables and React Context",
        "Deploying to Netlify using Continuous Integration"
      ],
      "course_content": {
        "Course Overview and Project Setup": [
          "Welcome",
          "What We'll Build and Resources",
          "My Setup",
          "1.2 Create Starter React Project",
          "Add Routing with React Router",
          "Create the Navbar"
        ],
        "Styling with Styled Components": [
          "Introduction to Styled Components",
          "Create Base Styled Components",
          "Style the Navbar",
          "Style the Home Page",
          "Style the Game Page"
        ],
        "Game Functionality with React Hooks": [
          "Introduction to React Hooks",
          "First React Hook for Tracking Score",
          "Implement the Timer",
          "Listen for User Input",
          "Update User Score Based on Input"
        ],
        "React Context API to Share Score State Between Components": [
          "Introduction to React Context",
          "Tracking User's Score Between Components"
        ],
        "Airtable API and Setup": [
          "Introduction to Airtable",
          "Airtable Workspace and API"
        ],
        "Serverless Functions for Storing High Scores": [
          "Introduction to Serverless Functions",
          "Netlify Init and Setup",
          "Creating Your First Serverless Function",
          "Serverless Function to Retrieve High Scores",
          "Setup Environment Variables",
          "Displaying High Scores",
          "Create Save High Score Serverless Function",
          "Refactor Common Airtable Code",
          "Save Score on Game Over",
          "Game Over Bug Fix and Extra Styling"
        ],
        "Add Authentication with Auth0": [
          "Introduction to Authentication",
          "Sign Up and Create Tenant in Auth0",
          "Add Authentication in React",
          "Require Username on Sign Up"
        ],
        "Add Security to Our Serverless Functions": [
          "Introduction to Authorization",
          "Include Access Token in Save Score Request",
          "Retrieve and Parse Access Token",
          "Validate Access Token"
        ],
        "Create Light/Dark Mode with Context API and Hooks": [
          "Introduction to Theming with CSS",
          "Create CSS Variables for Theming",
          "Use the Styled Components Theme Provider",
          "Create useTheme Hook",
          "Persist Theme Choice in Local Storage"
        ],
        "Final Touches": [
          "Styling and Clean Up",
          "Final Deploy Configurations in Netlify"
        ]
      },
      "requirements": [
        "basic JavaScript and React experience"
      ],
      "description": "In this course, you will build a secure and production-ready full-stack typing application from start to finish. Along the way, you will learn core concepts of developing modern web applications like React, authentication/ authorization, Serverless Functions, and continuous integration. By the end of this course, you will have the knowledge you need to build amazing applications to share with the world!",
      "target_audience": [
        "Beginner JavaScript developers",
        "Web Developers who are interested in broadening their knowledge on the web"
      ]
    },
    {
      "title": "Get Started with Python and Django Fundamentals",
      "url": "https://www.udemy.com/course/python-programming-fundamentals-towards-django-development/",
      "bio": "Learn Python with the Django Web Framework",
      "objectives": [
        "Be able to create and start a new Django Project",
        "Be able to implement Python code comments",
        "Be able to create Python variables and apply them within a Django project",
        "Know the common Python and Django model data types and how to build a Django data model",
        "Be able to create and manipulate a Python list data structure",
        "Know the underpinning skills working with a Django QuerySets to return data from a database table",
        "Know how to create a Python loop and use it with a Django QuerySet to output data",
        "Know how to create if conditional statements to make decisions in an application",
        "Be able to use conditional statements in conjunction with a Django form and view",
        "Know how to create and use functions"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Code Repository"
        ],
        "Quick-Start Windows 10/11 Installation & Setup Guide": [
          "Installing Python 3.9.5",
          "Installation and User Guide for Visual Studio Code",
          "Creating Virtual Environments",
          "Test Your Knowledge"
        ],
        "Quick-Start MacOS Installation & Setup Guide": [
          "Installing Python 3.9.5",
          "Installation and User Guide for Visual Studio Code",
          "Creating Virtual Environments",
          "Test Your Knowledge"
        ],
        "Build our first Django Project": [
          "Preparing a new Virtual Environment",
          "Introducing the Python Package Index",
          "Installing the Django Framework",
          "Creating a new Django project",
          "Creating a new Django application",
          "Registering a new Django application",
          "Starting the Django Development Server",
          "Understanding the Django Request-Response Cycle",
          "Creating a unique URL pattern",
          "Writing our first Django view",
          "Creating a new HTML template",
          "Relating an HTML template to a view",
          "Installing a Django application from a requirements.txt file",
          "Test Your Knowledge"
        ],
        "Code Comments": [
          "How to write a code comment",
          "When to use code comments",
          "Code comment tips",
          "Introducing PEP8",
          "PEP8 Python comment compliance",
          "Introducing the Docstring comment",
          "Activating the Django admin documentation generator"
        ],
        "Variables": [
          "Understanding Python Variable",
          "Creating a Variable and assigning values",
          "Understanding Variable naming conventions",
          "Outputting a Variable value to a Django template",
          "Python build-In functions",
          "Using the Print() built-in function as a Django diagnostic tool"
        ],
        "Data Types": [
          "Understanding data types",
          "Defining the Specific Data Type",
          "Introducing Django model data types",
          "Creating a new Django model",
          "Updating changes to the database schema",
          "Creating a new Django admin user",
          "Registering a new Django model to the admin site",
          "Adding data to a model within the Django admin site"
        ],
        "Python Lists": [
          "Introducing the list data structure",
          "Ordering the elements of a list",
          "Understanding and working with the list index",
          "Adding elements to a list",
          "Remove elements from a list",
          "Working with nested lists",
          "List slicing",
          "Understanding the Django QuerySet",
          "Returning all data from a database table",
          "QuerySet Slicing"
        ],
        "For Loops": [
          "Introducing For Loops",
          "Looping through a Django queryset",
          "Outputting the Django QuerySet to a Template"
        ],
        "If Conditional Statements": [
          "Introducing Conditional Statements",
          "Introducing the if conditional statement",
          "Logical conditions",
          "Else condition",
          "Using elif",
          "Combining conditions",
          "Nested If statement",
          "Building a Django form from a model",
          "Render a Django Form on a Template",
          "Saving to a database from a Django form",
          "Displaying different messages for admin users"
        ]
      },
      "requirements": [
        "No programming experience required"
      ],
      "description": "We believe that with only a small subset of Python knowledge you can start to develop web applications using the Django Framework. Many new developers starting to explore the Django Framework will typically not have any Python experience, this course aims to help you understand the basic Python knowledge needed to start developing Django applications. Even if you simply wanted to learn more about Python, applying Python in a web context using the Django Framework can be a fun way of learning Python.\n\n\nThis course is primarily designed for anyone who would like to get started using the Django Framework to develop applications but does not have prior Python programming knowledge. In this course, you will learn the basics of the Python programming language and apply this new knowledge in the context of the Django Framework. By the end of this course, you will be familiar with the underpinning knowledge and skills needed to further your understanding of Python or the Django Framework. This course is designed for beginners of both Python and the Django Framework, no prior knowledge is needed.\n\n\nI hope you enjoy the course and fulfil your learning objective. Don’t forget to visit us on our YouTube Channel, Very Academy, where you can further interact with the community and explore other free supplementary content.\n\n\nTrademark Usages and Fees Disclosures:\nUsage of Django Logo: The Django logo used in this product is for identification purposes only, to signify that the content or service is Django-related. It does not imply that this product is officially endorsed by the Django Software Foundation (DSF) or the Django Core team as representatives of the Django project.\nFees Disclosure: We would like to clarify that 100% of the fees will be retained by the author to support the ongoing development and maintenance of this product. Currently, 0% of the fees, if applicable, will be contributed back to the DSF as a donation to further support the Django community.\nNote: The Django name and logo are registered trademarks of the Django Software Foundation, and their usage is subject to the Django Trademark License Agreement.\nUsage of Python Logo: The Python logo used in this product is for identification purposes only, to signify that the content or service is Python-related. It does not imply that this product is officially endorsed by the Python Software Foundation (\"PSF\").",
      "target_audience": [
        "Beginners to Python and/or the Django Framework",
        "Beginners to Python who are looking to quickly learn the underpinning knowledge to develop a Django projects"
      ]
    },
    {
      "title": "IBM Masterclass- Bluemix, Watson, Cloudant and more",
      "url": "https://www.udemy.com/course/ibm-masterclass-bluemix-watson-cloudant-and-more/",
      "bio": "A complete guide to IBM Cloud Services",
      "objectives": [
        "On completion of this course you would be able to develop and deploy your applications over IBM Cloud- Bluemix.",
        "Having command over all the options, services and tools available.",
        "You could develop Mobile, Web, IoT, AI, and other applications.",
        "Learn to create an Object Storage, Watson ChatBOT, DevOps Toolchain.",
        "1) Analytics Engine 2) Apache Spark 3) Container Registry 4) DB2 NoSQL Database 5) Dynamic Dashboard",
        "6) Push Notification- Web and Mobile 7) IoT Starter 8) Nodejs Cloudant DB Web Starter 9) Python Flask 10) Ruby Sinatra",
        "11) DevOps Toolchain 12) Streaming Analysis, and much more!"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Getting started with IBM Bluemix",
          "IBM Cloud",
          "Intro to IBM Bluemix- PaaS"
        ],
        "Understanding BLUEMIX Category- Infrastructure": [
          "Compute",
          "Storage, Containers",
          "Network, Security"
        ],
        "Understanding BLUEMIX Category- PLATFORM": [
          "Mobile",
          "DevOps",
          "Watson Services",
          "IoT (Internet of Things)",
          "Functions (FaaS)",
          "Blockchain",
          "Cloud Foundry Apps"
        ],
        "Deploying a Website/Webapp on Bluemix": [
          "Webapp toolchain with DevOps"
        ],
        "DevOps": [
          "Continuous Delivery"
        ],
        "Creating a Object Storage": [
          "Create a Bucket for data storage on IBM Cloud"
        ],
        "Containers": [
          "Container Registry"
        ],
        "Boilerplates": [
          "IoT Starter",
          "Ruby Sinatra",
          "Python Flask",
          "Node.js Cloudant Database"
        ],
        "Data & Analytics": [
          "Analytics Engine",
          "Apache Spark",
          "Dynamic Dashboard",
          "DB2 SQL Database",
          "Streaming Analysis"
        ],
        "Introduction to IBM Watson": [
          "IBM Watson Services",
          "IBM Watson- Promo"
        ]
      },
      "requirements": [
        "No prerequisites at all. You just need a little experience of doing GOOGLE search only ! But if u are aware of some cloud based or web development tools and technologies, it is helpful."
      ],
      "description": "There are various cloud computing platforms out there in the digital space, where you can build almost anything that comes to your mind. You just need to visualize and build a proper roadmap. In other words, this is the job of a Cloud Solution Architect, who can help you curate a full strategy of your cloud adoption. If you are running a website or a mobile application that lacks certain capabilities, you can leverage the power of cloud computing platforms to add more features by integrating a wide range of tools and services provided on the cloud computing platforms. Cloud computing is a binding force of all domains present in the Information Technology sector. So it doesn't really matter, what is your prime domain- be it web development, database administrator, mobile app development, devops engineer, software developer or anything else. You would soon be working on any of the cloud computing platform, if you are still not there.\nSo, once you have realized the importance of cloud computing platforms in the life of an IT professional, the next thing that may come to your mind is- which cloud computing platform to learn? But there is no obvious answer to it. There are lots of Cloud computing platforms with wide range of tools and services, that are mostly identical just with the difference of name and pricing. But there are also many cloud services that can either make or break your project. AWS (Amazon Web Services) is most popular cloud computing platform, and IBM Bluemix is not among top three in terms of popularity. But when it comes to Cognitive computing and Machine Learning, IBM Watson is unmatchable. You can build some cognitive applications with AWS Lex and AWS Polly, but when you dive deeper, soon you could realize, that there are something that can be done in better way with IBM Watson.\nIBM Cloudant is one more such example. It is a NoSQL Database as a service that is available on IBM Bluemix, but nowhere else. It can do powerful Geo-search queries, and complex operations. You can't say that IBM Bluemix is better than other platforms like AWS. Because there are lot of things that you can easily do on AWS that are still not available on IBM Bluemix. But it completely depends on your selections of cloud services.\nIn this course you will be learning most of the cloud services available on IBM Cloud, right from the start. So, if you are just a beginner, don't worry, you will be learning right from the fundamentals. But gradually we will dive deeper into services like IBM Watson and IBM Cloudant with detailed learning. You will be learning a lot of these services with Hands-on practical exercises.",
      "target_audience": [
        "Anyone who just wants to learn and test IBM Cloud Platform or any developer willing to develop his/her application over IBM Cloud- Bluemix."
      ]
    },
    {
      "title": "Complete Guide to Front-End Dev-HTML, CSS & JavaScript(2024)",
      "url": "https://www.udemy.com/course/frontend-web-development-for-everyone/",
      "bio": "A detailed step by step web development practical guide designed to help beginners become professional developers.",
      "objectives": [
        "HTML from Scratch",
        "CSS from Scratch",
        "How to create HTML Web Page Layouts",
        "Building Websites from Scratch"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "How to create a project in VS Code",
          "html file structure (Writing our first code)"
        ],
        "Dive into HTML": [
          "HTML Tags",
          "HTML Attributes",
          "HTML Elements",
          "HTML Formatting",
          "HTML Heading Tags",
          "HTML Paragraphs",
          "HTML Phrase tags",
          "HTML Image Tags",
          "HTML div tags"
        ],
        "Introduction to CSS": [
          "Introduction to CSS",
          "CSS structure and syntax",
          "Styling different sections",
          "Body Styling",
          "Different Styling for different sections",
          "CSS Box Model",
          "CSS Border, Padding and Margin",
          "CSS fonts, text-decoration and Transform, word and letter Spacing",
          "CSS lesson 9",
          "CSS blocks",
          "CSS sidebar and main Content",
          "Form styling",
          "Section outro"
        ],
        "JavaScript section": [
          "Introduction to JavaScript",
          "JavaScript Variables",
          "Working with Console",
          "Intro to JavaScript Basic Data Types",
          "String Concatenation and String literals",
          "String Methods",
          "Accepting user input in JavaScript",
          "Type conversion",
          "Operators",
          "Working with Numbers"
        ],
        "Building a Students Dashboard using HTML, CSS and JavaScript": [
          "Project Setup and Introduction.",
          "Body and header Styling",
          "setting up material icons",
          "working with material icons",
          "Styling Navigation Menu",
          "Working with Dashboard cards",
          "Styling Dashboard Cards",
          "Introduction to Charts",
          "Bar Chart Data Visualization",
          "Mixed charts implementation.",
          "Making the dashboard responsive to different screens",
          "Polishing our dashboard"
        ]
      },
      "requirements": [
        "No Programming skills needed",
        "Anyone can learn it from scratch"
      ],
      "description": "In this course, students will learn, HTML & CSS\nThe HyperText Markup Language or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets and scripting languages such as JavaScript.\nCascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.\nCourse Highlights\nLearn the ABCs of HTML and CSS, the building blocks of web development.\nMaster the art of creating beautiful and responsive web pages.\nGet hands-on with practical exercises and real-world projects.\nDive into the fundamental concepts that underpin modern web development.\nWhether you dream of becoming a web developer, starting a blog, or showcasing your portfolio, this course will set you on the right path.\nWhat's Inside?\nStep-by-step tutorials with clear explanations.\nEngaging exercises to solidify your knowledge.\nTips and tricks from experienced web developers.\nOngoing support from our dedicated community.\nNo prior coding experience required! This course is designed for complete beginners, making it easy and enjoyable to learn at your own pace.\nEnroll now and embark on a transformative journey into the world of web development. Don't miss this chance to unlock your creative potential and build the websites of your dreams!",
      "target_audience": [
        "Beginners in Web Development"
      ]
    },
    {
      "title": "QuickStart! - phpMyAdmin",
      "url": "https://www.udemy.com/course/quickstart-phpmyadmin-vtc/",
      "bio": "Quickly and Easily Installing and Administrating phpMyAdmin",
      "objectives": [
        "Administrate mySQL databases using phpMyAdmin"
      ],
      "course_content": {
        "Overview": [
          "Course Introduction"
        ],
        "Basics": [
          "phpMyAdmin Explained",
          "Demos"
        ],
        "Installation": [
          "Tech Specs",
          "Local Installation pt. 1",
          "Local Installation pt. 2",
          "Local Installation pt. 3",
          "Remote Installation pt. 1",
          "Remote Installation pt. 2",
          "Remote Installation pt. 3"
        ],
        "Fundamentals": [
          "Elements in phpMyAdmin pt. 1",
          "Elements in phpMyAdmin pt. 2",
          "Elements in phpMyAdmin pt. 3"
        ],
        "Update": [
          "Updating phpMyAdmin",
          "Adding a Password to MySQL"
        ],
        "Create a Database": [
          "Databases Explained",
          "Database Creation"
        ],
        "Open a Database": [
          "Finding and Opening a Database"
        ],
        "Create a Table": [
          "Table Elements",
          "Table Creation pt. 1",
          "Table Creation pt. 2",
          "Add / Delete / Change Columns"
        ],
        "Data": [
          "Insert Data pt. 1",
          "Insert Data pt. 2",
          "Remote Date Insert",
          "Import Data pt. 1",
          "Import Data pt. 2"
        ],
        "Browse": [
          "Browse Data pt. 1",
          "Browse Data pt. 2"
        ]
      },
      "requirements": [
        "Access to phpMyAdmin and mySQL recommended, but not required."
      ],
      "description": "phpMyAdmin is an open source program that provides an interface to work with mySQL databases. With phpMyAdmin you can create and edit databases and the tables or information within those databases. You can define relationships, import data into your database, search and sort data and even export data into a variety of formats. This introductory course to phpMyadmin will help you learn how to easily install the software you need to work with with this open source tool. You will set up your own databases, create tables and insert data all with the phpMyAdmin program. This title is a self-paced software training course delivered via pre-recorded video. We do not provide additional information outside of the posted content.",
      "target_audience": [
        "New and experienced database administrators designers"
      ]
    },
    {
      "title": "XML Schema (XSD) Crash Course for Beginners",
      "url": "https://www.udemy.com/course/xml-schema-xsd-crash-course-for-beginners/",
      "bio": "Quickly Learn basics of XML Schema & start writing the web applications which use XML aggressively",
      "objectives": [
        "Get a strong hold on XML Schema",
        "Use XML properly in JavaScript & other programming & script languages",
        "Build XML based documents"
      ],
      "course_content": {
        "Introduction & Overview": [
          "Introduction & Overview",
          "What is XML & XML Schema",
          "Declaration & Syntax",
          "Defining Elements & Attributes",
          "Simple Type & Complex Type Elements",
          "Defining Cardinality",
          "Elements Restrictions, Compositors & Global Types"
        ]
      },
      "requirements": [
        "Desire to Learn XML Technology",
        "Basics of Internet"
      ],
      "description": "This course is for anyone who is interested in quickly learning XML Schema & it's power to utilize it in Web Development. Currently no web site or Web Service exist which do not offer support to XML. This course will give you the strong basic understanding of XML Schema using practical implementation on screen & help you implement it in your web development projects.\nI designed this course for anyone including non-technical person. So if you are not a developer and still interested in learning about the XML & see how it works then this course is for you.\nHere we will start from zero & go to higher level very quickly. You don't need multiple hours long course to learn XML Schema. This course will make you strong enough for the interviews, your college of office projects, your freelancing projects to build basic & complex Web Services as well as applications.",
      "target_audience": [
        "Anyone interested in building their career in Web Development",
        "Anyone interested in learning web development",
        "Anyone interested in learning XML & XML Schema",
        "Anyone going to attend an Interview for a Web Developer & want to revise their basics"
      ]
    },
    {
      "title": "JavaScript from Beginner to Advanced",
      "url": "https://www.udemy.com/course/javascript-from-beginner-to-advanced/",
      "bio": "Learn JavaScript, one of the most important languages in Web Development, through examples",
      "objectives": [
        "Write functional JavaScript Programs",
        "Understand how to read and write JavaScript",
        "Understand how JavaScript Works"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Intro to JavaScript",
          "Setting up Sublime Text for JavaScript",
          "Comments",
          "Setting up Better Autocompletion"
        ],
        "Basics": [
          "Variables",
          "Data Types",
          "Type Conversion",
          "Operations and Assignments Part 1",
          "Operations and Assignments Part 2",
          "Scope"
        ],
        "Conditions": [
          "If, Else, Else If Part 1",
          "If, Else, Else If Part 2",
          "Switch Cases",
          "Nested Conditions Part 1",
          "Nested Conditions Part 2"
        ],
        "Loops": [
          "While and Do While Loops",
          "For Loops",
          "Infinite Loops, Break and Continue",
          "Nested For Loops"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "Array Functions",
          "Sorting Arrays",
          "Multidimensional Arrays"
        ],
        "Strings": [
          "Basic Strings and Character Escapes",
          "Strings as Objects",
          "Accessing Characters in a String",
          "Manipulating Strings"
        ],
        "Objects": [
          "Introduction to Objects",
          "Object Properties",
          "Object Prototypes Part 1",
          "Object Prototypes Part 2",
          "The For-In Loop"
        ],
        "Functions": [
          "Defining Functions",
          "Parameters of a Function",
          "Invoking Functions",
          "Recursive Functions",
          "Anonymous Functions"
        ],
        "Numbers and Math": [
          "Numbers in JavaScript",
          "Number Methods",
          "The Math Object and its Methods"
        ],
        "Working with Dates": [
          "Introduction to Dates",
          "Formats of Dates",
          "Methods and Functionality of Dates"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "An eager mind"
      ],
      "description": "If you are looking for a JavaScript course in order to advance your skills, then look no further. You are going to love this course!\nDo not get discouraged if you have no previous knowledge or experience with programming in JavaScript. This course starts off with the mere basics in the beginning. Even if you do have some previous knowledge, there is always room for improvement. Each section of the course is related to the previous one in terms of utilizing what was already learned. All the covered subjects come with loads of examples to aid students in the process of learning and improving their skills. This course should be considered useful and interesting for both beginners and advanced students alike. The explanations are completely straightforward and simple, making the topic easy to understand and even easier to pick up on. Plenty of examples are provided for the periodic testing of knowledge and making sure that you completely understand and know how to use what you have already learned.\nFurthermore, what is also a great advantage to this course is that you get to view all the questions that other students such as yourself have already had and their respective answers/solutions. You also have the liberty of posting your own questions and inquiries and having them answered by our very own IT professionals. You get paid expert JavaScript technical support in this course here to answer every single question you ask!\nIf you have any suggestions on topics that have not been covered, you can send them via private message. All your suggestions are going to be taken into consideration. I will do my best to cover them as soon as possible.\nI thank you for taking the time to read through this description and hope that you decide to continue learning with me!",
      "target_audience": [
        "This course is meant for those who wish to learn programming in JavaScript",
        "Beginner Programmers",
        "Intermediate Programmers"
      ]
    },
    {
      "title": "Ultimate guide to Social Media Web development integration",
      "url": "https://www.udemy.com/course/ultimate-guide-to-social-media-web-development-integration/",
      "bio": "Add social sharing and social follow to your web content. Web Development Social Sharing Coding HTML JavaScript",
      "objectives": [
        "add social sharing to web content",
        "integrate social icons",
        "add social following",
        "add meta data for social networks",
        "share dynamic content to social networks",
        "grow your social influcence"
      ],
      "course_content": {
        "Course Introduction to Social Sharing": [
          "Course Intro Social Sharing",
          "How to use this course",
          "Web Developer Resources and Source Files"
        ],
        "Using Social Sharing within web content": [
          "Game share your results on Facebook and Twitter",
          "Share Game stats",
          "Game and Social Sharing Code Review and explaination",
          "Code Source for GAME and Sharing"
        ],
        "Social Connections for website": [
          "Social Meta Data Twitter Cards",
          "Social Sharing for Web developers",
          "Social Meta Data Facebook Open Graph",
          "Typical Social Network metadata setup",
          "Social Tools Toolbar Add This",
          "Social Linking to social sites",
          "Adding Styling and HTML social buttons"
        ],
        "Twitter Social Connections for website": [
          "Social Button Twitter",
          "Twitter Social Buttons explained",
          "Social Buttons Twitter",
          "Twitter Widget Follow"
        ],
        "Facebook Social Connections for website": [
          "Facebook Follow Button",
          "Facebook Like and Share buttons",
          "Social Buttons - Facebook",
          "Facebook Sharing options"
        ],
        "Other Social Connections for website": [
          "GooglePlus Follow button",
          "GooglePlus Sharing",
          "Social Buttons - Google Plus",
          "Linkedin Sharing Codes",
          "Pinterest Follow Share",
          "Reddit Share button",
          "Social Buttons - Others"
        ],
        "Custom Share Buttons with JavaScript": [
          "JavaScript Meta Tag Information",
          "JavaScript Dynamic content Share Button code",
          "JavaScript Dynamic Content to social networks",
          "JavaScript Social Sharing Button Tutorial",
          "Social Share URLs List",
          "Using Facebook Dialog to post content",
          "Facebook Dialog Code"
        ]
      },
      "requirements": [
        "basic understanding of JavaScript",
        "HTML"
      ],
      "description": "Learn how to add social sharing and social follow buttons to your web pages. Social networking integration on your website can increase your web visitors and help your grow you social communities. Sharing of content should be easy for web visitors, encourage connecting with you on your social channels. Grow your engagement, expand your community and be more successful online.\nWe walk your through from scratch how to add social sharing and what options you have for adding social to your website.\nCoding is in JavaScript using Open graph metadata to dynamically update button info. We also show you how to share dynamically changing data on Twitter and Facebook.\nReal world example of a quiz and sharing the results of the quiz.\nWe show you how to share connect to\nTwitter\nFacebook\nGoogle Plus\nLinkedin\nPinterest\nReddit\nand more\nEverything you need to learn about SOCIAL SHARING within web applications is provided within this course.\nno wasted time watching someone type\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resoruces to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions",
      "target_audience": [
        "web developers",
        "web designers",
        "web masters",
        "web project managers",
        "user experience and user integration specialists",
        "social media marketers",
        "social media developers"
      ]
    },
    {
      "title": "Learn how to use chrome developer tools",
      "url": "https://www.udemy.com/course/learn-how-to-use-chrome-developer-tools/",
      "bio": "Practical Hands-On Guide to Using the Chrome Developer Tools",
      "objectives": [
        "Access the chrome devtools",
        "Use the Element Panel",
        "Manipulate DOM elements on the fly",
        "Use the Sources Panel",
        "Setup Persistence",
        "Debug Javascript code",
        "Setup basic debugging workflow",
        "Explore HTTP request headers",
        "Check resource load times",
        "Simulate mobile devices"
      ],
      "course_content": {
        "Introduction and Environment Setup": [
          "Introduction",
          "What is chrome developer tools",
          "Setting your environnment",
          "What is Atom",
          "Atom Pre-Installation Requirement",
          "Git Installation",
          "Installing Atom",
          "Atom live-server",
          "What is the DOM",
          "How to access chrome devtools",
          "Resource Files"
        ],
        "Using DevTools Panesl": [
          "Introduction to chrome devtools groups",
          "Exploring more devtools options",
          "Simulating Mobile Devices",
          "Working with Element Panel",
          "Setting up Persistence",
          "How to edit and examine the BOX-Model",
          "Using the Console",
          "Using and exploring the Network Panel",
          "Exploring other devtools panels"
        ],
        "How to debug Javascript code inside DevTools": [
          "Introduction",
          "Step 1 Reproducing theBug",
          "Step 2 Pausing the code with a breakpoint",
          "Step 3 Stepping through the code",
          "Step 4 Setting up another breakpoint",
          "Step 5: Checking variable values",
          "Step 6 Applying the Fix to the code base",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "Basic understanding of CSS",
        "Basic understanding of JavaScript"
      ],
      "description": "The Chrome Developer Tools (DevTools for short), are a set of web authoring and debugging tools built into Google Chrome. The DevTools provide web developers deep access into the internals of the browser and their web application.\nYou can  Use the DevTools to efficiently track down layout issues, set JavaScript breakpoints, and get insights for code optimization. Every web developer should learn how to use the chrome developer tools to help troubleshoot web app issues and  improve the performance of their web apps.\n\nAll major browsers include developer tools, which enable developers to examine the code of a webpage or app, as well as run tests and evaluate metrics related to that code. Chrome Developer Tools (DevTools for short) is the industry standard.\nThis course will show you how to explore  the various  tools within the chrome developer tools and equip you with an  expanded toolbox for your day-to-day work. We will explore the most commonly used panels within the chrome devtools , including the Console, Elements panel, and Network panel. You learn the basic workflow to fix JavaScript related bugs.\nTopics include:\nSetting up your testing and debugging environment\nHow to access the chrome devtools\nInstalling Live local server\nDebugging JavaScript code\nWorking with the Elements Panel\nWorking with the Console\nUsing and exploring the Network Panel\nEmulating mobile devices\nLive editing of the DOM elements\nSetting up Persistence Workspace\nOpening source files in the Sources panel\nEditing the BOX-Model\nAfter completing this course you will have the basic skills to explore and use the chrome devtools.",
      "target_audience": [
        "Beginner Web Developers",
        "Beginner Programmers"
      ]
    },
    {
      "title": "Fast ASP .Net Web Form for beginners Html, CSS, SQL ADO. Net",
      "url": "https://www.udemy.com/course/fast-asp-net-web-form-for-beginners-html-css-sql-ado-net/",
      "bio": "Easily learn ASP .Net Web Form from scratch for beginners Html, CSS, SQL ADO. Net",
      "objectives": [
        "3 course + 30 hours - ASP .Net web forms, Html, css , SQL in asp .net , ADO .Net",
        "Multiple real world projects to learn web design",
        "Learn both Html & ASP. Net Web form",
        "Design main menu, header & footer",
        "Responsive web page with flex",
        "Using SQL in ASP. net website",
        "Searching SQL data in website",
        "Amazing CardView staff list website",
        "Using Cookie, Session & Query String",
        "Basics of Ajax in ASP .Net"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download project files of this course"
        ],
        "Installing Visual Studio 2022": [
          "Visual Studio 2022 requirements",
          "Download Visual Studio 2022 for Windows 10",
          "Install Visual Studio 2022 and Asp. Net on Windows 10"
        ],
        "Basics: First web site": [
          "Create new Asp.Net project with .NetFramework",
          "Customizing the Visual studio environment",
          "Structure of Asp.Net website and files inside it",
          "Adding new web page and running it for the first time",
          "Customize the design view of website"
        ],
        "Basics: Start Html": [
          "What is the 2nd website?",
          "Create the Asp.Net project for second website",
          "Structure of Asp.Net and html websites",
          "Using html inspector in browser"
        ],
        "Basics: Html table Element": [
          "Structure of table element in html",
          "Using the table, tr,td in asp.net and html website",
          "Adding table as the layout of web page"
        ],
        "Basics: CSS Styles & Html Elements": [
          "What is style and css?",
          "Inline style to change background color",
          "Adding text and using font style in css",
          "Image in html and set width and height style",
          "Text alignment, indent, line-height, letter spacing in CSS",
          "Image with round corner in page",
          "Padding and margin in html css",
          "Headings in html: H1, H2 … H6",
          "Adding link to image or text using anchor tag or ‘a’ in html",
          "Adding hyperlink to image and text with Visual studio tools",
          "Hyperlink styles in html",
          "Adding the border to html elements",
          "Border spacing and collapse in htmlv",
          "Removing the unused space in the webpage"
        ],
        "Basics: Master Page in Asp.Net": [
          "Create the Asp.Net project for 3rd website",
          "What is master page?",
          "Adding the master page and children pages",
          "Using content placeholder",
          "Adding table to master page as the site layout",
          "Show children pages in master page & using div html tag",
          "Navigate between pages by buttons in master page",
          "Page title and how to add it"
        ],
        "Basics: Design Website Header": [
          "Design header layout by html table",
          "Adding logo inside the header",
          "Adding vertical bar in the header",
          "Using html span to add linked-text to header",
          "Using Asp.net label control"
        ],
        "Basics: Main Menu & Sitemap Path": [
          "Adding main menu to header",
          "Adding items to menu",
          "Group of styles in menu",
          "Customize menu & static menu style",
          "Static menu items style",
          "Dynamic menu style",
          "Dynamic menu item style",
          "Hover style of menu items",
          "Change Pop out image for menu items",
          "Finalize header and menu",
          "What is the sitemap path control in Asp. Net?",
          "Add sitemap path and using it by Asp.net sitemap",
          "Common properties of sitemap path control",
          "Styles of sitemap path in ASP.Net"
        ],
        "Basics: Adding Footer for Website": [
          "Start designing the footer in website",
          "Add the social networks icons to footer"
        ]
      },
      "requirements": [
        "A Pc with Windows OS",
        "General knowledge of C# about the basics"
      ],
      "description": "Hi There!\nWith my 23 years programming skills I’m with you to share my knowledge with you.\nSo\nIf you try you will be a Pro website designer!\nIf you are beginners or student looking for a tutorial that teach web design with real project in simplest way!\nIf you want really to be a programmer so it’s best place that you can start to learn Asp. net.\nThis course includes :\nStart using C# and ASP. Net web forms with Visual Studio 2019 | 2022 From Scratch\nMultiple real world projects to learn web design\nLearn both Html & ASP. Net Web form\nHtml inspector to learn design of websites\nCSS styles : inline, internal & stylesheet\nMasterPage to design pro websites\nDesign main menu, header & footer\nResponsive web page with flex\nUsing SQL in ASP. net website\nSearching SQL data in website\nUsing Cookie, Session & Query String\nAmazing CardView staff list website\nDebugging and PostBack\nAjax in ASP .Net\nASP controls: GridView, Label, Textbox\nHtml tags like: table, p, span, headings,…\nUsing image in html\nPadding and margin in html css\nUsing the headings in html: H1, H2 & H6\nand ...\nDon’t hesitate to start learning Web design by C#, Asp. net, Html, CSS, Flex and SQL!",
      "target_audience": [
        "Anyone who wants to design pro websites with ASP .Net web forms technology"
      ]
    },
    {
      "title": "Prepare for Angular certification exams",
      "url": "https://www.udemy.com/course/prepare-for-angular-certification-exams/",
      "bio": "Advanced level",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the tutorial : Prepare for Angular certification exams\nIn this tutorial, we will address many questions that have been asked of me during job interviews for Angular developer positions, and we will prepare for Angular certification exams.\nAngular is an incredible application design framework and development platform that allows you to create highly reactive and responsive single-page applications.\nThroughout this course, you will learn everything you need to prepare for your next job interview or Angular certification exams. We will cover both the basics and advanced features that Angular offers, ensuring that by the end of this course, you will be well-equipped to answer the most common questions about Angular.\nWe won't just focus on the basics; we will also explore advanced features.\nI've shared all my knowledge and experience as a developer who has worked extensively with Angular into this course to provide you with the best possible learning experience.\nBy the end of the course, you'll have a solid foundation and more, making you ready to delve deeper into Angular. If your goal is to apply for Angular developer jobs, you'll be well-prepared.\nI'm excited to welcome you to this course and can't wait to get started together with you.",
      "target_audience": [
        "FrontEnd developer",
        "FullStack developer",
        "Web developer",
        "Angular developer",
        "Developer",
        "Programmer",
        "Software engineer"
      ]
    },
    {
      "title": "E-Commerce in Codeigniter step by step guide from scratch",
      "url": "https://www.udemy.com/course/e-commerce-in-codeigniter-step-by-step-guide-from-scratch/",
      "bio": "Learn E-Commerce in CodeIgniter step by step from scratch compatible with Codeigniter 3.X and above",
      "objectives": [
        "Build E-Commerce system in Codeigniter",
        "Build a Website/Web Application",
        "Admin panel who manage the entire website/Web Application",
        "Admin Dashboard",
        "User Dashboard",
        "Login System",
        "Signup System",
        "Cart System",
        "CheckOut System",
        "Product System",
        "Delete and Update content without page refresh using JSON,jQuery",
        "Validation Forms,User,Session and much more",
        "Tips and tricks",
        "Usage of custom helpers in codeigniter",
        "Complete E-Commerce Project step by step from scratch",
        "How to embed third party template inside your project"
      ],
      "course_content": {
        "Course introduction and Requirements": [
          "Course Requirement and Introduction"
        ],
        "Admin Panel": [
          "Downloading dashboard template for admin panel",
          "Breaking html content into multiple parts",
          "Problem when you add extra css and js files on a spesific page",
          "Adding css and js files with bootstrap"
        ],
        "Embedding admin panel": [
          "Adding admin template for admin panel",
          "Creating database and admin table",
          "Creating Admin panel for Admin",
          "Checking credentials for admin"
        ],
        "Some Trips and Tricks for project": [
          "Auto complete code for phpStorm",
          "Creating custom helper to reduce the code"
        ],
        "Designing the database": [
          "Creating the database for site",
          "Creating the relations using dataDrid"
        ],
        "Creating Categories for shop": [
          "Creating Categories",
          "Showing all Categories with pagination",
          "Edit system for Category",
          "Problem with old images",
          "Deleting Category using AJAX",
          "Some tips about Ajax and old images."
        ],
        "Creating Products for shop": [
          "Working on products",
          "Adding the products",
          "Showing all the products",
          "Deleting the product",
          "Updating the products"
        ],
        "Creating Model for shop": [
          "Working on model and adding the model",
          "Deleting model and updating models for shop in codeigniter"
        ],
        "Specs for Ecommerce": [
          "Creating the specs",
          "Adding the spec values",
          "Update and delete specs for Ecommerce"
        ],
        "Adding Third party E-commerce template": [
          "Adding third party template",
          "Signup form",
          "Sending the email address to our user and activating the account",
          "Login system in E-commerce",
          "Checking the flashdata from every view",
          "Setting after login the user"
        ]
      },
      "requirements": [
        "CodeIgniter 3.X",
        "Basic knowledge of jQuery and javascript",
        "Bootstrap 3 and above",
        "HTML, CSS, JSON",
        "PHP5 and Core php (PHP4)",
        "Relational Database",
        "SQL"
      ],
      "description": "If you think about eCommerce sites, including PrestaShop, open cart, and Magento are usually synonymous with CMS, you don't have to launch a new e-commerce project from scratch because they already have their respective themes. The last thing you have to do is build an account and put your order. Developing the online e-commerce framework using Codeigniter is straightforward. Yeah, it's a big task to develop an e-commerce infrastructure from scratch due to all the different things that need to be considered.\n\n\nYou've found the perfect place to learn about designing an e-commerce system; you'll walk through each stage, one project at a time, constructing it from the front-end user's perspective.\n\n\nInstead of studying HTML yourself, you'll get to build a website using an HTML framework, and easy would be simpler, so you'll be able to drag and drop new pages into your project easily.\n\n\nYou will be exposed to all facets of Bootstrap 3 and splitting the views down views into different parts. You can learn how to handle your merchandise and orders using an admin desk.\n\n\nThis series would focus on building a shopping cart from scratch, asynchronously, and placing an AJAX order. You can hear about a broad range of skills in this course, including securing and validating.",
      "target_audience": [
        "Anyone who want to learn E-commerce concepts",
        "Anyone who want to create/design functionality using CodeIgniter",
        "Anyone who wants to learn that how can build a project in CodeIgniter from scratch"
      ]
    },
    {
      "title": "React JS Responsive Single Page Company Portfolio Website",
      "url": "https://www.udemy.com/course/react-js-responsive-single-page-company-portfolio-website/",
      "bio": "Build a Responsive Single Page React JS App. Learn React Pagination, React Video Player, React Slider, Github, Bootstrap",
      "objectives": [
        "You will build a complete responsive react js project",
        "How to get API Data in react js",
        "React js pagination with API Data",
        "How to play video using React Video player",
        "Responsive design with bootstrap",
        "How to add slick slider in react js",
        "React js Load more pagination system",
        "How to pass data from one component to another component in react js",
        "How to deploy react js app to Netlify",
        "You will learn how to send email using sendgrid and nodemiler",
        "You will learn how to work with github",
        "Backend using node js for sending email",
        "How to test api end point in postmen",
        "React js animation"
      ],
      "course_content": {},
      "requirements": [
        "Students dont need to have any prior knowledge of react js for this course",
        "Vs code or any other IDE to write code"
      ],
      "description": "Welcome to this react js course. In this course, you will build a complete real-world responsive single-page web app using react js. You will also learn how to use node js and express js for sending an email using nodemailer and SendGrid. You will build a fully functional real-world responsive company profile website. This project has a lot of functionality and features. I tried to add different sorts of features of react js.\n\n\nHere are the lists that you are gonna learn from this  course:\nSingle-page app with smooth scrolling.\nReact HTTP Request for an API endpoint.\nHow to get API data and show it in the react app.\nContext API to add Dark and Light theme.\nBootstrap to make our website responsive for any device.\nTypewriting effect.\nHow to play video in react js app using react player.\nHow to add pagination with API data. You will build custom-designed pagination with API data.\nReact js loads more pagination features.\nHow to add image zoom-in effect in react js app.\nReact js slick slider. You will learn how to show a responsive slider.\nReact js post request to send email from contact form.\nReact js conditional rendering to generate different colors for different items.\nNode js and express js for sending emails from the backend.\nHow to test API endpoint in postman for sending an email.\nReact js animation for different items of our app while loading the first time and scrolling.\nHow to add back-to-top scroll features in react js front end app.\nTheme Features -  Dark theme and light theme for our react js app.\nHow to send email from react js using node js, express js, and send grid.\nHow to deploy react js app to Netlify.\n\n\nDark and Light theme Features: You will learn how to dynamically change react app theme color. We will use react Context API to build this theming system.\n\n\nReact Accordion Features: You will build react accordion system with API data. We will get our data from a public API endpoint and then will show it in accordion mode. You will also learn how to mark a single item if the accordion is open.\n\n\nReact Video Player: To play video in our react js app from URL.\n\n\nReact Hooks that you will use to build the complete react js app:\n\n\nuseState\nuseEffect\ncreateContext\n\n\nDifferent packages that you will use in this course:\n\n\nReact smooth scrolling - This package we will use to scroll from one section to another section when user clicks on the navbar.\nTypewriting effect - We will use this package to add different types of writing effects to our app. The different sentences will be added in this type of writing effect in the main home section.\nReact paginate - We will use this package to add pagination to our app. In the career section, we will show API data in our app and we will show pagination so that can slice our data and show it based on the pagination number instead of showing all the data from our API endpoint.\nReact slick slider -  We will use this package for our feedback section where we will show a list of feedback in the slider. We will also make sure that our slider is responsive to any device.\nReact toastify - To show toast messages to our users when they send emails from the contact form.\nBack-to-top scroll - This package will be used for scroll-to-top features. In a single-page web app, we have many sections on one page. Therefore when our user scrolls to the last section of the page the user again needs to scroll to reach the top section. To solve this problem we will use back-to-scroll features so that they can just click on the button and then it automatically goes to the top section.\nReact reveal - This package will help us to show animation for each item. You will learn how to add animation for any fields in your react js app.\nNode Mailer -   To send e-mail ail we will use nodemailer with node js, express js and sendgrid.\nReact Player -   We will use this package to play youtube videos or any other videos in our react js app. You will explore different kinds of functionalities for this react player and how to control it.\n\n\nGit and GitHub:\nYou will learn how to publish react js project to Github.\nHow to create a branch and push our code to GitHub.\nHow to do a git pull request.\nWork on different branches and merge them.\nHow to do git commit.",
      "target_audience": [
        "If you want to become a react js developer",
        "If you want to build your career as a frontend web developer",
        "You want to improve your react js skills",
        "You want to build a complete react js project"
      ]
    },
    {
      "title": "Practical React Bootcamp (Hooks, Router, Redux, & GraphQL)",
      "url": "https://www.udemy.com/course/complete-react-redux-and-graphql-bootcamp-with-real-projects/",
      "bio": "Learn How To Build Real World Applications Using React, Redux, GraphQL, Hooks, Router, HTML, CSS, SASS, and JavaScript",
      "objectives": [
        "Learn how Front End Apps work",
        "Learn how React implements Front End Apps",
        "Learn the proprietary method that I have developed for creating Front End App in a repeatable way",
        "Understand how to build production ready Web application using React, Redux, and GraphQL",
        "Learn how to analyse a customer’s problem and generate the software requirements for the project",
        "Learn how to structure a large-scale project",
        "Learn how to implement all the functionalities of a complete ecommerce React App which include: Product catalogue, Shopping Cart, Order and Checkout, Customer Management"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet connection",
        "Visual Studio Code Development Environment",
        "Visual Studio Development Environment",
        "NodeJS"
      ],
      "description": "This is a no holds barred, action packed course, titled Complete React, Redux and GraphQL BootCamp With Real Project, the course takes you through all you need to start building production ready web application using React, Redux, and GraphQL. To demonstrate My Confidence about This Course, I have created a CV that contains all the Concepts that I covered, and the Projects I have executed in this course. You can Take This Course and Start Looking for Job Immediately using the CV I have prepared.\nYour prospective employer wants you to come onboard and start building applications for them straight away. That is what I did in this course. To provide the knowledge that will allow you go straight into the industry and start working immediately. With over 160 Lectures, I did not leave any stone unturned!!\nBasically, the whole course can be grouped into Three Main Themes:\nUnderstanding Front End Applications\nWhere I showed how front end applications work, and you to implement front end apps in React.\nThe Crash Courses\nWhere I provided short but comprehensive mini-courses on HTML, CSS, SASS, and JavaScript\nThe Real World Projects\nWhere I built Two SOLID Real-World React and Redux Projects. The type of Projects that you will be working on when you get into the industry.",
      "target_audience": [
        "Beginners who do not have a prior experience with programming",
        "Intermediate and senior developers looking to start building front end application using React, Redux, and graphql",
        "Developers looking to gain more knowledge within React application development"
      ]
    },
    {
      "title": "Doctor Appointment Booking App with React ,Firebase , ANT D",
      "url": "https://www.udemy.com/course/doctor-appointment-booking-app-with-react-firebase-ant-d/",
      "bio": "Build Doctor Appointment Booking Application From Scratch using React , Firebase and ANTD",
      "objectives": [
        "React Firebase Integration , User Authentication with Fire store database",
        "Separate UI for normal users and admin, doctor",
        "Admin can access all the users and doctors, information.",
        "The doctor has to get the admin approval to get access by providing the required details",
        "A doctor can specify his work hours and fee in the application form",
        "Users can able to book doctor appointments based on availability.",
        "A doctor can able to see all the appointments booked for his profile.",
        "A user can also see his future appointments with the status.",
        "If the doctor rejects/cancels the appointment request the slot will be released."
      ],
      "course_content": {},
      "requirements": [
        "React",
        "Javascript"
      ],
      "description": "In this course, you will learn the following concepts.\n\n\nReact Firebase Integration\nUser Authentication with Fire store database\nSeparate UI for normal users and admin, doctor\nAdmin can access all the users and doctors, information.\nThe doctor has to get the admin approval to get access by providing the required details\nA doctor can specify his work hours and fee in the application form\nUsers can able to book doctor appointments based on availability.\nA doctor can able to see all the appointments booked for his profile.\nA user can also see his future appointments with the status.\nIf the doctor rejects/cancels the appointment request the slot will be released.\nAdmin will also be having the access to all the doctor's appointments.\nIf any suspicious activity happens, the admin can block both user and doctor accounts.\n\n\nReact is a JavaScript library for building user interfaces.\nDeclarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\nComponent-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.\nLearn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using.\nFirebase is an app development platform that helps you build and grow apps and games users love. Backed by Google and trusted by millions of businesses around the world.",
      "target_audience": [
        "Front End Developers",
        "Full Stack Developers"
      ]
    },
    {
      "title": "Become a Javascript Engineer",
      "url": "https://www.udemy.com/course/learn-javascript-become-software-engineer/",
      "bio": "The most complete Javascript course. Learn from the basics to advanced topics.",
      "objectives": [
        "Develop professional Javascript applications",
        "Fix applications bugs",
        "Understand advanced topics of Javascript"
      ],
      "course_content": {
        "Introduction": [
          "The history of Javascript",
          "Setting up your tools"
        ],
        "Variables & Data Types": [
          "Understanding variables",
          "Data types overview",
          "Undefined",
          "Null",
          "String",
          "Boolean",
          "Number",
          "Testing skills: variables & data types",
          "Logger",
          "Declaring variables"
        ],
        "Operators": [
          "Arithmetic operators",
          "Assignmement operators",
          "Unary operators",
          "Equality operators",
          "Relational operators",
          "Logical operators",
          "The Comma operator",
          "Operators precedence",
          "Testing skills: operators"
        ],
        "Statements": [
          "The Control Flow",
          "if..else statements",
          "switch..case statements",
          "The block statement",
          "The throw statement",
          "try..catch & finally statements",
          "Testing skills: statements",
          "Playing with statements"
        ],
        "Functions": [
          "What are functions",
          "The return statement",
          "Parameters vs Arguments",
          "Anonymous function vs Named function",
          "Function declaration vs function expression",
          "IIFE",
          "Testing skills: functions",
          "Tester"
        ],
        "Objects": [
          "What are objects",
          "Creating objects",
          "Object properties",
          "Property access",
          "Object methods",
          "Deleting properties",
          "The Array object",
          "The Date object",
          "Functions are objects",
          "Constructor functions",
          "Testing skills: objects",
          "Land of objects",
          "The Car Factory"
        ],
        "Loop statements": [
          "while statement",
          "do..while statement",
          "for statement",
          "for..in statement",
          "Vowel finder"
        ],
        "Playing with methods": [
          "Array.push",
          "Array.pop",
          "Array.shift",
          "Array.unshift",
          "Array.reverse",
          "Array.isArray",
          "Array.slice",
          "Array.concat",
          "Array.join",
          "String.slice",
          "String.substr",
          "String.split",
          "String.indexOf",
          "String.concat",
          "String.toLowerCase & String.toUpperCase",
          "String.fromCharCode",
          "String.charCodeAt",
          "String.charAt",
          "Object.keys",
          "Object.hasOwnProperty",
          "Number.isNaN",
          "Number.parseFloat",
          "Number.parseInt",
          "Math.random",
          "Math.min & Math.max",
          "Math.round",
          "Math.ceil",
          "Math.floor",
          "Math.sqrt",
          "Math.pow",
          "Math.abs",
          "Date methods",
          "Party Manager I",
          "Party Manager II"
        ],
        "Scopes": [
          "What is a scope",
          "Lexical scope",
          "The keyword this"
        ],
        "Prototypes": [
          "The Prototype object",
          "The __proto__ property",
          "Prototype Chain",
          "Classes and Prototype inheritance",
          "Party Manager III",
          "The Bank I"
        ]
      },
      "requirements": [
        "A browser and text editor",
        "Basic HTML/CSS (not mandatory)"
      ],
      "description": "Are you looking for becoming a professional web developer and learn the necessary skills to get a highly paying job as a Javascript engineer, but you don’t have anything to start with?\nIn 2020 will have over 1.4 million jobs available with salaries reaching the mark of 6 figures year for professional developers. It's a unique opportunity for those who are looking for starting a new career.\nIn this course you will learn how to program applications and how to think as a professional software engineer in few weeks.\nThis is the most complete Javascript course on Udemy. This course was designed to teach you how to become a Javascript Engineer from zero skills.\nLearn step-by-step from the basic to advanced topics of Javascript. It's a highly interactive course with several videos, hundred of exercises and code challenges to test your skills.\nIn the first section of the course you will learn about the history of Javascript and setting up the tools you need to follow the program. The following sections you will dive deep into basic and important concepts of Javascript like data types, operators, statements, functions, arrays, objects and you will take several exercises to test your knowledge. By the middle of the course you will learn several important methods and start with more advanced topics like scopes and prototypes. In the last half of this program you will dive into advanced techniques, develop couple applications, fix bugs and take several challenges.\nYou need more than a regular programming language course to become a software engineer. Acquiring the right mindset is not a trivial task and requires a lot of time, discipline and investment. I've being working for five years with web technologies and developing web applications.\nTo create this course I've studied in one of best programming schools in the world, Hack Reactor, and researched through the best materials available now a days. The professional experience combined with thousand hours of studying and research, allowed me to design a curriculum that helps students with no previous experience in programming to be able to master Javascript and acquire the necessary mindset of a professional software developer.\nThis is an evolving course and I will constantly update it with new sections and topics. YES, buying this course you will get much more than you are paying for.\nAre you ready to become a Javascript engineer?",
      "target_audience": [
        "People who want to start a new career as developer",
        "People with no previous experience in development",
        "Experienced developers coming from other programming languages"
      ]
    },
    {
      "title": "Master Advanced PHP Debugging with XDebug: Ultimate Guide",
      "url": "https://www.udemy.com/course/master-advanced-php-debugging-with-xdebug-ultimate-guide/",
      "bio": "How To Debug Your PHP Code With The Advanced Tools and Use Xdebug Like Professionals",
      "objectives": [
        "How to Understand Xdebug: Dive into its mechanics and functionality.",
        "Setting Up Xdebug: Quick steps for installation and configurations with PHPStorm and VS Code.",
        "How to Debug Efficiently: Use Xdebug to swiftly identify and rectify bugs.",
        "Test Case Debugging with Xdebug: Get in-depth insights and solutions for your test cases.",
        "Upgrading `var_dump` with Develop Mode: A hands-on guide for superior code inspection.",
        "Profiling Mastery with Xdebug: Delve into Profile Mode and understand its power for performance insights.",
        "Visualizing Profiling Data: Techniques to pinpoint performance bottlenecks effectively.",
        "How to Ensure Comprehensive Test Coverage: Harness Xdebug's Coverage Mode for detailed test analysis.",
        "Exploring Trace Mode: Get unparalleled insights into your code's execution flow.",
        "How to Debug CLI Commands: Step-by-step guide for efficient debugging.",
        "Master Remote Debugging: Set up and use SSH for in-depth remote debugging insights.",
        "Debugging APIs: Practical methods using Postman for effective API troubleshooting."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How Xdebug Works"
        ],
        "Install and Config Xdebug": [
          "4-Install Xdebug With Wizard",
          "Install Xdebug With PECL",
          "Install Xdebug On Windows"
        ],
        "Use Xdebug with PHPStorm": [
          "Step Debugging in PHPStorm using Xdebug Simple PHP Script Demo",
          "Step Debugging in PHPStorm using Xdebug Symfony Demo Project",
          "Condition Break Points",
          "Debug Test Case With Xdebug",
          "Xdebug Basics"
        ],
        "Xdebug Modes": [
          "Develop Mode in Xdebug",
          "Profile Mode in Xdebug",
          "Visualise Profile Output using Qcachegrind",
          "Code Coverage Mode",
          "Trace Mode",
          "Use Xdebug Inside Docker Container",
          "Xdebug Modes Quiz"
        ],
        "Xdebug With VS Code": [
          "Debug Simple Script in VS Code",
          "Debug Symfony Project In VS Code",
          "Debug PHPUnit Test Cases In VS Code",
          "Use Xdebug Inside Docker From VsCode"
        ],
        "Xdebug Use Cases Extra Section": [
          "How To Debug API Through Postman Using PHPStorm UseCase",
          "How To Debug API Through Postman using VSCode UseCase",
          "How to Debug PHP Cli Scripts Via VSCode",
          "How to Debug Symfony Console Commands PHPStorm Use Case",
          "How to Debug Symfony Console Commands VSCode Use Case",
          "How To Remote Debugging Using Xdebug with PHPStorm Use Case",
          "How To Remote Debugging Using Xdebug with VSCode Use Case"
        ]
      },
      "requirements": [
        "PHP"
      ],
      "description": "Unlock the potential of the most powerful debugging tool for PHP: XDebug. Wave goodbye to the days of using var_dump, die, and echo for troubleshooting. Elevate your debugging skills to a professional level and revolutionize your problem-solving process.\nWhy Choose This Course?\nDeep Dive into XDebug: Understand the mechanics behind XDebug, and how it communicates with browsers, PHP, and various IDEs.\nHands-On Setup: A step-by-step guide to installing and configuring XDebug, be it on Linux, PHPStorm, Visual Studio Code, or within a Docker environment.\nMaster Debugging Techniques: From step debugging to profiling requests, uncover performance hitches and memory bottlenecks.\nExplore XDebug's 3 Modes: Deepen your understanding of profile mode, coverage mode, and trace mode to optimize application performance and test quality.\nBeyond Local Debugging: Learn how to set up Xdebug within Docker or remote debugging through SSH, debug CLI commands, and even API requests using Postman.\nExtra Section: Dive into special topics that address specific needs – ensuring you're equipped for any debugging challenge.\nInteractive Learning: Have a question? Join our dynamic community or reach out directly through social media. We're here to support your learning journey every step of the way.\nCourse Overview:\nIntroduction: Welcome and Course Breakdown\nXDebug Demystified: How It Works with PHP & IDEs\nSetup & Configuration: Making XDebug Work for You\nAdvanced Debugging Techniques: From Profiling to Tracing\nIDE-Specific Guides: PHPStorm & Visual Studio Code Walkthroughs\nXDebug in Depth: Exploring the 3 Modes for Deeper Insights\nExtra Content: Remote Debugging, CLI Commands, API Debugging, and More!\nOutcome: By the end of this comprehensive guide, not only will you confidently troubleshoot and debug any PHP project, but you'll also have an intimate understanding of your code, ensuring robust and optimized performance.",
      "target_audience": [
        "Beginner PHP Developers Who want to Start the advanced level of Debugging",
        "Professional PHP Developers who want to Maser Xdebug and its features"
      ]
    },
    {
      "title": "Browser Developer Tools",
      "url": "https://www.udemy.com/course/browser-developer-tools/",
      "bio": "Get to know various Browser Developer Tools for popular browsers & use them to debug & speed up your development process",
      "objectives": [
        "Know how to get most of the browser developer tools",
        "Learn how to debug your code i.e javascript and css using debugger tools provieded by various browsers",
        "Learn how to read minified scripts using different browsers",
        "Learn how you can play with Document Object Model using tools provided by browsers",
        "Learn how you can see what's affecting your page load time",
        "Manage memory issues",
        "Save your changes directly from browser to your code files"
      ],
      "course_content": {
        "Introduction to Browser Developer Tools": [
          "Introduction"
        ],
        "Chrome Developer Tools": [
          "Elements Panel",
          "Network Panel",
          "Sources Panel",
          "Timeline Panel & Profiles",
          "Debugging & Resources Panel",
          "Console Panel",
          "Memory View - Timeline Panel",
          "Emulators - Mobile View"
        ],
        "Firebug for Mozilla Firefox": [
          "Installing Firebug",
          "Elements Panel - HTML DOM View",
          "Network Panel",
          "Console Panel",
          "Script Panel",
          "CSS Panel",
          "Cookies Panel"
        ],
        "Internet Explorer Developer Tools - F12 Tools": [
          "Elements Panel - DOM Explorer",
          "Console Panel",
          "Debugger Panel",
          "Network Panel",
          "UI Responsiveness Panel",
          "Profile Panel",
          "Memory Panel",
          "Emulation Panel"
        ],
        "Popular JavaScript Framework Tools": [
          "React Developer Tool for Chrome",
          "Ember JS - Ember Inspector",
          "Angular JS - Batarang",
          "Angular JS - ng-inspector"
        ],
        "Conclusion & Code Download": [
          "Conclusion & Code Download"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "JavaScript",
        "Browser knowledge"
      ],
      "description": "Learn how you can make use of browser development tools to make web pages better.\nThis course tells you everything that you as a web-developer or web-designer needs to know when it comes to debugging your JavaScript or style-sheets using developer tools for browsers\nLearn how you can dynamically change HTML and apply style-sheets to your web-pages and then save the same back to your source files all directly from the browser.\nYou will also learn how you can read minified scripts\n\nThis course also covers various other important topics like managing memory, optimizing page load time of web pages.\nAll lectures are recorded in HD quality video which ensures that you will not miss a thing.\nSo let's start learning now..",
      "target_audience": [
        "Web Developers",
        "Web Designers",
        "Aspiring Web Developers",
        "Aspiring Web Designers",
        "Testers"
      ]
    },
    {
      "title": "Vibe Coding: Build AI Apps with OpenAI, Supabase & n8n",
      "url": "https://www.udemy.com/course/vibe-coding-fullstack/",
      "bio": "Learn to build real AI-powered apps with OpenAI, Supabase, n8n, VibeCoding, Stripe, and modern automation tools",
      "objectives": [
        "Build and deploy full-stack AI apps using OpenAI, Supabase, and n8n",
        "Design automation workflows that integrate AI agents and real-time data",
        "Store and query embeddings in Supabase vector store for RAG use cases",
        "Create authentication, user limits, and Stripe payments in real projects"
      ],
      "course_content": {
        "Introduction & About the Course": [
          "Why this Course Matters - The Big Picture",
          "DEMO - From Idea to Reality - Watch the Demo of the Web app You'll Build",
          "What You'll Learn",
          "Who Is This course For"
        ],
        "Course Resources and Downloads": [
          "Download all Course Resources"
        ],
        "Understanding the Basics of Agents": [
          "What are Agents",
          "Agentic Workflows - Architecture & Agents vs Workflows",
          "What We'll Build",
          "Tools You'll Need"
        ],
        "Building the Agentic Workflow - Introduction to N8N Agent": [
          "Full N8N Workflow - Overview",
          "Hands-on: N8N - Setting up a Webhook Node",
          "Vibecoding - Introduction - The Roadmap to Building our Final Web App",
          "Hands-on: Introduction to the Vibecoding Tool of Choice - Testing our Webhook",
          "Hands-on: Adding a Switch and a File Extractor Nodes & Testing",
          "Hands-on: Changing the Binary File name in Code - Troubleshooting with Code",
          "Hands-on: Adding Custom data to the Webhook - Setting up the UserId",
          "Code for the Next Lecture",
          "Hands-on: Code node - Extracting and Combining Data - Code Explanation",
          "Hands-on: Pulling the UserId - Troubleshooting our Workflow",
          "RAG - Crash Course",
          "Supabase Database - Overview",
          "Vector Databases Deep Dive - Vectors vs Relational Databases",
          "Embeddings and Vectors - Deep Dive"
        ],
        "Supabase Database Setup and Integrations": [
          "Supabase Account Setup",
          "Hands-on: Setting up Supabase in N8N and Supabase Table Creation",
          "Hands-on: Saving Chunks of text to the Vector Store - Documents Table",
          "Setup Chat AI Agent and Supabase Postgres Chat Memory for the N8N Agent",
          "Setting up the RAG System - Adding Semantic Search and Retrieving real Docs"
        ],
        "Supabase Authentication - Implementing User Authentication with Supabase": [
          "Supabase Authentication - Full Overview",
          "Set up Supabase Authentication using Vibecoding - Log in Users - Frontend",
          "Extracting the Real UserId from Authenticated User & Adding to DB Metadata",
          "Creating a Chat User Interface and a N8N chat Webhook - Testing Chat via Webhook",
          "Testing the Chatbot with Different Users - Setting up Supabase DB Filtering"
        ],
        "The Youtube Video Transcript Workflow - Full Setup": [
          "Youtube Video Transcript Workflow Overview",
          "Getting the RapidAPI Account and Testing a Youtube Transcript API",
          "Setting up RapidAPI - Youtube Transcript API and Workflow",
          "Testing the Webhook and Getting a Transcript",
          "Adding an IF Node to check for the Transcript",
          "Saving Transcripts to Supabase and Creating the Transcript Table: Saving Embeds",
          "Testing the Internal Chat Node to Chat with Youtube Transcript Documents - Debug",
          "Testing Chatting with the Uploaded Transcript in the Frontend"
        ],
        "Building out the Whole Web App Leveraging Vibecoding - Building the Frontend": [
          "Vibecoding Overview",
          "Activating the Production Webhook URLs and Testing the App",
          "Updating the Look of the Application and Navigation",
          "Showing a List of Saved Transcripts and Youtube Video Thumbnails",
          "Customizing the Login and Create Account User Interfaces"
        ],
        "Integrating Stripe for Payments and Deployment": [
          "Stripe and Payment - Free and Pro Tiers Architecture",
          "Setting up the User Usage Limit Engine and Testing It",
          "Setting up Your Stripe Account - Sandbox for Testing",
          "Setting up Stripe Payment - The Full Process",
          "Deploying our App - First Phase",
          "Deploying and Debugging the Sucess Page and URL Redirection",
          "Switching to Live Stripe - Full Guide"
        ],
        "Wrap up and Next Steps": [
          "Wrap up"
        ]
      },
      "requirements": [
        "A basic understanding of how APIs work is helpful but not required",
        "Familiarity with JavaScript or any programming language is a plus, but not required",
        "No prior AI, OpenAI, or n8n experience needed — everything is explained step-by-step",
        "A willingness to learn by building real-world, hands-on projects"
      ],
      "description": "Unlock the full power of AI by building real, production-ready applications — no fluff, no theory-only lessons.\nIn this hands-on course, you'll learn how to create full-stack AI-powered apps using the Vibe Coding workflow.\nYou'll connect tools like OpenAI, Supabase, n8n, and Stripe to build apps that go beyond basic demos — from data workflows and embeddings to user auth, chat interfaces, and payments.\n\n\nYou’ll start by learning how to build AI workflows using OpenAI and n8n, then integrate Supabase to handle vector storage, chat memory, and user authentication.\nYou’ll even learn how to query metadata, test webhooks, and build out a full front-end experience — including login/signup forms, transcript-driven UIs, and real-time chat. We’ll top it all off by integrating Stripe for a working free/pro plan flow and show you how to fully deploy your app to production.\nWhether you're a developer, automation enthusiast, or entrepreneur looking to build your own AI tools — this course gives you the real skills and system design patterns to do it confidently.\nBy the end, you’ll not just understand AI workflows — you’ll have built and deployed a full-stack AI app from scratch.\nAnd if you don’t find the course valuable, no worries — you’re covered by Udemy’s 30-day money-back guarantee. Enroll risk-free and start building!",
      "target_audience": [
        "Developers, non-developers, makers, and tech-curious learners who want to build AI-powered full-stack apps using OpenAI, Supabase, n8n, and modern tools — no prior AI experience required."
      ]
    },
    {
      "title": "Intro to Web Development for GIS and Mapping",
      "url": "https://www.udemy.com/course/intro-to-web-programming-for-gis-and-mapping/",
      "bio": "Learn to make websites, map, and start your career as a developer!",
      "objectives": [
        "Ability to code, debug, host, and update your own custom website",
        "Comprehension of HTML, CSS, and JS",
        "Create interactive maps with Leaflet and Maplibre/Mapbox",
        "Start strong in a career of web development and GIS"
      ],
      "course_content": {
        "Introduction": [
          "Course Outline",
          "About the Teacher",
          "Course Requirements",
          "Code Repository"
        ],
        "HTML, CSS, and JS: The Basics": [
          "Enabling Dev Tools",
          "Using Dev Tools 1",
          "Using Dev Tools 2",
          "Setting up CodeSandbox",
          "Following Along",
          "Writing HTML: Syntax, Buttons, Divs, Links, Text",
          "Writing HTML 1 Quiz",
          "Writing HTML: Self-Closing Tags, Attributes",
          "Writing HTML 2 Quiz",
          "Writing HTML: Building the Basic Structure",
          "Writing HTML 3 Quiz",
          "Writing CSS: Syntax and Concepts",
          "CSS 1 Quiz",
          "Writing CSS: Margin, Padding, Multiple Values",
          "CSS 2 Quiz",
          "Writing CSS: Layout and CSS Grid",
          "CSS 3 Quiz",
          "Using Dev Tools to Write CSS",
          "Writing CSS: Implementing Styling",
          "Writing JS: Using the Console",
          "JS 1 Quiz",
          "Writing JS: Variables and Functions",
          "JS 2 Quiz",
          "Writing JS: Global Variables and Variable Types",
          "JS 3 Quiz",
          "Writing JS: Arrays",
          "JS 4 Quiz",
          "Writing JS: Objects",
          "JS 5 Quiz",
          "Writing JS: Passing Parameters",
          "Writing JS: Manipulating the Web Page (DOM)",
          "Writing JS: Listening to Clicks and Doing Loops",
          "JS 6 Quiz",
          "Writing JS: Addition Function",
          "Organizing Your Code",
          "Organizing Code Quiz",
          "Debugging",
          "Web Hosting",
          "Web Hosting Quiz"
        ],
        "HTML, CSS, and JS: Next Steps": [
          "Developer Resources",
          "Developer Resources Quiz",
          "CSS Frameworks",
          "CSS Frameworks Quiz",
          "Bootstrap 1",
          "Bootstrap 2",
          "Responsive Bootstrap",
          "Bootstrap Quiz",
          "Linking Pages",
          "JS Libraries",
          "JS Libraries Quiz",
          "jQuery 1",
          "jQuery 2",
          "jQuery Quiz",
          "ChartJS",
          "JS Libraries Quiz",
          "Local Environment Development",
          "SFTP",
          "Git and Github"
        ],
        "Online Mapping: Overview": [
          "What is an online map?",
          "Basic Web Map Concepts",
          "Mapping Libraries",
          "Spatial Analysis",
          "Online Tools",
          "Data 1",
          "Data 2"
        ],
        "Online Mapping: Development Basics": [
          "Mapping Development Basics",
          "First Example Map Code",
          "Basemaps",
          "What are Points?",
          "LeafletJS: Points",
          "LeafletJS: Lines",
          "LeafletJS: Polygons",
          "Maplibre: Points",
          "Maplibre: Lines",
          "Maplibre: Polygons",
          "What are Popups?",
          "Leaflet Basic Popups",
          "Leaflet Dynamic Popups",
          "Maplibre Basic Popups",
          "Maplibre Dynamic Popups",
          "Map Bounds & Boxes"
        ],
        "Example Project: McDonald's Across the USA": [
          "Example Project Overview",
          "Making a Local Server",
          "Adding States to Map",
          "Associating Data Together",
          "Visualizing Data with Expressions",
          "Fixing Bugs"
        ],
        "Advanced Topics": [
          "Intro to Advanced Topics",
          "Loading from Spreadsheets",
          "Using Data from APIs",
          "Geolocation (User Location)",
          "Hover Effects",
          "Map Legends",
          "Spatial Analysis Introduction",
          "Animation Along a Line",
          "Naked Maps!",
          "Heatmaps",
          "Geocoding (point from address)",
          "Custom Icons and Markers",
          "Category Toggle (Checkbox Visibility)",
          "Drawing on Maps"
        ]
      },
      "requirements": [
        "Ability to navigate webpages and use internet",
        "A basic desktop computer"
      ],
      "description": "Are you:\na GIS expert looking to get into web development?\na total beginner with a cool mapping idea, but you've never done web work before?\na bit experienced in HTML/CSS/JS and know a little about mapping, and want to work in this niche?\nWhether you're totally new to web development, totally new to mapping, both, or have a bit of experience in either, this course is great for you. In it, we'll go over the fundamentals of web development in addition to going through some pretty comprehensive mapping tools and systems.\nWe'll be covering topics like:\ngeneral programming skills,\nspecific languages and programming,\nhow to debug,\nhow to host and update a website,\nCSS and Javascript frameworks and libraries,\nGit and Github\nAnd of course, mapping, such as:\nintroduction to spatial concepts like points and polygons,\ngeocoding and geolocation,\nanimating points,\ndata visualization,\npopups, styles, and best practices for mapping\nYou're going to learn a ton about doing projects and starting things off on the right foot.\nBy the end, you should feel confident enough to create and manage your own websites and small web apps focused about mapping. And, you'll be ready to take off in terms of the rest of your web development career, whether that's in mapping or not!\nI'm Victor, a longtime mapping developer and I run a company focused around the niche of mapping. I'm excited to take you through and I'd love to see you learn and grow in your web development career. I believe in focusing on getting things done, and teaching in a practical manner that sets you up to be able to be confident learning and growing on your own. Let's get to it!",
      "target_audience": [
        "Newcomers to programming or web development who want to build maps",
        "People looking for a project-based way to get into programming",
        "GIS experts who want to transition to web development",
        "Web developers working on a GIS project for the first time"
      ]
    },
    {
      "title": "React JS Bootcamp:Build Netflix,YouTube Clone and 3 Projects",
      "url": "https://www.udemy.com/course/react-js-project-bootcamp-build-production-ready-projects/",
      "bio": "Master React JS with a YouTube and Netflix Clone: Develop Scalable, Real-World Projects for Production-Ready Deployment.",
      "objectives": [
        "Master the fundamentals of React JS, including components, state, props, and hooks.",
        "Build a real-world YouTube Clone app using React and the YouTube API.",
        "Learn how to structure and organize scalable React projects for production-ready applications.",
        "Implement Tailwind CSS to create responsive and modern user interfaces quickly and efficiently.",
        "Understand how to manage complex state and data flow using React Context and hooks.",
        "Gain experience in using GitHub for version control, collaboration, and managing project repositories.",
        "Learn how to deploy React applications to the cloud using Vercel for fast and reliable hosting.",
        "Optimize web applications for performance, scalability, and user experience in real-world environments.",
        "Work with APIs to fetch data, handle asynchronous operations, and integrate third-party services into your projects.",
        "Develop a strong portfolio of production-ready projects to showcase your skills to potential employers."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "TanStack Query - Basics": [
          "TanStack Query Course Walk-through",
          "TanStack Query - Source Code",
          "Why Using TanStack-Query Part - 1",
          "Setup React Project for Tanstack-Query Part - 2",
          "Setting Query Client and Provider for Tanstack-Query Part - 3",
          "Introduction to useQuery hook Part - 4",
          "Conditional error and successfully fetching Part - 5",
          "Typecasting for type safety Part - 6",
          "Introduction to query-Key in Tanstack-query Part - 7",
          "TanStack-devtools Part - 8",
          "Cleaning and making modules queries with Query Options Part - 9"
        ],
        "TanStack Query - Intermediate": [
          "Stale-time vs. Cache-time in queryOptions Part - 1",
          "Manually re-fetching and Background fetching Part - 2",
          "Introduction to useMutation hook and post operation Part - 3",
          "Implementing and demonstrating post operation by useMutation hook Part - 4",
          "Put operation with useMutation hook Part - 5",
          "Delete operation with useMutation hook Part - 6",
          "Invalidating and re-fetching queries after mutations Part - 7",
          "Demonstrating invalidating query Part - 8",
          "Optimistic updates and rollback on error Part - 9",
          "Completing optimistic rollbacks Part - 10"
        ],
        "TanStack Query - Advance": [
          "Global Error Handling Part - 1",
          "Local error boundary to catch errors Part - 2",
          "Query Options for dependency queries Part - 3",
          "Depended query chaining Part - 4",
          "Query Handlers for pagination data Part - 5",
          "UI for pagination query Part - 6",
          "Handlers for pre-fetching with Tanstack-query Part - 7",
          "Completing UI for Prefetching data Part - 8",
          "Infinite query for infinite scrolling Part - 9",
          "Implementing UI for infinite-query Part - 10",
          "Custom mutation hook & custom query hooks Part - 11",
          "Implementing and testing UI for custom hook and queries Part - 12",
          "Bonus how to use source codes Part - 13"
        ],
        "Redux Toolkit": [
          "Intro To Redux Toolkit Part - 1",
          "More About Redux Toolkit Part - 2",
          "Getting Started With Redux Toolkit Part - 3",
          "Counter With Redux Toolkit Part - 4",
          "Counter Component Part - 5",
          "Redux Dev Tools Part - 6",
          "Theme With Redux Toolkit Part - 7",
          "Theme Slice Implementation Part - 8",
          "Auth Slice Example Part - 9",
          "Intro To Create AsyncThunk Part - 10",
          "Creating Users Component Part - 11",
          "Setting Up Express Back-end With MongoDB Part - 12",
          "Creating API Routes Part - 13",
          "Testing API With Postman Part - 14",
          "Intro To Optimistic UI Part - 15",
          "Optimistic Posts Slice Part - 16",
          "Posts Slice Async Thunks Part - 17",
          "Posts Extra Reducers Cases Part - 18",
          "Posts Component Part - 19",
          "Posts Component Logic Part - 20",
          "Posts List Component Part - 21",
          "Posts Creation Form Part - 22",
          "Posts Creation Optimistic Logic Part - 23",
          "Posts Creation Optimistic Test Part - 24",
          "Posts UI Enhancements Part - 25",
          "Intro To Create Entity Adapter Part - 26",
          "Posts Components With Create Entity Adapter Part - 27",
          "Setup API From Environment Variables Part - 28",
          "Redux Custom Middle-Wares & Custom Logger Part - 29",
          "Debounce & Throttle Middle-Ware Part - 30",
          "Middle-Ware Components Part - 31",
          "Custom Logger Event Logging Part - 32",
          "Intro To Redux Toolkit Create Api Part - 33",
          "Posts With Create Api Part - 34",
          "Testing Redux With Jest Part - 35",
          "Testing Async Action With Jest Part - 36",
          "Running All The Test Cases Part - 37",
          "Deployment To Vercel Part - 38"
        ],
        "React JS Netflix Clone Project - 1": [
          "Netflix Clone Project - Source Code",
          "React JS Netflix Clone Project - Live Demo",
          "Project Initialization Part-1",
          "Extending Tailwind Config & Creating Pages Part - 2",
          "Navbar Design Part - 3",
          "Setting Up Routes Part - 4",
          "Navbar Styles Part - 5",
          "Navbar Responsive Part - 6",
          "Navbar Functionalities Part - 7",
          "Navbar Finalizing Part - 8",
          "Getting TMDB API Key Part - 9",
          "Making Custom API Wrapper Part - 10",
          "Adding APIs in the Custom API Wrapper Part - 11",
          "API Call Structure Part - 12",
          "Movie Context Design Part - 13",
          "Using Movie Context Part - 14",
          "Designing Hero Component Part - 15",
          "Designing the Rest of the Hero Component Part - 16",
          "Navbar Component Scroll Effects Part - 17",
          "Carousel Design Part - 18",
          "Carousel Card Design Part - 19",
          "Implementing Carousel Part - 20",
          "Adding All Carousel Part - 21",
          "Fixing Carousel Buttons Part - 22",
          "Making The Video Player Part - 23",
          "Linking The Video Player With APIs Part - 24",
          "Making The Video Player Functional Part - 25",
          "Video Player External Control's Part - 26",
          "PopUp Card Context Part - 27",
          "PopUp Card Design Part - 28",
          "PopUp Card Functional Design Part - 29",
          "PopUp Card Buttons Design Part - 30",
          "PopUp Card Complete Design Part - 31",
          "Linking PopUp Card Functionality Part - 32",
          "PopUp Card Dynamic Data Fetch Functionality Part - 33",
          "PopUp Card Unmute & Add To Favourite Functionality Part - 34",
          "PopUp Card Add To Favorite Implementation Part - 35",
          "Modal Component Design Part - 36",
          "Modal Component Design Continue Part - 37",
          "Modal Component Buttons Part - 38",
          "Modal Component Video Player Part - 39",
          "Modal Component Types & Structure Part - 40",
          "Modal Component Dynamic Data Part - 41",
          "Modal Component Dynamic Trailer Mapping Part - 42",
          "Modal Component Dynamic Data & Similar Movies Mapping Part - 43",
          "Similar Movies Card Component Design Part - 44",
          "Similar Movies Card Component Data Map Part - 45",
          "Similar Movies Card Component Enhancements Part - 46",
          "Modal and PopUp Card Tweaks Part - 47",
          "Watch Page Design Part - 48",
          "404 Error Page Design Part - 49",
          "My List Page Design Part - 50",
          "Search Implementation Part - 51",
          "Toast Implementation Part - 52",
          "Push Code To GitHub & Deploy To Vercel Part - 53"
        ],
        "React JS YouTube Clone Project-2": [
          "YouTube Clone Project - Source Code",
          "YouTube Clone Project - Live Demo",
          "Initializing Project Part-1",
          "Creating Navbar Part - 2",
          "Designing Search Input in Navbar Part - 3",
          "Adding Clear Icon in Search Field Part - 4",
          "Creating Sidebar Lets Import Icons Part - 5",
          "Creating Sidebar Lets Create Category Object Part - 6",
          "Creating Sidebar Add Categories Part-7",
          "Creating Home Page Cards Part-8",
          "Creating Home Page Cards Part - 9",
          "Youtube API Setup Generating API_Key Part - 10",
          "Going Through Videos API Part - 11",
          "Calling Popular Videos API Part - 12",
          "Parsing Storing Videos Data Part - 13",
          "Making Home Cards Dynamic Part - 14",
          "Lets Fetch Channel Thumbnail Part - 15",
          "Lets Update Channel Thumbnail and Render It Part-16",
          "Lets Select the Categories Part - 17",
          "Lets Go Through Categories API Part - 18",
          "Fetching Categories Id Part - 19",
          "Storing Categories Id Part - 20",
          "Fetching Videos by Category Id Part - 21",
          "Custom Hook For Home Page Part - 22",
          "Lets Store Page Tokens Part - 23",
          "Fetching from Next Page Part - 24",
          "Adding Infinite Scrolling Feature Part - 25",
          "Infinite Scroll as Per Categories Part - 26",
          "Rendering Fetch Error Loading Spinner Part - 27",
          "Creating Watch Page Route Part - 28",
          "Creating Watch Page Layout Part-29",
          "Creating Watch Page Details Part - 30",
          "Creating Watch Page Buttons Part - 31",
          "Designing Watch Page Description Part - 32",
          "Designing Mini Cards Part - 33",
          "Adding Video Duration in Mini Cards Part - 34",
          "Fetching Videos Data for Watch Page Part - 35",
          "Storing Videos Data Part - 36",
          "Creating Helper Functions for Fetching Videos Data Part - 37",
          "Lets Show the Video Details Part - 38",
          "Add New Properties in Video Data Part - 39",
          "Creating Video Viewing Section Part - 40",
          "Fetching Activities For Watch Page Part - 41",
          "Storing All Fetched Video Ids in an Array Part - 42",
          "Fetching and Parsing Videos Data Part - 43",
          "Storing And Displaying Videos Data Part - 44",
          "Designing Comments Section Part - 45",
          "Fetching Video Comments Part - 46",
          "Parsing And Storing Comments Part - 47",
          "Displaying Fetched Comments Part - 48",
          "Adding Load More Button for Comments Part - 49",
          "Designing Comment Replies Part - 50",
          "Fetching Comment Replies Parsing Them Part - 51",
          "Displaying Comments Replies Part - 52",
          "Lets Resolve Some Bugs Part - 53",
          "Designing Channel Page Channel Details Part - 54",
          "Fetching Channel Info Part - 55",
          "Parsing and Storing Fetched Data Part - 56",
          "Displaying Channel Data Part - 57",
          "Creating Custom Hook for Channel Part - 58",
          "Lets Create Separate API Call File for Videos Channel Info Part - 59",
          "Lets Create Separate API Call File for Comments Replies Part - 60",
          "Lets Create Seperate API Call File for Video Details Channel Activities Part-61",
          "Lets Create Separate API Call File for Categories Part - 62",
          "Creating Modal for Channel Description Part - 63",
          "Making Modal Scroll-able Part - 64",
          "Designing Category Selection Buttons Part - 65",
          "Designing Video Cards for Channel Page Part - 66",
          "Fetching Videos for Channel Page Part - 67",
          "Storing Videos Data for Channel Page Part - 68",
          "Displaying Video Details in Cards Part - 69",
          "Creating Load More button For Videos Fetching More Videos Part - 70",
          "Updating the Stored Videos Part - 71",
          "Adding Infinite Scrolling For Channel Videos Part - 72",
          "Designing Channel Page Playlist Cards Part - 73",
          "Fetching Playlist Data Part - 74",
          "Parsing Playlist Data Part - 75",
          "Updating The User Channel Hook Part - 76",
          "Rendering Fetched Data in Playlists Part - 77",
          "Adding Infinite Scrolling for Playlists Part - 78",
          "Removing Loader When We Fetch All Videos Part - 79",
          "Creating Parse File Part - 80",
          "Designing Playlist Item Card Part - 81",
          "Fetching Playlist Items Data Part - 82",
          "Displaying PlayList Details Part - 83",
          "Creating Custom Hook for Playlist Items Part - 84",
          "Designing Playlist Video Card Part - 85",
          "Fetching Playlist Videos Part - 86",
          "Parsing Playlist Videos Data Part - 87",
          "Storing Playlist Videos Data Part - 88",
          "Creating Custom Hook for Playlist Item Part - 89",
          "Adding Interactivity to Home Watch Page Part - 90",
          "Adding Interactivity to Channel Page Playlist Page Part - 91",
          "Creating Search Page Route Part - 92",
          "Fetching Video Id Using Search API Part - 93",
          "Getting Parsing Video Data for Search Page Part - 94",
          "Storing Searched Video Data Part - 95",
          "Close Icon In Search Field Part - 96",
          "Making Navbar Responsive Part - 97",
          "Making Home Page Responsive Part - 98",
          "Making Watch Page Responsive Part - 99",
          "Making Channel Page Responsive Part - 100",
          "Making Playlist Page Responsive Part - 101",
          "Pushing Code to Github Part - 102",
          "Hosting App on Vercel Part - 103",
          "Adding Necessary Type Safety Part-104",
          "Course Wrap Up"
        ],
        "React JS News Portal Project - 3": [
          "News Portal Project - Source Code",
          "News Portal Project - Live Demo",
          "Initializing Project - Part - 1",
          "Creating Navbar Part - 2",
          "Creating Navbar Search Field Part - 3",
          "Creating Navbar Category Buttons Part - 4",
          "Creating Header Section Part - 5",
          "Creating Home Page Carousel Part - 6",
          "Designing Carousel Description Part - 7",
          "Designing Carousel List and Organizing Code Part - 8",
          "Designing Home Page Category News Cards Part - 9",
          "Organizing Home Page Code Part - 10",
          "Making Our First API Call Part - 11",
          "Storing Top Headlines and Rendering In Carousel Part - 12",
          "Rendering Stored News Data in Carousel Part - 13",
          "Creating Carousel Buttons Part - 14",
          "Updating Carousel List With Carousel Part - 15",
          "Creating API Wrapper Function Part - 16",
          "Utilizing API Wrapper for Top Headlines Part - 17",
          "Resolving API Type Error Part - 18",
          "Fetching Category News Part - 19",
          "Displaying Category News Data Part - 20",
          "Designing Error and Loading State for Components - I Part - 21",
          "Designing Error and Loading State for Components - II Part - 22",
          "Creating Explore Page Route Part - 23",
          "Storing Explore Page Category News Part - 24",
          "Designing Explore Page Part - 25",
          "Designing Explore Page Load More Button Part - 26",
          "Adding Load More Functionality Part - 27",
          "Load More Button Conditional Rendering Part - 28",
          "Adding See All Button Functionality Part - 29",
          "Creating Search Page Part - 30",
          "Fetching News For Search Page Part - 31",
          "Rendering News in Search Page Part - 32",
          "Adding Error Loading State for Explore Search Page Part - 33",
          "Adding Links for All News Cards Making Navbar Responsive Part - 34",
          "Making Carousel Responsive Part - 35",
          "Making Home Page Cards Search Page Explore Page Responsive Part - 36",
          "Creating Skeleton for Carousel Part - 37",
          "Creating Skeleton for News Cards Part - 38",
          "Creating Load More Skeleton for News Cards Part - 39",
          "Course Wrapup"
        ]
      },
      "requirements": [
        "Students don't need to have any prior knowledge to take this course. They will learn everything from the ground up."
      ],
      "description": "Welcome to **React JS Project Bootcamp: Build Production-Ready Projects**, where you’ll gain hands-on experience by developing real-world, scalable applications using React JS! This bootcamp is designed for aspiring developers who want to enhance their React JS skills while building production-ready web applications.\n\n\nThroughout this course, you will create **3 projects**, ranging from simple to complex, each designed to build and strengthen your understanding of React. You’ll dive into state management, hooks, routing, API integration, and responsive design, ensuring you have a solid grasp of React’s core concepts. By the end of the course, you’ll have a portfolio full of practical projects to showcase your skills.\n\n\nFeatured Project: YouTube Clone Web App:\nIn the **YouTube Clone Web App** project, you’ll learn how to integrate React with the **YouTube API**, allowing you to fetch and display video data dynamically. This project will cover:\n- Fetching videos using the YouTube API.\n- Creating a responsive, user-friendly interface.\n- Building video search functionality.\n- Displaying video details and related content.\n- Implementing modern React features like hooks and context.\n\n\nBy the end of this project, you'll have a fully functional YouTube clone with real-world capabilities, preparing you to build similar apps in your professional career.\n\n\nThis course is perfect for anyone looking to level up their React JS knowledge and develop production-ready skills. Whether you’re a beginner or intermediate developer, this bootcamp will push you toward mastering React through engaging, practical projects!",
      "target_audience": [
        "Beginners who are new to React JS and want to learn by building real-world projects.",
        "Front-end developers looking to strengthen their skills in modern React development.",
        "JavaScript developers wanting to expand their knowledge and work on production-ready applications.",
        "Students seeking practical experience by working on real-world projects like a YouTube clone.",
        "Freelancers who want to build and deploy scalable React projects for clients.",
        "Developers interested in learning how to use Tailwind CSS for efficient UI design.",
        "Professionals wanting to master cloud deployment with Vercel and version control using GitHub.",
        "Anyone looking to build a strong portfolio of React projects for career advancement."
      ]
    },
    {
      "title": "Machine Learning with AWS AI and IBM Watson",
      "url": "https://www.udemy.com/course/machine-learning-with-aws-ai-and-ibm-watson/",
      "bio": "Cognitive App Development with IBM Watson & AWS Machine Learning",
      "objectives": [
        "Cognitive Computing and how Watson and AWS ML Tools changes the game",
        "Amazon Sagemaker to build, train, and deploy machine learning models at scale",
        "Using Watson Visual Recognition to tag and classify visual content using machine learning",
        "Capabilities of the Watson API and how to choose the best features for your task",
        "Using Watson Assistant to build an AI assistant(ChatBot)",
        "Object and scene detection,Image moderation,Facial analysis,Celebrity recognition,Face comparison,Text in image and many more",
        "Using Watson Watson Discovery to unlock hidden values to find answers , monitor trends and surface patterns",
        "Using Watson Natural Language Understanding and Amazon Comprehend for advanced text analysis",
        "Using Watson Knowledge Studio to discover meaningful insights in unstructured text.",
        "Using Watson Speech to Text and Amazon Transcribe to easily convert audio and voice into written text",
        "Using Watson Text to Speech and Amazon Polly to convert text into natural-surrounding audio",
        "Using Watson Language Translator and Amazon Translate to translate from one language to another",
        "Using Watson Natural Language Classifier to interpret and classify natural language with confidence",
        "Using Watson Personality Insights to predict personality characteristics through text",
        "Using Watson Tone Analyzer to understand emotions and communications style in text"
      ],
      "course_content": {
        "IBM Watson": [
          "Introduction",
          "How IBM Watson Works",
          "IBM Bluemix Dashboard",
          "Difference between AI and Machine Learning",
          "AI services [No machine learning skill]"
        ],
        "Quick Recap": [
          "Quick Recap - NUMPY",
          "Quick Recap - Pandas"
        ],
        "IBM Watson Assistant": [
          "IBM Watson Assistant Overview",
          "IBM Watson Assistant Practical"
        ],
        "IBM Watson Discovery": [
          "IBM Watson Discovery Overview",
          "IBM Watson Discovery Practical"
        ],
        "IBM Watson Knowledge Studio": [
          "IBM Watson Knowledge Studio Overview",
          "Knowledge Studio (Custom model for NLU)"
        ],
        "IBM Watson Language Translator": [
          "IBM Watson Language Translator Overview and Practical"
        ],
        "IBM Watson Natural Language Classifier": [
          "IBM Watson Natural Language Classifier Overview",
          "IBM Watson Natural Language Classifier Practical"
        ],
        "IBM Watson Natural Language Understanding": [
          "IBM Watson Natural Language Understanding Overview",
          "IBM Watson Natural Language Understanding Practical"
        ],
        "IBM Watson Personality Insights": [
          "IBM Watson Personality Insights Overviews",
          "IBM Watson Personality Insights Practical"
        ],
        "IBM Watson Speech to Text": [
          "IBM Watson Speech to Text Overview",
          "IBM Watson Speech to Text Practical 1",
          "IBM Watson Speech to Text Practical 2"
        ]
      },
      "requirements": [
        "Nothing required at all! but if you have a background in computer science or development, it would be beneficial, but not required at all.",
        "IBM Bluemix and AWS account"
      ],
      "description": "The AI revolution is here. Are you prepared? Machine learning is the most evolving technology which has changed the digital world.\nWe all are surrounded by numerous effective ML projects like IBM Watson, Google brain, Edgecase, Cortana, Alexa, tesla self driving car and many more.\nAll movie recommendation apps like IMDB, Netflix and many of them are using machine learning to add personalized features so that involvement of users could increase.\nThere are many more use cases of ML and AI in the real world and it is not possible for me to discuss all of them into description jokes apart if you really want to create one of them, then this course is only for you.\n\n\nIn this course you'll learn and deploy all the machine learning services using IBM Bluemix and Amazon AWS. This course covers from theoretical  concepts to hands on deploying cloud services. It will make you job ready to grab high paying jobs.\nYou will be able to integrate the cloud services in your Web, Android, IoT, Desktop Applications like Face Detection, ChatBot, Voice Detection, Text to custom Speech (with pitch, emotions, etc), Speech to text, Sentimental Analysis on Social media or any textual data.\nServices covered in this learning path:\nWatson Services (IBM Bluemix) like-\nWatson Assistant  to build and deploy chatbots and virtual assistants.\nWatson Discovery  to expose insights from the data by applying AI functions\nWatson Speech to Text  (STT) to easily convert audio and voice into written text.\nWatson Text to Speech (TTS)  to convert written text into natural-sounding audio in a variety of languages and voices.\nWatson Language Translator helps in dynamically translate news, patents or conversational documents.\nWatson Natural Language Classifier helps in interpreting and classify natural language with confidence.\nWatson Natural Language Understanding to analyze text to extract metadata from content such as concepts, entities and sentiment.\nWatson Visual Recognition is used to classify and search visual content using machine learning.\nWatson Tone Analyzer  to understand  and analyze emotions and tones in written content.\nWatson Personality Insight is used to predict personality characteristics, needs and values through written text.\nMachine Learning Services (Amazon AWS) like-\nAmazon Sagemaker to build, train, and deploy machine learning models at scale\nAmazon Comprehend for natural Language processing and text analytics\nAmazon Lex for conversational interfaces for your applications powered by the same deep learning technologies as Alexa\nAmazon Polly to turn text into lifelike speech using deep learning\nObject and scene detection to detect object and scenes from the image\nImage moderation to check unsafe content from the image\nFacial analysis can easily detect when faces appear in images and videos and get attributes such as gender, age range, eyes open, glasses, facial hair for each.\nCelebrity recognition to recognize any celebrity character from the image\nFace comparison helps in comparing face from different images\nText in image to detect text\nAmazon Transcribe for automatic speech recognition\nAmazon Translate for natural and accurate language translation\nAnd many more things\nAll machine learning lovers are most welcome and enroll now and build application based on cognitive computing , AI and ML.",
      "target_audience": [
        "Anyone who is curious to experiment with Artificial Intelligence and develop applications or simply interested in exploring IBM Watson & AWS Machine Learning Tools and their powerful services available on IBM Cloud and AWS Cloud respectively.",
        "If you want to learn fundamentals of chat bot development like Intent, Entities, Dialog, etc and Build a powerful Chatbot application with IBM Watson!"
      ]
    },
    {
      "title": "Django For Beginners",
      "url": "https://www.udemy.com/course/django-for-beginners/",
      "bio": "Learn how to create web applications rapidly with Django",
      "objectives": [
        "Understand and use command line interface",
        "Install Django using Pip",
        "Understand and use SQLite DB Browser",
        "Create Django project",
        "Create Django App",
        "Create Django Model",
        "Run Django commands",
        "Register and administer Django App",
        "Run Django migrations",
        "Query Django database",
        "Understand basic python terminologies"
      ],
      "course_content": {
        "What is Django": [
          "Introduction",
          "What is Django",
          "What is Python",
          "Famous Apps built with Django",
          "Django Tools"
        ],
        "Introduction to the Command Line": [
          "What is the command line interface",
          "How to access the command line",
          "What you can do with the command line",
          "The command line signal",
          "Useful commands"
        ],
        "Installing Django": [
          "Downloading and Installing Python",
          "Django Pre-installation requirements",
          "Checking for and upgrading Pip",
          "Installing Virtual Environment",
          "Activating virtual environment",
          "Download and install Brackets",
          "Download and install SQLite DB Browser",
          "Django Installation",
          "Create a Django Project",
          "Create a Django App",
          "Running Django Commands"
        ],
        "How to create a Django Model": [
          "Creating a Django Model",
          "Running Migrations",
          "Checking database structure for our app",
          "Registering and administering our app",
          "Querying Database"
        ],
        "Django URL Patterns": [
          "What is a URL",
          "URL dispatcher",
          "Django Architecture",
          "How Django Processes a request",
          "Regular Expressions",
          "Django URLs Patterns",
          "Django URL Patterns configuration - Part 1",
          "Django URL Patterns configuration -Part 2",
          "Django URL Patterns configuration - Part 3 Testing"
        ],
        "Implementing Django Views": [
          "What are Views",
          "Implementing Views Part 1",
          "Implementing Views Part 2",
          "Adding Templates",
          "Testing Views"
        ],
        "Basic Python crash Course": [
          "The Python Idle",
          "Reserved Python Keywords",
          "Arithmetic Operators",
          "Comparison Operators",
          "Python Variable",
          "Python List",
          "Python Tuples",
          "Python Comments",
          "Slicing Strings",
          "Boolean Data Type",
          "Write your first Python Program",
          "Thank You"
        ]
      },
      "requirements": [
        "Download and install Django. We'll cover this in this course",
        "Download and Python. We'll cover this in this course",
        "Download and install Brackets. We'll cover this in this course",
        "Download and install SQLite Db Browser. We'll cover this in this course"
      ],
      "description": "Django is a fantastic web framework built with the Python programming language. With Django you can create websites and web apps very quickly and efficiently.\nDjango was created by very experienced developers who have built into it several tools for rapid web application development.\nDjango is very fast ,secure and scalable making it an attractive framework choice for thousands of developers.\nDjango developers are in hot demand and command attractive wages. Some billion dollar companies like Instagram and Pinterest were created using the Django framework.\nThis is a beginners  Django course that will take you from absolute scratch to creating a simple Django web app. The course is\na hands on course and i strongly advise you to follow along with me so you can gain a better understanding of the framework.\nWhat your will learn:\nHow to install python\nHow to check for and upgrade Pip\nHow to install virtual isolated environments\nHow to activate the virtual environment\nHow to install Django\nHow to create Django project\nHow to create Django app\nHow to create Django Model\nHow to run Django commands\nHow to use command line interface\nHow to run Migrations\nHow to query Django database\nHow to register Django app\nHow to Administer Django app\nBasic crash course in Python\nDjango is an extremely in-demand skill that pays quite well. Django is used by a lot of startups to build great applications.\nInstagram was once a startup that was built using Django and later sold to facebook for $1 billion  ,Yes 1 billion dollars !\njust  roughly two years after it was created.\nDjango has a thriving community that you can engage with as you begin your Django journey.\nWelcome to Django for beginners Course.  :-)",
      "target_audience": [
        "Anyone with basic knowledge of python",
        "Aspiring Django developers",
        "Aspiring developers",
        "Aspiring programmers",
        "Aspiring web developers",
        "Aspiring app developers",
        "Anyone who wants to learn a new skill"
      ]
    },
    {
      "title": "ChatGPT for Code Generation and Software Development",
      "url": "https://www.udemy.com/course/chatgpt-for-code-generation-and-software-development/",
      "bio": "Boosting Development Productivity with ChatGPT",
      "objectives": [
        "You could generate code and programs from ChatGPT.",
        "You could easily build a webpage based on an image such as login page.",
        "You could build android apps by generating Java and XML code.",
        "You could generate python programs for data analysis."
      ],
      "course_content": {},
      "requirements": [
        "No previous knowledge on ChatGPT is required, as you will learn everything in this course."
      ],
      "description": "In an era where technology is rapidly evolving, the integration of artificial intelligence (AI) into software development processes is becoming increasingly pivotal. The \"ChatGPT for Code Generation and Software Development\" course is designed to empower developers, from novices to experienced professionals, with the skills and knowledge needed to harness the power of AI for coding and software development. This comprehensive course offers an in-depth exploration of how ChatGPT, an advanced AI model developed by OpenAI, can revolutionize the way we approach coding, enhance productivity, and foster innovation in software development.\nCourse Objectives:\nUnderstanding ChatGPT: Gain a thorough understanding of ChatGPT, its underlying architecture, capabilities, and how it can be utilized for various coding tasks.\nPractical Applications: Learn to apply ChatGPT in real-world coding scenarios, including code generation, debugging, optimization, and documentation.\nIntegration Techniques: Discover how to integrate ChatGPT with popular development environments and tools to streamline the software development lifecycle.\nAdvanced Use Cases: Explore advanced use cases of ChatGPT in software development, such as automated testing, refactoring legacy code, and enhancing code readability.\n\n\nHere in this course you will learn code generation with practical use cases such as-\nGenerating HTML Form based on an image.\nGenerating Python code for Data Analysis\nBuilding a  Mobile App- Java and XML code for Android Studio\nTroubleshooting tips for Gradle and Android studio\nGenerating Excel VBA macro for Automating repetitive and complex tasks in Excel\nBy the end of this course, participants will have a solid foundation in utilizing ChatGPT for various aspects of software development. They will be equipped with the skills to leverage AI to enhance their coding practices, boost productivity, and innovate in their development projects. Whether you are looking to streamline your workflow, improve code quality, or explore new frontiers in AI-assisted development, this course will provide you with the tools and knowledge to succeed in the rapidly evolving tech landscape.",
      "target_audience": [
        "Anyone who is interested in learning ChatGPT to streamline and automate tasks.",
        "Students, Software Developer and other IT Professionals who is curious to learn ChatGPT"
      ]
    },
    {
      "title": "JavaScript Let's Play - Build a Random Card Memory Game 2025",
      "url": "https://www.udemy.com/course/build-a-game-with-javascript/",
      "bio": "Enhance your JS skills. Complete course on building a random card memory game, from scratch, using pure JS, HTML and CSS",
      "objectives": [
        "Build a random card game using pure JavaScript, HTML, JSON and CSS (no libraries)",
        "Use the Fetch API and utilize external JSON data to populate your game",
        "Understands fragments, and how to add them to the Document Object Model (DOM)",
        "Apply 3D transformations like rotateY() to enhance visual effects in your game",
        "Master the Fisher-Yates shuffle algorithm to randomly arrange your game cards",
        "Create game mechanics such as card flipping and matching logic",
        "Gain a solid understanding of JavaScript, variables, functions, and event handling",
        "Use CSS transitions and transformations to provide immediate visual feedback during gameplay, enhancing user engagement",
        "Gain proficiency in using the Fetch API to retrieve and manipulate external data, allowing dynamic content in your game",
        "Employ randomization techniques, such as shuffling cards, to add unpredictability and excitement to your memory card game",
        "Understand array destructuring, ternary operators, decrement operators and more!"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of JavaScript, HTML and CSS would be helpful",
        "A Mac or PC is required, so you can code alongside with me"
      ],
      "description": "*** USE PURE JAVASCRIPT TO CREATE A GAME***\nUnleash your inner game developer\nBuild a fully functional memory card game, from scratch\nUnderstand JSON, Fetch, Fisher-Yates Algo, Animations, 3D Transformations & More\nUse pure JavaScript, HTML and CSS without libraries or modules\nHands-on, interactive course designed for YOU, to take YOU through the entire process of creating a fully functional memory card game from scratch\nDive into complex code, made easy\nAre you ready for an exhilarating journey into the world of coding as we build a Random Memory Card Game using only pure HTML, CSS, and JavaScript?\nWHAT YOU'LL LEARN\nBuild a Game from the Ground Up: Forget libraries and modules! In this hands-on course, you’ll learn to craft every aspect of the game using only HTML, CSS, and JavaScript. By focusing on pure code, you'll gain a deeper understanding of how each component works together to create an engaging user experience.\nMaster Complex Tasks: Coding can be complex, but it doesn’t have to be daunting! I’ll guide you through various methods and techniques for tackling intricate tasks. You’ll become adept at problem-solving and thinking like a developer, giving you the confidence to tackle any coding challenge that comes your way.\nCSS 3D Transformations: Get ready to dazzle players with stunning visuals! We’ll explore CSS 3D transformations to create an eye-catching flip effect for your cards. You’ll discover the magic of the preserve-3d property, which allows your cards to flip in style, adding depth to your game.\nRandomization with Fisher-Yates Algorithm: Want to keep players on their toes? Learn how to implement the Fisher-Yates random shuffle algorithm to randomize your card array. This powerful technique not only enhances gameplay but also equips you with skills applicable in various coding scenarios—think gaming, random selections, and more!\nUnderstand JSON: Unlock the potential of data handling by exploring JSON (JavaScript Object Notation). You’ll learn how to reference JSON files in your JavaScript code, making it easy to manage game data.\nFetch API & Async/Await: Level up your JavaScript skills with the Fetch API! We’ll cover both traditional .then() statements and the modern async/await syntax for seamless data fetching.\nTrack Progress with Counters & Flags: Every great game needs feedback! We’ll implement counters to track player progress and display failure images when matches aren’t made. This will help create a more engaging experience as players strive for success.\nCelebrate Wins with Confetti: What’s more exciting than winning? We’ll add a delightful winning effect that showers players with confetti when they complete all matches. This fun touch will make your game memorable and encourage players to come back for more!\nRandom Matching Game Mechanics\nEach new game will feature a fresh set of cards, ensuring that no two games are ever the same! You’ll learn how to implement this randomness effectively, keeping gameplay exciting and unpredictable.\n* WHAT MAKES THIS COURSE UNIQUE?\nThis course is not just about coding; it’s about creating an experience. By the end of our journey, you will have built a fully functional memory card game that showcases your newfound skills. Plus, you'll walk away with valuable knowledge that can be applied across various projects in your development career.\nGame Logic Implementation: Discover how to implement game mechanics such as card flipping, matching logic, and win/lose conditions. You'll gain practical experience in managing game states and user interactions.\nData Handling: Learn how to fetch and utilize external data. You'll work with JSON data to populate your game with unique cards, enhancing your understanding of data structures.\nUser Experience Design: Explore best practices for designing an engaging user interface. You'll implement animations, transitions, and visual feedback to create an immersive gaming experience.\nREADY TO PLAY?\nDon’t miss out on this opportunity to enhance your coding skills while having fun! Join us in creating something amazing—your very own Random Memory Card Game awaits!\nLet’s code something spectacular together!\nCOURSE HIGHLIGHTS?\nHands-On Project: Each section includes practical exercises where you'll build components of the game step by step, culminating in a fully playable memory card game.\nQuizzes, Coding Exercises and Tests: I have incorporated tests, quizzes and even coding exercises to get you up to speed, fast.\nExpert Guidance: Benefit from personalized feedback and mentorship from me, who is passionate about teaching.\nI look forward to seeing you in class!\nLet's make learning fun—one card at a time!\nClyde",
      "target_audience": [
        "Anyone who wants to learn how to create a game using JavaScript",
        "Any aspiring developer wishing to learn how to work with data and build real web apps",
        "Any developer wishing to improve their JavaScript, CSS, HTML and JSON coding skills",
        "Anyone who wishes to learn more about web app development",
        "A developer who wishes to learn how to truly randomize data that can be used in many applications",
        "Anyone who wants to enhance their coding skills"
      ]
    },
    {
      "title": "Build a Task Scheduler Admin Panel with Laravel",
      "url": "https://www.udemy.com/course/laravel-task-scheduler/",
      "bio": "Learn how to create scheduled tasks using an Admin Panel UI built in Laravel 5.6",
      "objectives": [
        "Make use of Laravel Command Scheduler in order to schedule tasks from a database",
        "Create model observers and Notification Events",
        "Use Query Caching to improve performance"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic PHP skills and Object Oriented Programming.",
        "You should also basic basic HTML and CSS skills",
        "Must have Laravel Homestead already installed and ready to use"
      ],
      "description": "Improve your Laravel knowledge by creating a real-life project that uses advanced techniques like task scheduling, events and notifications.\nCreate a task scheduler admin panel using the latest Laravel Framework.\nBy the end of this course, you will acquire sufficient knowledge on:\nTask Scheduling\nEvents and Listeners\nModel notifications\n\n\nBy using Laravel, you not only can improve your development speed but you also deliver better looking projects.",
      "target_audience": [
        "This course is for developers who want to build an original project and learn about advanced Laravel topics like Events and Model Notifications"
      ]
    },
    {
      "title": "Build and Secure Restful APIs with Nodejs and MongoDB",
      "url": "https://www.udemy.com/course/build-and-secure-restful-apis-with-nodejs-and-mongodb/",
      "bio": "Learn how to build, secure and deploy RESTful Webservices with Node, Express, Mongoose, and PassportJs",
      "objectives": [
        "Learn how to build CRUD APIs with Nodejs and Mongoose",
        "Learn how to write documentation for the APIs using Swagger",
        "Learn how to add JWT authentication with ExpressJs and Passportjs",
        "Learn how to implement role based authentication",
        "Deploy Nodejs App to Heroku"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Javascript is required",
        "Basic Knowledge of Nodejs is required"
      ],
      "description": "A RESTful API is an application program interface (API) that uses HTTP requests to GET, PUT, POST and DELETE data.\n\nRESTful Web APIs allow developers to create modern applications by leveraging the data on the Internet. Since JavaScript is the language of the web, building APIs using Node.js provides a seamless development experience on both the front end and the back end.\nIn this course, we will build APIs for Music application. There are two roles(Artist, User) in our demo application.An artist can create/edit/delete the song. A user can view all the songs. A user can also create and view the songs playlist.\nYou will learn how to create the Apis for users, and artists. I will teach you how to add JWT authentication in Nodejs. I will also show you how to add role-based authentication in real-world application\n\nYou'll learn to:\nhow to setup the ES6 server with Nodejs\nLearn how to build CRUD(Create, Read, Update and Delete) APIs with Nodejs and Mongoose\nLearn how to write documentation for the APIs using Swagger\nLearn how to add JWT authentication with ExpressJs\nLearn how to implement role based authentication\nDeploy NodeJs API to Heroku\nThis course is for you if:\nYou’re a back-end developer who is used to working with frameworks like ASP.NET, Rails, Django, etc. You want to add Node.js to your toolbox.\nYou’re a front-end developer and want to transition to full-stack development.\nYou’ve tried other Node.js tutorials and found them to be too slow, out-of-date, and boring!\nHaving Node.js on your resume helps you find more jobs and make more money.",
      "target_audience": [
        "Anyone that wants to learn how to build & deploy REST apis with Node, Express & MongoDB",
        "You’re a back-end developer familiar with frameworks like ASPNET, Rails, Django, etc. Now, you want to add Node to your toolbox"
      ]
    },
    {
      "title": "Laravel-Livewire Chat-Message app (Realtime) from scratch",
      "url": "https://www.udemy.com/course/laravel-livewire-chat-message-application-realtime-2022/",
      "bio": "Build a realtime chat-message application for your Laravel website( beginner to Advanced) with step by step",
      "objectives": [
        "Create a realtime app chat with Laravel- Livewire",
        "Deliver our messages to other users in realtime without the need for them to refresh their own page using Laravel Broadcasting",
        "Send feedback when a message is has been read",
        "Show unread messages Count",
        "display ticks for our messages",
        "Transmit private messages and events in realtime"
      ],
      "course_content": {},
      "requirements": [
        "Student should have knowledge in PHP , Laravel , Livewire , CSS , HTML, JQuery, Javascript",
        "it would help if student also had knowledge in sass"
      ],
      "description": "Create a realtime 'one to one' responsive chat application that you can add to your Laravel-Livewire website , unlike other chat applications which use 'polling' , in this course we are going to use realtime broadcasting with Laravel so we deliver our messages in realtime to other users without the need for  them to  refresh  their own page .\nYou will also learn how to send feedback/notification when a user receives a message. All this in real time :)\nIn this course you will learn how to :\nSetup the Database structure of our Chat system\nCreate/start a new conversation with any  user\nImplement 'read & unread' messages count\nAdd ticks  on our messages\nUse the CSS super power SASS to design our chat component  :)\nMake our chat responsive on all devices ; Mobile ,Tablet ,desktop\nShare data between Livewire components\nReduce server requests by updating only a few parts of our Chat Component using Livewire features\n\n\nWho Should Take This Course?\nboth beginners and experienced Laravel web developers will benefit from this step by step set of tutorials. We will also be using some basic , JavaScript, and jQuery.\nStudents taking this course are required to have some basic knowledge in Laravel Livewire as it will be the core concept of our realtime front end architecture",
      "target_audience": [
        "This course is for those who already have basic knowledge in Laravel and Livewire, you can increase your knowledge and move a step further in your programming career by learning how to use realtime features in your web applications"
      ]
    },
    {
      "title": "Regular Expressions (Regex) with JavaScript - Easy and Fast!",
      "url": "https://www.udemy.com/course/javascript-regular-expressions-regex/",
      "bio": "Regex Mastery: Hands-On Pattern Detection, Input Verification, Security Enhancement, and Data Cleanup",
      "objectives": [
        "Data Validation - Validate Input and Protect from Security Vulnerabilities",
        "Pattern Detection - Look for occurrences of a pattern using a concise language",
        "Data Preparation - Locate and transform data of interest",
        "Learn Techniques to Write High-Performance Patterns",
        "Hands-on projects"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with JavaScript"
      ],
      "description": "Hi, and welcome to the JavaScript Regular Expressions (regex) with Projects!\nRegular Expression (regex) is a pattern detection language – they are typically used to search patterns in text, extract matching values, and data validation.\nRegex is supported in many programming languages, including Python, C#, JavaScript, Perl, SQL, and more.\nThis course is designed to provide hands-on experience with regular expressions through various exercises and projects\nI am Chandra Lingam, and I am your instructor.\nHere is what you will learn in this course\nInput Validation\nCross-Check Input and Protect from Security Vulnerabilities\nPattern Detection\nLook for occurrences of a pattern using a concise language\nData Preparation\nUse regex to locate and transform data of interest\nHigh Performance\nLearn Techniques to Write High-Performance Patterns\nHands-On\nYou will learn how to apply the regex for distinctly different data sets – unstructured log data, IoT sensor data, and parsing medical test data in HTML format\nRegex knowledge is very useful in the Cloud\nSeveral cloud services use regex for advanced configuration.\nWith the AWS web application firewall, you can allow or deny traffic based on a pattern\nIn Google Workspace, you can use regex for content filtering, Gmail route configuration, and to search for content in google docs\nIn Google Analytics, you can use regex to locate and transform matching data in your data set\nRegex is also supported by several products such as SAP, Oracle, and SQL Server\nRegex Knowledge is transferable to many programming languages!\nIncluded Resources: a High-Quality Cheat Sheet for Regex Language, Interactive Tool to Learn Regex, GitHub Repo for Source Code Distribution\nHappy Learning\nChandra Lingam\nCloud Wave LLC",
      "target_audience": [
        "Full Stack Developers",
        "Front End Developers",
        "System Administrators"
      ]
    },
    {
      "title": "Complete Custom Wordpress Website Freelancer in 2018",
      "url": "https://www.udemy.com/course/custom-wordpress-website/",
      "bio": "Be a Custom WordPress Website developer & start your own wordpress web development company. Buy it&Master Wordpress now!",
      "objectives": [
        "Create all kinds of commercial websites, using WordPress, to sell to clients",
        "Master the inner workings of WordPress, for fixing, troubleshooting, and building websites",
        "If you like the idea of creating an income on the side, learning to code custom WordPress websites with a framework like Bootstrap is a surefire way to get yourself some extra freelance gigs.",
        "This course is probably not for you if you don't like humour, fast-paced hands-on learning, or learning skills that can significantly improve your business or even change your life."
      ],
      "course_content": {
        "Section 0": [
          "Introduction",
          "Localhost and offline setup"
        ],
        "Start Here": [
          "Configuring Cpanel with Wordpress",
          "Setting up wordpress with quick tour",
          "Setting up Divi"
        ],
        "Section 2": [
          "Page Management",
          "Basic Tweakings",
          "Header & Footer Setup",
          "More Header & Footer Setting",
          "Custom Slider",
          "Parallax Effect",
          "4 section circle counter",
          "Productivity Trick & Call to action column",
          "Final Tweakings & button stylings"
        ],
        "Section 3": [
          "Fullwidth Gallery",
          "Rows & multiple image logic",
          "Custom shapes and corners of images",
          "Black & white effect with code",
          "Audio Video Music Gallery with download option"
        ],
        "Section 4": [
          "Ecommerce Pre requisites & UI",
          "Completing User Interface",
          "Adding product",
          "Another product logic",
          "Variation & Extra Options",
          "Downloadable product & Coupons"
        ],
        "Section 5": [
          "Product Referral",
          "Blog implementation with subscriber's box UI",
          "Mail Chimp Setup",
          "Completing Subscriber's form & SEO Skills"
        ],
        "Section 6": [
          "Contact us Page",
          "Final words & Where to go from here?"
        ]
      },
      "requirements": [
        "A working computer, either Windows or Mac.",
        "A modern browser like Chrome, Firefox, or Safari.",
        "Internet access for many of the lessons.",
        "You don't need any experience with programming languages like HTML or CSS but little knowledge would be great."
      ],
      "description": "Building a website is kinda a like painting a masterpiece & it can show you much better result if you know what you are exactly doing with Custom Wordpress Development & it's a best time to build an income and a business around it because 25% of websites around the world are using wordpress these days.\n\nYou're here because you want to master WordPress, right? Good idea.\nYou're in the right place. And, you can do it without learning any\nprogramming or coding.\nWhy am I qualified to teach you?\n\nThrough this course, I'll teach you everything I've learned and mastered through 10 years of web development business with great companies & online projects that i have received from fiverr, upwork & freelancer.\nMany of my best and biggest clients have come from \"abandoned\" WordPress websites, where the client's website designer or developer has left the scene. My ability to get in and restore, fix, redesign, and continue to manage WordPress websites brings me lots of instant and recurring income.\nYou'll learn how to do all this in just 3 hours of easy-to-follow video content, fun lessons and challenges.\nDuring this course, you'll learn everything you need to know to start or improve your own WordPress website business.\nBy spending zero-to-little money, you can stand on the shoulders of\nthose who came before you, to create your own business niche, by\nlearning the skills and secrets presented in this course.\nCurriculum of this custom wordpress web development course :-\n\n\nLearn to set up local development environments to play with Wordpress websites in private, on your own computer.\nPage Management\nCustom Header & Footer Setup\nCustom Slider, Parallax effect & Button Styling\n4 section circle counter\nFullwidth Gallery\nRows & multiple image logic\nCustom shapes and corners of images & Black & white effect\nAudio Video Music Gallery with download option\nEcommerce Pre requisites & UI\nECommerce and WordPress: using WooCommerce to build a webstore, and using Custom Post Types within WooCommerce.\nCustomizing Account, Cart, and Checkout pages.\nShipping and Digital Delivery.\nBlog implementation with subscriber's box linked with mailchimp\nContact Us Page\nSEO Skills",
      "target_audience": [
        "Those interested in learning to build custom wordpress websites",
        "Those interested in becoming a successful freelancer as a web developer",
        "Those who wish to develop custom wordpress website without writing code",
        "This course is for those students who wish to start a web development business on the side, or full-time as a work-from-home freelancer."
      ]
    },
    {
      "title": "Next.js Authentication System ,Learn Next JS 13 From Scratch",
      "url": "https://www.udemy.com/course/next-js-authentication-system-learn-next-js-13-from-scratch/",
      "bio": "Learn Next JS v13 by Building a FullStack Authentication Project From Scratch",
      "objectives": [
        "React vs Next",
        "Comparing Next JS 13 with Previous Versions",
        "Server Components and Client Components",
        "Disadvantages of server components and how to overcome those by using child client components",
        "Full stack Authentication System From Scratch",
        "Handling JWT Tokens , Sessions , Cookies , Headers etc.",
        "Working with email verification functionality and password reset functionality",
        "Protected Pages and API routes with middlewares"
      ],
      "course_content": {
        "Introduction": [
          "Promo & Github Repo",
          "Introduction & Creating Next APP"
        ],
        "Routing": [
          "Creating Routes",
          "Creating Nested Routes",
          "Layouts"
        ],
        "Rendering": [
          "Server Components vs Client Components",
          "Rendering Examples",
          "Interactions in Server Components"
        ],
        "Authentication Forms": [
          "Code Cleanup and Layout Fix",
          "Register Form",
          "Login Form"
        ],
        "API Routes": [
          "Get Requests",
          "Post Requests"
        ],
        "Database Connection": [
          "Mongo DB Connection",
          "User Model"
        ],
        "Register API": [
          "Register API"
        ],
        "Toast Messages and Loaders": [
          "Showing Loader / Spinner",
          "Showing Toast Messages"
        ],
        "Login API": [
          "Login API",
          "Sending JWT Using Cookies"
        ],
        "Middlewares and Protected API Endpoints": [
          "Next JS Middleware",
          "Protected API Endpoints"
        ]
      },
      "requirements": [
        "React",
        "Next JS Basics"
      ],
      "description": "Hello , Welcome to the course Next JS Authentication System ,Learn Next JS 13 From Scratch\n\n\nIn this comprehensive course on building authentication systems with Next.js 13, you will learn everything you need to develop secure and scalable authentication for your Next applications.\nWe will start by covering the fundamentals of Next.js, comparing Next.js 13 features to Next.js 12 and React, explaining key concepts like routing, rendering and API routes.\nThe course then dives into advanced Next.js topics like handling HTTP headers, cookies, and local storage - essential knowledge for authentication.\nNext, we will build a full authentication system with features like:\n• User login and registration forms\n• Checking for duplicate users during registration\n• Securing routes with JWT tokens\n• Implementing email verification\n• Password reset functionality\n• Middleware for protected routes\nYou will learn how to manage user sessions, issue and verify JWT tokens, and restrict access to certain pages and APIs based on authentication. We will use industry best practices and discuss trade-offs of different approaches.\nBy the end of the course, you'll have a strong foundation in Next.js and the skills to build robust authentication systems for your own Next applications from scratch. You'll be able to securely manage user accounts and tokens, and restrict access to sensitive data and functionality.\n\n\nNext.js 13 is the latest version of the popular React framework. It was released on March 8, 2023, and includes a number of new features and improvements.\nHere are some of the highlights of Next.js 13:\nNew Image component: The new Image component makes it easier to display images without layout shift and optimize files on-demand for increased performance.\nNew Font system: The new Font system automatically optimizes your fonts, including custom fonts. It also removes external network requests for improved privacy and performance.\nNew App Router: The new App Router provides a more flexible and powerful way to manage routing in your Next.js application.\nImproved performance: Next.js 13 includes a number of performance improvements, including faster image loading and improved hydration.\nIf you're using Next.js, I recommend upgrading to version 13. It's a major release with a number of great new features and improvements.\nHere are some additional details about the new features in Next.js 13:\nNew Image component: The new Image component is a major improvement over the previous Image component. It supports native lazy loading, which means that images are only loaded when they are visible on the screen. This can significantly improve performance, especially on mobile devices. The new Image component also supports automatic image optimization, which can further improve performance.\nNew Font system: The new Font system is a major improvement over the previous font system. It automatically optimizes your fonts, including custom fonts. It also removes external network requests for improved privacy and performance. The new Font system also supports automatic self-hosting for any font file. This means that you can host your fonts on your own server, which can further improve performance.\nNew App Router: The new App Router is a major improvement over the previous router. It provides a more flexible and powerful way to manage routing in your Next.js application. The new App Router supports nested routes, dynamic routes, and more.\nImproved performance: Next.js 13 includes a number of performance improvements, including faster image loading and improved hydration. Hydration is the process of converting a server-rendered page into a client-rendered page. Next.js 13 has improved hydration performance, which can lead to a smoother user experience.\nIf you're using Next.js, I recommend upgrading to version 13. It's a major release with a number of great new features and improvements.",
      "target_audience": [
        "Students who want to learn full-stack applications with Next JS",
        "Students who want to perceive their carrier in web developent",
        "MERN Stack Developers",
        "Front End Developers"
      ]
    },
    {
      "title": "Building Gutenberg Blocks in WordPress. No JS required!",
      "url": "https://www.udemy.com/course/building-gutenberg-blocks-in-wordpress-no-js-required/",
      "bio": "Using Advanced Custom Fields, you can build custom blocks no matter your skill level",
      "objectives": [
        "Build custom Gutenberg blocks",
        "Build blocks into a plugin for use on multiple sites",
        "Add custom fields to blocks using Advanced Custom Fields Pro",
        "Use several of the Advanced Custom Fields field types to build dynamic blocks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Building Blocks": [
          "Requirements / Local Setup",
          "Creating Your First Block",
          "Adding Basic Styles",
          "Adding Default Style Options",
          "Using A Theme's Default Colors",
          "Creating An ACF Field Group",
          "Cloned Field Groups",
          "Render ACF Fields In Your Block",
          "Adding Images To Blocks",
          "Using Repeater Fields In Your Blocks",
          "Customizing The Block Icon",
          "Block Categories",
          "Inner Blocks"
        ],
        "Wrapping Up": [
          "In closing"
        ]
      },
      "requirements": [
        "You'll learn what you need during the course, but some prior PHP and WordPress development experience will be helpful. You'll also need a license for Advanced Custom Fields Pro."
      ],
      "description": "The Gutenberg editor in WordPress is an absolute game changer. For users, it provides them an easy way to build out the content on their site in new and exciting ways. And, for developers, it's a powerful tool that can be used to provide clients custom blocks to match their every need.\n\n\nI don't know about you, but JavaScript is still outside of my comfort zone. So, when WordPress made the switch to the block editor (formerly called Gutenberg), I was really concerned about how it would limit my ability to build the things I need to build for myself and for my clients. But, once I found a way to build custom blocks without the need for JavaScript, I was very excited!\nIn this course, I'll walk you through the process of building custom blocks in WordPress without writing a single line of JavaScript.\nThe course will cover:\n- What you need for local development\n- Creating your first block\n- Styling your blocks\n- Adding custom fields to your blocks\n- Rendering your blocks\n- Building blocks with images\n- Adding repeater fields to your blocks\n- Customizations to make your blocks stand out\n- How to add inner blocks to your blocks.\nIf you've struggled in the past to build Gutenberg blocks in WordPress, jump into this course and you'll be building blocks in no time!",
      "target_audience": [
        "Beginner to intermediate WordPress developers who want to build blocks easily."
      ]
    },
    {
      "title": "Concurrent Rendering Adventures in React 18",
      "url": "https://www.udemy.com/course/concurrent-rendering-adventures-in-react-18/",
      "bio": "Learn all about the how and why of concurrent rendering in React 18",
      "objectives": [
        "The how and why of concurrent rendering in React 18",
        "Coordinating suspense boundaries with the <SuspenseList /> component",
        "Using the startTransition() API",
        "Using the useTransition() hook"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "<Suspense />",
          "<Suspense /> & Errors",
          "Nesting <Suspense />",
          "Parallel <Suspense />",
          "Switching to React 18",
          "New hooks",
          "Using <SuspenseList />",
          "Concurrent Mode",
          "Using startTransition()",
          "Using useTransition()",
          "<Suspense /> & Transitions",
          "Using useDeferredValue()",
          "Conclusion"
        ]
      },
      "requirements": [
        "A basic understanding of React"
      ],
      "description": "Are you building React applications that sometimes render a bit slowly? And looking at React 18 Concurrent Rendering to speed things up? If so, you're in the right place. In this course, I will guide you through the exciting new world of concurrent rendering and all the other changes that come with React 18.\n\n\nMy name is Maurice de Beijer and I am a seasoned React developer with years of experience using and teaching React. I have seen quite a few transitions in the React API, from React.createClass() to the ECMAScript 2015 React.Component, from there to functional React components, and then to hooks. And now, I am excited to share my knowledge of the latest features in React 18 with you.\n\n\nIn this course, we will cover everything you need to know about concurrent rendering in React 18. We will start with an overview of what concurrent rendering is and why it's important. From there, we will dive into the different features of concurrent rendering, including <SuspenseList />, the startTransition() API, and the useTransition() hook. You will see how easy it is to switch to concurrent rendering in your React application and you will learn how to use these new features to improve the performance of your application.\n\n\nBut that's not all, we will also cover the behavior changes you need to be aware of when upgrading your application to React 18. Whether you're new to React or an experienced developer, this course will provide you with all the knowledge you need to take advantage of the latest features in React 18.\n\n\nSo, if you're ready to take your React skills to the next level and upgrade your applications to React 18, join me in this interactive course. With my guidance, you will learn how to use concurrent rendering to improve the performance of your application and take advantage of all the other new features in React 18.",
      "target_audience": [
        "React developers looking to upgrade their applications to React 18",
        "Developers wanting to understand how concurrent rendering can help fix performance problems"
      ]
    },
    {
      "title": "Node.js Basic To Advance",
      "url": "https://www.udemy.com/course/nodejs-basic-to-advance/",
      "bio": "Node.js Basic To Advance With Node js Apis and Real time chat application",
      "objectives": [
        "Master Node.js Fundamentals: Gain a strong understanding of Node.js core concepts, including its event-driven architecture, asynchronous programming, and module",
        "Build Scalable Web Applications: Learn how to create and deploy robust server-side applications using Node.js, Express.js, and related frameworks.",
        "Work with Databases: Integrate Node.js with databases like MySQL to build dynamic, data-driven applications/apis.",
        "Understand RESTful APIs: Develop the skills to design and implement RESTful APIs, enabling communication between server and client applications."
      ],
      "course_content": {
        "Introduction": [
          "Understanding ECMAScript",
          "Exploring Chrome's V8 Engine",
          "Unveiling the JavaScript Runtime",
          "What is Node.js?",
          "Creating Your First Node.js Application",
          "Comparing Browser and Node.js"
        ],
        "Modules": [
          "Modules In Node.js",
          "Local Modules",
          "Module Exports",
          "Module Scope",
          "Module Wrapper",
          "Module Caching",
          "Import Export Patterns",
          "Module.Exports vs Exports",
          "ES Modules",
          "Importing JSON and Watch Mode",
          "Built-in Modules",
          "Path Module",
          "Callback Pattern",
          "Events Module",
          "Extending from EventEmitter",
          "Character Sets and Encoding"
        ],
        "Streams and Buffer": [
          "Streams and Buffers",
          "Asynchronous JavaScript",
          "fs Promise Module",
          "Streams",
          "Pipes",
          "HTTP Module"
        ],
        "Creating a Node Server": [
          "Creating a Node Server",
          "JSON Response",
          "HTML Response",
          "HTML Template",
          "HTTP Routing",
          "Web Framework",
          "Node Runtime Recap"
        ],
        "Event Loop": [
          "libuv",
          "Event Loop",
          "Microtask Queues",
          "Timer Queue",
          "I/O Queue",
          "Check Queue",
          "Close Queue"
        ],
        "What is npm": [
          "What is npm ?",
          "Package.json",
          "Installing Packages",
          "Using Packages",
          "Dependencies",
          "Versioning",
          "Global Packages"
        ],
        "npm Scripts": [
          "npm Scripts",
          "Publishing an npm Package",
          "Building CLI Tools",
          "CLI Options",
          "Interactive CLI Tools",
          "Deploying Node.js App",
          "Wrapping Up"
        ],
        "Node JS Services with MySQL": [
          "Connection with database",
          "Setup a Server",
          "Fetching a list of employees",
          "Global error handling",
          "Prepared Statement",
          "Delete a record",
          "Store Procedures"
        ],
        "Node JS Real Time Chat App": [
          "Building Your First Node.js Server: A Step-by-Step Guide",
          "Establishing Connections: How to Link with Your Node.js Server",
          "Building Message-Sending Features with Node.js",
          "Enhancing UI with Node.js",
          "Identifying Message Senders with Names",
          "Finishing Up Your Node.js Chat App"
        ]
      },
      "requirements": [
        "Basic Javascript"
      ],
      "description": "This comprehensive Node.js course is designed to equip you with all the knowledge and skills necessary to master the platform and become a professional Node.js developer. Whether you're just starting out or already have some experience, you'll gain a deep understanding of Node.js's core concepts and advanced features, enabling you to build fast, scalable, and efficient applications.\nWhat You'll Learn:\nStreams and Buffers: Dive into the world of streams and buffers to efficiently manage data flow and optimize performance, a crucial skill for handling large data sets and file systems in Node.js.\nAsynchronous Programming: Learn to write asynchronous code using callbacks, promises, and async/await. This essential skill ensures your applications are fast and non-blocking, which is critical for handling multiple requests and operations simultaneously.\nThread Pools in Node.js: Understand how Node.js utilizes thread pools to manage and execute multiple tasks concurrently, helping you maximize performance and responsiveness in your applications.\nThe Event Loop: Get an in-depth look at the Node.js event loop, the heart of how Node.js handles asynchronous operations. You'll understand how the event loop works to manage and prioritize tasks efficiently.\nPublishing Packages on npm: Become a contributor to the Node.js ecosystem by learning how to package, version, and publish your own Node.js modules on npmjs , the world's largest software registry.\nReal-World Project:\nBy the end of this course, you’ll be able to create robust Node.js APIs connected to a MySQL database, ensuring your back-end systems are both dynamic and secure. To showcase your new skills, you will build a real-time chat application, utilizing WebSockets and Node.js to enable real-time communication between users.\nThis course will give you everything you need to succeed as a Node.js developer, with hands-on projects and real-world applications. Join us today and take your Node.js skills to the next level!",
      "target_audience": [
        "This course is ideal for aspiring developers, tech enthusiasts, and professionals looking to expand their knowledge of Node.js."
      ]
    },
    {
      "title": "Webpack 4 - First Steps",
      "url": "https://www.udemy.com/course/webpack-4-first-steps/",
      "bio": "Use Webpack to bundle and automate a lot of regular JavaScript workflow task and become a powerful JS developer!",
      "objectives": [
        "Introduction to Webpack",
        "Various webpack options provided",
        "Creating production ready apps with webpack",
        "Configuring webpack from scratch",
        "Adding custom loaders and plugins"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Webpack",
          "Webpack vs Grunt",
          "Webpack Hello World on zero configuration"
        ],
        "Webpack basic options": [
          "Config introduction",
          "Webpack mode",
          "Multiple entry points and basic usage"
        ],
        "Explaning output option": [
          "fileName",
          "path",
          "Available placeholders",
          "publicPath",
          "library and libraryTarget"
        ],
        "Webpack dev server": [
          "Webpack dev server",
          "devServer writeToDisk",
          "Hot reloading"
        ],
        "Plugins": [
          "Intro to plugins",
          "Setting up cool plugins with webpack"
        ],
        "Loaders": [
          "Introduction",
          "Adding a loader"
        ],
        "Webpack project": [
          "Intro to project",
          "Setting up project dependencies",
          "Writing loader configuration",
          "Setting up tsconfig.json",
          "Hello World with custom configuration",
          "Creating a simple calculator project",
          "Adding hot module replacement to it",
          "Aliases in webpack",
          "Creating production build",
          "Final words"
        ]
      },
      "requirements": [
        "JavaScript (ES6 basics)",
        "HTML",
        "CSS"
      ],
      "description": "Webpack is a module bundler which is much more than just a bundler. It allows you to automate a lot of moving pieces of your project (like prefixing CSS styles, optimizing bundles, writing in TypeScript and Sass and compiling down to browser version, etc.)\nIn this complete series, we're going to get hands on experience with Webpack and how to start working on real projects using Webpack as the technology.\nOnce configured, webpack gives you to ability to truly focus only on the code quality you write and leave rest of the optimization and code work on it. However it is important to configure it correctly and know at every moment which configuration does what. In this whole series, we're going on a joy ride with webpack.",
      "target_audience": [
        "Anyone who is looking to upgrade his web development skills",
        "Anyone who wants to be a full stack developer",
        "Anyone who likes working with cool automated tools"
      ]
    },
    {
      "title": "Learn Ruby on Rails for Absolute Beginners",
      "url": "https://www.udemy.com/course/learn-ruby-on-rails-for-absolute-beginners/",
      "bio": "This course will get you started with Ruby on Rails programming quickly and easily.",
      "objectives": [
        "Understand Basic Principles of Ruby on Rails Programming",
        "Run your First Ruby on Rails Application",
        "Run Ruby Interactively at the Command Prompt"
      ],
      "course_content": {},
      "requirements": [
        "The course is Suitable for Anyone Who has Some Programming Knowledge",
        "Installation Rails Framework is Required",
        "You need to have some grasp of basic Object Oriented Programming",
        "For Windows OS You will have to install Ruby"
      ],
      "description": "This Ruby on Rails programming Course is, suitable for anyone who wants to use Ruby on Rails for any purpose. Whether you intend to use Ruby for Rails development, at the command line, or for writing GUI applications, or developing database enabled web applications, this is the place to start.\nThe course consists of nearly four hours of training with 6 sections in total. We only assume that you have some grasp of basic Object Oriented Programming (what classes and objects are and how to use them). You will learn:\n- How to set up Ruby on your computer (you may already have it!)\n- How to create Ruby source code\n- Running Ruby interactively at the command prompt\n- Variable and constant syntax\n- Control structures (loops and if statements)\n- Arrays and how to use them\n- Ruby method definitions\n- Classes and objects in Ruby\n- Implementing inheritance\n- Method access in Ruby\n- Model / View / Controller\n- Creating a new Rails app\n- Creating an app with a scaffold\n- Embedding Ruby in HTML\n- Adding & Deleting the contact to the database\n- Linking from the home page to the contacts index\n- And many more\nRuby is is both unique and elegant. This course will get you started with Ruby on Rails programming quickly and easily. The course is broken into simple digestible steps. We take a hands-on \"learn by doing\" approach and our focus is to make you productive right from go!\nThis course is for newbie programmers or developers who want to get up to speed with the most popular language of the moment.\nThe course is suitable for anyone who has some programming knowledge. Ruby on Rails is fun to learn, and a very powerful for any serious programmer. I hope you join us.",
      "target_audience": [
        "Suitable for Anyone Who Wants to Learn Ruby on Rails",
        "Those who Know Ruby on Rails Programming but wish to Brush up their Skills"
      ]
    },
    {
      "title": "Vue 3 Fundamentals | Beginners Guide 2023",
      "url": "https://www.udemy.com/course/vue-3-crash-course-project-from-scratch/",
      "bio": "Learn the basics of Vue 3 & the Composition API through a project based course.",
      "objectives": [
        "What is Vue 3?",
        "Why use Vue?",
        "Why choose Vue over other frontend frameworks?",
        "Build a Vue 3 CRUD application from scratch using the official vue build tool"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Prerequisites"
        ],
        "Vue Introduction": [
          "What is Vue?",
          "Why Use Vue Over a Vanilla Javascript application?",
          "Why Use Vue Over Other Frontend Frameworks?",
          "Vue Single File Components",
          "Vue Introduction"
        ],
        "Creating & Exploring a Vue Project": [
          "GitHub Repository",
          "Create Vue Project",
          "How Does Vue Work?",
          "Overview of a Vue Project"
        ],
        "Todo Project Build": [
          "Project Cleanup",
          "Install Project Dep",
          "Setup Global Styles",
          "Navigation Component",
          "Todo Creator Component",
          "Emit Custom Event From Todo Creator Component",
          "Todo Validation",
          "Button Component With Slots",
          "Todo Item Component",
          "Complete Todo",
          "Edit Todo",
          "Delete Todo",
          "Save & Retrieve Todo's To/From LocalStorage",
          "Alternative Way To Update Todo's To Local Storage ( watch() )",
          "Completed Todo State ( computed() )",
          "Creating New Routes"
        ],
        "Conclusion": [
          "Deploy Vue Application To Netlify",
          "What's Next?"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CSS & JavaScript",
        "Asynchronous JavaScript would be helpful, but not required",
        "ES6 Knowledge would be helpful, but not required"
      ],
      "description": "Learn the basics of Vue 3 & the Composition API through a project-based course.\n\n\nAbout me:\n\n\nMy name is John Komarnicki. I'm a full-time Vue.js developer. Over the past 3 years, I've been using Vue to build production applications.\n\n\nI've put this course together to serve as an entry point to learning Vue 3 & the Composition API\n\n\nWhat will we cover?\n\n\nUsing the latest version of Vue 3 with Vite, we will cover the fundamentals of Vue 3 by building a modern CRUD (Create, Read, Update and Delete) todo tracking application.\nWithin this 2 hour course, you'll learn about\nSetting up a Vue application using the official Vue build tool.\nStructure of a Vue application and How Vue works\nCore Vue 3 fundamentals such as reactive data, special vue directives, reusable components, vue routing basics, and much more by building a CRUD todo application using Vue 3's Composition API\nDeploying a Vue application to Netlify\n\n\nWhether you're brand new to Vue or just looking for a refresher by the end of this course, you'll be in a great place to start building vue applications!\n\n\nThis course requires a basic understanding of HTML, CSS & JavaScript.\n\n\nPlease check out the preview videos & I look forward to seeing you in the course.",
      "target_audience": [
        "Anyone looking to learn the basics of vue"
      ]
    },
    {
      "title": "Sales Force Developer: Artificial Intelligence For Beginners",
      "url": "https://www.udemy.com/course/sales-force-developer-artificial-intelligence/",
      "bio": "Sales Force Developer Artificial Intelligence, Apex Programming, and Analytics Hand-on Training - Learn AI Skills",
      "objectives": [
        "You will learn how Einstein Platform Services Artificial Intelligence works in Sales force",
        "Understand core concepts of Sales force AI",
        "Learn fundamentals of Apex programming language",
        "Learn how to use Eclipse IDE with Sales force IDE",
        "Understand Einstein Analytics to Predict Intent",
        "Learn Hands-on with Real World projects",
        "Learn Visual force",
        "Learn Apex triggers and Custom Objects",
        "Install Force IDE Within Eclipse IDE",
        "Learn Einstein Intent and Sentiment (Image Classification) Prediction"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course Agenda",
          "Understand Sales force Artificial Intelligence - Intent & Sentiment",
          "Basics of Artificial Intelligence Vis-aVis Sales force",
          "Creating Sales force Developer Accounts - Know Account Types"
        ],
        "Setting the Stage - Introduction": [
          "What is Apex?",
          "Importing Sample Data",
          "Download Eclipse IDE",
          "Installing Force.com in Eclipse IDE"
        ],
        "Setting Up IDE Integration with Sales force (Eclipse & Force.com)": [
          "Synchronize Additional Metadata Components",
          "Understanding Force.com IDE Within Eclipse IDE"
        ],
        "Einstein Artificial Intelligence & Analytics": [
          "Enabling Einstein Analytics",
          "Einstein Platform Services – RSA Private Key",
          "Downloading cURL",
          "Creating OAuth2.0 Token",
          "Using Cygwin For cURL"
        ],
        "Project 1: All Details - Step By Step Details - Concept and Application": [
          "Project1-Step1: Understanding Data/CSV File",
          "Project 1-Step 2: Create & Verify Data set",
          "Project 1-Step 3: Train Data set",
          "Project 1-Step 4: Get Training Response from Data set",
          "Project 1: Recap"
        ],
        "Project 2: Einstein Artificial Intelligence Real World Scenario": [
          "New Project from Scratch – Complete Run Through"
        ],
        "Project 3: AI Using Sentiment Image Classification": [
          "Project 3: Step 1- Creating Remote Site",
          "Project 3: Steps 2 - 4 Complete Walkthrough"
        ],
        "Conclusion & Resource Section": [
          "Complete Source Code and Other Valuable Resources"
        ]
      },
      "requirements": [
        "Working knowledge of JSON is desirable but not required",
        "Basics of Java, Python or any Object Oriented Language is required",
        "Fast Internet Connection",
        "Tech Savvy",
        "Knowledge of cURL is desirable but not required",
        "Understanding of cURL syntax is desirable but not required"
      ],
      "description": "Artificial Intelligence (AI) is the future\nIn the world of Big Data and Cloud Computing - Learn Sales Force Developer: Artificial Intelligence For Beginners step-by-step, complete hands-on Sales force developer training with respect to Einstein Artificial Intelligence.\nCourse Description\nAre you a Sales force Developer or a Web Developer and want to gain intermediate and advanced skills and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to Sales Force Developer: Artificial Intelligence For Beginners - A one of its kind course\nIt is not only a comprehensive course, you are will not find a course similar to this. The course gradually builds upon core concepts and then practical application by means of hand-on tutorials With over 2.5 hours of solid hand-on instruction.\nIt’s our most current, in-depth and exciting sales force developer on new technologies course to date.\nIn this AI course, you'll learn and practice:\nEssential Sales Force Developer Skills\nLightning Force Techniques\nEinstein Analytics platform & API\nApex Programming language\nVisual Force Pages\nEclipse IDE\nForce IDE\nEinstein Intent and Sentiment including using AI to predict Natural Language Process (NLP) text and Einstein Sentiment (Image Classification), and much more.\nYou will also get complete Source Code with this course! We've built this course with our Team ClayDesk of industry recognized developers and consultants to bring you the best of everything!\nSo, if you would like to:\nbecome an in-demand and reach new heights as Sales Force Developer and developer for software companies\nstart your freelancing career, setting your own schedule and rates\nsharpen your core Sales Force Lightning skills to reach the advanced level\ngain marketable skills as an advanced Java programmer and developer\nthis Sales Force developer course is exactly what you need, and more. You’ll even get a certification of completion\nWhat our students say:\nWe walk you through the basics and gradually build your knowledge with real world application and projects\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all new technologies including Sales force artificial intelligence, lightning force, apex programming, and analytics, and I would without a doubt recommend it to anyone looking for a complete AI course.” Michael Durand\n“This is such an awesome course. I loved every bit of it – Awesome learning experience!” Ahsan Shah.\nJoin thousands of other students and share valuable experience\nEnroll now in Sales Force Developer: Artificial Intelligence For Beginners today and revolutionize your learning. Start building powerful AI apps and cash-earning programs today and enjoy bigger, brighter opportunities.\nReady to open new doors and become a smart, in-demand Sales force developer, Apex programming language, Visual force developer, lightning force or an Enterprise Architect? You do need to put effort though\nWhy take this course?\nIf you’re currently thinking of advancing your skills and career into the world of Artificial Intelligence, and advancing your career as a Sales Force Developer, then this is the right course for you. If you wish to get an advanced flavor of How Sales Force uses Artificial Intelligence, this is the right course for you. If you wish to gain additional experience, this is the right course for you. If you are an existing Java, Python or any other developer and want to learn AI, then this is the right course for you. If you want to get a high paying job or advance your existing skillet in programming, this is the right course for you\nEnroll now, and I will see you in class.\nSyed and Team ClayDesk",
      "target_audience": [
        "Sales force Developers interested in Artificial Intelligence",
        "Sales force Administrators and Architects",
        "Web Developers",
        "Java programmers and developers",
        "Freelancers wanting to increase their offerings to customers",
        "Anyone who want to earn Sales force certification",
        "Anyone interested in learning Sales force Einstein Artificial Intelligence (ai)"
      ]
    },
    {
      "title": "Spring Framework - Social SignIn, PayPal, JMS, Velocity",
      "url": "https://www.udemy.com/course/advanced-spring-framework/",
      "bio": "Spring MVC, Social SignIn, PayPal, URL Rewrite, Responsive Web Template, Spring Security,Apache Velocity, JMS, Cron Job",
      "objectives": [
        "You will be able to integrate free responsive template.",
        "You will be able integrate Social SignIn with Twitter, Google+ and LinkedIn.",
        "You will learn about URL rewrite to form custom URLs using Spring MVC.",
        "You will be able to integrate PayPal payment gateway.",
        "You will learn Apache Velocity to send out mails using HTML template.",
        "You will learn to implement Cron Job Using Spring Framework.",
        "You will learn Java Messaging Service (JMS) using Spring JMS Template and Spring MVC."
      ],
      "course_content": {
        "Responsive Design Template Integration": [
          "Getting Free Responsive Template",
          "Configuring Responsive Template",
          "Responsive Template In Action"
        ],
        "Social Sign In": [
          "Introduction",
          "Social Sign In Project Set Up"
        ],
        "Sign In With Twitter": [
          "Create Twitter App",
          "Redirecting User To Twitter",
          "Get User's Twitter Profile",
          "Spring Security Along With Sign In With Twitter"
        ],
        "Sign in With Google+": [
          "Create Google+ App",
          "Redirecting User To Google+",
          "Get User's Google+ Profile",
          "Spring Security Along With Sign In With Google+"
        ],
        "Sign in With LinkedIn": [
          "Create LinkedIn App",
          "Redirecting User To LinkedIn",
          "Get User's LinkedIn Profile",
          "Spring Security Along With Sign In With LinkedIn"
        ],
        "More On Social Sign In": [
          "Final Words On Social Sign In"
        ],
        "URL Rewrite With Spring MVC": [
          "Introduction To URL Rewrite",
          "Configuration For URL Rewrite",
          "URL Rewrite In Action"
        ],
        "PayPal Payment Gateway Integration": [
          "Introduction To PayPal",
          "Create PayPal App",
          "Project Set Up For PayPal",
          "Redirecting User To PayPal",
          "Payment Execution"
        ],
        "Deployment To Pivotal Cloud Foundry (PCF)": [
          "Introduction To Pivotal Cloud Foundry (PCF)",
          "Creating Account On Pivotal Cloud Foundry (PCF)",
          "Creating MySQL Service On Pivotal Cloud Foundry (PCF)",
          "Deploying Spring MVC Application To Pivotal Cloud Foundry (PCF)"
        ],
        "Apache Velocity": [
          "Introduction To Apache Velocity",
          "Project Set Up For Velocity",
          "Create Velocity Template",
          "Rendering Velocity Template",
          "Velocity In Action"
        ]
      },
      "requirements": [
        "Prior Knowledge Of Java Required.",
        "Prior Knowledge Of Spring MVC and Its Concepts Required."
      ],
      "description": "***** Some Reviews From Students *****\nIt's amazing course. It has covered very good topics. The way instructor is teaching is too much perfect. Deployment to pivotal cloud foundry is amazing. Loved it and recommending all to take it.\ngood exp..\n\n\nThis course will help you to implement many functionalities that we use in daily routine.\nYou may have visited responsive websites so here you will learn how you can integrate free responsive template using Spring MVC and Apache Tiles.\nYou might be using Sign In with Twitter, Google+ OR LinkedIn. So Here you will learn how you can provide this feature using Spring MVC and Spring Security.\nYou will learn URL rewrite for URL customization and making it SEO friendly.\nTo enable your website for online transactions using PayPal payment gateway then here you will learn it step by step.\nYou will learn Apache Velocity to send out mails using HTML template for better user experience.\nYou will learn to implement Cron Job Using Spring Framework.\nYou will learn Java Messaging Service (JMS) using Spring JMS Template and Spring MVC.\nYou will learn FREE Deployment of your Spring MVC Application along with MySQL database to Pivotal Cloud Foundry (PCF).",
      "target_audience": [
        "Anyone having prior knowledge of Spring MVC and Java."
      ]
    },
    {
      "title": "The Complete JavaScript Made Easy 2025: From Zero to Expert!",
      "url": "https://www.udemy.com/course/the-complete-modern-javascript-course/",
      "bio": "Modern JavaScript course for everyone! Learn with project, exercises and solutions! A must have JS Course",
      "objectives": [
        "Understanding the foundation, the fundamental and advanced concepts in Modern JavaScript",
        "Learn and become a sought-after confident modern JavaScript developer",
        "Understand how to write solid JavaScript Code",
        "Understand the WHY, HOW and WHAT in JavaScript Code",
        "Learn and apply the best practices while programming in JavaScript",
        "Learn how to spot errors in other people's code, avoid their common mistakes",
        "Become job-ready by understanding how JavaScript really works behind the scenes",
        "Learn JavaScript from Zero to Advance",
        "Learn complex concepts in easy way",
        "Get fast and friendly support in the Q&A area"
      ],
      "course_content": {},
      "requirements": [
        "No requirements are needed to take this course. I will teach you JavaScript from scratch, starting from the basics.",
        "This JavaScript course will take you from zero to hero in JavaScript programming"
      ],
      "description": "WHAT IS JAVASCRIPT?\nJavaScript is one of the most popular programming languages in the world. While it's primarily known as a scripting language for web pages, its versatility extends far beyond that. JavaScript can be used for front-end web development, back-end development, mobile app development, game development, desktop applications, real-time networking apps, command-line tools, and browser add-ons. Its flexibility makes it an essential skill for modern developers.\n\nWHY SHOULD YOU LEARN JAVASCRIPT?\nIt is the most popular programming language globally. It is essential for front-end, back-end, full-stack, and game development. The average annual salary for a JavaScript developer is $84,000. Top companies like Google, Facebook, Netflix, PayPal, Uber, eBay, and Microsoft rely heavily on JavaScript. A solid foundation in JavaScript can transform your career.\n\nWHY THIS COURSE?\nThis course makes JavaScript easy, covering everything from beginner to advanced levels. There is no fluff or unnecessary repetition, and the content goes straight to the point. Clear, concise, and practical training ensures you start coding immediately. The teaching style is engaging, avoiding boring or outdated content. You will learn how to think like an expert developer, spot errors efficiently, and solve problems effectively. The course includes up-to-date HD-quality videos, access to all course codes, and free support in the Q&A section. You'll learn from an expert who is passionate about teaching. The course provides hands-on coding exercises, examples, and solutions, detailed explanations of concepts, and flexible self-paced learning. A certificate of completion is provided to boost your professional credentials, and you will have unlimited access to the content.\n\nWHAT OTHER STUDENTS SAID\nI like the way Donatus explains the concept on a whiteboard, very concise. — Gandhi Sakyi\nGreat course. I enjoyed the mixed methods of using the board to explain first and showing the practicality. — Richard Benson\n\nNO PRIOR KNOWLEDGE NEEDED\nThis course is designed for absolute beginners. I'll guide you step-by-step from the basics to advanced JavaScript programming concepts.\n\nWHAT ARE YOU WAITING FOR?\nAre you ready to master JavaScript in a way you'll never forget?\nClick the Enroll Now button and join me on this exciting journey from Zero to Hero in JavaScript Programming.\nWith Udemy's 30-day money-back guarantee, you have nothing to lose and everything to gain!",
      "target_audience": [
        "Anyone who want to use JavaScript",
        "Anyone who want to understand the in and out of JavaScript and apply it",
        "New and Existing developers who want to solidify their knowledge of JavaScript"
      ]
    },
    {
      "title": "PHP Development with the Laravel Framework",
      "url": "https://www.udemy.com/course/php-development-with-laravel-4/",
      "bio": "Create an authorization system with the Laravel 4 PHP framework.",
      "objectives": [
        "Learn the Laravel 4 framework",
        "Create an authorization system with Laravel 4"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Our Project",
          "Installing Laravel"
        ],
        "Build an Authorization System with the Laravel PHP Framework": [
          "The Database",
          "Creating the Home Page",
          "Templating",
          "PDO and SMTP E-mail",
          "Creating Accounts Part 1",
          "Creating Accounts Part 2",
          "E-mail Activation",
          "Signing In",
          "Signing Out",
          "Remember Me",
          "Changing Passwords",
          "User Profiles",
          "Account Recovery",
          "Migrations"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Laravel 4"
      ],
      "description": "Looking for that perfect PHP framework to build great websites with? Try Laravel 4 and we're sure you'll be hooked.\nThis course teaches you how to create an authorization system for a website. A basic knowledge of PHP programming is required for this course.\nWhat Is Laravel 4?\nLaravel is a free, open source PHP web application framework, designed for the development of MVC web applications. Laravel is released under the MIT license, with its source code hosted on GitHu\nb\n.\nAccording to a December 2013 survey on PHP frameworks popularity, Laravel is listed as one of the most promising PHP frameworks for 2014",
      "target_audience": [
        "PHP developers",
        "Web developers"
      ]
    },
    {
      "title": "The Official Polygon Tutorial Code Along - All Levels - DeFi",
      "url": "https://www.udemy.com/course/the-official-polygon-tutorial-code-along-all-levels-defi/",
      "bio": "Industry Level DeFi - The Polygon Tutorial Guide: Labs & Code Alongs From Official Documentation - Decentralized Finance",
      "objectives": [
        "Master Blockchain Industry Concepts: Understand blockchain data structure, cryptographic hashing, consensus algorithms, and more",
        "Master DeFi Principles: Learn about decentralized exchanges (DEXs), lending, borrowing, liquidity provision, and smart contracts",
        "Unravel Polygon's Architecture: Dive into zk rollups, Heimdall, side chains, and bridges, gaining insights into Polygon",
        "Develop DApps on Polygon: Create decentralized savings accounts, manager accounts",
        "Become Proficient in Solidity: Acquire essential Solidity skills, including data types, control structures, functions...",
        "Build Smart Contracts: Create a fullstack ZK-EVM counter and a decentralized voting DApp, demonstrating mastery of decentralized governance"
      ],
      "course_content": {
        "Blockchain Technology - Decentralized Digtial Ledger Fundamentals": [
          "Welcome Introduction To This DeFi Course",
          "What Is Blockchain For Noobs",
          "What Are Layer 1s and Layer 2s in Blockchain",
          "Join Our Online School",
          "Why Are We Learning DeFi with Polygon",
          "Layer 2 Solutions for Ethereum",
          "Polygon Bridges vs Sidechains",
          "Polygon Rollups vs Sidechain",
          "The Polygon Sidechain"
        ],
        "Decentralized Finance Key Concepts": [
          "What is DeFi ie Decentralized Finance",
          "Lending And Borrowing with DeFi",
          "CEXs vs DEXs - Centralized vs Decentralized Exchanges",
          "What Are Stablecoins",
          "04 Case Study Stablecoins - TerraLabs and UST Rise and Fall",
          "What Are Cryptocurrencies and Tokens",
          "Are All Cryptocurrencies Securities By Default Except for Bitcoin",
          "What is The ERC 20 Standard",
          "Introduction to NFTs - ERC721 Standard - Non Fungible Tokens",
          "NFT Case Studies"
        ],
        "Polygon Architecture - Industry Level Web3 Case Study": [
          "Proof of Work vs Proof of Stake Brief Outline",
          "Polygon Bor - A Checkpoint for Ethereum Mainchain",
          "Heimdall Polygon - The Layer 2 Chain within the Polygon Network",
          "Polygon Smart Contracts and Deployments with Ethereum Mainnet",
          "Polygon Architecture Summary - A Deeper And More Condensed Dive"
        ],
        "DeFi Labs - Hands On How Decentralized Finance Works with Smart Contracts": [
          "Setting Up an IDE with REPLIT",
          "What Is Metamask - Setting up Your First Metamask Wallet",
          "Setting Up The Mumbai Testnet Network to Metamask with Infura",
          "Fork Starter Project",
          "Transfer Matic Test Tokens with the Polygon Network",
          "Smart Contract Reviews and Fundamentals (Non Technical)",
          "Deploy Your First Smart Contract with Polygon",
          "Deploy DeFi Based Dapp Smart Contracts",
          "Add Your Own Token To A Metamask Wallet",
          "Tokenomics Fundamentals and Case Study Scenarios with Eth",
          "Minting Tokens",
          "Fundamentals Mechanisms for DeFi Applications",
          "Final Lab DeFi Smart Contract Interactions"
        ],
        "The ZK RollUps Basic Introduction": [
          "Introduction to Zero Proof Knowledge",
          "Defining ZK Rollups",
          "Polygon Specification for Ethereum Compatibility",
          "ZK Rollups and ZKEVM Summary"
        ],
        "Optional - Crash Course in Solidity (Programming For Complete Beginners)": [
          "Overview - Getting Started With Programming",
          "How To Code Along In These Sections - Remix Ethereum IDE Introduction",
          "Quick Note On The Upcoming Crash Course Section",
          "What Is Solidity (As A Coding Language)",
          "Pragma Solidity (How To Select Compiler Versions)",
          "Creating Smart Contracts In Solidity",
          "What are Variables & Datatypes in Solidity",
          "Deploying Your Very First Smart Contract Token",
          "Visibility keywords in Solidity",
          "Exercise - Solidity Visibility Challenge",
          "Solution - Solidity Visibility Challenge",
          "What is a Constructor in Solidity",
          "What is mapping in Solidity",
          "Exericse - Write A Map",
          "What Are Events in Solidity",
          "The Mint Token Function Signature",
          "Conditional Logic & Error Handling in Solidity",
          "Updating Token Balances & the += Operator",
          "Exercise - Write A Send Token Function",
          "Solution - Write A Send Token Function",
          "Deploy Your First Mintable Token Contract"
        ],
        "04.2 Optional - Solidity Continued (Extra Practice for Beginners)": [
          "Overview - How To Go Through This Optional Coding Section",
          "General Introduction To Variables & Types",
          "Introduction To Booleans, Integers, & Strings",
          "Writing Solidity Variables",
          "Exercise write variables",
          "Solution Write Variables",
          "Introduction To Decision Making - If Statements in Solidity",
          "How To Write If Statements in Solidity",
          "Solution - Write An Airdrop If Statement In Solidity",
          "Arrays in Solidity - Pop Push & Length Methods",
          "Arrays in Solidity - Delete",
          "Exercise - Maintain a Compact Array",
          "Solution - Maintain a Compact Array",
          "What Are Abstract Contract in Solidity"
        ],
        "Optional - What is A Text Editor and Node Js for Absolute Beginners": [
          "What Is A Terminal",
          "What Is A Terminal II",
          "What Is Node js",
          "What Is Node js II",
          "What Is NPM (Basics)",
          "Download Your First Text Editor (VSC)"
        ],
        "Polygon zkEVM Fullstack Dapplication Code Along": [
          "Connect To The Polygon zkEVM Network",
          "Add Polygon zkEVM ETH with Faucet",
          "Out of The Box Smart Contracts with Open Zeppelin",
          "Install Polygon Template with Hardhat",
          "Code Review Of The Front End and React for Noobs (Optional)",
          "Copy Private Key And More Dependencies",
          "Setting Up Hardhat Configurations",
          "Write A Polygon Smart Contract from Scratch",
          "How To Write A Deployment Script to Deploy Smart Contracts Onto The Blockchain",
          "Deployment of Smart Contracts with Dev Ops and Library Debugging"
        ],
        "Web3 - Building Web Applications That Connect To The Blockchain": [
          "Importing Contract and Library Data for Web3 Frontend Interactions",
          "Reading On-chain Values onto Front End Applications with Ethers Lib",
          "Updating On-chain Values onto Front End Applications with Ethers Functionality",
          "Final Updates to On Chain Rendering and Review"
        ]
      },
      "requirements": [
        "No programming requirements needed. You will learn everything in the course. Basic JavaScript and front end libraries like React a big plus"
      ],
      "description": "Welcome to \"The Official Polygon Tutorial Code Along,\" a practical and condensed high grade level course that runs through official Polygon documentation and tutorials tailored specifically for developers and programmers ready to advance their careers in the world of web3, blockchain technology and decentralized finance (DeFi). Whether you're an aspiring  developer looking to harness the potential of cutting-edge technologies, a seasoned programmer seeking to diversify your skillset, or an enthusiast eager to explore the transformative landscape of DeFi, this comprehensive journey is designed to propel you to industry-grade heights.\nLed by Clarian, an experienced professional with an impressive track record of working with top 40 blockchain companies and leading successful tech teams worldwide, this course is an unparalleled opportunity to gain hands-on experience and a deeper understanding of DeFi and blockchain intricacies.\nWith a strong emphasis on hands-on learning, we will immerse you in the world of DeFi and the cutting-edge Polygon blockchain. From the very beginning, you'll be introduced to the fundamentals of blockchain technology, exploring concepts like data structure, cryptographic hashing, consensus algorithms, and the nuances of permissioned and permissionless blockchains. Our expert instructors will present these complex topics in a manner that is accessible and comprehensible, even for those with no prior programming knowledge.\nAs we venture further, Section 2 will take you deep into the realm of DeFi, exploring its transformative potential in reshaping traditional finance. From the foundation of smart contracts to the facilitation of peer-to-peer financial services through blockchain technology, you'll uncover the intricacies of DeFi protocols. Decentralized exchanges (DEXs), lending, borrowing, and liquidity provision will be explored, along with real-world case studies that showcase the global impact of these projects.\nIn Section 3, we'll embark on an awe-inspiring journey into the inner workings of Polygon's blockchain architecture. Delve deep into zk rollups, Heimdall, side chains, and bridges, and comprehend how Polygon's technology enhances scalability and interoperability with other blockchains. This knowledge will position you as an industry-ready professional, ready to tackle the challenges and demands of the blockchain world.\nHands-on experience is at the heart of this course, and Section 4 will empower you to put theory into practice. Regardless of your programming expertise, you'll confidently develop your own decentralized applications (DApps) on the Polygon blockchain. From building a decentralized savings account to creating a DApp manager account and minting custom tokens with smart contract functionalities, you'll gain invaluable experience that will set you apart in the job market.\nIn Section 5, we'll shift our focus to Solidity, the programming language of choice for Ethereum and Polygon smart contracts. You'll acquire the essential skills needed to write secure and efficient smart contracts, covering data types, control structures, functions, modifiers, and industry best practices. This proficiency will open doors to a world of exciting blockchain development opportunities.\nAnd finally, the grand finale awaits in Section 6! Together, we'll embark on an exhilarating journey to build a fullstack ZK-EVM counter on the Polygon blockchain from scratch. Experience the power of zero-knowledge proofs combined with Ethereum's EVM, enabling enhanced privacy and scalability for blockchain applications. This final project will culminate in constructing a decentralized autonomous organization (DAO) for voting, providing you with hands-on experience in decentralized governance.\nEnrolling in this course requires no prior experience or knowledge. However, a basic understanding of the blockchain space and programming will facilitate your progress through the introductory videos. Our inclusive approach ensures that learners of all backgrounds feel welcome, supported, and motivated to excel in their DeFi and Polygon blockchain development journey.\nIf you're ready to unlock the full potential of DeFi and Polygon's groundbreaking technology, and to redefine what's possible in the world of blockchain, then join us now! Let's embark on this transformative journey together and shape the future of finance in the decentralized world. Enroll in \"The Official Polygon Tutorial Code Along - All Levels - DeFi\" today, and seize the opportunity to elevate your career and create a lasting impact on the blockchain industry. The future is changing with blockchain, and it starts with you.",
      "target_audience": [
        "Developers and Programmers: Whether you are a seasoned developer or just starting, this course's hands-on approach ensures you'll gain proficiency in Solidity and learn how to build your own DApps on the Polygon blockchain, opening doors to exciting career opportunities in the blockchain industry.",
        "Aspiring DeFi Professionals: If you dream of becoming a DeFi expert, this course is tailored to equip you with the skills and knowledge needed to navigate the complex world of decentralized finance, making you a valuable asset in the rapidly growing DeFi space.",
        "Blockchain Enthusiasts: For those passionate about blockchain technology, this course offers an exciting journey into the realms of decentralized finance and Polygon's cutting-edge architecture, allowing you to grasp the true potential of blockchain beyond Bitcoin and Ethereum.",
        "Financial Industry Professionals: Finance professionals seeking to adapt to the disruptive landscape of DeFi will find this course invaluable. Understand how blockchain technology and smart contracts are reshaping the financial industry and explore new possibilities for innovation and growth.",
        "Developers and Programmers: Whether you are a seasoned developer or just starting, this course's hands-on approach ensures you'll gain proficiency in Solidity and learn how to build your own DApps on the Polygon blockchain, opening doors to exciting career opportunities in the blockchain industry.",
        "Entrepreneurs and Innovators: For visionaries looking to launch their own DeFi projects or explore blockchain-based solutions for real-world challenges, this course offers insights into creating decentralized applications, smart contracts, and DAOs, empowering you to turn your ideas into reality.",
        "Curious Learners: Even if you have no prior experience in blockchain or programming, this course welcomes curious learners who are eager to understand the revolutionary potential of DeFi and the innovative Polygon blockchain. Embrace a new frontier of knowledge and discover how blockchain intersects with social, political, and business realms."
      ]
    },
    {
      "title": "Front End Web Design UX, CSS, FLEXBOX & SASS Complete Course",
      "url": "https://www.udemy.com/course/front-end-web-design-ux-css-flexbox-sass-complete-course/",
      "bio": "Web Designer Master with UX and exercises. Create HTML5, CSS3, SASS, Bootstrap, Flexbox, Responsive Design Grids website",
      "objectives": [
        "Learn to develop Front End, become a professional",
        "I will be on your side along every step of your upskilling process",
        "Drill down the most used and the least uses elements",
        "Get involved in all languages to the core",
        "Follow the exercises and improve the comprehension",
        "Amaze your customers with dynamic and modern websites",
        "Learn Bootstrap and SASS, get over your own expectations",
        "Follow the regular upgrades the course offers, and improve your skills"
      ],
      "course_content": {},
      "requirements": [
        "No previous web programming knowledge is required",
        "A computer with an Internet connection with Windows, Mac or Linux"
      ],
      "description": "Stay focused, learn for real !\nUX, HTML5, CSS3, SASS, Bootstrap, Flex-box and Grid - from Zero to Master - course, featuring 15-minute max-length lessons.\nA state-of-the-art Front-End course, created to get through all the topics which will make you a web design hero, starting from the User Experience foundations- appliable to all aspects of the Front-End development getting to extra, SASS -related contents.\nYou will learn to use flex boxes and grids with and without the help of tools whose aim is to simplify the insertion, such as Bootstrap, a very famous element -library (Framework CSS) able to lead you accompany you along the route of the style-sheets (CSS)\nThe course includes two projects with which you will be able to develop autonomously a modern, personal website and make it graphically perfect and responsive, even without the help of different device-related (PC, tablet, smartphone) settings, in addition to manage the Bootstrap framework in its fundamental functionalities.\nCourse suitable for every type of student, it does not require any type of ITC know-how, you only need to have a PC to follow all the steps of this fantastic journey.\nEvery single video has been inserted into a specific section to simplify the learning, to give you the liberty to follow it at your ease, according to the time you decide to dedicate to it, distributing the length of every step in the best possible way.\nYou will find different exercises which will help you test hands-on what you have been learning in the various steps of the course : the structure of every section of lessons has been created to simulate the classroom experience, with the difference that it’s up to you when to take a break, enabling you to make out by yourself whether every piece of information has been fully attained.\nThe topics of the lessons are essential to learn all the details of the Front-End web development: you will be prepared on all aspects, ready to work hands -on with the tools you prefer, exploiting fully all potential\nEvery published update will be signaled to you in a clear way: I will give you the opportunity to choose the topics to drill down.\nGo through the list of the sections to have an idea of the accuracy this course is made with: nothing is slapdash, everything is put forward in the easiest and most comprehensible way and... do not forget to follow my personal page. In it, you will find all the courses I am gradually completing to make you become an absolute ITC expert!\nDo you already have questions? Go through the list provided in this course, they might have already been answered, if not, use the forum or else simply ask, you’d better sort out even the smallest doubt to allow yourself to learn without any difficulties.",
      "target_audience": [
        "Any user without any programming experience willing to take up web design",
        "Any user with a limited Front-End programming experience but willing to upgrade such a skill",
        "Any expert user yet wanting to improve his/her Front-End skills to become a real professional",
        "Any Back-End expert user feeling like improving his/her skills with also a web design course"
      ]
    },
    {
      "title": "How To Build Social Media AI Agents - Step by Step - No Code",
      "url": "https://www.udemy.com/course/how-to-build-social-media-ai-agents-step-by-step-all-levels/",
      "bio": "Create AI Agents for Facebook, Instagram, LinkedIn & X (Twitter) - Simple & Clear Videos For All Levels",
      "objectives": [
        "Design and create AI-powered social media agents for Facebook, Instagram, LinkedIn, and X (Twitter) to automate content creation, posting, and engagement.",
        "Use tools like Perplexity AI and OpenAI to build smarter, more efficient AI systems for content creation, research, and social media management.",
        "Develop a customizable blueprint to automate social media management for your own accounts or to offer as a service to businesses.",
        "Scale your AI-powered social media system by building sub-agents to handle specific tasks like posting, engagement, and data processing."
      ],
      "course_content": {
        "Introduction To Our Social Media AI Agent Blueprint And Design": [
          "Our Very Exciting Social Media AI Agentic Brain Introduction",
          "Examining An AI Agent Blueprint Build",
          "How To Build An AI Agent Blueprint Part II",
          "Join Our Online School",
          "Optimizing AI Agents To Build And Scale For Businesses"
        ],
        "What is Make.com": [
          "Set Up An Account With Make.com",
          "An Overview Of What Is Make.com"
        ],
        "How To Build A Scenario And Workflow Automation With Make.com": [
          "What Are Scenarios In Make.com",
          "Overview Of The Scenario Toolkit For AI Agents"
        ],
        "Build A Social Media AI Agent Manager": [
          "What Is Perplexity AI And Getting The API Key",
          "Prompt Engineering In Make.com With Low Code Availability",
          "Prompt Engineering For An AI Research Assistant Agent",
          "How To Build A Social Media Brain With Prompting"
        ],
        "Sub Agents And Building An Army Of AI Agents": [
          "Setting Up A Router For AI Agents",
          "Prompt Engineering As A Programmer With Sub Agents",
          "Generating Images With AI Agents",
          "How To Build AI Agents For LinkedIn And X",
          "Converting Nested Data For AI Agents Into Clean Variables"
        ],
        "Setting Up Authorization For Social Media Platforms To Automate Posting": [
          "Setting Up Authorization For AI Agents In Social Media",
          "AI Agent Testing And Conclusion"
        ]
      },
      "requirements": [
        "No programming experience required although it's always a bonus!"
      ],
      "description": "Welcome to the future, my friend.\nThis course will rapidly give you the power to create your own AI social media influencers and management team that will handle all content creation, posting, photos, and engagement for you or for businesses of your choosing. We will show you how to connect it to platforms including Facebook, Instagram, LinkedIn and X (formerly Twitter) step by step in easy and fun videos, but at professional scale.\nImagine having an AI-driven team that works 24/7, creating content, posting it, and even engaging with your audience.\nThis is not only possible, we're going to build it together.\nWhether you want to manage your personal social media accounts or offer social media automation services to small businesses, this course provides everything you need to build, control, and scale your very own AI-powered social media system.\nIn this course, you’ll learn how to create a social media brain—a system of AI agents that manage posts, content creation, research, and engagement.\nYou’ll learn to build a researcher AI using Perplexity AI and OpenAI tools to automate social media tasks across platforms like Facebook, Instagram, LinkedIn, and X (Twitter). You’ll be given the tools and knowledge to create a blueprint for building these agents that you can apply to your own personal projects or offer to businesses looking for social media automation solutions.\nImagine All the Businesses That Can Benefit:\nSmall businesses that need to streamline social media marketing and customer engagement.\nAgencies that want to offer AI-powered solutions to clients.\nE-commerce stores looking to automate content and advertising across social media.\nContent creators who want to delegate their social media management to AI while focusing on their craft.\nWhat You’ll Learn:\nHow to build AI-powered social media agents for Facebook, Instagram, LinkedIn, and X (Twitter) that work 24/7 to create and post content.\nDesign and build a social media brain with AI agents that research trends, write posts, and engage with followers—all on auto-pilot.\nIntegrate Perplexity AI and OpenAI tools to enhance your AI agents and make them smarter and more effective in content creation and research.\nCreate a blueprint that you can use for your own social media or to offer social media automation services to businesses and clients.\nScale your AI-powered social media operations by using sub-agents that handle specific tasks like posting, engagement, or data processing.\nSet up and manage automation across all major social media platforms with just a few clicks.\nWhy Take This Course?\nNo Coding Required: Learn how to build powerful AI systems without any coding experience.\nFast, Practical, and Actionable: Master social media AI automation in just a few hours and start using it right away.\nMonetize Your Skills: Use this skill to consult for businesses or enhance your own social media strategy.\nRevolutionary AI for Social Media: Get ahead of the competition by using the latest AI technology to manage social media like a pro.\nThis course is perfect for anyone who wants to automate their social media or offer AI-powered social media management as a service. By the end of the course, you will have a complete AI system that you can use to handle your social media or take it to businesses looking to streamline their processes.\nCourse Outline:\nCreating Your Social Media AI Brain: Learn how to design and set up AI agents for social media management.\nBuilding a Researcher AI: Use tools like Perplexity and OpenAI to help your AI agents generate content and research trends.\nAutomating Posts and Engagement: Learn how to schedule posts, respond to followers, and automate engagement.\nBlueprint Creation: Design a customizable blueprint to apply to your own projects or businesses.\nAdvanced Automation: Build sub-agents to handle specific tasks like image generation and data analysis.\nManaging Social Media Platforms: Set up automation for Facebook, Instagram, LinkedIn, and X (Twitter) seamlessly.\nWho Is This Course For?\nEntrepreneurs: Automate your own social media and free up your time to focus on business growth.\nConsultants: Use AI to help small businesses with their social media strategy and automation.\nSocial Media Managers: Streamline your workload by using AI to handle routine tasks.\nContent Creators: Let AI handle your social media so you can focus on creating.\nBy the end of this course, you will have complete control over your social media and be able to automate it in a way that’s efficient, effective, and scalable. Join today and start building your own social media AI team—the future of social media management is here!",
      "target_audience": [
        "Content Creators – Let AI handle your social media while you focus on creating high-quality content, ensuring your online presence is consistently active.",
        "Entrepreneurs – Automate your social media and free up time to focus on growing your business while staying active online.",
        "Social Media Managers – Simplify your workflow by delegating routine tasks to AI, boosting your productivity and allowing more time for strategy.",
        "Digital Marketing Professionals – Integrate AI tools into your social media strategies to automate tasks and stay ahead of the competition.",
        "Freelancers – Learn how to use AI to offer social media management services to clients, giving you a competitive edge in the freelance market.",
        "AI Enthusiasts – Dive into the world of artificial intelligence by learning how to use AI for practical purposes like social media management and marketing automation."
      ]
    },
    {
      "title": "Master Mean : Learn the fundamentals of Mean Stack",
      "url": "https://www.udemy.com/course/master-mean/",
      "bio": "Mean Stack From the Ground Up",
      "objectives": [
        "Know a lot about MongoDB,Express,Angular",
        "Build cool new web applications like Dynamic Websites and many more",
        "How to use Express and MongoDB along with Angular",
        "How to Deploy web applications on Heroku",
        "How to install MEAN Stack on Windows,Mac and Linux EC2 Instance",
        "How to implement Authentication using Mongoose,Express and Passport"
      ],
      "course_content": {
        "Introduction to MEAN": [
          "Introduction",
          "Prerequisites for MEAN",
          "Benefits of using MEAN",
          "How this course is organized"
        ],
        "Javascript Basics": [
          "Introduction",
          "Javascript Variables & Data Types",
          "Operators in JavaScript",
          "Conditional Statements in JavaScript",
          "Loops in JavaScript",
          "Functions & Scope of Variables in JavaScrript",
          "Closures in JavaScript",
          "Understanding Objects in JavaScript",
          "Object.Prototype",
          "Code Download"
        ],
        "Installating MEAN Stack": [
          "Installing Node.JS on Windows",
          "Installing Node.JS on MAC",
          "Installing Node on Linux - AWS EC2 Instance",
          "Introduction to Express",
          "Installing Express",
          "Introduction to NoSQL",
          "Installing MongoDB"
        ],
        "Working with Express": [
          "Creating a Web Server using Express",
          "Adding routes to Express App",
          "Working with Express Templates",
          "Working with partials",
          "Sharing content across routes",
          "Organizing our routes",
          "Making use of Express Generator",
          "Express Middleware",
          "Code Download"
        ],
        "Creating our Web Application - A Course Website": [
          "Application Preview",
          "Creating our application",
          "Composing application views using Handlebars",
          "Loading specific styles based on view attributes",
          "Handling Form Submissions",
          "Installing and Creating Models using Mongoose",
          "Storing objects with Mongoose",
          "Basic validation using Mongoose",
          "Advance validation using Mongoose"
        ],
        "Authentication using Express and Passport": [
          "Installing Passport & Passport Local",
          "Configuring Passport for Authentication",
          "Authenticating Users",
          "Securing our routes",
          "Handling incorrect login attempts",
          "Securing our passwords with bcrypt",
          "Deleting data using Mongo Shell",
          "Remember Me Feature using cookies based session",
          "JSON API Route"
        ],
        "Working with AngularJS": [
          "Setting up Angular",
          "Configure Client Side routing with Angular",
          "Creating Controllers and Views in Angular",
          "Fetching and Binding Data using Ajax with Angular",
          "Creating Custom Service in Angular",
          "Understanding Route Parameters",
          "Form Validation in Angular",
          "Form Custom Validation"
        ],
        "Deployment": [
          "Setting up Heroku application",
          "Deploying on Heroku",
          "Creating MongoDB instance on Heroku using mLab",
          "Minification using Gulp"
        ],
        "Conclusion": [
          "Conclusion and Code Download"
        ]
      },
      "requirements": [
        "You should be aware of basic programming concepts",
        "You should know basics of HTML and CSS",
        "A bit of javascript experience will help in understanding the course"
      ],
      "description": "This course provides you with a practical approach to MEAN Stack. The main focus of this course is to get you familiar with MEAN Stack and ensure that you are ready to build cool new web applications using MEAN Stack in no time.\nIn this course we will be covering fundamentals of JavaScript first so that it becomes easier to understand the different concepts and syntax that one uses in MEAN Stack.\nFirst we discuss what MEAN is all about and its pre-requisites\n\n1. We take you through the fundamentals of JavaScript so that you feel at ease when we discuss MEAN concepts\n2.Next we see how we can install MEAN Stack on different Platforms like Windows,MAC and Linux AWS EC2 Instance\n3. Once we are through with the installation we proceed with Express and see how we can work with it here we cover all the basics of Express like Express Templates, Partials,sharing content across routes, using Express Generator and Exploring Express Middleware\n4. We then start with developing a course based website to explore all the concepts that we discussed so far as well we explore how we can create models for mongodb using mongoose and do basic and advance validation using mongoose\n5. We also cover Authentication using Express and Passport\n6. We then Explore how to work with AngularJS where we see how to configure client side routing, creating controllers, fetching and binding data using Ajax and Angular, Creating a custom Service and understanding Route Parameters and Form Validations\nAs this course is about MEAN Stack so we have covered AngualrJS in that respect only if you want to learn only about AngularJS then you should be looking at other amazing courses available on this platform\n7.Finally we learn how to deploy our solution on production, here we will be covering Heroku deployment\nWe also see how we can use Gulp to minify scripts for our AngualrJS SPA\nSo what are you waiting for let's get started with MEAN Stack",
      "target_audience": [
        "Those who have experience in programming",
        "Those who want to learn MEAN Stack",
        "Those who are into web development",
        "Those who would love to learn programming"
      ]
    },
    {
      "title": "Develop RESTful Web Services using NestJS and MongoDB",
      "url": "https://www.udemy.com/course/develop-restful-web-services-using-nestjs-and-mongodb/",
      "bio": "Learn to build a feature rich production ready RESTful web services using NestJS and MongoDB.",
      "objectives": [
        "Design and develop RESTful web services",
        "Using Nest CLI efficiently",
        "Create CRUD. operations",
        "Modules, controllers and injectables",
        "Filters and Pipes",
        "Validation",
        "DTO or Data Transfer Objects",
        "Asynchronous operations using async/await",
        "Persisting data in MongoDB collections",
        "Industry standard best practices",
        "Connecting to MongoDB cloud based server",
        "Deploying our application to Heroku server"
      ],
      "course_content": {
        "Introduction": [
          "Course intro",
          "Introduction to RESTful services",
          "Introduction to Nest JS",
          "Software setup",
          "Course projects",
          "Creating our first Nest JS Application"
        ],
        "Controllers in detail": [
          "Handling HTTP GET requests",
          "Handling HTTP POST requests",
          "Handling HTTP PUT requests",
          "Partial update using HTTP PATCH request",
          "Handling HTTP DELETE requests"
        ],
        "Providers in Nest JS": [
          "Overview of providers",
          "Creating the ContactService injectable",
          "POST /contacts controller and service",
          "GET /contacts controller and service",
          "GET /contacts/:id controller and service",
          "ASSIGNMENT: Implement PUT, PATCH and DELETE handlers",
          "ASSIGNMENT SOLUTION"
        ],
        "Middleware": [
          "Overview of Nest middlewares",
          "Class as middleware",
          "Function based and third party middlewares"
        ],
        "Dealing with exceptions": [
          "Standard exceptions",
          "Custom exceptions",
          "Exception filters"
        ],
        "Pipes in Nest JS": [
          "Overview of pipes and using built-in pipes",
          "Creating and using a custom pipe",
          "Using ValidationPipe and class-validator library"
        ],
        "Using Mongodb": [
          "A quick intro to Mongodb",
          "Do you want to learn MongoDB before proceeding?",
          "Downloading and setting up Mongodb server on our local machine",
          "Getting familiar with basic Mongodb shell commands",
          "Creating a new Nest project with required dependencies",
          "Creating contacts module, controller and service",
          "Contact model and schema",
          "Adding a new contact via POST request",
          "Get all contacts via GET request with pagination",
          "Fetch a contact by id via GET request",
          "Update a document via PUT request",
          "Delete a document via DELETE request",
          "Partial update of a document via PATCH request",
          "Connecting our app to Mongodb Atlas (Cloud)"
        ],
        "Deploy to a cloud server (Heroku)": [
          "Creating an account with Heroku",
          "Installing Heroku CLI",
          "Deploying our application to Heroku"
        ],
        "APPENDIX-A: Mongodb fundamentals": [
          "Overview of Mongodb",
          "Installation",
          "Inserting documents",
          "Importing data",
          "Executing scripts",
          "save() v/s insert()",
          "Projection",
          "Selection",
          "More queries",
          "$and $or $in Operators",
          "$where operator",
          "Aggregation",
          "The mapReduce function",
          "Indexes",
          "Updating documents",
          "The upsert operation",
          "Updating multiple documents",
          "Removing documents"
        ]
      },
      "requirements": [
        "A basic understanding of JavaScript on NodeJS",
        "Basic knowledge of TypeScript is recommended, but not required"
      ],
      "description": "Nest (NestJS) is a framework for building efficient, scalable Node.js server-side applications. It uses progressive JavaScript, is built with and fully supports TypeScript (yet still enables developers to code in pure JavaScript) and combines elements of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming).\nUnder the hood, Nest makes use of robust HTTP Server frameworks like Express (the default) and optionally can be configured to use Fastify as well!\nNest provides a level of abstraction above these common Node.js frameworks (Express/Fastify), but also exposes their APIs directly to the developer. This allows developers the freedom to use the myriad of third-party modules which are available for the underlying platform.\nIn recent years, thanks to Node.js, JavaScript has become the “lingua franca” of the web for both front and backend applications. This has given rise to awesome projects like Angular, React and Vue, which improve developer productivity and enable the creation of fast, testable, and extensible frontend applications. However, while plenty of superb libraries, helpers, and tools exist for Node (and server-side JavaScript), none of them effectively solve the main problem of - Architecture.\nNest provides an out-of-the-box application architecture which allows developers and teams to create highly testable, scalable, loosely coupled, and easily maintainable applications. The architecture is heavily inspired by Angular.\nIn this course I am going to guide you through the process of planning, developing and deploying a fully-featured RESTful web service using TypeScript+NestJS on Node platform.",
      "target_audience": [
        "Angular developers who want to apply their Angular/Typescript skills on the back end to create RESTful web services",
        "Intermediate JavaScript developers who want to dive into back-end development",
        "Any developers willing to apply TypeScript on the back-end",
        "Developers eager to learn how to develop performant, secure and production-ready REST APIs following best practices",
        "Developers who want to learn how to deploy their application to the cloud (Amazon Web Services)",
        "Developers who want to follow building a practical, real-world application from zero to production"
      ]
    },
    {
      "title": "Vue Complete Course with Javascript, HTML, CSS, BOOTSTRAP",
      "url": "https://www.udemy.com/course/vue-complete-course-with-javascipt-html-css-bootstrap/",
      "bio": "Vue Js and Javascript with real Vuejs projects. Learn Vue.js with JS and Frontend Web Development | HTML, CSS, BOOTSTRAP",
      "objectives": [
        "How to create Web Application with Vue, Vue JS.",
        "Vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "What is Vue JS?",
        "Most important Vuejs topics.",
        "How to create multi-page web app with vue-router in vue js.",
        "How to manage the data of our application with the vuex.",
        "How to easily build the largest and most advanced applications using vue and vuex.",
        "Whether you’re building a full single-page application or merely add interactivity to your existing app, Vue js has a spectrum of tools to help you.",
        "If you’re looking for a JavaScript web framework that isn’t going to drown you in complexity, take a look at Vue js.",
        "Vuejs takes what other frameworks have done before, but does it in a way that’s fresh and easy-to-use",
        "What are Javascript variables, why are they used",
        "What is Javascript Boolean Logic",
        "How to include JS File in HTML CSS Javascript",
        "What is conditional statements (if else, switch case, ternary operator), how to use in Javascript",
        "How to write Javascript Functions, what are the differences between Function Decleration and Function Expression",
        "What is Javascript loops (for loops, while loops, continue and break statements), how to use them",
        "How to create Javascript Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create Javascript objects, how to update them, object methods",
        "What is DOM, how to manipulate DOM in Javascript",
        "JavaScript is a text-based computer programming language used to make dynamic web pages.",
        "What is JavaScript? JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for webdevelop",
        "What are the main uses of JavaScript? JavaScript is a text-based programming language used for client- and server-side development.",
        "React vs. Angular vs. Vue: what is the best JavaScript framework? Choosing the best JavaScript framework for your web project depends on what you are lookingfor",
        "What is JSON and what is it used for? Because of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects.",
        "With all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences.",
        "Learn Bootstrap 4 and UIs from scratch",
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Master every single Bootstrap component",
        "Learn to compile Sass in the easiest way possible using a GUI",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "Learn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element",
        "HTML & CSS",
        "Learn to create static HTML sites",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will learn to use basic tags which are used commonly",
        "You will be able to prepare lists in different formats",
        "Learn the difference in usage between block level and inline elements in HTML",
        "By learning the use of HTML table, you will be able to create different designs of your own",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "As with all of our courses, you will learn by doing too many hands-on examples.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Bootstrap promotes a mobile-first approach to web design, offering a suite of templates and components that automatically render for use on any device.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "HTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.”",
        "Learning how to code HTML without also learning CSS is like learning how to read but not write.",
        "What is Cascading Style Sheets (CSS)? CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "CSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS"
      ],
      "course_content": {
        "Vue Complete Course with Javascipt, HTML, CSS, BOOTSTRAP Documents": [
          "FAQ about Vue, Vue js, vuejs, vue.js, vuex.",
          "FAQ about Javascript, and Javascript Projects",
          "FAQ about Bootstrap, HTML, CSS",
          "Vue.js Project Github Links",
          "Javascript Project Files and Course Documents",
          "HTML CSS Bootstrap Project Files and Course Documents"
        ],
        "Introduction to Bootstrap, Bootstrap 4, Bootstrap project, html css bootstrap": [
          "Let's See What You Will Learn in HTML Part?",
          "What HTML and Internet Is ?",
          "HTML Basic Tags",
          "HTML Images and Attributes",
          "HTML Lists",
          "HTML List Example",
          "HTML Block Level - Inline Elements",
          "Html Quiz 1"
        ],
        "Let's Learn More Complex Topics in HMTL": [
          "HTML Tables",
          "HTML Table Example",
          "HTML Forms",
          "HTML Forms Example",
          "Html Quiz 2"
        ],
        "CSS": [
          "Let's Meet CSS",
          "CSS Basics",
          "CSS Colors",
          "CSS Background and Border",
          "CSS Selectors",
          "CSS Quiz"
        ],
        "Intermediate CSS": [
          "CSS Text and Fonts",
          "Debugging in CSS",
          "Box Model",
          "CSS Position",
          "CSS Float",
          "CSS Display Property",
          "CSS Box-Model Practice",
          "CSS Float-Layout Practice",
          "CSS Box-Sizing",
          "CSS Media Queries",
          "CSS Quiz"
        ],
        "Flexbox and Grid for CSS": [
          "Flexbox Introduction",
          "CSS Flexbox Properties 1",
          "CSS Flexbox Properties 2",
          "CSS Flexbox Properties 3",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2",
          "Grid CSS - 3",
          "Grid CSS - 4",
          "Grid CSS - 5",
          "Grid and Flexbox Project",
          "Grid and Flexbox Project - 2",
          "Grid and Flexbox Project - 3",
          "Grid and Flexbox Project - 4",
          "CSS Quiz"
        ],
        "Bootstrap": [
          "What Is Bootstrap?",
          "Including Bootstrap in the Project",
          "Web Design in Bootstrap",
          "Bootstrap Quiz"
        ],
        "Introduction to Bootstrap": [
          "Nav Bar in Bootstrap",
          "Grid System in Bootstrap",
          "Header Section in Bootstrap",
          "Our CSS File-1",
          "Our CSS File-2",
          "Font Awesome and Features Section in Bootstrap",
          "Font Awesome and Features Section-2 in Bootstrap",
          "Quiz Bootstrap, bootstrap 4, bootstrap project, bootstrap projects",
          "Quiz Bootstrap, bootstrap 4, bootstrap project, bootstrap projects",
          "Quiz Bootstrap, bootstrap 4, bootstrap project, bootstrap projects"
        ],
        "Intermediate Bootstrap": [
          "Bootstrap Modals",
          "Bootstrap Modals-2",
          "Bootstrap Cards",
          "Bootsrap Cards Part 2",
          "Bootstrap Carousel 1",
          "Bootstrap Carousel 2",
          "CSS Z-Index",
          "Z-Index Bootstrap Our Project",
          "Bootstrap Image Gallery",
          "Bootstrap Forms",
          "Bootstrap General Changes",
          "Bootstrap General Changes - Part 2",
          "Bootstrap Quiz"
        ],
        "What We Have Learned In This HTML, CSS and Bootstrap 4 Course": [
          "Short Summary of What We Have Learned in Bootstrap"
        ]
      },
      "requirements": [
        "How to easily build the largest and most advanced applications using vue, vue js and vuex.",
        "Desire to learn about vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "Desire to learn Javascript and Javascript Projects.",
        "Desire to build web site with html css bootstrap.",
        "This course will take you from scratch to the advanced level.",
        "Watching the lecture videos completely, to the end and in order.",
        "Determination and patience to learn.",
        "Willingness and Motivation to successfully complete the training",
        "Desire to learn Modern Javascipt.",
        "Desire to learn javascript libraries; React, Angular, NodeJS.",
        "Desire to learn Bootstrap 4 and develop bootstrap 4 projects",
        "Desire to learn Javascript Apps",
        "No prior Bootstrap, HTML CSS knowledge needed",
        "You will be learning bootstrap from scratch",
        "Desire to learn HTML, CSS, Bootstrap",
        "Computer with access to the internet",
        "Nothing else! It’s just you, your computer and your ambition to get started today."
      ],
      "description": "Vue, vue js, vuejs, nuxt, vue.js, vue 3, nuxt js, veux, javascript, javascript projects, front end web development,\nbootstrap, bootstrap 4, bootstrap project, html, css, full stack web development, full stack development, web development,\nHello,\nWelcome to the \" Vue from Scratch with Real Life Vue JS Web Applications \" course.\nVue with basic Vue js applications. Vue.js is a popular frontend JavaScript Framework. Learn vuejs, become vue developer.\nVue (pronounced like view) is a frontend development framework for JavaScript (JS) that you can use to build web-based user interfaces. You can also use vue js to create one-page applications and handle animations, interactive elements, and graphics. Generating projects is also possible with the user-built presets, which is commonly applicable for coders working in enterprise environments. Because vuejs is based on JavaScript, you can easily integrate Vue into an existing JS project.\nWhether you’re trying to build a full single-page application or merely add a bit of interactivity to your existing app, Vue.js has a spectrum of tools to help you get your job done, and that course can help you get up and running quickly.\n\n\nIf you’re looking for a JavaScript web framework that isn’t going to drown you in complexity, take a look at Vue.js. Vue.js takes what other frameworks have done before, but does it in a way that’s fresh and easy-to-use. Using Vue.js lets you focus your application rather than on your framework.\nJavaScript is a very important programming language for internet applications.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nJoin more than 12 million learners and train up on JavaScript on Udemy. Choose from a wide range of top-rated JavaScript courses. From back-end development to app or website building, we’ve got you covered. Our real-world experts can lead you through hands-on projects to apply your skills.\nJavaScript is a text-based computer programming language used to make dynamic web pages. A must-learn for aspiring web developers or programmers, JavaScript can be used for features like image carousels, displaying countdowns and timers, and playing media on a webpage. With JavaScript online classes, you can learn to build interactive web applications, choose the best framework, and work with other programming languages like HTML and CSS.\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload.\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Oak Academy has a top-rated course to help you achieve your goals.\nBootstrap is a free frontend web development framework for creating responsive websites. Bootstrap promotes a mobile-first approach to web design, offering a suite of templates and components that automatically render for use on any device.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML. Whether on a mobile device or a computer, every website that you browse is designed with HTML.\nHTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements.\nLearning how to code HTML without also learning CSS is like learning how to read but not write. All of your hard web development work is lost if you don’t optimize it for different screen sizes. Udemy has top-rated courses to show you how CSS helps you do just that.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page.\nIn this course you will learn to develop web applications with Vue JS, Vuex from scratch.\nIf you are thinking to realize your dream web application, this course is for you.\nWe have explained Vue and Vuex from beginner to all levels. We have explained all the topics as simple as possible with examples, slides, and diagrams.\nWe have created a lot of projects while explaining the subjects. Because we believe that applied educations are much more useful than other teaching methods.\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels.\nIn this tutorial you will learn;\n\n\nHow to create Web Application with Vue JS.\nMost important Vue JS topics.\nHow to create multi-page web app with vue-router.\nHow to manage the data of our application with the vuex.\nHow to easily build the largest and most advanced applications using vue and vuex.\nHow you can operate on variables in javascript,\nBoolean logic in javascript,\nHow to create a conditional statement in javascript,\nHow you can perform transactions with Loops in javascript,\nHow a function is created and why it needs arguments in javascript,\nHow Arrays and Objects, which are basic data structures, are created in javascript,\nHow DOM Manipulation is done in javascript,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nWhat is Vue JS?\nVue (pronounced like view) is a frontend development framework for JavaScript (JS) that you can use to build web-based user interfaces. You can also use it to create one-page applications and handle animations, interactive elements, and graphics. Generating projects is also possible with the user-built presets, which is commonly applicable for coders working in enterprise environments. Because it is based on JavaScript, you can easily integrate Vue into an existing JS project. Vue uses the traditional Model-View-Controller (MVC) architecture, which means that the core library of Vue.js focuses on the view layer by default. It enforces a one-way data flow between components. This also makes it easy for you to integrate with other libraries or existing projects. Vue also uses virtual DOM (Document Object Model), which makes it faster than regular DOM. Instead of re-rendering the whole page, Vue only updates the objects that you change.\nWhat is the difference between Vue and React?\nAlthough Vue has an MVC architecture, you cannot use it with a different architectural approach, which differs from the Component Based Architecture (CBA) used in React. They also differ in how they optimize data. When a component’s state changes in React, it triggers the re-render of the entire component sub-tree, starting at that component as the root. Vue automatically tracks a component’s dependencies during its render, so the system knows which components actually need to re-render when the state changes. In React, everything is in JavaScript. Vue, on the other hand, embraces web technologies like HTML, CSS, and JavaScript and allows you to build off of them. Another difference between these frameworks is how you can scale up your projects. React only offers a single template that assumes you’re building a single-page application, while Vue offers several default options for multiple purposes and build systems.\nIs Vue JS easy to learn?\nVue JS can be easy to learn. Unlike other frontend technologies, Vue doesn’t require in-depth knowledge of libraries. If you want to start learning Vue, all you need to have is basic knowledge of HTML, CSS, and JavaScript. Compared to other coding technologies, developers typically classify Vue.js as having an easy learning curve. This is due largely in part to Vue’s reputation for having an elegant programming style and patterns. Because Vue is a progressive framework, it makes it easy for you to use it to integrate into an existing project. Because of its familiar templating syntax and use of components, you may find that integrating or migrating existing projects to Vue is fairly straightforward. Vue is known for offering a vast ecosystem of tools and companion libraries, making it a simple framework that you can use to respond to the complex needs of enterprise-grade applications.\nWhat is Vuex used for?\nVuex is a state management pattern + library for Vue. js applications. It serves as a centralized store for all the components in an application, with rules ensuring that the state can only be mutated in a predictable fashion.\nWhat is difference between Vue and Vuex?\nVue is a progressive Javascript framework and Vuex is the state management tool. We can use redux or flux inside Vue, But Vuex is native to the Vue.\nWhy do I need Vuex?\nVuex is a popular way to handle a complex app's authentication in Vue. With Vuex, you're able to handle the token's availability and access controls and route blocks throughout your app. Mutations, getters, and setters assist with this task.\nHow does Vuex store work?\nIt works by having a central store for shared state, and providing methods to allow any component in your application to access that state. In essence, Vuex ensures your views remain consistent with your application data, regardless of which function triggers a change to your application data.\nWhen Should I Use It?\nVuex helps us deal with shared state management with the cost of more concepts and boilerplate. It's a trade-off between short term and long term productivity.\nIf you've never built a large-scale SPA and jump right into Vuex, it may feel verbose and daunting. That's perfectly normal- if your app is simple, you will most likely be fine without Vuex. A simple store pattern (opens new window)may be all you need. But if you are building a medium-to-large-scale SPA, chances are you have run into situations that make you think about how to better handle state outside of your Vue components, and Vuex will be the natural next step for you.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add functionality.\nWhat is HTML and why is it important?\nHTML stands for a hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nIs HTML a programming language?\nHTML is not considered a programming language but rather a markup or formatting language. This is an important distinction. Formatting languages merely control how things are displayed on a visual level, whereas programming languages are more dynamic; they use logic gates to determine the behavior of a program. But there is some crossover. “DHTML,” for instance, refers to Dynamic HTML. It is a type of HTML augmented by Javascript to make it easier to adjust on the fly. Because HTML, Javascript, and CSS are so frequently used together, they can often be folded together, which can contribute to some confusion regarding whether HTML is a programming language.\nIs HTML hard to learn?\nHTML is known as one of the easiest languages to learn. It’s also one of the most ubiquitous. Many individuals interested in front-end, back-end, or full-stack development will learn HTML first. While HTML is largely intended for websites as a language, it is also used in many other programs. For example, when you create an email signature, you will usually be using HTML. Emails themselves use a combination of HTML and CSS. An advantage (and an occasional double-edged sword) to HTML is that it is very forgiving. You can get some HTML wrong, and your page will still be displayed, if not exactly how you want it to be.\nWhat jobs use HTML?\nNearly any development or design job will require a cursory understanding of HTML. HTML has also evolved dramatically since it was originally developed; it is far more complex and standardized than before. Because of this, even those who have been experts in HTML during their career may need to undergo an HTML refresher periodically. Most jobs that require HTML will involve web design, web development, or layout and design. For example, someone who manages a content management system such as WordPress may not need to know any other programming languages but should still know HTML basics. Similarly, someone who formats online newsletters or an online magazine in an administrative capacity may not need to be a web designer or web developer but might need to understand the principles of HTML.\nWhat is responsive design?\nResponsive design is a new type of design intended to respond to the platform and environment that a user is on. When HTML was created, most people used PCs. Today, people can browse a website on a PC, phone, tablet, or even a game console. In the past, developers created separate sites for “desktop” and “mobile.” While it worked, it wasn't easy to maintain. Rather than creating separate sites, responsive design generates the site based on the environment it detects. This greatly reduces the amount of development and maintenance for the site. Responsive design is generally achieved with a combination of HTML, CSS, and Javascript.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat skills should I have before learning CSS?\nBefore learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS. You should also be familiar with web browsers for browsing the web because it will inform your use of CSS. Since you may end up using specialized tools to write CSS, you should know how to install software on your computer and create and manage files and folders on your computer so you can create a CSS project. Once you have those skills down, the next thing to learn is HTML; after all, CSS is nothing without an HTML page to apply styles. That should be the basics you need to know to get started with CSS.\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Vue updates its system, and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\n\nYou'll also get:\nLifetime Access to The Cours\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\nDive in now into;\n\" Vue Complete Course with Javascipt, HTML, CSS, BOOTSTRAP\nVue Js and Javascript with real Vuejs projects. Learn Vue.js with JS and Frontend Web Development | HTML, CSS, BOOTSTRAP. \"\nWe offer full support, answering any questions.\n\nSee you on the other side!",
      "target_audience": [
        "Who wants to learn Vue with Vue js applications from scratch.",
        "Who wants to learn Vue, vue js, vuejs, nuxt, vue .js, vue 3, nuxt js, vuex.",
        "Who wants to learn how to create websites with Vue",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "Who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology.",
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "If you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "If you want to get started with programming: JavaScript is a great first language!",
        "People who want to learn Javascript projects",
        "People who want to learn javascript libraries; react, angular, nodejs",
        "People who want to learn javascript project, react node project, node js projects",
        "If you want to learn HTML 5 and CSS 3, Bootstrap 4 the first step in web development, completely and easily, you are at the right place.",
        "If you want to learn to build beautiful responsive websites with the latest Bootstrap version, Flexbox, HTML5, and CSS3!",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Anyone who want to learn html css bootstrap",
        "Anyone who develop front end web development by using bootstrap",
        "People who want to develop html, css, bootstrap 4 projects"
      ]
    },
    {
      "title": "JavaScript DOM (Document Object Model)",
      "url": "https://www.udemy.com/course/javascript-dom-document-object-model/",
      "bio": "Learn how to make webpages Dynamic and Interactive using JavaScript to influence and manipulate page elements",
      "objectives": [
        "JavaScript DOM Introduction Tutorial",
        "JavaScript DOM Targeting Methods Tutorial",
        "JavaScript DOM Get & Set Value Methods Tutorial",
        "JavaScript DOM querySelector & querySelectorAll Tutorial",
        "JavaScript DOM CSS Styling Methods Tutorial",
        "JavaScript addEventListener Method Tutorial",
        "JavaScript classList Methods Tutorial",
        "JavaScript parentElement & parentNode Method Tutorial",
        "JavaScript Children & childNodes Methods Tutorial",
        "JavaScript firstChild & lastChild Method Tutorial",
        "JavaScript nextSibling & previousSibling Method Tutorial",
        "JavaScript createElement & createTextNode Tutorial",
        "JavaScript appendChild & insertBefore Tutorial",
        "JavaScript insertAdjacentElement & insertAdjacentHTML Tutorial",
        "JavaScript replaceChild & removeChild Tutorial",
        "JavaScript cloneNode Tutorial",
        "JavaScript Contains Method Tutorial",
        "JavaScript hasAttribute & hasChildNodes Tutorial",
        "JavaScript isEqualNode Tutorial",
        "JavaScript DOM: Exercise",
        "JavaScript BOM Introduction Tutorial",
        "JavaScript Window Height & Width Method Tutorial (BOM)",
        "JavaScript Window Open & Close Method",
        "JavaScript Window moveBy & moveTo Tutorial",
        "JavaScript History Object Tutorial"
      ],
      "course_content": {},
      "requirements": [
        "basic knowledge about JavaScript syntax",
        "and already familiar with HTML and CSS"
      ],
      "description": "Learn how to make webpages Dynamic and Interactive using JavaScript to influence and manipulate page elements.\nit is a completely beginner-friendly course who want to learn about JavaScript DOM and BOM.\nThe Document Object Model (DOM) is a programming interface for HTML and XML documents. It represents the structure of a document as a tree of nodes, with each node representing an element or attribute of the document. The JavaScript DOM API allows developers to access and manipulate the elements of a web page.\nOne of the most common ways to use the DOM API is to select elements from the document using the document.querySelector() or document.querySelectorAll() methods. These methods take a CSS selector as an argument and return the first or all elements that match the selector, respectively.\nOnce an element is selected, it can be manipulated using the various properties and methods of the DOM API. For example, the innerHTML property can be used to set the content of an element, while the classList property can be used to add, remove, or toggle CSS classes on an element.\nThe DOM API also allows developers to create new elements and append them to the document. The document.createElement() method can be used to create a new element, while the appendChild() method can be used to add it to the document.\nThe DOM API also provides the ability to listen for events, such as clicks or key presses, on elements. The addEventListener() method can be used to attach an event listener to an element, which will be called when the event occurs.\nIn summary, the JavaScript DOM API provides a rich set of tools for interacting with the elements of a web page. It allows developers to select and manipulate elements, create new elements, and listen for events on elements. Understanding and utilizing the DOM API is crucial for building dynamic and interactive web pages.\nWhat will students learn in your course?\nJavaScript DOM Introduction Tutorial\nJavaScript DOM Targeting Methods Tutorial\nJavaScript DOM Get & Set Value Methods Tutorial\nJavaScript DOM querySelector & querySelectorAll Tutorial\nJavaScript DOM CSS Styling Methods Tutorial\nJavaScript addEventListener Method Tutorial\nJavaScript classList Methods Tutorial\nJavaScript parentElement & parentNode Method Tutorial\nJavaScript Children & childNodes Methods Tutorial\nJavaScript firstChild & lastChild Method Tutorial\nJavaScript nextSibling & previous sibling Method Tutorial\nJavaScript createElement & createTextNode Tutorial\nJavaScript appendChild & insertBefore Tutorial\nJavaScript insertAdjacentElement & insertAdjacentHTML Tutorial\nJavaScript replaceChild & removeChild Tutorial\nJavaScript cloneNode Tutorial\nJavaScript Contains Method Tutorial\nJavaScript hasAttribute & hasChildNodes Tutorial\nJavaScript isEqualNode Tutorial",
      "target_audience": [
        "web developers and designers"
      ]
    },
    {
      "title": "Kentico 12 MVC",
      "url": "https://www.udemy.com/course/kentico-12-mvc/",
      "bio": "How to build a website using Kentico 12 MVC (Installation, Configuration & Development)",
      "objectives": [
        "The students will learn how to build a site with Kentico 12 CMS using MVC as a development model.",
        "Kentico CMS (Content Management System)",
        "Downloading, installation and configuration of the Kentico instance",
        "IIS Express configuration",
        "Using, implementing and integrating HTML templates to the project",
        "Tips / Tricks",
        "MVC (model-view-controller) Essentials & Routing",
        "Login Logout Admin System",
        "Creating Page Types and Pages in Kentico",
        "Extracting page type custom field data to the page (Titles, Descriptions, Images etc...)"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of website development",
        "Visual Studio",
        "C#"
      ],
      "description": "This Course has been developed to help students who want to start using a CMS (Content Management System) and all it's tools to build a website.  When starting to learn website development most of the students quickly lose interest due to complicated configurations but here we explain the whole process step by step so a student can install, learn, use and develop a website.\nKentico versions are rapidly upgraded and Kentico 12 uses MVC (model-view-controller) as the development model rather than Portal & Web Forms based versions before, so this course can also help students and developers who worked with the older versions to easily switch with this detailed course.\n\n\nBonuses:\nDownloading, installation and configuration of the Kentico instance\nKentico CMS (Content Management System)\nUsing, implementing and integrating HTML templates to the project\nMVC (model-view-controller) Essentials & Routing\nCreating Page Types and Pages in Kentico\nTips / Tricks\nIIS Express configuration\nLogin Logout Admin System\nExtracting page type custom field data to the page (Titles, Descriptions, Images etc...)",
      "target_audience": [
        "Passionate Students",
        "Students who prefer using CMS (Content Management Systems)",
        "Developers who want to use Kentico but don’t want to spend thousands on Kenticos’s own training courses",
        "Kentico users"
      ]
    },
    {
      "title": "Basic HTML For Beginners: Build A Professional Web Pages",
      "url": "https://www.udemy.com/course/the-basics-of-html-build-web-pages-easy-and-quick/",
      "bio": "Learn Basic HTML Code For Beginners And Build And Edit HTML Web Pages Easily And Quickly - Even If You're A Technophobe",
      "objectives": [
        "You will know how to build web pages",
        "You will edit HTML web pages",
        "You will read and understand HTML easily.",
        "You will survive and even thrive in the online world."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to HTML",
          "Introduction and Quick Overview",
          "Hacking without knowing code",
          "Open and Close Tags",
          "Headings",
          "Help me",
          "Break tags",
          "Basic formatting",
          "Lists",
          "Image Tags",
          "Hyperlinks",
          "You can influence",
          "Bonus + Thank you"
        ]
      },
      "requirements": [
        "Basic computer and internet knowledge"
      ],
      "description": "Learn the Basics of HTML Code So That You Can Edit HTML Easily - Even If You're A Technophobe.\nThis 9-part video course is designed to show you how you can quickly and easily learn the basics of HTML, so you can survive the online world.\nIf you want to set up any type of webpage or landing page, you absolutely must know HTML.  The reality is that even if you are using visual HTML editors, you will still run into basic coding issues that often prevent you from moving forward.\nDoes that sound familiar to you?\nYou've been running away from trying to learn basic HTML code because it just looks too complicated, but the reality is that these problems will appear over and over again.\nSoon you will find yourself running in circles – frustrated!\nLearning just the basics of HTML code will allow you to create hyperlinks that link to other websites, add pictures, format your fonts and text, and make your content far more search engine friendly.\nEven when you encounter site builders or content management systems like WordPress, you will still need to know basic HTML code.\nThe truth is that compared to a lot of other languages, HTML is the easiest to learn.\nSo now is your chance - if you’ve always wanted to build web pages, but were intimidated by the code, this course will help you learn the basics so that you can survive and even thrive in the online world.\nIt's time to start, right?\nLet's do this!",
      "target_audience": [
        "Who should take this course? Whoever wants to build and edit web pages and wants to master the basic HTML easily"
      ]
    },
    {
      "title": "Angular with PHP and JSON web tokens (JWT)",
      "url": "https://www.udemy.com/course/angular-json-web-tokens-jwt-and-php/",
      "bio": "Create Angular application with authentication from scratch and integrate it with PHP backend",
      "objectives": [
        "be assured of their knowledge of the Angular framework",
        "being able confidently to create application in Angular",
        "understand the main principles and practical usage of components, services and JSON web tokens",
        "understand how to apply JWT refresh tokens"
      ],
      "course_content": {
        "Introduction": [
          "Initial code environment setup",
          "Helpful TypeScript VSCODE plugin (optional)",
          "Project Introduction",
          "Adding routing",
          "JSON Web Tokens",
          "Authentication service in PHP & project resources",
          "Feedback",
          "User information service in PHP",
          "Creating Angular services to interact with PHP",
          "Building Angular authentication",
          "Getting the token from service",
          "Quering external services with the token",
          "Are we logged in ?",
          "Adding route guards",
          "Polishing the application & project resources",
          "JWT - refresh tokens explained",
          "JWT - refresh tokens updated demo",
          "BONUS: Youtube channel & discounts to my courses"
        ]
      },
      "requirements": [
        "have Angular framework installed"
      ],
      "description": "Update: The whole Angular part of the course has been updated to use Observables, Subjects, and Angular Material.\nUpdate2: Refresh token functionality improved using httponly cookie.\nUpdate3: Project is converted to use Singals API.\nThis course will lead you through the step by step creation of an Angular application, which uses JSON Web Tokens (JWT) and gives an opportunity to log in and log out users. You will also understand how to integrate client-side Angular with server-side PHP for complete application development.\nIt is suitable for beginning to intermediate students who would like to create practical applications and prefer a hands-on approach of teaching.\nDuring the course you will learn how to use in practice:\ntemplate-driven model forms\ncommon user models and bindings using ngModel and interfaces\ndependency injection of services and external libraries\nJWT (JSON Web Tokens) in order to create and use for authentication service, both in PHP and Angular\nguards to protect URL routes\nHttpClient module for interaction with get and post requests\nObservables and Behaviour subject\nAngular Material Snackbar for displaying flash messages\nYou can follow along and try the examples alongside.\nThe course project files are updated in order to properly unsubscribe from services and avoid potential memory leaks.\nBecause of improved security the code now features saving the refresh token inside a http-only cookie.\nLatest Update: Added explanation and demonstration of JWT refresh tokens",
      "target_audience": [
        "Students who would like to explore Angular by creating application with login ability."
      ]
    },
    {
      "title": "Beginning Selenium WebDriver Testing in Python",
      "url": "https://www.udemy.com/course/beginning-selenium-webdriver-testing-in-python/",
      "bio": "Use Selenium automation, to save you time when testing in Python",
      "objectives": [
        "Use Selenium WebDriver to directly start a browser instance and control it for the code being tested",
        "Automate web browsers across many browsers and operating systems for Python code",
        "Along with Selenium scripts, start using unit testing frameworks for Python and save time",
        "Learn how Selenium WebDriver can use locators when using Python code",
        "Go from testing apps in a time-consuming way to testing them quickly",
        "Spend less time testing and more time developing and adding features to your apps, delighting customers",
        "See the next steps involved in the automation and testing of your Python apps using Selenium"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge keen to skill up with Selenium WebDriver as their testing tool of choice."
      ],
      "description": "This course introduces Python users to Selenium WebDriver. It will help users with basic programming knowledge to start code-testing. This course will help users cut down on their time spent on testing code written in Python.\nGet started with code testing using Selenium WebDriver. This course is an ideal starter kit for those of you who wish to start using Selenium WebDriver for testing, and for users with basic programming knowledge who are more interested in skilling up with Selenium WebDriver as their testing tool of choice. In this course, you will start by learning the benefits of Selenium WebDriver for testing. You will then start practicing the basics. Next, you will explore the biggest strength of Selenium: integrating your test instances with the browser of your choice. You will then actually test an authentication system in a sequential manner by following each of the required steps.\nBy the end of the course, you will be able to provide your customers and clients with better quality code in less time, enhancing customer satisfaction!\nAbout the Author\nAndy Craze is a full-stack software engineer with over 7 years' experience developing highly-scalable web applications. He has used Selenium WebDriver to test numerous different products, ranging from large-scale enterprise systems and multi-tenant ecommerce platforms to simple static sites and documentation software. Andy works in Java and Python but has experience in a broad range of languages and technologies, including Haskell. His code has been used by Intel, Discogs, and Arizona State University",
      "target_audience": [
        "This course targets users with basic programming knowledge keen to skill up with Selenium WebDriver as their testing tool of choice. They may or may not know how to develop applications but wish to test code faster with minimal resources and add quality to their customer experience."
      ]
    },
    {
      "title": "PHP Fundamentals 2019",
      "url": "https://www.udemy.com/course/php-fundamentals-2019/",
      "bio": "Learn Server Side Development with PHP and Earn the PHP Developer Fundamentals Certification",
      "objectives": [
        "Server Side Development with PHP",
        "PHP Syntax and Command Structure",
        "Major PHP Commands and Methods",
        "Back End Processing with PHP",
        "Form Processing with PHP"
      ],
      "course_content": {},
      "requirements": [
        "Windows, Mac or Linux Computer with Web Browser",
        "The Desire to Learn the most Common Server Side Language Used on the Web",
        "Helpful to Understand HTML Fundamentals before starting this course"
      ],
      "description": "Framework Guarantee:  If this is not one of the best courses you've taken on Udemy, please take advantage of Udemy's refund policy and get your money back!\n\n\nYes, we are THAT confident that you will be beyond satisfied with this PHP Course and Certification program.\nMy name is Julio Quevedo, and I am the author and instructor for this course.  I work with Framework Television.  If you've heard that name before it's because 1.5 million people have learned to code from us online on Udemy and other venues.  That's a lot of folks!\nDon't be fooled by those 20+ hour courses that also claim to teach PHP.  This course and certification program will teach you everything you need to know, and won't waste your time with superfluous information designed to make the course seem more valuable.   PHP Fundamentals 2019 is for folks who don't have time to waste and want the recognition that being a certified professional carries.\n\n\nCertification:  The Recognition You Deserve\nEnrolling in this course will make you a candidate for the Framework PHP Fundamentals Certification.  This Certification is earned by completing all the lessons in the course and turning in each lab exercise and final project as directed the course content.  There is NO exam required to earn your certification.   (We think the actual code you write is a much better indicator of your knowledge than artificial exam!)\nAs an PHP Specialist, you are uniquely qualified to help companies, brands and development firms to create high-quality PHP code within server side applications. Your knowledge will be critical to teams that develop apps with PHP as you help them create high quality, highly maintainable code.\nThis certification is not just a piece of paper to hang on your wall. The PHP Fundamentals Certification is validated by Credential (dot net). That means your certification will appear on an independent Credential page accessible by private URL. You'll also be able to list the certification on your LinkedIn account so everyone can see your accomplishment. (Employers have been known to scan for certified individuals on LinkedIn.)\n\n\nHelp When You Need It\nYou're not trying to complete your certification alone. We have an active, helpful community of members and expert instructors standing by to help you and answer questions. The community is also where you'll get to know the other members, share experiences and your success as you complete certification.\n\n\nThe Framework Success System\nYour success is our success.\nThat's why we've invested heavily in the Framework Success System. We're not just making shows about tech-- but we're helping you learn valuable skills that will start your career in digital technology.\nHere's what you need to know about our system:\nI. You'll Learn More Quickly From Our Videos with the Framework Video Countdown\nEach new video we produce will display the subjects covered in the video along the right-hand side of the screen. This will help you navigate through the video and rapidly find any portions of the video you need to rewatch for reference or review.\n\n\nII. You'll get a second exposure to all the information presented in a video from the Framework Course Guide\nEveryone learns a little differently. Years of academic research has told us that.\nOur unique course guides review all of the critical points made in the video lectures, giving you a second exposure to the information. This second exposure will help you retain the material and be able to apply it to your own digital development work.\nThe Framework Course Guide is like getting a free PHP book with your course.\n\n\nIII. You Gain Experience with Confidence-Building Activities\nWith every video, Framework Television includes a series of activities that will help you retain the information in the video and the course guide. Digital development is a learn-by-doing activity and the more you practice, the more successful you'll be.\nWe want to help you achieve your goals, and the Framework Success System supports your success.\n\n\nTo Sum It Up\nWith our \"best course you've taken\" guarantee, online help community, no-exam-required certification, and proven success system, enrolling in this program is a no-brainer.  Click the enroll button and get on the road to success with PHP!",
      "target_audience": [
        "Those who want to earn a Certification in Server Side Development",
        "Anyone who wants to learn about server side web development",
        "Those interested in starting a career in coding",
        "People who want to create Web Sites Professionally or Just for Fun"
      ]
    },
    {
      "title": "The Fundamentals of Web Front-End Development",
      "url": "https://www.udemy.com/course/crashing-course-for-web-front-end-development/",
      "bio": "HTML + CSS + BootStrap + JavaScript + JQuery to get you on the road of modern frontend design",
      "objectives": [
        "Develop your own website front-end using HTML, CSS, Bootstrap, JavaScript and JQuery"
      ],
      "course_content": {
        "Intro": [
          "Course Intro"
        ],
        "HTML Essentials": [
          "HTML - intro and basic tags",
          "HTML - Attributes and Styles",
          "HTML - More tags <div>, <a>, <img>",
          "HTML - More tags <table>, <ul>, <ol>",
          "HTML Project - A Simple Website"
        ],
        "CSS Essentials": [
          "CSS - Intro and HTML element selectors",
          "CSS - Insert CSS to HTML; background property",
          "CSS - Text property, font, hyperlink",
          "CSS - Box model; border, margin, padding, dimension",
          "CSS - Display, position, z-index, float",
          "CSS Project - A Personal Website"
        ],
        "BootStrap Essentials": [
          "BootStrap - Getting started",
          "BootStrap - How to set up a template",
          "BootStrap - How to use BootStrap components",
          "BootStrap - Using tables and nav bar",
          "BootStrap Project - Music Website Front-End"
        ],
        "JavaScript Essentials": [
          "JavaScript - Setup",
          "JavaScript - Data types 1",
          "JavaScript - Data types 2 and Operators",
          "JavaScript - Conditional and loop statements",
          "JavaScript - Arrays",
          "JavaScript - Functions",
          "JavaScript - Classes",
          "JavaScript with Web - part 1",
          "JavaScript with Web - part 2",
          "JavaScript project - Random Quotes",
          "JavaScript Project - Pomodoro Clock"
        ],
        "JQuery Essentials": [
          "JQuery - Intro",
          "JQuery - Effects",
          "JQuery - HTML",
          "JQuery - AJAX",
          "JQuery Project - Calculator",
          "JQuery project - Tic Tac Toe"
        ],
        "Some More Projects": [
          "Project 1 - Free Code Camper News",
          "Project 2 - Simple Wikipedia Search Engine"
        ]
      },
      "requirements": [
        "It's better that you already know some of the basics of front-end design. If not, it means more work is needed to get your throught the course."
      ],
      "description": "More than 5 hours of lectures covering HTML, CSS, BootStrap, JavaScript and JQuery. You don't need to know every detail of the topics to get started on building your website.\n9 projects as assignments will force you to learn through yourself, whose knowledge will eventually retain in your body.\nWhy this course?\nThere are many web front-end courses out there. This course has the following features:\nYou don't need to know every detail to get started. This course goes through the essential parts of each subject with examples, not to a wildly comprehensive level, but enough to get you started.\nHTML + CSS + BootStrap + JavaScript + JQuery. A good package of skills and pretty much what you need to start to build a modern website front-end.\nNo detail steps for your projects. You have to rely on yourself to use the knowledge learned to build your own projects. This could be hard. However, you would definitely be able to achieve it with patience and efforts.\n\n\nWhy there is no detail steps in those projects?\n\nUsually a project is guided as a walk-through in other online courses. The good side is that you can follow the steps to build whatever it instructs you. However, simply typing by following instructions doesn't give much to you. You have to first understand and then do it on your own to retain those knowledge in your body. Project without detail steps trains you on how to attack the problem (the project to be built in this case) using the knowledge learned. Hence, you need to do your research and find ways to solve each issue blocking you from going further.\nThere are two ways of thinking, reactive thinking and proactive thinking. Reactive is you start to remember something after logically reminded by other things. Proactive is thinking without direct reminding or hints. The latter is much more difficult than the former. Doing projects by reverse engineering trains you in the latter form.\n\n\nWhat if I get stuck or don't understand it?\nWell, that's the point of learning, right? Try to search online and use resources to solve your problems. You need to think and train yourself to learn how to attack any obstacles that in front of you.\n\n\n\nBut there are other courses that have longer duration and wider coverage on those topics?\nYou can learn comprehensively or learn what is enough to get you started. I personally enjoy knowing just what I need so that I can get my hands dirty on doing stuff. Look at those topics that are covered in this book, each one could be a complete book or course to study. It all depends on what you are interested in.\n\n\nSo what should I plan to do?\n1. Watch the tutorial video and know the element topics in the tutorial.\n2. Practice writing code of each element topic yourself and see the outcome of it. Any trouble, google it.\nFor project, you can design the layout first and then add in JavaScript/JQuery to control the logic.",
      "target_audience": [
        "Anyone who wants to enhance their front-end development skills and would like to find an efficient course as guidance"
      ]
    },
    {
      "title": "Vibe Coding: Build a Website in Minutes with Lovable",
      "url": "https://www.udemy.com/course/vibe-coding-build-a-website-in-minutes-with-lovable/",
      "bio": "Master Vibe Coding with Lovable: Build Stunning, Responsive Websites in Minutes Without Writing Code",
      "objectives": [
        "Build professional websites fast using the act of Vibe Coding using the Lovable platform— no manual coding needed.",
        "Launch responsive full stack websites and web apps in minutes, ready for desktop and mobile users.",
        "Use AI-assisted Vibe Coding to generate clean, responsive HTML, CSS, JavaScript code, using any libraries and frameworks effortlessly with zero coding knowledge",
        "Customize website layouts, sections, and features without touching a single line of code.",
        "Master the Lovable platform to design, structure, and publish websites with real development standards.",
        "Create stunning, functional websites perfect for businesses, portfolios, blogs, startups, and more."
      ],
      "course_content": {
        "Introduction": [
          "Welcome Address",
          "What is Vibe Coding",
          "Vibe Coding: The Future of web development"
        ],
        "Setting up the Tools and Environment": [
          "Quick Overview of Lovable",
          "Creating Account on the Lovable Platform",
          "The Tools you need"
        ],
        "Laying the foundation for a successful Project": [
          "NLP Prompt Engineering",
          "Planning Your Website"
        ],
        "Building Project 1": [
          "Building a Portfolio Website",
          "Editing Project"
        ],
        "Building Project 2": [
          "Building a Website for a General Hospital",
          "Deploy your Project"
        ],
        "Additional Video": [
          "Conclusion and Congratulations"
        ]
      },
      "requirements": [
        "No prior coding experience needed. Lovable writes the code for you!",
        "A basic understanding of how websites work (helpful, but not required).",
        "Access to a computer or laptop with an internet connection. You can test it out with your smartphone if you don't own a laptop.",
        "Willingness to learn a new, faster way of building websites and web apps.",
        "A free or paid Lovable account to start creating your projects. Will teach you how to get one in the training.",
        "Curiosity and creativity to explore website design using AI-driven tools."
      ],
      "description": "Tired of wasting weeks or thousands of dollars just to build a website? Imagine creating a full, professional full-stack website or web app in minutes without the stress of coding it yourself.\n\n\nWelcome to Vibe Coding: Build a Website in Minutes with Lovable, the fastest way to launch your ideas online with real, production-ready code.\n\n\nInside this course, you will master the art of Vibe Coding. You will learn how to give clear prompts to Lovable, generate beautiful, multi-page websites, and even build dynamic web apps without touching a single line of code yourself. This is not a no-code shortcut. You are getting real, high-quality code that is ready for business or personal use.\n\n\nThere are some excellent Vibe Coding tools out there such as Cursor, Windsurf, Bolt, and others. There are also more being developed as we speak. But I chose Lovable in this course because it is the best for non-technical builders. It requires zero to little technical knowledge for its use, practically zero technical knowledge. You don't write a single line of code when using Lovable, it does it for you 100%. That's the joy of vibe coding. Just give your prompt to Lovable and it will crank out all the codes for you in real time. When it runs into an error as a result of a bug in the code, it will indicate an error. All you have to do is click on \"fix it\" and it will quickly run through the code, identify the bug, and have it fixed automatically. That's how awesome Lovable is. That's why I chose it over Bolt, Cursor, Windsurf, and other Vibe coding platforms in this course.\n\n\nSome of the Vibe Coding tools in the market right now are: v0 by Vercel, GitHub Copilot, Replit, Tempo, Create, Cody, HeyBoss, Codeium, Creatr, Qodo, Glide, GoCodeo, Tempo by Tempo Labs, Softgen by Kortix AI, Devin by Cognition AI, Goose by Block, WebSparks by WebSparks AI, Zed by Zed Industries, Fine by Fine dev, Cline by Cline AI Coding Agent, Codev by Co dev, Devika, Lazy AI, Augment Code, and Claude Code by Anthropic among others. Expect more coming out. Vibe coding and AI took the entire web and software development and software engineering field as a whole by storm.\n\n\nWhether you are an entrepreneur, a small business owner, a freelancer, a student, or someone dreaming of a personal project, this course gives you the skills to build websites that look and perform like professional developers crafted them.\n\n\nBy the end of this course, you will be able to design and launch websites for any business, portfolio, startup, or passion project using the power of Vibe Coding with Lovable.\n\n\nStart building smarter and faster today.\nClick Enroll Now and create your dream website without the headache.",
      "target_audience": [
        "Vibe Coding enthusiasts.",
        "Beginners who want to build websites without learning to code manually.",
        "Entrepreneurs, freelancers, and startup founders needing fast, professional websites.",
        "Designers and creatives looking to turn ideas into real websites with Lovable.",
        "Tech enthusiasts curious about AI-driven web development and want to explore Vibe Coding with tools like Lovable.",
        "Students and career changers wanting to learn modern website building methods.",
        "Anyone tired of traditional coding but eager to launch functional web apps quickly."
      ]
    },
    {
      "title": "Sui Blockchain with Move & React.js - The Complete Guide",
      "url": "https://www.udemy.com/course/sui-dapps-with-move-react-build-real-projects/",
      "bio": "Develop Sui dApps with Move (Rust-based) and React. Build a voting system and meme coin. Code smart contracts for Web3.",
      "objectives": [
        "Build real-world dApps on the Sui blockchain using Move and React",
        "Master Move's core concepts, including owned and shared objects",
        "Learn how to create coins, including a meme coin",
        "Write and execute unit tests for smart contract functionality"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Heads-up & Requirements"
        ],
        "Project Setup": [
          "Project Setup",
          "Install Sui",
          "Gitignore note",
          "Setup Sui client",
          "Setup Sui wallet",
          "Create more accounts"
        ],
        "Sui Basics": [
          "Generate move package",
          "Start coding proposal",
          "Value and Reference",
          "Build and publish package",
          "Build transactions"
        ],
        "Frontend Improvements": [
          "Proposal View",
          "Proposal Item styling",
          "Navbar",
          "Wallet View",
          "Navigation Provider",
          "Preserve the view after reload"
        ],
        "Wallet Connection": [
          "Tanstack query",
          "Add sui packages",
          "Wallet status",
          "Connect button",
          "Owned objects",
          "Objects additional data",
          "Display sui coin balance"
        ],
        "Unit Testing & Move": [
          "Proposal module",
          "New dashboard and register proposal",
          "Start Testing",
          "Test for dashboard",
          "Test for created proposal",
          "Move tests to testing module"
        ],
        "Capabilities & OTW": [
          "Admin Cap",
          "Issue admin cap for test",
          "Test create without admin cap.mov",
          "New proposal test helper",
          "Admin cap to create dashboard",
          "OTW"
        ],
        "Move Core Concepts": [
          "Drop ability",
          "Hot potato pattern",
          "Copy ability",
          "Copying and Borrowing",
          "Moving and References"
        ],
        "Register Proposal & Publish Contract": [
          "Error handling",
          "Test register proposal",
          "Publish smart contract",
          "Store and retrieve dashboard id",
          "Register proposals",
          "Fix register proposal"
        ],
        "Proposals Showcase - Frontend": [
          "Query to fetch dashboard",
          "Extract proposal ids",
          "Query proposal data",
          "Parse proposal",
          "Display vote count",
          "Display expiration time",
          "Vote modal",
          "Display proposal in Modal",
          "Interface vs types",
          "Expiration stylings"
        ]
      },
      "requirements": [
        "Basic programming knowledge. Rust/Move familiarity is helpful but not required."
      ],
      "description": "This course is your ultimate guide to mastering blockchain development on the Sui blockchain. Whether you’re a beginner exploring the world of decentralized applications (dApps) or an experienced developer diving into Sui, this course combines practical projects with in-depth explanations of the Move programming language and React.\nWhat Makes This Course Unique?\nRather than focusing on abstract concepts, this course is project-based, ensuring you learn by building. You’ll create two fully functional applications from scratch, covering both Move smart contracts and React-based frontends, while diving deep into Sui’s unique features like owned and shared objects, object storage, and gas fees. Additionally, you’ll write and execute unit tests to ensure the reliability and security of your smart contracts.\nCourse Highlights\nKickstart Your Blockchain Development Journey\nGain a solid understanding of blockchain principles and how Sui differentiates itself with its object-centric architecture.\nSet up your development environment to write, test, and deploy Move smart contracts seamlessly.\nProject 1: Voting Proposal System\nDelve into Sui’s object model by building a voting proposal system that covers all aspects of a professional-grade application:\nCreate and Manage Proposals: Develop a shared object-based system for creating proposals with expiration dates.\nSecure Voting Mechanisms: Prevent double voting with a voter registry maintained within each proposal.\nTokenized Participation: Issue NFTs to users as proof of their vote, introducing tokenized user interactions.\nTesting for Perfection: Write comprehensive unit tests to validate the functionality of your smart contracts, ensuring they behave as expected in all scenarios.\nAdvanced Design: Learn modular programming techniques to build reusable, efficient, and secure contract modules.\nBy focusing on both functionality and rigorous testing, this project ensures you gain the skills to develop reliable and secure smart contracts.\nProject 2: Meme Coin\nBuild and release your own meme coin, taking the next step in your blockchain development journey:\nToken Creation: Define and deploy a custom token with a total supply of 1 billion.\nTokenomics Strategy: Explore best practices for token distribution and supply management.\nLiquidity Pool Fundamentals: Gain a clear understanding of liquidity pools and how to set one up for your token to ensure tradability and market dynamics.\nFrontend Integration: Build a React-based interface to showcase your token and allow users to interact with it.\nLearn Core Sui Blockchain Concepts\nThis course is designed to teach you Sui’s unique features in the context of real-world applications:\nOwned and Shared Objects: Learn how Sui manages assets through its object-based model, and how to utilize these concepts in your projects.\nMove Programming Best Practices: Write secure and efficient smart contracts using modular and reusable components.\nUnit Testing: Master the art of testing smart contracts to ensure robust functionality and safeguard your applications.\nFrontend Integration\nBuild intuitive and user-friendly dApps using React.\nConnect smart contracts to your frontend with wallet integrations and blockchain data.\nCreate seamless user experiences that bridge blockchain functionality with real-world use cases.\nDeployment and Beyond\nTest, debug, and validate your applications using unit tests.\nLearn the steps to deploy your projects on the Sui testnet and mainnet.\nDiscover strategies to grow your blockchain applications and build a lasting impact in the ecosystem.\nBy the End of This Course\nYou’ll have:\nA Comprehensive Understanding of Sui Blockchain Development: Master Move’s core concepts and how to leverage Sui’s unique architecture.\nTwo Real-World Projects in Your Portfolio: A rigorously tested Voting Proposal System and a Meme Coin with liquidity pool fundamentals.\nThe Skills to Build and Deploy dApps: Confidence to design, code, test, and publish innovative applications on the Sui blockchain.\nTake the leap into blockchain development with Sui and Move—join the course now and start building the future!",
      "target_audience": [
        "Developers eager to learn Sui blockchain and Move programming.",
        "Blockchain enthusiasts wanting to build practical dApps.",
        "Beginners in smart contracts looking for hands-on experience."
      ]
    },
    {
      "title": "LEARNING PATH: Java: Microservices with Java for Experts",
      "url": "https://www.udemy.com/course/learning-path-java-microservices-with-java-for-experts/",
      "bio": "Deploy smaller, lighter, and faster services that can be implemented easily in a Java production environment",
      "objectives": [
        "Use domain-driven design to design and implement microservices",
        "Secure microservices using Spring Security",
        "Troubleshoot and debug issues faced during development",
        "Consume microservices using a JavaScript web application",
        "Learn best practices and common principles for microservices",
        "Get familiar with the authentication and authorization techniques for your application",
        "Troubleshoot and configure in few steps using ELK Stake and Zipkin",
        "Explore how UI app can interact with backend microservices"
      ],
      "course_content": {
        "Mastering Microservices with Java": [
          "The Course Overview",
          "A Solution Approach Using New architecture paradigm",
          "Sample REST Service",
          "Design importance and Domain Driven Design (DDD)",
          "The Building Blocks - I",
          "Building blocks – II: Artifacts of DDD",
          "Aggregates and Repository",
          "Factory and Modules",
          "Strategic Design and Principles - I",
          "Strategic Design and Principles - II",
          "Implementing Entity",
          "Implementing Repository",
          "Implementing Service",
          "OTRS Overview",
          "OTRS Services",
          "Implementing Restaurant Service",
          "Implementing the GET Endpoint",
          "Implement Registration and Discovery Service",
          "Testing",
          "Test Your Knowledge"
        ],
        "Mastering Microservices with Java - Part 2": [
          "The Course Overview",
          "Overview of the Microservice Architecture Using Netflix OSS",
          "Load Balancing",
          "Implementing Edge Services",
          "Client-side Load Balancing",
          "Circuit Breaker",
          "Monitoring : Hystrix Dashboard and Turbine",
          "Microservice Deployment Using Containers",
          "Integration Testing with Docker",
          "Authentication and Authorization",
          "OAuth 2.0",
          "Basic Setup for OAuth",
          "Grant Types",
          "SPA and AngularJS",
          "Setup and Installation",
          "OTRS App and Backend Microservices",
          "Overview",
          "Key Metrics",
          "Tools and Frameworks",
          "Tracing of Requests",
          "Log Monitoring",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Practical knowledge of Java is required."
      ],
      "description": "With the cloud being used widely, Java enterprise application development has moved from monolithic applications to microservices which are small, lightweight, process-driven components. Hence, microservices in Java are the next big thing in developing scalable, easy-to-maintain Java applications. So, if you are a Java developer or a  DevOps engineer looking to upgrade your Java and microservice skills, then go for this Learning Path.\n\n\n\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\nLearn how to build, deploy, and test microservices from scratch with the help of  easeDesign\nMake your microservices secure using Spring Security\nLet’s take a look at your learning journey. You will start off by gaining a deep understanding of the core Java microservice concepts and framework. You will then focus on the high-level design of large software projects. You will gradually move on toward setting up the development environment and configuring it before implementing continuous integration to deploy your microservice architecture. Next, you will be shown how to use Spring security, and how you can secure microservices and test effectively using REST Java clients and other tools. Finally, you will learn the best practices and common principles of microservice design to troubleshoot and debug issues faced during development.\n\nBy the end of this Learning Path, you will be confident in building and deploying services that can be implemented easily in a production environment.\nAbout the Author :\nSourabh Sharma has more than a decade of experience in product/app development. His expertise lies in developing, deploying, and testing N-tier web applications. He loves to troubleshoot complex problems and look for the best solutions. In his career, he has successfully developed and delivered various standalone and cloud apps to happy Fortune 500 customers. Sourabh has also initiated and developed a microservice-based product for his US-based top enterprise product company. He started writing Java programs in his college days, in the late 90s, and it's still an enduring passion.",
      "target_audience": [
        "This Learning Path is targeted at Java developers and DevOps engineers looking to upgrade their Java and microservice skills"
      ]
    },
    {
      "title": "Professional Node.js",
      "url": "https://www.udemy.com/course/professional-nodejs/",
      "bio": "Build highly scalable, single-language applications that share code between the server and client",
      "objectives": [
        "Design server-side JavaScript patterns and understand their application via use cases",
        "Write asynchronous code by leveraging various constructs",
        "Understand data processing with transform streams and combine them into different layouts",
        "Use tricks to solve concerns and get higher scalability and modularity in your apps",
        "Untangle modules by coherently organizing and connecting them",
        "Reuse popular techniques to solve common design and coding issues",
        "Leverage React and its ecosystem in universal applications"
      ],
      "course_content": {
        "Setting the Stage": [
          "Course Overview",
          "Setting Up the Environment",
          "Lesson Overview",
          "Learning the Node way",
          "Understanding Node.js Version 6 and ES2015",
          "Template Literals",
          "Working with the Reactor Pattern (Part 1)",
          "Working with the Reactor Pattern (Part 2)",
          "Summary",
          "Test Your Knowledge"
        ],
        "Node.js Essential Patterns": [
          "Lesson Overview",
          "The Callback Pattern",
          "The Module System and its Patterns",
          "The Observer Pattern",
          "Summary",
          "Test Your Knowledge"
        ],
        "Asynchronous Control Flow Patterns with Callbacks": [
          "Lesson Overview",
          "The Difficulties of Asynchronous Programming",
          "Using Plain JavaScript",
          "The async Library",
          "Summary",
          "Test Your Knowledge"
        ],
        "Asynchronous Control Flow Patterns with ES2015 and Beyond": [
          "Lesson Overview",
          "Getting to Know Promises",
          "Generators",
          "Async/Await Using Babel",
          "Comparison",
          "Summary",
          "Test Your Knowledge"
        ],
        "Coding with Streams": [
          "Lesson Overview",
          "Discovering the Importance of Streams",
          "Getting Started with Streams (Part 1)",
          "Getting Started with Streams (Part 2)",
          "Asynchronous Control Flow with Streams",
          "Piping Patterns",
          "Summary",
          "Test Your Knowledge"
        ],
        "Design Patterns": [
          "Lesson Overview",
          "Factory",
          "Revealing Constructor",
          "Proxy",
          "Decorator",
          "Adapter",
          "Strategy",
          "State",
          "Template",
          "Middleware",
          "Command",
          "Summary",
          "Test Your Knowledge"
        ],
        "Wiring Modules": [
          "Lesson Overview",
          "Modules and Dependencies",
          "Patterns for Wiring Modules (Part 1)",
          "Patterns for Wiring Modules (Part 2)",
          "Wiring Plugins",
          "Summary",
          "Test Your Knowledge"
        ],
        "Universal JavaScript for Web Applications": [
          "Lesson Overview",
          "Sharing Code with the Browser",
          "Introducing Webpack",
          "Patterns for Wiring Modules (Part 2)",
          "Summary",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Developers with intermediate experience in Node .js will also find the techniques presented in this course beneficial."
      ],
      "description": "Through Professional Node.js, you will be presented with various sets of patterns that you can use to efficiently solve your everyday development and design problems. You will understand what different traditional design patterns look like in Node.js, and how to design modules that focus on performing a single task at a time. You will gain an understanding of the basic building blocks and principles of writing large and well-organized Node.js applications. You will be able to apply these principles to problems that don't fall within the scope of existing patterns.\nAbout the Authors\nMario Casciaro is a software engineer and entrepreneur, passionate about technology, science, and open source knowledge. Mario graduated with a master's degree in software engineering and started his professional career at IBM, where he worked for several years on different enterprise products, such as Tivoli Endpoint Manager, Cognos Insight, and SalesConnect. He then moved to D4H Technologies, a growing SaaS company, to lead the development of a new bleeding-edge product for managing emergency operations in real time. Currently, Mario is the cofounder and CEO of Sponsorama, a platform to help online projects raise funds through corporate sponsorship. Mario is also the author of the first edition of Node.js Design Patterns.\nLuciano Mammino is a software engineer who was born in 1987, the same year that Nintendo released Super Mario Bros in Europe, which happens to be his favorite video game. He started coding at the age of 12 using his father's old Intel 386, with only the DOS operating system and the QBasic Interpreter. After studying for a master's degree in computer science, he developed his programming skills, mostly as a web developer, working mainly as a freelancer for companies and start-ups all over Italy. After a start-up parenthesis of 3 years as CTO and cofounder of Sbaam in Italy and in Ireland, he decided to relocate to Dublin to work as a senior PHP engineer at Smartbox. He loves developing open source libraries and working with frameworks such as Symfony and Express. He is convinced that JavaScript’s success is still at the very beginning and that it will have a huge impact on most web- and mobile-related technologies in the future. For this reason, he spends most of his free time improving his knowledge of JavaScript and playing with Node.js.\nJames Murphy is a software consultant and entrepreneur. His passions include technology, self-improvement, and psychology. He graduated from the computer science department of the University of Manchester. He's worked for a number of the UK's top tech companies, ranging from the Hut Group and Auto Trader to the BBC and Booking. Having previously been a lead engineer at Booking, James decided to delve further into entrepreneurship and contracting. His first experience with Node.js was working on the second generation of BBC Live, which was built entirely using Node.js and microservices on the AWS platform. He has a blog at devangst and is also a contributing author and member of the Simple Programmer community. He is the author of Node.js Design Patterns, Second Edition, by Packt.\nGlenn Dayton has been a full stack developer for several years now with a strong passion for teaching spanning an even longer amount of time. He works at NASA JPL as a Backend Developer helping build tools that modernize the way spacecraft are tested.",
      "target_audience": [
        "This is an ideal course for developers, who are already in contact with Node .js, and now want to get the most out of it in terms of productivity, design quality, and scalability. You need only some prior exposure to the technology. This course will cover some basics before moving on to the advanced concepts."
      ]
    },
    {
      "title": "React Native From Scratch with Hooks and Context",
      "url": "https://www.udemy.com/course/react-native-from-scratch-with-hooks-and-context/",
      "bio": "Learn React Native with Hooks and Context and leverage your existing web skills. Build user-friendly web apps with React",
      "objectives": [
        "Learning React Native is a great avenue through which to gain experience developing mobile apps.",
        "React Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android",
        "Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.",
        "Created by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting android, ios",
        "Businesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native.",
        "Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms",
        "React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and Mongo",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "React Native expo, react native cli, react native hooks and react native context",
        "Set up virtual environment to be able to practice",
        "Install React-Native dependencies for both MAC and Windows",
        "Run Android and IOS simulator on computer",
        "Expo installation",
        "Run Expo App on Mobile Device",
        "JSX syntax and expressions",
        "ES6 syntax",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "Send an HTTP request to a remote API",
        "State and Props systems",
        "Reusable components",
        "Reach another app on the phone from the React-Native app",
        "Introduction of Hooks&Context",
        "Create Context with Class Based and Functional Components",
        "How to Consume Context in Class Based and Functional Components",
        "How to Use Multiple Context",
        "Hooks Functions (useState, useEffect, useReducer, useContext...)",
        "How to Create Reducer",
        "How to Use Reducer",
        "Complete react native course with hooks and context"
      ],
      "course_content": {
        "React Native with Hooks and Context Course Content": [
          "How Will We Progress in This React Native Course?",
          "Got Any Questions about React Native?",
          "Github Course Repo in React Native with Hooks and Context",
          "FAQ about React Native, Hooks and Context"
        ],
        "React Native - Set Up For Windows": [
          "Tools We Need for ReactNative CLI",
          "Windows Setup for React Native",
          "How to Start Emulator in Android Studio for React Native projects"
        ],
        "React Native - Set Up For Mac": [
          "Tools We Need for ReactNative CLI",
          "OSX Setup of React Native",
          "Start The Emulator"
        ],
        "React Native and Expo": [
          "React Native on Mobile Device",
          "React Native Expo CLI project"
        ],
        "React Native and JSX": [
          "How To Create an App with React Native",
          "See Content on Emulator in React Native",
          "Why Do We Need React and React-Native?",
          "ES6 Syntax ( Let, Const, Var ) in React",
          "React Native First Component",
          "How to Show Component on Device in React Native",
          "How to Build Our First App in React Native",
          "How to Connect a Component to the Root Component in React Native",
          "Import a Component to Another Component in React Native",
          "quiz"
        ],
        "Styling For React Native": [
          "Styling with JSX in React",
          "Displaying of Views in React Native",
          "Header Component’s Styling in React",
          "React Props in React Native",
          "How to Reuse Code with Props System in React",
          "React Native Quiz"
        ],
        "API Request With React Native": [
          "How to Show a List to the User",
          "The List Component",
          "Func Component vs Class Based Component"
        ],
        "LifeCycle Methods in React js and react native": [
          "When Do We Need Lifecycle Methods?",
          "Lifecycle Methods in React js and react native",
          "Making Request With Axios",
          "quiz"
        ],
        "State In React Native": [
          "What Is State and How To Initial State?",
          "Using of State",
          "A Component’s Lifecycle with State",
          "List Component",
          "List Item Component",
          "Reusable Components",
          "Styled Component for List Items",
          "Usage of Props.children",
          "Item Section",
          "React Native Quiz 2",
          "quiz"
        ],
        "Layout With Flexbox in React Native": [
          "Introduction to the Flexbox",
          "Section Header Component in React Native",
          "How to Show an Image",
          "Scrollable Content in React Native",
          "User Interaction with React Native",
          "Event Handlers in React Native",
          "How to Open Another App (Browser)",
          "quiz"
        ]
      },
      "requirements": [
        "No prior React and React-Native knowledge, you learn complete react native",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don't need to be an expert",
        "Basic ES6 knowledge would be beneficial but not required",
        "A computer with access to the internet",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn React Native",
        "Desire to learn mobile development with full React Native course",
        "Desire to learn react native hooks, react native context, react native cli, react native expo",
        "Desire to learn mobile app development"
      ],
      "description": "Hello there,\nWelcome to React Native From Scratch with Hooks and Context course.\nLearn React Native with Hooks and Context and leverage your existing web skills. Build user-friendly web apps with React\nDo you wanna learn coding techniques to make efficient development with React?\nDo you want to learn to build fast, user-friendly web apps with React?  Then you are at the right place.\nReact-Native is a library developed by the react native team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React is all you need to create awesome mobile apps that work on both Android and iOS.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nThis reactnative course is for all levels. To be able to take this course, all you need is a basic understanding of JavaScript.\nIn the react native from scratch course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer.\nLater on the react native app course, we are going to learn the basics of React and React Navigation. JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course.  You are going to learn the latest React features \"Hooks and Context\" system.\nWe are going to create two nice looking app, will guide you to learn \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nWe tried to tell all complex topics in very detail on the react hooks course. We used some diagrams to tell some important topics and created a nice-looking mobile application. expo\nAt the end of the course;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class Based and Functional Components\nHow to Consume Context in Class Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nreact native hooks\nreact native web\nreact native expo\nreact native context\nlearn react native from scratch\nreact native redux\nreact native for web\n\"react native\"\nreactnative cli\nreact native with hooks\nreact hook\nreact native hook\nreact native hooks and context\nreact native web app\nreact and react native\nreact native typescript\nreact context\nreact native scratch\nreact native native\nreact native firebase\nreact and reactnative\nreact mobile\nreactive native\nreact.js\nreactnative codepush\nmobile react native\nreact hooks postgresql\nreaxt native\nredux toolkit\n\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and the React is easy to understand for the beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our React Native From Scratch with Hooks and Context course\nWe offer full support, answering any questions.\nSee you in the React Native From Scratch with Hooks and Context course!",
      "target_audience": [
        "Programmers who want to learn React, React-Native and Hooks and Context",
        "Someone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "Anyone who wants to create mobile applications with both react-native-cli and Expo-cli",
        "Anyone who wants to learn latest React features \"Hooks and Context\" system",
        "Anyone who wants to learn React Hooks & Class-based Components",
        "Anyone who wants to create mobile applications with both react-native-cli and expo-cli",
        "People who are planning a career in the react native application world",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who want to take their web development skills to the next level and learn a future-proof technology",
        "Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more."
      ]
    },
    {
      "title": "Netlify - The Complete Guide (FullStack Serverless)",
      "url": "https://www.udemy.com/course/netlify-complete/",
      "bio": "Netlify under 3.5 Hours. Integrate Gatsby with Netlify, Netlify CMS, Compare Netlify with AWS. JAMstack architecture.",
      "objectives": [
        "Learn Netlify from scratch. A new approach to faster, more secure websites.",
        "Connect the entire JAMstack ecosystem to build apps faster.",
        "Netlify User identity, Instant forms, Serverless functions, Analytics, Split testing & rollouts, Large media....",
        "How to Launch your own blog with Netlify CMS, How Gatsby and Netlify goes hand in hand.",
        "Learn the modern way of Instantly building and deploying web sites."
      ],
      "course_content": {},
      "requirements": [
        "A Laptop/Smart Phone and internet connection.",
        "You DON'T need any prior knowledge with Netlify/AWS or similar services!",
        "Knowledge to write(or Copy) a simple hello world HTML file."
      ],
      "description": "Netlify/AWS Beginners are welcome\nThis course is a complete guide to Netlify. I assume you don't have any prior experience with Netlify or Amazon web service.\nWe start with basics of the building blocks and I step by step walk through you with feature.\nLearn the fastest way to build and deploy web apps\nIf you have your web site, you just have to drag and drop your web site into Netlify, and it deploys across Netlfiy CDN within couple of seconds. It is that simple.\nAnd you configure your git repo with Netify, you get continuous deployments out of the box.\nNetlify Identity, Forms, Serverless Functions and many more\nYou don't need to spin up servers, configure API gateway. Just write a Netlify serverless function. Netlify deploy them as a API for you.\nEvery web app have form submissions. These are very tricky and take much of the time. I will show you how to use Netlify forms, a separate service dedicated for forms. You can take actions on your form submissions without writing any serverless functions.\nWe configure Netlify Identity so that you get uer authorization, authentication, login with Google, loin with Github, and many more.\nNetlify is getting lots and lots of traction these days becuase many people feels AWS is too complicate to host web apps.\nRecently Netlify passes 1million developers and they recently revised their pricing plans. You get pretty much enough features in the free plan.",
      "target_audience": [
        "Anyone who feels that AWS made their life complicated ;)",
        "Developers who are looking to build & deploy web apps in very short period of time!",
        "JAMstack, Gatsby, React Enthusiasts."
      ]
    },
    {
      "title": "React JS Complete Course with ASP.NET Core APIs",
      "url": "https://www.udemy.com/course/react-js-complete-course-2022-with-asp-net-6-core-apis/",
      "bio": "Master React.js from Basics to Advanced – Learn Hooks, Redux, Routing, and Integrate .NET 6 APIs to Build Real-World App",
      "objectives": [
        "You will learn all the basics concepts of React Js",
        "Master the \"Redux\" part in this React Js tutorial",
        "Understand class and functional components",
        "Learn how to use Hooks in ReactJs",
        "Create ASP .NET Core Rest APIs",
        "Learn how to implement ASP.NET API in React JS Application",
        "You will learn React DOM events handling in detail",
        "Create your own React Hooks Forms & save data in SQL DB using ASP.NET 6 Core APIs",
        "Learn how to use inline CSS, export external CSS files",
        "Great Control: Easily implement ReactJs Bootstrap",
        "Understand how to navigate between different components using React Router, NavLink React",
        "You will learn all basic React Js Installation for development",
        "Use Postman to test React API and React fetch data from API",
        "Create full-stack web application by React Js advanced concepts",
        "Learn how to create Nav Menu and application Layout",
        "Redux implementation in the app by complete example",
        "AXIOS for APIs call"
      ],
      "course_content": {},
      "requirements": [
        "A computer with Internet Connection",
        "Just basic knowledge of HTML and JavaScript",
        "A mindset to learn React Js with ASP.NET 6 Core APIs in a most Simplest Way",
        "You have a mission to get higher paid Job in software industry as React Js Developer"
      ],
      "description": "Welcome to the Ultimate React.js Tutorial!\nHi there!\nAre you ready to dive into the world of React.js? This course is designed to help you learn React.js in a fast, simple, and practical way.\nWhy This Course?\nMany tutorials focus solely on React.js frontend development, but very few teach you how to integrate real-world REST APIs to build a full-fledged web application. That’s where this course stands out!\nIn this course, you'll master:\nReact.js for frontend development\nASP .NET 6 for creating REST APIs\nBy the end of this course, you’ll be able to develop a complete, fully functional React.js web application with seamless backend integration.\n\n\nWhat You’ll Learn:\nReact.js Fundamentals\nReact.js Core Concepts\nFunctional & Class Components\nReact State Management\nEvent Handling & Forms\nReact.js Advanced Concepts\nReact Hooks (useState, useEffect, etc.)\nRedux & State Management\nReact Router for Navigation\nProps & Data Passing\nStyling in React\nInline & External CSS\nBootstrap Integration\nConnecting React.js with ASP .NET 6\nCreating REST APIs in ASP .NET 6\nMaking API Calls with Axios\nBonus Topics\nArrow Functions in JavaScript\nBest Practices for React Development\nStart Your React.js Journey Today!\nThis course is packed with practical knowledge to help you build real-world applications. If at any point you feel the course isn’t meeting your expectations, you can unroll anytime—your learning matters the most!\nEnroll now and let’s start coding!",
      "target_audience": [
        "This course is for anyone who wants to learn React Js from basic to advanced with ASP.NET 6 Rest API",
        "This course is best for all those who wants to learn ReactJs in most simplified way",
        "If you want to learn how the people in software industry using React Js for real world development then you are at the right place because I am working in software companies and know better how to use ReactJs in Real World development",
        "If you want to take one course and learn React Js, ASP.NET Rest APIs and a little about SQL Server then you should enroll in this course",
        "Beginners React Js Developer want to enter the industry with a React developer tools and techniques",
        "All Web Developers"
      ]
    },
    {
      "title": "Master Alpine.js: Guide To Interactive Web Development",
      "url": "https://www.udemy.com/course/master-alpinejs-guide-to-interactive-web-development/",
      "bio": "Unleash Dynamic Web Magic: Mastering Alpine.js for Engaging User Experiences",
      "objectives": [
        "Fundamentals of Alpine js framework",
        "Creating interactive web applications with Alpine js",
        "Handling data binding and state management",
        "Utilizing Alpine js directives and utilities",
        "Integrating Alpine js with HTML and CSS",
        "Advanced techniques and best practices in Alpine js development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Alpine.js?"
        ],
        "Getting Started with Alpine.js": [
          "Installation and Setup",
          "Hello World with Alpine.js",
          "Building Your First Interactive Web Component"
        ],
        "Basic Concepts of Alpine": [
          "Introduction to Attributes",
          "What are Properties",
          "Alpine Methods",
          "Comparison of Attributes and Properties"
        ],
        "Attributes Deep Dive Part I": [
          "Define HTML as Alpine using x-data, x-text, and x-HTML",
          "Exploring x-model and x-bind"
        ],
        "Attributes Deep Dive Part II": [
          "The magic of x-ref",
          "Conditional logic with x-show and x-if",
          "Hands-On exercises"
        ],
        "Attributes Deep Dive Part III - Animations": [
          "x-transition and animation in Alpine",
          "Project work integrating animations"
        ],
        "Properties Deep Dive Part I": [
          "State management with $store",
          "Understanding $el and $ref"
        ],
        "Properties Deep Dive Part II": [
          "Emitting Events via $dispatch",
          "Using init() effectively"
        ],
        "Properties Deep Dive Part III": [
          "Using $watch for reactive programming"
        ],
        "Simple Pagination Project With Alpine JS": [
          "Pagination Project Part I",
          "Pagination Project Part II",
          "Pagination Project Part III"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript",
        "Familiarity with web development concepts and terminology",
        "Access to a code editor and web browser for practicing exercises"
      ],
      "description": "Welcome to \"Master Alpine.js: Guide To Interactive Web Development,\" where you'll embark on a transformative journey into the realm of dynamic web design. In this comprehensive course, you'll delve deep into the powerful world of Alpine.js, a minimalistic JavaScript framework that empowers developers to create highly interactive and responsive web applications with ease.\nThroughout this course, you'll be guided by seasoned instructors who will demystify the complexities of Alpine.js and equip you with the skills and knowledge needed to craft modern web experiences that captivate users. Whether you're a seasoned developer looking to enhance your skill set or a newcomer to the world of web development, this course is designed to cater to all skill levels.\nHere's a sneak peek into what you'll learn:\nIntroduction to Alpine.js: Begin your journey by understanding the fundamentals of Alpine.js, including its philosophy, syntax, and core concepts. You'll learn how Alpine.js simplifies the process of adding interactivity to web applications without the need for complex libraries or frameworks.\nBuilding Interactive Components: Dive into the creation of interactive components using Alpine.js. From simple toggles and modals to advanced forms and dynamic content, you'll master the art of building dynamic user interfaces that elevate the user experience.\nState Management with Alpine.js: Explore how Alpine.js handles state management effortlessly, allowing you to create reactive applications that respond to user input in real-time. You'll learn various techniques for managing state within your applications, ensuring scalability and maintainability.\nIntegrating Alpine.js with Existing Projects: Learn how to seamlessly integrate Alpine.js into existing projects, whether you're working with vanilla JavaScript, jQuery, or other frameworks like Vue.js or React. You'll discover best practices for incorporating Alpine.js into your workflow while maintaining compatibility with your current stack.\nOptimizing Performance: Explore strategies for optimizing the performance of Alpine.js applications, including code splitting, lazy loading, and minimizing re-renders. You'll learn how to ensure fast load times and smooth user interactions, even in complex web applications.\nAdvanced Techniques and Best Practices: Delve into advanced techniques and best practices for leveraging Alpine.js to its fullest potential. From handling asynchronous operations to structuring complex applications, you'll gain insights into how to write clean, maintainable code that scales with your projects.\nBy the end of this course, you'll emerge as a proficient Alpine.js developer, equipped with the skills and confidence to tackle any interactive web development challenge that comes your way. Whether you're building a personal portfolio, launching a startup, or working on enterprise-level applications, you'll have the knowledge and expertise to create immersive web experiences that leave a lasting impression on users. Join us on this exciting journey and unlock the full potential of Alpine.js today!",
      "target_audience": [
        "Web developers looking to enhance their skills with a lightweight and intuitive JavaScript framework.",
        "Frontend developers interested in building interactive and dynamic web applications.",
        "Beginners in web development seeking to learn a modern and efficient JavaScript framework.",
        "Anyone interested in exploring Alpine js and its capabilities for creating modern web interfaces."
      ]
    },
    {
      "title": "Learn HTML & CSS basics & build websites from SCRATCH",
      "url": "https://www.udemy.com/course/learn-html-css-javascript-bootstarp-5-basics/",
      "bio": "Learn website development fundamentals",
      "objectives": [
        "HTML",
        "CSS",
        "Building Websites from Scratch",
        "How to create HTML Web Page Layouts"
      ],
      "course_content": {},
      "requirements": [
        "No Progarmming skills needed",
        "Anyone can learn it from scratch"
      ],
      "description": "In this course, students will learn, HTML & CSS\nThe HyperText Markup Language or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets and scripting languages such as JavaScript.\nCascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.\nHistory of Internet\nThe Internet started in the 1960s as a way for government researchers to share information, and the formation of ARPANET eventually led to the birth of the Internet on January 1, 1983. The UNIVAC I was the first American commercial computer designed for business use and was first sold to government agencies, the A.C. Nielsen Company, and the Prudential Insurance Company.\nBootstrap is a highly popular front-end development framework that can be installed through various methods such as package managers, source code downloads, or via a CDN. It includes Sass, which offers a modular and customizable architecture, and CSS variables make customization a breeze. Moreover, Bootstrap comes with built-in support for real-time CSS development via variables. In the latest version of Bootstrap, version 5, there is a utility API that makes it easy to customize components. There are also hundreds of classes available to use with CSS variable overrides. Additionally, Bootstrap 5 has a JavaScript plugin API that allows for easy addition of toggleable elements, modals, and menus without relying on jQuery. Bootstrap also has numerous plugins that can be incorporated into any project, and Bootstrap themes can take your project to the next level.",
      "target_audience": [
        "Beginners in Web Development"
      ]
    },
    {
      "title": "Create Social Network & Community Website With Wordpress",
      "url": "https://www.udemy.com/course/create-social-network-community-website-with-wordpress/",
      "bio": "Create Social Network Website Using Wordpress Community Website",
      "objectives": [
        "You will learn how to set up a social network on wordpress",
        "You will learn how to manage profiles and create groups",
        "You will learn how to create posts and register profiles",
        "You will learn how to Install BuddyX Theme and plugins"
      ],
      "course_content": {
        "Introduction": [
          "Basic Wordpress Settings",
          "Installing Theme & Plugins",
          "Configuring BuddyPress Settings"
        ],
        "Creating Menu & Profile Settings": [
          "Creating Menu & Profile Settings",
          "Creating Groups",
          "rtMedia Setup-Upload Media Files",
          "Activity Page SideBars",
          "Making Activity Page Our Home Page"
        ],
        "Creating Blog Posts & Blog Page": [
          "Creating Blog Post & Blog Page"
        ],
        "Final Website Customization": [
          "Final Website Customization"
        ],
        "Thank You!": [
          "Thank You!"
        ]
      },
      "requirements": [
        "No programming experience needed"
      ],
      "description": "Course Description:\nUnlock the potential of WordPress to build your own social network website in this comprehensive course. Designed for beginners and intermediate users, this course will guide you through the entire process of creating a dynamic, interactive, and user-friendly social network platform. Whether you're looking to create a niche community, a professional network, or a general social networking site, this course provides the tools and knowledge you need to bring your vision to life.\nWhat You Will Learn:\nFundamentals of WordPress: Understand the basics of WordPress and why it is an ideal platform for building social networks.\nInstallation and Setup: Learn how to install WordPress, and configure basic settings for optimal performance.\nEssential Plugins and Themes: Discover key plugins like BuddyPress and how to integrate them, and explore theme options that best suit a social network.\nCustomization and User Experience: Tailor your social network's appearance and functionality to enhance user experience, including user profiles, activity streams, groups, and forums.\n\n\nTransform your vision of an online community into reality with our in-depth course on creating a social network website using WordPress. This course is designed for beginners and intermediate users who want to leverage WordPress's powerful tools and plugins to build a feature-rich social networking site. From setting up WordPress to customizing user interactions and maintaining your site, this course covers all the essentials needed to create a vibrant, interactive online community.",
      "target_audience": [
        "Beginner Wordpress"
      ]
    },
    {
      "title": ".Net MVC-Docker & Microservice Architecture Project Building",
      "url": "https://www.udemy.com/course/net-50-microservice-architecture-project-building/",
      "bio": ".Net Core ,Web API,Docker,RabbitMQ,Ocelot Api Gateway,MongoDB,SqlServer,SignalR, MS Identity,CQRS",
      "objectives": [
        "You will build a project with MicroService Architecture",
        "We will try to tell you how to design a project architecture independently of any business",
        "We will try to tell you how to design a project architecture independently of any business",
        "How to build a project with .Net 5",
        "Fundementals of ASP NET Core Web Framework",
        "How to use Entity Framework Core with Repository Pattern",
        "You will learn how to use MS SQL Server and InMemory DB with Entity Framework Core",
        "You will learn Crud operation with MongoDB as data layer of microservice project",
        "You will learn how to use RabbitMQ with Net Core and how to design event bus with RabbitMQ for Event Bus Library",
        "You will learn web socket programming which means two way communication with SignalR",
        "You will implemet Clean Architecture Design Pattern of Uncle Bob",
        "You will learn and implement CQRS (Command Query Responsibility Segregation) and build microservice with CQRS from scratch",
        "You will use MediatR Design Pattern with Mediatr Framework",
        "You will apply API Gateway Design Pattern With Ocelot API Gateway for communication among your microservices",
        "One of the most important is you will run all components of your microserveice environment on Docker by using Docker Compose",
        "You will learn how to make documentation your Rest Apis with Swagger Open Api",
        "Your are using Net Core Framework to build all environment"
      ],
      "course_content": {
        "Giriş": [
          "Intro",
          "Project of requirements(Ders-2)",
          "What is Microservice Architecture Approach? When should I use it?",
          "Working State of Our Project(Ders 4)"
        ],
        "Product Microservice": [
          "Introduction - What Will We Learn?",
          "Project creation with command lines via Powershell",
          "What is Mongo Db?",
          "Creating a Product Class and Integrating it over the MongoDb Nuget Package",
          "What is Docker?",
          "Process of pulling MongoDb to our local via Docker",
          "Performing MongoDb Implementation on Product Content",
          "What is Synchronous - Asynchronous - MultiThread Programming?",
          "Product Repository Integration For MongoDb",
          "Adding Crud Actions to the ProductController",
          "Adding Test Swagger to the Project with Crud Operations Swagger and Postman",
          "Dockerize and publish our project"
        ],
        "Main Micro Service Service": [
          "Main Microservice - What's On, What Will We Learn?",
          "Creating the Main Microservice Asp.Net Core Web API Project",
          "ASP .Net Core Web API Project Architecture & Code Structure",
          "Creating Entities for ASP .Net Core Web API Project",
          "Appsettings.json & Settings Implementation",
          "Data Layer Enhancements with DataContext Class",
          "What is Seeding? Seeding Context Operations",
          "Business Layer Enhancements - 1",
          "Business Layer Enhancements - 2",
          "Business Layer Enhancements - 2",
          "Presentation Layer Enhancements - 1",
          "Presentation Layer Enhancements - 2",
          "ASP.NET Core Web API Open API Swagger Implementation & Testing - 1",
          "ASP.NET Core Web API Open API Swagger Implementation & Testing - 2",
          "Creating Dockerfile and Docker Compose File",
          "Updates on Docker Compose File",
          "Docker Compose Run Commands"
        ],
        "Rabbit MQ & Event Driven Design": [
          "Rabbit MQ & Event Driven Design - What's In, What Will We Learn?",
          "What are Communication Methods in Microservice Architectures? What is Async Comm",
          "Download RabbitMQ & Hosting on Docker",
          "Let's Create RabbitMQ Library",
          "RabbitMQ Connection Class Development -1",
          "RabbitMQ Connection Class Development -2",
          "RabbitMQ Event Development",
          "RabbitMQ Producer Development",
          "Adding the EventBus Library to the Sourcing Web API Project",
          "EventBus Startup Implementation -1",
          "EventBus Startup Implementation -2",
          "Complete Auction Method Development with EventBus Library Methods - 1",
          "AutoMapper Implementation & Complete Auction Method Development - 1",
          "EventBus Test Event Development & RabbitMQ Dashboard - 1",
          "EventBus Test Event Development & RabbitMQ Dashboard - 2",
          "Updates on Docker Compose File",
          "Docker-Compose File Run Commands"
        ],
        "Order MicroService": [
          "Order MicroService - What's In, What Will We Learn?",
          "Creating the Order Microservice Asp.Net Core Web API Project",
          "Creating Class Library Layers According to Clean Architecture Implementation",
          "Updating Library NET Core Versions",
          "Domain Layer- Entities Folder & Order Entity Development",
          "Domain Layer - Generic Repository Class Enhancements",
          "Infrastructure Layer- Entity Framework Core Context (Order Context)",
          "Infrastructure Layer - Seeding Operations with Entity Framework Core -1",
          "Infrastructure Layer - Seeding Operations with Entity Framework Core -2",
          "Run & Test Seeding Processes - 1",
          "Run & Test Seeding Processes -2",
          "Infrastructure Layer - Order Repository Development with Generic Repository -1",
          "Infrastructure Layer - Order Repository Development with Generic Repository - 2",
          "Application Layer - Add Required Libraries & AddApplication Method",
          "Application Layer - Order Command & Validator Class Improvements with MediatR -1",
          "Application Layer - OrderCreateHadler Class & Automapper Profile with MediatR- 1",
          "Application Layer - OrderCreateHadler Class & Automapper Profile with MediatR- 2",
          "Application Layer - GetOrderByUserNameHandler Class Development with MediatR",
          "Service Enhancements on Order Service Controller",
          "Order Web API Open API Swagger Implementation",
          "Open API Swagger Tests -1",
          "Open API Swagger Tests -2",
          "Application Layer - Cross-Cutting Concerns (Validation Behaviour)",
          "Application Layer - Cross-Cutting Concerns (Performance Behaviour)",
          "Application Layer - Cross-Cutting Concerns (Exception Handling Behaviour)",
          "Application Layer - Cross-Cutting Concerns Behaiovurs Test",
          "Order Consumer Development on Order Microservice with EventBus Library -1",
          "Order Consumer Development on Order Microservice with EventBus Library -2",
          "Order Consumer Development on Order Microservice with EventBus Library -3",
          "Sql Server Setup & Docker-Compose File Changes on Docker",
          "Converting Entity Framework In Memory DB to SQL DB",
          "OrderDb Entity Framework Core Migration Operations on Sql Server - 1",
          "OrderDb Entity Framework Core Migration Operations on Sql Server - 2",
          "Order Microservice Web API Docker-Compose File Updates & Testing -1",
          "Order Microservice Web API Docker-Compose File Updates & Testing -2"
        ],
        "Api Gateway": [
          "Api Gateway - What's In, What Will We Learn?",
          "What is ApiGateway Microservice Design Pattern? Why Do We Use API Gateway?",
          "Let's Create Blank Web Application for Ocelot API Gateway Microservices",
          "Add ocelot.json & ProductService Conf",
          "Ocelot.json Main Web Service & Order Web Service Configurations",
          "Ocelot API Gateway Microservice Dockerize Enhancements & Final Test"
        ],
        "Web Application": [
          "Create Project",
          "Project Layout operations-1",
          "Adding Frameworks and Editing Layouts for Microsoft Identity-2",
          "Adding Entity and Context",
          "Installing Sql Server via Docker and Migration with Code-First",
          "User Login Screen Operations (Login) -1",
          "User Registration Procedures - 1",
          "Jquery Validate Client-Side Side",
          "SignUp Post (Register)",
          "Login Post Process and User Settings",
          "Creating the Index Page for Business",
          "Demand Creation Page",
          "Demand Detail Page Design",
          "Editing Left Menu Operations in Layout",
          "Repository Implementation to Our Project",
          "UserRepository Operations and Startup Settings - Authenticate Operations",
          "Initial User Creation While Project Stands Up. Writing WebAppContextSeed Method",
          "Lifting the System with Multiple Projects and Introduction to the Product Client",
          "Creating a Product Client and Creating a Method Infrastructure Generic",
          "Request Creation Processes & Client Class Creation with HttpClientFactory",
          "Listing Page"
        ],
        "SignalR implementation": [
          "What is SignalR ?",
          "SignalR Server Side Integration (Hub creation)",
          "SignalR client Integration -1",
          "SignalR client Integration -2",
          "SignalR client Integration - 3",
          "Delivery Method Creation Process - 1",
          "Bringing Information to the Detail Page",
          "Request Processes & SignalR RealTime Implementation Frontend Tests",
          "Finalization Procedures - 1",
          "Finalization Procedures - 2"
        ],
        "Final": [
          "Getting the Pre-Presentation Project Ready for Api Gateway",
          "With Docker-Compose up, the project will stand up with the microservice structur"
        ]
      },
      "requirements": [
        "Basis of Docker",
        "Basis of ASP NET Core",
        "Basis of .Net Coding"
      ],
      "description": "Microservice Architecture is the most popular style of Software Architecture these days.\nAlmost every new software designed and produced does this using Microservices.\nAnd not only that, there are many legacy applications that have migrated to Microservice Architecture.\nCompanies like Netflix, Amazon, Facebook. Uber and more losses have moved on to Microservices, becoming the de facto standard for Software Architecture.\nAs BestCodder (Ertuğrul Yılmaz / Hasan Denli),\nwe have prepared a training for you, our valuable trainees, with this very famous MicroService architecture of recent times.\nWe are developing an E-Sourcing project in Microservice architecture using Docker with .Net 5. During this project,\n-- MongoDB\n-- Docker\n-- Ms SQL\n-- Rabbit MQ Library\n-- CQRS\n-- MediatR design Pattern\n-- Repository Pattern\n-- Event Sourcing\n-- SignalR\n-- Entity Framework\n-- docker\n- create compose yaml file\n-- Code First structure\n-- Web API\n-- MVC Project\n-- We Use Microsoft Identity Features.\nOur aim is to offer the tender instantly and develop our project as Microservice with SignalR, RabbitMQ and EventSource'ing, and we create a training that can always be at hand for our valuable trainees.\nIn our project, we get rid of a huge responsibility by leaving our local installations under the responsibility of docker, and at the same time, thanks to docker, we get away from the problem that it was working on my computer.\nBecause with docker - compose , we enable it to work everywhere with the same features .\nIf you want to create Api projects, If you want to write your projects and layers independently from each other via Microservices,\nIf you want to learn how to integrate RabbitMq Library into your project,\nIf you want to show instant changes to your users with SignalR and If you want to do with CQRS and MediatR approach in clean architecture, this course is for you.\n\n\nIf you want to concat to us => bestcodderacademy@outlook.com",
      "target_audience": [
        "Developers who earn new abilities with Microservice architecture",
        "Asp Net Core Developers who are curious about application development logic in Microservice Architecture from Beginner to Senior level",
        "C# Software Lovers who are curious about the architectural approaches needed while developing an Enterprise Application"
      ]
    },
    {
      "title": "Angular Practicals (Angular 19)",
      "url": "https://www.udemy.com/course/angular-practicals/",
      "bio": "Practical Problems and Soultions in Angular",
      "objectives": [
        "Practical scenario in Angular",
        "Command concepts in Angular",
        "Design Patterns in Angular",
        "Improve coding in Angular"
      ],
      "course_content": {
        "Introduction": [
          "About Course",
          "My Introduction",
          "Resources"
        ],
        "Basic Practical Problems and Solutions": [
          "Understand Callback Hell",
          "When To Use Higher Order Operators",
          "Solve Callback Hell",
          "ng-container Use Case 1",
          "ng-container Use Case 2",
          "Async Pipe",
          "Avoid Memory Leak by Unsubscribing Observables",
          "Avoid Memory Leak by Unsubscribing Observables - Part 2"
        ],
        "RxJS": [
          "Difference Between Subject and Behaviour Subject",
          "Usecase Subject and BehaviorSubject",
          "SwitchMap",
          "DebounceTime",
          "ForkJoin",
          "Timer - Auto-refresh / polling",
          "ExhaustMap"
        ],
        "Best Practices and Code Refactoring": [
          "Refactor If statemests-1",
          "Refactor If Statements-2",
          "Best Practices - Writing Routes",
          "Best Practices - Async Pipe",
          "Using Subject on Service",
          "HttpInterceptor",
          "Route Guard - CanDeactivate",
          "Component Design - Part 1",
          "Component Design - Part 2",
          "Component Design - Part 3",
          "Reusable Footer with DI in Action",
          "Avoid SetTImeout Hack"
        ],
        "Design Patterns": [
          "Strategy Design Pattern",
          "Tightly Coupled Code",
          "Solve Tight Coupling",
          "Depencency and Dependency Injection",
          "Control Value Accesor"
        ],
        "Performance": [
          "Lazy Loading",
          "Basic Lazy Loading Implementation",
          "Dependency Injection in Lazy Modules"
        ],
        "Signals": [
          "Singals In Practice",
          "Signals and Change Detection in Angular",
          "Fix SetTimeOut using ViewChild Signal API"
        ]
      },
      "requirements": [
        "Prior knowledge of Angular required"
      ],
      "description": "Practical and trainings are two different aspects. It requires deep understandings when we apply our knowledge with real problems. I am into Angular since its inception and almost familiar with all the practical problems a newbie can face. Often as a new developer we focus on delivery of task on time rather than quality of code which results in technical debt or code smell.\n\n\nAs an interviewer I observed that many candidates succumb to scenario questions and the reason is they just mug up the things without digging deep. I've gone through many courses and often they teach the happy path and not the practical one. So I decided to give it a try.\n\n\nIn this course we will understand what real challenges we face in real world Angular projects and how to solve them. We will clear our basics first and then move to complex problems. A solid foundation will lead to better and cleaner code that's why we will focus on \"What and Why\" first before \"How\". A few concepts are Angular specific and a few others are General design/programming concepts which are language agnostic. This is mix and match of both.\nI hope we will learn from each other in this Journey.",
      "target_audience": [
        "Professional Angular developers"
      ]
    },
    {
      "title": "React [2021] - The Full Stack Serverless eCommerce Course",
      "url": "https://www.udemy.com/course/react-full-stack-serverless-ecommerce/",
      "bio": "Build a full-featured eCommerce app using React and serverless architecture.",
      "objectives": [
        "State management in React using Context API and React Hooks",
        "Authentication and Authorization",
        "How to manage / protect routes in React",
        "How to create pagination and tabs",
        "How to create fully functional shopping cart",
        "Full featured check out system with Stripe (credit/debit card)",
        "Search system using Algolia search",
        "How to create elegant reusable component",
        "How to piece the serverless architecture (authentication, database, backend, storage) together",
        "How to deploy React app",
        "How to use Typescript in React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demo",
          "Requirement"
        ],
        "Build The Basic UI": [
          "Set Up React App",
          "Dependencies Versions (Important Please Read)",
          "The Boilerplate",
          "Routes Structure",
          "Routing",
          "CSS Files",
          "Add Navigation Bar",
          "Apply Layout",
          "Products Page",
          "Product Detail Page (1)",
          "Product Detail Page (2)",
          "Custom Button with forwardRef",
          "Spinner Component",
          "Icons",
          "Adjust The Custom Button"
        ],
        "Add Authentication": [
          "Set Up Firebase Project",
          "Adjust Navigation Bar",
          "Sign Up Form (1)",
          "Sign Up Form (2)",
          "React Hook Form Documentation",
          "Sign Up With Email And Password",
          "Set Up Cloud Functions",
          "Write First Cloud Functions",
          "Call Cloud Functions From Frontend",
          "Manage Modals Via Context API",
          "Recap Modal Context",
          "Improve Modal Context",
          "Authentication Context",
          "Use Authentication Context",
          "Differentiate The Navigation Bar View",
          "Add Sidebar (User Dropdown)",
          "Refactor Navigation Bar",
          "Refactor Sidebar (User Dropdown)",
          "Manage Sidebar (User Dropdown)",
          "Sign Out",
          "Sign In",
          "Reset Password",
          "Social Media Login (1)",
          "Social Media Login (2)",
          "Social Media Login (3)",
          "Authentication Context Update"
        ],
        "Protect Routes": [
          "Private Route (1)",
          "Private Route (2)",
          "Private Route (3)",
          "Private Route (4)",
          "Use Private Route",
          "Protect Routes (1)",
          "Improve Authentication Context",
          "Protect Routes (2)",
          "Adjust Sidebar (User Dropdown)",
          "Client And Admin Views",
          "Improve Private Route"
        ],
        "Admin Area: Manage Products": [
          "Add Product Form (1)",
          "Add Product Form (2)",
          "Add Product Form (3)",
          "Add Product Form (4)",
          "Add Product Form (5)",
          "Upload Image To Firebase Storage",
          "Upload Product To Firestore",
          "Prop Drilling VS Context API",
          "Upload Progression Bar",
          "Prepare For Pagination",
          "Products Context (1)",
          "Note For The Next Lecture",
          "Products Context (2)",
          "Generic Constraints",
          "Manage Products Page",
          "Products Page",
          "Product Detail Page",
          "Sorting And Real Time Update",
          "Update Product Counts Collection",
          "Refactor Add Product Custom Hook",
          "Edit Product (1)",
          "Edit Product (2)",
          "Edit Product (3)",
          "77 Delete Product",
          "Alert Dialog (1)",
          "Alert Dialog (2)",
          "Adjust Dialog"
        ],
        "Client Area: Add To Cart": [
          "Adjust Product Detail Page",
          "Add To Cart Quantity",
          "Add To Cart (1)",
          "An Adjustment",
          "Add To Cart (2)",
          "Add To Cart (3)",
          "Cart Context",
          "Adjust Cart Item Types",
          "Check Before Add To Cart",
          "Improvement For The Last Lecture",
          "Cart Quantity On NavBar",
          "Cart Page",
          "Cart Item",
          "Update Cart",
          "Delete Cart",
          "Improve Update Cart"
        ],
        "Client Area: Shipping Address": [
          "Shipping Address",
          "Add Shipping Address",
          "Display Shipping Address",
          "Edit Shipping Address (1)",
          "Edit Shipping Address (2)",
          "Time To Practice",
          "Delete Shipping Address",
          "Improve Select Address Page"
        ],
        "Client Area: Checkout (With Stripe)": [
          "Order Summary",
          "Create Card Form",
          "Card Details (1)",
          "Card Details (2)",
          "Fix Stripe Elements Issue",
          "Complete Payment: New Card (1)",
          "Complete Payment: New Card (2)",
          "Complete Payment: New Card (3)",
          "Create Stripe Customer And Save Card",
          "Set Default Card",
          "Fetch Cards From Stripe",
          "Display Cards",
          "Fix Memory Leak Issue",
          "Complete Payment: Saved Card (1)",
          "Complete Payment: Saved Card (2)",
          "Create An Order And Delete Cart Items",
          "Confirm Payment Modal",
          "Remove Card (1)",
          "Remove Card (2)",
          "Remove Card (3)",
          "Useful Stripe Documentations",
          "Count Order And Update Inventory On Order Created (1)",
          "Count Order And Update Inventory On Order Created (2)",
          "Improve \"onOrderCreated\" Cloud Function",
          "Issue With Pay And Save New Card"
        ],
        "Client Area: Order Pages": [
          "Orders Context API",
          "Order Count Context API",
          "Orders Page (1)",
          "Orders Page (2)",
          "Order Detail Page"
        ],
        "Admin Area: Manage Orders": [
          "Manage Orders Page",
          "Manage Order Detail Page",
          "Print Shipping Label And Invoice"
        ]
      },
      "requirements": [
        "Basic knowledge of React"
      ],
      "description": "*** The course is created in Typescript but it is definitely fine if you prefer Javascript ***\nBuild a full-featured eCommerce application using React and serverless architecture (Firebase, Cloud Functions, Firestore, Storage, Authentication, Hosting).\nThis is a learn-by-doing course, and at the end of this course, you will be able to build a full-fledged and performant eCommerce application.\nHere are what the course will be covering.\nReact state management using Context API and hooks\nCustom hooks\nSign up, sign in, reset password, and social media login\nAuthentication and authorization\nRoute protection, route management\nHow to separate the UI and the logic using custom hook\nHow to create an elegant reusable component (Button, Input, Tab, Pagination)\nHow to create an elegant reusable modal\nHow to effectively create and manage form (using react-hook-form)\nFully functional shopping cart\nFull-featured checkout system with Stripe\nHow to save card/set default card on Stripe system\nCreate an admin area that user can manage products, manage orders, manage users\nPagination and tabs\nSearch functionality using Algolia search\nHow to apply pagination on the search results.\nHow to use Firebase Firestore as a database\nHow to integrate Firebase Cloud Functions as a backend.\nHow to save image on Firebase Storage\nSecure Firestore\nHow to deploy the app using Firebase Hosting\n*** The course is created in Typescript but it is definitely fine if you prefer Javascript ***",
      "target_audience": [
        "React, full stack developers who want to learn how to build a real-world application by using the serverless architecture.."
      ]
    },
    {
      "title": "Building AI App with React NextJs TypeScript Google & Stripe",
      "url": "https://www.udemy.com/course/react-nextjs-typescript-google-ai-mongodb-stripe/",
      "bio": "Master AI apps with React NextJs TypeScript MongoDB Tailwind ShadcnUI Google Gemini Stripe Subscription Webhooks Context",
      "objectives": [
        "How to build a full-stack AI-powered application using NextJs, React and TypeScript",
        "Integration of Google Gemini AI for content generation and AI features",
        "Implementation of server-side actions in NextJs for efficient data handling",
        "Setting up and using Clerk for user authentication and management",
        "Creating a responsive dashboard layout with light and dark mode themes",
        "Developing dynamic template systems for AI-generated content",
        "Connecting and interacting with MongoDB for data storage and retrieval",
        "Implementing a subscription system using Stripe for payments and billing",
        "Building a usage tracking system with credit limits and progress bars",
        "Deploying a NextJs application to Vercel and handling production environments",
        "Creating a landing page with promotional content and sign-up features",
        "Implementing advanced features like rich text editing, search functionality, and infinite scrolling for query history"
      ],
      "course_content": {
        "Introduction": [
          "About the Course",
          "Project Overview",
          "PDF Booklet & Source Code",
          "NextJs Project Setup"
        ],
        "Google Gemini Generative AI": [
          "Using Google Gemini AI",
          "Server Actions in NextJs",
          "Passing Prompts"
        ],
        "Shadcn UI": [
          "Using Shadcn UI",
          "Dynamic Prompt",
          "Render Markdown"
        ],
        "Authentication": [
          "Clerk Authentication",
          "Top Navigation"
        ],
        "Layouts & Navigation": [
          "Dashboard Layout",
          "SideNav Items",
          "Active SideNav Item",
          "Responsive Mobile Nav"
        ],
        "Services Template": [
          "Template Data",
          "Using Static Template Data",
          "Render Templates in Dashboard"
        ],
        "Light & Dark Mode": [
          "Light and Dark Mode Theme Toggle"
        ],
        "Display Template": [
          "Dynamic Template Page",
          "Display Template Form Fields",
          "Template Details",
          "Template Form Input and Change Events"
        ],
        "Deployment": [
          "Deploy to Vercel"
        ],
        "Rich Text Editor": [
          "Getting Content from AI",
          "Rich Text Editor for Generated Content"
        ]
      },
      "requirements": [
        "Basic Understanding of JavaScript: Students should have a fundamental knowledge of JavaScript, including ES6 features, as this course builds upon these concepts to develop applications using React and NextJs.",
        "Familiarity with React: While prior experience with React is not mandatory, a basic understanding of React components, state management, and props will be beneficial for grasping the course material more effectively.",
        "Willingness to Learn: A strong motivation to learn and explore new technologies, including TypeScript, Google Gemini AI, and Stripe integration, is essential. Students should be prepared to engage with hands-on coding exercises and projects throughout the course."
      ],
      "description": "Dive into the cutting-edge world of AI-powered web applications with this comprehensive course on building advanced apps using React, Next.js, and TypeScript. This hands-on program will guide you through creating a sophisticated AI application from scratch, integrating the latest technologies and best practices in web development.\nIn this course, you'll learn how to:\nIntegrate Google Gemini AI to add intelligent, content-generation capabilities to your app\nDevelop creative AI-powered app ideas and bring them to life\nImplement AI features in various web applications, from content creation to data analysis\nDesign a sleek, responsive UI using Tailwind CSS and ShadcnUI components\nBuild a full-stack application with MongoDB for efficient data storage and retrieval\nCreate a subscription-based system using Stripe for payments and recurring billing\nDevelop and handle Stripe webhooks for real-time payment event processing\nUtilize React Context for efficient state management across your application\nDeploy your AI-powered application to production using Vercel\nImplement real-world use cases for AI in web applications\nExclusive PDF Booklet: Enhance your learning with a comprehensive companion guide containing all code snippets used in the course. This invaluable resource allows you to:\nFollow along easily during video lectures\nReview and practice code offline at your own pace\nHave a quick reference guide for future projects\nReinforce your understanding by seeing code in both video and written formats\nAccelerate your learning by having a visual aid alongside the video content\nThroughout the course, you'll build a real-world AI-powered SaaS application, gaining practical experience with each technology and concept. You'll start with ideation and design, progress through development and AI integration, and finish with deployment and monetization strategies.\nTo support your learning journey, this course includes a comprehensive PDF booklet containing all the code snippets used in the video lectures. This valuable resource allows you to follow along easily, review code offline, and have a quick reference guide for future projects.\nBy the end of this course, you'll have the skills to conceptualize, create, and deploy sophisticated AI-enhanced web applications that are not only functional but also scalable and marketable. Whether you're a seasoned developer looking to harness the power of AI or an ambitious beginner ready to dive into the future of web development, this course will equip you with the knowledge and hands-on experience to build impressive AI-integrated applications.\nJoin now and transform your development skills to meet the growing demand for AI-powered web applications in today's tech industry!",
      "target_audience": [
        "Aspiring Web Developers: This course is ideal for individuals who are new to web development and want to learn how to build modern applications using popular technologies like React, NextJs, and TypeScript.",
        "React Developers: Developers who already have a basic understanding of React and want to expand their skill set by learning how to integrate AI functionalities and payment systems into their applications.",
        "Full-Stack Developers: Those looking to enhance their full-stack development skills by learning how to implement server actions, manage databases with MongoDB, and create a subscription-based application.",
        "AI Enthusiasts: Individuals interested in leveraging AI technologies, specifically Google Gemini, to create intelligent applications that can generate content and improve user experiences.",
        "Entrepreneurs and Startups: Entrepreneurs who want to build their own SaaS products or AI-driven applications and need practical knowledge on integrating payment systems and user authentication.",
        "Students in Tech Fields: Students studying computer science or related fields who want to gain hands-on experience with cutting-edge technologies and frameworks that are in high demand in the job market."
      ]
    },
    {
      "title": "Add HTML5 Animation to Your Web Pages Using CreateJS",
      "url": "https://www.udemy.com/course/learn-basic-html-animation-using-createjs/",
      "bio": "Learn how to animate graphics & text on the HTML5 canvas element with basic Javascript & no complicated CSS or HTML.",
      "objectives": [
        "Know How to Install, Bootstrap and Test the CreateJS CDN",
        "Learn How To Assess Animation Performance Issues",
        "Understand the Capabilities in the Suite of CreateJS Libraries",
        "Learn to EaselJS Library to Draw on the HTML5 Canvas",
        "Learn to TweenJS Library to Animate on the HTML5 Canvas",
        "Understand Animation Easing Formulas",
        "Know How to Draw and Animate EaselJS Text",
        "Learn How User Mouse Interactions Work"
      ],
      "course_content": {
        "Introduction and Setup": [
          "The Suite Of Libraries",
          "HTML Practice File",
          "Installation and Bootstrapping"
        ],
        "Drawing Shapes and Tweening 101": [
          "Introducing The EaselJS Library",
          "How to Draw A Circle in EaselJS",
          "Introducing TweenJS and Ticker",
          "How to Animate a Shape With TweenJS"
        ],
        "Tweening Beyond The Basics": [
          "How to Change and Test Frame Rates",
          "How to Reverse a Tween Using Chaining",
          "How To Add a Delay In A Tween",
          "Introducing Tween Easing",
          "How to Add Easing to a Tween"
        ],
        "Drawing Shapes With Gradient Fills": [
          "How to Add a Linear Gradient Background",
          "Introducing Radial Gradients in EaselJS",
          "How to Add a Radial Gradient Fill"
        ],
        "ABCs of Displaying Text": [
          "Introducing Text in EaselJS",
          "How to Add Text and Shadow with EaselJS",
          "Making a Rotational Tween for EaselJS Text",
          "Creating a Fly In Fly Out Tween for EaselJS Text",
          "Styling EaselJS Text Over Tweens"
        ],
        "Using Strokes and Fills with Shape Drawing Methods": [
          "Introducing Strokes In Shape Drawing Methods",
          "Adding Strokes to Shape Drawing Methods",
          "Adding Fills to Stroke Perimeter Shapes"
        ],
        "Stage Mouse Event Handling": [
          "How to Handle Stage Mouse Events",
          "Controlling a Rotation Tween Using Stage Mouse Events",
          "Drag and Drop Using Stage Mouse Events",
          "Drag and Drop Tween Using Stage Mouse Events"
        ],
        "Using Ticker For Animation": [
          "Basics of Using Ticker For Animation",
          "Adding a Reverse Loop to the Basic Ticker Animation",
          "Adding a Duration to the Basic Ticker Animation"
        ],
        "Positioning and Tweening with Shape Drawing Methods": [
          "Relative Shape Positions and Stroke Perimeters",
          "Tweening Shapes with Stroke Perimeters"
        ],
        "Final Section": [
          "Additional Examples",
          "Wrap-Up Summary"
        ]
      },
      "requirements": [
        "Code Editor",
        "Web Browser",
        "Basic Knowledge of Javascript",
        "Basic Knowledge of HTML",
        "Basic Knowledge of CSS"
      ],
      "description": "What is this Course About?\nThis course gets you up to speed basic features of the CreateJS library to create HTML5 canvas animations, graphic drawing and user mouse interactions.\nCreateJS is a popular well supported Javascript library used for web advertising, education, gaming and cartooning. It does not require complicated HTML or CSS to implement. What you create is easily added to other web pages without changes.\nWhat is Covered?\nThis is a basic course where you can get a grounding on the CreateJS resources available and the software API architecture. You use a simple learning framework so you can try the API with examples that are easy to follow and grasp.\nYou will learn about the hierarchical display list architecture built into the EaselJS library component of CreateJS.\nAnd you will apply the EaselJS mouse interaction model so you can get up and running quickly to control animations with user input.\nYou also work with the HTML5 graphics drawing library found in EaselJS.\nYou will learn how simple and easy to create HTML5 animations with the CreateJS tweening library component called TweenJS.\nWho Can Take this Course?\nThis course is for those who know Javascript basics and are beginning to learn about the CreateJS suite of libraries. This course does not require advanced programming skills. Any programming is explained and supported so you can succeed.\n\nIf you have Actionscript 3 background, you will find comfort in seeing that API finding a new home in these libraries. But Actionscript experience is not necessary for the course.\nWhat Materials Are Included?\nThe course includes step by step video presentations along with starting and completed practice files used in the videos.\nGetting Help\nI enjoy helping so make use of the Udemy question area.\n\"The instructor does not assume you know or understand everything. On the contrary, he explains the reasons behind every single step.\" -- Alonso Ramos\nI am behind you succeeding so use me. No question too simple. No question too complicated. Challenge me!\nOften questions result in new examples and demos which are posted in the Additional Examples Lesson for everyone to see.\nHope you enjoy the course and please let me know anything I can help you do.",
      "target_audience": [
        "Web Animators",
        "Actionscript Developers",
        "Web Developers"
      ]
    },
    {
      "title": "Amazon Web Services(AWS) for Beginners",
      "url": "https://www.udemy.com/course/amazon-web-services-aws-for-beginners/",
      "bio": "AWS",
      "objectives": [
        "The AWS training Course teaches web developers to build and deploy applications on Cloud Computing platform.",
        "The training course is designed to provide a comprehensive overview on using the management of AWS Console management and its features.",
        "Primary goal behind this training is to teach students how to use various services provided by Amazon web services.",
        "Design Highly Resilient and Scaleable Websites on AWS"
      ],
      "course_content": {
        "Introduction to Cloud Computing": [
          "Introduction to Cloud Computing"
        ],
        "Cloud Computing Service Models": [
          "Cloud Computing Service Models"
        ],
        "Emerging Cloud technology and Services": [
          "Emerging Cloud technology and Services"
        ],
        "Deployment Models in Cloud Computing": [
          "Deployment Models in Cloud Computing"
        ],
        "Amazon EC2 (Elastic Compute Cloud)": [
          "Working with AWS EC2 Part-1"
        ],
        "Working with AWS EC2 Part-2": [
          "Working with AWS EC2 Part-2"
        ],
        "Working with AWS EC2 Part-3": [
          "Working with AWS EC2 Part-3"
        ],
        "Simple Storage Service (S3)": [
          "Working with AWS S3 part-1"
        ],
        "Working with AWS S3 part-2": [
          "Working with AWS S3 part-2"
        ],
        "S3 Static Web site and Programmatic access": [
          "S3 Static Web site and Programmatic access Part-1"
        ]
      },
      "requirements": [
        "Knowledge of Operating Systems",
        "Knowledge of Virtualization",
        "Coding skills (Good To Have)",
        "You will need to set up an AWS Account (you can use the free tier for this cours",
        "Your own domain name (optional, but recommended)",
        "A Windows, Linux or Mac PC/Laptop"
      ],
      "description": "Amazon Web Services (AWS) is a cloud service from Amazon, which provides services in the form of building blocks, these building blocks can be used to create and deploy any type of application in the cloud.\nAmazon Web Services (AWS) provides on-demand computing resources and services in the cloud, with pay-as-you-go pricing. For example, you can run a server on AWS that you can log on to, configure, secure, and run just as you would a server that's sitting in front of you and it provides many of the same benefits: capacity exactly matches your need, you pay only for what you use.\nInstructor:-\nRahul, is Deccansoft's Ace trainer and perfectionist who believes in giving the real essence of technology to the learner.\n\nThis uniqueness has made him earn a strong foothold in the I.T training industry. A graduate (B-Tech Electronics and Communications) with a professional experience of 21 years is a Sun Certified Java Programmer and Sun Certified Java Architect. His expertise includes Java, Java EE, XML and Web Services, Database technologies, and Cloud Computing with specialization in AWS.\nRahul is a hard-working and committed Software Architect, who has technically desig......",
      "target_audience": [
        "AWS Absolute Beginners. No prior AWS experience necessary",
        "Existing Solutions Architects",
        "Programmers Interested in Deploying Applications on AWS",
        "People interested in hosting highly scaleable, fault tolerant applications (such as Wordpress and Joomla) on the AWS cloud."
      ]
    },
    {
      "title": "Learn how to build dynamic website in PHP & MySQL",
      "url": "https://www.udemy.com/course/learn-how-to-build-dynamic-website-in-php-mysql/",
      "bio": "Learn Dynamic Web Design and Website with PHP / MySQL,JavaScript and CSS completely with scratch",
      "objectives": [
        "How to build functional, full-featured websites that utilize MySQL, PHP and other current web development technologies.",
        "How to install, configure and modify MySQL databases for the web.",
        "How to pair a secure PHP / MySQL backend of a website with a compelling visual interface made with CSS, JavaScript code.",
        "The basic principles and best practices of PHP and MySQL in a relevant, real world project",
        "Create a Data Driven Dynamic Website in PHP & MySQLi",
        "Learn to Create a CMS (Content Management System) for dynamic Website in PHP & MySQLi"
      ],
      "course_content": {
        "The Introduction & what's inside!": [
          "Introduction",
          "Setup",
          "Setting up the envoirnment",
          "Creating the project Folders",
          "Creating the Main Index Page",
          "A Quick Quiz For Beginners!!!",
          "Styling & Layout (CSS)",
          "Creating Categories Function",
          "Creating Database Connection",
          "Creating Brand Function",
          "Creating Database",
          "Showing Database values on main page dynamically"
        ],
        "Creating Admin Pannel": [
          "Creating The Index Page for Layout",
          "Styles of Admin Index Page",
          "CSS Quiz",
          "Creating The Insert_Product -1",
          "Creating The Insert_Product -2",
          "Creating The Insert_Product -3",
          "Creating PHP Functions",
          "Fixes",
          "Create View_products (Displaying Products on the Website)",
          "Creating The Edit_products Part-1",
          "Creating The Edit_products Part-2",
          "Creating The Edit_products Part-3",
          "Creating Delete_product",
          "Creating Insert_Categories",
          "Fixing the insert category",
          "View_Categories (Displaying Categories on the Website)",
          "Creating Edit_Categories",
          "Creating Delete Categories",
          "Creating Insert_brands",
          "Creating View_brands",
          "Creating Edit_brands",
          "Creating Delete_brands",
          "Creating a Custom Search Engine",
          "Minor Fixes in Admin Area"
        ],
        "Fantastic you completed the course": [
          "Conclusion"
        ]
      },
      "requirements": [
        "• HTML + CSS + JavaScript (Optional)",
        "• XAMPP (For Localhost)",
        "• Basics of PHP & MySQLi (Optional)",
        "• Notepad++ (As a text editor)",
        "• Chrome (As a Web Browser)"
      ],
      "description": "Learn to create Dynamic Website from scratch in PHP & MySQLi, building a website with database connectivity. Building a dynamic website had never been easier from scratch before this course. This Dynamic Web Design with PHP and MySQLi training course will give you a working understanding of these important technologies and show you how to use them to create your own impressive websites. This course gradually shows you how to build the necessary components and underlying framework of your site. It goes through installation of PHP and MySQL technologies on your local machine, explains basic tags, command, and helps you build and work within a solid back-end database.",
      "target_audience": [
        "Web developers and programmers looking to learn a new language and set of standards.",
        "Individuals and small business owners interested in creating their own fully featured websites with total control over data management, functionality and visual appearance.",
        "Anyone who has used basic CMS or templates to create basic websites in the past but want much more control.",
        "Anyone who has tried to learn PHP or MySQL in the past but found it difficult due to a lack of practical examples.",
        "This course is for those who want to take their PHP & MySQLi skills to the next level by creating dynamic websites in PHP",
        "This course is for those who want to learn how to build dynamic website from scratch in PHP & MySQLi"
      ]
    },
    {
      "title": "Master React with 120 Real Projects: Pro Developer Bootcamp",
      "url": "https://www.udemy.com/course/react-node-js-web-development-projects/",
      "bio": "Learn to build a dynamic tool showcasing Interactive Sorting Algorithm Visualizer Using ReactJS & Hooks",
      "objectives": [
        "See the step-by-step process of designing and assembling an advanced project",
        "Walk away with a portfolio-ready project demonstrating your React prowess.",
        "Use the latest React features like hooks and functional components.",
        "Explore various form handling libraries like Formik or react-hook-form."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of React"
      ],
      "description": "Unlock the power of React development while diving deep into the world of sorting algorithms with our course on building a Sorting Algorithm Visualizer using ReactJS, React State Management, and React Hooks. This course is designed for developers who want to enhance their React skills while gaining a solid understanding of key computer science concepts.\n\n\nWe begin by establishing a strong foundation in React, focusing on its component-based architecture and the importance of state management. You'll learn how to effectively manage application state using both traditional React State Management techniques and the modern approach offered by React Hooks. This knowledge will enable you to create dynamic, interactive user interfaces that respond seamlessly to user input.\n\n\nOnce you’ve grasped the basics, we transition into the core of the course: implementing and visualizing popular sorting algorithms. You’ll build and visualize algorithms such as Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, and Quick Sort. As you code each algorithm, you’ll learn the underlying logic, explore different sorting techniques, and understand how to optimize performance.\n\n\nThe visualizer you create will not only show the step-by-step process of each algorithm but will also allow you to compare their efficiencies visually. This hands-on experience provides a unique way to grasp the intricacies of sorting algorithms, making complex concepts more accessible and understandable.\n\n\nThroughout the course, you'll work on practical projects and exercises that reinforce your learning. By the end, you’ll have a fully functional Sorting Algorithm Visualizer that showcases your ability to manage state in React, implement React Hooks, and bring algorithms to life through interactive visualizations.\n\n\nWhether you’re a budding developer looking to enhance your React skills or an experienced coder wanting to revisit and solidify your understanding of algorithms, this course offers a comprehensive and practical approach to achieving your goals.",
      "target_audience": [
        "Beginners in React"
      ]
    },
    {
      "title": "Get Started With Django",
      "url": "https://www.udemy.com/course/get-started-with-django/",
      "bio": "Learn the fundamentals of the Django web framework",
      "objectives": [
        "How to build Python-based web apps using Django.",
        "Django Models, Views, Forms, and User Authentication",
        "How to Build Three Example Apps in Django",
        "Learn how to create HTML templates in Django."
      ],
      "course_content": {
        "Introduction": [
          "Intro to the Course",
          "Course Code"
        ],
        "Dear Diary Project": [
          "Create Project and App",
          "App Files",
          "Admin Dashboard",
          "Display Templates",
          "Add Page Link",
          "Create Entry Model",
          "Display Entries From Database",
          "Creating a Form",
          "Processing the Form"
        ],
        "Models": [
          "SQLite Browser and Migrate",
          "Create Simple Model",
          "Adding More Fields to the Model",
          "Field Arguments",
          "Available Fields",
          "Admin Dashboard",
          "Create, Update, Delete",
          "Get a Single Row",
          "Get All Rows",
          "Filter",
          "Exclude",
          "Chaining Filters",
          "Field Lookups for Filters",
          "Limit and Offset",
          "Order By",
          "Count",
          "Using Dates",
          "Is Null",
          "One to Many Relationships",
          "Query One to Many Relationships",
          "Many to Many Relationships",
          "Query Many to Many Relationships",
          "Database Settings"
        ],
        "Views": [
          "URLs",
          "More Complicated URLs",
          "How Views Work",
          "Passing Data Through URL Endpoint",
          "Passing Data Through Query String",
          "Redirects",
          "Errors"
        ],
        "Templates": [
          "Set Up Templates",
          "Variables",
          "Conditionals",
          "For Loops",
          "Include",
          "Inheritance",
          "Static Files",
          "URLs",
          "Filters"
        ],
        "Forms": [
          "Creating a Regular Form",
          "Creating a Django Form",
          "Displaying the Form",
          "Form Errors",
          "Modify Widget to Display HTML Class",
          "Other Fields",
          "Model Forms",
          "Instance of a Model Form",
          "Class Based Views"
        ],
        "User Authentication": [
          "Create User Through Admin Dashboard",
          "Create Login Template",
          "Get User Data",
          "Login Decorator",
          "Create Registration Page",
          "Redirect After Registration",
          "Add in Other User Fields",
          "Additional Fields",
          "Logout Redirect URL",
          "Login Required Mixin"
        ],
        "Video Site App": [
          "Create Project and Add Templates",
          "Create Views to Render Templates",
          "Adding the Base Template",
          "Create Video Model",
          "Upload First Video",
          "Display Uploaded Video",
          "Add Time Since Posted",
          "Pull List of Videos from Database",
          "Final Demonstration"
        ],
        "Forum App": [
          "Starting HTML Files",
          "Create Django and Add Apps",
          "Add HTML Files to Project and Create URLs",
          "Creating Base Template and Adding Static Files",
          "User Registration",
          "Add Login Endpoint",
          "The Profile Page",
          "Logout Endpoint and Restricting Profile Page",
          "Create Forum Models",
          "Create Forum Forms",
          "Use Thread Form to Create New Threads",
          "Create Specific Thread Page and Thread Listing",
          "Add the Reply Form",
          "Show Replies in Thread",
          "Hide Reply Form for Logged Out Users",
          "Hide New Thread Button for Logged Out Users",
          "Updating Links for Logged Out Users",
          "Update Thread Dates",
          "Add Links",
          "Add User Reply Count to Profile",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Basic Python",
        "Be Able to Install Python and Django on your computer",
        "Know some basic HTML"
      ],
      "description": "Welcome to Get Started With Django. This course is an introduction to using Django. By taking this course, you will know enough to get started building your own apps, so you can create the projects you've always wanted to create.\nWhy Django? Django is an easy to learn framework that is fully featured. If you are familiar with Python, picking up Django will be a very straightforward process, and you'll find that you'll be able to create your own apps quickly after starting the course. Django doesn't require any crazy setup or requirements, so if you can run Python on your computer, you'll be able to run Django with no problems.\nAlso Django includes nearly everything you need to build a web app, so you don't how to worry about installing anything else.\nOnce you enroll, you'll get access to several hours of content that you can work through at your own pace. Each video includes the code from the video, which makes it much easier for you to follow along.\nYou'll start by building a simple diary app that gets you familiar with how Django works. Then I'll cover various parts of Django like models, forms, and authentication so you can add them into your projects if you need them.\nWhat you'll build. In addition to the diary app I mentioned, I also cover building a video site and a forum app.",
      "target_audience": [
        "Beginner Python developers who want to learn web development"
      ]
    },
    {
      "title": "React and Laravel Authentication: Forgot and Reset Password",
      "url": "https://www.udemy.com/course/react-and-laravel-authentication/",
      "bio": "Learn PHP 8, Laravel 8, React Hooks, Laravel Sanctum, Send Emails with Mailhog, Typescript",
      "objectives": [
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Create Controllers and Run Migrations",
        "Use Laravel Sanctum",
        "Send Emails"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel": [
          "Installation",
          "Migrations",
          "Routes",
          "Register",
          "Custom Requests",
          "Laravel Sanctum",
          "Login",
          "Authenticated User",
          "HttpOnly Cookies",
          "Logout",
          "Forgot Password",
          "Reset Password"
        ],
        "React": [
          "Installation",
          "Template",
          "Routes",
          "Navigation",
          "Register",
          "Redirecting",
          "Login",
          "Authenticated User",
          "Logout",
          "useEffect Dependencies",
          "Forgot Password",
          "Reset Password"
        ],
        "Docker - Bonus (Legacy)": [
          "Restructuring",
          "Dockerfile",
          "Docker Compose File",
          "Containers"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge",
        "Basic Javascript Knowledge"
      ],
      "description": "Learn how to authenticate using React and Laravel.\nIn Laravel you will learn:\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nRegister Users\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nSend Emails\nIn React you will learn:\nUse Typescript\nCreate components and routes\nConsume API calls\nUse React Hooks\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Javascript and PHP students"
      ]
    },
    {
      "title": "Build a GenAI-Powered Hotel Booking App with Next.js & MERN",
      "url": "https://www.udemy.com/course/full-stack-hotel-booking-app-with-nextjs-mern-stack/",
      "bio": "Build & deploy a GenAI booking platform using MUI, React, Node.js, MongoDB, Stripe, Razorpay & PayPal Gemini ai ChatGPT",
      "objectives": [
        "Build a complete hotel booking platform using Next.js (App Router), React, Node.js, Express, and MongoDB from scratch.",
        "Integrate generative AI features like AI-powered chat assistant and smart booking suggestions using gemini API and custom prompts",
        "Implement advanced payment systems with Stripe, Razorpay, and PayPal—including dynamic pricing, local currency, and invoice generation",
        "Create a fully functional date-based room booking system, including availability check, real-time booking calendar, and booking code generation",
        "Set up secure authentication & authorization using NextAuth with role-based access for users, admins, and hotel managers",
        "Build dynamic admin & user dashboards to manage bookings, users, room types, and hotel settings using Material UI",
        "Deploy the entire app on Vercel or your preferred cloud platform, including environment configuration and production-ready builds",
        "Master full-stack architecture & API development, including RESTful APIs, MongoDB models, secure endpoints, and real-time features"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "project setup",
          "nextjs installation",
          "mui installation"
        ],
        "Setup Responsive Navigation Bar Template": [
          "TopNav Navigation component",
          "set up Navbar component",
          "setup register component",
          "validate register form",
          "handle register function"
        ],
        "Register Api handling": [
          "user model",
          "register api",
          "environment variable configuration",
          "save user details in database"
        ],
        "Login Page setup": [
          "login template setup",
          "create handle login function",
          "next-auth configuration part_1",
          "next-auth configuration part_2",
          "next-auth configuration part-3",
          "login with google"
        ],
        "home page setup": [
          "home page setup"
        ],
        "Admin Dashboard": [
          "set up Admin dashboard template",
          "Admin Profile Api Getways",
          "admin profile template setup",
          "validate profile input field",
          "uploading image to cloudinary part_1",
          "uploading image to cloudinary part_2",
          "admin profile update"
        ],
        "User Dashboard": [
          "User Dashboard"
        ],
        "Middleware": [
          "middleware",
          "middleware part_2"
        ],
        "Bookarea Model": [
          "bookarea model",
          "bookarea api getways"
        ],
        "Setup Snapbooking Component": [
          "setup snapbooking component",
          "snapbooking handlesubmit function",
          "populate data in existing field",
          "snapbooking component on home page"
        ]
      },
      "requirements": [
        "Basic Understanding of JavaScript: Familiarity with JavaScript fundamentals, including variables, functions,",
        "basic React: A basic understanding of React, including components, props, and state management.",
        "Basic HTML and CSS Knowledge: Familiarity with HTML and CSS to build and style web pages",
        "Devlopment Environment Setup: A computer with internet access, and vs code text editor"
      ],
      "description": "Want to build a real-world AI-powered hotel booking app with live dashboards, modern payments, and intelligent features?\nThis full-stack course teaches you how to design, develop, and deploy a production-ready hotel booking platform using the latest tech stack: Next.js 14, React, MongoDB, Node.js, and Generative AI. Along the way, you'll integrate powerful tools like Recharts for analytics, react-simple-maps for geolocation, and Stripe, Razorpay & PayPal for modern, real-world payments including UPI, wallets, credit/debit cards, and Buy Now Pay Later options.\nWhat You’ll Learn\nBuild a complete MERN Stack hotel booking platform using Next.js App Router\nAdd Generative AI to provide smart hotel suggestions or chatbot-style assistance\nCreate a professional, responsive UI with Material UI (MUI)\nImplement secure JWT-based authentication and role-based dashboards (Admin, Hotel Owner, User)\nAdd core booking logic: hotels, rooms, pricing, availability, cancellations\nAccept payments through Stripe, Razorpay, and PayPal supporting:\nUPI\nWallets (e.g., Paytm, PhonePe)\nCredit/Debit Cards\nNet Banking\nBuy Now, Pay Later (BNPL)\nBuild a powerful Admin Dashboard with:\nSales Reports: View total bookings, revenues, and monthly trends\nTrend View & Monthly View Charts using Recharts\nTrack monthly user growth using animated bar and line charts\nDisplay user geolocation on an interactive world map using react-simple-maps\nDeploy your app to Vercel / Cloud with performance best practices\nWhy This Course?\nSaaS-Ready Project: Build a platform you could pitch, sell, or deploy for real-world use\nAI Integration: Use GenAI for personalized features\nModern Payments: Cover every major payment option, especially for India & global audiences\nReal-Time Analytics: Admin dashboard with sales & user insights powered by Recharts\nUser Mapping: Visualize global activity using react-simple-maps\nProduction Deployment: Learn cloud-ready deployment with Vercel\nTechnologies & Tools You'll Master\nNext.js 15 (App Router)\nReact + MUI (Material UI)\nNode.js + Express.js\nMongoDB + Mongoose\nStripe, Razorpay, PayPal SDKs (for UPI, cards, wallets, BNPL, etc.)\nRecharts (Monthly User Growth, Sales Reports, Trend Views)\nreact-simple-maps (User Geolocation Map)\nCloudinary / Multer (Image Uploads)\nJWT Auth + Role Middleware\nAI/GenAI API Integration\nVercel / Cloud Deployment\nWho Should Take This Course?\nDevelopers who want to build advanced full-stack apps with AI and payments\nFreelancers building booking systems, dashboards, or SaaS platforms\nEntrepreneurs validating a hotel/room booking startup\nStudents wanting a portfolio project that actually feels like a real product\nAnyone looking to master modern frontend + backend + analytics + AI\nBy the end of this course, you’ll have a real, scalable hotel booking platform — complete with AI features, user tracking, full payment integration, sales reporting, and more. It’s the ultimate full-stack SaaS project to launch or showcase.\nEnroll now and build something professional, powerful, and profitable!",
      "target_audience": [
        "Entrepreneurs and Freelancers: Business owners and freelancers who want to build custom web applications or job portals to meet specific business needs or client requirements.",
        "fontend devloper",
        "React Developers: React developers who want to deepen their understand",
        "Web Development Enthusiasts: Individuals passionate about web development who want to learn cutting-edge technologies and build real-world projects to enhance their portfolios",
        "Web Developers Seeking Advanced Skills",
        "Tech Hobbyists",
        ". Computer Science Enthusiasts"
      ]
    },
    {
      "title": "Advanced Python Django Ecommerce Website Development Course",
      "url": "https://www.udemy.com/course/advanced-python-django-ecommerce-website-development-course/",
      "bio": "An advanced Django Ecommerce Course with Product Variation, Rating System, Payment Gateway, Order Management, AWS Deploy",
      "objectives": [
        "Product Management with Product Variations Using Django",
        "Custom Shopping Cart Functionality",
        "Order Management and Payment Gateway Integration",
        "Product Gallery and Product Reviews",
        "Deployment on AWS Elastic Beanstalk"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Full Project Overview"
        ],
        "Getting Ready": [
          "Django Refresher",
          "Important Note",
          "Installing Necessary Software’s",
          "Setup Virtual Environment",
          "Install Latest Version of Django",
          "Django Installation",
          "Run HTTP Response",
          "Configuring Template",
          "Implement Bootstrap Template",
          "Making Base Template",
          "Full Project Code on GitHub",
          "Download Practice Templates"
        ],
        "Django Custom User Model, Category and Media Files": [
          "Category Model",
          "Brief about Custom User Model",
          "Making Custom User Model",
          "Making the Custom Password Field Read-only",
          "Configuring Django Media Files",
          "Pre-populate Category Slug",
          "Install SQLite Studio"
        ],
        "Working with Products": [
          "Store App & Product Model",
          "Add Products",
          "Display Product in Homepage",
          "Make Store Page",
          "Display Products in Store Page",
          "Display Products by Category"
        ],
        "Context Processors & Product Details": [
          "Make Context Processors for Displaying Categories on Navbar",
          "Display Categories in the Store Page",
          "Implement Product Detail Url and Design",
          "Single Product View",
          "Get URL for Product",
          "Change Cover Photo",
          "Product Out of Stock Tag"
        ],
        "Setup Git and Build Carts Functionality": [
          "Setup Git for Project",
          "Carts App & Cart Page Design",
          "Cart & Cart Item Models"
        ],
        "Add to Cart using Session Keys, Increment/decrement/remove Cart Items": [
          "Add to Cart Functionality without Logging-in and with Session Key",
          "Cart View for Getting Cart Items, Total & Quantity",
          "Implement Data into Cart Page",
          "Calculate Tax & Grand Total",
          "Decrement & Remove Cart Items"
        ],
        "Fixing Cart Bugs & Context Processor for Cart Item Counter": [
          "Check for Empty Cart",
          "Fix Add to Cart Links",
          "Check If the Product Added to the Cart",
          "Counter Context Processor for Cart Icon in Navbar"
        ],
        "Paginator & Search": [
          "View Details Button",
          "Paginator Part 01",
          "Paginator Part 02",
          "Fixing Products Warning and Empty Cart Issue",
          "Search Function"
        ],
        "Starting Product Variations & Variation Manager": [
          "Product Variation Preparation",
          "Product Variation Model",
          "Product Variation Fetch Dynamic Color",
          "Variation Manager for Variation Model",
          "Get the Instance of Variation Part 01",
          "Get the Instance of Variation Part 02"
        ]
      },
      "requirements": [
        "Basic HTML, CSS",
        "Python Basics, Django Basics"
      ],
      "description": "Welcome to the Project-Based Django Web Development Course where you will learn to develop a fully-featured eCommerce website and redesign any Django-based web applications.\nI designed this course for anyone seeking to learn and build a Django-based custom web application. By the end of the course, you will be able to analyze, design, and develop your own eCommerce application and deploy it on the Amazon AWS Server with a custom domain name.\nWe’ll be building a fully custom-featured eCommerce application using a Python Django web framework. You will learn how to make your own custom user model, categories and products, Carts, Incrementing, Decrementing, and removing car items, Unlimited Product image gallery, Orders, and Payments, also we’ll be making “after order functionalities” such as reducing the quantity of sold products, send the order received email, clearing the cart, Order completion page as well as generating an invoice for the order. Also, we’ll be making a Review and Rating system where we’ll be designing interactive rating stars from scratch that even allows you to rate a half-star rating. We’ll also make my account functionalities for the customer who can easily edit his profile, profile pictures, change his account password, and manage his orders.\nFinally, we will deploy this application on AWS Elastic Beanstalk with RDS Postgres DB and use AWS S3 Bucket for media storage. Additionally, we’ll configure a custom domain name, set up AWS Route 53, and install the Free SSL Certificate provided by AWS.",
      "target_audience": [
        "Freshers who want to gain real software development experience",
        "Experienced software developers who want to switch career to Python Django Development",
        "Anyone who wants to learn real logic building skills using Python and Django"
      ]
    },
    {
      "title": "OWASP API Security Top 10 2023: Comprehensive Security Guide",
      "url": "https://www.udemy.com/course/owasp-security-learnit/",
      "bio": "Explore key API security concepts through real examples during the development of web applications, with Java examples",
      "objectives": [
        "Understand the OWASP API Top 10 vulnerabilities and their impact on security",
        "Learn best practices for securing APIs against common threats",
        "Identify key tools and techniques for API security assessment",
        "Gain hands-on experience with real-world API security scenarios",
        "Explore mitigation strategies for each OWASP vulnerability",
        "Develop a robust API security strategy for your applications",
        "Understand the importance of authentication and authorization in APIs",
        "Learn how to perform effective security testing on APIs",
        "Learn how to secure sensitive data in API responses",
        "Explore the risks of improper CORS configurations in APIs",
        "Understand the implications of using third-party APIs securely",
        "Gain skills in implementing OAuth and JWT for API security",
        "Discover how to handle API versioning securely",
        "Learn about the security aspects of API design and architecture",
        "Understand the role of security audits and reviews in API development",
        "Get practical tips for threat modeling specific to APIs",
        "Explore strategies for incident response in API security breaches"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "OWASP API Top 10 2023": [
          "OWASP API Security Project & OWASP API Security Top 10 2023",
          "API1:2023 Broken Object Level Authorization - Part 1",
          "API1:2023 Broken Object Level Authorization - Part 2 (Practice)",
          "API1:2023 Broken Object Level Authorization - Part 3 (Zero-Trust, UUIDs)",
          "API2:2023 Broken Authentication - Part 1 (Basics, Impact, Types of Attacks)",
          "API2:2023 Broken Authentication - Part 2 (Case Studies, OAuth, OpenID)",
          "API2:2023 Broken Authentication - P.3 - (Practice, JWT Tokens, Timing Attacks)",
          "API3:2023 Broken Object Property Level Authorization - Part 1",
          "API3:2023 Broken Object Property Level Authorization - Part 2 (Practice)",
          "API4:2023 Unrestricted Resource Consumption - Part 1",
          "API4:2023 Unrestricted Resource Consumption - Part 2 (Practice)",
          "API5:2023 Broken Function Level Authorization - Part 1",
          "API5:2023 Broken Function Level Authorization - Part 2 (Practice)",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 1",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 2",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 3 (Practice)",
          "API7:2023 - Server Side Request Forgery",
          "API8:2023 - Security Misconfiguration",
          "API9:2023 Improper Inventory Management - Part 1",
          "Improper Inventory Management - Part 2 (Practice)",
          "API10:2023 Unsafe Consumption of APIs - Part 1",
          "API10:2023 Unsafe Consumption of APIs - Part 2 (Practice)"
        ],
        "Extra Materials: OWASP Top 10 2021": [
          "OWASP Top 10: Overview",
          "Broken Access Control",
          "Cryptography Failures (Theory, Sensitive Data, Data Breach, Types of Failures)",
          "Cryptography Failures (Practical Examples, SQL Injections, TLS/SSL, HTTPS)",
          "Cryptography Failures (Examples, Password Encryption, Hashing, Salting)",
          "Injection (Overview, Fuzzing, CWEs, Impact, Injection Types, Command Injection)",
          "Injection (Cross Site Scripting, Types of XSS, SQL, JPA, NoSQL Injections)",
          "Injection (XPath Injection, Log Injection, Input Validation)",
          "Insecure Design (Overivew, CWEs, Shift Left Security, Threat Modeling Manifesto)",
          "Insecure Design (Secure Design Process, Security Controls, Metrics, Examples)",
          "Security Misconfiguration (Overview, CWEs, Types, Real-life attacks)",
          "Security Misconfiguration (Hardening, Zero Trust, Defense in Depth, Practice)",
          "Vulnerable & Outdated Components",
          "Identification & Authentication Failures",
          "Software & Data Integrity Failures",
          "Security Logging & Monitoring Failures",
          "Server-Side Request Forgery (SSRF)"
        ],
        "Extra Materials: OWASP Top 10 2025: LLM": [
          "Introduction to OWASP Top 10 2025: LLM",
          "LLM01:2025 Prompt Injection",
          "LLM02:2025 Sensitive Information Disclosure",
          "LLM03:2025 Supply Chain",
          "LLM04:2025 Data and Model Poisoning",
          "LLM05:2025 Improper Output Handling",
          "LLM06:2025 Excessive Agency",
          "LLM07:2025 System Prompt Leakage",
          "LLM08:2025 Vector and Embedding Weaknesses",
          "LLM09:2025 Misinformation",
          "LLM10:2025 Unbounded Consumption"
        ],
        "Cybersecurity: Comprehensive Security Practices for Developers": [
          "Introduction to Cybersecurity p.1 - Overview of current cyber threat landscape",
          "Introduction to Cybersecurity p.2 - Case Studies, Threat Analysis Models & More",
          "Introduction to Cybersecurity p.3 - Security Controls, SDD, SOC",
          "General Security Tips: Writing Code with Safety in Mind",
          "Securing Inputs: How to Validate and Sanitize Input Data",
          "Safeguarding Outputs: Effective Encoding for Secure Systems",
          "Mastering Authentication: Best Practices for Managing User Credentials",
          "Securing Sessions: Preventing Hijacking and Improving Stability",
          "Locking Down Access: Implementing Robust Authorization Mechanisms",
          "Zero Trust Architecture and Modern Authentication",
          "Encryption Essentials: Protecting Data with Cryptography - Part 1",
          "Encryption Essentials: Protecting Data with Cryptography - Part 2",
          "Defending Data: Strategies for Protecting Sensitive Information",
          "Securing Databases: Best Practices for Preventing SQL Injection",
          "Safe File Handling: Preventing File-Based Vulnerabilities",
          "Protecting Communication Channels: Ensuring Secure Transmission of Data",
          "Hardening System Configurations: Reducing Attack Surface",
          "Cloud Security Best Practices",
          "Mobile Application Security"
        ],
        "Resilient, Scalable & Secure Systems with Spring Boot": [
          "Why this section is part of the course - and why it is improtant",
          "OAuth, OAuth 2.0, JWT & OpenID Connect, Identity Provider",
          "Practice: Auth0 - Configuration of Identity Provider",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 1",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 2",
          "Testing Security: Testing of Spring Boot Endpoints - Part 1",
          "Testing Security: Testing of Spring Boot Endpoints - Part 2",
          "Protecting APIs with Rate Limiting",
          "Rate Limiting Practical Guide: Bucket4j",
          "Building Resilient Services with Resilience4j in Spring Boot. Circuit Breaker",
          "Circuit Breaker - Practice",
          "Spring Boot + Resilience4j: Retry Pattern",
          "Spring Boot + Resilience4j: Time Limiter Pattern",
          "Spring Boot + Resilience4j: Rate Limitter Pattern",
          "Spring Boot + Resilience4j: Bulkhead Pattern",
          "Microservices Patterns in Practice: Exploring API Gateway",
          "Spring Cloud Gateway: Practice",
          "Understanding Load Balancing: Concepts, Strategies, and Use Cases",
          "Implementing Load Balancing with Spring Cloud LoadBalancer"
        ],
        "Bonus section": [
          "Bonus lesson"
        ]
      },
      "requirements": [
        "Basic understanding of web development concepts",
        "Familiarity with RESTful APIs and HTTP protocols",
        "Knowledge of security principles is a plus but not mandatory",
        "No specific tools are required; just a computer with internet access",
        "A willingness to learn and explore API security topics"
      ],
      "description": "APIs are the digital highways that connect modern applications, enabling seamless communication between systems, services, and devices. But with great power comes great responsibility—APIs have become one of the most common attack vectors for malicious actors. If you’re developing, deploying, or managing APIs, understanding how to secure them is no longer optional—it’s essential.\nWelcome to the \"OWASP API Top 10 2023\" course, your step-by-step guide to mastering API security. This course is designed to take you from the basics to advanced protection strategies, all while focusing on the latest OWASP API Top 10 vulnerabilities that pose real threats to your applications.\nYou’ll explore key security concepts not just in theory, but through practical, real-world examples. From the very start, you’ll get your hands dirty by diving into the development of web applications that mirror the security challenges professionals face every day. With these real-world examples, you’ll learn how to identify, mitigate, and prevent the most critical vulnerabilities that hackers exploit, such as:\nBroken Object-Level Authorization\nMass Assignment\nSecurity Misconfiguration\nLack of Rate Limiting\nAnd many more!\nThis course will guide you through:\nUnderstanding the OWASP API Top 10 2023 vulnerabilities: What are they? Why do they matter? How can they cripple your application security if left unchecked?\nReal-world scenarios and practical examples: See how attackers exploit these vulnerabilities and how you can prevent it.\nBuilding secure APIs from the ground up: Learn how to develop APIs with security embedded into each stage of the development lifecycle.\nMitigation strategies: You’ll not only learn how to detect vulnerabilities but also implement robust security measures to protect your API and the sensitive data it handles.\nSecurity best practices: Gain insights into proper authentication, authorization, input validation, rate limiting, and more.\nWhether you're a developer looking to build more secure APIs, a security professional wanting to expand your skill set, or an IT leader responsible for protecting your organization's data, this course is perfect for you. The content is designed to be beginner-friendly, but it also offers deep dives into complex security topics that even seasoned developers and security experts will find valuable.\nBy the end of the course, you’ll not only be familiar with the OWASP API Top 10 list but also be equipped to confidently build, test, and secure APIs against the latest threats. You’ll walk away with practical skills and knowledge that can be applied immediately to your projects, helping you build secure, resilient APIs that can stand up to even the most sophisticated attacks.\nWhy enroll in this course?\nHands-on learning: You won’t just watch; you’ll actively work through real security issues.\nUp-to-date with OWASP API Top 10 2023: Learn the latest threats and defenses.\nExpert guidance: Get insights from instructors who specialize in API security.\nActionable insights: Gain techniques you can use right away in your job or project.\nCertificate of completion: Add a valuable credential to your resume and boost your career.\nDon’t wait until your APIs are under attack—take control of your API security now. Enroll today and take the first step towards becoming an expert in API security!",
      "target_audience": [
        "Developers looking to enhance their API security skills",
        "Security professionals seeking to understand the latest API vulnerabilities",
        "Software engineers interested in building secure applications",
        "Students and beginners eager to learn about API security best practices",
        "Tech leads and architects wanting to implement robust security measures in their projects"
      ]
    },
    {
      "title": "Learning Path: Python: Design and Architect Python Apps",
      "url": "https://www.udemy.com/course/learning-path-python-design-and-architect-python-apps/",
      "bio": "Get equipped with software architectural principles and build high-performance applications with Python",
      "objectives": [
        "Understand the characteristics and importance of software architecture",
        "Learn architectural quality attributes",
        "Learn to identify design issues and make the necessary adjustments to achieve improved performance",
        "Get familiar with white box testing principles",
        "Explore concurrency and multithreading",
        "Learn different categories of design patterns",
        "Explore the prototype pattern"
      ],
      "course_content": {
        "Software Architecture with Python": [
          "The Course Overview",
          "Defining Software Architecture",
          "Characteristics of Software Architecture",
          "Architectural Quality Attributes",
          "Understanding Readability",
          "Fundamentals of Modifiability",
          "Exploring Strategies for Modifiability",
          "Metrics - Tools for Static Analysis",
          "Refactoring Codes",
          "Understanding Testability",
          "White-Box Testing",
          "Code Coverage",
          "TDD with Palindromes",
          "Performance",
          "Measuring Performance",
          "Profiling",
          "Other Tools",
          "Programming for Performance – Data Structures",
          "Test Your Knowledge"
        ],
        "Architecting Scalable Python Applications": [
          "The Course Overview",
          "Scalability and Concurrency",
          "Thumbnail Generator",
          "Multithreading - Python and GIL",
          "Multithreading Versus Multiprocessing",
          "Concurrent Futures",
          "Celery",
          "Secure Coding and Vulnerabilities",
          "Is Python Secured?",
          "Security Issues with Web Applications",
          "Strategies for Security – Python",
          "Secure Coding Strategies",
          "Design Patterns - Elements",
          "Categories of Design Patterns",
          "Patterns in Python - Creational",
          "Patterns in Python - Structural",
          "Patterns in Python - Behavioral",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Prior working knowledge on Python is needed."
      ],
      "description": "Software Architecture is the process of taking operational and technical requirements and designing a solution that optimizes things deemed important to the system like quality, performance, security, and maintainability. If you're a Python developer aspiring to become the architects of enterprise-grade applications or software architects who would like to leverage Python to create effective blueprints of applications, then go for this Learning Path.\nPackt’s Video Learning Path is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\n●             Understand the characteristics and importance of software architecture\n●             Solve security issues with web applications\n●             Explore different design patterns in Python\nLet's take a quick look at your learning journey. This Learning Path starts off by explaining how Python fits into an application architecture. You’ll get a complete understanding of the different architectural quality requirements such as maintainability, reusability, testability, scalability, performance, usability, and security to build a product that satisfies business needs. Next, you’ll learn what is scalability and concurrency and the relationship between the two that affects the performance attributes. Further, you’ll learn security aspects of Python. Finally, you’ll learn the creational, structural, and behavioral patterns in Python.\nBy the end of this Learning Path, you’ll have all the knowledge to become a successful software architect.\nMeet Your Expert:\nWe have the best works of the following esteemed author to ensure that your learning journey is smooth:\n\nAnand Balachandran Pillai is an engineering and technology professional with over 18 years of experience in the software industry in product engineering, software design, and architecture and research. He has worked with companies such as Yahoo!, McAfee, and Infosys in the roles of lead engineer and architect in product development teams, to build new products. He is the founder of the Bangalore Python Users Group and a fellow member of the Python Software Foundation (PSF). Anand is currently working as senior architect in Yegii Inc.",
      "target_audience": [
        "This Learning Path is for experienced Python developers who are aspiring to become the architects of enterprise-grade applications. This Learning Path is also for software architects who would like to leverage Python to develop Python applications."
      ]
    },
    {
      "title": "Protect and Clean your WordPress website: WordPress Security",
      "url": "https://www.udemy.com/course/wordpress-secure-and-protect-your-website-in-few-easy-steps/",
      "bio": "More than 30,000 sites are hacked everyday - don't be in one of them! Just not protect WordPress, in-fact hide WordPress",
      "objectives": [
        "The primary objective of this course is to learn about WordPress Security and security measures that can be applied to protect your websites.",
        "The course will guide through the basic protections to advanced; you will also learn to hide the whole WordPress making it difficult to attack.",
        "Backup WordPress: The safest way to protect websites is by backing it up regularly; thus you will learn to backup and restore your WordPress website.",
        "Restrict wp-admin or wp-login page: You will learn to protect your wp-admin or wp-login page by country or by IP address",
        "Protect wp-config, Disable PHP Error Reporting, Hotlinking, Disable XML - RPC, manually approve comments and many more",
        "File Permission: Know about the recommended file permission for your WordPress files and directories and apply the settings as accordingly.",
        "Protect Your Database: We will learn how you can easily change the table prefix of your WordPress database.",
        "Hide Login Page: We will change the default WordPress login page i.e. wp-admin and wp-login page to something unique.",
        "Hide WordPress: We will hide the basic WordPress information so that it cannot be easily detected by the WordPress analyzing websites (such as wpthemedetector).",
        "Some basic precautions measure: And finally we’ll run through some important cautious majors so that you can safeguard your WordPress websites.",
        "Implement the Security Headers to get A+ score"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Backup Your WordPress Website": [
          "Save your important WordPress files for Backup"
        ],
        "Change Login Username and Password": [
          "While changing password is easy - learn how you can change the Login name"
        ],
        "Restricting access to Login page (wp-admin / wp-login) via IP address or Country": [
          "Give access or deny to WordPress Login page only from specific IP",
          "Control Access to login page via Country"
        ],
        "Add an extra page to access the WordPress login page - wp-admin": [
          "Add an extra page to access the WordPress login page - wp-admin"
        ],
        "Add a custom field to the WordPress Login Page (wp-admin)": [
          "Add a custom field to the WordPress Login Page (wp-admin)"
        ],
        "Fool the BOT, interchange username to password and vice versa": [
          "Fool the BOT, interchange username to password and vice versa"
        ],
        "Add a google reCaptcha v2 in the WordPress login Page": [
          "Add a google reCaptcha v2 in the WordPress login Page"
        ],
        "WP Secure Login Authorization: Protect your Login with an APP": [
          "WP Secure Login Authorization: Protect your Login with an APP"
        ],
        "How to get notified when someone accesses your WordPress Dashboard?": [
          "How to get notified when someone accesses your WordPress Dashboard?"
        ]
      },
      "requirements": [
        "A WordPress Website, cPanel or FTP access"
      ],
      "description": "I often get asked by the WordPress website owners – IS WORDPRESS SECURE? Well the simple answer is yes, but you will need to take some basic security measures, or else the stats of WordPress websites getting hacked is quite high but that’s for other websites too. Hence, with this course, we will learn to protect your WordPress websites.\n\nMany popular websites use WordPress – nearly 35% of the market uses WordPress to build their sites. So the platform itself is very strong, the only flaw is when we expose the websites to security vulnerabilities unknowingly and forget to take the basic security measures. But don’t worry, this course will guide you on protecting your WordPress website.\nAnd again this course certainly helps you to get rid of lots of issues, but at the same time, it is impossible to guarantee a hackproof idea. But to our experience, most of the people lose their site’s control mainly because they ignore the basic things like having an easy password or sharing it with someone, or using a nulled theme or plugins. If you take some basic measures these could be easily avoided.\n\nThe tutorial is short and to the point, with very few yet precise explanations. Please feel free to get back to me for any confusion.\n\nI really hope you will learn something valuable from this course and protect your WordPress website.\n\nThank you.",
      "target_audience": [
        "Beginners, Intermediates & Freelancers basically everyone willing to protect their WordPress website"
      ]
    },
    {
      "title": "Bootstrap Bootcamp (featuring Bootstrap 5)",
      "url": "https://www.udemy.com/course/bootstrap-5-bootcamp/",
      "bio": "Get a solid foothold of Bootstrap 5 by building a portfolio-based website in HTML/CSS",
      "objectives": [
        "How to use Bootstrap 5",
        "How to connect a form up to Netlify",
        "How to send a form through Netlify",
        "How to upload a website to Netlify"
      ],
      "course_content": {
        "Introduction": [
          "Example images for project",
          "Source Code for project",
          "Bootstrap starter template",
          "Adding a custom css file",
          "The container",
          "Setting up the Navigation",
          "Adding the SVG logo",
          "Setting up the hero graphic",
          "Centering the hero text with Flex",
          "X-axis and y-axis spacing",
          "Text-center and lead",
          "The footer and bootstrap icons",
          "Setting up the about page",
          "About page content with floats and overflow",
          "The grid",
          "Bootstrap 5 cards",
          "Bootstrap buttons",
          "Gutters",
          "Setting up the contact page",
          "Adding contact details",
          "Setting up the form",
          "Netlify and the drag and drop method",
          "Netlify forms",
          "Adding the honeypot to the form",
          "A little additional cleanup",
          "A sticky footer",
          "In conclusion"
        ]
      },
      "requirements": [
        "Nope. Start from complete scratch"
      ],
      "description": "Design. Build. Deploy. Quickly.\nIn the Bootstrap Bootcamp course, you'll build you're own portfolio, utilizing the tools provided in Bootstrap. We'll leverage the responsive power of bootstrap to make your website look perfect on any device—from the biggest desktop to an old iPhone 6.\nWe'll design a portfolio that not only functions, but looks gorgeous. Display your artwork, hobbies or other crafts in this visual portfolio. We'll build from the ground up, step by step.\nWebsites shouldn't just live on your computer. They should be seen by the entire world. That's why I make sure to show you how to upload / deploy your work out there for everyone to see. And connect a domain name to it as well.\nWe will cover how to use the following in this course:\nResponsive Web Design\nGrid / Container\nNav / Navbar\nSVG logo integration\nFlex / Flexbox\nHeading / Paragraph styling\nForm Design\nCards\nDeploying your website\n…and more!\n** BONUS **\nI'll also walk you through how to setup a working form through Netlify. You'll learn how to create a success page as well, so your entries will pass through properly. We will setup the form using Bootstrap 5's form design.\nI wanted this course to be concise, so you can quickly grasp the power of Bootstrap 5 and be on your way. I'm so excited to showcase the awesome power of Bootstrap 5.",
      "target_audience": [
        "web developers",
        "web designers",
        "students"
      ]
    },
    {
      "title": "Learn Web Development Using VueJS",
      "url": "https://www.udemy.com/course/learn-web-development-using-vuejs/",
      "bio": "Learn to build new age UIs using the progressive JavaScript Framework - VueJS",
      "objectives": [
        "Learn to build UI with VueJS",
        "Build professional apps using VueJS",
        "Master advance JavaScript programming"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "Getting Started With Vue.js": [
          "Section Intro",
          "What is Vue",
          "Comparing Vue To Other Libraries",
          "Vue.js Standalone Setup",
          "Vue CLI With Webpack",
          "Section 2 Quiz Questions"
        ],
        "Template Syntax & Binding": [
          "Section Intro",
          "Basic Interpolations",
          "Conditionals & Loops",
          "Class & Style Binding",
          "Section 3 Quiz Questions"
        ],
        "Input, Events & Transitions": [
          "Section Intro",
          "Input Binding",
          "Handling Events",
          "Custom Filters",
          "Transition Effects",
          "CSS Animations",
          "Section 4 Quiz Questions"
        ],
        "Watchers & Computed Properties": [
          "Section Intro",
          "Working With Watchers",
          "Computed Properties",
          "Questioner Mini Project",
          "Section 5 Quiz Questions"
        ],
        "Working With Components": [
          "Section Intro",
          "Standalone Components",
          "Component Properties",
          "Todos Component & Mini Project",
          "Vue Router",
          "Section 6 Quiz Questions"
        ],
        "Subreddit Project": [
          "Project Intro",
          "App Setup & Main Component",
          "Subreddits Component",
          "Fetching Data with Vue-Resource",
          "Subreddit Post Component"
        ],
        "Course Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is assumed"
      ],
      "description": "Your One Stop Shop for Vue.JS is here!\nThis course has been design to be your only go to resource for learning the brilliant Vue.JS front-end framework.\nVue.JS is a simple and adoptable JavaScript framework that work as a view-only framework, similar to ReactJS and Angular. However, it differs from these drastically. Vue is not only faster but also easier to work with and comes with less overheads.\nIt has been designed to be adoptable and is easy to integrate with other existing technologies or libraries. This brilliant framework is currently one of the most popular frameworks on the market for simple single page applications (SPAs).\nHere is your chance to learn this amazing technology from the start. You don’t need any other course, tutorial or resource. We have created this course to be your only guide for learning this amazing technology\nIn this comprehensive course, you start from the ground up understanding what is Vue, what is it good for, how can it benefit you for programming, it’s basic fundamentals, the UI development syntax, components, how to incorporate APIs and even design a complete project using Vue.\nThe course starts with helping the learner understand what is Vue and how it can help in development, as well as compare it to other technologies such as React.JS. It will provide a detailed look into the syntax including directives, interpolation, what is data-binding and how can we create two-way data bindings through input fields and handle events.\nIt will then progress on to discussing watchers, reactive properties and how to use them in an app, components (stand-alone as well as ones that are used with the Vue CLI and Webpack), and also understanding the Vue Router.\nThe last section includes a project that will help you get some hands-on experience with Vue.JS, allowing the student to learn how this technology can be used in practical applications. In this project, you will design a webpage using Vue that makes API requests using the Vue Resource Package to Reddit, and has subreddits displayed on the webpage.\nThis truly is the complete course to help you learn Vue. So, what are vue waiting for?! Enroll now and master this framework.",
      "target_audience": [
        "Student who want to learn UI development with VueJS will find this course a great reference material"
      ]
    },
    {
      "title": "Web Development with Elm",
      "url": "https://www.udemy.com/course/web-development-with-elm/",
      "bio": "Learn Elm and excel in functional programming",
      "objectives": [
        "Elm syntax",
        "HTML and CSS rendering",
        "How to build stateful applications in Elm",
        "Server communication",
        "Communication with JavaScript runtimes",
        "Core architecture principles",
        "How to use the Create Elm App and other tools",
        "How to use open-source packages in Elm",
        "Advanced patterns and techniques"
      ],
      "course_content": {
        "Elm: Installation and Building the First Project": [
          "The Course Overview",
          "Starting-up with Your First Elm App",
          "Get Familiar with Elm Syntax",
          "Expressing the Model with Primitive Built-in Data Types",
          "Persistent Data Structures for Collections in Elm",
          "Elm’s Type System and Type Inference",
          "Maybe and the Result Data Types",
          "Module System in Elm",
          "Rendering the Model with HTML and CSS",
          "Elm: Installation and Building the first project"
        ],
        "Architecting Webapps: The Elm Architecture": [
          "Introducing Side Effects with Beginner Program",
          "Tasks for Asynchronous Computations",
          "Executing the Program with Commands",
          "Manage the Initial Application State with Program with Flags",
          "Communication with the Server",
          "Encoding and Decoding JSON",
          "Talking to JavaScript",
          "Architecting Webapps: the Elm Architecture"
        ],
        "Explore the Elm Tooling": [
          "Development Tools: elm-format, Time Traveling Debugger, and elm-reactor",
          "Package Manager and Open-source Packages",
          "Testing Your Modules",
          "Type Safe CSS with elm-css",
          "Explore The Elm Tooling"
        ],
        "Going Further with Elm": [
          "Encapsulation and Code Organization",
          "Managing the Messages with Tagger",
          "Rendering Performance Optimizations with Html.Lazy",
          "Going Further with Elm"
        ]
      },
      "requirements": [
        "Some prior knowledge of working with functional JavaScript will be helpful."
      ],
      "description": "Elm is one of the leading languages responsible for increasing the adoption of Functional programming in frontend web development. Thanks to Evan Czaplicki and the Elm Community, we have at our disposal an incredibly user-friendly and easily accessible programming language that compiles to JavaScript and runs in the browser. It is a game-changer for web developers who are keen on getting their hands dirty with functional programming.\nAs a strongly typed language with Type Inference, Elm guarantees error-free runtime and excellent performance. The thoughtfully designed pattern for state management called the Elm Architecture has served as an inspiration for numerous JavaScript libraries such as Redux and many others. Empower yourself with the ability to utilize all the essential aspects of Elm for developing real-world applications.\nThe course is a practical application of a functional programming language. We will be looking into persistent data types and data structures. You will get an introduction to the concept of side-effects and state management.\nTogether we will build a web application, exemplifying all the core principles of web application development with a purely functional language. Apart from Elm, you will be able to apply those principles in other programming languages for your practical needs.\nStrongly typed language with Type inference guarantees error-free runtime and excellent performance. Elm Architecture is the key inspiration for numerous JavaScript frameworks and libraries. Empower yourself with the ability to utilize all the important aspects of Elm for developing real world applications.\nWe will be covering topics such as Functional programming, Persistent data structures, data modeling and performant HTML rendering. The course will introduce you to the concepts of Type inference, Side effects, and Lazy computations in practical examples. You will be able to build your interactive applications with the help of Type Inference and Time traveling debugger.\nTogether we will build a real world application, exemplifying all core principles of application development in a purely functional programming language. You will be able to apply those principles in any other functional programming language for your practical needs.\nAbout the Author\nEduard Kyvenko is a Front-End developer with a focus on functional architectures. The primary maintainer of Create Elm App, open-source contributor and the author of one of the first production applications written in Elm.",
      "target_audience": [
        "The ideal target audience for this video is web developers who are interested in better ways of building web applications using a functional language."
      ]
    },
    {
      "title": "Top Web Development Bundle: Django, Ruby on Rails, Node",
      "url": "https://www.udemy.com/course/ultimate-web-development-bundle-django-ruby-on-rails-node/",
      "bio": "Learn The Three Most Popular Web Development Frameworks! Django and Python, Ruby on Rails, and Node and Javascript!",
      "objectives": [
        "Django From Beginner To Advanced",
        "Ruby on Rails From Beginner To Advanced",
        "Node From Beginner To Advanced",
        "Programming Concepts Applicable To Any Web Development Framework",
        "How to Set Up Development Environments",
        "How to Use API's",
        "Using the Bootstrap CSS Framework",
        "How To Get Stock Market Data For Your App"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "First Things First: How To Get Support Fast!"
        ],
        "Build a Stock Market App With Django": [
          "Django Section Introduction",
          "Install Sublime and Git Bash Terminal",
          "Install Python",
          "Create a Virtual Environment",
          "Install Django and Startproject",
          "Django Version 3.0 Update",
          "Django Admin Area",
          "Startapp",
          "Include URLS",
          "Create Homepage Views and URLs",
          "Create About Page",
          "Extends Base.html",
          "Bootstrap CSS and Navbar",
          "Django Links",
          "Stock API Introduction",
          "Connect To The API",
          "API For Loop",
          "Format API Results",
          "Form Part 1",
          "Form Part 2",
          "Form Recap",
          "Add Stock Page",
          "Stock Class Model",
          "Add Model To Admin Area",
          "Output Database to Webpage",
          "Add Stock Ticker To Database",
          "Stock Form",
          "Delete Stocks From Database",
          "Django Messages",
          "Table Introduction",
          "Table Configuration",
          "Add Database Data To Bootstrap Table",
          "Connect Table To API",
          "API Output To Screen",
          "API Output To Table",
          "Delete Buttons",
          "SSH Keys",
          "GIT Version Control",
          "Github"
        ],
        "Build a Stock Market App With Ruby On Rails": [
          "Rails Overview",
          "Install Node",
          "Install Sublime Text and Git Bash Terminal",
          "Generate an SSH Key",
          "Install Heroku Toolbelt",
          "Install Ruby on Rails",
          "Update!",
          "Create a Test Project and Handle Errors",
          "Ruby On Rails Overview",
          "Rails Server",
          "Create First Webpage With Generator",
          "Root Route",
          "Git Version Control",
          "Github",
          "Create About Page Manually",
          "Application.html.erb page",
          "Create Ruby Links",
          "Partials",
          "Bootstrap Overview",
          "Installing Bootstrap",
          "Bootstrap Navbar",
          "Mobile Ready Design",
          "Stock Quote Gem Intro",
          "Stock Quote Update - API KEY!",
          "Stock Quote Gem Walkthru",
          "Stock Forms",
          "Stock Form Controller",
          "Nothing Error Handling",
          "Junk Error Handling",
          "Install Devise User Management System",
          "Devise Database",
          "Flash Messages",
          "Devise Links",
          "Bootstrap Forms",
          "Conditional Navbar Links",
          "Stocks Database",
          "Stocks Views",
          "Fix Formatting and Rails Association",
          "Stocks Navbar and CRUD",
          "Authenticate Users",
          "Correct User Controller",
          "Correct User New Form",
          "Final Association Stock Index Page Loop",
          "Connecting to Stock Quote Gem Overview",
          "Connect Stocks Table To Quote Gem",
          "Precision and Delimiter Price fix",
          "Stock Index Error Handling",
          "Form Validation",
          "Bootstrap Table Stock Index Page",
          "More Error Handling",
          "Stocks Show Page",
          "Heroku Intro",
          "Heroku Push",
          "Heroku Run Rails DB:Migrate",
          "Heroku Domain Names"
        ],
        "Build A Stock Market App With Node": [
          "Node Course Introduction",
          "Install Sublime and Git Bash",
          "Install Node",
          "Start New App With NPM Init",
          "Install Express JS and Set PORT",
          "Build our First Webpage",
          "Set up Nodemon",
          "Install Handlebars",
          "Handlebars Pages",
          "Pass Variables to Handlebars",
          "Version Control With Git",
          "Push Code To Github.com",
          "Bootstrap Navbar",
          "About Handlebars Page",
          "API Intro",
          "Request API",
          "Call The API Function",
          "Create a Callback Function",
          "Output API Data The Screen",
          "Format API Output",
          "Intro To Forms",
          "Forms Body Parser",
          "Connect Form To API",
          "Intro To Heroku",
          "Heroku Toolbelt",
          "Push App to Heroku",
          "Heroku Domain Name"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser",
        "We'll download Django, Python, Ruby on Rails, and Node for Free and Use a Free Text Editor"
      ],
      "description": "In this course you'll learn how to build websites using three of the most popular web development frameworks used today; Django (and Python), Ruby on Rails (and Ruby), and Node (and Javascript).  We'll build three websites (one for each framework). The website will be a stock market portfolio app that will connect to a third part API, get stock market data, bring it back to your app, and then you'll learn how to manipulate that data and post it on your website.  It's a lot of fun!\nThis course is aimed at the absolute beginner, you don't need any coding experience at all!\nWe'll start out by setting downloading and installing all of the tools you'll need to start coding each of the frameworks.  Everything you need for this course is available as a free download, so there's nothing else to buy.\nFor each framework, we'll use the free Sublime Text Editor, the Git Bash Terminal and a Web Browser.\nThis course is a bundle of three of my other popular courses in Django/Python, Ruby on Rails, and Node/Javascript.\nThese web frameworks are three of the best frameworks to learn, and learning has never been this easy!  They're the most popular and in demand for a reason! Let's learn to code!\nI'll see you on the inside!\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the Django, Ruby on Rails, and Node Web Development Frameworks"
      ]
    },
    {
      "title": "Shopify Hydrogen Tutorial: Best Methods & Pro Tips",
      "url": "https://www.udemy.com/course/shopify-hydrogen-tutorial/",
      "bio": "This tutorial will help you accelerate the learning process about Shopify Hydrogen with best practices and pro tips...",
      "objectives": [
        "The architecture of the Hydrogen framework",
        "How to install Hydrogen locally for development",
        "How to use the Storefront API with Hydrogen",
        "How to use the Admin API with Hydrogen",
        "How to use Meta Objects with Hydrogen",
        "How to use Sanity CMS with Hydrogen",
        "How to build a homepage using Sanity CMS",
        "How to deploy to production"
      ],
      "course_content": {},
      "requirements": [
        "You should know basic HTML, CSS, JavaScript & React",
        "You should know your way around Shopify",
        "No prior experience of Shopify is necessary"
      ],
      "description": "Welcome to the Shopify Hydrogen Tutorial: Best Methods & Pro Tips course.\n\n\nMy name is Jaxson. I'm the Product Owner and Technical Leader at TrueStorefront, we've built the best Shopify Hydrogen theme (named Owen) and provide some Shopify Headless services.\n\n\nI have over three years of experience with Shopify Headless (using Next.js) and more than two years of experience with Hydrogen (I've been using Hydrogen from very early). I've also successfully completed over 6 Shopify Headless projects for clients (including 2 Shopify Plus stores).\n\n\nI'll be sharing my practical experience with other developers who want to learn about Shopify Hydrogen. I'll help you accelerate the learning process about Shopify Hydrogen with best practices, professional tips, and the right direction.\n\n\nAfter completing this course, you will know about:\n\n\nThe architecture of the Hydrogen framework\nHow to install Hydrogen locally for development\nHow to use the Storefront API with Hydrogen\nHow to use the Admin API with Hydrogen\nHow to use Meta Objects with Hydrogen\nHow to use Sanity CMS with Hydrogen\nHow to build a homepage using Sanity CMS\nHow to deploy to production\n\n\nI've extensively shared my experience with Shopify Hydrogen on my LinkedIn profile. If you are also interested in Shopify Hydrogen, and have any questions about it, connect with me on LinkedIn: in/jaxsonluu",
      "target_audience": [
        "Beginner to Intermediate \"Shopify and React developers\"",
        "Shopify developers who want to learn Shopify Hydrogen",
        "Students interested in Headless eCommerce",
        "Students who want to build a Shopify Hydrogen store",
        "Shopify merchants who wants to learn about Shopify Hydrogen"
      ]
    },
    {
      "title": "WordPress Complete Tutorial in Urdu + Hindi For Beginners",
      "url": "https://www.udemy.com/course/wordpress-complete-tutorial-in-urdu-hindi-for-beginners/",
      "bio": "Learn WordPress in Urdu and Hindi",
      "objectives": [
        "WordPress Mastery: This course provides a comprehensive learning experience, guiding students from the very basics to advanced concepts of WordPress. Whether yo",
        "Building a Blog Website: Students will learn how to build their very first blog website using WordPress. From setting up the foundation to designing the layout,",
        "No Coding Required: One of the distinguishing features of this course is its emphasis on teaching WordPress without the need for coding or programming knowledge",
        "Becoming a WordPress Guru: The ultimate objective of this course is to empower students to become WordPress gurus. By the end of the course, students will posse"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Free Service VS Installable Script",
          "Installing WAMP Server Local Instal 03",
          "Playing With WAMP 04",
          "Installing WordPress Locally 05",
          "Understanding Domains and Web Hosting in Depth 06",
          "Understanding SSL Certificates 07",
          "Finding Brand Domain for Your Personal Use or Business 08",
          "How to Choose Best Domain Names 09",
          "Buying Domains on NameCheap (10)",
          "Configuring Domain with Web Hosting (11)",
          "Overview of Cpanel Web Hosting (12)",
          "File Manager Cpanel Web Hosting (13)",
          "Understanding Databases in CPANEL Web Hosting (14)",
          "Creating Sub Domains in Cpanel Web Hosting (15)",
          "Understanding Redirects in CPANEL in Web Hosting (16)",
          "Understanding and Creating Webmail Email Accounts in CPANEL Web Hosting (17)",
          "Installing and Activating SSL Certificate in CPANEL (18)",
          "Installing WordPress in Web Hosting Cpanel Live (19)",
          "Converting HTTP into HTTPS SSL Certifcate WordPress Dashboard (20)",
          "Solving Error in WordPress Dashboard PHP Update Required (21)",
          "Overiew of Dashborad and Layouts(22)",
          "Clearing out WordPress Pre-Installed Content (23)",
          "Understanding and Creating Post and Pages (24)",
          "Understanding Classic Editor (25)",
          "Media Library Uploading Images (26)",
          "User Profile Editing (27)",
          "Permalinks (28)",
          "Installing Super Important Plugins (29)",
          "Understand WordPress Widgets (30)",
          "Understanding WordPress Themes and Installing (31)",
          "Allowing Comments and Comment Moderation (32)",
          "Creating Privacy Policy Page (33)",
          "Creating Disclaimer Page (34)",
          "Creating Contact Us Page (35)",
          "Creating About Us Page (36)",
          "Creating Menu and Sub Menu (37)",
          "WordPress Posts VS Pages (38)",
          "Categories and Tags (39)",
          "Creating Sub Footer and Verticle Menu (40)",
          "Setting up Feature Image (41)",
          "Resizing and Optimizing Images (42)",
          "Importance of Homepage (43)",
          "Static Homepage VS Blog Homepage (44)",
          "Creating Logo and Cover Photo (45)",
          "Introduction to Creating a Blog Website (46)",
          "Cleaning Out Website Content (47)",
          "Understanding Themes and Downloaded Premium Theme for Free (48)",
          "Installing Sahifa Theme (49)",
          "Import Demo Data (50)",
          "Solving SSL Error (51)",
          "Menu and Logo Sahifa Theme (52)",
          "Widgets Sahifa Theme (53)",
          "Sahifa Page Category Setting (54)",
          "Cleaning out Pre Installed Posts in Sahifa Theme (55)",
          "Creating Our First Post in Sahifa Theme (56)",
          "Yoast SEO Plugin (57)",
          "Video in Posts, Categories and Much More (58)",
          "Generating Sitemap and Uploading in CPANEL (59)",
          "Google Search Console (60)",
          "Adding Website to Bing Webmaster (61)",
          "Google Analytics (62)",
          "Changing Admin Login URL to Custom (63)",
          "Introduction to the WordPress Security (64)",
          "Integrating Two Factor Authentication on WordPress (65)",
          "Taking WordPress Backup with Plugin (66)",
          "Taking WordPress Backup Manually with Cpanel (67)",
          "Updating Plugins (68)",
          "How To Bring Traffic from Authority Websites to Your Blog Website (69)",
          "Bonus Lecture (70)"
        ]
      },
      "requirements": [
        "You must know who to use internet and basics of internet.",
        "You don’t need to know any coding experience at all. That’s the beauty of WordPress."
      ],
      "description": "If you are eager to learn the ins and outs of WordPress through an online course, look no further! This comprehensive WordPress course is designed to cater to all your learning needs, regardless of your coding background or programming expertise.\nLed by industry experts and experienced instructors, this course covers everything from the basics to advanced concepts, ensuring that you gain a thorough understanding of WordPress without the need for extensive technical knowledge. Even if you are an absolute beginner, this course will empower you to become a WordPress guru in just a few hours.\nThe main objective of this course is to make WordPress accessible to everyone. You won't be overwhelmed by complex technicalities or programming jargon; instead, you will be guided through the learning process in a clear and straightforward manner. By the end of the course, you will possess the skills and knowledge required to build a responsive and visually stunning website using the latest version of WordPress.\nBut it doesn't stop there. Not only will you acquire more knowledge about WordPress than the majority of individuals, but you will also discover the joy and convenience of working with WordPress. Its user-friendly interface and powerful features will revolutionize the way you approach website development and management.\nWhether you are an aspiring web developer, a small business owner, or simply someone looking to enhance their digital skills, this course is designed to meet your needs. With 300 words filled with valuable information, this description has hopefully provided you with a glimpse into the exciting world of WordPress and the educational journey that awaits you. Enroll now and embark on a transformative learning experience that will unlock countless opportunities for you in the online realm.",
      "target_audience": [
        "WordPress",
        "Blogging",
        "Web Development"
      ]
    },
    {
      "title": "Learn Web Development in PHP MYSQL with a Project (Nov 2023)",
      "url": "https://www.udemy.com/course/learn-web-development-in-php-mysql-with-a-project/",
      "bio": "Create a CMS based Website using PHP",
      "objectives": [
        "Basics of PHP",
        "Form handling in PHP",
        "Webservices and Sending notifications from PHP",
        "Database Operations in PHP",
        "Creating a CMS Website in PHP"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript is recommended.",
        "Familiarity with programming concepts is advantageous but not mandatory."
      ],
      "description": "This course is structured to cater to beginners as well as intermediate developers aiming to enhance their understanding and expertise in PHP. PHP is designed for web development to create dynamic and interactive web pages.\nIt can generate dynamic content, interact with databases, manage sessions, handle forms, and perform various other tasks when building websites and web applications.\nIn this course, you will learn the basics of PHP, its feature, constrains, variables, data types, looping statements, modules and packages.\nThen you will learn to work with forms. How to create a forms, how to validate and how to make the forms interactive and then what are Superglobals and different types of Superglobals.\nThen will learn about webservices and types of webservices that is REST and SOAP. How to send Email notification and SMS notification from PHP application.\nNext you will learn about databases, tables. How to establish connection with database. Then how to create a database, tables and insert, edit and delete data from a table in PhpMyAdmin. Then how to preform CRUD operation from a PHP Application.\nFinally we will have a case study for developing CMS based website. We will develop a restaurant based website with database and the Admin panel.\nBy the end of this course, you'll have the confidence and proficiency to develop robust web applications using PHP, apply best practices, and adapt to the evolving landscape of web development.\nOur focus is to teach topics that flow smoothly. The course teaches you everything you need to know about PHP programming with hands-on examples.\nThis course gives a quick introduction to PHP with an emphasis on its activity lessons\nWhat are you waiting for?\nEvery day is a missed opportunity.\nEnroll Now\nHurry up",
      "target_audience": [
        "Web Developers",
        "Software Developers",
        "Developers interested to learn PHP",
        "Students"
      ]
    },
    {
      "title": "Build Ecommerce site from scratch using React,Node&Bootstrap",
      "url": "https://www.udemy.com/course/build-ecommerce-site-from-scratch-using-reactnodebootstrap/",
      "bio": "How to build an Ecommerce site from scratch using Reactjs, Nodejs and Bootstrap 4",
      "objectives": [
        "Reactjs, Nodejs, how to use Bootstrap, jquery and fontawesome",
        "How to download, install and create a React project",
        "How to link dependecies to a React Project",
        "Students will also learn the basics of Reactjs",
        "How to create a functional  and class based React project from scratch",
        "How to use React Route in real life project",
        "How to use the React AppContext",
        "Many more...."
      ],
      "course_content": {
        "Introduction": [
          "What we will be building, an overview"
        ],
        "Getting started with React": [
          "Downloading and installing development tools i.e node and visual studio code",
          "Links to download node and visual studio code",
          "Creating a boilerplate from react default program",
          "Cleaning and getting the boilerplate ready for coding",
          "Downloading and linking Bootstrap to a React project",
          "Link to download Bootstrap and already downloaded Bootstrap file",
          "Downloading and linking Jquery to a React project",
          "Link to download Jquery",
          "Downloading and linking fontawesome to a React project",
          "Link to download fontawesome and the raw file",
          "How to confirm and check that files linked to a React project are working"
        ],
        "Understing terminologies in React and Creating Components": [
          "Defining terms and familarizing ourselves with concepts in React",
          "Understanding the general overview and flow of React",
          "What is JSX? How to apply it in React",
          "Creating our first and reuseable components",
          "Functional based components in React and how it works",
          "Class based components in React and how to use it.",
          "Recap on Components in React and structuring your files"
        ],
        "Brief insight on Bootstrap and application": [
          "What is bootstrap and why we use it",
          "Understanding bootstrap margin, padding and lists system in React"
        ],
        "Creating a responsive Navbar in React": [
          "Creating a Navbar from scratch in React:What we will build at the end of lecture",
          "Navbar creation: Linking images and external css file in React",
          "Navbar creation continuation: Working with icons in React",
          "Navbar conclusion: Creating dropdowns in react and what we built"
        ],
        "React Route and Links: Navigating from one page to another": [
          "Understanding React Router for functional based components",
          "Using React Route for class based components",
          "Restructuring your React project to fit your specification eg our ecommerce app",
          "React Links: Creating our footer using react links"
        ],
        "React responsive homepage: Ecommerce homepage from scratch": [
          "What we will be building for our homepage usng React components",
          "Understanding parent / child components and the relationship between them",
          "Creating our homepage first section using bootstrap carosuel",
          "Reuseable sidebar component for our homepage first section",
          "Summary for our homepage first section",
          "Creating our second section for our homepage using picture icons"
        ],
        "Getting Started with Node": [
          "Complete setup, creating folders and installing necessary dependencies for node",
          "Installing axios and cors dependencies for fetching data in React"
        ],
        "Populating our homepage with content from Node our server": [
          "Dealing with state in react",
          "Understanding array mapping in React",
          "Working with React PROPS",
          "Calling data from node server or API using the functional approach",
          "Calling data from node server or API using the class based approach",
          "Understanding the new React AppContext using practical example to explain",
          "Creating and populating our homepage third section with actual products"
        ],
        "Ecommerce Add to Cart: Cont. of building Ecommerce homepage from scratch": [
          "Creating the add to cart function in React",
          "Creating the cart and cartItem components",
          "Creating the remove item from cart and the remove from cart functions"
        ]
      },
      "requirements": [
        "Basics knowledge of HTML, CSS, JavaScript and Bootstrap"
      ],
      "description": "How to build an Ecommerce site from scratch using Reactjs, Nodejs and Bootstrap 4\nThis course is designed to be a complete reference guide to building a fully functional React and Node website using the Ecommerce app as a base practical web app, search no further for a complete learning pack. The course content is very robust and covers several advanced concepts and topics.\n\n\nWhy is This Course Right for Me?\nAbsolutely Yes, the best way to gain good understanding of advanced concepts in Reactjs is by practicing with real life examples that implements these advanced concepts in ways you will probably use them when building your own website from scratch.\nNot convinced yet?\nAt the End of this course, students would have learnt how to create a functional React Application of any kind as well as how to create a functional Node.JS server, also students would have learnt how to connect a React Application to a Node.JS server.\nWhat you’ll learn\nHow to download, install and create a React project\nHow to link dependecies to a React Project\nStudents will also learn the basics of Reactjs\nHow to create a functional  and class based React project from scratch\nHow to use React Route in real life project\nHow to use the React AppContext\nComplete setup, creating folders and installing necessary dependencies for Nodejs\nStudents will also learn the basics of Nodejs\nHow to use Axios to fetch data from API's\nHow to connect a React JS project to a Node JS server\nHow to host images externally\nAre there any course requirements or prerequisites?\nBasics knowledge of HTML, CSS and JavaScript\nBasic knowledge of bootstrap\nWho this course is for:\nDevelopers who want to learn Reactjs\nAnyone who has basic knowledge of HTML, CSS and JavaScript\nAnyone who wants to build real life websites\nBeginners and Intermidiate developers",
      "target_audience": [
        "Beginners and intermidiate"
      ]
    },
    {
      "title": "70-761: Querying Data with Transact-SQL Introductory Course",
      "url": "https://www.udemy.com/course/sql-server-basics-c/",
      "bio": "Ideal for beginners who want to earn Microsoft certification for SQL Server.",
      "objectives": [
        "Understand database design",
        "Understand first, second and third normal form schemas",
        "Normalize Databases",
        "Create new tables, alter existing tables in Databases",
        "Create basic SQL Queries",
        "Create Left, Right, Inner and Full Outer joins"
      ],
      "course_content": {
        "Create Database": [
          "Create Database"
        ],
        "Create Alter Drop Table": [
          "Create Alter Drop Table"
        ],
        "Create Database Using T - SQL": [
          "Create Database Using T - SQL"
        ],
        "Datatypes Overview": [
          "Datatypes Overview"
        ],
        "Basic DML": [
          "Basic DML"
        ],
        "Schema and Synonym": [
          "Schema and Synonym"
        ],
        "T-SQL Select Queries Overview": [
          "T-SQL Select Queries Overview"
        ],
        "Understanding Simple Select": [
          "Understanding Simple Select"
        ],
        "Sorting Data": [
          "Sorting Data"
        ],
        "Filter using predicates": [
          "Filter using predicates"
        ]
      },
      "requirements": [
        "SQL Server Express (FREE Edition)",
        "Basics of RDBMS are helpful"
      ],
      "description": "Microsoft SQL Server is one the most popular Relational Database Management System (RDBMS) used in Microsoft universe. Its utility lies in its ability to manage large amount of data for small, medium and large enterprise applications. It can be used for data storage as well as for data retrieval for applications which can be either on desktop or Web/Browser. Its nearest competitor product is Oracle Database. Microsoft has been withholding the right to choose, some other database mostly by bundling other Microsoft technologies and services with MS SQL Server. For example, every installation of SharePoint will use SQL Server as backend database and will not provide any other option.\nThis course is designed in a step function. It starts with most fundamental topics like what is Data and database. It then gradually builds upon this and gets into advanced topics like working with triggers, stored procedures and indexes. This is an ideal start up for those who are willing to find their career in programming web or windows applications using C# or using MSBI tools for data analysis and reports or may be eventually administer database as an SQL-Server DBA.\nSQL Server course has been compiled together by Mrs. Vandana Soni who has immense experience both as a professional as well as a trainer. The content delivery is in the simplest possible language and it includes detailed explanation of every topic along with step by step approach to build a database schema likes tables, views, stored procedures, triggers, index etc…and write queries to fetch data from it. The video lecture follows the scientific learning methodology of Theory, Demonstration followed by Assignment, which cements your learning.",
      "target_audience": [
        "Anybody who wants to learn SQL Server and earn Microsoft Certification.",
        "Anybody who wants to better understand how to query databases and best practices",
        "Anybody who wants to enhance their Data Science career"
      ]
    },
    {
      "title": "Introduction to APIs for Non-Developers",
      "url": "https://www.udemy.com/course/apis-for-non-developers/",
      "bio": "Learn what APIs are, how they work, how to learn about a new-to-you API, even how to try APIs without writing any code.",
      "objectives": [
        "What APIs are and why they exist",
        "How APIs work",
        "How to learn about an API",
        "How to try an API"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Intro to APIs",
          "API Use Cases"
        ],
        "How APIs work": [
          "How APIs work"
        ],
        "Learning about an API": [
          "Learning about an API"
        ],
        "Trying an API": [
          "Trying an API"
        ],
        "Conclusion": [
          "Course Recap",
          "Additional Resources"
        ]
      },
      "requirements": [
        "No programming experience needed -- just a desire to learn about APIs!"
      ],
      "description": "Tired of feeling lost when the subject of APIs arises, and ready to do something about it? Whether your role is sales, services, product management, support, or something else altogether -- if you want to learn about APIs, this is the course for you!\nIf you've tried learning about APIs before, most of the information you've found is likely either too technical to understand, or too high-level to really be helpful. This course solves that problem -- providing just the right level of depth for Non-Developers to effectively learn about APIs.\nThis course is designed specifically for Non-Developers. It uses a relatable, real-world analogy to explain APIs in a simple and effective manner and requires absolutely NO coding or knowledge of programming languages.\nIn not even 2 hours time, you'll learn what APIs are, why they exist, and how they work. You'll acquire practical strategies for learning about a new-to-you API, and even learn how you can try APIs on your own -- without writing a single line of code. You'll explore API use cases, see actual APIs in action, and by the end of the course, be able to understand -- and even participate in -- technical discussions about APIs.\nReady to get started? Let's goooooo!",
      "target_audience": [
        "Non-Developers in roles like sales, services, product management, support, or something else altogether"
      ]
    },
    {
      "title": "Building Great Web Back-ends with Django",
      "url": "https://www.udemy.com/course/building-great-web-back-ends-with-django/",
      "bio": "Back-end development doesn't have to be hard. Learn how to do Back-end fast and right with the Python based Django.",
      "objectives": [
        "By the end of the course you will be able to use Django to develop basic web apps"
      ],
      "course_content": {
        "My First Section": [
          "My First Lecture",
          "Django Basics",
          "Start Building a Django App - Part 1",
          "Start Building a Django App - Part 2",
          "Forms and Templates",
          "Forms and Templates - Part II",
          "Django ORM and Models",
          "Authentication and User Login/Logout in Django",
          "Generating forms and saving data via ModelForms",
          "FormSets and ModelFormSets",
          "FormSets and ModelFormSets - II",
          "Introduction to REST with Django and TastyPie",
          "Security, Caching and other features"
        ]
      },
      "requirements": [
        "Some Python Knowledge",
        "Some familiarity with web development (some concepts will be reviewed)"
      ],
      "description": "What does a killer website, an amazing smartphone app and a futurustic plugin for Google Glass have in common?\nA Back End\nWithout a back-end all you are left with is an empty skeleton of a UI. Among other things, a back-end let's you:\nStore data on a database\nRun CPU intensive tasks (such as face recognition)\nProvide a consistent API to read and write data\nDjango is a Python-based web framework that provides a vast amount of plumbing to build a web-backend so that you don't have to do it. This will allow you to focus on building more and better features into your application without worrying about infrastructure and plumbing.\nWhy this class?\nThis is a project based class and will take a practical approach towards learning Django. By the end of the class you will be comfortable with the following:\nSetting up and Installing Django\nInterfacing with Databases using Django Models\nWriting basic Django templates\nWriting Django Forms\nCombining the above into a django app\nThe final project will be writing a Personal Notes app. This app will expose you to many basic patterns which will be applicable to a wide variety of Django Apps.\nAlthough this is a beginner class I plan to introduce a few advanced Django concepts in theory so as to give you an idea of the power of the Django framework.\nThis will also prepare you for job interviews that may ask you Django related questions.\nWhy Django?\nPython - Need I say more? If you love Python, you will love Django\nCommunity - Django is supported by an excellent and supportive community. There are numerous Meetups as well as a Django Conference held every year\nPhilosophy - Django is build around the design principles of Loose coupling, DRY, Less Code, Quick Development and Explicit is better than implicit. To learn more about this check out Django Design Philosophies\nWho should take this class\nAnyone who wants to get started with web development and Django as well as get a peek into the more advanced features can take this class. Here are a few categories I can think of:\nYou love Python and want to develop web apps while using as much Python as you can\nYou are trying to learn Django on your own but prefer to speed up the learning process\nYou don't know much about web development but would like to start it right with Django\nYou have been practicing web development but would like to learn to use a cool framework like Django to develop more rapidly\nYou want to learn a new skill to market yourself better to compete for a job you would love to have\nWhether you fit into one of the above categories or not, I encourage you to enroll for this class. Don't let a lack of experience with Python or web-frameworks discourage you. The class does not require a lot of experience with Python or web frameworks - a desire to learn will go a much longer way!",
      "target_audience": [
        "Django Beginners",
        "Server side web programming beginners"
      ]
    },
    {
      "title": "Angular and Django: A Practical Guide with Docker",
      "url": "https://www.udemy.com/course/angular-django-admin/",
      "bio": "Django 3.1, Angular 9, Docker, Authentication and Authorisation, Upload Images, Export CSV Files, Typescript, c3.js",
      "objectives": [
        "How to create APIs with Django Rest Framework",
        "Use Docker",
        "Create protected routes",
        "Login with HttpOnly Cookies",
        "Use APIViews, ViewSets, Generic API Views",
        "Authorize users for different routes",
        "Upload Images",
        "Export CSV files",
        "Angular CLI",
        "Create charts with c3js"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Django": [
          "Installation",
          "Docker",
          "Migrations",
          "Rest API",
          "Models",
          "Serializers",
          "Write Only Fields",
          "Hashing Passwords",
          "Login",
          "Generate JWT Token",
          "Getting the Authenticated User",
          "Logout",
          "Foreign Keys",
          "Fixtures",
          "Getting Permissions",
          "ViewSets",
          "Roles",
          "Related Fields",
          "Completing Roles",
          "Generic Views",
          "Pagination",
          "Update Request Data",
          "Profile",
          "User Permissions",
          "Products",
          "Product Routes",
          "Uploading Images",
          "Orders",
          "Serializer Method Fields",
          "Export CSV",
          "Raw SQL Queries",
          "View Permissions",
          "CORS"
        ],
        "Angular": [
          "Installation",
          "Routes",
          "Components",
          "Modules",
          "Router",
          "Child Components",
          "Reactive Forms",
          "Login",
          "Register",
          "Router Link",
          "Redirecting",
          "Authenticated User",
          "Interfaces",
          "Inputs",
          "Logout",
          "Interceptors",
          "Profile",
          "Classes",
          "Update Profile",
          "Event Emitters",
          "Looping",
          "Pagination",
          "Deleting Users",
          "Creating Users",
          "Updating Users",
          "Response",
          "Roles",
          "Abstract Classes",
          "Permissions",
          "Form Arrays",
          "Role Edit",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Updating Products",
          "Uploading Images",
          "Image Component",
          "Orders",
          "Order Items",
          "Export CSV Files",
          "Chart",
          "Route Permissions",
          "HttpOnly Cookies",
          "Thank You"
        ]
      },
      "requirements": [
        "Beginner Python Developers",
        "Beginner Javascript Developers"
      ],
      "description": "Learn how to create an Admin App using Angular and Django Rest Framework.\nIn Django you will learn:\nHow to create APIs with Django Rest Framework\nUse Docker\nCreate protected routes\nLogin with HttpOnly Cookies\nUse APIViews, ViewSets, Generic API Views\nAuthorize users for different routes\nUpload Images\nExport CSV files\nIn Angular you will learn:\nHow to use Angular CLI\nCreate classes, interfaces, abstract classes\nUse interceptors\nCreate public and private routes\nRestrict routes for unauthorized users\nUpload Images\nExport CSV's\nBuild a chart with c3.js\nUse Reactive Forms\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Python Developers",
        "Beginner Javascript Developers"
      ]
    },
    {
      "title": "React Training Course",
      "url": "https://www.udemy.com/course/react-training-course/",
      "bio": "Teaching by Many Small Examples & Tasks",
      "objectives": [
        "Web Development in React"
      ],
      "course_content": {
        "Introduction to this course": [
          "Introduction to this course",
          "Preparations"
        ],
        "Advanced JavaScript": [
          "Structure",
          "Preparations",
          "Const, Let and Var",
          "[TASK] Const, Let and Var",
          "[SOLUTION]: Const, Let and Var",
          "Function Constructors & Classes",
          "[TASK] Function Constructors & Classes",
          "[SOLUTION] Function Constructors & Classes",
          "Function References",
          "[TASK] Function References",
          "[SOLUTION] Function References",
          "Arrow Functions",
          "[TASK] Arrow Functions",
          "[SOLUTION] Arrow Functions",
          "Promises / Async / Await",
          "[TASK] Promises / Async / Await",
          "[SOLUTION] Promises / Async / Await",
          "Destructuring",
          "[TASK] Destructuring",
          "[SOLUTION] Destructuring",
          "Spread Operator",
          "[TASK] Spread Operator",
          "[SOLUTION] Spread Operator",
          "Rest Operator",
          "[TASK] Rest Operator",
          "[SOLUTION] Rest Operator",
          "Key Interpolation",
          "[TASK] Key Interpolation",
          "[SOLUTION] Key Interpolation",
          "Map & Filter",
          "[TASK] Map & Filter",
          "[SOLUTION] Map & Filter",
          "Modules",
          "[TASK] Modules",
          "[SOLUTION] Modules",
          "Ternary Operator",
          "[TASK] Ternary Operator",
          "[SOLUTION] Ternary Operator"
        ],
        "React Classic: Introduction": [
          "Structure",
          "Preparations",
          "Windows Installation",
          "MacOS Installation",
          "Ubuntu Linux Installation",
          "HalloWorld",
          "JSX: Expressions & Conditional Rendering",
          "[TASK] JSX: Expressions & Conditional Rendering",
          "[SOLUTION] JSX: Expressions & Conditional Rendering",
          "JSX: Arrays",
          "[TASK] JSX: Arrays",
          "[SOLUTION] JSX: Arrays",
          "CSS",
          "[TASK] CSS",
          "[SOLUTION] CSS",
          "Sub-Components",
          "[TASK] Sub-Components",
          "[SOLUTION] Sub-Components"
        ],
        "React Classic: State & Events": [
          "Structure",
          "Definition of State",
          "[TASK] Definition of State",
          "[SOLUTION] Definition of State",
          "Definition of Events",
          "[TASK] Definition of Events",
          "[SOLUTION] Definition of Events",
          "Events in JSX-Lists",
          "[TASK] Events in JSX-Lists",
          "[SOLUTION] Events in JSX-Lists"
        ],
        "React Classic: Communication between 2 components": [
          "Structure",
          "Stateful VS. Stateless Components",
          "[TASK] Stateful VS. Stateless Components",
          "[SOLUTION] Stateful VS. Stateless Components",
          "Downward Communication via Passing Function References",
          "[TASK] Downward Communication via Passing Function References",
          "[SOLUTION] Downward Communication via Passing Function References",
          "Upward Communication via Passing Function References",
          "Excourse: Radio Buttons",
          "[TASK] Upward Communication via Passing Function References",
          "[SOLUTION] Upward Communication via Passing Function References",
          "Sub-Components with an Ending-Tag",
          "[TASK] Sub-Components with an Ending-Tag",
          "[SOLUTION] Sub-Components with an Ending-Tag"
        ],
        "React Classic: Lifecycle": [
          "Structure",
          "Overview",
          "Mounting Phase",
          "Updating Phase",
          "Unmounting Phase",
          "[TASK] Lifecycle",
          "[SOLUTION] Lifecycle"
        ],
        "React Classic: Routing": [
          "Structure",
          "Definition of a Route",
          "[TASK] Definition of a Route",
          "[SOLUTION] Definition of a Route"
        ],
        "React Classic: Multi-Layered Communication": [
          "Structure",
          "Props Drilling",
          "[TASK] Props Drilling",
          "[SOLUTION] Props Drilling",
          "Context API",
          "[TASK] Context API",
          "[SOLUTION] Context API",
          "Context API with Reducer",
          "[TASK] Context API with Reducer",
          "[SOLUTION] Context API with Reducer",
          "Redux",
          "[TASK] Redux",
          "[SOLUTION] Redux",
          "Redux With Two Reducers",
          "[TASK] Redux With Two Reducers",
          "[SOLUTION] Redux With Two Reducers"
        ],
        "React Classic: AJAX": [
          "Structure",
          "Fetch",
          "[TASK] Fetch",
          "[SOLUTION] Fetch",
          "Redux Thunk",
          "[TASK] Redux Thunk",
          "[SOLUTION] Redux Thunk",
          "Localhost as Backend",
          "[TASK] Localhost as Backend",
          "[SOLUTION] Localhost as Backend"
        ],
        "React Classic: HOC": [
          "Structure",
          "Definition",
          "HalloWorld",
          "[TASK] Higher Order Components",
          "[SOLUTION] Higher Order Components"
        ]
      },
      "requirements": [
        "Basic HTML/CSS, JavaScript"
      ],
      "description": "I have been working as a coding-teacher for almost 3 years. I figured out that small and easy examples work the best to make students understand. Also, I prepared 30+ small tasks for you. This intensive React course is not just an online-course, it is an intensive React training program and after you have finished it, you will be ready to be productive in React.",
      "target_audience": [
        "Web Development Beginner who want to learn React"
      ]
    },
    {
      "title": "Make Professional Amazon Affiliate Website With WordPress",
      "url": "https://www.udemy.com/course/make-professional-amazon-affiliate-website-with-wordpress/",
      "bio": "Build Professional Amazon Affiliate Marketing WordPress Store Using FREE resources from scratch",
      "objectives": [
        "How to make amazon affiliate website for FREE",
        "Build your own profitable, niche website using WordPress"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use pc and have an internet connection",
        "Eagerness to learn"
      ],
      "description": "In this course how to make a professional Amazon affiliate website using WordPress. We have used all the free resources that will help you to build this professional Amazon affiliate website.\nThis website is 100% all mobile, laptop & desktop friendly. This  Amazon affiliate website will give you high conversion rate because of it's rich website interface.\nHere, I have explained everything like:\nWhat is an Amazon Affiliate Niche Website\nHow to Get a Free Domain\nHow to Select a Profitable Niche for huge conversions\nHow to choose a Brandable Domain name\nHow to Publish content on the niche website to gain better organic rankings\nHow to do On-Page SEO with Yoast Plugin\nBy the end of this course, you will know exactly how to target profitable niche products that convert and how to set up your website for the most success.\nYou can learn the basics of Affiliate Marketing Website Creation and you shouldn't be a programmer or hard coder to make the niche website but anyone who has a computer and an Internet Connection can make an Amazon Affiliate Niche Site within one hour without writing a single line of code.\nSo, Without wasting much time just go ahead, enroll in the course and start earning with the Amazon Affiliate Program. Good Luck!",
      "target_audience": [
        "Anyone interested in earning commissions from Amazon Associates, ClickBank and other similar affiliate programs",
        "Anyone who want to make passive income.",
        "Anyone new to affiliate marketing"
      ]
    },
    {
      "title": "React Query |TanStack Query:Server State Management in React",
      "url": "https://www.udemy.com/course/react-query-tanstack-query-server-state-management-in-react/",
      "bio": "Master React Query: Data fetching, mutation, and Caching",
      "objectives": [
        "Learn efficient data fetching, updating, and synchronization with React Query",
        "Acquire practical knowledge in caching, background fetching, and mutations.",
        "Master asynchronous data handling in React using React Query.",
        "Understand best practices for state synchronization and error handling",
        "Master React Query for optimal server state handling in React apps"
      ],
      "course_content": {
        "GETTING STARTED WITH REACT QUERY": [
          "Problems Without React Query",
          "What is React Query",
          "React Query Features",
          "Introducing The Docs",
          "Create React App Using Vite",
          "Configuring React Query"
        ],
        "JOIN THE COMMUNITY": [
          "Join the Community"
        ],
        "IMPORTANT ANNOUNCEMENT": [
          "UPDATE"
        ],
        "USEQUERY: DATA FETCHING": [
          "What is useQuery",
          "useQuery Syntax",
          "Exploring the APIS to use",
          "Making Request to fetch Users",
          "useQuery Return Objects",
          "Displaying loading, data and error"
        ],
        "QUERY KEYS & QUERY FUNCTIONS | DATA FETCHING": [
          "Understanding Query Keys",
          "Role of Query Keys",
          "Types of Query Keys",
          "Query Keys Arrays Code syntax 1",
          "Query Keys Arrays Code syntax 2",
          "Using Object as Query Keys",
          "Query Keys Rules",
          "Query Functions",
          "Query Function Rules"
        ],
        "ERROR HANDLING IN REACT QUERY": [
          "Handling Errors using Fetch API",
          "Handling Errors Using Fetch code demo",
          "Handling Errors using Axios Overview",
          "Handling Errors using Axios code demo"
        ],
        "REACT QUERY CONFIGURATIONS": [
          "Default Values Explained",
          "Installing React Query Devtool",
          "Exploring React Query Devtool",
          "StaleTime Overview",
          "StateTime code demo",
          "Cache Time Overview",
          "Cache Time Code Demo",
          "RefetchOnMount Overview",
          "Refetch on windows focus",
          "Refetch on reconnect",
          "Retry delay",
          "Refetch Interval"
        ],
        "PAGINATION | DATA FETCHING": [
          "Parallel Queries Overview",
          "Parallel Queries Code Demo",
          "Pagination Project Demo and Overview",
          "Pagination Demo",
          "Prefetching Overview",
          "Prefetching Code Demo"
        ],
        "USEMUTATION: POST-UPDATE-DELETE- REQUEST": [
          "Mutation Overview",
          "mutateAsync Overview",
          "useMutate Code Example",
          "useMutateAsync Code Demo",
          "Query Invalidation Overview",
          "Query Invalidation"
        ]
      },
      "requirements": [
        "Basic understanding of React and its core principles",
        "Experience with React Hooks and modern React development practices",
        "Openness to learning new patterns and practices in React development."
      ],
      "description": "Dive deep into the world of React with our comprehensive course, focused on mastering React Query and TanStack Query for efficient server state management. This course is tailor-made for developers who want to elevate their React applications to new heights. You'll learn the ins and outs of React Query, understanding how to effectively fetch, update, and manage server data. We cover essential concepts like caching strategies, background data fetching, and automated state synchronization, ensuring your React apps are not only performant but also scalable.\n\n\nOur expertly crafted modules guide you through practical examples and real-world scenarios, enabling you to apply your knowledge immediately. Whether you're a junior developer looking to expand your skills or an experienced programmer aiming to optimize your React projects, this course has something for everyone. By the end of this journey, you'll have a robust understanding of state management in React and be well-equipped to build dynamic, efficient, and maintainable web applications.\n\n\nFurthermore, you will explore advanced techniques in error handling, data mutation, and query optimization. Engage in interactive lessons and hands-on projects that solidify your learning and prepare you for real-world challenges. Join us to become a proficient React Query expert, ready to tackle complex state management issues with confidence and creativity.",
      "target_audience": [
        "Ideal for React developers eager to enhance their skills in state management and learn React Query",
        "Front-end developers looking to streamline their React applications with efficient server state handling.",
        "Web developers seeking to transition into advanced React practices, focusing on server state management"
      ]
    },
    {
      "title": "Learning Path: JMeter 3: Scripting and Performance Testing",
      "url": "https://www.udemy.com/course/learning-path-jmeter-3-scripting-and-performance-testing/",
      "bio": "Perform high performance testing on servers and websites using JMeter 3",
      "objectives": [
        "Use JMeter workbench",
        "Create test plans for a performance test",
        "Record and playback JMeter scripts",
        "Learn parameterization and correlation",
        "Use test performance for both static resources such as JavaScript and HTML",
        "Learn dynamic resources such as JSP, Servlets, and AJAX",
        "Perform different types of performance tests such as load, stress, endurance, and capacity with different concurrency",
        "Monitor the hardware performance of servers using counters like CPU, memory, disk I/O, and network I/O",
        "Understand the performance metrics such as response time, transactions per hour, throughput, and error rate by analyzing the test reports provided by the tool"
      ],
      "course_content": {
        "Learning JMeter 3.0": [
          "The Course Overview",
          "Introduction to Performance Testing",
          "Introduction to JMeter",
          "Architecture of JMeter",
          "JMeter Installation and Configuration",
          "JMeter Tool/Workbench Overview",
          "Test Plan Creation",
          "Elements of a Test Plan",
          "Overview of a Sample Application",
          "Recording the Application Under Test with JMeter",
          "Recording and Playback of JMeter Scripts",
          "Parameterization and Correlation",
          "Assertions",
          "Importance of Thread Group in JMeter",
          "New Features in 3.0 Overview of UI",
          "Transaction Controllers",
          "Test Your Knowledge"
        ],
        "JMeter 3.0 Advanced": [
          "The Course Overview",
          "Simple and Loop Controllers",
          "Random and Runtime Controllers",
          "The If Controller",
          "The ForEach Controller",
          "Advanced Controllers",
          "Advanced Post and PreProcessors",
          "Beanshell PostProcessor",
          "Beanshell PreProcessor",
          "Listeners",
          "Aggregate Report",
          "The View Results Tree",
          "Workload Designing",
          "Script Validation",
          "The Baseline Test",
          "Master Slave Configuration",
          "GUI and Non-GUI Mode Testing",
          "Test Execution in the GUI Mode",
          "Monitoring Tests",
          "Test Results Collation",
          "Test Results Analysis",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "You don’t need prior knowledge of testing or programming, but it would be beneficial.",
        "Basic knowledge of JMeter would be added advantage."
      ],
      "description": "Are you are a developer, quality assurance engineer, tester, or test manager who is looking for a firm grip towards scripting and testing concepts using Apache JMeter 3? If yes, this Learning Path is for you.\nJMeter software is a pure Java application designed to load test functional behavior and measure performance. It is used to simulate a heavy load on server to test its strength and to analyze its overall performance under different load types.\nExtensive documentation and support to build test plans. In-depth and robust reporting. Free and flexible.\nWith regard to JMeter, we have the above-mentioned features to our advantage.\nOne Tool Fits All\nThis can be aptly implied to JMeter which serves the purpose of scripting as well as testing.\nThis Learning Path starts with a brief on JMeter and its installation. You will understand and learn how JMeter can be used to check the performance of any web-based application. Then, you will understand the elements of a test plan and will create test plans for performance testing. You will also learn basic scripting features of JMeter such as installation, configuration, script creation, validation, test execution, and monitoring which will help you in using this tool independently for performing testing activities. Further, you will perform different types of performance tests such as load, stress, endurance, and capacity with different concurrency. Next, you will learn monitoring the hardware performance of servers using counters like CPU, Memory, Disk I/O, and Network I/O. Finally, you will understand the performance metrics such as response time, transactions per hour, throughput, and error rate by analyzing the test reports provided by JMeter.\nBy the end of this Learning Path, you will have a strong understanding of JMeter's capabilities, how to run custom load and performance tests, and learn best practices using it.\nAbout the Author:\nFor this course, we have combined the best works of this esteemed author:\nHaneesh Panicker,a performance web expert, has 6 years of working experience in performance engineering focused on applications based on web and client/server using testing tools like HP Load runner, Apache JMeter, Borland Silk Performer, and so on on various domains like corporate & investment banking, finance and core banking. He has 3 years of training experience in Apache JMeter at various corporates such as Quality Kiosk technologies, BNP Paribas, and Ness Technologies.",
      "target_audience": [
        "This Learning Path is for developers, quality assurance engineers, testers, and test managers who are looking for a firm grip towards scripting and testing concepts using Apache JMeter 3."
      ]
    },
    {
      "title": "E Commerce Website Development In PHP With PDO",
      "url": "https://www.udemy.com/course/e-commerce-website-development-in-php-with-pdo/",
      "bio": "A-Z Guidelines With Full Practical To Develop An E commerce Website In PHP With PayPal And Cash On Delivery Method",
      "objectives": [
        "At The End Of This Course You Will Be Able To Develop Any E Commerce Website In PHP",
        "Student Will Learn That How To Integrate Paypal In E Commerce Website In PHP",
        "Student Will Able To Create Any CMS (Content Management System) In PHP",
        "Student Will Learn Some Extra Ordinary Features Of PHP"
      ],
      "course_content": {
        "Introduction & Overview": [
          "Overview Of User Side",
          "Overview Of Admin Side"
        ],
        "User Side Layout Designing": [
          "Creating Important Folders",
          "Creating Header Layout",
          "Homepage Layout Designing"
        ],
        "Admin Side Layout Designing": [
          "Admin Homepage Layout",
          "Including Sections",
          "Creating Categories Forms"
        ],
        "Database Creation And Adding Data From Admin Side": [
          "Add Categories Dynamically",
          "Creating Brand Form And Function Page",
          "Creating Products Insert Form",
          "Insert Products Dynamically In Database",
          "Display All Categories Dynamically From Database",
          "Display All Sub Categories And Products Dynamically",
          "Update Categories Dynamically",
          "Update Sub Categories Dynamically",
          "Creating Product Update Form",
          "Update Product Dynamically",
          "Delete Category Dynamically",
          "Delete Sub Category Dynamically",
          "Delete Product Dynamically"
        ],
        "Display Products Categories Dynamically": [
          "Design Product Boxes Category Wise",
          "Display Products Dynamically From User Side",
          "Small Fixes And Create Product Detail Page",
          "Display All Details About Product On Detail Page",
          "Design Buy Now Buttons And Related Product Box",
          "Display Related Products List",
          "Display All Categories Dynamically From User Side",
          "Display Category Wise Product On Category Page",
          "Design Sub Category Links On Category Page",
          "Display Sub Category Wise Product On Category Page",
          "Display All Products In Birthday Pages",
          "Display All Products In Gift For Him Pages",
          "Creating Search Engine"
        ],
        "Working On Cart": [
          "Creating Cart Table And Add Product In Cart Table",
          "Display Cart Items In Homepage",
          "Creating Cart Page And Display Cart Products",
          "Getting Total Amount Of All Product In Cart Page",
          "Delete Products From Cart",
          "Update Quantity In Cart Product",
          "Add To Cart From Product Detail Page"
        ],
        "Working On User Profile": [
          "Creating Signup Form",
          "Creating User Table",
          "Signup User Through Signup Form",
          "Design Login Form",
          "Login User Through PHP Script",
          "Product Image Update Problem Fix",
          "Small Fixes",
          "Delete Cart Products After User Login",
          "Display Product On User Cart Page",
          "Adding Product After Login Into Cart",
          "Creating User Drop Down Menu",
          "Adding Products In Wishlist",
          "Creating User Profile Page",
          "Updating User Profile",
          "Updating User Picture And User Cart",
          "Adding Product In User Wishlist",
          "Changing User Password"
        ],
        "Working On Product Sharing, Discount And Buy Buttons And Checkout Process": [
          "Adding Product Discount",
          "Display Product Discount On User Side",
          "Product Status Available Or Out Of Stock",
          "Product View Counter",
          "Creating Product Sharing Buttons",
          "Creating Checkout Page",
          "Updating User Address On Checkout Page",
          "Getting Selected Product On Checkout Page",
          "Update Product Quantity On Checkout Page",
          "Fix Design On Checkout Page",
          "Display Cart Product On Checkout Page",
          "Buy Single Product With Cash On Delivery",
          "Buy Multiple Product With Cash On Delivery",
          "Get The User Orders In User Account",
          "Buy Single Product With Paypal",
          "Buy Multiple Product With Paypal",
          "Fix Design On Checkout Page For Multiple Products",
          "Cart Table Design Fixing On User Account Section",
          "Display Discount And Out Of Stock Products"
        ],
        "Order Management": [
          "Order Management In Admin Panel",
          "Bill Generation In Admin Panel",
          "Getting Order Information On Invoice Page"
        ],
        "Customers And Slider Management In Admin Panel": [
          "Getting All Customers In Admin Panel",
          "Creating And Adding Slider Dynamically",
          "Display Slider Dynamically On Homepage"
        ]
      },
      "requirements": [
        "You Need To Know A Basic Knowledge Of HTML, CSS, PHP And Jquery",
        "WAMP (Localhost)",
        "Dreamweaver As An Code Editor",
        "Google Chrome Or Opera As A Browser Output",
        "Basic Knowledge Of MySQL Database"
      ],
      "description": "About Tools And Features :\nThis Course Is About How To Develop E Commerce Website In PHP With PDO\nIn This Course We Use Dreamweaver For Codding And Editing Our Script And Code And Google Chrome As a Web Browser And Also We Use Wampserver As A Offline Server.\nWe Use PDO Because PDO Avoid SQL Injection And Give The Extra Security For Our Website\nIn This Course I Will Show Some Extra Ordinary Features Of PHP\nWhat We Will Do In This Website :\n\nWe Will Create This Website Layout From The Scratch.\nWe Will Create A Dynamic Image Slider For Homepage\nWe Will Create Search Engine\nWe Will Create An Insert,Update, Delete And Display Cart Items For Are Website\nWe Will Create a Paypal Integration And Cash On Delivery System For Buying Products\nCreating User Registration And Login System\nCreating Email Confirmation System.\nCreating Admin Panel For This Website\nCreating Page View Counter\nCreating Discount On Product System\nWe Will Create Quantity Management System\nInsert, Update, Delete And Display Products Dynamically From User Side And Admin Panel\nInsert, Update, Delete And Display Category Dynamically From User Side And Admin Panel\nInsert, Update, Delete And Display Sub Category Dynamically From User Side And Admin Panel\nWe Will Display Product By Category Wise And Sub Category Wise.\nWe Will Create Product Sharing Option On Social Media Like Facebook, Twitter, Whatsapp, Google+ etc.\nContent and Overview :\nThis Is 34 Hours Of Content And Have 100 Lectures. This Is An Perfect Course For Those Student Who Want To learn E Commerce Website In PHP Absolutely From The Scratch Using HTML, CSS, JAVASCRIPT And PHP. If You Are A Beginner Than Don't Worry This Is A Perfect Course For You And Help You A Lot To Improve Your Web Development Skills. This Course Is Also Helpful For You To Create Your Final Year Project In Your University Or College. The Source Code Is Attached in The Last lecture Of This Course.",
      "target_audience": [
        "This Course Is For Those Students Who Really Wanted To Become A Excellent PHP Developer",
        "Course Is For Those Students Who Want To Build Their Skills Into Expert Level In PHP.",
        "This Course Is For Those Students who Want To Build E Commerce Website In PHP With PDO"
      ]
    },
    {
      "title": "Master C++ Programming with 100 Practical Exercises",
      "url": "https://www.udemy.com/course/master-c-programming-with-100-practical-exercises/",
      "bio": "Master C++ Programming: 100 Practical Exercises in 100 Days - Take the Challenge!",
      "objectives": [
        "Master variables, data types, operators, and control flow structures.",
        "Utilize algorithms for efficient data manipulation.",
        "Implement error handling techniques to manage unexpected situations in code.",
        "Apply C++ concepts to solve real-world coding challenges through 100 hands-on exercises."
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "About Me",
          "Why should you learn C++?"
        ],
        "Training Session": [
          "Sample Exercise No. 1",
          "Explanation",
          "Sample Exercise No. 2",
          "Explanation",
          "Sample Exercise No. 3",
          "Explanation",
          "Sample Exercise No. 4",
          "Explanation"
        ],
        "Easy Levels": [
          "Coding Exercise No. 1",
          "Coding Exercise No. 2",
          "Coding Exercise No. 3",
          "Coding Exercise No. 4",
          "Coding Exercise No. 5",
          "Coding Exercise No. 6",
          "Coding Exercise No. 7",
          "Coding Exercise No. 8",
          "Coding Exercise No. 9",
          "Coding Exercise No. 10",
          "Coding Exercise No. 11",
          "Coding Exercise No. 12",
          "Coding Exercise No. 13",
          "Coding Exercise No. 14",
          "Coding Exercise No. 15",
          "Coding Exercise No. 16",
          "Coding Exercise No. 17",
          "Coding Exercise No. 18",
          "Coding Exercise No. 19",
          "Coding Exercise No. 20",
          "Coding Exercise No. 21",
          "Coding Exercise No. 22",
          "Coding Exercise No. 23",
          "Coding Exercise No. 24",
          "Coding Exercise No. 25",
          "Coding Exercise No. 26"
        ],
        "Medium Levels": [
          "Coding Exercise No. 1",
          "Coding Exercise No. 2",
          "Coding Exercise No. 3",
          "Coding Exercise No. 4",
          "Coding Exercise No. 5",
          "Coding Exercise No. 6",
          "Coding Exercise No. 7",
          "Coding Exercise No. 8",
          "Coding Exercise No. 9",
          "Coding Exercise No. 10",
          "Coding Exercise No. 11",
          "Coding Exercise No. 12",
          "Coding Exercise No. 13",
          "Coding Exercise No. 14",
          "Coding Exercise No. 15",
          "Coding Exercise No. 16",
          "Coding Exercise No. 17",
          "Coding Exercise No. 18",
          "Coding Exercise No. 19",
          "Coding Exercise No. 20",
          "Coding Exercise No. 21",
          "Coding Exercise No. 22",
          "Coding Exercise No. 23",
          "Coding Exercise No. 24",
          "Coding Exercise No. 25"
        ],
        "Hard Levels": [
          "Coding Exercise No. 1",
          "Coding Exercise No. 2",
          "Coding Exercise No. 3",
          "Coding Exercise No. 4",
          "Coding Exercise No. 5",
          "Coding Exercise No. 6",
          "Coding Exercise No. 7",
          "Coding Exercise No. 8",
          "Coding Exercise No. 9",
          "Coding Exercise No. 10",
          "Coding Exercise No. 11",
          "Coding Exercise No. 12",
          "Coding Exercise No. 13",
          "Coding Exercise No. 14",
          "Coding Exercise No. 15",
          "Coding Exercise No. 16",
          "Coding Exercise No. 17",
          "Coding Exercise No. 18",
          "Coding Exercise No. 19",
          "Coding Exercise No. 20",
          "Coding Exercise No. 21",
          "Coding Exercise No. 22",
          "Coding Exercise No. 23",
          "Coding Exercise No. 24",
          "Coding Exercise No. 25"
        ],
        "Expert Levels": [
          "Coding Exercise No. 1",
          "Coding Exercise No. 2",
          "Coding Exercise No. 3",
          "Coding Exercise No. 4",
          "Coding Exercise No. 5",
          "Coding Exercise No. 6",
          "Coding Exercise No. 7",
          "Coding Exercise No. 8",
          "Coding Exercise No. 9",
          "Coding Exercise No. 10",
          "Coding Exercise No. 11",
          "Coding Exercise No. 12",
          "Coding Exercise No. 13",
          "Coding Exercise No. 14",
          "Coding Exercise No. 15",
          "Coding Exercise No. 16",
          "Coding Exercise No. 17",
          "Coding Exercise No. 18",
          "Coding Exercise No. 19",
          "Coding Exercise No. 20",
          "Coding Exercise No. 21",
          "Coding Exercise No. 22",
          "Coding Exercise No. 23",
          "Coding Exercise No. 24",
          "Coding Exercise No. 25"
        ]
      },
      "requirements": [
        "Familiarity with programming concepts such as variables, loops, conditionals, and functions will be helpful.",
        "You'll need a computer with internet access to participate in the course and complete exercises.",
        "This course is designed for beginners, so no previous experience with C++ is necessary.",
        "A willingness to engage with challenging exercises and a passion for mastering C++ programming."
      ],
      "description": "Build a Strong Foundation in C++ with 100 Hands-On Coding Exercises\nWelcome to the ultimate C++ programming course! Whether you're a complete beginner or an experienced coder looking to sharpen your skills, this course provides a structured and practical approach to mastering C++ through real-world exercises.\nWhat You’ll Learn\nComprehensive C++ Coverage – Master everything from basic syntax to advanced concepts like pointers, memory management, and object-oriented programming.\nPractical, Hands-On Exercises – Reinforce your learning with 100 coding challenges designed to strengthen your problem-solving skills.\nNo External Tools Required – All exercises can be completed directly in Udemy’s built-in coding environment for a seamless learning experience.\nReal-World Applications – Learn how C++ is used in software development, game programming, and system-level applications.\nCourse Features\nStructured, Step-by-Step Learning – Each section focuses on a key concept, with clear explanations and guided exercises.\nLearn at Your Own Pace – Lifetime access allows you to study whenever it suits you, with no pressure.\nExpert Instruction & Support – Get help from an experienced instructor and engage with a community of fellow learners.\nCertificate of Completion – Showcase your C++ skills with a certificate to enhance your resume or LinkedIn profile.\nWho Should Take This Course?\nAbsolute Beginners – No prior programming experience needed; we start from the basics.\nIntermediate Programmers – Strengthen your understanding of C++ and best practices.\nStudents & Job Seekers – Prepare for coding interviews, exams, or university-level programming courses.\nWhy Learn C++?\nC++ is a powerful, high-performance language used in operating systems, game development, embedded systems, and more. By mastering C++, you open doors to careers in software engineering, game programming, and systems development.\nEnroll today and start your journey to becoming a proficient C++ developer!",
      "target_audience": [
        "Beginners in Programming",
        "Students Learning C++ for Academic Purposes",
        "Professionals Seeking to Refresh or Expand Their C++ Knowledge",
        "Anyone Interested in C++ Programming"
      ]
    },
    {
      "title": "Become a Big Data Hadoop Developer from scratch",
      "url": "https://www.udemy.com/course/become-a-big-data-hadoop-developer-from-scratch/",
      "bio": "Basic Hadoop tutorial",
      "objectives": [
        "learn introduction to hadoop",
        "Hadoop Distributed File System(HDFS)",
        "MapReduce(MR)",
        "Run MapReduce Application using JAVA",
        "Run Word Count example in JAVA",
        "Run Max.Temp. Hadoop MapReduce program in JAVA",
        "HDFS Commands for accessing Hadoop File System",
        "Running Queries in HBase",
        "Different operations in HBase using JAVA API",
        "HBase Architecture",
        "Apache HIVE",
        "Apache PIG"
      ],
      "course_content": {
        "Module1": [
          "1.1 Overview of BigData",
          "1.2 Facts about Big Data",
          "1.3 Big Data Scenarios",
          "1.4 Introduction to Hadoop",
          "1.7 Difference between RDBMS and Hadoop",
          "1.8 Cluster Modes in Hadoop",
          "1.9 Hadoop Ecosystem",
          "1.10 HDFS Daemons and Mapreduce daemons",
          "1.11 HADOOP CLUSTER ARCHITECTURE"
        ],
        "Module 2": [
          "2.1 HDFS",
          "2.2 HDFS FILES AND BLOCKS",
          "2.3 HDFS Components and Architecture",
          "2.4 NameNode Secondary NameNode and DataNode",
          "2.5 HDFS FILE READ AND WRITE OPERATIONS",
          "HDFS Commands"
        ],
        "Module 3": [
          "3.1 Basics of MapReduce",
          "3.2 Map Phase and Reduce Phase",
          "3.3 JOB Submission Flow in MapReduce",
          "3.4 HDFS BLOCK AND INPUTSPLIT",
          "3.5 MAPREDUCE ARCHITECTURE",
          "3.6 COMBINER and REDUCERS",
          "3.7 MapReduce DataFlow",
          "Wordcount Prgram in MapReduce",
          "Maximum Temprature Program part-1",
          "Maximum Temprature Program part-2"
        ],
        "Module 4": [
          "4.1 Map, Reduce and Driver",
          "4.2 Difference between New API and Old API",
          "4.3 GenericOptionsParser, Tool and ToolRunner",
          "4.4 Writables in Hadoop",
          "4.5 Serialization and Deserialization in Hadoop",
          "4.6 Schedulers and Distributed Cache",
          "4.7 Sequence File",
          "4.9 MRUNIT TESTING"
        ],
        "Module 5": [
          "5.1 Apache Pig",
          "5.2 Importance of Apache PIG",
          "5.3 Apache Pig vs MapReduce",
          "5.4 Where Pig is Best Suited",
          "5.5 Where to avoid Pig",
          "5.6 PIG Latin Language",
          "5.7 Running PIG in Different Modes"
        ],
        "Module 6": [
          "6.1 What is HBase",
          "6.2 UseCases of Apache PIG",
          "6.3 What is NoSQL Databases",
          "6.4 Characteristics of NoSQL Databases",
          "6.5 Categories of NoSQL Databases",
          "6.6 Difference between NoSQL and RDBMS",
          "6.7 Characteristics of Apache HBase",
          "6.8 Comparison between HDFS and HBase",
          "6.9 Where to use HBase",
          "6.10 Where to avoid HBase",
          "6.11 Building Blocks of Apache HBase",
          "6.12 Column Family in HBase",
          "6.13 Storage of Column Family",
          "6.14 TimeStamp as Version",
          "6.15 General Commands in HBase",
          "6.16 DDL in HBase",
          "6.17 DDL in HBase-2",
          "6.18 DML in HBase",
          "6.19 Core Components of HBase",
          "6.20 Need of Zookeeper",
          "6.21 How Client interacts with HBase Cluster",
          "6.22 Bloom Filter in HBase",
          "6.23 HFile in HBase",
          "6.24 Write Ahead Log in HBase",
          "6.25 Creating Table in Apache HBase Using JAVA API",
          "6.26 Deleating Table in Apache HBase Using JAVA API",
          "6.27 Disabling Table in Apache HBase Using JAVA API",
          "6.28 Inserting data in Table in Apache HBase Using JAVA API",
          "6.29 How to list and Enable a table in Apache HBase Using JAVA API",
          "6.30 Integrating Apache HBase with Pig Tool part-I",
          "6.31 Integrating HBase with Apache Pig -II",
          "6.32 Integrating HBase with Apache PIG-III",
          "6.33 Integrating HBase with Apache HIve",
          "6.34 Integration of Hive Tool with Apache HBase",
          "6.35 Integrating HBase with Apache Sqoop",
          "6.36 Integration of Apache HBase with Sqoop Tool part-2",
          "6.37 Filtering Operations in HBase",
          "6.38 KeyOnlyFilter in HBase",
          "6.39 FirstKeyOnlyFilter and PrefixFilter in HBase",
          "6.40 ColumnCountGetFilter and PageFilter",
          "6.42 ColumnPrefixFilter and MultipleColumnPrefixFilters",
          "6.43 ValueFilter"
        ]
      },
      "requirements": [
        "Basics of Object Oriented Programming",
        "Basics of JAVA",
        "Knowledge of programming would be beneficial but not mandatory"
      ],
      "description": "Apache Hadoop is an open-source software framework for distributed storage and distributed processing of large data on computer clusters built from commodity hardware.\nIn this course we'll discuss about several important aspects of Hadoop like HDFS(Hadoop Distributed File System), MapReduce, Hive, HBase and Pig.\nFirst we'll talk about Overview of Big data means what is Big Data, Facts of Big Data, Scenarios, Hadoop cluster architecture. Then we'll move towards HDFS, Components of HDFS and its architecture, NameNode, Secondary NameNode and DataNode.\nNext module is about MapReduce. In this we'll talk about Map Phase and Reduce Phase, Architecture of MapReduce, Combiners and Reducers.\nNext module is about PIG. In this we'll see what is Apache Pig, its importance, Pig Latin language, and where to avoid Pig.\nThem we'll talk about HBase, we'll talk about its use cases, general commands in HBase, DDL in HBase, DML in HBase, How to create, delete and integrate table in HBase and lot more.\nSo start learning Hadoop today.",
      "target_audience": [
        "Professionals who want to learn Hadoop",
        "Data Analyst",
        "Hadoop Beginners",
        "Professionals who want to make MapReduce Application"
      ]
    },
    {
      "title": "three JS Fundamentals Course - Learn Three.js from scratch",
      "url": "https://www.udemy.com/course/three-js-fundamentals-course/",
      "bio": "Learn three js to create awesome 3D website",
      "objectives": [
        "Learn the Basics of Threejs with many demonstrations and example code",
        "Fundamental concepts in Three JS",
        "Creating our very first scene in three JS",
        "Adding fogs to the Scene",
        "Materials in Three JS",
        "Lightings in Three JS",
        "Textures in Three JS",
        "Orbit Controls, Shadows Primitive Objects in three JS",
        "Animation in Three JS",
        "Different types of Camera's in Three JS",
        "Particle Systems in Three JS",
        "Working with External Geometries"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "Building our very first scene in Three JS": [
          "Introduction to three.js",
          "Fundamental Concepts of Three JS",
          "Three JS scene essentials",
          "Creating our very first scene in Three js"
        ],
        "Three.js Scene Object": [
          "Populating the Scene in three js",
          "Creating more geometry objects in three js",
          "Problem that we have",
          "request Animation frame",
          "Giving names to objects and rotating those objects",
          "fog objects in three js"
        ],
        "Lights in Three js": [
          "Lightings in three js",
          "Point light",
          "Dat GUI (Important topic)",
          "Controlling our website using Orbit Controls",
          "Shadows in Three js",
          "Adding more objects to the scene",
          "Spot Light",
          "Directional Light",
          "Ambient Light and Rectarea Light"
        ],
        "Animation": [
          "Animating using Random() function",
          "Animating using Math.sin() and Math.cos()",
          "Adding noise to the website",
          "Orthographic Camera",
          "Animation rig part - 1",
          "Animation rig part -2"
        ],
        "Materials and Textures": [
          "MeshBasic Material",
          "MeshLambert Material and MeshPhong Material",
          "Mesh Standard Material",
          "Texture maps in three js",
          "Roughness map",
          "Environment maps"
        ],
        "Geometries": [
          "Three JS primitive objects",
          "Manipulating the vertices",
          "Working with External geometries"
        ],
        "Particle System": [
          "Creating a particle system in three js",
          "Animating particle system in three js",
          "Three JS post processing",
          "All resources for this course"
        ]
      },
      "requirements": [
        "Very little knowledge of Javascript is required"
      ],
      "description": "Hello and welcome to my course of Three JS fundamentals course\n\n\nMy name is Mohammed khan, a full stack developer and I'll be the instructor for this course, in this course you will learn about Three JS,\nright from the basics, you do not need to have any previous knowledge about Three JS. I'll be teaching you everything from scratch and in a very easy way.\nCourse contents:\nIntroduction to three JS\nFundamental Concepts of Three JS\nThree JS scene essentials\nCreating our very first scene using three js\nPopulating the scene\ncreating geometries using Three js\nLearning about animations\nTypes of Lights in Three JS\nControlling the website using Orbit controls.\nShadows in three JS\nTypes of Materials\nTextures in Three JS\nAnimating Scenes using Three JS\nPrimitive Geometries in Three JS\nParticle System in Three JS\nWorking with external Geometries in Three JS\nmany more things.\nwe will be providing all the code along with all the resources which I will be showing you guys in the course videos, along with that you will also be\ngetting Q&A support and an exclusive students discord channel where the students can chat with other developers and ask me any questions that they want.\n\nSo what are you waiting for guys join now and start learning this awesome framework i.e. THREE JS",
      "target_audience": [
        "Web developers who wants to learn about Three JS",
        "Beginner Web developers",
        "Front end developers wanting to learn about Three JS concepts",
        "Web developers who wants to develope 3D websites"
      ]
    },
    {
      "title": "Practical MongoDB with PHP Project - Learn By Doing",
      "url": "https://www.udemy.com/course/mongodb-with-php-build-oop-website-prepare-for-the-future/",
      "bio": "Develop MongoDB and PHP skills by building Object Oriented E-commerce Website from Scratch (read description of content)",
      "objectives": [
        "Use the PHP - Mongo DB library and build websites",
        "Apply Ajax calls",
        "Use Compass GUI for MongoDB Server",
        "Create complete cart system with PHP and AJAX calls",
        "Create login system, insert pictures in binary in MongoDB, etc"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Install MongoDB & Compass": [
          "MongoDB installation - part 1",
          "MongoDB installation - part 2",
          "Install Compass",
          "Install Compass - part 2",
          "Install Composer",
          "Download Mongo-PHP library with Composer",
          "Set up driver"
        ],
        "Set up folders": [
          "Part 1",
          "Part 2",
          "Part 3"
        ],
        "Some Mongo Basics in CLI and Compass": [
          "Part 1",
          "Part 2",
          "Part 3",
          "Part 4",
          "Part 5",
          "Part 6",
          "Part 7",
          "Part 8",
          "Part 9",
          "Part 10"
        ],
        "Users functionality": [
          "What we need to build",
          "Create Database & Collection",
          "Set up Users Class",
          "Connect to Mongo Database with PHP",
          "Switch to Mongo Collection with Users Class object",
          "Public & Protected",
          "Method for filtering input",
          "Insert One record in Mongo for Register purposes",
          "Get Last inserted ID in Mongo & start session",
          "Short recap",
          "Continue with our Register Logic part 1",
          "Continue with our Register Logic part 2",
          "Display a modal with Javascript",
          "Finishing Register part",
          "Recap and check inserted data with Compass"
        ],
        "Get Users Data from Mongo Database": [
          "Find One method to get searched data from DB",
          "Object ID concept in Mongo DB",
          "Search document by _id with Object ID class",
          "Make use of User's Data",
          "Logout Page"
        ],
        "Login Functionality": [
          "Create login method",
          "Form for Login Modal",
          "PHP code for Login",
          "Continue the login logic",
          "Learn Projection in Mongo DB",
          "Find and Cursors in MongoDB",
          "Limit and Projection in Mongo DB inside same query",
          "Update our login method",
          "Set up for Admin Modal",
          "Add admin functionality to our login method",
          "Adding a switch to our logic",
          "Fix the modal appearance",
          "Time functions in Mongo DB",
          "More about Time functions in MongoDB"
        ],
        "CMS - Add books to our website from Admin Panel": [
          "Some words about Admin Panel",
          "Make some cleaning in our code",
          "Understand the files in our project",
          "Start drawing Books class",
          "Method for inserting new book in Mongo - part 1",
          "Method for inserting new book in Mongo - part 2 - findOne and projection",
          "More about find One return type",
          "Continue the logic for adding new books",
          "Learn how to insert pictures in Mongo with Binary class",
          "Learn FindOneAndUpdate in Mongo DB - finding and updating at the same time",
          "Advancing with our insertion logic",
          "Instantiate the object for newly created class and adding parameteres",
          "Make use of our newly created object",
          "Short recap"
        ],
        "Display images from Mongo and left side navigation bar": [
          "Redirect after insertion",
          "Check insertions with Compass",
          "Display left side bar categories",
          "Learn how to use DISTINCT in MongoDB",
          "Create links for each category",
          "Display books by category",
          "Build our display method - part 1",
          "Build our display method - part 2",
          "Build our display method - part 3",
          "Build our display method - part 4",
          "Learn how to display pictures with Mongo DB",
          "More about base64",
          "Final settings for display method",
          "Last set ups"
        ],
        "Autocomplete search": [
          "Explaining autosearch",
          "Learn datalist in html",
          "Keyup with JQuery",
          "Check in the Console our code",
          "Our first AJAX call",
          "More about the Ajax call",
          "Learn how to work with Regex in Mongo DB",
          "Start building search method with Regex options",
          "Use console.log to check out the results",
          "Make arrays in javascript",
          "Array.pop() in javascript",
          "Foreach but in javascript",
          "Append suggestions with datalist options",
          "Append elements",
          "Finalize the Ajax call"
        ]
      },
      "requirements": [
        "Basic PHP/SQL programming"
      ],
      "description": "Develop new skills in a practical manner, by doing a project together with me, using a in-demand database like Mongo. Actually, knowing both SQL (Relational Databases - MySQL, Sql Server, etc ) and No-SQL(Mongo, Redis, etc) is essential for every developer.\nLearn working with Mongo Database, Compass visualizer of Mongo Database and PHP by building an OOP website starting from scratch and continuing up to a finished e-commerce website.\nWe will add functionalities like : Shopping Cart, CMS (Content Management System), Ajax Calls, Insert JPEG's into Database, Login Logic Database Calls, Database Connections,  etc.\nThis course is mainly oriented on back-end side of things and less focused on looks and design that you can configure your own way.\nI choose always the less complicated way of dealing with code when solving some issues because firstly this is a learning course and secondly, if you understand the basics of solving in one way, you'll be able to find better solutions as well. But always, basics first!\nEven if is all about PHP OOP and Mongo DB, I am explaining every line of Javascript code as well. I don't like leaving things unexplained.\nAlso learn more about Ajax calls, Pagination, Creating a Cart System from scratch, OOP, Login and Register System.\nAdd an interesting website to your portfolio and learn how to insert and retrieve pictures directly in MongoDB, Find, Cursor, Projection, Push...and much more.",
      "target_audience": [
        "PHP learners"
      ]
    },
    {
      "title": "SASS Complete Course : From Beginner to Advanced",
      "url": "https://www.udemy.com/course/the-complete-sass-course-from-beginner-to-advanced-2022-c/",
      "bio": "This is the complete sass tutorial course",
      "objectives": [
        "This is the complete sass tutorial course",
        "Write professional Sass code and generate CSS code from it.",
        "Use functions and operators to calculate flexible dimensions, colors and more.",
        "Use mixins to reuse existing solutions and built upon them without re-inventing the wheel"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Sass Introduction Tutorial",
          "Download and Install sass compiler"
        ],
        "Sass Variables Tutorial": [
          "Sass Variables Tutorial"
        ],
        "Sass Nesting Tutorial": [
          "Sass Nesting Tutorial"
        ],
        "Sass Partials & Imports Tutorial": [
          "Sass Partials & Imports Tutorial"
        ],
        "Sass Mixins Tutorial": [
          "Sass Mixins Tutorial"
        ],
        "Sass Extend Tutorial": [
          "Sass Extend Tutorial"
        ],
        "Sass Operators Tutorial": [
          "Sass Operators Tutorial",
          "Sass Operators Tutorial - II"
        ],
        "Sass Interpolation Tutorial": [
          "Sass Interpolation Tutorial"
        ],
        "Sass Functions Tutorial": [
          "Sass Functions Tutorial"
        ],
        "Sass Number Functions Tutorial": [
          "Sass Number Functions Tutorial"
        ]
      },
      "requirements": [
        "We will cover all setup required.",
        "You need NO previous knowledge with Sass or Bootstrap.",
        "You need basic computer skills to install and run applications.",
        "You should know basic HTML & CSS."
      ],
      "description": "Have you been coding CSS for some time, but want to take your game to the next level?\nAnd do you want to take your skills to a higher level?\nWelcome to \"The Complete SASS Course: From Beginner to Advanced\", the most advanced, the most modern, and the most complete CSS course on the internet. It's everything you want in an advanced CSS course, and more.\nYou may have done a web design course but you have not yet fully understood CSS.\nin your case, this is the solution for you\nhello my name is Jayanta Sarkar and once again I am back with a New exciting course\nand in this course, we are going to learn SASS from the very beginning to advance.\nSASS stands for Syntactically Awesome Style Sheets,\nit is a CSS preprocessor, In the current time\nif you want to be a front end web developer and designer now you should have knowledge of any CSS preprocessor,\nand there is no doubt\nSass is the most mature, stable, and powerful professional-grade CSS extension language in the world.\nas I told you I'm going to cover everything related to SASS in this tutorial series,\nthis course will give you the knowledge That are you looking for.\nso we are ready to go let's get started.",
      "target_audience": [
        "You want to keep up with current web design trends.",
        "You want to write scalable CSS code.",
        "You want to make your designs much more flexible and easily create different variants of your beautiful designs."
      ]
    },
    {
      "title": "Build a DALL-E Image Generator - React - Javascript - OpenAI",
      "url": "https://www.udemy.com/course/build-a-dall-e-image-generator-react-javascript-openai/",
      "bio": "A Step-by-Step Code Along and Guide to Deploying an Application from DALL-E to Production with GitHub from Scratch",
      "objectives": [
        "Code along and develop a DALL-E project from scratch for your portfolio",
        "Learn how to develop professional Web Applications with and modern Tools & Libraries Including React and JavaScript",
        "Get interview-ready and gain job confidence by understanding how to leverage DALL-E to improve your productivity as a developer",
        "Object-oriented programming and functional components in React and React Hooks",
        "Professional coding techniques building a sleek and functional UI",
        "How to write code with templated models and libraries and clearly document your thought process",
        "Interact with an online community of thousands of developers and practice team and communication oriented professional soft skills"
      ],
      "course_content": {
        "DALL-E OpenAI Project Set Up": [
          "What we are building with DALL-E and OpenAI in this Course",
          "Download Node.js and Visual Studio Code for Dall-E Project Set Up",
          "Join Our Online Live Community",
          "What is Next.js how to make a new project with npx",
          "A Brief overview of the Next.js File Boilerplate for our Dall-E Initial Project",
          "Running a Development Server of Next.js for DALL-E Project",
          "Exercise - Meet the Online Community"
        ],
        "DALL-E Image Application Page Build": [
          "Next Js Basics for Absolute Beginners",
          "Coding out the Application Skeleton in TSX for DALL-E Image Generator with Text",
          "CSS Styling and Integration for our DALL-E OpenAI App",
          "UX and UI Integrations into DALL-E App with CSS"
        ],
        "How to get a DALL-E API OpenAI Key and Configuration": [
          "Final Code Solution",
          "Generating an API Key from OpenAI and Securely Storing Env Variables",
          "DALL-E Create Image Implementation into our OpenAI Application",
          "OpenAI Key Configuration setUp with Next JS",
          "OpenAi Configurations and Updating DALL-E API Code",
          "Async Await Calls to DALL-E OpenAI API in Next JS"
        ],
        "Rendering and Creating Images with DALL-E in our App": [
          "Adding Image State for Beginners with Hooks in React for DALL-E App",
          "Setting API DALL-E Image Data in the Application",
          "Dynamically Updating Image Creation with DALL-E and OpenAI",
          "Optimizing a React App with loading for API Fetches to OpenAI DALL-E"
        ],
        "Styling the Dall-E Based Application and User Experience Enhancements": [
          "Optimizing Leading Images with DALL-E in React with Javascript Fundamental Al",
          "Creating Ripple Animations with Css for DALL-E Loading Images in React",
          "Mailling Feature to send DALL-E generated Pictures"
        ],
        "Deploying the DALL-E OpenAI Application with Vercel and Github": [
          "What is GitHub and Why Does it Matter",
          "Setting up Github Git Version and PAT Access with Pushes",
          "Pushing Code to Github Repo Dall-E OpenAI",
          "Deploying the DALL-E Project into Production with Vercel"
        ],
        "Adding Animations with Sassy CSS to our DALL-E Application from OpenAI": [
          "Introduction to SCSS and Setting up Animation Code",
          "Working with keyframes for animations",
          "Finalizing Animations with SCSS For DALL-E OpenAI"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know inside. *Basic JavaScript & Web Development is a plus!"
      ],
      "description": "Are you looking to expand your skills in the exciting world of AI and React development? Look no further! In this comprehensive course, you will learn how to build a cutting-edge image generator inspired by OpenAI's revolutionary DALL-E technology step by step and have an impressive project live in production to show fellow peers and prospective job opportunities.\nThroughout the course, we will dive into the fascinating world of OpenAI and its groundbreaking DALL-E technology. You will learn how DALLL-E generates stunning images from textual descriptions and how to harness its power to build your own image generator.\nReact is one of the most popular and widely-used JavaScript libraries for building user interfaces. In this course, you will learn how to leverage the power of React to build a sleek and responsive image generator. You will gain hands-on experience working with React components, hooks, and the React DOM.\nThis course is designed with the latest mobile technology in demand job tools including React , JavaScript, Github and best conventions in 2023 as well as teaches the very latest Mobile Development techniques and version of React with hooks.\n-----------------\nJoin a live online school and community of mentors and developers for supportive DALL-E discussions, debugging, hackathons and more! Level up with a curriculum by an instructor who has worked and consulted in the tech and entertainment industry for top brands and SF valley from Solana to NEAR as well as independent projects which have gone viral all over the world. His modules are taught and supported by some of the biggest companies in the world with over 100,000 enrollments worldwide.\nThis course is also flexible and you can move through sections at different paces depending on your entry skill level: The “beginner” path (full course for total coding beginners into programming and development) and the “experienced path” (condensed version for those enrolled with prior development and programming experience) - you are free to choose the path which serves your goals and time requirements the most! :-)\n--------------------\nTo round off the learning experience, we will show you how to deploy your image generator to production with GitHub. You will learn how to use GitHub Pages to host your application, and how to version control your code with Git.\nBy the end of this DALL-E course, you will have built a fully functional image generator and learned the benefits of OpenAI, React, and GitHub. This project will be a valuable addition to your portfolio, and you will have the skills to continue building exciting applications with React and AI.\nWhat You Learn in this course:\n\n\nIntroduction to DALL-E and OpenAI technology\nUnderstanding how DALL-E generates images from textual descriptions\nOverview of OpenAI's state-of-the-art AI technology\nReact Fundamentals\nSetting up a React development environment\nWorking with React components and hooks\nUnderstanding the React DOM and how to manipulate it\nBuilding a dynamic and responsive user interface with React\nIntegrating the DALL-E API\nUnderstanding API calls and how to fetch data from the DALL-E API\nProcessing API data and rendering it in React\nDisplaying images generated by the DALL-E API\nDeploying to Production with GitHub\nIntroduction to GitHub and Git version control\nSetting up a GitHub repository for your project\nDeploying your React application to GitHub Pages\nManaging your code with Git and GitHub\nAdvanced React Techniques\nBuilding forms and user input handling\nImplementing custom hooks and state management\nUsing React libraries and third-party packages\nConclusion and Next Steps\nReview of the skills and knowledge you have acquired\nTips for further learning and development\nOpportunities for building new and exciting projects with React, OpenAI and GitHub.\nSo don't wait any longer! Join us in this exciting journey and become a master in building cutting-edge image generators with React, OpenAI and GitHub. Enroll now and let's get started!",
      "target_audience": [
        "Take this course if want to gain confidence as a developer for jobs with DALL-E and modern Development Technology",
        "Take this course if you already know JavaScript and are just curious about the technologies. This course includes expert topics!",
        "Take this course if you're interested in seeing what the hype is all about DALL-E and decide its use case for yourself",
        "Take this course if you want to get started with programming: DALL-E & Javascript is an awesome way to get your feet wet",
        "Take this course if are interested in working on a project in the future and entering the industry",
        "Take this course if you want to develop a portfolio project that you can breakdown for employable prospects with a clear and concrete understanding"
      ]
    },
    {
      "title": "LEARNING PATH: Modern Web Development with ASP.NET Core",
      "url": "https://www.udemy.com/course/learning-path-modern-web-development-with-aspnet-core/",
      "bio": "Unleash the power of .NET Core to build high performance web applications",
      "objectives": [
        "Delve into ASP .NET Core framework and HTTP API RESTful implementation",
        "Learn to use controllers and endpoints to define routes",
        "Explore good patterns and practices such as Domain Driven Design (DDD), Dependency Injection (DI) or Data Transfer Objects (DTOs)",
        "Store data in SQL server using Entity framework ORM",
        "Understand how to use .NET Core platform to build microservices architecture",
        "Learn how to send messages through distributed system with the RabbitMQ service bus",
        "Deploy applications on the cloud with Docker and Docker Compose",
        "Explore commands, events, handlers and other design patterns",
        "Perform unit and integration testing"
      ],
      "course_content": {
        "Full Stack .NET Web Development": [
          "The Course Overview",
          "Setting up the Environment",
          "ASP.NET Core Application Structure",
          "Working with Controllers",
          "Dealing with Status Codes",
          "Dependency Injection",
          "Application Settings",
          "Logging",
          "Filters",
          "Middleware",
          "Caching",
          "Distributed Caching with Redis",
          "Solution Architecture Overview",
          "Creating Web API Project",
          "Creating Core Project",
          "Creating Domain Models",
          "Implementing Repositories",
          "Defining Application Services",
          "Dealing with Data Transfer Objects",
          "Handling DTO with AutoMapper",
          "Defining API Controllers",
          "Handling Business Logic",
          "Handling Exceptions with Middleware",
          "Executing HTTP Requests",
          "Writing Unit Tests",
          "Extending Unit Tests",
          "Writing Integration Tests",
          "Extending Integration Tests",
          "Creating the UI Layout",
          "Writing Scripts to Perform the HTTP Requests",
          "Styling the Views",
          "Creating Database and Configuring the Entity Framework",
          "Implementing the SQL Repositories",
          "Testing the Application and Making Final Adjustments",
          "Test your knowledge"
        ],
        ".NET Core Microservices": [
          "The Course Overview",
          "What Are We Going to Build?",
          "Setting up the Environment",
          "Discussing System Architecture",
          "Creating Solution",
          "Configuring RabbitMQ Service Bus",
          "Creating Commands",
          "Creating Events",
          "Implementing Helper Classes and Methods",
          "Implementing API Endpoints",
          "Subscribing to the Messages",
          "Creating Domain Models",
          "Setting up MongoDB",
          "Implementing Repositories",
          "Creating Application Services",
          "Implementing Handlers",
          "Defining User Entity",
          "Hashing Passwords",
          "Storing User Data",
          "Registering and Logging In",
          "JSON Web Tokens",
          "Implementing JWT with HMAC",
          "Authenticating the User",
          "Implementing Event Handlers",
          "Storing the Data",
          "Refactoring Endpoints",
          "Executing HTTP Requests",
          "API Testing",
          "Activities Service Testing",
          "Identity Service Testing",
          "Running Services Using Docker",
          "Using Docker Compose",
          "Storing Docker Images in a Hub",
          "Deploying Application to the Cloud",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Basic knowledge of Visual Studio is required",
        "Basic knowledge of ASP .NET is assumed."
      ],
      "description": "The ability to develop web applications that are highly efficient and at the same time easy to maintain has become imperative to many businesses. ASP.NET Core is an open source framework from Microsoft, which makes it easy to build cross-platform web applications that are both modern and dynamic. So, if you're a ASP.NET developer who wants to learn ASP.NET Core or a programmer who wants to become a full-stack .NET Core developer, then go for this Learning Path.\nPackt’s Video Learning Path is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are:\nWith real-world use cases, learn to build robust web apps by understanding client and server side development using .NET Core\nUnderstand how to test, deploy, and maintain your applications with .NET Core\nLearn how to work with the microservice architecture using the .NET Core platform to build a distributed system\nThis Learning Path begins with setting up the ASP.NET Core environment and building the application structure. You will then explore the built-in features of the framework such as dependency injection, logging, and filters. You will also learn how to build and implement RESTful APIs into your application by creating HTTP requests using CURL and Postman.\nNext, you will perform unit and integration testing to ensure that your application works properly and that the new changes in the application does not break the existing functionalities. You will then learn to create views that will interact with the API. You will also understand how to store data in the SQL server.\nMoving ahead, this Learning Path teaches you everything you need to know to start developing distributed system using the microservice architecture. Next, you will gain in-depth knowledge of the services provided by the framework for building distributed applications. Finally, you will learn to use Docker and Docker Compose to pack your application into the container and deploy it to the virtual machine running on the cloud.\nBy the end of this Learning Path, you will have a strong understanding of the latest features of ASP.NET Core and will be able to develop, test, and deploy web applications using them.\nMeet Your Expert(s):\nWe have the best works of the following esteemed author to ensure that your learning journey is smooth:\nBorn and raised in Kraków, Piotr Gankiewicz holds aM.Sc.Eng. degree in Applied Informatics. He has over 7 years of experience as a software engineer and architect, but is also interested in topics such as DevOps. He is a co-founder of the Noordwind teal organization and is a full stack developer working mainly with C#, .NET, .NET Core, and JavaScript technologies. He is also a big fan of DDD, CQRS, RESTful APIs, and distributed systems using the microservice pattern. He is a well-known member of the Polish .NET community and his mission is to deliver the best content possible in terms of free and open software and programming courses. On top of that, he is an active open-source contributor, consultant, blogger, public speaker, mentor, lecturer, and co-organizer of the.NET Core tour.",
      "target_audience": [
        "This Learning Path is for ASP .NET developers and programmers who wish to learn the .NET Core framework to become a full-stack ASP .NET developer."
      ]
    },
    {
      "title": "Create PHP/AJAX Newsletter Subscription Form in 40 Minutes",
      "url": "https://www.udemy.com/course/php-ajax-form-with-validation-email-ip-tracking-in-40-minutes/",
      "bio": "Build a Fully-Functional Newsletter or Signup Form Using PHP, AJAX & MySQL — with Validation and Email Notificcation",
      "objectives": [
        "Download Bootstrap 3 and Quickly Setup its HTML Page",
        "Create PHP Form and Store Data in MySQL Database",
        "Easily Apply Validation on Form Fields",
        "Use Form Validation Script by Combining JQuery Ajax",
        "Transform PHP Form into JQuery-based Ajax Form",
        "Submit Form Data with JQuery to PHP Script",
        "Get Response from PHP using JQuery Ajax",
        "Prevent Duplicate Email Subscription with PHP",
        "Migrate Simple Form into Bootstrap Pre-made Form",
        "Send Email in PHP and Track IP with Date",
        "How to Submit a Form via jQuery Ajax with Lots of Fields"
      ],
      "course_content": {
        "Basic Setup and Preparation": [
          "Setup Bootstrap with Basic HTML Template",
          "Setup HTML Form and PHP Script"
        ],
        "Database and Form Processing": [
          "Create Database Table and Process PHP Form",
          "Short Explanation"
        ],
        "Validation, JQuery Ajax and Result": [
          "Integrate Form Validator with Validation on Form Fields",
          "OnSuccess Event with Customization",
          "JQuery Ajax POST with Validation Script",
          "Custom Result Messages with Hidden DIV"
        ],
        "Final Improvements": [
          "Duplicate Email and Conditional Settings",
          "Form Adjustments and Improvements with Bootstrap",
          "Email Notification with IP Tracking and Date"
        ],
        "More Tips & Exercises": [
          "How to Submit a Form via jQuery Ajax with Lots of Fields",
          "Form Tips",
          "Validation Tips",
          "Data Saving Tips",
          "Final Action"
        ],
        "Congratulation!": [
          "Download Source Files",
          "How to Get Your Certificate (Added: July 23, 2019)",
          "Bonus Lecture: Beginner Full Stack PHP Web Development in 10 Days"
        ]
      },
      "requirements": [
        "A web server to work with PHP and MySQL",
        "A text editor or an IDE like Dreamweaver",
        "You should already be familiar with some basics of HTML, CSS, PHP and MySQL"
      ],
      "description": "Learn to Build a Dynamic PHP/AJAX Form in Just 40 Minutes\nThis compact yet powerful course walks you through building a fully functional subscription or contact form using PHP, MySQL, AJAX, jQuery, and Bootstrap. You’ll learn how to validate input in real time, prevent duplicate records, track IP addresses, and send email alerts—all within a single project.\nWhat You’ll Learn\nDesign a clean, responsive form using Bootstrap\nApply server-side and client-side validation with PHP and jQuery AJAX\nSubmit form data via AJAX without reloading the page\nPrevent duplicate email submissions in the database\nCapture IP address and timestamp for each submission\nSend email notifications on each successful submission\nWhat You’ll Build\nBy the end of this course, you will have a working PHP/AJAX form that:\nValidates input in real time\nStores data securely in MySQL\nAlerts you via email upon every submission\nTracks user IP and submission time\nPerfect for helping you collect leads, manage newsletter signups, or integrate dynamic forms for clients—quickly and securely.\nWho Should Enroll\nThis course is ideal for:\nFront‑end or PHP developers who want to add dynamic forms to their toolbelt\nFreelancers building client projects for lead capture or signup systems\nEntrepreneurs and website owners who need interactive user forms\nAnyone already with basic HTML/CSS/PHP/MySQL looking to learn AJAX implementation fast\nNote: Basic knowledge of HTML, PHP, and MySQL is recommended.\nWhy This Course Works\nFast‑paced 40‑minute project that delivers real-world results\nClean, actionable code that you can reuse in your own projects\nCovers full workflow: front-end design, back-end logic, AJAX, and database\nPractical skills—no unnecessary theory or filler content\nStudent Feedback\n“Course is direct and to the point with a project that can be used in the real world.” — Frederick Musser\n“You are the best PHP instructor on Udemy.” — Kevin Blakely\nUpdated (April 2025)\nOptimized for Bootstrap 3/4 compatibility\nRefined validation logic and form UX\nEmail alert and IP tracking now integrated across all lessons\n30-Day Money‑Back Guarantee\nEnroll risk‑free. Learning real-time AJAX form implementation has never been easier.\nReady to upgrade your projects? Enroll now and start building secure, interactive forms today.",
      "target_audience": [
        "It is especially for newbies who don't know how to make a Newsletter subscription form for visitors on their websites",
        "PHP developers who want to learn how to send form data and get response using JQuery/Ajax using PHP and MySQL",
        "PHP developers who want to learn how to convert existing PHP Forms into PHP/Ajax Forms",
        "This course is NOT for absolute beginners who have no basic knowledge of html, css, php and mysql"
      ]
    },
    {
      "title": "Divi Module development from start to finish",
      "url": "https://www.udemy.com/course/divi-dojo/",
      "bio": "Make a living by developing modules for the worlds most popular premium WordPress theme",
      "objectives": [
        "Build custom modules for the Divi theme",
        "Earn money online from anywhere on the planet (semi-passive income)"
      ],
      "course_content": {
        "Introduction": [
          "About this chapter",
          "Find help when developing for Divi",
          "Get a IDE",
          "Setup a webserver and install WordPress",
          "Setup Divi",
          "Setup node, yarn and gettext",
          "How to deal with white screen / empty wp-config.php",
          "Create your first Divi extension",
          "Prepare your plugin for distribution"
        ],
        "UI Elements": [
          "Tiny MCE Field",
          "Text Field",
          "Number Field",
          "Range Field",
          "Yes No Field",
          "Textarea Field",
          "Color Field",
          "Select Field",
          "Date Picker Field",
          "Upload Field",
          "Upload Gallery Field",
          "Multiple Buttons Field",
          "Multiple Checkboxes Field",
          "Categories Field",
          "Select Icon Field",
          "Options List Field",
          "Text Align Field",
          "Warning Field",
          "Custom Margin Field",
          "Composite Field",
          "Border Radius Field",
          "Select Animation Field",
          "Computed Field"
        ],
        "Advanced Settings": [
          "Introduction to Advanced Fields",
          "Background Field",
          "Font Field",
          "Text Field",
          "Text Shadow Field",
          "Margin and Padding Fields",
          "Max Width Fields",
          "Button Fields",
          "Box Shadow Fields",
          "Border Fields",
          "Filters Fields",
          "Animation Fields",
          "Link Options"
        ],
        "General Divi related Funtions and Techniques": [
          "Conditional Display Logic",
          "Conditional Display Logic in Parent Child Module",
          "Tabs and Toggles",
          "Parent-Child Modules",
          "Parent-Child Modules (Part 2)",
          "Add CSS to your Modules",
          "The %%order_class%% Selector",
          "Generate responsive CSS",
          "Enable Mobile Options on any Field",
          "Custom CSS Fields",
          "Making Ajax Calls from the React component",
          "Create a Ajax Base Component",
          "What is a option_category",
          "Providing Help for your Module",
          "The Accent Color",
          "ePanel Options",
          "Fullwidth Modules",
          "Visual Builder Defaults",
          "Pass Values From PHP To JS And Translate VB Defaults",
          "React Component Lifecycle",
          "Using 3rd Party jQuery Libraries in React",
          "Hover Option"
        ],
        "Case Study: Create a module from start to finish": [
          "Introduction to the case study",
          "Planning the module",
          "Create a new module",
          "Add the settings fields",
          "Render the React module",
          "JavaScript in the React module",
          "Render the PHP module",
          "JavaScript in the PHP module"
        ],
        "Selling": [
          "Where to sell?",
          "Elegant Marketplace Vendor Account",
          "Elegant Marketplace License and Update mechanism",
          "Divi Cake Vendor Account",
          "Plugin Update Checker",
          "WP Update Server",
          "Use the Plugin Update Checker",
          "Freemius",
          "Final Words"
        ]
      },
      "requirements": [
        "You should have a basic understanding of PHP, JavaScript or any other programming language",
        "You should have a basic understanding of HTML or another markup language",
        "You should have a basic understanding of CSS"
      ],
      "description": "In this course you will learn every secret of how to become a successful Divi Module developer. In simple lessons you will explore every detail to become a professional. Starting with the simplest project of all, a hello world module, the course will go over all the possibilities you have to create great Modules for the Divi Builder. I share all my knowledge and all the secrets which I taught myself over the last few month.\n\nBut not only that, you will also learn how to successfully sell the modules you create to earn real money. Whether if you are a student who just wants to make some additional money in your free time, if you want to improve your own Divi installation, if you are a web developer whose clients use Divi and needs customisations or if you want to become a full-time developer, making a living from selling your extension - this course is for everyone who wants to start improving the worlds most popular premium WordPress theme.",
      "target_audience": [
        "Divi enthusiasts",
        "People who want to earning money online",
        "Programmers on the beginner and advanced level who want to start earning money with their skills",
        "Programmers who want to build new income streams"
      ]
    },
    {
      "title": "Aurelia For Beginners: The New Age JS Framework",
      "url": "https://www.udemy.com/course/aurelia-for-beginners-the-new-age-js-framework/",
      "bio": "A complete course to master Aurelia JS from ground up",
      "objectives": [
        "Build web apps with Aurelia JS",
        "Learn core programming concepts for building real world apps",
        "Build a complete project along the instructor"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Aurelia Framework",
          "Pre-requisites",
          "Environmental SetUp",
          "Understanding need of Aurelia"
        ],
        "Getting Started": [
          "Application Structure of Aurelia",
          "Hello World Aurelia Application",
          "Aurelia skeleton Navigation",
          "Data Binding Scenarios in Aurelia",
          "Activity -Create data binding in Aurelia",
          "Reference Elements in Bindings"
        ],
        "Aurelia - Nuts and Bolts": [
          "Binding Scopes with attribute",
          "Various Types of Events",
          "Routing Implementation",
          "Creation of basic forms",
          "Binding Behaviour and its impact",
          "Activity - Create Event Aggregator in Aurelia",
          "Dependency Injections",
          "ES6 and ES7",
          "Bundling and Deployment",
          "Creating Features",
          "Activity- Creating custom elements",
          "Custom Attributes",
          "Custom Binding behaviours",
          "Services"
        ],
        "Aurelia Project": [
          "Best Practices",
          "Project Overview",
          "Coding for Configuration",
          "Creating a contact detail form",
          "Contact Detail form functionality",
          "Creating a contact list form and functionality",
          "Analysing the output",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript and HTML is required for completion of the course"
      ],
      "description": "Developing apps and websites is a time consuming and tedious task that requires hours of coding, rendering and uploading, which is why there are so many different frameworks and libraries that help make the job of coding a little simpler.\nFrameworks and libraries make it easier for developers to create more complex and dynamic websites and mobile apps, making harder tasks easier using a few simple codes. This is exactly what Aurelia aims to do as well.\nAurelia JS is a modern, open source UI framework that helps in web and mobile app development. This framework works on enhancing the capabilities of JavaScript, allowing the developers to get more out of their JavaScript codes.\nAurelia is a non-intrusive framework, which means it doesn’t require you writing any special codes or keywords or even tags to ensure that it runs. All you need to do is code in simple JavaScript and simply run your code using Aurelia, and viola you now have more advance features that you could ever imagine at your fingertips.\nBecause of it’s brilliant capabilities, Aurelia has become a great asset for developers who rely on JavaScript for all their coding needs. And this is why we have designed this course. This course is aimed at anyone who works with JavaScript but hasn’t yet worked with Aurelia.\nThis course will breakdown Aurelia JS framework into simple and easy to understand segments using a hands-on approach. Starting with the theory, this tutorial covers what is Aurelia, the different features of Aurelia, the advantages of using Aurelia, and how Aurelia can help you write clean and modular JavaScript, while focusing on web standards.\nThat’s not all, once you’ve covered the theoretical aspects and have become familiar with Aurelia, then we will progress on the practical applications of the framework. You will actually build a complete JavaScript project with Aurelia, showing you how to exactly integrate and work with JavaScript.\nSo, what are you waiting for? Enroll and enhance your JavaScript to build faster and better apps now.",
      "target_audience": [
        "Anyone who wants to learn Aurelia JS will find this course very useful"
      ]
    },
    {
      "title": "Learning Path: Python: Guide to Become a Python Professional",
      "url": "https://www.udemy.com/course/learning-path-python-guide-to-become-a-python-professional/",
      "bio": "A journey from being a novice to a professional Python developer",
      "objectives": [
        "See the intricate details of the Python syntax and how to use it to your advantage",
        "Learn to manipulate data effectively using built-in data structures",
        "Get acquainted with advanced programming techniques in Python",
        "Equip yourself with functional and statistical programming features",
        "Take advantage of Python's metaprogramming and programmable syntax features",
        "Understand how to handle high I/O loads with asynchronous I/O to get a smoother performance",
        "Get familiar with Python’s metaprogramming and programmable syntax features",
        "Learn the concepts of reactive programming and RxPy"
      ],
      "course_content": {
        "Modern Python Solutions Part 1": [
          "The Course Overview",
          "Creating Meaningful Names and Using Variables",
          "Working with Large and Small Integers",
          "Choosing between Float, Decimal, and Fraction",
          "Choosing between True Division and Floor Division",
          "Rewriting an Immutable String",
          "String Parsing with Regular Expressions",
          "Building Complex Strings with “template”.format()",
          "Building Complex Strings from Lists of Characters",
          "Using the Unicode Characters that aren't on Our Keyboards",
          "Encoding Strings-Creating ASCII and UTF8 Bytes",
          "Decoding Bytes, How to Get Proper Characters from Some Bytes",
          "Using Tuples of Items",
          "Writing Python Script and Module Files",
          "Writing Long Lines of Code",
          "Including Descriptions and Documentation",
          "Writing Better RST Markup in docstring",
          "Designing Complex if…elif Chains",
          "Designing a While Statement that Terminates Properly",
          "Avoiding a Potential Problem with Break Statements",
          "Leveraging the Exception Matching Rules",
          "Avoiding a Potential Problem With an Except:Clause",
          "Chaining Exceptions with the Raise from Statement",
          "Managing a Context Using the With Statement",
          "Designing Functions with Optional Parameters",
          "Using Super Flexible Keyword Parameter",
          "Forcing Keyword-only Argument with the * Separator",
          "Writing Explicit Types on Function Parameters",
          "Picking an Order for Parameters Based on Partial Functions",
          "Writing Clear Documentation Strings",
          "Designing Recursive Functions Around Python’s Stack Limit",
          "Writing Reusable Script with the Script Library Switch",
          "Choosing a Data Structure",
          "Building Lists – Literals, Appending, and Comprehensions",
          "Slicing And Dicing a List",
          "Deleting From a List",
          "Reversing a Copy of a List",
          "Using Set Methods and Operators",
          "Removing Items from a Set",
          "Creating Dictionaries",
          "Removing from Dictionaries",
          "Controlling the Order of the Dict Keys",
          "Handling Dictionaries and Sets in doctest Examples",
          "Understanding Variables, References, and Assignment",
          "Making Shallow and Deep Copies of Objects",
          "Avoiding Mutable Default Values for Function Parameters",
          "Using Features of the print() Functions",
          "Using input() and getpass() for User Input",
          "Debugging with “Format”.Format_Map(Vars())",
          "Using Argparse to Get Command-line Input",
          "Using CMD for Creating Command-line Applications",
          "Using the OS Environment Settings"
        ],
        "Modern Python Solutions - Part 2": [
          "The Course Overview",
          "Using a Class to Encapsulate Data and Processing",
          "Designing Classes with Lotsof Processing",
          "Designing Classes with Little Unique Processing",
          "Optimizing Small Objects with _slots_",
          "Using More Sophisticated Collections",
          "Extending a Collection",
          "Using Properties for Lazy Attributes",
          "Using Settable Properties to Update Eager Attributes",
          "Choosing Between Inheritance and Extension",
          "Separating Concerns via Multiple Inheritance",
          "Leveraging Python's Duck Typing",
          "Managing Global and Singleton Objects",
          "Using more Complex Structures",
          "Creating a Class that Has Orderable Object",
          "Defining an Ordered Collection",
          "Deleting from a List of Mappings",
          "Writing Generator Functions with the Yield Statement",
          "Using Stacked Generator Expression",
          "Applying Transformations to a Collection",
          "Picking a Subset",
          "Summarizing a Collection",
          "Combining Map and Reduce Transformations",
          "Implementing “There Exists” Processing",
          "Creating a Partial Function",
          "Simplifying Complex Algorithms with Immutable Data Structures",
          "Writing Recursive Generator Functions with the Yield from Statement",
          "Using pathlib to Work with Filenames",
          "Reading and Writing Files with Context Managers",
          "Replacing a File While Preserving the Previous Version",
          "Reading Delimited Files with the CSV Module",
          "Reading Complex Formats Using Regular Expressions",
          "Reading JSON Documents",
          "Reading XML Documents",
          "Reading HTML Documents",
          "Upgrading CSV from DictReader to the namedtuple Reader",
          "Upgrading CSV from a DictReader to a Namespace Reader",
          "Using Multiple Contexts for Reading and Writing Files",
          "Using the Built-in Statistic Library",
          "Average of Values in a Counter",
          "Computing the Coefficient of a Correlation",
          "Computing Regression Parameters",
          "Computing an Autocorrelation",
          "Confirming that the Data is Random – the Null Hypothesis",
          "Locating Outliers",
          "Analyzing Many Variables in One Pass"
        ],
        "Modern Python Solutions - Part 3": [
          "The Course Overview",
          "Using docstring for Testing",
          "Testing Functions that Raise Exceptions",
          "Handling Common doctest Issues",
          "Creating Separate Test Modules and Packages",
          "Combining the unittest and doctest Tests",
          "Testing Things that Involve Dates and Time",
          "Testing Things That Involve Randomness",
          "Mocking External Resources",
          "Implementing Web Services with WSGI",
          "Using the Flask Framework for RESTful APIs",
          "Parsing the Query String in a Request",
          "Making REST Requests Using urllib",
          "Parsing the URL Path",
          "Parsing a JSON Request",
          "Implementing Authentications for Web Services",
          "Finding Configuration Files",
          "Using YAML for Configuration Files",
          "Using Python for Configuration Files",
          "Using Logging for Control and Audit Output",
          "Combining Two Applications into One",
          "Combining Many Applications Using the Command Design Pattern",
          "Controlling Complex Sequences of Steps"
        ],
        "Mastering Python - Second Edition": [
          "The Course Overview",
          "Python Basic Syntax and Block Structure",
          "Built-in Data Structures and Comprehensions",
          "First-Class Functions and Classes",
          "Extensive Standard Library",
          "New in Python 3.5",
          "Downloading and Installing Python",
          "Using the Command-Line and the Interactive Shell",
          "Installing Packages with pip",
          "Finding Packages in the Python Package Index",
          "Creating an Empty Package",
          "Adding Modules to the Package",
          "Importing One of the Package's Modules from Another",
          "Adding Static Data Files to the Package",
          "PEP 8 and Writing Readable Code",
          "Using Version Control",
          "Using venv to Create a Stable and Isolated Work Area",
          "Getting the Most Out of docstrings 1: PEP 257 and docutils",
          "Getting the Most Out of docstrings 2: doctest",
          "Making a Package Executable via python -m",
          "Handling Command-Line Arguments with argparse",
          "Interacting with the User",
          "Executing Other Programs with Subprocess",
          "Using Shell Scripts or Batch Files to Run Our Programs",
          "Using concurrent.futures",
          "Using Multiprocessing",
          "Understanding Why This Isn't Like Parallel Processing",
          "Using the asyncio Event Loop and Coroutine Scheduler",
          "Waiting for Data to Become Available",
          "Synchronizing Multiple Tasks",
          "Communicating Across the Network",
          "Using Function Decorators",
          "Function Annotations",
          "Class Decorators",
          "Metaclasses",
          "Context Managers",
          "Descriptors",
          "Understanding the Principles of Unit Testing",
          "Using the unittest Package",
          "Using unittest.mock",
          "Using unittest's Test Discovery",
          "Using Nose for Unified Test Discover and Reporting",
          "What Does Reactive Programming Mean?",
          "Building a Simple Reactive Programming Framework",
          "Using the Reactive Extensions for Python (RxPY)",
          "Microservices and the Advantages of Process Isolation",
          "Building a High-Level Microservice with Flask",
          "Building a Low-Level Microservice with nameko",
          "Advantages and Disadvantages of Compiled Code",
          "Accessing a Dynamic Library Using ctypes",
          "Interfacing with C Code Using Cython"
        ]
      },
      "requirements": [
        "Basic programming knowledge is needed."
      ],
      "description": "If you are looking for a complete course on Python programming, then go for this Learning Path. Python is the preferred choice of developers, engineers, data scientists, and hobbyists everywhere. It is a great scripting language that can power your applications and provide speed, safety, and scalability.\nWe will begin this learning journey by understanding the basic concepts of Python such as statements and syntax along with using numbers, strings, and tuples. We will then explore various function definition techniques along with learning the basics of classes and objects.\nGoing ahead, we will understand the intermediate concepts such as functional and reactive programming in Python. We will also explore statistical programming and regression.\nNext, you will uncover the advanced topics in Python, will learn to implement real-world test cases to your programs along with integrating different applications.\nBy the end of this Video Learning Path, you will become proficient in Python.\nAbout the Authors\nSteven F. Lott has been programming since the 70s, when computers were large, expensive, and rare. As a contract software developer and architect, he has worked on hundreds of projects, from very small to very large. He's been using Python to solve business problems for over 10 years. He’s currently leveraging Python to implement microservices and ETL pipelines. His other titles with Packt Publishing include Python Essentials, Mastering Object-Oriented Python, Functional Python Programming, and Python for Secret Agents. Steven is currently a technomad who lives in various places on the east coast of the U.S.\nDaniel Arbuckle gained his PhD in Computer Science from the University of Southern California. He has published numerous papers along with several books and video courses, and he is both a teacher of computer science and a professional programmer.",
      "target_audience": [
        "This Learning Path is for web developers, programmers, enterprise programmers, engineers, big data scientist, and so on. If you are a beginner, Modern Python Recipes will get you started. If you are experienced, it will expand your knowledge base. A basic knowledge of programming would help."
      ]
    },
    {
      "title": "Web Development With Google Maps",
      "url": "https://www.udemy.com/course/webdevelopmentwithgooglemaps/",
      "bio": "Integrate JavaScript, jQuery, CSS, HTML, IIS, Windows And More!",
      "objectives": [
        "design and create web pages using HTML",
        "describe the fundamentals of programming using JavaScript",
        "use jQuery to create improved and dynamic web pages",
        "Make creative use of Google Maps in their web pages.",
        "Understand how to break complex problems into smaller ones",
        "Understand how to get essential web development tools like node.js and Microsoft Visual Studio Code",
        "Learn what variables are, how to set and use them",
        "Learn about different data types",
        "Learn how to use the the Google Maps API"
      ],
      "course_content": {},
      "requirements": [
        "All tools needed for the course are free; student will be shown where to download them."
      ],
      "description": "Thank you for stopping by. There are many web development courses out there, but there is absolutely none like this one. In this course, Erik shows you how to build several small web applications using Google Maps ,HTML 5, JavaScript, Windows, PHP, jQuery, CSS, and related technologies.  Erik brings 20 years of software development experience to show you how real programs are written, and gives you many unique and practical tips along the way. The first 20 videos are a review of the fundamentals of programming using JavaScript. The bottom 40 videos show you how to combine a variety of technologies, like Visual Studio Code, JavaScript, Windows, jQuery, CSS, PHP, HTML and others, to produce powerful and unique code. Some of the videos cover programming topics, and some of the videos allow you to take a break from programming to focus on concepts. You can code along with Erik, or you can download the course files and install them them on your computer. By the end, you will have learned a great variety of powerful and interesting skills that will push your web development skills to new highs.  That's our guarantee to you. Thanks so much for reading. Let's get coding!\nPromo video PP licensed from PresenterMedia\njQuery and related marks are trademarks of the JS Foundation, and this course is not affiliated with or endorsed by the JS Foundation.",
      "target_audience": [
        "Anyone wanting to become a web development guru.",
        "Anyone wanting to take advantage of Google Maps in their projects.",
        "Anyone wanting to learn JavaScript basics"
      ]
    },
    {
      "title": "Building a Java Spring Boot Web App From Scratch",
      "url": "https://www.udemy.com/course/building-a-java-spring-boot-web-app-from-scratch/",
      "bio": "The Budgeting App Workshop",
      "objectives": [
        "Follow Trevor as he creates a mobile friendly budgeting app from scratch using Java, Bootstrap and MVC technologies.",
        "The development of this Budgeting application will demonstrate how to create a registration page, a budget view, budget categories, date ranges, transactions etc.",
        "These are all common types of programming functions used in other web applications."
      ],
      "course_content": {
        "Designing the App": [
          "Introduction",
          "Defining Requirements",
          "Domain Object Outline",
          "Assigning Domain Properties",
          "Assigning Relationships",
          "Creating Domain Objects",
          "Assigning Entities Relationships",
          "Designing the User Interface"
        ],
        "Coding out the Basics": [
          "Updating Design to Include Budget Domain",
          "Spring Security Authentication",
          "Spring Security Authorization",
          "Creating a Registration Page",
          "Reformatting the Login Page",
          "Creating a Budgets View",
          "Adding Budgets to the Database",
          "Refactoring with Thymeleaf Fragments",
          "Refactoring Adding Budget Code"
        ],
        "Coding out the Meat and Potatoes": [
          "Creating the Budget UI",
          "Creating Groups",
          "Fixing Bugs with Groups",
          "Editing Group Names"
        ],
        "Setting up Categories": [
          "Structuring Budget Screen for Categories",
          "Creating Categories",
          "Category Creation Refactoring",
          "Clickable Categories",
          "Making Category Configurable",
          "Bringing In The BigDecimal"
        ],
        "Setting up Dates and Transactions": [
          "Editing Domain Model for Start and End Dates",
          "Showing start and end dates",
          "Making Date Ranges Editable",
          "Starting to Create Transactions (Part 1)",
          "Transaction Creation Part 2",
          "Creating a second budgetId mapping",
          "Testing the Creation of a Transaction in the DB",
          "Creating the Transaction View Part 1",
          "Fun with Data Binding",
          "Formatting Dates for the Transaction",
          "Using java.time.LocalDate",
          "Adding Category onto Transaction Screen",
          "Leveraging Custom Data in JQuery Autocomplete",
          "Properly Displaying Category on View",
          "Adding Transactions to Category Screen",
          "Making Transactions Pretty",
          "Fixing Addition of Transaction Logic",
          "Sorting Transactions",
          "Filtering Transactions",
          "UI For Planned, Spent and Remaining",
          "Finishing Touches"
        ]
      },
      "requirements": [
        "Should have a basic understanding of Core and Enterprise Java, JavaScript, Spring Security, SQL Databases, Maven and Thymeleaf"
      ],
      "description": "Watch Trevor, in this workshop, develop a mobile responsive real-world Budgeting application from scratch.  This your opportunity to learn all the in-demand full-stack Java Web technologies like:\n- Java 8\n- Spring Boot\n- Hibernate\n- MySQL\n- Thymeleaf\n- Bootstrap 4\n- Spring MVC\n- Spring Data\n- Spring Security\n- HTML/CSS\nYou will also have access to every line of code Trevor creates with the GitHub links provided after each applicable lesson.\nFollow along with Trevor and create your own version of this Budget application and feel free to use it in your very own portfolio and help you be more job-ready as a Full-Stack Java Developer.",
      "target_audience": [
        "Java programmers who want to learn more about developing full-stack Java web applications"
      ]
    },
    {
      "title": "Create WordPress Within minutes using Cloud Computing",
      "url": "https://www.udemy.com/course/create-wordpress-within-minutes-using-cloud-computing/",
      "bio": "Learn how to create WordPress website within an hour on Microsoft Azure and AWS",
      "objectives": [
        "Learn basic of cloud computing.",
        "Learn basic of Microsoft Azure",
        "Learn basic of Amazon Web Service(AWS)",
        "Learn how to create WordPress website using Azure and AWS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Cloud Computing",
          "Benifits of using cloud computing.",
          "PDF Resource"
        ],
        "Create Wordpress with AWS Lightsail": [
          "What is AWS?",
          "Create WordPress using AWS Lightsail",
          "Connect to WordPress Instance",
          "Assign Static IP to WordPress Instance",
          "Map Custom Domain To WordPress Instance"
        ],
        "Create Wordpress with Microsoft Azure": [
          "What is Microsoft Azure",
          "Create Wordpress using Microsoft Azure",
          "Map custom domain"
        ],
        "Wrap Up": [
          "summary"
        ]
      },
      "requirements": [
        "Stable internet connectivity",
        "A laptop with web browser"
      ],
      "description": "Learn the basics of Cloud Computing technologies such as Microsoft Azure and Amazon Web Services(AWS). Learn about how to create and manage WordPress websites on Microsoft Azure Cloud and AWS. This course is designed for anyone willing to quickly create a WordPress website and test the market. using cloud computing technologies you can quickly create a WordPress such as landing page and delete it whenever you want. Normally if you want to host WordPress, so for this you need to buy hosting, SSL, and a lot and also this costs a lot. I will guide you through how to create a WordPress website under $5/mo and get a free SSL certificate for your website. So you don't need to buy hosting and host your WordPress website. So in brief, You will learn,\nWhat is cloud computing technology?\nwhat are some of the major cloud providers?\nHow to create WordPress on Azure.\nHow to create WordPress using AWS Lightsail.\nHow to attach static IP to your WordPress site.\nHow to create a landing page.\nHow to get started with Cloudflare.\nHow to manage DNS.\nHow to activate SSL on your domain.\nHow to assign a custom domain to your WordPress site.\nHow to delete the resources.",
      "target_audience": [
        "Beginners in WordPress.",
        "Beginners in cloud computing."
      ]
    },
    {
      "title": "Build App & Website on Single Code Base: React Native & AWS",
      "url": "https://www.udemy.com/course/build-app-and-website-on-single-code-base-react-native-aws/",
      "bio": "Build app & website from scratch using Single Code Base React Native with production ready services from AWS",
      "objectives": [
        "Learn app and web development from a single code base",
        "Learn React Native from beginning to advance",
        "Able to unleash the power of AWS and its services",
        "Understand the dynamodb database from very basic",
        "Learn how to query data effeciently with graphql from frontend and backend",
        "Perform a high level of multidimensional advance search with help of AWS Elasticsearch",
        "Identify a business structure and form the structure with effeicent code flow",
        "Explore and learn serverless image optimization on fly",
        "Learn how to build a third party marketplace for both android and web"
      ],
      "course_content": {
        "Introduction": [
          "Introduction [Same as Intro]"
        ],
        "Project Setup": [
          "Project Source Code and Resources",
          "Setup Environment",
          "Install Android and set Env and Path variable",
          "Setup device for testing",
          "Expo Setup and Create AWS Account",
          "Install AWS and Amplify",
          "Setup Amplify and create IAM user"
        ],
        "Design Home Page": [
          "Create Folder and Setup Github",
          "Start Coding with React Native Basic",
          "Design adv post",
          "Creating Header",
          "Home Page Basic Design Completion"
        ],
        "Navigation": [
          "Understandig and apply of React Navigation",
          "More on Navigation with Bottom Tab Navigation",
          "Designing Bottom Tab Navigator"
        ],
        "Authentication": [
          "Sign up Authentication",
          "Sign In Authentication with Cognito"
        ],
        "Creating Listing System": [
          "Creating Listing Screen",
          "Add Icon to Listing Input",
          "Creating multiple image loading functionality",
          "Completion of Image Upload Functionality",
          "Add Category Screen",
          "Add Location Screen and Get Input Data"
        ],
        "Exploring AWS in Project": [
          "Install Graphql Api and Write Schema",
          "Exploring Database and Appsync",
          "Image Data Processing",
          "Storing Data to S3 Bucket",
          "Storing Listing Data at DynamoDB part -1",
          "Storing Listing Data at DynamoDB part -2",
          "Fetching Data from Database",
          "Solving AWS Issue"
        ],
        "Serverless Image Resizer": [
          "Display Posts in Home Page",
          "Create Serverless Image Resizer"
        ],
        "Post Details": [
          "Post Details -Display Image and Title",
          "Post Details-Display Owner Info",
          "Post Details Completion"
        ],
        "Website - Project Configuration": [
          "Create Environment for Website",
          "Design Header for Website",
          "Complete Header and Create Category",
          "Design Menu",
          "Create Menu Functionality"
        ]
      },
      "requirements": [
        "A computer",
        "A code editor [ Here I use Visual Studio Code]",
        "Basic of Javascript and CSS"
      ],
      "description": "Welcome to the course \"Build App & Website on Single Code Base: React Native & AWS\",\nHave you ever look for programming tools, language and technique to build app and website at a time, from single code base like React Native? Hi my name is Km Habib, I'm a Certified Data scientist and web app developer have been teaching programming over 8 years. As a startup entrepenure I was looking for a coding platform which will take minimum effort and cost but will provide maximum output to build android app and website at a time where It will reduce significant maintainance cost and development time . There I've build the both android app and website and Here I'm presenting you the course where I've descrived, how you can create your own app and website using single code base like React Native and Amazon Web Service AWS. All we will learn by doing basically creating a renting third party marketplace app and website.\nHere in the course you will learn React native from basic. You also learn linking, routing and navigation using react native. Here you will learn how to create  listing system where user will store listing data in dynamodb using graphql query language. All this listing will be available for authenticated user, which we will create with the help of amazon cognito service as backend service for user database. You will learn how to create post list and post details for guest user or public there we use serveless image resizer and optimizer using aws cloudformation which has become a great revolution for conventional image resizer for different device size. You will also learn  how to place order and how to show placed order details for borrower and lenders. At the end we will create advance multidimensional searching system where user will able to search a post in 3 perspective, by text , location and category. In the course we will explore this powerful aws services, we will see how to use those service in a real life project. So if you are programmer want to programm in effecient manner, a startup entreprenuer want to build app and website for your startup or freelance want to gain skill on full stack web and app development using react native and aws then you are in right place. My goal is to see you succeed on course topics. Feel free to join in the course and start coding. So I hope I will see you in the course. Happy learning.",
      "target_audience": [
        "Programming Enthusiast",
        "Startup Entrepreneur",
        "Freelancer"
      ]
    },
    {
      "title": "Next.js & React - Build Full Stack News Portal Application",
      "url": "https://www.udemy.com/course/nextjs-react-fullstack-news-portal/",
      "bio": "Build Full Stack News Portal Application Include Frontend and Backend with Next.js, React.js,Express.js and MongoDB",
      "objectives": [
        "Build Full Stack News Portal Application",
        "Next js Basic Portfolio Website With Admin Panel",
        "Next js Fundamental",
        "React js Fundamental",
        "Express js Fundamental",
        "Functional Component",
        "MongoDB Fundamental",
        "Design Total Application with Tailwind CSS From Scratch",
        "Use Middleware for Protected Routes",
        "Two Different Dashboard as Admin and Writer with Role",
        "Fully Responsive Application for Any Device",
        "User Logout Option",
        "Learn how to implement authentication and authorization",
        "Setup Image Upload Function to Cloudinary",
        "Nested Route Manage",
        "Admin and Writer Profile Setup",
        "Change Password Setup",
        "Modal News Image Function",
        "News Filter Option Setup",
        "News Custom Pagination Setup",
        "News Search Option Setup",
        "Get Latest, Recent and Popular News",
        "Category Related News Shows",
        "News API Create",
        "Image Gallery Option",
        "Deploy Next js Project to Web Server"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Project - What You Will Build",
          "Welcome to the Course",
          "Need Your Support",
          "My Mission"
        ],
        "React Fundamentals React Structure, JSX component & Rendering": [
          "React Introduction",
          "Create New React App Using Vite",
          "Project Run And Build Command",
          "Dive Inside React Project Structure",
          "Organizing File Folders",
          "Best VS Code Extensions And Settings For React Development",
          "Primary Understanding On Component Part 1",
          "Primary Understanding On Component Part 2"
        ],
        "JSX And Conventions": [
          "JSX And Conventions",
          "JSX Short Hand If else",
          "JSX Immediately invoked function",
          "JSX Loop Inside",
          "JSX Conditional Rendering Using If Else",
          "JSX Conditional Rendering Using Switch Statement",
          "JSX Conditional Rendering Using Ternary Operator",
          "JSX Conditional Rendering Using Logical And And",
          "JSX Conditional Rendering Using Immidiatly Invoked Function"
        ],
        "Manage React Component": [
          "Passing Properties to Child Component",
          "Passing Simple String to Child Component",
          "Passing Object to Child Component",
          "Passing Function to Child Component",
          "Managing Click Event",
          "Managing Form Submit"
        ],
        "React Routing": [
          "Applying React Router Dom",
          "Link And NavLink For Router",
          "Browser Router VS HashRouter",
          "Passing Parameter Via Naviagation"
        ],
        "React Hook & State Management": [
          "[Hook] Meet With Hook",
          "[Hook] useRef InnerText InnerHTML",
          "[Hook] useRef Working With Attribute",
          "useRef Working With Input Element",
          "useRef Working With CSS Class",
          "useRef Caching Expensive Computation",
          "useState Understading Inside",
          "useState Working With Immutable Object",
          "useState Working With Immutable Array Part 1",
          "useState Working With Immutable Array Part 2",
          "useState Managing Form Like Pro Part 1",
          "useState Managing Form Like Pro Part 2",
          "useEffect understanding arguments and uses",
          "useEffect calling api using promises",
          "useEffect calling api usig async await"
        ],
        "Express JS Fundamental": [
          "Introduction What is Express Js",
          "Your First Express Application",
          "Express js Routing",
          "Four Topic We Need To Focus",
          "Understanding Response",
          "Simple String Response",
          "Response Status Code",
          "JSON Response",
          "Response Download",
          "Response Redirect",
          "Response Header",
          "Response Set Cookies",
          "Response Clear Cookies",
          "Working With Request",
          "Get Request With URL Query",
          "Working With Get Request Header",
          "Simple Post Request",
          "Post Request With URL Query",
          "Post Request With Header Properties",
          "Post application-json",
          "Working With Multipart Form Data",
          "File Upload",
          "Middleware",
          "Application Middleware",
          "Route Middleware"
        ],
        "MongoDB Fundamental - A NoSQL Database": [
          "Introduction to MongoDB",
          "Installing MongoDB and Compass",
          "Connecting to MongoDB",
          "Schema and Models",
          "Create and Save a document",
          "Find documents in multiple ways",
          "Query API Select, Sort, Limit, Count Documents",
          "Complex Query Comparison Operators",
          "Complex Query And, Or Operations",
          "Exercise Advanced Query",
          "Update a document (Way 1)",
          "Update a document (Way 2)",
          "Delete documents in 2 ways"
        ],
        "Next JS Foundation": [
          "Environment Tools Setup",
          "What and Why Next JS",
          "What is the Different between React and Next js",
          "Create New App And Explore Build Optimization Process",
          "Playing With Project Structure",
          "Primary Page Concept And Functional Component",
          "Working With Static Asset Inside Public",
          "Working With Global And Module CSS",
          "Exploring Client Side Rendering",
          "Exploring Server Side Redering",
          "Where use SSR Where CSR",
          "Why we are writing use Client",
          "Exploring Directory Routing Concept",
          "Neasted Directory Routing Concept",
          "Basic Link Component",
          "Progress Bar In Routing",
          "Managing Active Link",
          "Link Component Query",
          "Link Component Query With useSearchParams",
          "Link Component Prefetch and Replace Properties",
          "Programmatically Routing Details",
          "Thinking In Next JS What About Server Component",
          "Thinking In Next JS What About Client Component"
        ],
        "Next.js Advance Config and Optimizations": [
          "[Config] Understanding Base Path And Environment Variable",
          "Understanding Header Config",
          "Header Security Config Part 1",
          "Header Security Config Part 2",
          "Header Security Config Part 3",
          "Connection And Compression",
          "Image Optimization",
          "Font Optimization Part 1",
          "Font Optimization Part 2",
          "Script And Static Assets"
        ]
      },
      "requirements": [
        "Basic Understanding of JavaScript",
        "Good Grasp of Tailwind CSS",
        "HTML and CSS Knowledge",
        "Basic Command Line Knowledge"
      ],
      "description": "Next.js & React - Build Full-Stack News Portal Application\nAre you ready to master Next.js and React.js to build full-stack web applications from scratch? Look no further! In this comprehensive course, you'll learn to create a fully functional News Portal Application using the power of Next.js, React.js, Express.js, and MongoDB.\nWhy Learn Next.js & React.js?\nNext.js is the go-to framework for building high-performance React applications. With its server-side rendering (SSR) and static site generation (SSG) capabilities, you'll be able to create super-fast and SEO-friendly web applications. Combined with React.js, the most popular frontend library, you'll be able to build modern, interactive, and scalable user interfaces.\nWhat You Will Build\nThis course guides you through creating a full-stack news portal that includes:\nUser Authentication: Learn how to implement secure user sign-up, login, and session management.\nNews Posting & Editing: Build a dynamic news management system where authenticated users can post and edit news articles in real-time.\nCategories & Tags: Organize articles by categories and tags for better navigation and user experience.\nResponsive Design: Ensure your app is fully responsive and works across all devices using Tailwind CSS.\nSearch & Filter: Implement advanced search and filtering functionality to help users easily find the news they care about.\nAdmin Dashboard: Create an intuitive admin dashboard to manage users, posts, and comments efficiently.\nWhat You Will Learn\nNext.js Essentials:\nServer-Side Rendering (SSR) & Static Site Generation (SSG)\nDynamic routing & API routes\nOptimizing performance with built-in Next.js features\nReact.js Advanced Concepts:\nState Management with Context API & Redux\nBuilding reusable components\nManaging side effects with React Hooks\nBackend Development with Express.js & MongoDB:\nRESTful API development with Express.js\nConnecting your app to MongoDB for storing news articles, user data, and more.\nImplementing JWT Authentication for secure user management.\nWho Is This Course For?\nFrontend Developers looking to level up their skills by learning backend development with Next.js and MongoDB.\nFull-Stack Developers who want to build high-performance, full-stack applications using modern technologies.\nAnyone Interested in Web Development: Whether you're a beginner or an experienced developer, this course will walk you through the entire process of building a complex web application step by step.\nSEO & Performance Optimization\nNot only will you build a stunning news portal, but you'll also learn how to optimize your application for SEO. We'll dive into techniques such as:\nMeta Tags Management for better search engine rankings\nOptimizing images and assets for faster load times\nImproving Lighthouse scores for better user experience and discoverability\nBy the end of this course, you'll have a deep understanding of Next.js, React.js, and full-stack development, along with the confidence to build and deploy your own high-performance web applications.\nEnroll today and start building the future of web development with Next.js and React.js!",
      "target_audience": [
        "Frontend Developers looking to level up their skills by learning backend development with Next js and MongoDB.",
        "Full-Stack Developers who want to build high-performance, full-stack applications using modern technologies.",
        "Freelancers looking to expand their service offerings",
        "Tech enthusiasts eager to explore modern web development trends",
        "Anyone Interested in Web Development"
      ]
    },
    {
      "title": "Real Time FaceBook Chat Messenger using WebSockets,PHP,MySQL",
      "url": "https://www.udemy.com/course/real-time-chat-facebook-messenger-using-websockets-php-mysql-ratchet/",
      "bio": "Create & Learn to build Real Time Communication System In PHP, JS, PDO and Ratchet",
      "objectives": [
        "Learn about WebSockets",
        "Learn about Ratchet",
        "Learn about PHP",
        "Learn about PDO",
        "Learn to build Real Time Application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Local WebServer",
          "Creating folders for our application"
        ],
        "installing everything we need": [
          "What is composer?",
          "Installing Composer On Linux / MacOS",
          "Installing Composer On Windows",
          "What is WebSocket?",
          "Instailling Ratchet",
          "Rachet/Socketo.me Documentation & Backup Files"
        ],
        "Creating User functions,": [
          "Creating Database",
          "Creating Login form",
          "Creating User table",
          "Validating Login Form",
          "Creating PHP class to connect with Database",
          "Creating a method to check if email exist",
          "Creating a Password hash method",
          "Creating a redirect method and Allowing User to login",
          "Creating method to check if user is logged in",
          "Creating Method to logout the user",
          "Creating Method to Return User Data",
          "Creating a method to return data from any table",
          "Creating Method to Insert data into Database"
        ],
        "Creating methods to display Messages": [
          "Creating home page",
          "Creating Messages Table",
          "Creating Method to make search box work",
          "Creating Search method to search user",
          "Creating method to display Recent Messages",
          "Adding new condition to recent messages",
          "Creating method to redirect to last message",
          "Rewriting the url",
          "Creating main messenger page",
          "Creating method to get user data by username",
          "Creating method to display Chat messages",
          "Creating condition to display not seen icon"
        ],
        "Creating method to send Messages": [
          "Creating js Function to Allow Users to Upload image",
          "Creating Upload Method",
          "Uploading Image",
          "Displaying Images in Chat",
          "Creating Method to store Messages",
          "Fixing Recent Messages",
          "Creating Update method",
          "Creating Method to set Message status to seen",
          "Making Textarea work to send Messages"
        ],
        "Turning our Chat application into Real Time (A game changer)": [
          "Getting Started with WebSockets",
          "Creating sessionID",
          "Understanding how our Chat class works",
          "Instantiating class objects",
          "Adding tokens to connection",
          "Sending Message via WebSocket",
          "Displaying Messages From WebSocket",
          "Display new message on user list",
          "Adding new condition to recent message",
          "Creating method to scrollDown",
          "Fixing Duplicate Image message problem"
        ]
      },
      "requirements": [
        "PHP experience is needed or Basic knowlage of PHP",
        "Basic JavaScript",
        "Local Web Server, (Xampp/Lampp)"
      ],
      "description": "Wanted to build your own REAL TIME chat just like Facebook Messenger? and don't know where to start from? Don’t worry, this Course will show you step by step how to create your own Facebook Messenger clone using WebSockets. Yes, we will be using websockets in PHP along with MySQL, Javascript.\n\n\nIt doesn't matter if you're a beginner or an experienced programmer, just you have to know the basics of PHP, MySQL, HTML ,CSS and JQuery.\n\n\nThis course will be greatly and highly beneficial to you. And by the end of this course you will be capable of creating your own Real Time Chat Just like Facebook, not only this you will also be more than competent with skills WebSockets, Ratchet, PHP, PDO, OOP, MySQL and jQuery.\n\n\nYou can highlight the site you create in this course, If anyone who sees this project in your portfolio might want to hire you because from this course you will gain skills which help you to understand the main concept used in the Real Time Communication system. So get the ULTIMATE guide to create a REAL TIME Chat Application Like Facebook Using Websockets and PHP.\n\n\nSupport\nBy taking this course you will get my full support. I've always loved to help my students (could be you). I’ve answered all that question that students have asked so far. I’m always in a ninja mood, if there’s a question it’ll be answered within an hour or few. By all this means if you have any errors. I'll be happy to check codes, errors.\n\n\nThis Course Covers The Following Features:\n\n\nOne to one chat\nWebSocket Server\nRatchet\nClients Connections Logic\nStore Messages Logic\nDisplay messages in real time\nEmojis\nPost Message\nPost Image\nTokens\nSessions\n\n\nPlease\nlook at all the lectures to see more things that are covered.",
      "target_audience": [
        "Beginner PHP developer curious about Real Time Communication",
        "Beginner PHP developer curious about WebSockets",
        "Beginner who wants to learn to create Real-Time chat application"
      ]
    },
    {
      "title": "Ruby on Rails 6: Startup MVP: School Attendance Tracking App",
      "url": "https://www.udemy.com/course/ruby-on-rails-authentication-authorization-mvp/",
      "bio": "Code-Along, learn new Rails features and learn to create an advanced School Schedule and Attendance Tracking Application",
      "objectives": [
        "create, edit, invite, ban, unban, delete, inivte users to your app",
        "add one or many roles to users, restrict access to data based on roles",
        "gem devise for logging in",
        "devise confirmable - confirm email to use app",
        "devise lockable - ban / unban users",
        "manage user roles",
        "restrict user access based on roles",
        "log in with google",
        "log in with facebook",
        "log in with twitter",
        "log in with github",
        "invite users via email with devise_invitable",
        "connect Amazon SES email service for sending emails for free",
        "deploy applications to production like a PRO",
        "invisible recaptcha",
        "how to architect complex applications",
        "how to manage money calculations",
        "how to create school schedules",
        "how to generate multiple records (lessons) based on a schedule",
        "how to generate multiple records (student attendances) for a lesson",
        "advanced search and filtering without gems",
        "how to display dynamic data in a calendar",
        "how to manage schedules across multiple teachers and students"
      ],
      "course_content": {
        "Hello World. Install Ruby on Rails 6. Using Git.": [
          "INTRODUCTION",
          "create development environment, install ruby on rails 6, create app",
          "push application to github",
          "PRO TIP - ssh connection - push to github without re-entering password",
          "hello world - generate a static page",
          "connect heroku - run application in production",
          "PRO TIP - delete changes, undo commits",
          "AWS - no space left on device - add 20 gb storage"
        ],
        "Basic styling. Bootstrap. Fontawesome.": [
          "Install bootstrap with yarn and webpacker",
          "Bootstrap basic usage",
          "Install and use Fontawesome icons",
          "Responsive screen width"
        ],
        "Advanced User Authentication (log in functionality)": [
          "gem devise basic installation",
          "navbar with bootstrap fontawesome and devise, partials, messages partial",
          "customize devise views with bootstrap",
          "devise confirmable",
          "users index and user show pages",
          "devise trackable",
          "create fake users with seeds.rb",
          "redirect user to specific page after sign in",
          "users can be deleted",
          "devise lockable",
          "users can be banned and unbanned"
        ],
        "Log in with social accounts": [
          "gem omniauth-google-oauth2 - social log in with google",
          "IMPORTANT UPDATE: OMNIAUTH 2.0",
          "gem omniauth-github - social log in with github",
          "gem omniauth-twitter - social log in with twitter",
          "gem omniauth-facebook - social log in with facebook",
          "display user data from social log in",
          "Social login in production",
          "Credentials and encryption",
          "Make credentials work in production (heroku)"
        ],
        "User Roles and Authorization (without gems!)": [
          "Create and edit User roles",
          "assign default role to user after creation",
          "Authorization - only admin user can edit user roles"
        ],
        "Styling the app": [
          "responsive tables with bootstrap",
          "disappearing flash messages with toastr",
          "footer at the end of page",
          "styling for true false values",
          "styling user views",
          "3 ways to change background color for the app"
        ],
        "Inviting users via email to join our app": [
          "gem devise-invitable - create and invite users to the app",
          "devise invitable docs and views - going deeper",
          "button to Resend confirmation instructions to unconfirmed users",
          "button to Resend invitation to unconfirmed users",
          "Authorization for resend_confirmation_instructions",
          "Authorization for resend_invitation"
        ],
        "Preparing for production": [
          "gem invisible_captcha - no bot sign ups",
          "sending emails in production with Amazon SES",
          "gem exception_notification - receive emails if errors in production",
          "rename app from ruby-gems-bootcamp to superauth"
        ],
        "PRO FEATURE - Strong params authorization": [
          "user name can be edited",
          "strong params - only admin can edit roles, any user can edit names",
          "strong params authorization - user can edit his own profile",
          "BONUS FIX: user can not ban himself"
        ],
        "classrooms, services, groups": [
          "intro to app architecture",
          "create classrooms table",
          "gem simple_form for better form creation",
          "better scaffold templates with bootstrap",
          "basic classroom validations",
          "services table and validations",
          "courses table and validations"
        ]
      },
      "requirements": [
        "Modern browser and internet connection",
        "A basic understanding of programming would be helpful, Basic knowledge of Ruby and Rails will be a plus",
        "No paid software required"
      ],
      "description": "From a learning perspective, the course gives great insight into building the business logic layer of an application.\n\n\nIn this course you will build a complete group appointment scheduling and tracking application from start to finish.\n\n\nWhy build this app?\nRemote schooling has become the new normal.\nEducational institutions (schools, colleges, universities) need a way to track teacher schedules, lessons, and student attendances.\nThat's where you come in: In this practical code-along course you will learn to build an advanced, complete solution for managing an educational institution.\n\n\nChapters 01-09: General features (Authorization and Authentication):\nWhen creating a Web application, you usually have to start with the two key elements:\nAuthentication - User log in, user account management.\nAuthorization - User roles, permissions and access to different parts of your app.\nWe will Code-Along and build a Web App MVP covering all aspects of Log-In, User Management, and Role-Management functionality.\nBasic authorization via email (Devise)\nSocial log in via Google\nSocial log in via Facebook\nSocial log in via Twitter\nSocial log in via Github\nDevise confirmable\nDevise trackable\nDevise lockable\nDevise invitable - Inviting users to join the app via email\nBanning users\nDeleting users\nEditing user profile\nManaging user roles (admin, teacher, student) without any gems\nRole-based access to different features (example: only admin can ban a user) without any gems\nBlocking bot registrations\nSending transactional emails in production (Amazon SES)\nBy the end of Chapter 09 you will have created a boilerplate, based on which you can build any business application of your dream.\n\n\nChapters 10 - 20: School Lesson Calendar and Attendance Tracking features:\nEnroll multiple students to one course\nCreate a lessons schedule for a course\nGenerate lessons according to the schedule\nGenerate attendances for enrolled students\nDisplay lessons in a calendar\nUpdate lesson status (planned / cancelled / confirmed)\nUpdate attendance status for each student (planned / attended / not attended)\nAdvanced search and filtering for records in a calendar\nWorking with money: Calculate Teacher salary based on lessons taught and price of a lesson\nWorking with money: Calculate Student expences based on attendances and price of an attendance\nWorking with money: Calculate User balance\nCreate Monthly Reports based on lessons\nBy the end of the course you will have created your own school management web application MVP, that you will will be able to market any way you like!\n\n\nWe are not going to cover the fundamentals of what Ruby and Rails are: there are other, more basic courses for that.\nInstead, we will dive straight into coding along and building our application step-by-step, feature-by-feature.\nThis course can be interesting for Ruby on Rails developers of all levels: for beginners and for veterans.\nAs a beginner, you will get the whole experience of thinking and building the core lifesystem of any modern Web Application.\nAs a veteran, you will get acquainted with some exquisite approaches for problem-solving, and features that you could have not encountered in the past.\nAs well all enrolled students will have access to the source code, support materials and discussion groups.\n\n\nAs well this course comes on Udemy with 30 days money back guarantee, so you have nothing to lose.\nLooking forward to seeing you inside!",
      "target_audience": [
        "If you want to learn just enough about all aspects of Authentication & Authorization",
        "If you want to create your own School Administration Web app",
        "If you want to start your own startup by building your own websites and web apps.",
        "If you are already acquainted with Ruby on Rails and wants to deepen your knowledge",
        "If you want to learn how to build professional grade Ruby on Rails applications",
        "If you want to be a web app developer: This course will introduce you to many in-depth mechanics of Ruby on Rails"
      ]
    },
    {
      "title": "The Definitive Guide to HTML Web Development.",
      "url": "https://www.udemy.com/course/the-definitive-guide-to-html-web-development/",
      "bio": "Become an Expert in HTML/HTML5 and Build a Solid Foundation in Creating Websites.",
      "objectives": [
        "The History of HTML",
        "Build any HTML Webpage from scratch.",
        "Start a Profession as a Web-Developer.",
        "Become an expert in every use of HTML (Tags, Attributes...)",
        "Creating Forms",
        "Building Tables",
        "Inserting Images/Videos",
        "Adding Links",
        "Adding Lists",
        "The Basics of CSS & JS"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "What is HTML & HTML5",
          "HTML Evolution",
          "Download & Install VS Code",
          "QUIZ 0"
        ],
        "HTML Basics": [
          "Overview",
          "<html>, <head> & <body>",
          "Explaining Tags in HTML",
          "Comments and Paragraph",
          "Block text Tag and Inline text Tag",
          "<h1> -> <h6>",
          "Line Break & Horizontal Rule",
          "QUIZ 1 - HTML Basics",
          "Coding Exercise 1 - HTML basics",
          "Coding Exercise 1 -> Solution"
        ],
        "Creating Lists": [
          "Ordered & Unordered Lists",
          "Nested List",
          "Definition List",
          "QUIZ 2 - Lists",
          "Coding Exercise 2 - Lists",
          "Coding Exercise 2 -> Solution"
        ],
        "Connection with Links": [
          "class & id attributes",
          "Anchor & Open to a new tab",
          "Making a List of Links & base",
          "Email link & Refering to a specific part in the page",
          "Relative references & iframe",
          "QUIZ 3 - Links",
          "Coding Exercise 3 - Links",
          "Coding Exercise 3 -> Solution"
        ],
        "Creating a Table": [
          "Table and it's Title",
          "Rows and Columns",
          "Grouping Column and Rows",
          "Spaning Rows and Columns",
          "QUIZ 4 - Tables",
          "Coding Exercise 4 - Tables",
          "Coding Exercise 4 -> Solution"
        ],
        "Adding images": [
          "Image Formats",
          "Adding Images",
          "Dimension & Type of Captions",
          "Maping the Image using Areas",
          "Where and How to place Images in HTML",
          "QUIZ 5 - Images",
          "Coding Exercise 5 - Images",
          "Coding Exercise 5 -> Solution"
        ],
        "Audio & Video": [
          "Working with Audio",
          "Working with Video"
        ],
        "Creating Forms": [
          "Overview",
          "Creating a Form",
          "Label and Input Texts (Part 1)",
          "Label and it's Equivalent",
          "The Select Boxes",
          "Radio & Check Boxes (Part 2)",
          "Adding Buttons (Part 3)",
          "Some More Inputs (Part 4) + output",
          "The required Attribute and it's Effect",
          "QUIZ 6 - Forms",
          "Coding Exercise 6 - Forms",
          "Coding Exercise 6 -> Solution"
        ],
        "Formating & Page Layout": [
          "Overview",
          "Division and Spanning",
          "The Upgrade of <div>",
          "Bold and Italic",
          "address, defined & cite",
          "Highlight & Abbreviation",
          "Underline & Strikethrough",
          "Formulas",
          "Getting a Text from a Title",
          "Special Lesson"
        ],
        "Building HTML Project": [
          "Overview",
          "Making the Header and Footer",
          "Creating the Calender",
          "Sign Up Option",
          "Course Content & World Map",
          "Review Page after Submition"
        ]
      },
      "requirements": [
        "A Computer (Windows, Mac, Linux) with access to the internet (Chrome, Edge...)",
        "You'll use FREE software",
        "No programming or HTML knowledge needed. You will learn everything you need to know"
      ],
      "description": "Have you ever wanted to know how websites work and how they are created?\nThen you are in the right hands!!\nBut you will ask me why HTML?\nWell, HTML is basically the solid foundation of every Web Developer and without HTML there is no websites/web games that can be created and displayed on your screen using Chrome, Edge, Firefox...\nThe Definitive Guide to HTML Web Development is great for anyone who wants to learn or get challenged in HTML5 that's why I am more than happy to offer you this course that covers everything you need to become an expert in HTML/HTML5.\nAt the end of this course you'll also get an introduction to CSS & JavaScript basics so that you can get a small idea of the future subjects in web Development.\nBriefly this course covers:\nAn Introduction\nThe Basics\nCreating Lists\nTables\nLinks\nAdding Images, Audios & Videos\nDesigning Forms\nText Formatting\nCSS Basics\nJS Basics\nProjects\nN.B.:\nThe Project will guide you step by step to achieve a webpage that contains a summary page of almost everything you learned in this course, and from this point you will be ready to fly in the world of web development.\nIf you want to start a career as a web developer, then learning HTML should be your first step (just like every Web Developer).\n\n\nJoin me and I guarantee you an amazing Web development Journey!!\nSee you in the course!",
      "target_audience": [
        "HTML/HTML5 Beginner curious about Web Development.",
        "Web Developer willing to refresh their HTML5 skills.",
        "Anyone aiming to become an Expert in HTML5."
      ]
    },
    {
      "title": "Build a Chatbot integrated Website using Bootstrap 4",
      "url": "https://www.udemy.com/course/build-a-chatbot-integrated-website-using-bootstrap-4/",
      "bio": "Learn to build a conversation chatbot and integrate it into a responsive website built using HTML5,CSS3 and Bootstrap 4",
      "objectives": [
        "Build a complete portfolio website where I will be able to upload my projects",
        "Make a chatbot from scatch without any coding",
        "Learn HTML5, CSS3, Javascript, jQuery, Bootstrap 3 and Bootstrap 4",
        "Build amazing websites quickly without having to think too much",
        "Learn basic things that are required to make a website responsive and make sure it looks good on tablets and mobile phone",
        "Build amazing chatbots like - Feedback bot, Customer Support chatbot, Training chatbot etc.",
        "3 hours of Full HD video material divided into 30 downloadable lectures"
      ],
      "course_content": {
        "Introduction": [
          "Start here",
          "Walkthrough",
          "Section - 1"
        ],
        "Getting started with HTML5": [
          "HTML Level- 1",
          "HTML Level - 2",
          "HTML Level - 3",
          "HTML Quiz"
        ],
        "Getting started with CSS3": [
          "CSS Level - 1",
          "CSS Level - 2",
          "CSS Level - 3",
          "CSS Quiz"
        ],
        "Getting started with Javascript and jQuery": [
          "Javascript and jQuery - Level 1",
          "Javascript and jQuery - Level 2",
          "Javascript and jQuery - Level 3",
          "jQuery Quiz"
        ],
        "Getting started with Bootstrap 3 and Bootstrap 4": [
          "Bootstrap Walkthrough",
          "Introduction to Bootstrap",
          "Integrating Bootstrap, Buttons and Forms",
          "Navigationbar",
          "The GRID System",
          "Understanding the Grid System",
          "Migrating to Bootstrap 4",
          "Bootstrap Quiz"
        ],
        "Capstone Project : Chatbot and Portfolio Website": [
          "Intro to Project",
          "Starting Code and Navbar",
          "Building our first Chatbot",
          "Understanding the Portfolio Chatbot",
          "iFrame and Adding links",
          "Buildling the Portfolio Webpage",
          "Building the Udemy Webpage",
          "Building the Contact form",
          "Hosting the Website",
          "Capstone Quiz"
        ]
      },
      "requirements": [
        "An Internet connection is required",
        "You won’t need to buy any software – everything we are going to use will be free",
        "Desire to learn and improve your skills"
      ],
      "description": "Have you ever wanted to build a chatbot but didn't know how to? May be you even know HTML and CSS but you have no idea how to take these languages and build a complete website. In this course we will be combining these skills together to make a chatbot integrated website. It will be a portfolio website, where you will be able to showcase your projects and skills.\nWith this course you will be able to create beautiful looking websites and chatbots quickly. You will learn front end web technologies like HTML5, CSS3, JavaScript, jQuery and Bootstrap 4.\nWhy choose me as an instructor? Why buy this course among all those other courses?\nWhen i was a kid i saw this YouTube video on how make a folder invisible on Windows I was so fascinated with this idea. Since then my love for technology has only grown. I understand the people who are passionate about learning new things. At the end of each section we will take a quiz to check up on your skills and see if we’re ready for the next section. We will create this project together from start to finish.\nSo, why wait? If all this sounds great to you, Press on “Take this Course” and start learning today! 100% money-back guarantee.",
      "target_audience": [
        "Anyone who wants to make a chatbot without any coding",
        "Students who have a basic understanding of HTML and CSS but want to take their skills to the next level",
        "Anyone who wants to start a career in chatbot and web development",
        "Students who wants to learn web development and design",
        "Do NOT take this course if you are a web developer with many years of experience"
      ]
    },
    {
      "title": "[2023]:Master Spring boot 3.0 and MongoDB - The full course",
      "url": "https://www.udemy.com/course/master-spring-boot-3-and-mongodb-the-full-course/",
      "bio": "Master the Powerful Stack of Spring Boot and MongoDB for Modern Web Development and Data Storage",
      "objectives": [
        "Master the MongoDB",
        "Integrate MongoDB with Spring boot 3.0",
        "Integrate OpenApi with Spring boot 3.0 and MongoDB",
        "Write advance search queries"
      ],
      "course_content": {
        "Introduction": [
          "What is mogoDB",
          "Th difference between SQL and NoSQL",
          "How to choose between SQL and NoSQL"
        ],
        "Prepare the mongo environment": [
          "MongoDB UI tools",
          "Why using docker for development",
          "Create an empty docker compose file",
          "Mongo server (Docker compose)",
          "Mongo express (Docker compose)",
          "Run and test"
        ],
        "Mongo terms": [
          "Collections and documents in Mongo"
        ],
        "Bootstrapping the application": [
          "Create a new Spring boot 3.0 project",
          "Project structure",
          "Include the docker compose with the project and run it",
          "Project architecture",
          "Connect to MongoDB",
          "Create a new database",
          "Understand Admin - Local and Config databases",
          "Create a java class",
          "Transform the java class to a Collection",
          "Create a mongo repository",
          "Insert the first data into the Collection",
          "Create a product service",
          "Save the product",
          "Find product by ID",
          "Find all products",
          "Delete product"
        ],
        "CRUD operations": [
          "Create product Controller",
          "Save product operation",
          "Find all products",
          "Find product by ID",
          "Delete product",
          "Test the CRUD operations"
        ],
        "DBRef and collections relationships": [
          "Extend the product model",
          "Create Category java class",
          "User Category as a field",
          "Relationship between Category and Product",
          "Transform the Category to a collection",
          "Create a category repository",
          "Insert categories at startup",
          "The issue in linking collections",
          "Add relationship between collections"
        ],
        "OpenApi integration": [
          "Add OpenApi dependency",
          "Test and play with Swagger UI"
        ],
        "Documents queries and Mongo template": [
          "Extend the product model",
          "Create a search service",
          "What is MongoTemplate",
          "Is() query",
          "Testing the Is() query",
          "Regex() query",
          "Lt() query",
          "Gt() query",
          "Sorting data",
          "Paging and Sorting"
        ],
        "Query methods": [
          "Create a query method service",
          "FindByX query",
          "FinByX ignore case query",
          "FinByX starting with query",
          "FinByX ending with query",
          "FinByX containing query",
          "FinByX less than",
          "FinByX greater than",
          "FinByX between",
          "FinByX and SortByY",
          "Paging and Sorting"
        ]
      },
      "requirements": [
        "Basic Java knowledge"
      ],
      "description": "Learning Spring Boot and MongoDB can be extremely valuable for students looking to gain skills in modern web development and data storage.\nHere is why you need to learn and master these two technologies\nSpring Boot is a popular framework for building Java-based web applications. It makes it easy to create stand-alone, production-grade Spring-based applications that you can \"just run\". This means that you can quickly get up and running with a new project and start building their application without having to spend time on configuration.\nMongoDB is a leading NoSQL database that is widely used in modern web applications. It is a flexible, scalable, and high-performance database that can handle large amounts of data. By learning MongoDB, you will be able to build applications that can store and manage large amounts of data efficiently.\nTogether, Spring Boot and MongoDB form a powerful stack for building modern web applications. By learning both technologies, students will be able to build full-stack applications that can handle both the front-end and back-end aspects of web development.\nThere is high demand for developers with skills in Spring Boot and MongoDB. Companies of all sizes are looking for developers who can build modern web applications using these technologies, so learning them can open up new career opportunities for students.\nOverall, learning Spring Boot and MongoDB can be a great investment for students looking to gain valuable skills in modern web development and data storage.\nBy purchasing a course on these technologies, you can learn from experienced instructor and get the support and guidance you need to succeed.",
      "target_audience": [
        "Student",
        "Junior developers"
      ]
    },
    {
      "title": "Odoo Direct Dot-matrix Printing",
      "url": "https://www.udemy.com/course/odoo-direct-dot-matrix-printing/",
      "bio": "How to Print Odoo Documents in the Speed of Dot-matrix Printers",
      "objectives": [
        "Create an add on from scratch that communicates directly to dot matrix printers to print Invoices",
        "and then Purchase Order",
        "then Sale Order",
        "then Picking",
        "and able to apply for other modules"
      ],
      "course_content": {
        "Introduction": [
          "Problem",
          "Solution",
          "Download Resources"
        ],
        "Create Addon: Print Invoice on Dot-matrix": [
          "Scaffolding Addon Structure",
          "Edit Manifest File",
          "Inherit Invoice View",
          "Inherit Invoice Model",
          "Install and Test Addon",
          "The Refresh Printer Data Button",
          "Completing the Refresh Printer Data Method"
        ],
        "The Invoice Print Template": [
          "Create Invoice Print Template",
          "Centering the Title",
          "Invoice Header Section",
          "Invoice Header Section Part 2",
          "Invoice Product Lines",
          "Invoice Product Lines Part 2",
          "Invoice Bottom Section"
        ],
        "The Client Side Button Handler": [
          "Invoice Print Button Handler",
          "Load the JS Assets",
          "Completing the Print Handler"
        ],
        "The Printer Proxy Service Linux and MacOS": [
          "Create Proxy Server with Flask",
          "Test the Proxy",
          "Start the Script on Linux and MacOS"
        ],
        "The Printer Proxy Service for Windows": [
          "Install Python and Flask on Windows",
          "Install pywin32",
          "Create Proxy Server with Flask on Windows",
          "Test the Proxy",
          "Start Script on Windows"
        ],
        "Finishing Touches": [
          "Refreshing Printer Data on Confirm and Cancel Invoice",
          "Make the Printer Data Readonly"
        ],
        "Print Purchase Order on Dot-matrix": [
          "Inherti PO View",
          "Inherit PO Model",
          "Create PO Header Template",
          "PO Product Lines Template",
          "PO Bottom Part Template"
        ],
        "Print Stock Picking on Dot-matrix": [
          "Picking View Inherit",
          "Picking Model Inherit",
          "Picking Header Template",
          "Picking Product Lines Template"
        ],
        "Print Sale Order on Dot-matrix": [
          "Inherit Sale Order View",
          "Inherit Sale Order Model",
          "Create Sale Order Header Template",
          "Sale Order Product Lines Template",
          "Sale Order Bottom Part Template",
          "Refreshing Printer Data on Confirm Sale"
        ]
      },
      "requirements": [
        "Understand the basic of Odoo add on development",
        "Understand Python programming",
        "Understand Javascript programming"
      ],
      "description": "One of the biggest challenge in implementing Odoo in companies which already have so many daily transactions (like thousands of invoices per day), is printing to Dot Matrix Printer!\nYes, it is common in big trading companies to use Dot Matrix printer to print PO, SO, Invoices, Picking List to efficiently print using continuous and carbonized forms so they can print 3-4 document at once. Printing PDF file to dot matrix printers that can take the whole day just to print :(\nThis can be a big issue in Odoo, because it uses PDF for every document printing. The print result is good when printed at desk jet/ laser jet printers, but when it comes to dot-matrix, the font is broken and almost unreadable. This is because the dot per inch is too small. We can set it up bigger, but it will take some more time to print to dot matrix printer. It is impractical when it comes to print like 5000 invoices daily!\nThe solution is to use a proxy printing technique. We make a small web server application at the client computer that is connected to the printer. That small application listen at a specific HTTP port and ready to receive request from Odoo's web browser client. At server side, we add an add-on that will send the raw data to print to that local application via HTTP post. The raw data is automatically composed based on the document to print using template.\nThe result is: AMAZING! printing is now direct to dot matrix printer with it's super fast speed and perfect printing result!\nThis course explains in details on how to make, configure, and setup the direct dot-matrix printing system for Odoo.\nEnjoy!",
      "target_audience": [
        "Advanced Odoo developer who want to speed up printing system on Odoo directly to dotmatrix printers",
        "Odoo Implementor",
        "Odoo Consultant",
        "Odoo Official Partner"
      ]
    },
    {
      "title": "The Ultimate Coding Bootcamp: Make Your First Websites Today",
      "url": "https://www.udemy.com/course/codingbootcamp/",
      "bio": "Includes FREE book! Hands-on practical examples in web development for beginners. You will become a fast & smart coder!",
      "objectives": [
        "3 projects to put in your web design portfolio",
        "Real-world skills to build real-world websites",
        "Get our eBook \"1 Hour HTML\" for free",
        "A master toolset of the fundamentals of coding",
        "Knowledge on the history of computers and computer science",
        "Learn how to market yourself, network, and make connections as a freelance programmer",
        "Get tips from a real entrepreneur"
      ],
      "course_content": {
        "Course Trailer": [
          "Course Trailer"
        ],
        "Introduction to Coding": [
          "Learn about Different Coding Languages",
          "The History of Programming",
          "What is Web Development?"
        ],
        "Learn to Code in HTML": [
          "HTML Introduction",
          "JS Bin - Collaborative JavaScript Debugging",
          "Writing our First HTML",
          "Lists and Comments",
          "Nested Lists",
          "Loading Images",
          "Loading Images in Lists",
          "Links",
          "Images as Links",
          "Mailto Link",
          "Div Element"
        ],
        "Learn to Code in CSS": [
          "CSS Introduction",
          "Box Model",
          "Writing our First CSS",
          "More CSS Examples",
          "Inheritance",
          "More on Type Selectors",
          "Getting Direct Descendants",
          "Introduction to Classes",
          "Multiple Classes",
          "Introduction to ID",
          "CSS Specificity",
          "Pseudo Classes & Sibling Matching",
          "Styling Recipe Page",
          "Loading External Stylesheet"
        ],
        "Learn to Code in Javascript": [
          "What is ES6?",
          "Functionality of ES6",
          "Testing your Code",
          "Tips to Getting Started with Javascript",
          "Common Pitfalls",
          "Source Code",
          "Numbers and Strings",
          "Booleans",
          "Booleans Continued!",
          "Objects",
          "Objects Continued!",
          "Arrays",
          "Arrays Continued!"
        ],
        "Make Your First Landing Page": [
          "Introduction to the Landing Page",
          "Building the Page",
          "Adding CSS",
          "Final Touches"
        ],
        "Code a Modular Website": [
          "Writing the HTML",
          "More HTML",
          "Completing HTML",
          "Writing CSS",
          "More CSS",
          "Completing CSS",
          "Project Final Touches"
        ],
        "Build a Bootstrap Website": [
          "Build a Bootstrap Website"
        ],
        "Expand Your Horizons": [
          "How to Market Yourself",
          "Start Networking and Making Connections",
          "Learn to Expand Your Horizons"
        ],
        "Free Stuff for Students!": [
          "(Normally $34.74) JavaScript eBook",
          "Please rate this course",
          "Bonus Lecture: Community Newsletter"
        ]
      },
      "requirements": [
        "No experience necessary!",
        "A modern web browser",
        "This course was recorded on a Mac, but you can use a PC."
      ],
      "description": "\"This is a great experience so far. I'm transitioning careers from large engine diesel mechanic, to coding. Very helpful so far\" - Jared C.\nWhat if I told you you could learn to code in HTML, CSS & JavaScript just one day?\nIt's true! This course is compact and teaches you every single essential topic you need to know to become a coder. By the end of this course you can say that you have made your first website and landing page.\nThis course was funded by a wildly successful Kickstarter\nWith our training model, learning to program is straightforward. You will become a fast and smart coder with this course!\nFeeling stuck in life? Maybe you're working three jobs to make ends meet. I'm sure you've heard how much developers make these days … Want to get in on that action? Coding is not as hard as you think.\nFirst you will learn the fundamentals of coding and computers.\nThen we will teach you the foundations of web development. You will learn HTML, CSS, & JavaScript -- these are the 3 key languages of the web.\nTogether we will build from scratch a customization landing page and modular website.\nAs a bonus, you'll learn how to bootstrap a site. You will also learn how you can enter the industry. You'll know how to code and sell.\nCoding is an awesome way to train your brain while gaining marketable skills.\nDon't get left behind as coding becomes a job requirement. Get insight into how the technology you use every day works. Learn to think in a new way.\nMake money from home by making your own websites and web apps. No matter your industry, having technical skills makes you stand out. Computing literacy is a necessary skill. Technical roles need diversity, and with our courses, anyone can learn.\nThis is real coding for all ages.\nWe design our tutorials for people with NO EXPERIENCE. In a Mammoth Interactive curriculum, you get as much useful information as possible from every minute. No longer do you need to spend time putting together knowledge from YouTube videos. We've curated what you need to know.\nWhat's great about online learning is that you can learn at your own pace. You can speed up or slow down videos. Coding boot camps don't work for everyone. Why spend money when you can make money? Save thousands of dollars, and make thousands of your own.\nLearning at Mammoth Interactive can be your next step to improving your career and your life.\nWe at Mammoth Interactive have been producing online tutorials since 2011. We know what self-directed learners need. Over 300'000 students have enrolled in our courses. And they love it.\nOur instructors make video tutorials that are practical and to the point. At the end of this course, you will have projects that you made and can show off in your portfolio.\nStart your epic journey here, with Mammoth Interactive!",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Coders who want to become freelancers",
        "Any programmer who wants to get a complete grasp of core coding concepts",
        "Anyone who needs to build a website or landing page for their business, product, or fun!"
      ]
    },
    {
      "title": "Machine Learning and Big Data Analytics with AWS",
      "url": "https://www.udemy.com/course/machine-learning-and-big-data-analytics-with-aws/",
      "bio": "Athena|CloudSearch|Kinesis|QuickSight|Comprehend|Lex|Polly|Transcribe|Translate|CelebrityRekog|FacialAnalysis &many more",
      "objectives": [
        "Amazon Sagemaker to build, train, and deploy machine learning models at scale",
        "Amazon Comprehend for natural Language processing and text analytics",
        "Amazon Lex for conversational interfaces for your applications powered by the same deep learning technologies as Alexa",
        "Amazon Polly to turn text into lifelike speech using deep learning",
        "Object and scene detection,Image moderation,Facial analysis,Celebrity recognition,Face comparison,Text in image and many more",
        "Amazon Transcribe for automatic speech recognition",
        "Amazon Translate for natural and accurate language translation",
        "Amazon Athena for querying data instantly and get results in seconds",
        "Amazon CloudSearch makes it simple and cost-effective to set up, manage, and scale a search solution for your website or application",
        "Amazon Elasticsearch to search, analyze, and visualize data in real-time.",
        "Amazon Kinesis for easily collecting, processing, and analyzing video and data streams in real time",
        "Amazon QuickSight is a fast, cloud-powered BI service that makes it easy to build visualizations and quickly get business insights from your data."
      ],
      "course_content": {
        "Machine Learning and Analytics with AWS": [
          "Introduction",
          "Difference between AI and Machine Learning",
          "AI services [No machine learning skill]"
        ],
        "Quick Recap": [
          "Quick Recap - NUMPY",
          "Quick Recap - Pandas"
        ],
        "Project [New Content added]": [
          "Build frontend for ML Application",
          "2Build Backend for ML Application",
          "Add NLP task (translation)",
          "Demo: Translation ML app",
          "Creating Sentiment Analysis ML app",
          "Demo: Sentiment Analysis ML app"
        ],
        "Analytics(Athena)": [
          "Athena",
          "Project Athena Part 1",
          "Project Athena Part 2",
          "Project Athena Part 3",
          "Project Athena Part 4"
        ],
        "Analytics(CloudSearch)": [
          "CloudSearch",
          "Practical: CloudSearch Part 1",
          "Practical: CloudSearch Part 2",
          "Practical: CloudSearch Part 3"
        ],
        "Analytics(ElasticSearch)": [
          "ElasticSearch"
        ],
        "Analytics(Kinesis)": [
          "Kinesis",
          "Practical: Kinesis",
          "Practical: Kinesis(python boto3)"
        ],
        "Analytics(AWS Quicksight)": [
          "Quicksight"
        ],
        "Introduction(AWS AI)": [
          "Introduction"
        ],
        "ML(Amazon Comprehend)": [
          "Amazon Comprehend",
          "Practical: Amazon Comprehend"
        ]
      },
      "requirements": [
        "Nothing required at all! but if you have a background in computer science or development, it would be beneficial, but not required at all.",
        "AWS Account"
      ],
      "description": "In today's world, use of Machine Learning, Artificial intelligence and Big data Analytics is bound to grow from here in our daily business environment. And to combat this, it is essential to have Big data analyst, ML & AI experts in the field. So if you have always been keen on sharpening your skills in this field or simply accelerate your growth in this career choice, then ENROLL this course now.\nThis learning path offers practical hands on [projects with also covering the theoretical concepts about all the services of Analytics and Machine Learning which is being offered by AWS Cloud.\nWhy Big data analytics is important?\nBig Data is everywhere and to extract meaningful insights is the basic necessity for the business as it aids in improving business, decision makings and providing the biggest edge over the competitors. This applies to organizations as well as professionals in the Analytics domain. For professionals, who are skilled in Big Data Analytics, there is an ocean of opportunities out there.\nWhy Machine Learning is important?\nMachine learning has several very practical applications that drive the kind of real business results – such as time and money savings – that have the potential to dramatically impact the future of your organization. Machine learning engineer and data scientist are the highest paying jobs.\nIn this learning path, you will deploy a wide range of services related to ML and analytics like\nAnalytics tools are -\nAmazon Athena (Querying data instantly and get results in seconds)\nAmazon CloudSearch (Makes it simple and cost-effective to set up, manage, and scale a search solution for your website or application)\nAmazon ElasticSearch (Search, Analyze, and Visualize data in real-time.)\nAmazon Kinesis (Easily collecting, processing, and analyzing video and data streams in real time)\nAmazon QuickSight (Fast, Cloud-powered BI service that makes it easy to build visualizations and quickly get business insights from your data.)\nThis course also contains many practicals to groom your analytic skills.\nMachine Learning Services are-\nAmazon Sagemaker to build, train, and deploy machine learning models at scale\nAmazon Comprehend for natural Language processing and text analytics\nAmazon Lex for conversational interfaces for your applications powered by the same deep learning technologies as Alexa\nAmazon Polly to turn text into lifelike speech using deep learning\nAmazon Rekognition (Object and scene detection, Image moderation, Facial analysis, Celebrity recognition, Face comparison, Text in image and many more)\nAmazon Transcribe for automatic speech recognition\nAmazon Translate for natural and accurate language translation",
      "target_audience": [
        "Anyone who is curious to experiment with Artificial Intelligence and develop applications or simply interested in exploring AWS Machine Learning and Analytics and its powerful services available on AWS Cloud."
      ]
    },
    {
      "title": "Full Stack Web Development Using DJANGO",
      "url": "https://www.udemy.com/course/full-stack-web-development-using-django/",
      "bio": "Project Based Learning",
      "objectives": [
        "Full Stack Web Development using Django Framework",
        "Working with Django Models and Forms",
        "Django Authentication, Filtering Pagination and much more",
        "Knowledge of Django Decorators",
        "Deploying Django Project on PythonAnywhere platform"
      ],
      "course_content": {
        "Full Stack Web Development using DJANGO": [
          "Course Introduction",
          "Creating a Django Project",
          "Django Folder Structure",
          "Routes Creation in Django",
          "Sending Back HTML File using Render Function",
          "Applying Bootstrap Styling",
          "Creating a Responsive Navbar",
          "Designing Carousel Section: Part 1",
          "Bootstrap Carousel: Part 2",
          "Bootstrap Carousel: Part 3",
          "Bootstrap Carousel Sliding Animation",
          "Django Model",
          "Creating a Superuser",
          "Handling Image File Upload",
          "Adding Product in Database",
          "Fetching Information from Database",
          "Rendering Card: Part 1",
          "Rendering Card: Part 2",
          "Rendering Card: Part 3",
          "Optimizing Card Section",
          "Footer Section: Part 1",
          "Footer Section: Part 2",
          "Footer Section: Part 3",
          "Django Pagination: Part 1",
          "Django Pagination: Part 2",
          "Contact Us Page: Part 1",
          "Contact Us Page: Part 2",
          "Contact Us Page: Part 3",
          "Django Authentication: Part 1",
          "Django Authentication: Part 2",
          "Django Authentication: Part 3",
          "Django Authentication: Part 4",
          "Decorators in Django: login_required",
          "Styling the Brand Text",
          "Search Bar Functionality",
          "Optimizing Nav Bar",
          "Project Deployment: Part 1",
          "Project Deployment: Part 2",
          "Project Deployment: Part 3",
          "Working with SECRET Key"
        ]
      },
      "requirements": [
        "Basic knowledge of web development (HTML, CSS and JS) and Python"
      ],
      "description": "This course provides in depth exposure to Django web development framework.  Django is a Model View Template (MVT) architecture-based web framework.  It is currently maintained by Django Software Foundation. You will get to learn key concepts of Django framework and best practices that needs to be followed for writing clean code and securing the website that you create in this course. You will learn concepts like: Setting up a Django project, Django Models, Handling Forms, Django Authentication, Pagination, Filtering, Handling Django Admin Panel, Decorators and much more. It also covers concepts of using Bootstrap framework in a Django project so that you can design responsive web applications with ease. You will also learn the concepts related to hosting Django Project on PythonAnywhere server. It also provides a brief overview of using GitHub via terminal commands for hosting the Git repository that is created for the Django project. The course has been designed keeping in view the needs of students and entry level web developers so that they can learn the Django fundamentals in a step-by-step manner.  The course has been done in a project based and hands on manner so that you can learn the skills by applying the concepts on a project.",
      "target_audience": [
        "Anyone who wish to get into the field of web development using Python and Django Framework"
      ]
    },
    {
      "title": "Python for web development (Flask framework)",
      "url": "https://www.udemy.com/course/python-for-web-development-flask-backend/",
      "bio": "Build Facebook-like websites or SaaS platforms with Python Flask Framework (databases, forms, front-end, ...)",
      "objectives": [
        "Building a website from scratch to production",
        "Connecting a website to databases",
        "Setting up a server to host a Python application",
        "Connecting a back-end and a front-end",
        "Using Python for sending emails and text messages",
        "Receiving information through contact forms"
      ],
      "course_content": {
        "Introduction & context": [
          "Introduction",
          "Website structure",
          "Python refresher course"
        ],
        "Flask framework for web development": [
          "Introduction to Flask framework",
          "Receiving information from front-end",
          "Connecting HTML templates to your back-end",
          "Connecting a contact form to your back-end",
          "UX, UI & SEO notes"
        ],
        "Sending emails & text messages": [
          "Sending emails with a mail instance (Flask needed)",
          "Sending emails outside the app context (Flask not needed)",
          "Sending text messages with Twilio"
        ],
        "Connecting to databases": [
          "Connecting to a database with SQLAlchemy (recommended)",
          "Connecting to a MySQL database",
          "Connecting to a PostgreSQL database outside the app context (Flask not required)",
          "Connecting to a MongoDB database"
        ],
        "Scaling your Python Flask app": [
          "App package structure & Blueprints",
          "User Authentication & Login",
          "Dynamic Python variables within HTML",
          "Git, GitHub & Collaboration"
        ],
        "Putting your Python app to production": [
          "Theory of production",
          "Production on Python Anywhere (uWSGI & nginx pre-installed)",
          "Production on Planet Hoster (nginx pre-installed)",
          "Production on Digital Ocean (from scratch)",
          "Production on AWS",
          "Connecting Google Analytics & Facebook Pixel"
        ],
        "Wrapping up": [
          "Conclusion",
          "Course book & code"
        ]
      },
      "requirements": [
        "Python language or familiar with other programming languages"
      ],
      "description": "Even though low-code and no-code technologies are becoming more and more popular, ambitious projects need a platform or a website that is coded from scratch. This course focuses on building such ambitious projects by giving you the tools that you need to create Facebook-like websites or SaaS services.\nThis course offers practical solutions to the most challenging problems that you will meet while building a web application. With this course, you will understand why sites like Facebook or Amazon are not build with WordPress. You will understand how you can build a complete platform, connect it to a database and put it to production. This course is broken into 24 chapters that address all the subjects that you need to understand to build a complete web app. You will learn:\n- How to launch an \"hello world\" application\n- How to connect your application to your front-end\n- The best practices of programming within a team\n- How to connect your application to databases (MySQL, PostgreSQL, MongoDB)\n- How to send emails and text messages\n- How to scale your application\n- How to put your application to production with different providers (AWS, Digital Ocean, Planet Hoster, Python Anywhere)\nI have gathered in this course everything that I learnt in the last 3 years, wandering around thousands of forums and YouTube videos and debugging during thousands of hours. I have intentionally designed this course so that you can come back any time and find what you need in separate videos and course chapters. This course is part on an ongoing Python’s series including:\n- Python for web development (this course)\n- Python for web scrapping & advanced automation\n- Python for mobile app backends & APIs",
      "target_audience": [
        "Python and full-stack developers, engineering students, self-taught developers"
      ]
    },
    {
      "title": "WordPress Designs with Free Elementor 2025",
      "url": "https://www.udemy.com/course/wordpress-designs-with-elementor/",
      "bio": "Build Custom Websites Using WordPress and Free Elementor",
      "objectives": [
        "Learn How to Create a Website using Free WordPress",
        "Learn How to Install WordPress Locally (Without Paid Web Hosting and Domain)",
        "Learn to Create Customized Websites using Free Plugin Elementor",
        "Learn How to Build an E-Commerce Store with Full Functionality",
        "Learn How to Master Your Way to Become a WordPress Developer"
      ],
      "course_content": {
        "Introduction": [
          "Promotional Video",
          "Introduction",
          "What are the Benefits of Taking this Course",
          "What to Prepare before you Begin this Course"
        ],
        "Installing WordPress Environment Locally": [
          "How to Install the Latest XAMPP",
          "How to Use XAMPP",
          "How to Download and Install LocalWP",
          "How to Download and Install WordPress on Your Computer",
          "Install the Theme and the Elementor Plugin (Free Version)"
        ],
        "Let's Start Building Our E-Commerce Website": [
          "Setting the Home Page",
          "Flexbox in Elementor",
          "Grid Layout in Elementor",
          "Uploading Media Files",
          "Experimenting with Flexbox and Grid Layout",
          "Section Background and Overlay",
          "Create Background Carousel",
          "Let's create the Product Section",
          "Let's Create the Services Section",
          "Let's Make the Video Section",
          "Designing a Customized Footer",
          "Let's Add the Testimonial Section"
        ],
        "Let's Develop Our E-Commerce Website": [
          "Let's Change the Header of the Website",
          "Let's Change the Master Footer",
          "Let's Add a New Page",
          "Let's Add a Blog Post",
          "Let's Add WooCommerce Plugin",
          "Let's Create Product Links",
          "Let's Create a My Account Page",
          "Let's Troubleshoot some Issues and Permalinks"
        ],
        "What To Do Next": [
          "The Next Steps",
          "Leave A Review"
        ]
      },
      "requirements": [
        "Having Basic Knowledge in WordPress is Preferred",
        "No Prior Knowledge in WordPress is Welcome",
        "A Laptop or Desktop is Necessary for Projects",
        "Internet Connection is Required",
        "Additional Research on WordPress Basics is Recommended"
      ],
      "description": "Course Title: WordPress Designs with Free Elementor 2025\n\n\nCourse Description:\n\n\nUnlock your potential to design stunning websites without spending a dime on premium tools! In *WordPress Designs with Free Elementor 2024*, you'll learn how to build beautiful, functional websites from scratch using WordPress and the free version of Elementor—all on your local computer using XAMPP.\n\n\nThis course is perfect for beginners and those looking to expand their web development skills. You'll start with the basics of setting up WordPress locally and move on to creating fully customized pages using Elementor. We’ll also dive into the WooCommerce plugin, empowering you to build an online store to sell products, and cover the essentials of creating engaging blog posts.\n\n\nWhat You'll Learn:\nHow to set up WordPress locally using XAMPP.\nThe fundamentals of WordPress and Elementor.\nStep-by-step guidance on creating custom web pages with the free Elementor plugin.\nHow to install and configure the WooCommerce plugin to sell products online.\nTechniques for crafting compelling blog posts to engage your audience.\n\n\nWho This Course is For:\nBeginners with no prior experience in web development or WordPress.\nEntrepreneurs looking to create their own website without hiring a developer.\nFreelancers wanting to expand their skill set with WordPress and Elementor.\nBloggers and small business owners aiming to enhance their online presence.\n\n\nBy the end of this course, you'll have the skills and confidence to create professional-quality websites, complete with eCommerce functionality, all without spending money on premium plugins or themes.\n\n\nEnroll now and start building your dream website today!",
      "target_audience": [
        "This Course is for Beginners with Basic or No Knowledge in WordPress",
        "For those who likes to enhance their skills in designing websites using WordPress",
        "For those who like to become a WordPress Developer",
        "For those who want to establish their business online using WordPress Online Store",
        "For those who want to become a Freelance WordPress Developer"
      ]
    },
    {
      "title": "Master CSS: Understand How To Manipulate CSS Properties",
      "url": "https://www.udemy.com/course/premium-and-comprehensive-modern-html-css-course/",
      "bio": "From absolute beginner, you'll master CSS properties till you are a PREMIUM expert. Master the techniques of CSS.",
      "objectives": [
        "Understand how CSS properties work from scratch",
        "Be able to manipulate CSS selectors for styling purposes",
        "Harness the relative, absolute, fixed, sticky position properties",
        "Understand the concept of box model in CSS",
        "Be able to work with CSS length units – rem, em, px, %, vh, vw, pc, pt",
        "Fully comprehend how to create equal and unequal columns with responsiveness in mind",
        "Understand how CSS Animation work and how to work with keyframes",
        "Be able to work with 2D and 3D transforms (rotate, skew, scale, translate, matrix)",
        "Be able to make shapes with the CSS clip path property",
        "Fully harness the power of CSS Media (@media) Query to make your web design mobile friendly and responsive",
        "Improve your skill on creating navigation bars and mega menus",
        "Be confident on how to add media (video, audio and images) to a webpage with CSS"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "There is NO flexbox or Grid in this course - IMPORTANT Watch this before you buy",
          "Projects we will create - part 1",
          "Projects we will create - part 2",
          "Projects we will create - part 3",
          "Projects we will create - part 4",
          "Projects we will create - part 5",
          "Introduction to the tools you can use for this course",
          "Getting familiar with Visual Studio code",
          "Importing the lesson folder into the visual studio code"
        ],
        "Introduction to CSS and styling in CSS": [
          "Introduction to CSS",
          "Minifying my CSS code on one line",
          "Inline and Internal CSS styling",
          "External and @import CSS styling"
        ],
        "CSS colors": [
          "CSS colors introduction",
          "Colours - Keywords and Hexadecimal",
          "Colours, opacity and websafe colours",
          "Colours - RGB( ) function",
          "Colours - HSL( ) function - part 1",
          "Colours - HSL( ) function - part 2",
          "Colours - HWB() function"
        ],
        "Font properties": [
          "Font Properties Introduction",
          "Font-size, Font-style and Font-variant",
          "Font-weight and line-height",
          "Font Family",
          "Shorthand Font Property",
          "Google Fonts",
          "Understanding unset, initial and inherit CSS values"
        ],
        "CSS Length Units": [
          "Length units introduction",
          "CSS Absolute Length Units",
          "CSS Relative Length unit _ REM",
          "CSS Relative Length unit _ EM",
          "CSS Relative Length unit_EX and CH - part 1",
          "CSS Relative Length unit_EX and CH - part 2",
          "CSS Percentage Length unit",
          "CSS Viewport Length unit - VW and VH",
          "CSS Viewport Length unit - VMAX and VMIN"
        ],
        "Text properties": [
          "Text Properties introduction",
          "Text-align and Text-transform",
          "Text-indent, Letter-spacing and Word-spacing",
          "Text-decoration",
          "Text shadow and Box shadow",
          "Text-emphasis",
          "Text-stroke property",
          "Word-wrap and Word-break",
          "White-space"
        ],
        "CSS Rule": [
          "CSS Rule introduction",
          "Cascading Inheritance",
          "CSS Cascade Rule",
          "CSS Cascade Rule - part 2",
          "CSS Cascading rule between inline, internal and external styling",
          "Breaking the cascading rule with !important"
        ],
        "CSS Selectors (Basic to Advanced Selectors)": [
          "CSS Selectors Introduction",
          "Main types of selectors and their Specificity",
          "Comparing the power of the id, class and type selectors",
          "Grouping and combining selectors - part 1",
          "Grouping and combining selectors - part 2",
          "Merging selectors",
          "Relational selectors - descendant",
          "Relational selectors - direct child and 'not a child of'",
          "Relational selectors - adjacent and general sibling",
          "Structural child Pseudo Class - part 1",
          "Structural child Pseudo Class - part 2",
          "Structural child Pseudo Class - part 3",
          "Structural type Pseudo Class - part 1",
          "Structural type Pseudo Class - part 2",
          "Link Pseudo class selectors",
          "User Interface Pseudo class selectors",
          "Content-Textual Pseudo Element Selectors",
          "Specialized Selectors",
          "Disabling ::selection",
          "Attribute selectors - present, equals and contains",
          "Attribute selectors - begins with and ends with",
          "Attribute selectors - includes and hyphenated",
          ":has() pseudo class selector",
          "Application of :has() with :root element",
          "Nested selector"
        ],
        "Font Awesome Icons": [
          "Font Awesome Icons - Important!!!",
          "Font Awesome Styling - part 1",
          "Font Awesome Styling - part 2",
          "Font Awesome Styling - part 3",
          "Font Awesome Styling - part 4"
        ],
        "Google Material Symbols and Icons": [
          "Introduction to Google Material Symbols and Icons",
          "Google Material Symbols",
          "Google Material Icons"
        ]
      },
      "requirements": [
        "No programming skill required. This premium CSS course will teach you from scratch. Please this course DOES NOT include flexbox and grid. I built another course for that.",
        "You will require a PC, a text editor like Visual Studio Code, or Sublime text, Brackets, Notepad++.",
        "Your incisive need to learn and explore is needed.",
        "Using an earpiece/headset to listen to the course will help your focus and have more control over your volume"
      ],
      "description": "Please this course DOES NOT include flexbox and grid. I built another course for that.\nIf you are looking for a course with flexbox and grid, then you can buy my other course titled: Mastery of Flexbox and Grid (2 in 1 course) - Easy Guide\nWhat people say about this course:\n\"This is probably the most comprehensive course ever made. Everything is taught from the most basic concepts like colors, font, etc. to some of the most advanced concepts. The instructor is a gem too! His playful energy while teaching contributed to a good learning experience. This course is definitely worth a try!\" - Sarthak R.\n\"The enthusiasm is infectious : ) Love it! Thank you for already inspiring me!\" - Savannah A.\n\"This instructor is extensive in his training. He was able to command my attention throughout the entire course...\" - Lou S.\n\"Very detailed course.\" - Grig F.\n\"Thank you for providing this very in-depth course.\" - Kyle U.\n\"This course conveys such a profound CSS knowledge and wisdom - incredible. A true treasure chest. OK - you have to get up two hours earlier for two months to get the large scope of the course :=) But at the end you are free. Free from all uncertainties how CSS things work under the hood for your own projects and free from all pre-chewed Bootstrap-things. In addition you are best prepared for the next steps on the ladder to frontend heaven: Flex and Grid. I already started Pamch's Follow-Up-Course. Thank you! Thank you! Thank you!\" - Rainer S.\n\"The video is super super great .I have not seen any course better than this pamch Tutor M.Ed course .He is amazing\" - Rabeeah Mohammed Y.\n\"Mind blowing content\" - Priyanka S.\n\n\nThis course is designed to make you a top-notch and world class standardized web designer with HTML and CSS as your tool. If you want to be a mobile-first website designer, then this course is for you. With the skills you will gather from this course, you can proudly create any web site design from start to finish. It is an assurance because this CSS course is modern, precise, well explained and well structured. In this course you will also get a free access to my free HTML course just in case you are new to HTML or you want to brush up your HTML skills.\nThis is a detailed course showing you step by step patterns, hence this is a premium CSS course. I don’t just want you to watch. I encourage you to code along.\nWhat you will learn.\nYou will thoroughly learn how to create equal and unequal columns using both the float and inline-block property.\nYou will learn how to create image gallery and video gallery with columns\nYou will thoroughly learn how to work with 2D and 3D transforms, transitions and animations\nYou will thoroughly learn how to make shapes with clip path property\nYou will thoroughly learn how to use the CSS Media Query to make your web design mobile friendly and responsive. This means mobile-first approach.\nYou will thoroughly learn how to create navigation menus – horizontal, vertical and mega menus\nYou will learn how to add images and videos to mega menus\nYou will thoroughly learn how to create gradients – linear (), Radial (), and conic () gradients\nYou will thoroughly learn how to create CSS accordions and tooltips (top, bottom, left and right tooltips)\nYou will thoroughly learn how to design price tables\nYou will thoroughly learn about the box model and the importance of box-sizing property\nYou will learn how to reference CSS with inline, internal and external styling and also learn how to import CSS\nYou will learn how to work with colors – Hexadecimal, RGB, HSL, HWB color keywords\nYou will thoroughly learn how to work with font properties – font-size, line-height, font family, font-weight\nYou will thoroughly learn how to work with text properties and word properties\nYou will thoroughly learn how to work with CSS length units – rem, em, px, vh, vw, pc, pt\nYou will thoroughly learn how to import font awesome in order to incorporate it in your design\nYou will thoroughly learn how to import Google fonts as part of your font family\nYou will thoroughly learn the types of selectors and how to combine them for ease of use\nYou will thoroughly learn how the cascading rule works\nAnd so much more.",
      "target_audience": [
        "Beginners in CSS who want to design the future of the web"
      ]
    },
    {
      "title": "Rust: Develop Programming Skills with Rust",
      "url": "https://www.udemy.com/course/rust-develop-programming-skills-with-rust/",
      "bio": "Build your programming foundation in a safe and fast Systems Programming Language Rust",
      "objectives": [
        "Write effective and memory-safe code using Rust",
        "Learn how to organize your application in crates and modules",
        "Understand object-oriented programming, immutability, and traits in Rust",
        "Write highly scalable network programming",
        "Build dependency management with Cargo",
        "Test HTTP and Web sockets in Rust",
        "Write a non-asynchronous echo server over TCP",
        "Modify an existing Rust HTTP server and add SSL to it",
        "Master asynchronous programming support in Rust",
        "Learn how to use external packages in a Rust project"
      ],
      "course_content": {
        "RUST: The Easy Way": [
          "The Course Overview",
          "Introduction to the Rust Language",
          "Setting Up Rust on Your PC",
          "Managing Dependencies with Cargo",
          "Writing Your First Rust Program: Hello, Rust!",
          "Immutability and Variables",
          "Data Types and Operators",
          "Conditionals and Loops",
          "The Match Operator",
          "Strings, Arrays, and Vectors",
          "Using Ownership and Scopes",
          "Writing Functions and Modules",
          "Structures and Enums in Rust",
          "Creating Your Own Crates",
          "Testing Your Application with Cargo",
          "Understanding Generic Data Types",
          "Introducing Lifetimes",
          "Using Traits in Your Rust Program",
          "Concurrency 101",
          "Minesweeper – Program Workflow",
          "Implementing the Controls and Interactions",
          "Testing the Application",
          "Troubleshooting Errors",
          "Test Your Knowledge"
        ],
        "Introduction to Rust Programming": [
          "The Course Overview",
          "Hello, Robot!",
          "More Rust Syntax",
          "Rust's Module System",
          "Rust's Standard Library",
          "Building with Cargo",
          "Dependency Management with Cargo",
          "Shopping on crates.io",
          "Testing with Cargo",
          "Memory Safety and Borrow Checker",
          "Concurrency Safety and the Borrow Checker",
          "Safe Programming Through Contracts",
          "Protocol and Pattern Matching",
          "Advanced Traits",
          "Actors and Message Passing",
          "Packing and Unpacking Message",
          "Advanced Concurrency Management",
          "Applying Personality with Rand",
          "Documenting with Style",
          "Beautifying Our Output",
          "Blocking and Non-Blocking IO",
          "Working with the Mio Framework",
          "The HyperWeb Framework",
          "How Hyper and Mio Work",
          "Shaping up the Web Server",
          "Plugging in WebSockets",
          "Adapting the Simulator",
          "Test Your Knowledge"
        ],
        "Network Programming with Rust": [
          "The Course Overview",
          "Layering in Networks",
          "Addressing in Networks",
          "How DNS Works?",
          "Common Service Models",
          "Getting Started with Rust",
          "Introduction to the Borrow Checker",
          "Generics and the Trait System",
          "Error Handling",
          "The Macro System",
          "Functional Features in Rust",
          "Concurrency Primitives",
          "Testing",
          "A Simple TCP Server and Client",
          "A Simple UDP Server and Client",
          "Miscellaneous Utilities in std::net",
          "Serialization and Deserialization Using Serde",
          "Parsing Textual Data",
          "Parsing Binary Data",
          "Remote Procedure Call (RPC)",
          "SMTP",
          "FTP and TFTP",
          "Hyper",
          "Rocket",
          "Introduction to reqwest",
          "Looking into the Future",
          "Heading to Tokio",
          "Securing the Web",
          "Cryptography Using Ring"
        ]
      },
      "requirements": [
        "No prior knowledge of Rust is required."
      ],
      "description": "Rust is an empowering language that provides a rare combination of safety, speed, and zero-cost abstractions. It is applicable to areas such as embedded programming, network programming, system programming, and web development. If you're a developer who wishes to build a strong programming foundation with this simple yet powerful programming language Rust, then this learning path is for you.\nThis course is designed to teach you the fundamentals of Rust and use them to build powerful Rust applications and networking software. You will start by learning concepts such as enums, functions, loops, arrays, data types, basic data structures, and working with strings. You will then learn how to write object-oriented code, work with generics, conduct pattern matching, and build macros. Next, to enhance your programming skills, you will build some concurrent, fast, and robust applications in Rust. Finally, you will learn high-performance networking concepts in Rust to build effective networking software.\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, RUST: The Easy Way, covers the fundamentals of the Rust programming language, its core concepts, and best coding practices. It starts with the basics and goes on to explain how to get started by developing a simple Rust program. You will also learn immutability, conditionals, loops, arrays, and strings to enhance your programming skills. Moving ahead, you will get a deeper understanding of Rust, by acquiring knowledge of structures, enums, and functions. Furthermore, you will learn to test your programs using Cargo. Additionally, you will get an experience of generic data types, the idea behind lifetimes, and concurrency in Rust.\nIn the second course, Introduction to Rust Programming, you will learn to build concurrent, fast, and robust applications. You will begin by learning the essentials of the language, including high-performance networking. You will then get a detailed explanation of the fundamentals of Rust programming. You will also learn how to write object-oriented code, work with generics, conduct pattern matching, and build macros.\nThe third course, Network Programming with Rust, will get you started with building networking software in Rust by taking you through all the essential concepts.\nBy the end of this course, you will be able to build your own robust applications and effective networking software with Rust.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nAdnan Kičin is a software developer based in Sarajevo, Bosnia and Herzegovina. He is an active member of the programming community in Bosnia, and he has been organizing and hosting the Open Web Sarajevo Meetup for over a year now. He also co-hosted Sarajevo's first Hacktoberfest last year and organized the first Quora Meetup in Bosnia. Adnan has also been programming in C and C++, and to prevent himself from getting rusty, he started using Rust.\nSyed Omar Faruk Towaha has degrees in Physics and Computer Science and Engineering from Shahjalal University of Science and Technology. He is currently working as the Chief Technology Officer at an IT company in his city while working remotely with a Chinese company as a hardware designer. He has a number of publications from different publications. His recent publications include Learning C for Arduino, JavaScript Projects for Kids, Fundamentals of Ruby, Easy Circuits for Kids, How you Should Design Algorithms, and so on. Previously Syed worked a number of companies as either software engineer or technical advisor. He volunteers Mozilla as a Reps. Syed has proved his experience in various fields such as Mobile Application Developments with Java, Kotlin, Objective C, Swift, AngularJS, Ionic, and so on. He has excelled in Software Development with C#, .NET, Java, C++, and Python. He designed a number of ICs’ and EDA’s layouts over last 4 years.\nAbhishek Chanda studied computer science at IIEST Shibpur in India and electrical engineering at Rutgers University. He has been working on networking and distributed systems since 2008. Over his career, he has worked with large companies (like Microsoft and Dell) and small startups (Cloudscaling, DataSine) in India, US, and the UK. He is enthusiastic about open source software and has contributed to a number of projects like OpenStack, Nomad etc. He contributes to a number of open source projects. He came across Rust in 2015 and found it to be a perfect fit for writing highly performant systems.",
      "target_audience": [
        "This course is for developers who wish to write their applications in Rust."
      ]
    },
    {
      "title": "Learning KnockoutJS",
      "url": "https://www.udemy.com/course/learning-knockoutjs/",
      "bio": "Create powerful data-driven web applications using KnockoutJS, with the help of real-world examples",
      "objectives": [
        "Use the Model-View-ViewModel software design pattern to build amazing web applications and powerful user interfaces",
        "Configure your application to track the changes in the UI and update data automatically",
        "Enhance the functionality of your app and make it more interactive by extending the components of your code"
      ],
      "course_content": {},
      "requirements": [
        "Some understanding of jQuery and AJAX would be helpful, but is not necessary."
      ],
      "description": "Among the various JavaScript libraries available to developers, KnockoutJS really stands out due to the diverse features it provides and also because it promotes the use of the Model-View-ViewModel (MVVM) design pattern to build data-driven web applications. Construct power-packed apps without compromising on its flexibility and build rich user interfaces, which will update in real-time when the data model state changes, eliminating the need to refresh pages.\nLearning KnockoutJS will walk you through all of the key features of KnockoutJS and make it easy for you to quickly and easily build feature-and data-rich web applications that are easy to extend and maintain.\nWe start off with a brief introduction to KnockoutJS, and its various benefits, and explore the different design patterns in context of KnockoutJS to make your JavaScript code cleaner and more manageable. After that, we will walk through and understand the relationship between Models, Views, and ViewModels, as well as creating them.\nAlong with that, you will also learn how we can use the different data binding attributes to manipulate the output. We will also discuss and implement various important concepts such as two way data binding and dependency tracking to update your UI in real-time and to separate the components of your application into logical parts.\nWe will analyze Knockout's template feature to help you deal with data context in most scenarios. Then, we will take a look at how to track the changes in dependencies and subscribe to them using computed observables and subscriptions. Furthermore, you will also learn how to customize bindings and functions as well as using extenders to create our own set of Knockout tools. Finally, we will take a look at some advanced features of KnockoutJS to take your knowledge to the next level!\nLearning KnockoutJS is more than just an introduction; it's a complete course on one of JavaScript's innovative libraries.\nAbout The Author\nRobert Gaut is a father, husband, musician, photographer, martial artist, and software developer. He began his career teaching application and database development at a technical college. After several years teaching, he spent more than a decade developing web-based content management systems for the automotive industry. He currently works for a large public school district where he develops business applications and data integration processes using Microsoft technologies.",
      "target_audience": [
        "If you have ever wanted to create rich, responsive, and dynamic user interfaces without mixing a lot of script, this course will give you everything you need to accomplish that goal with Knockout.JS. Users will need basic knowledge of JavaScript and HTML."
      ]
    },
    {
      "title": "Learn Complete Web Development Course Using PHP/MySQL",
      "url": "https://www.udemy.com/course/learn-complete-web-development-course/",
      "bio": "Master in PHP OOPs, MYSQL, cPanel. Learn to build Real time website development.",
      "objectives": [
        "Build a complete website using classes and objects",
        "Understand the concepts behind object oriented",
        "A complete step by step project in PHP and MySQL for beginners",
        "You will learn to build a complete Review system",
        "You will learn to build a complete login and registration system",
        "You will learn how to use cookies and sessions .",
        "All Fundamentals and Building Blocks with practical implementation in Projects",
        "Learn how to structure your code using object-oriented programming techniques",
        "Arrays, Multidimensional Arrays, Sorting Arrays",
        "else if, Switch, Statements",
        "SQL Statements - Select, Where, And, Or, Insert, Get Last ID",
        "and much more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To The Course",
          "What is PHP",
          "What are Front-End and Back-End Languages",
          "Environment Setup"
        ],
        "Fundamental of PHP": [
          "PHP echo(Run Hello world)",
          "PHP Comments",
          "PHP Variable and its type",
          "Embedding PHP within HTML",
          "Case Sensitivity in PHP",
          "PHP echo & Print Statement",
          "What are Die and Exit Functions in PHP",
          "Basic DataTypes in PHP",
          "PHP Constants",
          "Coding Challenge #1"
        ],
        "Operators in PHP": [
          "Operators in PHP(Arithmetic Operators )",
          "Operators in PHP(Assignment Operators )",
          "Operators in PHP(Comparison Operators)",
          "Operators in PHP(Incrementing and Decrementing Operators)",
          "Operator in PHP (Logical Operators)",
          "Operator in php (String Operators)",
          "Coding Challenge # 2"
        ],
        "Beyond The Basics": [
          "PHP Get Method",
          "PHP Post Method",
          "Create Form In PHP",
          "Global and local Variable"
        ],
        "Control Structures In PHP": [
          "If Statement",
          "Else Statement",
          "If Else if Statement",
          "Switch Statement",
          "For Loop",
          "For Each Loop",
          "Nested For Loop",
          "While Loop",
          "Do while Loop",
          "PHP Arrays",
          "PHP Associative Array",
          "PHP Multidimensional Array",
          "PHP Sorting Array",
          "Create a Table with help of For loop",
          "Coding Challenge #4"
        ],
        "Functions In PHP": [
          "Defining and Creating a Function In PHP",
          "Functions with Parameters",
          "Passing Arguments by Reference",
          "Functions returning value",
          "Functions with Optional Parameters and Default Values",
          "Dynamic Function Calls",
          "PHP anonymous functions",
          "PHP Variable Scope",
          "PHP Recursive Functions",
          "Coding Challenge 5"
        ],
        "Extra Knowledge You should know about PHP": [
          "PHP Break",
          "PHP Continue",
          "PHP Math Operations",
          "Coding Challenge #6"
        ],
        "Working with HTML Forms": [
          "HTML Forms",
          "Form Handling",
          "Forms Required",
          "Coding Challenge #7"
        ],
        "Advanced PHP": [
          "PHP Include File",
          "PHP Include File",
          "PHP Cookie",
          "PHP Session",
          "PHP Date and Time",
          "PHP Filters",
          "Custom Error Handling",
          "Exceptions Handling"
        ],
        "PHP File": [
          "PHP Open File",
          "PHP Write,Overwriting & Append File",
          "PHP Delete File",
          "PHP File Upload",
          "PHP Download File",
          "File Size"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome To Learn Complete Web Development Course Using PHP/MySQL ultimate practice on problem-solving.\nAre you new to the programming language or need a refresher? Then this course will help you get all the fundamentals of web development, Object Oriented PHP, MYSQLi.\nLearn to create a Review System, log in and Registration system, Shopping Cart, and much more. I will teach you how to live website in cPanel.\nThe Course contains 15.5+ hours of interactive video content & dozens of coding exercises, teaching you the right tips & tricks in problem-solving in the most concise way. fundamentals, including syntax and variable declaration, objects, arithmetic operators, conditional statements, loops, functions, and arrays. and then go more Advance Like OOP, MYSQL, Database, And Project base. and ends with a hands-on coding video as well.\nOne of the most powerful server-scripting languages requires an equally powerful course to help break down the tricky concepts of Object Oriented website development in a step-by-step manner to help you master OOP.\nTake your Projects Skills to the Next Level After completing this course, you will have the necessary skills to be able to create your own web applications with PHP and MySQL. The course is taught by an expert instructor Funky Programmer.",
      "target_audience": [
        "Developers who want to excel in problem solving skills & competitive coding",
        "Students pursuing Computer Science or related fields",
        "Anyone wanting to learn both the PHP language and how to create web applications",
        "Beginner-Intermediate level programmers with basic knowledge of PHP"
      ]
    },
    {
      "title": "ASP.NET Core - Build Hands-On Web Projects",
      "url": "https://www.udemy.com/course/aspnetcore-31-build-hands-on-web-projects/",
      "bio": "Learn the Concepts and Create Real Life Razor Pages, Web API and Razor CRUD Applications Using ASP.NET 8.0",
      "objectives": [
        "The students will learn everything that is critical in the ASPNET Core 3.1 framework. They will learn middleware, model-binding, session and state management",
        "Practical hands-on application with Razor pages and MVC templates",
        "The students will learn a critically demanding topic of creating their own web Api with a real SQL database to perform CRUD operations.",
        "They will then learn to create the client MVC application within the same Visual Studio solution to consume the API created in the previous section.",
        "The students will learn adodotnet technology and use of stored procedures in a database for CRUD operations."
      ],
      "course_content": {
        "Introduction": [
          "Encouraging Constructive Feedback: A Message to Our Udemy Students",
          "Updates to Keep the Course Current in ASP.NET 8",
          "Course Title Change and Migration to ASP.NET 6.0",
          "Course Descriptor and Scope",
          "Who Am I?",
          "Setting Up the Development Environment",
          "Introduction"
        ],
        "Create and Take a Deep dive into Your First ASP.NET Core 3.1 Application": [
          "Understanding the New Look Project File",
          "The Program Class and Host Object",
          "The Startup Class - How to Configure Services",
          "The Startup Class - Defining the Middleware Pipeline",
          "How Razor Pages Generate Response",
          "Section Summary",
          "Assignment 1: Assess your understanding of the ASP.NET Core 3.1 Web Project"
        ],
        "Middleware in ASP.NET Core 3.1": [
          "About Middleware",
          "Asynchronous Programming through Console Application",
          "Request Delegate Usage for Inline Middleware",
          "Create Your Custom Middleware",
          "Understand the Behavior on Combining Middleware",
          "Test Your Middleware Knowledge"
        ],
        "Detailed look into the into Razor Pages and MVC Application": [
          "Create a ToDo List Razor Pages Application",
          "Build a Complete MVC ToDo List Application",
          "Assignment : Razor Pages",
          "Assignment : MVC Application"
        ],
        "Model Binding in ASP.NET Core": [
          "Model Binding Introduction",
          "Integrating Microsoft GitHub Repository Sample Code",
          "Announcing Release of ASP.NET 6",
          "Match the Columns A & B"
        ],
        "State Management in ASP.NET Core": [
          "What is State Management of a Web Application ?",
          "Cookies for State Management",
          "State Management (Session State)",
          "Query Strings for State Management",
          "Hidden Fields for State Management",
          "Assignment on State Management"
        ],
        "Coding Project Part 1: Build a Web API": [
          "Introduction: Build and Consume a Web API using ASP.NET Core and ADO.NET",
          "Create a Web API",
          "Understand the SQL Server Database Tables",
          "Understand the Stored Procedures for CRUD operation",
          "Create the Customer Model Class",
          "Create the Order Model Class",
          "Create the ICustomerRepository Interface",
          "Create the IOrderRepository Interface",
          "Edit the appsettings.json File to Include the Connection String",
          "Error Logging in Web Api Project",
          "Integrating Serilog for Web Api Logging",
          "Create a Customer Repository",
          "Completing Customer Repository CRUD Methods",
          "Testing ADO.NET Coding Skills",
          "Create an Order Repository",
          "Completing Order Repository CRUD Methods",
          "Registering in Startup Class",
          "Creating the Home Controller",
          "Creating the Customer Controller",
          "Creating the Order Controller"
        ],
        "Coding Project Part 2: Consume the Web API Using an ASP.NET Core 3.1 MVC Client": [
          "Create an ASP.NET Core MVC Project",
          "Inspect the wwwroot",
          "The Shared Folder",
          "Views Folder - Other Files",
          "Controllers Folder",
          "Models Folder",
          "Create the Customer and Order Classes",
          "Edit the Layout File",
          "Configuring the Startup Class",
          "Modify the Home Controller",
          "Install Nuget Packages",
          "Edit Home Controller Index View",
          "Create the Customer Controller",
          "Create the Index View (Customer Controller)",
          "Create the GetCustomer Action Methods",
          "Create the View to Get Customer By Id",
          "Add Validation Attributes to Customer Class",
          "Create AddCustomer Action Methods",
          "Server Side Validation with AddCustomer View",
          "Client Side Validation of Customer Model",
          "Create UpdateCustomer Action Methods",
          "Create UpdateCustomer View",
          "Create the DeleteCustomer Action Method",
          "Test Your Knowledge on MVC Project Structure",
          "SQL Script Quiz",
          "Create the Order Controller",
          "Create Index View (Order Controller)",
          "Create GetOrder Action Methods",
          "Create GetOrder View",
          "Add Validation Attributes to Order Class",
          "Create AddOrder Action Methods",
          "Create the AddOrder View",
          "Testing Validation of Order Form Inputs",
          "Create UpdateOrder Action Methods",
          "Create the UpdateOrder View",
          "Create the DeleteOrder Action Method",
          "Client MVC App Assignment"
        ],
        "Bonus: Migrating the Project to ASP.NET 5": [
          "How to Migrate the Web API/MVC Project to ASP.NET 5.0 ?"
        ],
        "ASP.NET 6.0 Migration": [
          "Minimal Hosting Model of Migration to ASP.NET 6.0",
          "What is hot reload in ASP.NET 6 ?",
          "Migrating ASP.NET Core 3.1 to ASP.NET 6.0 (Current)"
        ]
      },
      "requirements": [
        "Visual Studio 2019 Community Version",
        ".NET Core 3.1 SDK or later",
        "MS-SQL Server (Developer or Express)",
        "SQL Server Management Studio",
        "Be able to understand and write C# code (or some other higher level Java /C++)",
        "Students should at least have a basic level of understanding of SQL queries and database structure"
      ],
      "description": "Hi there, I am Kaushik Roy Chowdhury. I am a Microsoft Certified Professional and hold a Master's Degree in Computer Science from Auckland University of  Technology (AUT), New Zealand.\nI have worked in the software development industry in New Zealand with some eminent companies on various permanent and contract assignments.\nThese are some of latest reviews for this course:\n\"Excellent course with explaining each and every thing very clearly. I recommend this to have this course. Also kaushik it would be great if we may have some courses with JWT and UI in React,or if it is already there then requesting you to share the course link.\" - Ankita\n\"An Excellent Course\"  - Mohamed Cisse\n\"Loving his class.\" - Anna Mann\n\"I'm Alfred and I must say I really love this course and it a blessing to me because this is what I've always wanted . thank you Udemy\"  - Alfred Kporhor\nAre you are a passionate software developer or an eager student of software with a passion for learning new cutting edge technology products, desiring to find your way through this ever-evolving and new web framework? This course will allow you to use ASP.NET Core 3.1 professionally for creating web applications using all the three project templates: Razor pages, Web API, and MVC.\nAt the time of originally creating this course, ASP.NET Core 3.1 was the current and latest stable framework version, forming the foundation of this course. Since then, Microsoft has released ASP.NET 6.0, the Long Term Support version, at the .NET conference in early November 2021. To keep in line with these releases, I have updated the content to reflect the latest advancements in the framework.\nThis course includes a comprehensive guide on how to migrate major projects from ASP.NET Core 3.1 to ASP.NET 6.0. Specifically, you'll learn how to migrate the major project—creating a Web API and consuming it with an MVC Client. The migration process, as demonstrated in the course, is straightforward and requires minimal effort.\nI have updated the course content to include a new section, Section 12, which covers building a Razor Pages Web Application in ASP.NET 8. This section includes features such as filtering, sorting, and pagination. My goal is to keep the course content updated from its initial publication, ensuring it remains relevant and valuable as new versions are released.\nA bonus section on building an e-commerce application with product cart, authentication and authorisation using ASP.NET 8 is also an addition worth higlighting.\nThis course begins with the objective to walk through the learner with the building of a few important ASP.NET Core concepts through coding example projects in Visual Studio 2019.\nThe course then leads them to build a Razor app to-do list with an in-memory collection. The same application is then built with MVC concepts to perform a comparative study between the two technologies.\nThereafter, the highlight of this course appears with a real-life project spanning over two sections and multiple lectures. The first section shows the building of a web API with sequential stages and hands-on coding and explanation. The Web API uses ADO  dotNET technology and SQL Server database with Stored Procedures. Entity framework has not been used because of two main reasons: There are plenty of courses and articles showing the use of Entity Framework Core (EF Core) in the market place. Secondly, ADO technology is what EF Core is built upon and proven to be at least as good performance-wise. Lastly, I have now introduced a section that shows how to use EF Core to build a Web API using ASP.NET 6.0. So the learners have a chance to learn both the popular technologies for applications that are database-driven.\nThe Web API has Serilog NuGet package integrated for structured error logging in text files. This project follows a repository pattern which is a best practice in Web development.\nThe second section (part) shows the consumption of the Web API by an ASP.NET Core 3.1 MVC application for CRUD operations (as the front end). This application saves and retrieves to/from the database used by the Web API thereby extending the idea for learners to consume public API's through an in-house MVC client.\nI have now added a section at the end on Creating a Web API with ASP.NET 6.0 using EF Core - Code First Approach.\nThe entire course has got a number of assignments, quizzes, and a practice test spread over the sections to self-assess learning.\nDownloadable code samples and links to free external resources have been provided wherever felt necessary.",
      "target_audience": [
        "All level of developers : Beginner - Intermediate - Senior having some knowledge of C# (1 year or more) having experience of working on aspnet platform.",
        "Any software engineering student willing to learn this new web framework from Microsoft.",
        "Learners aiming to switch over from Java/C++ background for professional or personal development."
      ]
    },
    {
      "title": "Beginners Guide to Test Driven Development",
      "url": "https://www.udemy.com/course/beginners-guide-to-test-driven-development/",
      "bio": "Learn TDD and implement the concepts on a live project",
      "objectives": [
        "Learn to use TDD in your projects",
        "Work on libraries such as Capybara and VCR",
        "Learn to use the third party testing services",
        "Learn to effectively use the testing principles to build more robust software"
      ],
      "course_content": {
        "Introduction to TDD": [
          "Introduction",
          "Introduction to core concepts",
          "Course Introduction",
          "Sample Application"
        ],
        "Hello TDD": [
          "Main Concepts",
          "Types of Tests",
          "TDD in rails",
          "Laying Foundation"
        ],
        "Unit Tests - Models": [
          "First Model Test",
          "Test Database and Fixtures",
          "More about fixtures"
        ],
        "Functional tests": [
          "Introduction to Passwords and Sign in forms",
          "Cookies",
          "Testing record creation"
        ],
        "Integration tests": [
          "Signing in and out",
          "Registration",
          "Creating Subscriptions"
        ],
        "System tests": [
          "Setting Up",
          "Registration",
          "Signing in and out",
          "Working with subscriptions"
        ],
        "Other Examples": [
          "Testing mailers",
          "Testing Jobs",
          "Testing third party services",
          "Testing third party services - continued"
        ],
        "Summary": [
          "Wrapping Up",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of any programming language is required to use the concepts taught in the course",
        "Basic knowledge of Rails will be helpful"
      ],
      "description": "Master testing in an easy and simple way with this awesome Test Driven Development Basic Guide!\nAnytime a developer pushes through a new piece of code, he is often vary of breaking or creating bugs in his previous code. The hours that are spent trying to fix this new bug, can be brutal, which is why TDD is a great solution for any developer!\nTest Driven Development or TDD is the simple process of actually testing your code and your environment before you push or implement your new code. This shows you exactly what your code will do to your app even before the new code is published. So, in case you find an error, it can be fixed prior to implementation.\nIf you want to learn this brilliant and easy process that can change your life, then you have the right course!\nOur comprehensive guide to TDD will break down the test driven development process into simple and easy steps. Over 8 sections, you will learn exactly what you need for TDD, what exactly TDD is, how it works, benefits of using TDD, and even how to start writing your tests for testing.\nTDD ensures that developers can write codes that work well and ensures that there are no bugs when the code is actually implemented in to the app. TDD also makes it easier to fix buggy codes as there are fewer lines of code to deal with rather than trying to find errors from pages and pages of code.\nOur expert instructor breaks down TDD into simple and easy to learn components. Designed for beginners, the TDD tutorial will start at the very beginning assuming that you are a beginner, going through everything from the ground up ensuring that you are on top of the topic. The instructor also goes through everything and also ensures that there are examples at every turn to help you also have a hands-on experience.\nThe course covers important TDD concepts such as how to install a text editor, what is TDD, what are some best practices, different types of tests, start writing unit tests for your models & controllers, write integration tests and how they can test collaboration of different components, testing user behavior & how to simulate user behavior, how to test mailers, background jobs, and third party services by recording HTTP interaction using the VCR solution, and so much more.\nAt the end of this course, you will have not only the knowledge of TDD, but you will also learn how to design and different tests for your code.\nSo, let’s get started! Enroll now and learn how you can test your code!",
      "target_audience": [
        "Students who want to learn the core concepts of Test driven development will find the course very helpful"
      ]
    },
    {
      "title": "Cloudflare Essentials, Your Beginners Guide To Cloudflare",
      "url": "https://www.udemy.com/course/cloudflare-101-the-essentials/",
      "bio": "Your No-Hype Guide to Stop DDoS Attacks, Boost Site Speed, and Save on Hosting – All with FREE Cloudflare Tools!",
      "objectives": [
        "Various Rules to protect your website(s). Not just the how but why for better overall understanding of the building of the rule",
        "Configure rate limiting to protect login pages from brute-force attacks and bot traffic",
        "Transfer domains to Cloudflare Registrar for cost savings and faster DNS performance",
        "Set up Web Application Firewall (WAF) rules to block malicious traffic and specific countries",
        "Create redirect rules to manage site traffic efficiently without relying on WordPress plugins"
      ],
      "course_content": {
        "Introduction To Cloudflare and The Basics": [
          "Introduction-Some House Keeping",
          "A Quick Update",
          "2025-07-20 Some Dashboard Changes",
          "2025-03-24 Domain Level WAF has Moved",
          "Basic Fundamentals of The Cloudflare Free Plan",
          "What is a CDN - Content Delivery Network?",
          "What is Cloudflare",
          "How Cloudflare Works",
          "Accessing Cloudflare",
          "Adding a Domain or Site to your Cloudflare Account",
          "The WordPress Plugin for Cloudflare Quick Connect"
        ],
        "Core Security Features": [
          "Cloudflare's Free SSL",
          "Cloudflare Security Rules (formally known as WAF) - An Introduction",
          "Don't Lock Yourself Out - How to Find & Whitelist YOUR IP Address",
          "How to Create a List of IP Addresses (we're using them to whitelist our home IP)",
          "WordPress Login Protection Rule",
          "Rules: Rate Limiting & Why It Matters",
          "How To Limit Access to Staging and Development Sites",
          "How to Block or Challenge Entire Countries from Hitting Your Website",
          "How To Make Sure The 'Good Bots' Get to Your Website",
          "How to Find The Bad Bots to Block or Challenge"
        ],
        "Performance and Optimization": [
          "Caching Rules For a Faster Loading Website",
          "Compression Rules for a More Optimized Website",
          "Basic Site Settings For Speed & Caching"
        ],
        "Advanced Rules and Configuration": [
          "An Introduction to Cloudflare Rules",
          "Configuration Rules and Replacing the Legacy Page Rules",
          "Simple Redirect Rule",
          "Transform Rules and Security Headers (Request and Response Headers)"
        ],
        "Account Management and Security": [
          "Cloudflare Two-Factor Authentication (2FA)",
          "Adding Members or Additional Users to Your Cloudflare Account",
          "Adding Cloudflare Turnstile - The Captcha Killer"
        ],
        "Cloudflare Dashboard Overview and Navigation": [
          "Cloudflare Dashboard Tour",
          "Cloudflare Site Overview Page",
          "Cloudflare DNS Overview Page",
          "Cloudflare The Domain Registrar"
        ],
        "Bonus Cloudflare Rules For Various Needs": [
          "Security Custom Rule To Protect API Endpoint_No LONGER Needed",
          "Security Custom Rule To Block bad file types.",
          "Security Custom Rule To Block Suspicious File Access.",
          "Security Custom Rule To Block SQL Injection Attempts.",
          "Security Custom Rule To Block PHP Uploads.",
          "Security Custom Rule To Stop Directory Traversal.",
          "Security Custom Rule To Block EXE Uploads.",
          "Security Custom Rule To Challenge Old Browsers or the bots acting like one.",
          "Security Custom Rule To Stop Fake Social Logins.",
          "Security Custom Rule To Stop Crypto API Abuse.",
          "Security Custom Rule To Stop Image Hotlinking.",
          "Security Custom Rule Challenge CAPTCHA Bypass",
          "Security Custom Rule Stop PHP Error Exploits",
          "Security Custom Rule Stop XMLRPC Attacks",
          "Security Custom Rule Stop Sensitive Configuration Access",
          "Security Custom Rule Stop Malicious Query Parameters",
          "Security Custom Rule Stop Common Exploit Paths",
          "Security Custom Rule Stop Suspicious Query Strings",
          "Security Custom Rule Stop Executable File Types",
          "Security Custom Rule Stop Backup File Access",
          "Security Custom Rule To Stop or Block Empty User Agents"
        ],
        "Bonus Resources": [
          "Cloudflare Secret Sauce"
        ]
      },
      "requirements": [
        "The desire to learn and act on what you learn is or should be number one for everyone.",
        "Zero coding or engineering skills are required",
        "Internet connection and a computer is pretty much the only requirements."
      ],
      "description": "Are you tired of slow website loading times and worried about constant security threats? Do you manage a WordPress site (or a few!) and want to make it faster and safer without breaking the bank?\nThen this course is for you. I'll show you, step-by-step, how to use Cloudflare's powerful (and FREE) features to protect your site from attacks, dramatically improve performance, and even lower your hosting costs.\nForget complicated tech jargon and endless, outdated tutorials. This course is designed for practical, immediate results. I'll guide you through the Cloudflare dashboard with clear, concise \"how-to\" videos – no fluff, just actionable steps.\nHere's what you'll learn (and do):\nFortify Your Website's Defenses:\nSet up a basic Web Application Firewall (WAF) to block common attacks like SQL injections and cross-site scripting.\nWhitelist your own IP address so you never get accidentally blocked.\nBlock malicious traffic from specific countries (if needed for your business or compliance).\nEnable \"good bot\" access for search engines while stopping the bad ones.\nImplement two-factor authentication (2FA) for rock-solid Cloudflare account security.\nLearn about and enable key SSL/TLS settings\nTurbocharge Your Site Speed:\nConfigure Cloudflare's Content Delivery Network (CDN) to serve your content from servers closer to your visitors – globally.\nSet up caching rules to reduce server load and bandwidth usage.\nOptimize loading with the configuration rules.\nSimplify Your Workflow:\nManage key Cloudflare settings directly from your WordPress dashboard (using the free Cloudflare plugin).\nUnderstand how to transfer your domain registration to Cloudflare (optional, but can save you money!).\nAnd More Pro-Level (but Easy & Free) Tips:\nSet up \"Turnstile\" – a user-friendly alternative to those annoying CAPTCHAs.\nCreate custom rules for specific scenarios (like protecting your login page).\nGet a handle on Cloudflare's basic reporting to monitor security events.\nWho this course is for:\nWordPress site owners, managers, and developers (from bloggers to small businesses).\nNOTE: You do NOT Need a WordPress site for this course to help you configure the various 'None-WordPress' settings.\nAnyone who wants to improve website security and performance without needing a computer science degree.\nIT professionals looking to add Cloudflare skills to their resume.\nEntrepreneurs who want to protect their online assets and save on hosting expenses.\nWho this course is NOT for:\nAdvanced Cloudflare users looking for highly specialized, enterprise-level configurations. This is a foundational course focused on practical, everyday use.\nMy Promise to You:\nNo Hype, Just Results: I'll cut through the complexity and show you exactly what you need to do.\nDirect Access to Me: I'm active in the Q&A section. Ask me anything!\nExtra: Downloadable Quiz Book in the last Lecture that covers the entire course. The quiz - both True & False as well as Multiple Choice formats, will help you retain the stuff you learn throughout the course.\nReady to make your website faster, safer, and more efficient? Enroll today!",
      "target_audience": [
        "Anyone who wants to improve website security and performance without needing a computer science degree.",
        "IT professionals looking to add Cloudflare skills to their resume.",
        "Entrepreneurs who want to protect their online assets and save on hosting expenses.",
        "This Course is NOT for: • Advanced Cloudflare users looking for highly specialized, enterprise-level configurations. This is a foundational course focused on practical, everyday use."
      ]
    },
    {
      "title": "Learning Angular 7",
      "url": "https://www.udemy.com/course/learning-angular-7/",
      "bio": "Learn Angular 7 & build web applications that scale",
      "objectives": [
        "Develop an application from scratch using Angular 7 that allows you to create an assignment tracker",
        "Understand and use Angular Forms, Observables, Dependency Injection, and Routing",
        "Create components and use Angular to create powerful single page applications",
        "Retrieve data from a route and protect your routes with guard",
        "Retrieve, update, and delete data using Angular’s Http service",
        "Make your app look beautiful by using material design and Animations",
        "Discover new features to Angular including breakthrough features in Artificial Intelligence and Bitcoin mining!'"
      ],
      "course_content": {
        "Diving into Angular 7": [
          "The Course overview",
          "What is Angular?",
          "New Angular 7 Features",
          "Set Up Your First App with the CLI",
          "Style Your App Using Angular Material",
          "Get the Most out of This Course"
        ],
        "Creating Your First and Second Components": [
          "How to Create a Component",
          "Display your Data with Directives",
          "Conditionally Styling Elements",
          "Data Binding with Forms - Part 1",
          "Data Binding with Forms - Part 2",
          "Data Binding with Forms - Part 3",
          "Passing Data Between Components - Part 1",
          "Passing Data Between Components - Part 2",
          "Passing Data Between Components - Part 3"
        ],
        "Creating Your First Service": [
          "Learn How Services Work and Create Your First Service",
          "Moving Your Data to the Service and Injecting It",
          "Understanding Observables and How to Mock them",
          "ADD and UPDATE Assignments with Your Service",
          "DELETE Assignments with Your Service",
          "Injecting Services into Other Services"
        ],
        "Adding Routes to Your App": [
          "How Routes Work in Angular",
          "Initializing Your routes",
          "Navigating to Pages Dynamically",
          "Sending and Receiving Queries Through Routes - Part 1",
          "Sending Queries Through Routes - Part 2",
          "Protecting Routes - Part 1",
          "Protecting Routes - Part 2"
        ],
        "Making HTTP Calls to APIs": [
          "Setting Up Your Database and Using the API",
          "How the HttpClient Works in Angular",
          "Sending GET Requests",
          "Sending POST & PUT Requests",
          "Sending DELETE Requests",
          "RxJS Operators",
          "Error Handling and Http Headers"
        ],
        "Styling Your Application with Angular Material and Animations": [
          "Material Cards - Part 1",
          "Material Cards - Part 2",
          "Tabs in Material",
          "Create a Stepper",
          "Give Feedback with Snackbars"
        ],
        "New Features in Angular 7": [
          "Virtual Scrolling",
          "Drag and Drop- Part 1",
          "Drag and Drop- Part 2",
          "Other New Features",
          "Course Wrap-Up"
        ]
      },
      "requirements": [
        "Some basic knowledge of web development is assumed."
      ],
      "description": "This course will show you how to set up an Angular project, and you'll build Angular components with the latest version of Angular 7.\nIn this course, you’ll learn all the fundamentals about modules, directives, components, data binding, routing, HTTP access, and providing full CRUD operations. Then you’ll learn how to route dynamically, how to retrieve data from a route, and how to protect your routes with guards. Finally, you'll see how to use material components and animations to manage transitions to give the user a wow experience.\nBy the end of this course, you'll have a good understanding of Angular 7 and its features in general and you'll be able to build web applications.\nAbout the Author\nSam Orgill is a developer with over 10 years’ experience in web development. He began by helping develop websites for his father's company, which developed into successful side hustle while he was at university. He subsequently went into industry and developed his web development skills but has since gone freelance and has a passion for teaching others both the power of web development and the freedom a web development career brings.",
      "target_audience": [
        "This course is for JavaScript developers who want to learn Angular for web development, and developers who are new to web development and want to learn front end development with Angular 7. If you’re a web developer, whether you’ve worked with previous versions of Angular or not, this is a course for you to get up and running with Angular 7."
      ]
    },
    {
      "title": "Master Next.js for Beginners with projects",
      "url": "https://www.udemy.com/course/master-nextjs-with-projects/",
      "bio": "Build Scalable Web Apps with Next.js | Routing, Authentication, APIs, and Deployment",
      "objectives": [
        "Understand the Fundamentals of Nextjs",
        "Utilize the OpenAI API",
        "Deploy Nextjs Applications",
        "Integrate with APIs and MongoDB Database",
        "Implement Authentication",
        "Master Server Actions",
        "Utilize Routing in Nextjs",
        "Implement Caching Strategies",
        "Build Real-World Projects"
      ],
      "course_content": {
        "GETTING STARTED": [
          "Welcome To The Course",
          "What's NextJS?",
          "My First Nextjs Project",
          "Understanding Folder Structure",
          "Server and Client Components",
          "How to use fonts in Nextjs Project",
          "How to use CSS in Nextjs Project",
          "NextJS Image Component"
        ],
        "DATA FETCHING SERVER COMPONENTS || BUILD TV SHOWS PROJECT": [
          "Data Fetching Project demo",
          "Link Component-Navigation",
          "Displaying Pages",
          "Data fetching || Fetching all TV Shows",
          "TV Show Details",
          "Implementing Loading",
          "Error Handling"
        ],
        "UNDERSTANDING ROUTE HANDLERS": [
          "What are Route Handlers?",
          "How to create Route Handlers",
          "Testing the route Handlers"
        ],
        "PROJECT: CRUD BLOG PROJECT": [
          "Setup and MongoDB Connection String",
          "Connect to Database using Pooling Techniques",
          "Create Post",
          "Fetching of posts",
          "Post Details",
          "Delete and Update Post",
          "Form Handling",
          "Making Post Request",
          "Fetch All Posts",
          "Server Component error Handling",
          "Error handling-Client Component",
          "Dislplay Loading",
          "Redirect in client Component",
          "Post Details",
          "Caching Explained",
          "Convert Server component to Client Component",
          "Delete Post",
          "Fetching Data on the Client",
          "Update Post"
        ],
        "AUTHENTICATION & MIDDLEWARE": [
          "Authentication and Middleware overview",
          "Authentication using Clerk",
          "Access Login user-ServerSide",
          "Access Login Client-side",
          "Protecting Pages using Middleware",
          "Integrating Authentication into Text to Speech Project"
        ],
        "PROJECT: CHATGPT-4o IMAGE ANALYZER": [
          "ChatGPT-4o Image Analyzer project"
        ],
        "SERVER ACTIONS: BUILD INVENTORY CRUD PROJECT": [
          "Build CRUD Inventory Project using Server Actions"
        ],
        "PROJECT: BUILD TEXT TO SPEECH USING OPENAI & NEXTJS": [
          "Build Text To Speech Project Using OPENAI and NextJS"
        ],
        "DEPLOYMENT: DEPLOYING TEXT TO SPEECH PROJECT": [
          "Deploying Text To Speech Project"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, CSS, and JavaScript",
        "Familiarity with React",
        "Familiarity with NodeJS",
        "Nodejs and npm Installed",
        "Basic Command Line Skills",
        "Internet Connection"
      ],
      "description": "Welcome to \"Build Scalable Web Apps with Next.js\"! This course is designed to take you on a comprehensive journey through the fundamentals and advanced features of Next.js, enabling you to create robust, high-performance web applications.\nIn this course, you will:\nUnderstand the Fundamentals of Next.js: Start with the basics, exploring Next.js core features and understanding why it is an essential tool for modern web development.\nUtilize the OpenAI API: Learn how to integrate the OpenAI API into your applications, adding advanced AI functionalities and enhancing user experiences.\nDeploy Next.js Applications: Gain practical experience in deploying your Next.js applications to various platforms, ensuring they are production-ready.\nIntegrate with APIs and MongoDB Database: Understand how to connect your Next.js applications with various APIs and MongoDB, allowing for dynamic data handling and storage.\nImplement Authentication: Learn how to secure your applications by implementing authentication, ensuring only authorized users can access specific parts of your app.\nMaster Server Actions: Dive into advanced server actions to manage server-side processes effectively and optimize application performance.\nUtilize Routing in Next.js: Master the powerful routing capabilities of Next.js, including dynamic and nested routes, to create seamless user experiences.\nImplement Caching Strategies: Explore various caching strategies to improve the speed and performance of your web applications, ensuring they run efficiently.\nBuild Real-World Projects: Apply the skills and knowledge you have gained to build and deploy real-world projects, providing you with hands-on experience and a strong portfolio.\nBy the end of this course, you will have a deep understanding of Next.js and be equipped with the skills to build, deploy, and scale sophisticated web applications. Whether you are a beginner looking to get started with web development or an experienced developer aiming to enhance your skill set, this course will provide you with valuable insights and practical experience.\nJoin us on this exciting journey and unlock your potential in modern web development with Next.js!",
      "target_audience": [
        "Front-End Developers",
        "React Developer",
        "Full-Stack Developers",
        "Web Development Enthusiasts",
        "Professionals Seeking Career Advancement",
        "Entrepreneurs and Startups"
      ]
    },
    {
      "title": "AWS For C#/.NET Developers",
      "url": "https://www.udemy.com/course/aws-net-csharp-sdk/",
      "bio": "Learn how to use AWS with C#/.NET and using AWSSDK.NET",
      "objectives": [
        "How to use AWS .NET SDK with S3",
        "What is S3 and how you can use it",
        "AWS SQS",
        "AWS DynamoDB",
        "AWS SNS",
        "AWS Glacier"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to this course",
          "Installing AWS Toolkit"
        ],
        "Basics": [
          "Source Code for this course",
          "Project Setup and Authentication"
        ],
        "AWS S3": [
          "Creating a Bucket",
          "Uploading Files and Directories",
          "Downloading Files/Objects",
          "Presigned Url To Share Objects",
          "Getting Object Tags",
          "Adding Tags to Objects",
          "Updating Object ACL",
          "Bucket Version",
          "Bucket Accelerate"
        ],
        "AWS Glacier": [
          "Creating Vault",
          "Uploading Archive",
          "Download Archive"
        ],
        "SNS": [
          "Create SNS Topic",
          "Subscribe to a topic",
          "Publish To a Topic",
          "List Topics",
          "List Subscription By Topic",
          "Unsubscribe",
          "Delete Topic"
        ],
        "SQS": [
          "Create SQS",
          "Send Message",
          "Receive Message",
          "Batch Messages",
          "Delete Message",
          "Purge Queue",
          "List and Delete Queues",
          "Add Tags and List Them"
        ],
        "DynamoDB": [
          "Create Table",
          "Add Item",
          "Get Item",
          "Delete Item",
          "Describe Table",
          "Delete Table",
          "Backup Table",
          "Restore Table Backup"
        ]
      },
      "requirements": [
        "Visual Studio 2017 or later",
        "C# Basic Knowledge",
        "AWS Account",
        "AWS Toolkit for Visual Studio"
      ],
      "description": "Hello and welcome to this course. This course aim is to help you to learn how to use AWS with C#/.NET applications where you can use the AWS provided services via AWSSDK for .NET.\nThis course will starts with the basics, from installing the VS toolkit extension on visual studio. Then it will show you how to add authentication to your applications so you can communicate with AWS cloud services. Working with AWS is quite fun and easy so don't worry about any complexity while working with AWSSDK.\nAfter that, we will start working with the well known and most popular AWS service which is the Simple Storage Service aka S3. It allows you to store files in the cloud and access them anywhere in the world. What is unique with the S3 is that it's cost and reliability is quite good.\nWith S3 you can create a bucket which can contains different files and folders where you can store them and access them. There is different storage classes and different price for each. But no matter what is cost is quite cheap.\nThen we will move next to Glacier, which is the archiving services that is provided from AWS. With glacier you can archive data that you don't frequently access and keep them safe in the cloud for later use.\nThen, we will move toward the SQS service which can be used to queue messages and get the messages from the queue. SQS is like other queueing you can subscribe and publish to the queue to receive data that you need.\nWith SNS, you can distribute notifications to different mediums such as emails, application, mobile apps and emails and other sources as well. This will simplify your notification management and make you send notifications to the different sources without hustles.\n\n\nDynamoDB is the cloud database from AWS where you can store data and receive it inside noSQL Database. With DynamoDB you can store and update data, add indexes to help you search faster for data in the table.",
      "target_audience": [
        "Developers",
        "AWS Cloud Developer"
      ]
    },
    {
      "title": "WeChat Mini Program - Everything you need to know",
      "url": "https://www.udemy.com/course/wechat-mini-program/",
      "bio": "Build a WeChat Mini Program with each step explained along the way. Have all the skills to create your own by the end.",
      "objectives": [
        "How to make a fully functioning and responsive Mini Program",
        "Use Wechat's built in life-cycle functions for a more powerful Mini Program",
        "How to use data binding to create a responsive app based on events triggered by the user",
        "Installing and using npm modules in the front end",
        "Creating and connecting a backend and database for GET and POST requests to our program",
        "Understand the file structure of a Mini Program and its framework",
        "How to use WeChat's default components and icons for a more professional looking Mini Program",
        "How to install Wechat's Devtools and change its settings",
        "Debugging the Mini Program on different screen sizes and how to perform mobile debugging by testing on your phone",
        "Advice and guide to applying for an official account which will let you publish your own Mini Program"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript",
        "Already have or sign up for a basic WeChat account",
        "NOT REQUIRED to have experience with WeChat or Mini Programs"
      ],
      "description": "WeChat Mini Programs are powerful tools for companies to use to reach their audience, and developers in China and abroad will be needed to meet this demand.\nTo help get you started on your Mini Program journey I've created this course to save you time spent researching, and instead get you on your way to publishing your very own Mini Program.\nThis course will take you from start to finish in creating your first Mini Program. We will not only cover the coding and testing aspects of development, but will also learn the steps in applying for your first Mini Program to be approved and published by WeChat.\nIn detail, this course covers:\nHow to setup your workspace to begin coding\nMini Program framework in detail with examples and diagrams\nMini Program's built in API's for getting user data, logging in, real-time map display, local storage, etc.\nHow to use npm modules in Mini Program front end\nRunning the program on Mobile for debugging and testing\nMini Program's unit of measurement \"rpx\" to create responsive designs that look great on any device\nWeChat's standard user interface styles for professional design\nMini Program's most important features like: conditional rendering, data-binding, life-cycle functions, etc\nDynamically change styles and data on screen in response to user actions\nNodeJS backend with database and how to connect it to your Mini Program's front end\nPage navigation in Mini Programs and use of the tab bar\nBonus material:\nGuide on applying for an official Mini Program account, which will allow you to publish your own program\nWalkthrough of the official account dashboard and its features\nTips for successfully publishing your first Mini Program\nBy the end of the course you'll have a full understanding of the Mini Program framework, what features and functions you can use during development, and how to successfully create and publish your own program to WeChat.",
      "target_audience": [
        "People interested in learning about WeChat Mini Programs and developing their own applications",
        "People who want to learn a powerful new skill for their portfolio or work, and to improve their mobile development knowledge"
      ]
    },
    {
      "title": "Applied CSS 3 (2023) - Build 6 Professional Web Pages",
      "url": "https://www.udemy.com/course/applied-css-3/",
      "bio": "Use HTML, CSS 3 and Web Development best practices to create pages in interactive web sites",
      "objectives": [
        "Break down existing web designs into web-friendly elements",
        "Implement HTML layouts by working from the outside in",
        "Style HTML elements using CSS and an iterative approach",
        "Use CSS best practices to refine existing styles"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of HTML",
        "You should be motivated to continue improving your CSS skills",
        "You should be comfortable using a text editor and some advanced features of a web browser shown in the course"
      ],
      "description": "Have you tried introductory courses that fell short of providing useful code? Maybe you learned the information conceptually, but they didn't bridge the gap to practice. Then this course is for you. It contains distilled techniques about implementing professional designs that I've learned from over 9 years of professional Web Development at Fortune 500 companies and smaller startups.\n\n\nNot only will you learn about common layout patterns used in modern web pages, you will also walk away with 6 beautifully designed web pages that you can use for projects ranging from custom blog themes to menus for local restaurants in your community. Finally, you can apply these techniques to larger scale projects that require more fine-grained knowledge of CSS.\n\n\nThe course is broken down into 6 parts, one for each major page:\n\n\nPart 1 - This introduces you to an eCommerce theme that shows a gallery of products and their prices.\nPart 2 - This builds on the eCommerce theme, this time going to a singular product with customer reviews and other elements. The first two parts are built around a common front-end pattern called the list-detail view pattern.\nPart 3 - The most advanced part of the course (you may return to this part at the end), Part 3 shows how to implement a list of Podcast episodes along with their name and cover image for a podcasting app.\nPart 4 - How to write a professional, compelling \"About\" page for your website or blog.\nPart 5 - Covers a long-form restaurant menu with different, commonly-styled sections for appetizers, main course, and dessert.\nPart 6 - Implements a custom blog article theme design with a sidebar and comments section.\n\n\nIn order to be successful in this course, it's recommended you have a solid grasp on HTML 5. It also helps if you have a very basic understanding of CSS, even though common styles and styling techniques are explained in the lectures.\n\n\nTo support additional updates to the course, you may leave a 5-star review or a constructive critical review suggesting 3-5 improvements you'd like to see. Your feedback is welcome.",
      "target_audience": [
        "If you're looking to take your CSS skills to the next level and apply the things you learn to practical web pages that look professionally designed, this course is for you",
        "You want to improve your Web Development skills"
      ]
    },
    {
      "title": "Cloud Storage Services on Microsoft Azure",
      "url": "https://www.udemy.com/course/storage-services-of-microsoft-azure/",
      "bio": "BloB | Disk | File | Table | Queue | Data Lake | StorSimple | Backup | Archive",
      "objectives": [
        "In this course we would explore various Storage services and options available on Microsoft Azure cloud.",
        "You would learn about Azure BloB, StorSimple Storage",
        "Disk, File, Table, Backup, Data Lake",
        "And Queue, Archive with practical exercises"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Introduction to Cloud Storage"
        ],
        "Storage Types on Microsoft Azure": [
          "Blob",
          "Practical- BloB",
          "Disk",
          "Files",
          "Practical- File",
          "Table",
          "Queue",
          "Data Lake",
          "StorSimple",
          "Backup",
          "Archive"
        ],
        "Azure CLI- Command Line Interface": [
          "blob cli",
          "file cli 1",
          "file cli 2",
          "file cli 3",
          "file cli 4"
        ],
        "PROJECT: Deploy a Static Website": [
          "static website 1",
          "static website 2",
          "static website 3"
        ],
        "PROJECT: Upload content on Website": [
          "upload image website 1",
          "upload image website 2",
          "upload image website 3",
          "upload image website 4",
          "upload image website 5"
        ],
        "PROJECT: Develop WordPress Application": [
          "wordpress 1",
          "wordpress 2"
        ],
        "Storage CLI": [
          "cli cloudshell",
          "cli cloudshell python",
          "cli install",
          "cli powershell"
        ],
        "Storage Explorer": [
          "storage explorer 1",
          "storage explorer 2"
        ],
        "Practice Test": [
          "Practice Test"
        ]
      },
      "requirements": [
        "A basic understanding of file system and file types would be more than sufficient."
      ],
      "description": "In this course, you will be learning about various storage services available on on Microsoft Azure cloud platform. Cloud Storage is the first thing to learn when you are building your career around cloud computing. You can create different kinds of storage on Azure- from file storage to object storage, from structured table to unstructured and file storage, and much more. Whether you are building a web application, mobile application or migrating your assets on the cloud, you need to integrate storage, because it allows you to harness the real power of cloud- Scalability. There's almost no upper limit on size of data that you can store and host on cloud. Storage services are one of the key topics that is relevant for almost every Cloud certifications, so if you are preparing of any of the Certification exams on azure, this course could help you grasp key storage skills expected.\nWe would be creating resources for BloB and File storage. Each storage option is suitable for certain domain and we can decide what to choose based on price, availability, reliability, application, SLA provided, elasticity, retention period, hot/cold or archive option, etc. You will be learning various storage services-\nBloB Storage\nYou can create Massively scalable and secure object storage for cloud-native workloads, archives, data lakes, high-performance computing and machine learning.\nStorSimple\nIt is a hybrid cloud storage solution on Microsoft Azure, which provides a cloud based storage infrastructure used for storing, accessing and managing large quantities of data.\nDisk Storage\nYou can create high-performance, highly durable block storage for your mission- and business-critical workloads.\nFile Storage\nYou can create Simple, secure and fully managed cloud file shares. Mount file shares concurrently in the cloud or on-premises on Windows, Linux and macOS. Plus, cache Azure file shares on Windows Servers with Azure File Sync for local access performance.\nTable Storage\nYou can store large amounts of structured data. The service is a NoSQL datastore which accepts authenticated calls from inside and outside the Azure cloud. Azure tables are ideal for storing structured, non-relational data.\nBackup\nIt provides simple, secure, and cost-effective solutions to back up your data and recover it from the Microsoft Azure cloud.\nData Lake Storage\nIt includes all the capabilities required to make it easy for developers, data scientists and analysts to store data of any size, shape and speed, and do all types of processing and analytics across platforms and languages. It removes the complexities of ingesting and storing all of your data while making it faster to get up and running with batch, streaming and interactive analytics.\nQueue Storage\nIt is a service for storing large numbers of messages. You access messages from anywhere in the world via authenticated calls using HTTP or HTTPS. A queue message can be up to 64 KB in size. A queue may contain millions of messages, up to the total capacity limit of a storage account. Queues are commonly used to create a backlog of work to process asynchronously.\nArchive Storage\nYou can create low-cost, durable and highly available secure cloud storage for rarely accessed data with flexible latency requirements. Store terabytes of data in the cloud for only a few dollars a month and repurpose your storage infrastructure for other critical business objectives.",
      "target_audience": [
        "Anyone who would be interested to learn Cloud Computing with Microsoft Azure.",
        "Would be interested in learning various Cloud Storage services and option.",
        "Want to make a career in Cloud Computing."
      ]
    },
    {
      "title": "Learn HTML5 Canvas for beginners",
      "url": "https://www.udemy.com/course/learn-html5-canvas-for-beginners/",
      "bio": "Learn how to create drawings using JavaScript on HTML5 Canvas Course covers basics of how to use Canvas and Draw",
      "objectives": [
        "draw using HTML5 canvas",
        "create animations within HTML5 Canvas on web pages",
        "add image creation and manipulation on the fly within web content",
        "using HTML5 canvas on any website"
      ],
      "course_content": {
        "Learn about how to use HTML5 canvas": [
          "Introduction to the course",
          "Introduction to what HTML5 canvas is and how it can be used",
          "Course resources further reading",
          "HTML5 Course Resources",
          "HTML5 prepare basic setup HTML",
          "Pixel locations in HTML5 canvas"
        ],
        "Basics of HTML5 Canvas Drawing": [
          "How to create a canvas in HTML5",
          "HTML5 connect canvas to JavaScript",
          "HTML5 drawing on your canvas JavaScript",
          "HTML5 rectangles",
          "shadows in canvas",
          "Source code for shadows",
          "Drawing line on Canvas HTML5",
          "Draw Full Circle",
          "Drawing Curves with HTML5 How to use Bezier Curve",
          "Curves Loops and useful tips for HTML5 canvas drawing",
          "HTML5 canvas updates",
          "Source Code for Challenge 1",
          "Solution to Challenge 1"
        ],
        "More options to Drawing on HTML5 canvas": [
          "Introduction to Colors HTML5 Canvas",
          "RGB RGBA colors working with alphas and loops",
          "All about lines in HTML5 Canvas",
          "Dashes in lines",
          "How to work with createLinearGradient",
          "How to use createRadialGradient in HTML5 canvas",
          "Practice HTML5 methods"
        ],
        "HTML5 canvas Text and Images": [
          "How to add text to html5 canvas",
          "Source code for adding text",
          "Difference between SVG and Canvas images",
          "Use HTML5 Canvas to create images on the fly",
          "HTML5 canvas using onpage images into canvas",
          "Image Scaling with HTML5 canvas",
          "Image slicing with HTML5 canvas",
          "Challenge 2 add frame to image",
          "Source for frame",
          "Solution to Challenge 2",
          "Source code for working with images"
        ],
        "HTML5 canvas more complex drawing": [
          "Using save and restore",
          "HTML5 moving all the content",
          "HTML5 how to resize your canvas",
          "HTML5 rotations",
          "HTML5 canvas custom transformations",
          "Source code for transformations"
        ],
        "HTML5 canvas Animations": [
          "introduction to animation",
          "Add object for animation",
          "Creating canvas drawings",
          "How to clear HTML5 canvas",
          "Animations requestAnimationFrame",
          "Source code for animation"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "basic HTML and JavaScript",
        "desire to learn",
        "access to a computer"
      ],
      "description": "The canvas element in HTML5 allows you to create amazing dynamic script based drawings and animations directly within your webpages. Bringing your JavaScript to life visually drawing free form graphics on a drawing surface.\nCanvas is a powerful element with many options. In this course we show you how to use canvas and start drawing onto it using JavaScript. With over 15 years experience in web development I show you how to use canvas in the real world. Learn the basic concepts of using canvas to draw directly on your web page.\nThis course is for beginners who want to learn how to use HTML5 better. You will learn how to setup canvas and how to interact with it. I share top resources, links and code snippets to practice and perfect using canvas for web development.\nCourse covers\nstarting to draw on the canvas\ndrawing rectangles and lines\ndrawing arc and circles\nhow to implement curves\nhow to add colors\ndashes, lines, and gradients\nPopular HTML5 methods\nHow to add text\ncreating images on the fly\non page images\nscaling, slicing and canvas manipulation\nsaving and restoring canvas\nrotations and custom transformations\nAnimating your canvas\nSource code is included, several challenges with solutions are also included in this course.\n\nLearn how to create your own dynamically generated graphics and cool animations online.\nYou can use canvas for building graphs, creating animations, games, and image composition.\nThis course will provide you the base knowledge needed to create drawings within canvas.",
      "target_audience": [
        "anyone who wants to learn more about using HTML5",
        "learn how to use HTML5 and JavaScript",
        "learn the basics of HTML5 canvas",
        "learn how to apply animations on web pages"
      ]
    },
    {
      "title": "MERN Stack Social Media Application 2021 : React Redux Node",
      "url": "https://www.udemy.com/course/mern-stack-social-media-application-2021-react-redux-node/",
      "bio": "Build a full stack social media from scratch using React , Redux , Node , Mongo DB , Express JS",
      "objectives": [
        "Building complex applications with MERN Stack",
        "Making the application scalable as data grows",
        "Using state management tool redux for data managing in react",
        "Hands on experience with actions , reducers , store",
        "Creating complex database models",
        "Working with different mongodb commands",
        "Protected routes for pages in react",
        "Making the applications responsive with bootstrap and antd"
      ],
      "course_content": {
        "Introduction / Resourses": [
          "Promo / source code"
        ],
        "Front End Setup": [
          "React Setup with routing",
          "Adding layout",
          "Layout Part-1"
        ],
        "Node-Express-Mongo Setup": [
          "Creating express server",
          "Connecting to mongo db"
        ],
        "User Authentication Backend": [
          "User model",
          "Login / Register API"
        ],
        "User Authentication Front End": [
          "Setup Redux",
          "Login Register UI",
          "Login Register Actions",
          "Designing Alerts , Loading , Error messages",
          "Protected Routes"
        ],
        "Adding new post": [
          "Add post screen",
          "Cloudinary intro",
          "Post model",
          "Add post api",
          "Add post actions"
        ],
        "Designing Homepage": [
          "Getting all posts",
          "Designing post component"
        ],
        "Like or Unlike Posts": [
          "Like Unlike APi",
          "Like Unlike UI"
        ],
        "Comments in posts": [
          "Add comments actions and API",
          "Add comments UI",
          "Display Comments"
        ],
        "Follow and Unfollow": [
          "Display all users",
          "Follow actions and api",
          "Follow UI",
          "Unfollow UI , Actions and API"
        ]
      },
      "requirements": [
        "Javascript Basics",
        "React and Node Basics"
      ],
      "description": "Hello ,\nWelcome to the course MERN Stack Social Media Application 2021\nThis is a full stack social media application build using React as Front End , Redux as State management , Node JS as run time environment , Express JS as backend framework and Mongo Db as our database.\nThis is course is absolutely not for beginners.\nSocial media is a well known platform where a person can share his thoughts , feelings , emotions , achievements.\nAnd also people can interact to other people posts with likes , comments , shares etc.\nSo we are going to implement all this features in this course.\nThe topics / concepts covered in this course are\nUser Authentication\nUploading posts\nEditing posts\nDeleting posts\nPost Interactions and analytics\nFollowers and Following Modules\nPrivate and public accounts concept\nLikes and un likes\nComments\nInfinite scroll\nUploading images to Cloudinary\nAdding and updating profile pictures and bio's.\nANTD UI Framework for rich componets\nDeployment to HEROKU\nReact\nReact is a free and open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications.\nNode\nNode.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine and executes JavaScript code outside a web browser.",
      "target_audience": [
        "Students who wants to learn react , node , express , mongodb redux.",
        "Students who wants to build complex applications with mern stack",
        "MERN Stack Developers",
        "FullStack Developers",
        "Next JS Developers"
      ]
    },
    {
      "title": "Angular 8+, be professional from page one",
      "url": "https://www.udemy.com/course/angular-8-pro-from-page-one/",
      "bio": "Make sure you create a strong foundation for your applications independently of their size.",
      "objectives": [
        "Create professional frontend applications from scratch using the Angular framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Lets make sure we have everything we need installed"
        ],
        "Creating our first Workspace and App": [
          "Creating our workspace",
          "Time to create our first Angular application",
          "Quiz"
        ],
        "Starting our landing page": [
          "Getting familiar with our landing page",
          "Introducing library types",
          "Creating our first feature library",
          "Creating our first component",
          "Adding some code to our landing page",
          "Introduction to flexbox",
          "Finishing the first version of our landing page",
          "Quiz"
        ],
        "Let's setup are App's CSS foundation": [
          "Creating our style's utility library",
          "Introduction to Angular Material Themes",
          "Creating our first component theme (Part I)",
          "Finishing up some default theme options and adding typography setup",
          "Creating application themes",
          "Creating theme picker (part I)",
          "Creating theme picker (part II)",
          "Creating theme picker (part III)"
        ],
        "Internationalization": [
          "Introduction to Internationalization and Localization",
          "Prepare app for Internationalization",
          "Implementing language picker",
          "Pipes, Pluralization and Alternative Texts"
        ],
        "Reactive programming using RxJS": [
          "Introduction to RxJS",
          "Basic Concepts",
          "Introduction to Observables",
          "Introduction to RxJS Operators",
          "Subjects",
          "Reactive programming"
        ],
        "Introduction to Angular Forms": [
          "Angular Forms Intro",
          "Introduction to Template-Driven forms",
          "Introduction to reactive forms",
          "Creating our custom email control part I",
          "Implementing control value accessor",
          "Finishing our email control"
        ],
        "Animations": [
          "Introdution",
          "CSS Transitions",
          "CSS Animations",
          "Angular Animations",
          "Angular Animations (Part II)",
          "More on Angular animations (query and stagger)",
          "Grouping Angular Animations",
          "Adding animations to our landing page"
        ],
        "Introduction to State Management": [
          "Introduction",
          "Setting up our first state",
          "Connecting our theme picker to the store",
          "Connecting our language picker to the store",
          "Using NGXS plugins",
          "Fixing our shadow color and using more NGXS plugins"
        ]
      },
      "requirements": [
        "In order to successfully complete this course the student is going to need a basic understanding of Git, HTML, CSS, Angular 2+ Typescript",
        "A computer running Mac, Linux or Windows operating system capable of working with NodeJS"
      ],
      "description": "With so many tools and options for frontend development with Angular, these days starting new apps is as easy as taking a starter kit from Github or maybe run a few CLI commands and you are on your way. Unfortunately, our CLI tools or starter kits do not know the complexity of our application so it is in our hands to make the right decisions when adding a new block of code or make architectural decisions. In this course, we are going to focus not only on building a solid foundation for your application but also on explaining and making you sure you understand the reasons and benefits behind those decisions so you can make your owns later on.",
      "target_audience": [
        "Anyone who wants to become a professional frontend developer",
        "A frontend developer who wants to improve their architect skills to build more maintainable applications"
      ]
    },
    {
      "title": "Complete E-commerce Website using React JS",
      "url": "https://www.udemy.com/course/complete-e-commerce-website-using-react-js/",
      "bio": "Build a project based comprehensive and fully functional e-commerce website using the React",
      "objectives": [
        "State Management: They will explore state management techniques using React's built-in state and learn about advanced state management solutions",
        "User Authentication: Students will learn how to implement user registration and login features, integrating authentication solutions such as Firebase",
        "Product Filtering & Searching Features: The course will cover creating and displaying product listings, including product images, descriptions, and prices.",
        "Shopping Cart: Students will learn how to create a shopping cart system, allowing users to add, remove, and modify items in their carts.",
        "Checkout Process: They will build a checkout process that includes order summaries, shipping information, and payment processing",
        "Deployment: The course will cover deploying the e-commerce website to a hosting platform like AWS, Netlify, or Vercel, making it accessible to the public"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Setup: Installing React App",
          "Setup React Router Dom",
          "Install Required NPM Packages",
          "Download Images and Assets",
          "Customize CSS files",
          "Complete Source Code"
        ],
        "Home Page": [
          "Create React Component",
          "Responsive Navbar",
          "Banner Section",
          "Home Category",
          "Products Showcase Section",
          "Workshop Registration",
          "Happy Customers Location Spared",
          "Become a Marchant",
          "App Promotion Section",
          "Sponsor Section",
          "Footer Page"
        ],
        "Shop Page": [
          "Page Header Component",
          "Shop Page",
          "Product Cards Page",
          "Pagination Functionality",
          "Search Function Implementing",
          "Show Product Based on Category",
          "Popular Post Section",
          "Tags",
          "Single Product Page",
          "Product Display Card",
          "Product Description and Reviews",
          "Aside of Product Page",
          "Cart Page",
          "Checkout and Payment Method"
        ],
        "Blog, About, Contact Page": [
          "Blog Page",
          "Single Blog Page",
          "About Page",
          "Contact Us"
        ],
        "Firebase Authentication": [
          "Firebase Setup and Confiq",
          "Vite Environment Variables",
          "Implement Authentication (Demo User Login)",
          "Context Component",
          "Private Routes"
        ],
        "Signup and Login Page": [
          "Login Page",
          "Sign up Page"
        ],
        "More!!": [
          "Build and Host Your Website",
          "Source Code and How to Use It"
        ]
      },
      "requirements": [
        "Need some basic knowledge of JavaScript and CSS framework like Bootstrap or Tailwind CSS"
      ],
      "description": "This course will guide you through the process of building a feature-rich e-commerce website using React JS. By the end of the course, you will have developed a complete e-commerce platform with multiple pages, integrated components, and responsive design.\nAre you ready to embark on a journey that will turn your web development dreams into reality? Welcome to \"Mastering Complete E-commerce with React\". In this comprehensive and hands-on course, we invite you to join us on an exciting adventure through the dynamic world of e-commerce web development.\nE-commerce is not just about selling products; it's about telling your story, connecting with your audience, and building a brand that stands out. In this course, you'll not only build a functional e-commerce website, but you'll also embark on a journey to bring your vision to life. Experience top-notch product filtering, seamless pagination, robust search capabilities, a user-friendly cart system, and more.\nDon't miss out on this opportunity to take your first steps toward mastering e-commerce with React. Join us in building your dream store, and let's make your web development dreams come true. Enroll today and be on your way to creating stunning, feature-rich e-commerce websites that leave a lasting impact. Your future starts here.",
      "target_audience": [
        "Junior Frontend Developer who want to build dream project to get hire in a months",
        "Beginners who just learning JavaScript and desire to learn React JS"
      ]
    },
    {
      "title": "Build a Web App With Python and OpenCv : Image Editing App",
      "url": "https://www.udemy.com/course/build-a-web-app-with-python-and-opencv-image-editing-app/",
      "bio": "Build a modern prototype of an image editing web application with streamlit and OpenCv",
      "objectives": [
        "Create a web application using an efficient python based framework : Streamlit",
        "Create and set different widgets on your app: selectboxes, buttons, radio Buttons, sliders, image uploaders, markdowns, message boxes, ...etc",
        "Apply image editing techniques (gray-scaling, contrast, brightness, blurriness, sharpness) to an uploaded image",
        "Detect faces and eyes in an image using OpenCv",
        "Use the different methods and functions provided by streamlit to display your images in the app",
        "Cartoonize images and detect edges by applying OpenCV functions"
      ],
      "course_content": {
        "First steps": [
          "Anaconda download and installation",
          "Importing the libraries / packages"
        ],
        "Set up the main part of the app": [
          "Setting a title and a subtitle for the app",
          "Create the \" Detection \"part",
          "Create the \" About \" part"
        ],
        "Connect the image processing techniques to the app": [
          "Images to use",
          "Option 1 : Gray-scaling",
          "Option 2 : Contrast",
          "Option 3 : Brightness",
          "Option 4 : Blurriness",
          "Option 5 : Sharpness",
          "Option 6 : Original"
        ],
        "Face detection / Eye detection / Cartoonizing / Cannizing": [
          "Set the selectbox features",
          "Detect faces (part 1)",
          "Set the haar cascade files",
          "Haar cascade files",
          "Detect faces (part 2)",
          "Detect eyes",
          "Cartoonize an image (part 1)",
          "Cartoonize an image (part 2)",
          "Cannize an image"
        ]
      },
      "requirements": [
        "Just basic python"
      ],
      "description": "In this course you are going to build a modern prototype of a web application : image editing app using streamlit which is a python-based framework that provides you with all the tools to build your app from scratch in a simple and fast way. Through this course you are going to learn how to implement different image processing techniques like : gray-scaling, contrast, brightness, sharpness and blurriness and connect them to your application giving the hand to users to choose and control the degree of each one. You will also, learn how to create functions that allow you to detect faces and eyes in images, functions that create cartoon version of your images and other to detect edges of different objects and regions in images.\nThe content of this course:\nSection 1: First steps :\n- Anaconda download and installation\n- Importing the libraries / packages\nSection 2 : Set up the main part of the app\n- Setting a title and a subtitle for the app\n- Create the \" Detection \" part\n- Create the \" About \" part\nSection 3 : Connect the image processing techniques to the app\n- Option 1 : Gray-scaling\n- Option 2 : Contrast\n- Option 3 : Brightness\n- Option 4 : Blurriness\n- Option 5 : Sharpness\n- Option 6 : Original\nSection 4 : Set up the main part of the app\n- Set the features selectbox\n- Detect faces (part 1)\n- Set the haar cascade files\n- Detect faces (part 2)\n- Detect eyes\n- Cartoonize an image (part 1)\n- Cartoonize an image (part 2)\n- Cannize an image",
      "target_audience": [
        "Python developers who want to extand their knowledge on deploying efficient modern web apps using streamlit and OpenCv",
        "Programmers who want to apply image processing techniques into a tangible application that can be used by everyone"
      ]
    },
    {
      "title": "Learn Markdown From Scratch",
      "url": "https://www.udemy.com/course/learn-markdown-from-scratch/",
      "bio": "Find out why markdown is so easy to learn.",
      "objectives": [
        "Learn Basic Markdown Syntax",
        "Learn Extended Markdown Syntax (CommonMark, Github)",
        "Learn to export Markdown to HTML or PDF",
        "Learn to Create Markdown documents for README files or other technical documentation"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "What is Markdown and why use it?"
        ],
        "Markdown Editors": [
          "Choosing an editor",
          "Welcome to Dillinger"
        ],
        "Basic Markdown": [
          "Headings",
          "Paragraphs and Line Breaks",
          "Emphasis",
          "Blockquotes",
          "Code Blocks",
          "Code Spans",
          "Lists",
          "Links",
          "Images",
          "Horizontal Rules",
          "Escaping Characters"
        ],
        "Extended Markdown": [
          "Extended Markdown Flavors",
          "Tables",
          "Fenced Code Blocks",
          "Footnotes",
          "Heading IDs",
          "Definition Lists",
          "Strikethrough",
          "Task Lists"
        ],
        "Conclusion": [
          "Where to go from here"
        ]
      },
      "requirements": [
        "No prior knowledge necessary"
      ],
      "description": "Learn Markdown from scratch covers the basic syntax from John Gruber as well as covering many of the extended syntax offered by other Markdown processors.\nStudents will have the opportunity to practice what they are learning, within the online Dillinger Markdown Editor. They will also learn of other editors and other uses for Markdown. Many people make use of Markdown when writing README documents or other documentation as well as Reddit makes use of it when writing posts on their website.\nStudents will be exposed to all the basic syntax and explained how to implement as well as the uses demonstrated for them to follow along. We will then move into extended syntax that has been implemented by other processors to extend their products or to make other formats available.\nOnce students have completed the course they will have the opportunity to download a Markdown Cheat Sheet to have for future reference while using Markdown in their documents.\nBasic Syntax covered include:\n· Headings\n· Paragraphs\n· Line Breaks\n· Code Blocks\n· Code Spans\n· Blockquotes\n· Lists Ordered and Unordered\n· Links\nExtended Syntax covered include:\n· Tables\n· Fenced Code Blocks\n· Footnotes\n· Heading IDs\n· Definition Lists\n· Task Lists\nThis knowledge will make using Markdown easier so that working with it as a programmer or technical writer your documents will be available without being in a proprietary format.",
      "target_audience": [
        "Beginner Markdown writers who want to get the most from the language",
        "Software developers looking to write better looking README files"
      ]
    },
    {
      "title": "ASP.NET CORE WITH ADO .NET Full Project based Course",
      "url": "https://www.udemy.com/course/aspnet-core-with-ado-net-full-project-based-course/",
      "bio": "Ecommerce Book Store Project for beginner who want to work with ADO .NET and ASPNET MVC CORE",
      "objectives": [
        "Create a new Project in Visual Studio 2022",
        "Directory Structure of MVC Project",
        "Create a New Database and tables in Sql Server Management Studio",
        "How MVC Works",
        "How to Create Connection with Database using ADO .NET Technology",
        "How to Create Service in ASPNET CORE Project",
        "Repository Pattern",
        "Dependency Injection",
        "Middlewares",
        "Sessions",
        "Action Filters",
        "Book Store Project",
        "Custom Authentication and Authorization"
      ],
      "course_content": {
        "Introduction": [
          "Create New Book Store Project in Visual Studio 2022 Without Entity Framework",
          "Book Store Project Demo",
          "Project Database",
          "Category and Order Table"
        ],
        "Connection between Application and Database Engine": [
          "ConnectionString",
          "Project Entities"
        ],
        "Services and Implementations": [
          "Common Services for Book Store Project",
          "Get List of Book Service",
          "Show list of Books",
          "Implement Get Book By Id Service",
          "Implement Book Store Service",
          "Implement Book Author Service",
          "Implement Category Service",
          "Implement Cart and Order Detail Service"
        ],
        "Session Configuration in ASP.NET CORE": [
          "Add Session Service and Middleware",
          "Action Filter to Check Session Key"
        ],
        "Authentication and Authorization": [
          "Role Authentication Service",
          "Register and Login Template",
          "Login Partial Class",
          "User Registration",
          "Authentication Service",
          "Login Service"
        ],
        "Controller and Views": [
          "Home Controller With Index and Details View",
          "Save Data in Cart",
          "ViewComponent for Cart",
          "Cart Controller and Logout Functions",
          "Edit Quantity",
          "Update Quantity",
          "Delete Cart Item",
          "Cart to Payment",
          "Change Address Details",
          "Add to Order",
          "Orders Controller",
          "Show total Orders"
        ],
        "Bootswatch theme": [
          "Add theme"
        ],
        "Admin Area Controllers and Views": [
          "List and Add New Book Store",
          "Edit and Delete Method of Book Store",
          "Books Author Controller Service and Their Views",
          "Categories Controller and Their Views",
          "Books Controller with List and Create Book Method",
          "Add New Book with BookCategory"
        ],
        "Relationship between Objects": [
          "One to many Relationship",
          "Many to many Book with Category",
          "Update Book",
          "Delete Book"
        ],
        "Role Authorization": [
          "Access Menu items via Role"
        ]
      },
      "requirements": [
        "Beginner in C# and ASP. NET and SQL Server"
      ],
      "description": "This Course complete the following topics like\n1. How to start Project in Visual Studio 2022 with Target framework 7.0\n2. How to Connect Database with ADO .NET in ASP.NET CORE MVC\n3. Start Book Store Project , Real Time scratched project\n4. Repository pattern with 3-tier architecture\n5. Session to store User Credential\n6. Action Filter to handle User Session\n7. Controller to View for rendering the UI\n8. DI : Dependency Injection to create object in IOC Container\n9. Service Layer to design business logics\n10. Theme Concept\n11. Bootswatch theme\n12. Relationship between the object\n13. SQL Connection to create connection with Database\n14. Sql Command for Quering with the database table\n15. Sql DataReader to read data from Database server\n16. Stroed Prcedure to handle Project Functions\n17. Middleware to Render Request and response pipeline\n18. ViewBag, ViewData and TempData , use for transfer data from controller to view\n19. Partial View for navigation\n20 View Component for showing cart items\n21 Html Helper to show UI in Razor Views\n22. Use Tag helpers\n23. Paging Searching and Sort the data\n24 Repository Pattern to Handle Data Function\n25 Generic Function to handle common things\n26 Modular monolithic application for book store ecommerce project\n27. Ecommerce project for storing book, Purchase book, Cart Option, Order Options\n28. Basic Functionality of Shoping cart",
      "target_audience": [
        "Beginners and Intermediates"
      ]
    },
    {
      "title": "JavaScript Fundamentals (2025): From Basics to Brilliance",
      "url": "https://www.udemy.com/course/javascript-fundamentals-2024-from-basics-to-brilliance/",
      "bio": "Learn, apply, excel in JavaScript! Covering basics, functions, ES6, and objects, ending with a practical project in 2024",
      "objectives": [
        "Understand JavaScript fundamentals: Grasp the basics of JavaScript including variables, data types, operators, and control structures.",
        "Master JavaScript Functions: Learn to write efficient code with a thorough understanding of function expressions and declarations",
        "Explore ES6 Features: Acquire knowledge of modern JavaScript features like arrow functions, destructuring assignment, spread/rest operators, and more",
        "Manipulate JavaScript Objects: Develop skills in creating, accessing, and manipulating objects and arrays in JavaScript, crucial for data handling"
      ],
      "course_content": {},
      "requirements": [
        "No previous experience required"
      ],
      "description": "Welcome to \"JavaScript Fundamentals (2024): From Basics to Brilliance\" - your definitive guide to mastering the world's most popular programming language.\nThis comprehensive course is designed for learners of all levels seeking to gain proficiency in JavaScript and web development. Whether you're an absolute beginner or a developer looking to brush up on your skills, this course offers a deep dive into the fundamentals of JavaScript along with the latest ES6 features.\nThe course begins with an introduction to JavaScript, setting up the environment, and understanding what JavaScript is all about. We then delve into JavaScript basics, covering variables, data types, operators, and control structures. This foundational knowledge will equip you with the understanding needed to start writing your own scripts.\nNext, we move into a detailed exploration of functions in JavaScript, where you'll grasp the concepts of function expressions and declarations. This knowledge is pivotal in writing cleaner and more efficient code.\nWe then transition into modern JavaScript with a thorough examination of ES6 features. You'll learn about 'Let' and 'Const', arrow functions, template literals, destructuring assignment, spread and rest operators, default parameters, and modules and imports. These ES6 features will enable you to write more concise and powerful code.\nThe course continues with a deep dive into Objects in JavaScript. You'll understand what objects are, how to create and access them, as well as exploring arrays and array methods. This knowledge is crucial for data handling in JavaScript.\nFinally, you'll apply your newfound knowledge in a mini project where you'll build a basic calculator. This hands-on experience will solidify your learning and give you the confidence to tackle more complex projects.\nWith \"JavaScript Fundamentals (2024): From Basics to Brilliance\", you'll not only learn JavaScript, but you'll understand how it works. This course is your stepping stone towards becoming a proficient JavaScript developer capable of building dynamic and interactive websites.\nNo matter your previous coding experience, this course is designed to make JavaScript accessible and easy to understand. By the end of the course, you will have a strong understanding of JavaScript, paving the way for learning advanced front-end frameworks like React, Vue, Angular, or Svelte.\nStart your JavaScript journey today and join the community of developers who have chosen \"JavaScript Fundamentals (2024): From Basics to Brilliance\" as their path",
      "target_audience": [
        "Beginners to Programming: Individuals with no prior coding experience looking to start their journey in web development",
        "Front-End Developers: Professionals seeking to strengthen their JavaScript fundamentals and learn about ES6 features",
        "Back-End Developers: Programmers looking to become full-stack developers by adding JavaScript to their skillset"
      ]
    },
    {
      "title": "Angular and Golang: A Practical Guide",
      "url": "https://www.udemy.com/course/angular-go-admin/",
      "bio": "Go APIs, Angular CLI, Typescript, Event Emitters, MySQL, Upload Images, Export CSV",
      "objectives": [
        "Use Go with Fiber Framework",
        "Generate Jwt Token",
        "Use HttpOnly Cookies",
        "Connect Go with MySQL",
        "Angular CLI",
        "Angular Animations",
        "Upload Images",
        "Export CSV files",
        "Create charts with c3js"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Go": [
          "Installation",
          "Fiber Framework",
          "Pointers",
          "Database",
          "Packages",
          "Structs",
          "Realize",
          "Migrations",
          "Request Data",
          "Register",
          "Login",
          "Jwt",
          "Cookies",
          "Authenticated User",
          "Logout",
          "Json Output",
          "Middlewares",
          "Users",
          "Methods",
          "Users CRUD",
          "Roles",
          "Foreign Keys",
          "Permissions",
          "Many to Many Relations",
          "Pagination",
          "Profile",
          "Products",
          "Interfaces",
          "Uploading Images",
          "Orders",
          "Ignore Columns",
          "Export CSV",
          "Raw SQL",
          "Permission Middleware"
        ],
        "Angular": [
          "Installation",
          "Template",
          "Modules",
          "Routes",
          "Register Form",
          "HttpClient",
          "Login",
          "Services",
          "Authenticated User",
          "Interfaces",
          "Logout",
          "Inputs",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Redirecting",
          "Users",
          "Pagination",
          "Deleting Users",
          "Users Create Form",
          "Creating Users",
          "Updating Users",
          "Abstract Classes",
          "Roles",
          "Roles Create Form",
          "Form Arrays",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading Images",
          "Updating Products",
          "Orders",
          "Nested Tables",
          "Animations",
          "Export CSV",
          "Chart"
        ]
      },
      "requirements": [
        "Some knowledge of Go and Javascript is preferred but not required"
      ],
      "description": "Welcome, in this course you will learn how to authenticate using React and Go (Golang) with Fiber Framework.\nIn Go you will learn:\nUse the Fiber framework inspired by express.js\nCreate public and secure routes\nConnect with MySQL\nRun Migrations\nValidate Requests\nGenerate Jwt Tokens\nUse HttpOnly Cookies\nUpload Images\nExport CSV files\nIn Angular you will learn:\nHow to use Angular CLI\nCreate classes, interfaces, abstract classes\nUse interceptors\nCreate public and private routes\nAngular Animations\nUpload Images\nExport CSV's\nBuild a chart with c3.js (part of d3.js)\nUse Reactive Forms\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner Javascript and Go Developers"
      ]
    },
    {
      "title": "Wordpress Plugin Development with Angular.js (2021)",
      "url": "https://www.udemy.com/course/wordpress-plugin-development-angularjs/",
      "bio": "How to develop a plugin for Wordpress with AngularJS 1.8",
      "objectives": [
        "Wordpress plugin development with Angular",
        "Inject Angular to your WP plugin",
        "Architecture of a plugin using Angular",
        "Create an Angular component inside a plugin",
        "Link a template to a plugin",
        "Add javascript libraries to an Angular component"
      ],
      "course_content": {
        "Introduction": [
          "Introduction with Wordpress",
          "Create our first plugin",
          "Display our plugin with shortcode",
          "Import Angular to Wordpress",
          "Create our template",
          "Create our first Angular component",
          "Bootstrap, Tailwindcss, Material Design... How to design your plugin",
          "Component logic with AngularJS",
          "Thank you !"
        ]
      },
      "requirements": [
        "none"
      ],
      "description": "Wordpress Plugin Development with AngularJS\nThis course aims you to teach you how to code your own plugin on a Wordpress website. We are going to learn together how to start, how to activate our plugin and how to change our content dynamically.\nAt the end of this course, i'll provide you the entire plugin as files to use.\nIn this course, we are going to learn to use AngularJS to create our first Wordpress Plugin. Step by step, we are going to:\nCreate a local Wordpress,\nBuild our first AngularJS app,\nCreate our first Angular component,\nInject Angular to our HTML template,\nImport Bootstrap as a CDN,\nImport others scripts that we will need,\nShow/hide a cookie banner,\nPut/remove cookies from browser\nWhat is AngularJS?\nAngularJS is an open-source Front-end JavaScript framework.\nToday, Javascripts Frameworks's goal is to augment browser-based applications with Model–View–Controller (MVC) capability. Also, they are made to reduce the amount of JavaScript needed to make web applications functional.  Nowadays, these apps are known as Single-Page Applications.\nAngularJS is a structural framework for dynamic web apps. It lets you use HTML as your template language and lets you extend HTML’s syntax to express your application’s components clearly and succinctly. Data binding and dependency injection eliminate much of the code you would otherwise have to write. And it all happens within the browser, making it an ideal partner with any server technology.",
      "target_audience": [
        "beginners"
      ]
    },
    {
      "title": "Creating an API server in Rust with Rocket, SeaORM and JWT",
      "url": "https://www.udemy.com/course/rest-api-server-rust-rocket-seaorm-jwt/",
      "bio": "Build your own REST API server with the safety and performance of Rust using Rocket, SeaORM and JWT authentication.",
      "objectives": [
        "Create a Rust project",
        "Create a REST API server using Rocket",
        "Interacting with a database using SeaORM",
        "Authenticating APIs using JWT",
        "Writing database migrations using SeaORM CLI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Creating a Rust project",
          "Understanding directory structure",
          "Rust Basics",
          "Basic Requirements and Resources",
          "GitHub Repository"
        ],
        "Rocket: The web framework": [
          "Adding Rocket",
          "Rocket Hello World Explanation",
          "GitHub Repository"
        ],
        "SeaORM: Interacting with the database": [
          "Adding SeaORM",
          "Designing the database structure",
          "Setting up migrations",
          "Writing database migrations",
          "Connecting to the database and running migrations",
          "Generating SeaORM entities",
          "GitHub Repository"
        ],
        "REST API": [
          "Designing the REST API",
          "Creating a Postman collection"
        ],
        "Working with Rocket": [
          "Rocket: Response, Routing and Controllers",
          "Rocket Fairings: CORS",
          "Rocket Managed State: Database",
          "Rocket: Request and Response Data - Sign in",
          "Rocket: Request and Response Data - Sign Up",
          "GitHub Repository"
        ],
        "Authentication and Sign Up": [
          "Authentication Flow",
          "Implementing Sign Up",
          "Implementing Sign In",
          "Rocket Request Guards",
          "GitHub Repository"
        ],
        "Implementing Controllers": [
          "Postman collection setup",
          "JSON Responses",
          "Books: List",
          "Authors: List",
          "Creating Authors",
          "Creating Books",
          "Show one Book and one Author",
          "Updating Books and Authors",
          "Deleting Books and Authors",
          "List Books by an Author",
          "Implementing From trait",
          "GitHub Repository"
        ],
        "Conclusion": [
          "Dockerize - Creating a Docker image",
          "GitHub Repository",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming experience",
        "Basic experience with the Rust programming language"
      ],
      "description": "In this course, we'll create a REST API server in Rust to represent a bookstore. This bookstore would allow us to add books and authors.\n\n\nUsing this system, we'll be able to:\nCreate, list, update and delete authors\nCreate, list, update and delete books\nAssociate and disassociate books and authors\nList all books by a particular author\n\n\nWe'll learn how to:\nCreate a new Rust project using cargo\nBuild and run our Rust project\nAdd crates and enable crate features\n\n\nWe'll learn about basic API concepts such:\nRouting and HTTP methods\nExtracting data from HTTP requests\nInteracting with the database to query and insert data\nCreating user accounts\nAuthentication using JWT\nCreating and using relationships between models to query and list associated data\n\n\nAlong with these concepts, we'll learn how to:\nHandle incoming (request) and outgoing (response) data in a type safe way\nHandle CORS\nCreate and run database migrations\nCreate one-to-many database relationships\nCreate entities from database tables\n\n\nWe'll have a bonus lecture at the end to learn how to Dockerize our API server to deploy and run it anywhere.\n\n\nWe'll be using the following crates:\nRocket: a web framework for Rust that makes it simple to write fast, secure web applications without sacrificing flexibility, usability, or type safety.\nSeaORM: is a relational ORM to help you build web services in Rust.\njsonwebtoken to create and decode JWTs in a strongly typed way.\nserde_json for serializing and deserializing Rust data structures efficiently and generically.",
      "target_audience": [
        "Programmers curios about creating REST API servers and other projects using Rust",
        "Beginner Rust developers looking to use the Rocket web framework",
        "Beginner Rust developers looking to use SeaORM for database interactions",
        "Beginner Rust developers curios about JWT authentication"
      ]
    },
    {
      "title": "ShoppingCart in ASP.NET MVC, Web API, Knockout, Architecture",
      "url": "https://www.udemy.com/course/shoppingcart-in-aspnet-mvc-web-api-knockout-architecture/",
      "bio": "Complete working shopping cart solution with ASP.NET technology stack, source code",
      "objectives": [
        "Complete working solution and source code of Shopping Cart application",
        "Complete understanding of \"ASP dot NET MVC\" framework to start building applications with",
        "How to use dependency injections with MEF in \"ASP dot NET\" applications",
        "How to write web api with \"ASP dot NET\" applications",
        "How to develop multi client layered software architecture in asp dot net MVC, Web API, Repository Pattern, Factory Design Pattern and Entity Framework",
        "How to generate Code First POCO classes with Entity Framework",
        "Fully understand complex Knockout Js techniques. Two way binding with bootstrap and Html",
        "Completely understand MVVM model of knockout Js",
        "Take a firm grasp on SQL Server project template in .NET",
        "You will learn, Automapper techniques, as well as Adapter Design Pattern"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Demo of Shopping Cart Application Front End Website": [
          "Category Page",
          "Product Detail Page",
          "Cart Page",
          "Login / Register Page",
          "Checkout Page Part 1",
          "Checkout Page Part 2",
          "My Orders Page",
          "Home Page ( Extendable Functionality )",
          "Shopping Cart Demo Quiz"
        ],
        "Demo of Admin Panel For Shopping Cart": [
          "Admin Panel of Shopping Cart - Department Page",
          "Admin Panel of Shopping Cart - Classes / SubClasses",
          "Admin Panel of Shopping Cart - Product Page",
          "Admin Panel related Quiz"
        ],
        "Architecture of Shopping Cart Application": [
          "Glimpse Of Source Code",
          "What is Software Architecture ?",
          "Architecture Diagram for Shopping Cart",
          "ERD / Database Diagram",
          "Shopping Cart architecture related quiz"
        ],
        "Creating Database For Shopping Cart Application": [
          "Introduction",
          "Adding an Empty Shopping Cart Solution",
          "Department Table",
          "Classes Table",
          "SubClasses Table",
          "Products Table",
          "Skus Table",
          "Customers Table",
          "Helping Tables Part 1",
          "Helping Tables Part 2",
          "Shopping Cart Tables",
          "Receipt Table",
          "Receipt Line Table",
          "Publishing Database to SQL Server",
          "Tracking Version Changes",
          "Seeding Data",
          "Data Base Quiz"
        ],
        "Data Access Layer ShoppingCart.Daa": [
          "Entity Framework",
          "POCO Classes",
          "Code Generation OR Reverse Engineer Code First POCO Entities",
          "Code Examination",
          "Summary",
          "Data Access Layer Quiz"
        ],
        "Helping Projects": [
          "Introduction To Helping projects",
          "ShoppingCart.DTO",
          "Introduction To MEF AKA Managed Extensibility Framework",
          "Mef Extensions",
          "Email Helper Class",
          "Shopping Cart Bootstraper",
          "Core dot Common",
          "Helper Projects Related Quiz"
        ],
        "Repository Pattern and Unit Tests": [
          "Introduction to Repository Pattern",
          "Repository Pattern Class Diagram",
          "Classes Explained",
          "Shopping Cart dot Repositories",
          "Unit Tests",
          "Write Unit Tests for Web API's",
          "Repository Pattern Quiz"
        ],
        "Shopping Cart Web Application": [
          "Introduction",
          "Knockout Js",
          "Knockout's MVVM Architecture and Observables",
          "Bootstrap Theme Integration - Part 1",
          "Bootstrap Theme Integration - Part 2",
          "ASP.NET Web APIs",
          "Shopping Cart - Web App - Project Structure",
          "Adding a new Page",
          "Attaching Model and View Model",
          "App.JS",
          "Category Page - Code Explanation",
          "Debugging Category Page",
          "Product Detail Page - Code Explanation",
          "Cart Page - Code Explanation",
          "Login / Register Page - Code Explanation",
          "Checkout Page - Code Explanation",
          "My Orders Page - Code Explanation",
          "Shopping Cart Web Application Quizz"
        ],
        "Summary": [
          "End Game and the next steps :)"
        ]
      },
      "requirements": [
        "Should be familiar with c# language.",
        "Should have Visual Studio 2017 Community Edition (Minimum), All the code is compatible with VS 2017 Community Edition.",
        "Should be familiar with Object Oriented Concepts like Inheritances, polymorphism, data hiding and encapsulation",
        "Should be able to understand and write programs in javascript and JQuery."
      ],
      "description": "During COVID 19, Online shopping has gained an extra volume. During the Lock Down people sitting in homes, making online orders and receiving items at home.\nI have created course with a complete working source code. Any body can take benefit  from this course, if he want his retailer business to be posted on internet, as well as those, who want to learn about, How shopping cart system works.\nI have touched many different technologies during the creation of this course. Following is a list of those technologies.\nASP.NET MVC\nASP.NET Web APIs\nSQL Server Database Project template\nSoftware Architecture Styles\nQuality Attributes\nReverse Engineer POCO Classes .NET plugin\nKnockout Js\nBootstrap Theme\nMVVM Design Pattern\nRepository Pattern\nEntity Framework\nLINQ\nUnit Testing\nMock Testing\nIntegration Testing\nMEF\nIn the end I am providing entire source code of the shopping cart application, This code is free to use where ever you want. both for educational as well as commercial purpose. There are no copyrights associated with the source code in this course.",
      "target_audience": [
        "Software Architects wants a practical understanding in multi clients applications architecture.",
        "Programmers wanted to have complete Shopping Cart Application Code",
        "Software Architects wanted to explore new architecture techniques with layered architecture",
        "Developers want to learn practical and complex Knockout Js examples.",
        "Want to deeply understand asp dot net Web API's.",
        "Want to Learn Repository Pattern with Entity Framework.",
        "Integration of Bootstrap themes."
      ]
    },
    {
      "title": "Entity Framework from Basic to Advanced",
      "url": "https://www.udemy.com/course/entity-framwork-basic-to-advanced/",
      "bio": "Learn Entity Framework - Every module feature demonstrated with real-time examples",
      "objectives": [
        "Advantages of Entity Framework over traditional ADONET Queries",
        "Understand the differences between database-first and code-first workflows",
        "Build a domain model using database-first workflow",
        "Override code-first conventions (using data annotations and fluent API)"
      ],
      "course_content": {
        "Entity Framework Introduction": [
          "Entity Framework Introduction and First Example"
        ],
        "CRUD Operations": [
          "CRUD Operations",
          "CRUD Operations with BO Class",
          "Stored Procedure Execution"
        ],
        "Querying Database": [
          "Entity SQL",
          "Eager and Lazy Loading Queries"
        ],
        "Additional Features": [
          "Inheritance of Entities",
          "Modeling Techniques"
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "Understanding of generics, lambda expressions will be helpful."
      ],
      "description": "The Microsoft ADO.NET Entity Framework is an Object/Relational Mapping (ORM) framework that enables developers to work with relational data as domain-specific objects and properties, eliminating the need for most of the data access plumbing code that developers usually need to write. Using the Entity Framework, developers issue queries using LINQ, then retrieve and manipulate data as strongly typed objects.\nBy the end of this course you should able to\nUnderstand the EDMX file generation from an existing database.\nUsing Entity Objects with LINQ Queries\nPerforming CRUD Operations using LINQ to Entities\nLearning and executing Entity SQL Queries\nUnderstand the benefits of Eagar and Lazy Loading\nModelling techniques.\nThis course equips the subscriber with in-depth understanding of ORM and the walkthroughs demonstrates the CRUD operations over SQL Server database. The course provides you with access to the sample projects so that you can practice the same.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry",
      "target_audience": [
        "Knowledge of Entity Framework is mandatory for .NET Developers for Rapid Application Development"
      ]
    },
    {
      "title": "Learn PHP and develop Projects.",
      "url": "https://www.udemy.com/course/php-for-beginners-and-intermediate-developers-2-projects/",
      "bio": "Aim to make you professional PHP developer.You will learn basic PHP, PHP&HTML together,Bootstrap,SQL and make 2 projects",
      "objectives": [
        "Basic PHP such as Data types, variables, GET&POST method, if else,switch ,session,PHP date/time almost all basic PHP7 concepts",
        "How to install xampp and how to connect to database",
        "Project 1 will teach how to use PHP with HTML and how to validate form with both HTML and PHP",
        "Project 2 is intermediate level project: We will use PHP and Jquery popular library such Faker library, PHP mailer and Jquery Datatable for rapid development",
        "Learn Mysql query section will teach students the most commonly used query such as inserting data to database, updating table, ,Delete statement and so on.",
        "By making a complete client contact application with lots of feature students will boost their PHP and Mysql knowledge",
        "Admin Login system and use of session to restrict unauthenticated users to our application"
      ],
      "course_content": {
        "Introduction of the course": [
          "Introduction of the course"
        ],
        "PHP Fundamentals": [
          "Installation of xampp server and text editor",
          "Make project directory and write first script",
          "what are variables",
          "echo v print",
          "data type",
          "if elseif else statement",
          "switch statement",
          "while statement",
          "for loop",
          "array",
          "foreach loop",
          "function in PHP",
          "POST",
          "GET",
          "empty to validate form",
          "Date and Time in PHP",
          "What is Session?"
        ],
        "Project 1": [
          "Html form design part1",
          "project1 writing PHP script to display information part 2",
          "Project1 form validation"
        ],
        "SQL Queries": [
          "SQL insert query",
          "SQL Query to read data",
          "SQL Query to update data",
          "SQL Query to Delete data"
        ],
        "Getting started with bootstrap": [
          "How to start with bootstrap"
        ],
        "Client Contact App (Project 2)": [
          "Database connection and bootstrap setup",
          "make a table in Phpmyadmin",
          "Design of client add form",
          "Insert client data to database from form",
          "form validation",
          "Adding flash message",
          "Jquery datatable plugin",
          "PHP faker to generate fake data",
          "front page design",
          "Bootstrap modal and update data",
          "update clients data",
          "12- send email - part 1",
          "send email part 2",
          "14-get message from database"
        ],
        "Admin Login": [
          "login form design",
          "Login part 2 writing login code",
          "Session and logout",
          "Authenticated user can only delete clients"
        ],
        "course summary": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Able to use computer",
        "No PHP knowledge is required"
      ],
      "description": "About Course\nThis course is designed for  PHP beginners and intermediate developers where students will be learning from basic PHP to intermediate level by developing  two awesome projects. The first project will teach students how to use PHP with HTML and dealing with validation of form.  Before starting Project 2(Client contact app ) we will be learning all things(Basic PHP,Form validation, SQL query and Bootstrap) that make us perfect to start project 2. The project 2 is intermediate level project which not only teach students to write  code in PHP but also integrate popular PHP and Jquery library such as PHP Faker, PHP mailer and jquery data table for  rapid application development.\nIn project 2 students will learn about session, flash message, adding ,updating clients and deleting unnecessary data. students will also learn how easy to send email from our application to client email address with few lines of code. students will learn to generate Fake data in database within a second using PHP faker library. Students  will learn how to make login system for admin and use session and also learn to give  flash message. We will allow only authorized user(ADMIN) to access clients information.\n\n\nWhat is PHP?\nPHP is a server side scripting language. that is used to develop Static websites or Dynamic websites or Web applications. It was originally created by Rasmus Lerdorf in 1994.\nIs PHP still popular in 2019?\nAround 80% of websites are built with PHP. The popular CMS such as Wordpress ,Magento, Drupal etc use PHP. The most popular PHP  framework like Laravel and Symfony are using PHP. PHP is easy to learn in comparisons to other programming language .Therefore its first choice programming language among beginners.\n\n\nYou might be interested in what really large platforms have used this programming language? The shortlist below might be enough to convince you:\nFacebook 21.7B Monthly Estimated Visits\nWikipedia 15B Monthly Estimated Visits\nYahoo 4.8B Monthly Estimated Visits\nFlickr 118.0M Monthly Estimated Visits\nTumblr 685.3M Monthly Estimated Visits",
      "target_audience": [
        "Beginner PHP developer who have no any knowledge about PHP",
        "Intermediate PHP developer who want to enhance their PHP knowledge by building Client Contact app .",
        "Those who is from other programming background such as Python, Java,Ruby,JS etc",
        "Those who want to make a cool project for their clients or for themselves",
        "Students who want to be wordpress, Laravel,Symfony etc developer in future after finishing Basic PHP7 and two projects"
      ]
    },
    {
      "title": "Angular and Laravel: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/angular-laravel-influencer/",
      "bio": "Angular Material, Angular Universal, Laravel 8, Laravel Sanctum, Docker, Redis, Stripe, Frontend & Backend Filtering",
      "objectives": [
        "Use Docker",
        "Authenticate using Laravel Sanctum",
        "Caching with Redis",
        "Paying with Stripe",
        "Different types of Users",
        "Angular Material",
        "Angular Universal"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel": [
          "Setup",
          "Docker",
          "Migrations",
          "Authentication Endpoints",
          "Routes",
          "Register",
          "Login",
          "Authenticated User",
          "Logout",
          "Scopes",
          "Profile",
          "Query Scopes",
          "Database Diagram",
          "Products",
          "Links",
          "Orders",
          "Json Resources"
        ],
        "Laravel Ambassador": [
          "Ambassador Authentication Endpoints",
          "Common Routes",
          "User Revenue",
          "Ambassador Endpoints",
          "Products",
          "Redis",
          "Pagination",
          "Searching Products",
          "Sorting Products",
          "Stats",
          "Rankings",
          "Redis Sorted Sets",
          "Events",
          "Creating Links"
        ],
        "Laravel Checkout": [
          "Checkout Endpoints",
          "Getting Links",
          "Creating Orders",
          "Transactions",
          "Stripe",
          "Confirm Orders",
          "Sending Emails"
        ],
        "Angular Admin": [
          "Setup",
          "Template",
          "Routes",
          "Register",
          "Login",
          "Services",
          "Authenticated User",
          "Logout",
          "Interceptors",
          "Profile",
          "Event Emitters",
          "Users",
          "Angular Material",
          "Mat Paginator",
          "Links",
          "Products",
          "Creating Products",
          "Updating Products",
          "Deleting Products",
          "Orders"
        ],
        "Angular Ambassador": [
          "Setup",
          "Common Files",
          "Navigation",
          "Profile",
          "Header Component",
          "Stats and Rankings",
          "Router Link Options",
          "Backend Products",
          "Lazy Loading",
          "Http Params",
          "Searching Products",
          "Sorting Products",
          "Selecting Products",
          "Generating Links",
          "Frontend Products",
          "Pipes"
        ],
        "Angular Universal Checkout": [
          "Setup",
          "Link Data",
          "Angular Universal",
          "Products",
          "Order Total",
          "Submitting the Form",
          "Stripe"
        ]
      },
      "requirements": [
        "Good understanding of Angular",
        "Good understanding of Laravel"
      ],
      "description": "Learn how to create an Ambassador App using Angular and Laravel. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Laravel API.\nIn Laravel you will learn:\nHow to create API's with Laravel\nAuthenticate using Laravel Sanctum\nLaravel Json Resources\nInstall and use Docker\nUse Redis\nUse Stripe\nLaravel Events & Listeners\nSending Emails\nIn Angular you will learn:\nAngular CLI\nUse interceptors\nCreate public and private routes\nUse Reactive Forms\nAngular Material\nAngular Universal\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Developers that want to learn new concepts fast"
      ]
    },
    {
      "title": "Learn HTML, CSS and Bootstrap: 3 Courses in 1",
      "url": "https://www.udemy.com/course/learn-html-css-and-bootstrap-3-courses-in-1/",
      "bio": "Learn HTML & CSS Basics and Create Complete Websites using Bootstrap",
      "objectives": [
        "will learn the basics of HTML",
        "will learn the basics of Cascading Style Sheets",
        "will learn how to write HTML and CSS files using Visual Studio Code",
        "will explore and discover many of HTML Elements",
        "will test HTML pages on the web browser",
        "will validate HTML page using W3C Markup Validation",
        "will learn how to download jQuery and Bootstrap",
        "will learn how to include jQuery and Bootstrap in a Website Project",
        "will understand Bootstrap layout and components",
        "will learn how to make a responsive website using Bootstrap"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "HTML": [
          "Work Environment Setup",
          "What is HTML and How does it Work?",
          "HTML Elements",
          "Paragraphs",
          "Headings",
          "Line Breaks",
          "Images",
          "Hyperlinks",
          "Lists",
          "Divisions",
          "Tables",
          "Forms",
          "Other HTML Elements",
          "Inline Elements vs Block Elements",
          "Structure of HTML file",
          "Validate HTML",
          "HTML Iframe",
          "HTML Practice Test"
        ],
        "CSS": [
          "Introduction to CSS",
          "CSS Selectors",
          "Adding CSS to HTML",
          "CSS Practice Test"
        ],
        "Creating Website Template": [
          "Downloading Bootstrap and jQuery",
          "Setting up Project Files",
          "Navigation Menu",
          "Images Slider",
          "Home Section",
          "About Section",
          "Services Section",
          "Team Section",
          "Contact Section",
          "Footer Section",
          "Responsive Website"
        ],
        "Creating Gym Website": [
          "Setup Gym Website Project Files",
          "Gym Images Slider",
          "Gym Home Section And Navigation Menu",
          "Gym About Section",
          "Gym Interests Section",
          "Gym Trainers Section",
          "Gym Footer Section"
        ],
        "Migration from Bootstrap 4 to Bootstrap 5": [
          "Migration from Bootstrap 4 to Bootstrap 5"
        ],
        "Course Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "Internet Access"
      ],
      "description": "Learn HTML, CSS and Bootstrap: 3 Courses in 1\nLearn HTML & CSS Basics and Create Complete Websites using Bootstrap\n\"This course is only for a student at the beginner level, and who needs to learn the basics of creating static responsive websites.\"\nCourse Language:\nEnglish\n\nCourse prerequisites:\nBasic Computer Skills\nInternet Access\nWilling to learn\nIn this course student will:\nLearn HTML basics\nDownload, Install and Use Visual Studio Code as the Text Editor for creating HTML & CSS files\nWrite HTML code examples\nTake HTML & CSS exercises\nGain knowledge about many HTML elements and Learn how to use them correctly\nValidate HTML files using W3C Markup Validation Service\nLearn Cascading Style Sheets (CSS) Basics.\nLearn the different types of CSS Selectors.\nLearn the different ways of adding CSS to HTML documents.\nUnderstand the Bootstrap Layout and Components.\nLearn how to use Bootstrap to create beautiful websites.\nLearn how to make a responsive website.\nResources\nEach practical video comes with a zip file that contains source code so make sure you are doing things right and there are no differences between your source code and the source code among the resources.\nCommunication\nI am available for your questions - send me a direct message anytime.\n\nI hope you find this course valuable, interesting, and useful.\nI hope you enjoy the course and that it helps you in your professional development!\nBest Regards,\nAM Learning\nMake Learning Fun",
      "target_audience": [
        "Beginners",
        "Junior Frontend Developers"
      ]
    },
    {
      "title": "Learn Fullstack Web Development With Spring And Angular",
      "url": "https://www.udemy.com/course/learn-fullstack-web-development-with-spring-and-angular/",
      "bio": "A complete course to master the two hottest web frameworks",
      "objectives": [
        "Learn to use Angular Framework with Spring",
        "An unique course which teaches you to bring the power of Java to Angular",
        "Learn to create a complete app using Spring and Angular"
      ],
      "course_content": {
        "Angular Basics": [
          "Introduction",
          "What is angular",
          "Installing Angular",
          "Understanding Angular Files",
          "Typescript",
          "Components",
          "Modules",
          "Templates",
          "Styling",
          "Routing"
        ],
        "Spring Setup": [
          "Creating the Project",
          "Why Spring + Angular",
          "Setting up our API",
          "Database Setup",
          "Security Setup",
          "Oauth Overview",
          "Implementing Oauth2",
          "CORS"
        ],
        "Advanced Angular": [
          "Dependency Injection",
          "The HttpClient",
          "Data Binding",
          "Event Binding",
          "Forms - Part 1",
          "Forms Part 2",
          "Testing",
          "API Reference"
        ],
        "Project": [
          "Final Project. 1",
          "Final Project. 2",
          "Final Project. 3",
          "Final Project. 4",
          "Final Project. 5",
          "Final Project. 6",
          "Final Project. 7",
          "Final Project. 8",
          "Final Project. 9",
          "Final Project. 10",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of Java and JavaScript is required for completing the course."
      ],
      "description": "The world of app development is fast paced, where app trends come and go. What started as simple and functional apps, have now resulted apps that are more integrated at every step. This has pushed for a change in the way we build our apps, including the tools we use. We are no longer capable of pushing out dynamic and fluid apps without using frameworks!\nFrameworks are libraries or set of guidelines that simplify the process of building apps by allowing developers to write less code that does more. Front-end frameworks work hand-in-hand with server-side frameworks to ensure a complete functional framework.\nThe course has been designed for intermediate developers who are at least familiar with Core Java, an idea about the Spring Framework and at least basic web development knowledge as the course will not cover basic Java paradigms.\nThis Spring + Angular tutorial will go over basic concepts of Angular 5 including the theory behind it, why it’s useful, the standard file structure, TypeScript, the CLI, components, and so on. Following this, you’ll delve into Spring and learn how to integrate it into your Angular project.\nWhen it comes to the Spring Framework, you’ll go over how to create your back-end server and get it up and running with Angular. From there you will work on building an actual project from the ground up – A ToDo List Application. This will include designing an entire front-end layout with Angular and integrating a back-end system with Spring.\nThe course will cover topics such as Angular Fundamentals (theory behind it, why it’s useful, building a simple Hello World Project, command line interface, standard file structure, TypeScript, components, building blocks, etc.), how to integrate Spring with your Angular project, how to create your back end server and get Spring working with Angular, advanced Angular concepts like dependency injection, HTTP client, form handling, etc. and complete a ToDo List Application.\nAt the end of this course, you will have the knowledge and the experience to actually start building your own Angular applications from scratch.\nEnroll now and start your career as a web developer now!",
      "target_audience": [
        "Anyone who wants to learn to use Angular and Spring together should find this course very useful"
      ]
    },
    {
      "title": "Try Python Flask API Development 2025",
      "url": "https://www.udemy.com/course/flask-api-development/",
      "bio": "Start learning Flask API development in 2025",
      "objectives": [
        "Confidently build Flask APIs that interact with databases.",
        "Implement data models using SQLAlchemy.",
        "Create well-structured and documented API endpoints.",
        "Utilise Docker for streamlined workflow management."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Source Code"
        ],
        "Preparing For Python Development": [
          "Installing Python 3.x on Windows",
          "Installing Python 3.x on Mac",
          "Visual Studio Code Install and Initial Configuration on Windows",
          "Visual Studio Code Install and Initial Configuration on Mac",
          "Introduction to Virtual Environments",
          "Virtual Environments on Windows",
          "Virtual Environments on MacOS"
        ],
        "Starting the Project": [
          "Creating a new Flask Project",
          "Managing Dependencies with PIP",
          "Project Linting and Formatting Setup"
        ],
        "Docker/Database Setup": [
          "Dockerizing PostgreSQL",
          "Using a Docker Environment Variables File",
          "Creating a PostgreSQL Setup Script"
        ],
        "Flask API Factory Approach": [
          "The Flask API Factory Approach",
          "Flask API project structure",
          "Flask API Entry Point",
          "Using Environment Variables",
          "Defining a Modular Project Configuration"
        ],
        "Models and Database Synchronisation": [
          "SQLAlchemy ORM",
          "Database ERD",
          "Creating Models - Category",
          "Creating Models - Product",
          "Creating Models - ProductLine",
          "Creating Models - ProductImage",
          "Creating Models - SeasonalEvent",
          "Implementing Alembic Migration System",
          "Migrating Models to the Database with SQLAlchemy and Alembic",
          "Finalising Models"
        ],
        "Building Our First API End Point": [
          "Registering Blueprints",
          "Creating Schemas with Marshmallow",
          "APIFairy API Framework",
          "Building an API Route - Return All Categories",
          "Implementing Swagger-UI API Documentation"
        ],
        "Inserting Data into Single Tables": [
          "Database Insertion Workflow",
          "Building an API Route - Inserting a New Category Record",
          "Building an API Route - Inserting a New Product Record",
          "Building an API Route - Inserting a New Product Line Record",
          "Building an API Route - Inserting a New Product Line Image Record",
          "Building an API Route - Add a new Attribute Record",
          "Building an API Route - Add a new Seasonal Event",
          "Building an API Route- Add a New Product Type Record",
          "Building an API Route- Add a New Attribute Value Record"
        ],
        "Inserting Data into Many-to-Many Tables": [
          "Inserting into Product, Product Type Link Table (Many-to-Many Table)",
          "Inserting into ProductLine, Attribute Value Link Table (Many-to-Many Table)"
        ]
      },
      "requirements": [
        "No programming needed, everything will provided."
      ],
      "description": "Master data creation & management with Flask APIs and a modern workflow\n\n\nThis project-based course delves into building a full-fledged Flask API application, empowering you to effectively create, manage, and serve dynamic data. By the end, you'll have a robust API and the hands-on skills to tackle real-world data-driven projects.\n\n\nWhat you'll learn:\n\n\nSolid foundations: Set up your Flask project, manage dependencies, and implement linting for professional code.\nModern containerisation: Leverage Docker to manage your database (PostgreSQL) and environment variables seamlessly.\nStructured & scalable: Follow the Flask API factory approach for a well-organised and maintainable project structure.\nPowerful ORM: Utilise SQLAlchemy to map your data models to the database and ensure seamless interaction.\nData modelling: Design and implement comprehensive models to represent your data entities effectively.\nMigrations & version control: Manage database schema changes using Alembic for a smoother workflow.\nAPI construction: Build robust API endpoints using best practices, blueprints, and data validation with Marshmallow.\nComprehensive documentation: Integrate Swagger-UI to provide API documentation for easy consumption and usage.\n\n\nCourse outline:\n\n\nProject Setup: Learn how to set up a Flask project, manage dependencies, and configure linting.\nDocker & Database: Discover containerisation with Docker, explore PostgreSQL setup, and utilise environment variables effectively.\nFlask API Factory: Understand the factory approach, implement the project structure, and configure the entry point.\nModels & Database: Dive into SQLAlchemy, design your data model, create models for various entities, and leverage Alembic for migrations.\nBuilding an API: Register blueprints, utilise Marshmallow for data validation, create your first API endpoint, and integrate Swagger-UI documentation.\n\n\nWho should take this course:\n\n\nAnyone new to Flask looking to take their first steps building an API in Flask.\n\n\nBy the end of this course, you'll be able to:\n\n\nConfidently build Flask APIs that interact with databases.\nDesign and implement data models using SQLAlchemy.\nCreate well-structured and documented API endpoints.\nUtilise Docker for streamlined workflow management.\n\n\nReady to create data-driven solutions with Flask APIs? Enrol today!",
      "target_audience": [
        "Anyone new to Flask looking to take their first steps building an API in Flask."
      ]
    },
    {
      "title": "Python Django: Learn Django Core From Scratch",
      "url": "https://www.udemy.com/course/python-django-learn-django-core-from-scratch/",
      "bio": "Django python from scratch. Learn Django core, full stack web development with Django python, Django rest framework",
      "objectives": [
        "Learn Django, django python",
        "Learn how to setting up Python, PostgreSQL, Visual Studio Code, Postgres App, PgAdmin on Mac",
        "Understand how to use Python and Django Framework",
        "Learn Python Package Managing ( PIP ) Tool and Virtual Environments",
        "Learn modeling your domain and code classes with Django",
        "Basic Commands for Mac",
        "How to use PyPI",
        "Learn Python Virtual Environment",
        "Understand Django basics like Models, HTTP, Processes",
        "Learn Django Templates basics and configurations",
        "Learn Django Migrations",
        "Learn how to do Django Migrations with codes",
        "Learn signing methods from Django web site",
        "Simple Mail transfer protocol: STMP",
        "Send and receive Django Signals",
        "Django is an excellent framework for new web developers and efficiency-minded veterans alike.",
        "What is Django? Django is a Python-based Web Application Framework that follows the Model-View-Controller architectural pattern",
        "What is Django used for? As an MVC Web Application Framework, many use Django to develop and deploy web applications rapidly.",
        "Who uses Django? Python programmers who are interested in a low code development prefer Django for its “don’t repeat yourself” model.",
        "Is Django frontend or backend? Frontend design is related to what the user sees and interacts with. Backend is concerned primarily with the data.",
        "What are the key considerations when deciding on a Web Application Framework? There are both open-source, free Web Application Frameworks and commercial",
        "What is the model-view-controler (MVC) architectural pattern? The Model-View-Controller architectural pattern (MVC) is a type of software pattern for creating u",
        "What careers use Django? As a Python-based web framework, Django is primarily used by web developers",
        "What careers use Django? As a Python-based web framework, Django is primarily used by web developers"
      ],
      "course_content": {
        "Python Django: Django Core Course Overview": [
          "Intro to Python Django Course?",
          "FAQ about Python Django, Learn Django Core From Scratch",
          "Projects Github Links"
        ],
        "Python Setup": [
          "Install Python for Windows",
          "Install Python For Mac",
          "Installing Django"
        ],
        "Start to Django": [
          "Set Django",
          "Run the Django",
          "Quiz"
        ],
        "Views and Templates in Django": [
          "Create our first view",
          "Templates and Filter – I",
          "Templates and Filter - II",
          "QUIZ"
        ],
        "Working with Models": [
          "Models in Python Django",
          "Queryset – I",
          "Queryset - II",
          "QUIZ"
        ],
        "Working with Forms": [
          "Working with Forms – I",
          "Working with Forms – II",
          "Working with Forms – III",
          "Quiz"
        ],
        "CBV’s": [
          "CBV's – I",
          "CBV's – II",
          "CBV's – III",
          "Quiz"
        ],
        "Sessions and Authentication Modules": [
          "Sessions",
          "Authentication Modules – I",
          "Authentication Modules – II",
          "Quiz"
        ],
        "Ajax with Django": [
          "Ajax with Django",
          "Quiz"
        ],
        "Extra": [
          "Python Django: Learn Django Core From Scratch"
        ]
      },
      "requirements": [
        "A computer with an internet connection",
        "Free software and tools used during the course",
        "Desire to learn Python Django",
        "Desire to learn django",
        "Desire to learn django from scratch",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello,\nWelcome to Python Django: Learn Django Core From Scratch course.\nDjango, python django, django rest framework, django python, django rest, django from scratch\nDjango python from scratch. Learn Django core, full stack web development with Django python, Django rest framework\nThis course is for beginners. We will take you from beginner to advance level.  You will learn Django development step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of Python.\nDjango is an excellent framework for new web developers and efficiency-minded veterans alike. Udemy Django courses cover all aspects of Django development, whether you’re interested in using the framework by itself, or adding it to your fullstack development practice.\nIf you find yourself up against constant deadlines, Django is a great framework to add to your skillset. Initially released in 2005, Django was designed to facilitate efficient and quick web app development by delivering high-quality code and transparent writing in a versatile and feature-rich package.\nIn this course, we are going to start to understand what Python and Django framework is.\nThen we will continue with setting up the development languages and frameworks like Python, PostgreSQL, Visual Studio code, Postgres App, and PgAdmin. If you are not familiar with these languages and frameworks, don’t worry you will learn and use these throughout this course.\nStep-by-Step Way, Simple and Easy With Exercises\nIf you don’t have experience with Python or you are totally new, we will start with the basics of Python. Before starting Django we will simply comprehend Python Package Managing ( PIP ) tools and virtual environments. Finally, we are going to start Django models, databases, URLs, views, migrations, authentication, cache, and so on\nDjango is an interesting framework for developers because it provides the infrastructure required for database-driven websites that have user authentication, content administration, contact forms, and more. Instead of creating all of these features from scratch, you can use the Django framework that is already built so you can focus your time on developing your web app instead.\nWhat is Django?\nDjango is a Python-based Web Application Framework that follows the Model-View-Controller architectural pattern. As one of the most popular Web Application Frameworks available today, Django has an extensive amount of documentation and extensions available. It is also built primarily for data-driven websites. A non-profit organization and an active community of developers contribute to Django’s platform, which is both open-source and free. The advantages of using Django are rapid development and less code. Django also provides an administrative interface and many bundled components. Websites such as The Washington Times, Instagram, and Nextdoor used Django for development, and employers frequently seek Django developers and Python specialists for web development.\nWhat is Django used for?\nAs an MVC Web Application Framework, many use Django to develop and deploy web applications rapidly. Django makes it easier for developers to hit the ground running rather than having to build the entirety of their platform from scratch. Mainly, Django is useful for those who are experts in Python — data models, settings, and files all use the Python language. In development since 2005, Django is a mature Web Application Framework with a significant amount of documentation and support, making its utilization attractive to those building complex, data-driven applications. Because Django is well-supported and robust, developers can use Django for large, enterprise-grade applications — but you can also use it for simpler applications.\nWho uses Django?\nPython programmers who are interested in a low code development prefer Django for its “don’t repeat yourself” model. Ideally, Django can create streamlined programs that require little coding to initialize. It has a significant body of architecture within its components and libraries, and you can administer it internally. Developers primarily use Django for web applications that need to balance large amounts of data and significant loads. Over 2,500 packages are available to extend Django’s behavior, making it a particularly robust platform. Developers interested in using Django can check to see if the functionality they desire already exists. Django is also often favored by full-stack developers who want to be able to build web applications from start to finish, as you can use it for both frontend and backend design.\nIs Django frontend or backend?\nFrontend design is related to what the user sees and interacts with. Backend is concerned primarily with the data. Django is both a frontend and backend Web Application Framework, unlike platforms like JavaScript’s Bootstrap, which you can use for frontend design. Django concerns itself primarily with the application’s interior workings, such as data manipulation, but is also useful for end-to-end frontend and backend design. A developer familiar with Django may be able to develop their web application “full-stack,” developing the entirety of the web application from front to back. However, frontend and backend work in Django can be separated if desired, meaning you can use Django for one or the other with some work. When separated in this way, Django is compatible with other frontend or backend technology.\nWhat are the key considerations when deciding on a Web Application Framework?\nThere are both open-source, free Web Application Frameworks and commercial, proprietary frameworks. The latter is more expensive, but it will generally come with more support. Web Application Frameworks usually focus on a specific language. Django works with Python. Additionally, every Web Application Framework has its own level of complexity and learning curve, documentation, and support. Most web developers will want a Web Application Framework in a language they are fluent in. A solid library of extensions and plug-ins is also ideal as it reduces the amount of work the developer will need to do. Since the Web Application Framework has a lot to do with how a system functions, the system's look-and-feel may also come into play, as may other quality of life issues such as the robustness of the administrative panel.\nWhat is the model-view-controler (MVC) architectural pattern?\nThe Model-View-Controller architectural pattern (MVC) is a type of software pattern for creating user interfaces. It standardizes how information flows through an application and makes it easier for developers to control all levels, from frontend to backend. Many Web Application Frameworks today follow the MVC model. Under the MVC architecture, the “model” refers to the data. The “view” refers to the display. Finally, the “controller” refers to the way that both models and views are updated. By retaining this consistency, multiple developers can also work together (both frontend and backend) without potentially retreading ground or overwriting essential items. The MVC model makes it easier to manage interconnected elements while ensuring that the application functions as a whole. MVC is compatible with desktop, mobile, and web application designs.\nWhat careers use Django?\nAs a Python-based web framework, Django is primarily used by web developers. Because developers can use Django for both front- and backend web development, it's useful for frontend developers, backend web developers, and full-stack web developers. Large enterprises such as Instagram, Mozilla, and Pinterest are driven by Django and contribute to the Django community. Everyone from entry-level web developers to senior web architects can make a promising career with Django.\nWhat are some alternatives to Django?\nIn the world of Python-based web frameworks, there are dozens of contenders. Flask is a popular Django alternative. Those who are new to web development may find Flask easy to adapt to, as its structure is clean and rigid. Both are based on Python, but Django requires more individualized knowledge. Another popular alternative to Django is TurboGears. TurboGears does not have the feature set of Django but has some extensive database management support. Other alternatives include Web2Py, Tornado, and CherryPy. When looking at Django, Flask, TurboGears, and other frameworks, it's important to contemplate a few factors: price, support, community, features, and integration. While many are better for niche situations, developers often consider Django to be the best all-around.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s instructors' expert.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Python & Django updates its system, and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\n· Seeing clearly\n· Hearing clearly\n· Moving through the course without distractions\nYou'll also get:\nLifetime Access to The Cours\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nPython Django: Learn Django Core From Scratch\nWe offer full support, answering any questions.\nSee you on the other side!",
      "target_audience": [
        "For those who want a great start guide to Django",
        "Python developers want to enter Web Development with Django",
        "People who want to learn Django",
        "People who want to learn python django, django from scratch"
      ]
    },
    {
      "title": "Build Django Website From Scratch to Deploy in CPANEL 2025",
      "url": "https://www.udemy.com/course/build-your-first-website-in-django-5/",
      "bio": "Boost Your Business as Python Django web Developer by Building Websites for your Clients in 2025",
      "objectives": [
        "By the end of this course you will be able to build any project in Django web framework.",
        "You can change your level from beginner to an expert Django web developer.",
        "You will learn essential things you need in Django to build your real projects.",
        "This course will help you learning and reach the next level in Django to build your real-projects."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of programming (any language, preferably Python).",
        "Understanding of HTML and CSS."
      ],
      "description": "Overview :\n\nWith this comprehensive Django course, designed carefully for developers who want to learn the most popular python web framework Django step by step in order to build websites for companies from scratch to deploy. Through this course we tried to explain the foundation in Django’s core concepts like virtual machine, MVT, request-response, client-server before starting our project, after that we focus on building our project step by step by optimizing the MVT architecture in Django from user, Urls, Views, Models and Templates. At the end of this course you will learn the most practical approach to build websites in Django efficiently.\n\n\nWhat you will learn in this course :\n- Setup Python\n- Setup VSCODE\n- Install Python Extension\n- Setup Git And Run The First Python File On VSCODE\n- What is Django\n- Django is Popular Fast Secure Scalable\n- Client Server Django Communication\n- Create Virtual Machine\n- Installation Django Project\n- Installation Application in Django\n- Django Files Structures\n- Django Architecture MVT- Model View Template\n- Request-Response\n- Setup Template\n- Settings - Static Files (HTML, CSS, Javascript, Images)\n- Inheritance Template\n- Backend in Django - CRUD (Create, Read, Update, Delete) operations\n- ORM and Database\n- How to change Slider Section dynamically\n- How to change About Section dynamically\n- How to change Service Section dynamically\n- How to change Portfolio Section dynamically\n- How to change Team Section dynamically\n- How to change Faq Section dynamically\n- How to receive leads by Contact Form Section\n- How to change everything dynamically\n- How to customize Admin theme by Jazzmin application\n- Authentication and Authorization in Django\n- How to deploy Django Website on CPanel\n\n\nBy the end of this course you will be able to build any project in Django web framework.\nYou can change your level from beginner to an expert Django web developer.\nLearn Django step by step in order to be able to analyze any code in Django and know its purpose in any your project.\nYou will learn essential things you need in Django to build your real projects.\nI hope you will find in this course a tool to improve your full-stack project.\nI'm available for any questions .\nI'm here to help you as much as I can.\nThis course helps you starting from scratch all you need is just a computer whatever its features.\nThe most important thing is the first step and working consistently every day.\nIf you work hardly you will be an expert web developer in the future.\nSearch the best place to focus better on this course. The environment is so important to be more productive.\nI hope you enjoy with this course. enjoy yourself by learning new things everyday. Good Luck.",
      "target_audience": [
        "Beginner programmers that want learn Web Development using Python and Django",
        "Programmers who wants to learn Django step by step to build website from scratch to deployment."
      ]
    },
    {
      "title": "Learn Web Payment Processing with Stripe - A Quick intro",
      "url": "https://www.udemy.com/course/learn-web-payment-processing-with-stripe-a-quick-intro/",
      "bio": "Learn the basics of the most trending online payment processing with hands-on",
      "objectives": [
        "Understand the basics of Stripe Payment",
        "Know how to integrate Stripe Payment in your web app"
      ],
      "course_content": {},
      "requirements": [
        "Some basic web development experience",
        "Some java experience would be preferred"
      ],
      "description": "What is covered in this course?\nThis course is mainly an introduction guide to Stripe - a popular online payment tools.\n\n\nHow is this course organized?\nFirst, an overview on Stripe is presented. Then, we use Java, Spring Framework and some Html, Javascript to build a shopping cart demo app. Next, the Stripe Payment with basic functions is presented. After that, some further topic such as Payment Order and Subscription is shown as well.\n\n\nHow is the course presented?\nThe course is usually presented with some slides and will also go back and forth between Stripe documentation and hands-on practice. Stripe provides support for a range of languages. In this tutorial, Java is used.\n\n\nWhat about bonus section?\nThere is a bonus section talking about Paypal and showing how to integrate a Paypal function into your app as well.\n\n\nWill there be live account?\nAll practices in the course are using test accounts provided by Stripe. It takes plenty of effort to make sure the quality of the app before moving test to live, which would be difficult to include in this course.",
      "target_audience": [
        "Anyone wants to learn payment processing with Stripe"
      ]
    },
    {
      "title": "Wordpress Custom Theme",
      "url": "https://www.udemy.com/course/wordpress-theme-development-from-scratch/",
      "bio": "A real-world, hands-on training on how to create a WordPress theme from scratch, without any template, theme or plugin.",
      "objectives": [
        "Learn how to create a WordPress Theme from ground-up and face real world challenges",
        "Create form without any plugin",
        "Create theme without any plugin or template",
        "Learn template hierarchy",
        "Learn creating and using Shortcodes",
        "Learn how to use JavaScript and Ajax in WordPress",
        "Learn how to deploy WordPress to hosting server"
      ],
      "course_content": {
        "Getting Prepared": [
          "Introduction",
          "Project Tour"
        ],
        "Install Required Softwares": [
          "Install WordPress and AMP Package"
        ],
        "Basics of Theme Development and Settings": [
          "Template Hierarchy",
          "Basic Theme and Development Settings"
        ],
        "Building Basic Theme": [
          "Header, Footer and Sidebars",
          "Adding More Sidebars",
          "Core CSS Classes and Utility Functions",
          "WordPress Content Loop",
          "Custom Menu"
        ],
        "Advanced Theme Development": [
          "Creating Multiple Template Files",
          "Register and Display Sidebars",
          "Page Title and Heading",
          "Posts and Pagination",
          "Banner and Header Image",
          "Custom Template"
        ],
        "Forms in WordPress": [
          "Search Form and Result",
          "Custom Contact Form",
          "WP Nonce and Form Security",
          "Custom Field",
          "Comment Form",
          "Ajax Form with jQuery and WordPress",
          "WordPress ShortCode"
        ],
        "Deployment and Security": [
          "Move WordPress to Hosting Server"
        ]
      },
      "requirements": [
        "Basic PHP",
        "Basic WordPress",
        "HTML and CSS"
      ],
      "description": "Learn how to create a WordPress theme from ground-up. Create custom forms and Shortcodes. Face real-world challenges and learn tips-tricks. This course teaches you a very practical way to create your own theme.\n\nOn the job like development, examples from real-word practices\nThe course is taking you through a real world development process. From basic to advanced theming and functionality. You will also learn how to use Ajax and create forms with and without Ajax. Again, no plugin used. We will also cover basic form security provided by WordPress. During development you will learn how to avoid some glitches and take full control of entire theme.\nA complete Project, not just theme development\nIt is a complete project development training rather than developing some just for training or demonstration purpose. I have imagined a fictional client and put everything you needs during developing a regular corporate introductory or personal projects.\nDescribes every theme concept in detail\nLearn concepts like WordPres Template Hierarchy, form validation and security, custom sidebars, search, pagination and custom menu.\nYou will also learn creating various types of forms, use WordPress functions to secure and validate form data. Utilize Ajax helpers provided by WordPress.\nFrom installation to deployment\nTake you through basic installation to deployment on production server, without any plugin. We are describing deployment on a shared LAMP server. Each step described in detail. Also, learn how make you WordPress site secured.\nOverview of content\n\nBasic of WordPress installation and settings\nTheme concept and template hierarchy\nMultiple page layout\ncustom sidebars and menu\nBanners and headers customization\nSearch and pagination\nCustom forms and Ajax\nShortcodes\nScript and style enqueue\nDeployment and security\nCustomize Comment Form\n\n\nWho should take this course\n\n\n\nWordPress Developer\nWeb designer or PHP programmer want to create WordPress theme\nAnyone with basic HTML, PHP and WordPress skill, who wants to learn how to create a WordPress theme without any template or plugin",
      "target_audience": [
        "Who wants to create a custom WordPress without any template or plugin.",
        "Learn to create custom forms with and without Ajax.",
        "Learn Shortcode, custom Sidebars, custom menu",
        "Deployment to live server",
        "Real world tips, tricks and security"
      ]
    },
    {
      "title": "WordPress Theme Customization 102 - Create a WP Child Theme",
      "url": "https://www.udemy.com/course/wordpress-child-theme-customization/",
      "bio": "In this course I show you how to create a custom WordPress site utilizing a child theme, plugins, and more theme edits",
      "objectives": [
        "Create a WordPress Child Theme",
        "Customize a WordPress Child Theme",
        "Edit a WordPress Child Theme",
        "Add links, copyright, and info to WordPress Footer",
        "Create Lightbox or Fancybox Functionality in WordPress Footer for Links",
        "Troubleshoot WordPress Child Themes and Themes",
        "Create a fully functional WordPress site, using a Child Theme, a Lightbox/Fancybox for onpage links and the basics of reverse engineering WordPress Themes"
      ],
      "course_content": {
        "Site Preparation & Intro": [
          "Introduction",
          "About The Themes We'll Be Creating",
          "Prepping The New Install for a Child Theme"
        ],
        "WordPress Child Theme Creation & Customization": [
          "Creating a Child Theme",
          "Customizing the Child Theme Settings"
        ],
        "WordPress Child Theme Editing & Non-Plugin Lightbox": [
          "Child Theme Editing & Troubleshooting - Part 1",
          "Child Theme Editing & Lightbox - Part 2",
          "Course Wrap Up"
        ]
      },
      "requirements": [
        "How to install WordPress. You can learn how at my WordPress for Beginners course for free."
      ],
      "description": "WordPress Theme Customization 102 teaches beginner to intermediate Wordpress users, how to create and implement a WordPress Child Theme for any WordPress theme you use or want to use, how to utilize fancybox functions without a plugin, and more!\nIn this beginners Wordpress theme customization and child theme course I'll show you step by step how to develop a Wordpress child theme by walking you through a real life example of one of my sites which utilizes a child theme.\nI show you in easy to understand and follow detailed steps, when you want to use a child theme and why, how to create a WordPress child theme for any Wordpress theme, and then detailed instructions on customizing and even editing the Wordpress child theme you create.\nIn addition to teaching you in detail how to customize and edit your new child theme, I show you how to setup lightboxed links for things like a privacy policy, so your users can simply view a page within a lightbox.\nIn addition I give you all the tools and code used in this course to download and use for your own projects!\n.I'm happy to bring this and many other top notch training courses to you, please message me if you have any questions!",
      "target_audience": [
        "This WordPress Theme Customization course is meant for beginners and newbies who are not familiar with how to create and implement a child theme in wordpress, edit a theme, add custom links and copyright info to the footer, and enable a lightbox for those links only.",
        "Anyone wanting to learn WordPress Child Themes",
        "Anyone wanting to learn WordPress Theme Customization",
        "Anyone wanting to learn how to add a non-plugin Lightbox or Fancybox"
      ]
    },
    {
      "title": "Java Server Faces 2.2 ( JSF ) with Theory and Practice",
      "url": "https://www.udemy.com/course/java-server-faces/",
      "bio": "Learn the most important component of Java EE stack.",
      "objectives": [
        "Understanding the basics of Java Server Faces",
        "Applying best practices while writing converters, validators etc",
        "Preparing for any JSF toolkit such as Primefaces or RichFaces",
        "Integrating JSF with Spring"
      ],
      "course_content": {
        "Preparation and Motivation": [
          "Introduction to technology stack",
          "Preparing development environment",
          "Model View Controller Architecture",
          "Action Oriented and Component Oriented MVC Frameworks",
          "Differences between action and component oriented MVC frameworks"
        ],
        "JSF Introduction": [
          "All source codes here",
          "JSF Elements (Backing bean, view and FacesServlet)",
          "Component",
          "Component Tree",
          "State Saving and View State",
          "Server-side and client-side state saving",
          "LAB 1 - Build, install and run base JSF application",
          "LAB 1 (continue) - HTML rendering explanation"
        ],
        "JSF HTML TAGS AND FACELETS": [
          "HTML tags",
          "Lab 2"
        ],
        "FACELETS - Page Templating": [
          "Facelets",
          "Lab 3- Using facelets to create template pages"
        ],
        "Expression Language": [
          "Theory of expression language",
          "Lab 4 - Implementation of expression language"
        ]
      },
      "requirements": [
        "You should have some experience with either JSP/servlet web applications or EJB or Spring applications."
      ],
      "description": "This course will follow Oracle JSF certification topics and implement the required codes one by one while progressing. Here is the certification topics:\nEssentials of JSF2.0\nIdentify the features of JSF such as Facelets, BookMarkable View, AJAX support and the benefits they bring in\nIdentify the life cycle stages of JSF, flow of request processing, and purpose of FacesContext\nDesign XHTML pages using JSF HTML tag library and demonstrate usage of JSF implicit objects\nDevelop and associate model components with views using CDI Named beans and identify the advantages of CDI Named beans over Managed Bean\nManage user and application state using various scopes like flash, conversation, application, request, and session\nImplement internationalization/Localization using resource bundle and Locale class\nJSF Navigation Model\nDesign JSF pages with static and dynamic implicit navigation\nConfigure faces-config XML file to implement navigation rules including conditional and redirection\nDesign bookmarkable views\nData Conversion and Validation model\nImplement data conversion model using JSF standard converters\nCreate, configure, and use custom converters\nIdentify the best suited standard validator and implement it in a given JSF application\nCreate, configure, and use custom validators\nDescribe the usage of bean validation\nEvent Handling\nUse CDI Named bean in a JSF application to handle action and valuechange events\nCreate and implement listeners to handle events\nDevelop JSF application that handle life cycle events\nImplement asynchronous events using AJAX\nData table and Composite Components\nDesign a DataTable with header and footer to populate and manipulate data from various components like Array, List, ResultSet, DataModel and describe the differences between dataTable and ui:repeat\nImplement composite components in JSF application and enhance it using AJAX\nImplement templates in a JSF application and describe the differences between ui:composition and ui:decorate\nCustom Components\nIdentify when and how to use custom components and custom renderers.\nEnhance JSF application using HTML5 components",
      "target_audience": [
        "Programmers who already developed basic JSP/Servlet applications or Spring applications"
      ]
    },
    {
      "title": "Practical Full Stack Web Development Course (100+Challenges)",
      "url": "https://www.udemy.com/course/the-practical-introduction-to-web-development/",
      "bio": "After this action-packed course you will be able to build any website that you can imagine!",
      "objectives": [
        "You will learn how to create any website that you can imagine",
        "You will learn to work with HTML 5 Elements",
        "You will learn to create modern web page layout using CSS",
        "You will learn to create Websites",
        "You will learn to create static web pages",
        "You will learn to style HTML elements using CSS",
        "You will learn to create responsive web page layout using CSS that looks great on every device",
        "You will learn to add, remove and modify HTML Elements using JavaScript",
        "You will learn to change and update styling of an element using JavaScript",
        "You will learn to make elements respond to user input via JavaScript",
        "You will learn to design and create new functionalities using JavaScript",
        "You will learn to fully utilize Bootstrap's grid system",
        "You will learn to create complete web page design using Bootstrap",
        "You will learn to add many exiting features to a web page using Bootstrap",
        "You will learn to implement log in/log out functionality using PHP",
        "You will learn to upload and save files to a server",
        "You will learn to use API to request and process information",
        "You will learn to create dynamic web pages using PHP",
        "You will learn to utilize modern design patterns when creating a web site",
        "You will learn to use correctly MVC architecture for websites",
        "You will learn to use correctly Object Oriented Programming (OOP) with PHP",
        "You will learn to take full advantage of PHP classes and Objects",
        "You will learn to create, update and connect to a Database",
        "You will learn to create and modify tables in a database",
        "You will learn to create and modify columns in a database",
        "You will learn to insert, update, select and delete data from databases",
        "You will learn to design correct Database schema for future websites",
        "You will learn to work on a project with multiple classes/models/data sets",
        "You will learn to take an idea and create a fully working website out of it",
        "You will learn many aspects, techniques, tips and tricks in Web Development"
      ],
      "course_content": {},
      "requirements": [
        "Computer",
        "Internet Connection",
        "Desire to learn"
      ],
      "description": "Hello there!\nThis 16+ hours course is designed to transform you from complete beginner to employable developer!\nHow many times you've started learning Web Development and gave up after few days?\nThis course will push you to achieve your goals!\nFew reasons why this course is for you:\nThe course is taught by Senior Web Developer that walked and succeed on the self-taught path.\nThe course is being updated weekly with new videos and learning materials. New sections being recorded for Angular, Symfony, Nodejs and more! (avg 1 new section added per month)\nThe course is designed to teach you everything essential without the need to seek external material.\nThis curriculum and learning materials is proven to turn complete beginner into employeed developer. These are the exact technologies I (Gancho Radkov) learned to get my first developer job.\nWith this course you get private mentorship and code reviews from Senior Web Developer that will guide you through every step on your learning journey!\n\n\nYou will learn the skills to build modern, responsive and feature-rich websites.\nYou will practice everything you've learned with 100+ Challenges and Projects.\nEvery topic is this course is presented through engaging lectures with tons of practical activities!\nAlmost each lecture ends with a challenge and each main section with a project!\nYou will build many real-world projects what you can show to a potential employeer.\n\n\nWe know that learning Web Development is long and difficult process, this is why Senior Web Developer will be your private mentor and will work with you on every challenge that you encounter.\n\n\nThrought this course you will learn massive amount of tools and technologies such as:\nHTML\nCSS\nJavaScript\nBootstrap\nPHP\nMySQL\nand many more as the course gets updated.\n\n\nBy the end of the course you will able to build any website that you can imagine.\n\n\nStart today and you receive:\nVideo lectures\nMany Challenges and Excercises\nReal-world projects\nProgramming Recourses\nPrivate sessions with Senior Web Developer\n\n\nIf you are not yet sure, check out some of the feedback I've from existing students:\n\"Excellent course!! The instructor is very knowledgeable. I feel ready to develop websites. The concepts were easily understandable.\" - Brava Man\n\"I really learned a alot.\" - ViN\n\"It was interactive\" - Adeyemo Yusuf\n\"So far its been laid out in simple steps\" - Stanley Chukwueke\n\"It is accurate and simple\" - Azaël Iloki\n\"I'ts simple and easy to understand for beginners. Thanks for sharing your knowledge.\" - Mayelis Acosta\n\n\nLast but not least... I've created this course with passion and its sole purpose is to help you achieve your goals!\nWeb Development changed my live, it could change yours too!",
      "target_audience": [
        "Complete beginners",
        "People who wish to learn web development",
        "People who need extra motivation to continue learning web development",
        "People who wish to pursue a career in web development",
        "People with little html/css/js knowledge that wish to improve",
        "People who wish to learn about PHP/MySQL"
      ]
    },
    {
      "title": "Learning GraphQL with Prisma and NodeJs",
      "url": "https://www.udemy.com/course/learning-graphql-with-prisma-and-nodejs/",
      "bio": "Build and Secure GraphQL APIs with NodeJs, Prisma, and MySQL",
      "objectives": [
        "Getting Started with GraphQL",
        "Building GraphQL APIs with Prisma and NodeJs",
        "Learn how to implement Authentication with Nodejs, GraphQL and Prisma"
      ],
      "course_content": {
        "Getting Started": [
          "Create GraphQL Server with GraphQL Yoga",
          "What is GraphQL Yoga",
          "Challenge:Create Root Field and Resolver",
          "Solution:Create Root Field and Resolver"
        ],
        "GraphQL Queries": [
          "Automatically Restart NodeJs Server using Nodemon",
          "Create GraphQL Query to fetch Records from Array",
          "Understand Query Execution in GraphQL",
          "Challenge-Write Query to fetch single record from Array",
          "Solution-Write Query to fetch single record from Array"
        ],
        "Mutations in GraphQL using Prisma": [
          "Add Record in Array using GraphQL Mutations",
          "Remove Link Resolver",
          "Challenge Update and Delete Record From Array",
          "Solution: Update and Delete Record From Array"
        ],
        "Integrating GraphQL Application with Prisma": [
          "Introduction to Prisma",
          "Why Prisma",
          "Create Account on Prisma cloud",
          "Getting Setup Prisma with GraphQL Server",
          "Understanding Prisma Project Structure",
          "Create Environment Variables for Prisma Configurations"
        ],
        "CURD Operations with Prisma and GraphQL": [
          "Challenge: Fetch All Records from Database using Prisma",
          "Solution: Fetch all Records from Database using Prisma",
          "FindOne Record From Data Model using Prisma",
          "Challenge: Save Record in Prisma Data Model",
          "Solution: Save Record in Data Model using Prisma",
          "Challenge: Update and Delete Record from Data Model using Prisma",
          "Solution: Update and Delete Record from Data Model using Prisma",
          "Restructure the Application"
        ],
        "Authentication": [
          "Create User Data Model in Prisma",
          "Create Signup Mutation",
          "Implement Signup Resolver",
          "User Login Mutation",
          "Requiring Authentication for Mutation",
          "Creating Resolver for AuthPayload"
        ],
        "Filtering, Pagination and Sorting": [
          "Filtering in Prisma and GraphQL",
          "Pagination in Prisma and GraphQL",
          "Sorting in Prisma and GraphQL",
          "Build Full-Stack Apps with GraphQL, Prisma, Node and React",
          "Learn React and Redux by building real world application"
        ],
        "Learning Path to become a full-stack developer": [
          "Learning Path to become a full-stack developer"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript is required",
        "Basic knowledge of NodeJs is required",
        "Basic knowledge of GraphQL is required"
      ],
      "description": "GraphQL is a new API standard that provides a more efficient, robust and flexible alternative to REST. It was developed and open-sourced by Facebook and is now maintained by a large community of companies and individuals from all over the world.\nAPIs have become ubiquitous components of software infrastructures. In short, an API defines how aclient can load data from a server.\nAt its core, GraphQL enables declarative data fetching where a client can specify exactly what data it needs from an API. Instead of multiple endpoints that return fixed data structures, a GraphQL server only exposes a single endpoint and responds with precisely the data a client asked for.\nWhat is Prisma?\nPrisma turns your database into a realtime GraphQL API\nPrisma is a performant open-source GraphQL ORM-like layer doing the heavy lifting in your GraphQL server. It turns your database into a GraphQL API which can be consumed by your resolvers via GraphQL bindings.\nPrisma's auto-generated GraphQL API provides powerful abstractions and modular building blocks to develop flexible and scalable GraphQL backends:\nType-safe API including filters, aggregations, pagination and transactions.\nData modeling & migrations with declarative GraphQL SDL.\nRealtime API using GraphQL subscriptions.\nAdvanced API composition using GraphQL bindings and schema stitching.\nWhy Prisma?\nResolve complex queries with top performance\nPrisma comes with an advanced query engine ensuring that even complex queries are resolved as fast as possible.\nGenerated CRUD API as foundation for your server\nPrisma provides a powerful filtering, sorting, pagination (e.g. Relay connections) API. You just need to piggyback on it.\nEasily add realtime features to your API\nGraphQL subscriptions work out of-the-box with Prisma. No more complicated & brittle pub/sub logic for your databases.\nWhat you will learn?\nThis course will cover these following topics\nGetting Started with GraphQL and Prisma\nQueries in GraphQL\nMutations in GraphQL\nCURD Operations with Prisma\nIntegrating GraphQL Application with Prisma\nAuthentication with Prisma, GraphQL, NodeJs\nFiltering, Pagination, and Sorting",
      "target_audience": [
        "NodeJs developers who want learn about GraphQL",
        "GraphQL developers who want to learn Prisma Framework",
        "Developers who want to learn how to build GraphQL APIs"
      ]
    }
  ]
}